var po=Object.defineProperty;var go=(r,t,i)=>t in r?po(r,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):r[t]=i;var h9=(r,t,i)=>go(r,typeof t!="symbol"?t+"":t,i);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const l of document.querySelectorAll('link[rel="modulepreload"]'))s(l);new MutationObserver(l=>{for(const a of l)if(a.type==="childList")for(const c of a.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&s(c)}).observe(document,{childList:!0,subtree:!0});function i(l){const a={};return l.integrity&&(a.integrity=l.integrity),l.referrerPolicy&&(a.referrerPolicy=l.referrerPolicy),l.crossOrigin==="use-credentials"?a.credentials="include":l.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function s(l){if(l.ep)return;l.ep=!0;const a=i(l);fetch(l.href,a)}})();function mo(r){return r&&r.__esModule&&Object.prototype.hasOwnProperty.call(r,"default")?r.default:r}var w4={exports:{}},x6={},k4={exports:{}},c9={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var on;function yo(){if(on)return c9;on=1;var r=Symbol.for("react.element"),t=Symbol.for("react.portal"),i=Symbol.for("react.fragment"),s=Symbol.for("react.strict_mode"),l=Symbol.for("react.profiler"),a=Symbol.for("react.provider"),c=Symbol.for("react.context"),f=Symbol.for("react.forward_ref"),h=Symbol.for("react.suspense"),g=Symbol.for("react.memo"),y=Symbol.for("react.lazy"),v=Symbol.iterator;function x(b){return b===null||typeof b!="object"?null:(b=v&&b[v]||b["@@iterator"],typeof b=="function"?b:null)}var k={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},T=Object.assign,M={};function C(b,D,n9){this.props=b,this.context=D,this.refs=M,this.updater=n9||k}C.prototype.isReactComponent={},C.prototype.setState=function(b,D){if(typeof b!="object"&&typeof b!="function"&&b!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,b,D,"setState")},C.prototype.forceUpdate=function(b){this.updater.enqueueForceUpdate(this,b,"forceUpdate")};function L(){}L.prototype=C.prototype;function F(b,D,n9){this.props=b,this.context=D,this.refs=M,this.updater=n9||k}var A=F.prototype=new L;A.constructor=F,T(A,C.prototype),A.isPureReactComponent=!0;var H=Array.isArray,W=Object.prototype.hasOwnProperty,Y={current:null},Q={key:!0,ref:!0,__self:!0,__source:!0};function G(b,D,n9){var i9,u9={},l9=null,S9=null;if(D!=null)for(i9 in D.ref!==void 0&&(S9=D.ref),D.key!==void 0&&(l9=""+D.key),D)W.call(D,i9)&&!Q.hasOwnProperty(i9)&&(u9[i9]=D[i9]);var v9=arguments.length-2;if(v9===1)u9.children=n9;else if(1<v9){for(var T9=Array(v9),d0=0;d0<v9;d0++)T9[d0]=arguments[d0+2];u9.children=T9}if(b&&b.defaultProps)for(i9 in v9=b.defaultProps,v9)u9[i9]===void 0&&(u9[i9]=v9[i9]);return{$$typeof:r,type:b,key:l9,ref:S9,props:u9,_owner:Y.current}}function r9(b,D){return{$$typeof:r,type:b.type,key:D,ref:b.ref,props:b.props,_owner:b._owner}}function a9(b){return typeof b=="object"&&b!==null&&b.$$typeof===r}function s9(b){var D={"=":"=0",":":"=2"};return"$"+b.replace(/[=:]/g,function(n9){return D[n9]})}var o9=/\/+/g;function k9(b,D){return typeof b=="object"&&b!==null&&b.key!=null?s9(""+b.key):D.toString(36)}function R9(b,D,n9,i9,u9){var l9=typeof b;(l9==="undefined"||l9==="boolean")&&(b=null);var S9=!1;if(b===null)S9=!0;else switch(l9){case"string":case"number":S9=!0;break;case"object":switch(b.$$typeof){case r:case t:S9=!0}}if(S9)return S9=b,u9=u9(S9),b=i9===""?"."+k9(S9,0):i9,H(u9)?(n9="",b!=null&&(n9=b.replace(o9,"$&/")+"/"),R9(u9,D,n9,"",function(d0){return d0})):u9!=null&&(a9(u9)&&(u9=r9(u9,n9+(!u9.key||S9&&S9.key===u9.key?"":(""+u9.key).replace(o9,"$&/")+"/")+b)),D.push(u9)),1;if(S9=0,i9=i9===""?".":i9+":",H(b))for(var v9=0;v9<b.length;v9++){l9=b[v9];var T9=i9+k9(l9,v9);S9+=R9(l9,D,n9,T9,u9)}else if(T9=x(b),typeof T9=="function")for(b=T9.call(b),v9=0;!(l9=b.next()).done;)l9=l9.value,T9=i9+k9(l9,v9++),S9+=R9(l9,D,n9,T9,u9);else if(l9==="object")throw D=String(b),Error("Objects are not valid as a React child (found: "+(D==="[object Object]"?"object with keys {"+Object.keys(b).join(", ")+"}":D)+"). If you meant to render a collection of children, use an array instead.");return S9}function p9(b,D,n9){if(b==null)return b;var i9=[],u9=0;return R9(b,i9,"","",function(l9){return D.call(n9,l9,u9++)}),i9}function g9(b){if(b._status===-1){var D=b._result;D=D(),D.then(function(n9){(b._status===0||b._status===-1)&&(b._status=1,b._result=n9)},function(n9){(b._status===0||b._status===-1)&&(b._status=2,b._result=n9)}),b._status===-1&&(b._status=0,b._result=D)}if(b._status===1)return b._result.default;throw b._result}var f9={current:null},j={transition:null},Z={ReactCurrentDispatcher:f9,ReactCurrentBatchConfig:j,ReactCurrentOwner:Y};function B(){throw Error("act(...) is not supported in production builds of React.")}return c9.Children={map:p9,forEach:function(b,D,n9){p9(b,function(){D.apply(this,arguments)},n9)},count:function(b){var D=0;return p9(b,function(){D++}),D},toArray:function(b){return p9(b,function(D){return D})||[]},only:function(b){if(!a9(b))throw Error("React.Children.only expected to receive a single React element child.");return b}},c9.Component=C,c9.Fragment=i,c9.Profiler=l,c9.PureComponent=F,c9.StrictMode=s,c9.Suspense=h,c9.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Z,c9.act=B,c9.cloneElement=function(b,D,n9){if(b==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+b+".");var i9=T({},b.props),u9=b.key,l9=b.ref,S9=b._owner;if(D!=null){if(D.ref!==void 0&&(l9=D.ref,S9=Y.current),D.key!==void 0&&(u9=""+D.key),b.type&&b.type.defaultProps)var v9=b.type.defaultProps;for(T9 in D)W.call(D,T9)&&!Q.hasOwnProperty(T9)&&(i9[T9]=D[T9]===void 0&&v9!==void 0?v9[T9]:D[T9])}var T9=arguments.length-2;if(T9===1)i9.children=n9;else if(1<T9){v9=Array(T9);for(var d0=0;d0<T9;d0++)v9[d0]=arguments[d0+2];i9.children=v9}return{$$typeof:r,type:b.type,key:u9,ref:l9,props:i9,_owner:S9}},c9.createContext=function(b){return b={$$typeof:c,_currentValue:b,_currentValue2:b,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},b.Provider={$$typeof:a,_context:b},b.Consumer=b},c9.createElement=G,c9.createFactory=function(b){var D=G.bind(null,b);return D.type=b,D},c9.createRef=function(){return{current:null}},c9.forwardRef=function(b){return{$$typeof:f,render:b}},c9.isValidElement=a9,c9.lazy=function(b){return{$$typeof:y,_payload:{_status:-1,_result:b},_init:g9}},c9.memo=function(b,D){return{$$typeof:g,type:b,compare:D===void 0?null:D}},c9.startTransition=function(b){var D=j.transition;j.transition={};try{b()}finally{j.transition=D}},c9.unstable_act=B,c9.useCallback=function(b,D){return f9.current.useCallback(b,D)},c9.useContext=function(b){return f9.current.useContext(b)},c9.useDebugValue=function(){},c9.useDeferredValue=function(b){return f9.current.useDeferredValue(b)},c9.useEffect=function(b,D){return f9.current.useEffect(b,D)},c9.useId=function(){return f9.current.useId()},c9.useImperativeHandle=function(b,D,n9){return f9.current.useImperativeHandle(b,D,n9)},c9.useInsertionEffect=function(b,D){return f9.current.useInsertionEffect(b,D)},c9.useLayoutEffect=function(b,D){return f9.current.useLayoutEffect(b,D)},c9.useMemo=function(b,D){return f9.current.useMemo(b,D)},c9.useReducer=function(b,D,n9){return f9.current.useReducer(b,D,n9)},c9.useRef=function(b){return f9.current.useRef(b)},c9.useState=function(b){return f9.current.useState(b)},c9.useSyncExternalStore=function(b,D,n9){return f9.current.useSyncExternalStore(b,D,n9)},c9.useTransition=function(){return f9.current.useTransition()},c9.version="18.3.1",c9}var ln;function X4(){return ln||(ln=1,k4.exports=yo()),k4.exports}/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var an;function vo(){if(an)return x6;an=1;var r=X4(),t=Symbol.for("react.element"),i=Symbol.for("react.fragment"),s=Object.prototype.hasOwnProperty,l=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,a={key:!0,ref:!0,__self:!0,__source:!0};function c(f,h,g){var y,v={},x=null,k=null;g!==void 0&&(x=""+g),h.key!==void 0&&(x=""+h.key),h.ref!==void 0&&(k=h.ref);for(y in h)s.call(h,y)&&!a.hasOwnProperty(y)&&(v[y]=h[y]);if(f&&f.defaultProps)for(y in h=f.defaultProps,h)v[y]===void 0&&(v[y]=h[y]);return{$$typeof:t,type:f,key:x,ref:k,props:v,_owner:l.current}}return x6.Fragment=i,x6.jsx=c,x6.jsxs=c,x6}var un;function xo(){return un||(un=1,w4.exports=vo()),w4.exports}var q=xo(),H9=X4();const Ti=mo(H9);var G2={},S4={exports:{}},u0={},b4={exports:{}},M4={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var cn;function _o(){return cn||(cn=1,function(r){function t(j,Z){var B=j.length;j.push(Z);e:for(;0<B;){var b=B-1>>>1,D=j[b];if(0<l(D,Z))j[b]=Z,j[B]=D,B=b;else break e}}function i(j){return j.length===0?null:j[0]}function s(j){if(j.length===0)return null;var Z=j[0],B=j.pop();if(B!==Z){j[0]=B;e:for(var b=0,D=j.length,n9=D>>>1;b<n9;){var i9=2*(b+1)-1,u9=j[i9],l9=i9+1,S9=j[l9];if(0>l(u9,B))l9<D&&0>l(S9,u9)?(j[b]=S9,j[l9]=B,b=l9):(j[b]=u9,j[i9]=B,b=i9);else if(l9<D&&0>l(S9,B))j[b]=S9,j[l9]=B,b=l9;else break e}}return Z}function l(j,Z){var B=j.sortIndex-Z.sortIndex;return B!==0?B:j.id-Z.id}if(typeof performance=="object"&&typeof performance.now=="function"){var a=performance;r.unstable_now=function(){return a.now()}}else{var c=Date,f=c.now();r.unstable_now=function(){return c.now()-f}}var h=[],g=[],y=1,v=null,x=3,k=!1,T=!1,M=!1,C=typeof setTimeout=="function"?setTimeout:null,L=typeof clearTimeout=="function"?clearTimeout:null,F=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function A(j){for(var Z=i(g);Z!==null;){if(Z.callback===null)s(g);else if(Z.startTime<=j)s(g),Z.sortIndex=Z.expirationTime,t(h,Z);else break;Z=i(g)}}function H(j){if(M=!1,A(j),!T)if(i(h)!==null)T=!0,g9(W);else{var Z=i(g);Z!==null&&f9(H,Z.startTime-j)}}function W(j,Z){T=!1,M&&(M=!1,L(G),G=-1),k=!0;var B=x;try{for(A(Z),v=i(h);v!==null&&(!(v.expirationTime>Z)||j&&!s9());){var b=v.callback;if(typeof b=="function"){v.callback=null,x=v.priorityLevel;var D=b(v.expirationTime<=Z);Z=r.unstable_now(),typeof D=="function"?v.callback=D:v===i(h)&&s(h),A(Z)}else s(h);v=i(h)}if(v!==null)var n9=!0;else{var i9=i(g);i9!==null&&f9(H,i9.startTime-Z),n9=!1}return n9}finally{v=null,x=B,k=!1}}var Y=!1,Q=null,G=-1,r9=5,a9=-1;function s9(){return!(r.unstable_now()-a9<r9)}function o9(){if(Q!==null){var j=r.unstable_now();a9=j;var Z=!0;try{Z=Q(!0,j)}finally{Z?k9():(Y=!1,Q=null)}}else Y=!1}var k9;if(typeof F=="function")k9=function(){F(o9)};else if(typeof MessageChannel<"u"){var R9=new MessageChannel,p9=R9.port2;R9.port1.onmessage=o9,k9=function(){p9.postMessage(null)}}else k9=function(){C(o9,0)};function g9(j){Q=j,Y||(Y=!0,k9())}function f9(j,Z){G=C(function(){j(r.unstable_now())},Z)}r.unstable_IdlePriority=5,r.unstable_ImmediatePriority=1,r.unstable_LowPriority=4,r.unstable_NormalPriority=3,r.unstable_Profiling=null,r.unstable_UserBlockingPriority=2,r.unstable_cancelCallback=function(j){j.callback=null},r.unstable_continueExecution=function(){T||k||(T=!0,g9(W))},r.unstable_forceFrameRate=function(j){0>j||125<j?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):r9=0<j?Math.floor(1e3/j):5},r.unstable_getCurrentPriorityLevel=function(){return x},r.unstable_getFirstCallbackNode=function(){return i(h)},r.unstable_next=function(j){switch(x){case 1:case 2:case 3:var Z=3;break;default:Z=x}var B=x;x=Z;try{return j()}finally{x=B}},r.unstable_pauseExecution=function(){},r.unstable_requestPaint=function(){},r.unstable_runWithPriority=function(j,Z){switch(j){case 1:case 2:case 3:case 4:case 5:break;default:j=3}var B=x;x=j;try{return Z()}finally{x=B}},r.unstable_scheduleCallback=function(j,Z,B){var b=r.unstable_now();switch(typeof B=="object"&&B!==null?(B=B.delay,B=typeof B=="number"&&0<B?b+B:b):B=b,j){case 1:var D=-1;break;case 2:D=250;break;case 5:D=1073741823;break;case 4:D=1e4;break;default:D=5e3}return D=B+D,j={id:y++,callback:Z,priorityLevel:j,startTime:B,expirationTime:D,sortIndex:-1},B>b?(j.sortIndex=B,t(g,j),i(h)===null&&j===i(g)&&(M?(L(G),G=-1):M=!0,f9(H,B-b))):(j.sortIndex=D,t(h,j),T||k||(T=!0,g9(W))),j},r.unstable_shouldYield=s9,r.unstable_wrapCallback=function(j){var Z=x;return function(){var B=x;x=Z;try{return j.apply(this,arguments)}finally{x=B}}}}(M4)),M4}var fn;function wo(){return fn||(fn=1,b4.exports=_o()),b4.exports}/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var dn;function ko(){if(dn)return u0;dn=1;var r=X4(),t=wo();function i(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,o=1;o<arguments.length;o++)n+="&args[]="+encodeURIComponent(arguments[o]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var s=new Set,l={};function a(e,n){c(e,n),c(e+"Capture",n)}function c(e,n){for(l[e]=n,e=0;e<n.length;e++)s.add(n[e])}var f=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),h=Object.prototype.hasOwnProperty,g=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,y={},v={};function x(e){return h.call(v,e)?!0:h.call(y,e)?!1:g.test(e)?v[e]=!0:(y[e]=!0,!1)}function k(e,n,o,u){if(o!==null&&o.type===0)return!1;switch(typeof n){case"function":case"symbol":return!0;case"boolean":return u?!1:o!==null?!o.acceptsBooleans:(e=e.toLowerCase().slice(0,5),e!=="data-"&&e!=="aria-");default:return!1}}function T(e,n,o,u){if(n===null||typeof n>"u"||k(e,n,o,u))return!0;if(u)return!1;if(o!==null)switch(o.type){case 3:return!n;case 4:return n===!1;case 5:return isNaN(n);case 6:return isNaN(n)||1>n}return!1}function M(e,n,o,u,d,p,m){this.acceptsBooleans=n===2||n===3||n===4,this.attributeName=u,this.attributeNamespace=d,this.mustUseProperty=o,this.propertyName=e,this.type=n,this.sanitizeURL=p,this.removeEmptyString=m}var C={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){C[e]=new M(e,0,!1,e,null,!1,!1)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var n=e[0];C[n]=new M(n,1,!1,e[1],null,!1,!1)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){C[e]=new M(e,2,!1,e.toLowerCase(),null,!1,!1)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){C[e]=new M(e,2,!1,e,null,!1,!1)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){C[e]=new M(e,3,!1,e.toLowerCase(),null,!1,!1)}),["checked","multiple","muted","selected"].forEach(function(e){C[e]=new M(e,3,!0,e,null,!1,!1)}),["capture","download"].forEach(function(e){C[e]=new M(e,4,!1,e,null,!1,!1)}),["cols","rows","size","span"].forEach(function(e){C[e]=new M(e,6,!1,e,null,!1,!1)}),["rowSpan","start"].forEach(function(e){C[e]=new M(e,5,!1,e.toLowerCase(),null,!1,!1)});var L=/[\-:]([a-z])/g;function F(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var n=e.replace(L,F);C[n]=new M(n,1,!1,e,null,!1,!1)}),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var n=e.replace(L,F);C[n]=new M(n,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)}),["xml:base","xml:lang","xml:space"].forEach(function(e){var n=e.replace(L,F);C[n]=new M(n,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)}),["tabIndex","crossOrigin"].forEach(function(e){C[e]=new M(e,1,!1,e.toLowerCase(),null,!1,!1)}),C.xlinkHref=new M("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach(function(e){C[e]=new M(e,1,!1,e.toLowerCase(),null,!0,!0)});function A(e,n,o,u){var d=C.hasOwnProperty(n)?C[n]:null;(d!==null?d.type!==0:u||!(2<n.length)||n[0]!=="o"&&n[0]!=="O"||n[1]!=="n"&&n[1]!=="N")&&(T(n,o,d,u)&&(o=null),u||d===null?x(n)&&(o===null?e.removeAttribute(n):e.setAttribute(n,""+o)):d.mustUseProperty?e[d.propertyName]=o===null?d.type===3?!1:"":o:(n=d.attributeName,u=d.attributeNamespace,o===null?e.removeAttribute(n):(d=d.type,o=d===3||d===4&&o===!0?"":""+o,u?e.setAttributeNS(u,n,o):e.setAttribute(n,o))))}var H=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,W=Symbol.for("react.element"),Y=Symbol.for("react.portal"),Q=Symbol.for("react.fragment"),G=Symbol.for("react.strict_mode"),r9=Symbol.for("react.profiler"),a9=Symbol.for("react.provider"),s9=Symbol.for("react.context"),o9=Symbol.for("react.forward_ref"),k9=Symbol.for("react.suspense"),R9=Symbol.for("react.suspense_list"),p9=Symbol.for("react.memo"),g9=Symbol.for("react.lazy"),f9=Symbol.for("react.offscreen"),j=Symbol.iterator;function Z(e){return e===null||typeof e!="object"?null:(e=j&&e[j]||e["@@iterator"],typeof e=="function"?e:null)}var B=Object.assign,b;function D(e){if(b===void 0)try{throw Error()}catch(o){var n=o.stack.trim().match(/\n( *(at )?)/);b=n&&n[1]||""}return`
`+b+e}var n9=!1;function i9(e,n){if(!e||n9)return"";n9=!0;var o=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(n)if(n=function(){throw Error()},Object.defineProperty(n.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(n,[])}catch(O){var u=O}Reflect.construct(e,[],n)}else{try{n.call()}catch(O){u=O}e.call(n.prototype)}else{try{throw Error()}catch(O){u=O}e()}}catch(O){if(O&&u&&typeof O.stack=="string"){for(var d=O.stack.split(`
`),p=u.stack.split(`
`),m=d.length-1,_=p.length-1;1<=m&&0<=_&&d[m]!==p[_];)_--;for(;1<=m&&0<=_;m--,_--)if(d[m]!==p[_]){if(m!==1||_!==1)do if(m--,_--,0>_||d[m]!==p[_]){var w=`
`+d[m].replace(" at new "," at ");return e.displayName&&w.includes("<anonymous>")&&(w=w.replace("<anonymous>",e.displayName)),w}while(1<=m&&0<=_);break}}}finally{n9=!1,Error.prepareStackTrace=o}return(e=e?e.displayName||e.name:"")?D(e):""}function u9(e){switch(e.tag){case 5:return D(e.type);case 16:return D("Lazy");case 13:return D("Suspense");case 19:return D("SuspenseList");case 0:case 2:case 15:return e=i9(e.type,!1),e;case 11:return e=i9(e.type.render,!1),e;case 1:return e=i9(e.type,!0),e;default:return""}}function l9(e){if(e==null)return null;if(typeof e=="function")return e.displayName||e.name||null;if(typeof e=="string")return e;switch(e){case Q:return"Fragment";case Y:return"Portal";case r9:return"Profiler";case G:return"StrictMode";case k9:return"Suspense";case R9:return"SuspenseList"}if(typeof e=="object")switch(e.$$typeof){case s9:return(e.displayName||"Context")+".Consumer";case a9:return(e._context.displayName||"Context")+".Provider";case o9:var n=e.render;return e=e.displayName,e||(e=n.displayName||n.name||"",e=e!==""?"ForwardRef("+e+")":"ForwardRef"),e;case p9:return n=e.displayName||null,n!==null?n:l9(e.type)||"Memo";case g9:n=e._payload,e=e._init;try{return l9(e(n))}catch{}}return null}function S9(e){var n=e.type;switch(e.tag){case 24:return"Cache";case 9:return(n.displayName||"Context")+".Consumer";case 10:return(n._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=n.render,e=e.displayName||e.name||"",n.displayName||(e!==""?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return n;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return l9(n);case 8:return n===G?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof n=="function")return n.displayName||n.name||null;if(typeof n=="string")return n}return null}function v9(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":return e;case"object":return e;default:return""}}function T9(e){var n=e.type;return(e=e.nodeName)&&e.toLowerCase()==="input"&&(n==="checkbox"||n==="radio")}function d0(e){var n=T9(e)?"checked":"value",o=Object.getOwnPropertyDescriptor(e.constructor.prototype,n),u=""+e[n];if(!e.hasOwnProperty(n)&&typeof o<"u"&&typeof o.get=="function"&&typeof o.set=="function"){var d=o.get,p=o.set;return Object.defineProperty(e,n,{configurable:!0,get:function(){return d.call(this)},set:function(m){u=""+m,p.call(this,m)}}),Object.defineProperty(e,n,{enumerable:o.enumerable}),{getValue:function(){return u},setValue:function(m){u=""+m},stopTracking:function(){e._valueTracker=null,delete e[n]}}}}function B6(e){e._valueTracker||(e._valueTracker=d0(e))}function f8(e){if(!e)return!1;var n=e._valueTracker;if(!n)return!0;var o=n.getValue(),u="";return e&&(u=T9(e)?e.checked?"true":"false":e.value),e=u,e!==o?(n.setValue(e),!0):!1}function H6(e){if(e=e||(typeof document<"u"?document:void 0),typeof e>"u")return null;try{return e.activeElement||e.body}catch{return e.body}}function P3(e,n){var o=n.checked;return B({},n,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:o??e._wrapperState.initialChecked})}function d8(e,n){var o=n.defaultValue==null?"":n.defaultValue,u=n.checked!=null?n.checked:n.defaultChecked;o=v9(n.value!=null?n.value:o),e._wrapperState={initialChecked:u,initialValue:o,controlled:n.type==="checkbox"||n.type==="radio"?n.checked!=null:n.value!=null}}function h8(e,n){n=n.checked,n!=null&&A(e,"checked",n,!1)}function T3(e,n){h8(e,n);var o=v9(n.value),u=n.type;if(o!=null)u==="number"?(o===0&&e.value===""||e.value!=o)&&(e.value=""+o):e.value!==""+o&&(e.value=""+o);else if(u==="submit"||u==="reset"){e.removeAttribute("value");return}n.hasOwnProperty("value")?O3(e,n.type,o):n.hasOwnProperty("defaultValue")&&O3(e,n.type,v9(n.defaultValue)),n.checked==null&&n.defaultChecked!=null&&(e.defaultChecked=!!n.defaultChecked)}function p8(e,n,o){if(n.hasOwnProperty("value")||n.hasOwnProperty("defaultValue")){var u=n.type;if(!(u!=="submit"&&u!=="reset"||n.value!==void 0&&n.value!==null))return;n=""+e._wrapperState.initialValue,o||n===e.value||(e.value=n),e.defaultValue=n}o=e.name,o!==""&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,o!==""&&(e.name=o)}function O3(e,n,o){(n!=="number"||H6(e.ownerDocument)!==e)&&(o==null?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+o&&(e.defaultValue=""+o))}var z5=Array.isArray;function e5(e,n,o,u){if(e=e.options,n){n={};for(var d=0;d<o.length;d++)n["$"+o[d]]=!0;for(o=0;o<e.length;o++)d=n.hasOwnProperty("$"+e[o].value),e[o].selected!==d&&(e[o].selected=d),d&&u&&(e[o].defaultSelected=!0)}else{for(o=""+v9(o),n=null,d=0;d<e.length;d++){if(e[d].value===o){e[d].selected=!0,u&&(e[d].defaultSelected=!0);return}n!==null||e[d].disabled||(n=e[d])}n!==null&&(n.selected=!0)}}function L3(e,n){if(n.dangerouslySetInnerHTML!=null)throw Error(i(91));return B({},n,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function g8(e,n){var o=n.value;if(o==null){if(o=n.children,n=n.defaultValue,o!=null){if(n!=null)throw Error(i(92));if(z5(o)){if(1<o.length)throw Error(i(93));o=o[0]}n=o}n==null&&(n=""),o=n}e._wrapperState={initialValue:v9(o)}}function m8(e,n){var o=v9(n.value),u=v9(n.defaultValue);o!=null&&(o=""+o,o!==e.value&&(e.value=o),n.defaultValue==null&&e.defaultValue!==o&&(e.defaultValue=o)),u!=null&&(e.defaultValue=""+u)}function y8(e){var n=e.textContent;n===e._wrapperState.initialValue&&n!==""&&n!==null&&(e.value=n)}function v8(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function D3(e,n){return e==null||e==="http://www.w3.org/1999/xhtml"?v8(n):e==="http://www.w3.org/2000/svg"&&n==="foreignObject"?"http://www.w3.org/1999/xhtml":e}var V6,x8=function(e){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(n,o,u,d){MSApp.execUnsafeLocalFunction(function(){return e(n,o,u,d)})}:e}(function(e,n){if(e.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in e)e.innerHTML=n;else{for(V6=V6||document.createElement("div"),V6.innerHTML="<svg>"+n.valueOf().toString()+"</svg>",n=V6.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;n.firstChild;)e.appendChild(n.firstChild)}});function I5(e,n){if(n){var o=e.firstChild;if(o&&o===e.lastChild&&o.nodeType===3){o.nodeValue=n;return}}e.textContent=n}var F5={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},vr=["Webkit","ms","Moz","O"];Object.keys(F5).forEach(function(e){vr.forEach(function(n){n=n+e.charAt(0).toUpperCase()+e.substring(1),F5[n]=F5[e]})});function _8(e,n,o){return n==null||typeof n=="boolean"||n===""?"":o||typeof n!="number"||n===0||F5.hasOwnProperty(e)&&F5[e]?(""+n).trim():n+"px"}function w8(e,n){e=e.style;for(var o in n)if(n.hasOwnProperty(o)){var u=o.indexOf("--")===0,d=_8(o,n[o],u);o==="float"&&(o="cssFloat"),u?e.setProperty(o,d):e[o]=d}}var xr=B({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function R3(e,n){if(n){if(xr[e]&&(n.children!=null||n.dangerouslySetInnerHTML!=null))throw Error(i(137,e));if(n.dangerouslySetInnerHTML!=null){if(n.children!=null)throw Error(i(60));if(typeof n.dangerouslySetInnerHTML!="object"||!("__html"in n.dangerouslySetInnerHTML))throw Error(i(61))}if(n.style!=null&&typeof n.style!="object")throw Error(i(62))}}function z3(e,n){if(e.indexOf("-")===-1)return typeof n.is=="string";switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var I3=null;function F3(e){return e=e.target||e.srcElement||window,e.correspondingUseElement&&(e=e.correspondingUseElement),e.nodeType===3?e.parentNode:e}var N3=null,t5=null,n5=null;function k8(e){if(e=r6(e)){if(typeof N3!="function")throw Error(i(280));var n=e.stateNode;n&&(n=f2(n),N3(e.stateNode,e.type,n))}}function S8(e){t5?n5?n5.push(e):n5=[e]:t5=e}function b8(){if(t5){var e=t5,n=n5;if(n5=t5=null,k8(e),n)for(e=0;e<n.length;e++)k8(n[e])}}function M8(e,n){return e(n)}function C8(){}var A3=!1;function E8(e,n,o){if(A3)return e(n,o);A3=!0;try{return M8(e,n,o)}finally{A3=!1,(t5!==null||n5!==null)&&(C8(),b8())}}function N5(e,n){var o=e.stateNode;if(o===null)return null;var u=f2(o);if(u===null)return null;o=u[n];e:switch(n){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(u=!u.disabled)||(e=e.type,u=!(e==="button"||e==="input"||e==="select"||e==="textarea")),e=!u;break e;default:e=!1}if(e)return null;if(o&&typeof o!="function")throw Error(i(231,n,typeof o));return o}var j3=!1;if(f)try{var A5={};Object.defineProperty(A5,"passive",{get:function(){j3=!0}}),window.addEventListener("test",A5,A5),window.removeEventListener("test",A5,A5)}catch{j3=!1}function _r(e,n,o,u,d,p,m,_,w){var O=Array.prototype.slice.call(arguments,3);try{n.apply(o,O)}catch(z){this.onError(z)}}var j5=!1,W6=null,U6=!1,B3=null,wr={onError:function(e){j5=!0,W6=e}};function kr(e,n,o,u,d,p,m,_,w){j5=!1,W6=null,_r.apply(wr,arguments)}function Sr(e,n,o,u,d,p,m,_,w){if(kr.apply(this,arguments),j5){if(j5){var O=W6;j5=!1,W6=null}else throw Error(i(198));U6||(U6=!0,B3=O)}}function D1(e){var n=e,o=e;if(e.alternate)for(;n.return;)n=n.return;else{e=n;do n=e,n.flags&4098&&(o=n.return),e=n.return;while(e)}return n.tag===3?o:null}function P8(e){if(e.tag===13){var n=e.memoizedState;if(n===null&&(e=e.alternate,e!==null&&(n=e.memoizedState)),n!==null)return n.dehydrated}return null}function T8(e){if(D1(e)!==e)throw Error(i(188))}function br(e){var n=e.alternate;if(!n){if(n=D1(e),n===null)throw Error(i(188));return n!==e?null:e}for(var o=e,u=n;;){var d=o.return;if(d===null)break;var p=d.alternate;if(p===null){if(u=d.return,u!==null){o=u;continue}break}if(d.child===p.child){for(p=d.child;p;){if(p===o)return T8(d),e;if(p===u)return T8(d),n;p=p.sibling}throw Error(i(188))}if(o.return!==u.return)o=d,u=p;else{for(var m=!1,_=d.child;_;){if(_===o){m=!0,o=d,u=p;break}if(_===u){m=!0,u=d,o=p;break}_=_.sibling}if(!m){for(_=p.child;_;){if(_===o){m=!0,o=p,u=d;break}if(_===u){m=!0,u=p,o=d;break}_=_.sibling}if(!m)throw Error(i(189))}}if(o.alternate!==u)throw Error(i(190))}if(o.tag!==3)throw Error(i(188));return o.stateNode.current===o?e:n}function O8(e){return e=br(e),e!==null?L8(e):null}function L8(e){if(e.tag===5||e.tag===6)return e;for(e=e.child;e!==null;){var n=L8(e);if(n!==null)return n;e=e.sibling}return null}var D8=t.unstable_scheduleCallback,R8=t.unstable_cancelCallback,Mr=t.unstable_shouldYield,Cr=t.unstable_requestPaint,I9=t.unstable_now,Er=t.unstable_getCurrentPriorityLevel,H3=t.unstable_ImmediatePriority,z8=t.unstable_UserBlockingPriority,$6=t.unstable_NormalPriority,Pr=t.unstable_LowPriority,I8=t.unstable_IdlePriority,Y6=null,N0=null;function Tr(e){if(N0&&typeof N0.onCommitFiberRoot=="function")try{N0.onCommitFiberRoot(Y6,e,void 0,(e.current.flags&128)===128)}catch{}}var E0=Math.clz32?Math.clz32:Dr,Or=Math.log,Lr=Math.LN2;function Dr(e){return e>>>=0,e===0?32:31-(Or(e)/Lr|0)|0}var K6=64,Q6=4194304;function B5(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return e&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function X6(e,n){var o=e.pendingLanes;if(o===0)return 0;var u=0,d=e.suspendedLanes,p=e.pingedLanes,m=o&268435455;if(m!==0){var _=m&~d;_!==0?u=B5(_):(p&=m,p!==0&&(u=B5(p)))}else m=o&~d,m!==0?u=B5(m):p!==0&&(u=B5(p));if(u===0)return 0;if(n!==0&&n!==u&&!(n&d)&&(d=u&-u,p=n&-n,d>=p||d===16&&(p&4194240)!==0))return n;if(u&4&&(u|=o&16),n=e.entangledLanes,n!==0)for(e=e.entanglements,n&=u;0<n;)o=31-E0(n),d=1<<o,u|=e[o],n&=~d;return u}function Rr(e,n){switch(e){case 1:case 2:case 4:return n+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return n+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function zr(e,n){for(var o=e.suspendedLanes,u=e.pingedLanes,d=e.expirationTimes,p=e.pendingLanes;0<p;){var m=31-E0(p),_=1<<m,w=d[m];w===-1?(!(_&o)||_&u)&&(d[m]=Rr(_,n)):w<=n&&(e.expiredLanes|=_),p&=~_}}function V3(e){return e=e.pendingLanes&-1073741825,e!==0?e:e&1073741824?1073741824:0}function F8(){var e=K6;return K6<<=1,!(K6&4194240)&&(K6=64),e}function W3(e){for(var n=[],o=0;31>o;o++)n.push(e);return n}function H5(e,n,o){e.pendingLanes|=n,n!==536870912&&(e.suspendedLanes=0,e.pingedLanes=0),e=e.eventTimes,n=31-E0(n),e[n]=o}function Ir(e,n){var o=e.pendingLanes&~n;e.pendingLanes=n,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=n,e.mutableReadLanes&=n,e.entangledLanes&=n,n=e.entanglements;var u=e.eventTimes;for(e=e.expirationTimes;0<o;){var d=31-E0(o),p=1<<d;n[d]=0,u[d]=-1,e[d]=-1,o&=~p}}function U3(e,n){var o=e.entangledLanes|=n;for(e=e.entanglements;o;){var u=31-E0(o),d=1<<u;d&n|e[u]&n&&(e[u]|=n),o&=~d}}var x9=0;function N8(e){return e&=-e,1<e?4<e?e&268435455?16:536870912:4:1}var A8,$3,j8,B8,H8,Y3=!1,G6=[],s1=null,o1=null,l1=null,V5=new Map,W5=new Map,a1=[],Fr="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function V8(e,n){switch(e){case"focusin":case"focusout":s1=null;break;case"dragenter":case"dragleave":o1=null;break;case"mouseover":case"mouseout":l1=null;break;case"pointerover":case"pointerout":V5.delete(n.pointerId);break;case"gotpointercapture":case"lostpointercapture":W5.delete(n.pointerId)}}function U5(e,n,o,u,d,p){return e===null||e.nativeEvent!==p?(e={blockedOn:n,domEventName:o,eventSystemFlags:u,nativeEvent:p,targetContainers:[d]},n!==null&&(n=r6(n),n!==null&&$3(n)),e):(e.eventSystemFlags|=u,n=e.targetContainers,d!==null&&n.indexOf(d)===-1&&n.push(d),e)}function Nr(e,n,o,u,d){switch(n){case"focusin":return s1=U5(s1,e,n,o,u,d),!0;case"dragenter":return o1=U5(o1,e,n,o,u,d),!0;case"mouseover":return l1=U5(l1,e,n,o,u,d),!0;case"pointerover":var p=d.pointerId;return V5.set(p,U5(V5.get(p)||null,e,n,o,u,d)),!0;case"gotpointercapture":return p=d.pointerId,W5.set(p,U5(W5.get(p)||null,e,n,o,u,d)),!0}return!1}function W8(e){var n=R1(e.target);if(n!==null){var o=D1(n);if(o!==null){if(n=o.tag,n===13){if(n=P8(o),n!==null){e.blockedOn=n,H8(e.priority,function(){j8(o)});return}}else if(n===3&&o.stateNode.current.memoizedState.isDehydrated){e.blockedOn=o.tag===3?o.stateNode.containerInfo:null;return}}}e.blockedOn=null}function q6(e){if(e.blockedOn!==null)return!1;for(var n=e.targetContainers;0<n.length;){var o=Q3(e.domEventName,e.eventSystemFlags,n[0],e.nativeEvent);if(o===null){o=e.nativeEvent;var u=new o.constructor(o.type,o);I3=u,o.target.dispatchEvent(u),I3=null}else return n=r6(o),n!==null&&$3(n),e.blockedOn=o,!1;n.shift()}return!0}function U8(e,n,o){q6(e)&&o.delete(n)}function Ar(){Y3=!1,s1!==null&&q6(s1)&&(s1=null),o1!==null&&q6(o1)&&(o1=null),l1!==null&&q6(l1)&&(l1=null),V5.forEach(U8),W5.forEach(U8)}function $5(e,n){e.blockedOn===n&&(e.blockedOn=null,Y3||(Y3=!0,t.unstable_scheduleCallback(t.unstable_NormalPriority,Ar)))}function Y5(e){function n(d){return $5(d,e)}if(0<G6.length){$5(G6[0],e);for(var o=1;o<G6.length;o++){var u=G6[o];u.blockedOn===e&&(u.blockedOn=null)}}for(s1!==null&&$5(s1,e),o1!==null&&$5(o1,e),l1!==null&&$5(l1,e),V5.forEach(n),W5.forEach(n),o=0;o<a1.length;o++)u=a1[o],u.blockedOn===e&&(u.blockedOn=null);for(;0<a1.length&&(o=a1[0],o.blockedOn===null);)W8(o),o.blockedOn===null&&a1.shift()}var i5=H.ReactCurrentBatchConfig,Z6=!0;function jr(e,n,o,u){var d=x9,p=i5.transition;i5.transition=null;try{x9=1,K3(e,n,o,u)}finally{x9=d,i5.transition=p}}function Br(e,n,o,u){var d=x9,p=i5.transition;i5.transition=null;try{x9=4,K3(e,n,o,u)}finally{x9=d,i5.transition=p}}function K3(e,n,o,u){if(Z6){var d=Q3(e,n,o,u);if(d===null)f7(e,n,u,J6,o),V8(e,u);else if(Nr(d,e,n,o,u))u.stopPropagation();else if(V8(e,u),n&4&&-1<Fr.indexOf(e)){for(;d!==null;){var p=r6(d);if(p!==null&&A8(p),p=Q3(e,n,o,u),p===null&&f7(e,n,u,J6,o),p===d)break;d=p}d!==null&&u.stopPropagation()}else f7(e,n,u,null,o)}}var J6=null;function Q3(e,n,o,u){if(J6=null,e=F3(u),e=R1(e),e!==null)if(n=D1(e),n===null)e=null;else if(o=n.tag,o===13){if(e=P8(n),e!==null)return e;e=null}else if(o===3){if(n.stateNode.current.memoizedState.isDehydrated)return n.tag===3?n.stateNode.containerInfo:null;e=null}else n!==e&&(e=null);return J6=e,null}function $8(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Er()){case H3:return 1;case z8:return 4;case $6:case Pr:return 16;case I8:return 536870912;default:return 16}default:return 16}}var u1=null,X3=null,e2=null;function Y8(){if(e2)return e2;var e,n=X3,o=n.length,u,d="value"in u1?u1.value:u1.textContent,p=d.length;for(e=0;e<o&&n[e]===d[e];e++);var m=o-e;for(u=1;u<=m&&n[o-u]===d[p-u];u++);return e2=d.slice(e,1<u?1-u:void 0)}function t2(e){var n=e.keyCode;return"charCode"in e?(e=e.charCode,e===0&&n===13&&(e=13)):e=n,e===10&&(e=13),32<=e||e===13?e:0}function n2(){return!0}function K8(){return!1}function h0(e){function n(o,u,d,p,m){this._reactName=o,this._targetInst=d,this.type=u,this.nativeEvent=p,this.target=m,this.currentTarget=null;for(var _ in e)e.hasOwnProperty(_)&&(o=e[_],this[_]=o?o(p):p[_]);return this.isDefaultPrevented=(p.defaultPrevented!=null?p.defaultPrevented:p.returnValue===!1)?n2:K8,this.isPropagationStopped=K8,this}return B(n.prototype,{preventDefault:function(){this.defaultPrevented=!0;var o=this.nativeEvent;o&&(o.preventDefault?o.preventDefault():typeof o.returnValue!="unknown"&&(o.returnValue=!1),this.isDefaultPrevented=n2)},stopPropagation:function(){var o=this.nativeEvent;o&&(o.stopPropagation?o.stopPropagation():typeof o.cancelBubble!="unknown"&&(o.cancelBubble=!0),this.isPropagationStopped=n2)},persist:function(){},isPersistent:n2}),n}var r5={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},G3=h0(r5),K5=B({},r5,{view:0,detail:0}),Hr=h0(K5),q3,Z3,Q5,i2=B({},K5,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:e7,button:0,buttons:0,relatedTarget:function(e){return e.relatedTarget===void 0?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==Q5&&(Q5&&e.type==="mousemove"?(q3=e.screenX-Q5.screenX,Z3=e.screenY-Q5.screenY):Z3=q3=0,Q5=e),q3)},movementY:function(e){return"movementY"in e?e.movementY:Z3}}),Q8=h0(i2),Vr=B({},i2,{dataTransfer:0}),Wr=h0(Vr),Ur=B({},K5,{relatedTarget:0}),J3=h0(Ur),$r=B({},r5,{animationName:0,elapsedTime:0,pseudoElement:0}),Yr=h0($r),Kr=B({},r5,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Qr=h0(Kr),Xr=B({},r5,{data:0}),X8=h0(Xr),Gr={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},qr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Zr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Jr(e){var n=this.nativeEvent;return n.getModifierState?n.getModifierState(e):(e=Zr[e])?!!n[e]:!1}function e7(){return Jr}var es=B({},K5,{key:function(e){if(e.key){var n=Gr[e.key]||e.key;if(n!=="Unidentified")return n}return e.type==="keypress"?(e=t2(e),e===13?"Enter":String.fromCharCode(e)):e.type==="keydown"||e.type==="keyup"?qr[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:e7,charCode:function(e){return e.type==="keypress"?t2(e):0},keyCode:function(e){return e.type==="keydown"||e.type==="keyup"?e.keyCode:0},which:function(e){return e.type==="keypress"?t2(e):e.type==="keydown"||e.type==="keyup"?e.keyCode:0}}),ts=h0(es),ns=B({},i2,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),G8=h0(ns),is=B({},K5,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:e7}),rs=h0(is),ss=B({},r5,{propertyName:0,elapsedTime:0,pseudoElement:0}),os=h0(ss),ls=B({},i2,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),as=h0(ls),us=[9,13,27,32],t7=f&&"CompositionEvent"in window,X5=null;f&&"documentMode"in document&&(X5=document.documentMode);var cs=f&&"TextEvent"in window&&!X5,q8=f&&(!t7||X5&&8<X5&&11>=X5),Z8=" ",J8=!1;function ee(e,n){switch(e){case"keyup":return us.indexOf(n.keyCode)!==-1;case"keydown":return n.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function te(e){return e=e.detail,typeof e=="object"&&"data"in e?e.data:null}var s5=!1;function fs(e,n){switch(e){case"compositionend":return te(n);case"keypress":return n.which!==32?null:(J8=!0,Z8);case"textInput":return e=n.data,e===Z8&&J8?null:e;default:return null}}function ds(e,n){if(s5)return e==="compositionend"||!t7&&ee(e,n)?(e=Y8(),e2=X3=u1=null,s5=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(n.ctrlKey||n.altKey||n.metaKey)||n.ctrlKey&&n.altKey){if(n.char&&1<n.char.length)return n.char;if(n.which)return String.fromCharCode(n.which)}return null;case"compositionend":return q8&&n.locale!=="ko"?null:n.data;default:return null}}var hs={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function ne(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return n==="input"?!!hs[e.type]:n==="textarea"}function ie(e,n,o,u){S8(u),n=a2(n,"onChange"),0<n.length&&(o=new G3("onChange","change",null,o,u),e.push({event:o,listeners:n}))}var G5=null,q5=null;function ps(e){we(e,0)}function r2(e){var n=c5(e);if(f8(n))return e}function gs(e,n){if(e==="change")return n}var re=!1;if(f){var n7;if(f){var i7="oninput"in document;if(!i7){var se=document.createElement("div");se.setAttribute("oninput","return;"),i7=typeof se.oninput=="function"}n7=i7}else n7=!1;re=n7&&(!document.documentMode||9<document.documentMode)}function oe(){G5&&(G5.detachEvent("onpropertychange",le),q5=G5=null)}function le(e){if(e.propertyName==="value"&&r2(q5)){var n=[];ie(n,q5,e,F3(e)),E8(ps,n)}}function ms(e,n,o){e==="focusin"?(oe(),G5=n,q5=o,G5.attachEvent("onpropertychange",le)):e==="focusout"&&oe()}function ys(e){if(e==="selectionchange"||e==="keyup"||e==="keydown")return r2(q5)}function vs(e,n){if(e==="click")return r2(n)}function xs(e,n){if(e==="input"||e==="change")return r2(n)}function _s(e,n){return e===n&&(e!==0||1/e===1/n)||e!==e&&n!==n}var P0=typeof Object.is=="function"?Object.is:_s;function Z5(e,n){if(P0(e,n))return!0;if(typeof e!="object"||e===null||typeof n!="object"||n===null)return!1;var o=Object.keys(e),u=Object.keys(n);if(o.length!==u.length)return!1;for(u=0;u<o.length;u++){var d=o[u];if(!h.call(n,d)||!P0(e[d],n[d]))return!1}return!0}function ae(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function ue(e,n){var o=ae(e);e=0;for(var u;o;){if(o.nodeType===3){if(u=e+o.textContent.length,e<=n&&u>=n)return{node:o,offset:n-e};e=u}e:{for(;o;){if(o.nextSibling){o=o.nextSibling;break e}o=o.parentNode}o=void 0}o=ae(o)}}function ce(e,n){return e&&n?e===n?!0:e&&e.nodeType===3?!1:n&&n.nodeType===3?ce(e,n.parentNode):"contains"in e?e.contains(n):e.compareDocumentPosition?!!(e.compareDocumentPosition(n)&16):!1:!1}function fe(){for(var e=window,n=H6();n instanceof e.HTMLIFrameElement;){try{var o=typeof n.contentWindow.location.href=="string"}catch{o=!1}if(o)e=n.contentWindow;else break;n=H6(e.document)}return n}function r7(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return n&&(n==="input"&&(e.type==="text"||e.type==="search"||e.type==="tel"||e.type==="url"||e.type==="password")||n==="textarea"||e.contentEditable==="true")}function ws(e){var n=fe(),o=e.focusedElem,u=e.selectionRange;if(n!==o&&o&&o.ownerDocument&&ce(o.ownerDocument.documentElement,o)){if(u!==null&&r7(o)){if(n=u.start,e=u.end,e===void 0&&(e=n),"selectionStart"in o)o.selectionStart=n,o.selectionEnd=Math.min(e,o.value.length);else if(e=(n=o.ownerDocument||document)&&n.defaultView||window,e.getSelection){e=e.getSelection();var d=o.textContent.length,p=Math.min(u.start,d);u=u.end===void 0?p:Math.min(u.end,d),!e.extend&&p>u&&(d=u,u=p,p=d),d=ue(o,p);var m=ue(o,u);d&&m&&(e.rangeCount!==1||e.anchorNode!==d.node||e.anchorOffset!==d.offset||e.focusNode!==m.node||e.focusOffset!==m.offset)&&(n=n.createRange(),n.setStart(d.node,d.offset),e.removeAllRanges(),p>u?(e.addRange(n),e.extend(m.node,m.offset)):(n.setEnd(m.node,m.offset),e.addRange(n)))}}for(n=[],e=o;e=e.parentNode;)e.nodeType===1&&n.push({element:e,left:e.scrollLeft,top:e.scrollTop});for(typeof o.focus=="function"&&o.focus(),o=0;o<n.length;o++)e=n[o],e.element.scrollLeft=e.left,e.element.scrollTop=e.top}}var ks=f&&"documentMode"in document&&11>=document.documentMode,o5=null,s7=null,J5=null,o7=!1;function de(e,n,o){var u=o.window===o?o.document:o.nodeType===9?o:o.ownerDocument;o7||o5==null||o5!==H6(u)||(u=o5,"selectionStart"in u&&r7(u)?u={start:u.selectionStart,end:u.selectionEnd}:(u=(u.ownerDocument&&u.ownerDocument.defaultView||window).getSelection(),u={anchorNode:u.anchorNode,anchorOffset:u.anchorOffset,focusNode:u.focusNode,focusOffset:u.focusOffset}),J5&&Z5(J5,u)||(J5=u,u=a2(s7,"onSelect"),0<u.length&&(n=new G3("onSelect","select",null,n,o),e.push({event:n,listeners:u}),n.target=o5)))}function s2(e,n){var o={};return o[e.toLowerCase()]=n.toLowerCase(),o["Webkit"+e]="webkit"+n,o["Moz"+e]="moz"+n,o}var l5={animationend:s2("Animation","AnimationEnd"),animationiteration:s2("Animation","AnimationIteration"),animationstart:s2("Animation","AnimationStart"),transitionend:s2("Transition","TransitionEnd")},l7={},he={};f&&(he=document.createElement("div").style,"AnimationEvent"in window||(delete l5.animationend.animation,delete l5.animationiteration.animation,delete l5.animationstart.animation),"TransitionEvent"in window||delete l5.transitionend.transition);function o2(e){if(l7[e])return l7[e];if(!l5[e])return e;var n=l5[e],o;for(o in n)if(n.hasOwnProperty(o)&&o in he)return l7[e]=n[o];return e}var pe=o2("animationend"),ge=o2("animationiteration"),me=o2("animationstart"),ye=o2("transitionend"),ve=new Map,xe="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function c1(e,n){ve.set(e,n),a(n,[e])}for(var a7=0;a7<xe.length;a7++){var u7=xe[a7],Ss=u7.toLowerCase(),bs=u7[0].toUpperCase()+u7.slice(1);c1(Ss,"on"+bs)}c1(pe,"onAnimationEnd"),c1(ge,"onAnimationIteration"),c1(me,"onAnimationStart"),c1("dblclick","onDoubleClick"),c1("focusin","onFocus"),c1("focusout","onBlur"),c1(ye,"onTransitionEnd"),c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),a("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),a("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),a("onBeforeInput",["compositionend","keypress","textInput","paste"]),a("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),a("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),a("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var e6="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ms=new Set("cancel close invalid load scroll toggle".split(" ").concat(e6));function _e(e,n,o){var u=e.type||"unknown-event";e.currentTarget=o,Sr(u,n,void 0,e),e.currentTarget=null}function we(e,n){n=(n&4)!==0;for(var o=0;o<e.length;o++){var u=e[o],d=u.event;u=u.listeners;e:{var p=void 0;if(n)for(var m=u.length-1;0<=m;m--){var _=u[m],w=_.instance,O=_.currentTarget;if(_=_.listener,w!==p&&d.isPropagationStopped())break e;_e(d,_,O),p=w}else for(m=0;m<u.length;m++){if(_=u[m],w=_.instance,O=_.currentTarget,_=_.listener,w!==p&&d.isPropagationStopped())break e;_e(d,_,O),p=w}}}if(U6)throw e=B3,U6=!1,B3=null,e}function M9(e,n){var o=n[y7];o===void 0&&(o=n[y7]=new Set);var u=e+"__bubble";o.has(u)||(ke(n,e,2,!1),o.add(u))}function c7(e,n,o){var u=0;n&&(u|=4),ke(o,e,u,n)}var l2="_reactListening"+Math.random().toString(36).slice(2);function t6(e){if(!e[l2]){e[l2]=!0,s.forEach(function(o){o!=="selectionchange"&&(Ms.has(o)||c7(o,!1,e),c7(o,!0,e))});var n=e.nodeType===9?e:e.ownerDocument;n===null||n[l2]||(n[l2]=!0,c7("selectionchange",!1,n))}}function ke(e,n,o,u){switch($8(n)){case 1:var d=jr;break;case 4:d=Br;break;default:d=K3}o=d.bind(null,n,o,e),d=void 0,!j3||n!=="touchstart"&&n!=="touchmove"&&n!=="wheel"||(d=!0),u?d!==void 0?e.addEventListener(n,o,{capture:!0,passive:d}):e.addEventListener(n,o,!0):d!==void 0?e.addEventListener(n,o,{passive:d}):e.addEventListener(n,o,!1)}function f7(e,n,o,u,d){var p=u;if(!(n&1)&&!(n&2)&&u!==null)e:for(;;){if(u===null)return;var m=u.tag;if(m===3||m===4){var _=u.stateNode.containerInfo;if(_===d||_.nodeType===8&&_.parentNode===d)break;if(m===4)for(m=u.return;m!==null;){var w=m.tag;if((w===3||w===4)&&(w=m.stateNode.containerInfo,w===d||w.nodeType===8&&w.parentNode===d))return;m=m.return}for(;_!==null;){if(m=R1(_),m===null)return;if(w=m.tag,w===5||w===6){u=p=m;continue e}_=_.parentNode}}u=u.return}E8(function(){var O=p,z=F3(o),I=[];e:{var R=ve.get(e);if(R!==void 0){var V=G3,$=e;switch(e){case"keypress":if(t2(o)===0)break e;case"keydown":case"keyup":V=ts;break;case"focusin":$="focus",V=J3;break;case"focusout":$="blur",V=J3;break;case"beforeblur":case"afterblur":V=J3;break;case"click":if(o.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":V=Q8;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":V=Wr;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":V=rs;break;case pe:case ge:case me:V=Yr;break;case ye:V=os;break;case"scroll":V=Hr;break;case"wheel":V=as;break;case"copy":case"cut":case"paste":V=Qr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":V=G8}var K=(n&4)!==0,F9=!K&&e==="scroll",E=K?R!==null?R+"Capture":null:R;K=[];for(var S=O,P;S!==null;){P=S;var N=P.stateNode;if(P.tag===5&&N!==null&&(P=N,E!==null&&(N=N5(S,E),N!=null&&K.push(n6(S,N,P)))),F9)break;S=S.return}0<K.length&&(R=new V(R,$,null,o,z),I.push({event:R,listeners:K}))}}if(!(n&7)){e:{if(R=e==="mouseover"||e==="pointerover",V=e==="mouseout"||e==="pointerout",R&&o!==I3&&($=o.relatedTarget||o.fromElement)&&(R1($)||$[Y0]))break e;if((V||R)&&(R=z.window===z?z:(R=z.ownerDocument)?R.defaultView||R.parentWindow:window,V?($=o.relatedTarget||o.toElement,V=O,$=$?R1($):null,$!==null&&(F9=D1($),$!==F9||$.tag!==5&&$.tag!==6)&&($=null)):(V=null,$=O),V!==$)){if(K=Q8,N="onMouseLeave",E="onMouseEnter",S="mouse",(e==="pointerout"||e==="pointerover")&&(K=G8,N="onPointerLeave",E="onPointerEnter",S="pointer"),F9=V==null?R:c5(V),P=$==null?R:c5($),R=new K(N,S+"leave",V,o,z),R.target=F9,R.relatedTarget=P,N=null,R1(z)===O&&(K=new K(E,S+"enter",$,o,z),K.target=P,K.relatedTarget=F9,N=K),F9=N,V&&$)t:{for(K=V,E=$,S=0,P=K;P;P=a5(P))S++;for(P=0,N=E;N;N=a5(N))P++;for(;0<S-P;)K=a5(K),S--;for(;0<P-S;)E=a5(E),P--;for(;S--;){if(K===E||E!==null&&K===E.alternate)break t;K=a5(K),E=a5(E)}K=null}else K=null;V!==null&&Se(I,R,V,K,!1),$!==null&&F9!==null&&Se(I,F9,$,K,!0)}}e:{if(R=O?c5(O):window,V=R.nodeName&&R.nodeName.toLowerCase(),V==="select"||V==="input"&&R.type==="file")var X=gs;else if(ne(R))if(re)X=xs;else{X=ys;var J=ms}else(V=R.nodeName)&&V.toLowerCase()==="input"&&(R.type==="checkbox"||R.type==="radio")&&(X=vs);if(X&&(X=X(e,O))){ie(I,X,o,z);break e}J&&J(e,R,O),e==="focusout"&&(J=R._wrapperState)&&J.controlled&&R.type==="number"&&O3(R,"number",R.value)}switch(J=O?c5(O):window,e){case"focusin":(ne(J)||J.contentEditable==="true")&&(o5=J,s7=O,J5=null);break;case"focusout":J5=s7=o5=null;break;case"mousedown":o7=!0;break;case"contextmenu":case"mouseup":case"dragend":o7=!1,de(I,o,z);break;case"selectionchange":if(ks)break;case"keydown":case"keyup":de(I,o,z)}var e9;if(t7)e:{switch(e){case"compositionstart":var t9="onCompositionStart";break e;case"compositionend":t9="onCompositionEnd";break e;case"compositionupdate":t9="onCompositionUpdate";break e}t9=void 0}else s5?ee(e,o)&&(t9="onCompositionEnd"):e==="keydown"&&o.keyCode===229&&(t9="onCompositionStart");t9&&(q8&&o.locale!=="ko"&&(s5||t9!=="onCompositionStart"?t9==="onCompositionEnd"&&s5&&(e9=Y8()):(u1=z,X3="value"in u1?u1.value:u1.textContent,s5=!0)),J=a2(O,t9),0<J.length&&(t9=new X8(t9,e,null,o,z),I.push({event:t9,listeners:J}),e9?t9.data=e9:(e9=te(o),e9!==null&&(t9.data=e9)))),(e9=cs?fs(e,o):ds(e,o))&&(O=a2(O,"onBeforeInput"),0<O.length&&(z=new X8("onBeforeInput","beforeinput",null,o,z),I.push({event:z,listeners:O}),z.data=e9))}we(I,n)})}function n6(e,n,o){return{instance:e,listener:n,currentTarget:o}}function a2(e,n){for(var o=n+"Capture",u=[];e!==null;){var d=e,p=d.stateNode;d.tag===5&&p!==null&&(d=p,p=N5(e,o),p!=null&&u.unshift(n6(e,p,d)),p=N5(e,n),p!=null&&u.push(n6(e,p,d))),e=e.return}return u}function a5(e){if(e===null)return null;do e=e.return;while(e&&e.tag!==5);return e||null}function Se(e,n,o,u,d){for(var p=n._reactName,m=[];o!==null&&o!==u;){var _=o,w=_.alternate,O=_.stateNode;if(w!==null&&w===u)break;_.tag===5&&O!==null&&(_=O,d?(w=N5(o,p),w!=null&&m.unshift(n6(o,w,_))):d||(w=N5(o,p),w!=null&&m.push(n6(o,w,_)))),o=o.return}m.length!==0&&e.push({event:n,listeners:m})}var Cs=/\r\n?/g,Es=/\u0000|\uFFFD/g;function be(e){return(typeof e=="string"?e:""+e).replace(Cs,`
`).replace(Es,"")}function u2(e,n,o){if(n=be(n),be(e)!==n&&o)throw Error(i(425))}function c2(){}var d7=null,h7=null;function p7(e,n){return e==="textarea"||e==="noscript"||typeof n.children=="string"||typeof n.children=="number"||typeof n.dangerouslySetInnerHTML=="object"&&n.dangerouslySetInnerHTML!==null&&n.dangerouslySetInnerHTML.__html!=null}var g7=typeof setTimeout=="function"?setTimeout:void 0,Ps=typeof clearTimeout=="function"?clearTimeout:void 0,Me=typeof Promise=="function"?Promise:void 0,Ts=typeof queueMicrotask=="function"?queueMicrotask:typeof Me<"u"?function(e){return Me.resolve(null).then(e).catch(Os)}:g7;function Os(e){setTimeout(function(){throw e})}function m7(e,n){var o=n,u=0;do{var d=o.nextSibling;if(e.removeChild(o),d&&d.nodeType===8)if(o=d.data,o==="/$"){if(u===0){e.removeChild(d),Y5(n);return}u--}else o!=="$"&&o!=="$?"&&o!=="$!"||u++;o=d}while(o);Y5(n)}function f1(e){for(;e!=null;e=e.nextSibling){var n=e.nodeType;if(n===1||n===3)break;if(n===8){if(n=e.data,n==="$"||n==="$!"||n==="$?")break;if(n==="/$")return null}}return e}function Ce(e){e=e.previousSibling;for(var n=0;e;){if(e.nodeType===8){var o=e.data;if(o==="$"||o==="$!"||o==="$?"){if(n===0)return e;n--}else o==="/$"&&n++}e=e.previousSibling}return null}var u5=Math.random().toString(36).slice(2),A0="__reactFiber$"+u5,i6="__reactProps$"+u5,Y0="__reactContainer$"+u5,y7="__reactEvents$"+u5,Ls="__reactListeners$"+u5,Ds="__reactHandles$"+u5;function R1(e){var n=e[A0];if(n)return n;for(var o=e.parentNode;o;){if(n=o[Y0]||o[A0]){if(o=n.alternate,n.child!==null||o!==null&&o.child!==null)for(e=Ce(e);e!==null;){if(o=e[A0])return o;e=Ce(e)}return n}e=o,o=e.parentNode}return null}function r6(e){return e=e[A0]||e[Y0],!e||e.tag!==5&&e.tag!==6&&e.tag!==13&&e.tag!==3?null:e}function c5(e){if(e.tag===5||e.tag===6)return e.stateNode;throw Error(i(33))}function f2(e){return e[i6]||null}var v7=[],f5=-1;function d1(e){return{current:e}}function C9(e){0>f5||(e.current=v7[f5],v7[f5]=null,f5--)}function b9(e,n){f5++,v7[f5]=e.current,e.current=n}var h1={},Q9=d1(h1),r0=d1(!1),z1=h1;function d5(e,n){var o=e.type.contextTypes;if(!o)return h1;var u=e.stateNode;if(u&&u.__reactInternalMemoizedUnmaskedChildContext===n)return u.__reactInternalMemoizedMaskedChildContext;var d={},p;for(p in o)d[p]=n[p];return u&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=n,e.__reactInternalMemoizedMaskedChildContext=d),d}function s0(e){return e=e.childContextTypes,e!=null}function d2(){C9(r0),C9(Q9)}function Ee(e,n,o){if(Q9.current!==h1)throw Error(i(168));b9(Q9,n),b9(r0,o)}function Pe(e,n,o){var u=e.stateNode;if(n=n.childContextTypes,typeof u.getChildContext!="function")return o;u=u.getChildContext();for(var d in u)if(!(d in n))throw Error(i(108,S9(e)||"Unknown",d));return B({},o,u)}function h2(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||h1,z1=Q9.current,b9(Q9,e),b9(r0,r0.current),!0}function Te(e,n,o){var u=e.stateNode;if(!u)throw Error(i(169));o?(e=Pe(e,n,z1),u.__reactInternalMemoizedMergedChildContext=e,C9(r0),C9(Q9),b9(Q9,e)):C9(r0),b9(r0,o)}var K0=null,p2=!1,x7=!1;function Oe(e){K0===null?K0=[e]:K0.push(e)}function Rs(e){p2=!0,Oe(e)}function p1(){if(!x7&&K0!==null){x7=!0;var e=0,n=x9;try{var o=K0;for(x9=1;e<o.length;e++){var u=o[e];do u=u(!0);while(u!==null)}K0=null,p2=!1}catch(d){throw K0!==null&&(K0=K0.slice(e+1)),D8(H3,p1),d}finally{x9=n,x7=!1}}return null}var h5=[],p5=0,g2=null,m2=0,y0=[],v0=0,I1=null,Q0=1,X0="";function F1(e,n){h5[p5++]=m2,h5[p5++]=g2,g2=e,m2=n}function Le(e,n,o){y0[v0++]=Q0,y0[v0++]=X0,y0[v0++]=I1,I1=e;var u=Q0;e=X0;var d=32-E0(u)-1;u&=~(1<<d),o+=1;var p=32-E0(n)+d;if(30<p){var m=d-d%5;p=(u&(1<<m)-1).toString(32),u>>=m,d-=m,Q0=1<<32-E0(n)+d|o<<d|u,X0=p+e}else Q0=1<<p|o<<d|u,X0=e}function _7(e){e.return!==null&&(F1(e,1),Le(e,1,0))}function w7(e){for(;e===g2;)g2=h5[--p5],h5[p5]=null,m2=h5[--p5],h5[p5]=null;for(;e===I1;)I1=y0[--v0],y0[v0]=null,X0=y0[--v0],y0[v0]=null,Q0=y0[--v0],y0[v0]=null}var p0=null,g0=null,O9=!1,T0=null;function De(e,n){var o=k0(5,null,null,0);o.elementType="DELETED",o.stateNode=n,o.return=e,n=e.deletions,n===null?(e.deletions=[o],e.flags|=16):n.push(o)}function Re(e,n){switch(e.tag){case 5:var o=e.type;return n=n.nodeType!==1||o.toLowerCase()!==n.nodeName.toLowerCase()?null:n,n!==null?(e.stateNode=n,p0=e,g0=f1(n.firstChild),!0):!1;case 6:return n=e.pendingProps===""||n.nodeType!==3?null:n,n!==null?(e.stateNode=n,p0=e,g0=null,!0):!1;case 13:return n=n.nodeType!==8?null:n,n!==null?(o=I1!==null?{id:Q0,overflow:X0}:null,e.memoizedState={dehydrated:n,treeContext:o,retryLane:1073741824},o=k0(18,null,null,0),o.stateNode=n,o.return=e,e.child=o,p0=e,g0=null,!0):!1;default:return!1}}function k7(e){return(e.mode&1)!==0&&(e.flags&128)===0}function S7(e){if(O9){var n=g0;if(n){var o=n;if(!Re(e,n)){if(k7(e))throw Error(i(418));n=f1(o.nextSibling);var u=p0;n&&Re(e,n)?De(u,o):(e.flags=e.flags&-4097|2,O9=!1,p0=e)}}else{if(k7(e))throw Error(i(418));e.flags=e.flags&-4097|2,O9=!1,p0=e}}}function ze(e){for(e=e.return;e!==null&&e.tag!==5&&e.tag!==3&&e.tag!==13;)e=e.return;p0=e}function y2(e){if(e!==p0)return!1;if(!O9)return ze(e),O9=!0,!1;var n;if((n=e.tag!==3)&&!(n=e.tag!==5)&&(n=e.type,n=n!=="head"&&n!=="body"&&!p7(e.type,e.memoizedProps)),n&&(n=g0)){if(k7(e))throw Ie(),Error(i(418));for(;n;)De(e,n),n=f1(n.nextSibling)}if(ze(e),e.tag===13){if(e=e.memoizedState,e=e!==null?e.dehydrated:null,!e)throw Error(i(317));e:{for(e=e.nextSibling,n=0;e;){if(e.nodeType===8){var o=e.data;if(o==="/$"){if(n===0){g0=f1(e.nextSibling);break e}n--}else o!=="$"&&o!=="$!"&&o!=="$?"||n++}e=e.nextSibling}g0=null}}else g0=p0?f1(e.stateNode.nextSibling):null;return!0}function Ie(){for(var e=g0;e;)e=f1(e.nextSibling)}function g5(){g0=p0=null,O9=!1}function b7(e){T0===null?T0=[e]:T0.push(e)}var zs=H.ReactCurrentBatchConfig;function s6(e,n,o){if(e=o.ref,e!==null&&typeof e!="function"&&typeof e!="object"){if(o._owner){if(o=o._owner,o){if(o.tag!==1)throw Error(i(309));var u=o.stateNode}if(!u)throw Error(i(147,e));var d=u,p=""+e;return n!==null&&n.ref!==null&&typeof n.ref=="function"&&n.ref._stringRef===p?n.ref:(n=function(m){var _=d.refs;m===null?delete _[p]:_[p]=m},n._stringRef=p,n)}if(typeof e!="string")throw Error(i(284));if(!o._owner)throw Error(i(290,e))}return e}function v2(e,n){throw e=Object.prototype.toString.call(n),Error(i(31,e==="[object Object]"?"object with keys {"+Object.keys(n).join(", ")+"}":e))}function Fe(e){var n=e._init;return n(e._payload)}function Ne(e){function n(E,S){if(e){var P=E.deletions;P===null?(E.deletions=[S],E.flags|=16):P.push(S)}}function o(E,S){if(!e)return null;for(;S!==null;)n(E,S),S=S.sibling;return null}function u(E,S){for(E=new Map;S!==null;)S.key!==null?E.set(S.key,S):E.set(S.index,S),S=S.sibling;return E}function d(E,S){return E=k1(E,S),E.index=0,E.sibling=null,E}function p(E,S,P){return E.index=P,e?(P=E.alternate,P!==null?(P=P.index,P<S?(E.flags|=2,S):P):(E.flags|=2,S)):(E.flags|=1048576,S)}function m(E){return e&&E.alternate===null&&(E.flags|=2),E}function _(E,S,P,N){return S===null||S.tag!==6?(S=g4(P,E.mode,N),S.return=E,S):(S=d(S,P),S.return=E,S)}function w(E,S,P,N){var X=P.type;return X===Q?z(E,S,P.props.children,N,P.key):S!==null&&(S.elementType===X||typeof X=="object"&&X!==null&&X.$$typeof===g9&&Fe(X)===S.type)?(N=d(S,P.props),N.ref=s6(E,S,P),N.return=E,N):(N=V2(P.type,P.key,P.props,null,E.mode,N),N.ref=s6(E,S,P),N.return=E,N)}function O(E,S,P,N){return S===null||S.tag!==4||S.stateNode.containerInfo!==P.containerInfo||S.stateNode.implementation!==P.implementation?(S=m4(P,E.mode,N),S.return=E,S):(S=d(S,P.children||[]),S.return=E,S)}function z(E,S,P,N,X){return S===null||S.tag!==7?(S=U1(P,E.mode,N,X),S.return=E,S):(S=d(S,P),S.return=E,S)}function I(E,S,P){if(typeof S=="string"&&S!==""||typeof S=="number")return S=g4(""+S,E.mode,P),S.return=E,S;if(typeof S=="object"&&S!==null){switch(S.$$typeof){case W:return P=V2(S.type,S.key,S.props,null,E.mode,P),P.ref=s6(E,null,S),P.return=E,P;case Y:return S=m4(S,E.mode,P),S.return=E,S;case g9:var N=S._init;return I(E,N(S._payload),P)}if(z5(S)||Z(S))return S=U1(S,E.mode,P,null),S.return=E,S;v2(E,S)}return null}function R(E,S,P,N){var X=S!==null?S.key:null;if(typeof P=="string"&&P!==""||typeof P=="number")return X!==null?null:_(E,S,""+P,N);if(typeof P=="object"&&P!==null){switch(P.$$typeof){case W:return P.key===X?w(E,S,P,N):null;case Y:return P.key===X?O(E,S,P,N):null;case g9:return X=P._init,R(E,S,X(P._payload),N)}if(z5(P)||Z(P))return X!==null?null:z(E,S,P,N,null);v2(E,P)}return null}function V(E,S,P,N,X){if(typeof N=="string"&&N!==""||typeof N=="number")return E=E.get(P)||null,_(S,E,""+N,X);if(typeof N=="object"&&N!==null){switch(N.$$typeof){case W:return E=E.get(N.key===null?P:N.key)||null,w(S,E,N,X);case Y:return E=E.get(N.key===null?P:N.key)||null,O(S,E,N,X);case g9:var J=N._init;return V(E,S,P,J(N._payload),X)}if(z5(N)||Z(N))return E=E.get(P)||null,z(S,E,N,X,null);v2(S,N)}return null}function $(E,S,P,N){for(var X=null,J=null,e9=S,t9=S=0,$9=null;e9!==null&&t9<P.length;t9++){e9.index>t9?($9=e9,e9=null):$9=e9.sibling;var m9=R(E,e9,P[t9],N);if(m9===null){e9===null&&(e9=$9);break}e&&e9&&m9.alternate===null&&n(E,e9),S=p(m9,S,t9),J===null?X=m9:J.sibling=m9,J=m9,e9=$9}if(t9===P.length)return o(E,e9),O9&&F1(E,t9),X;if(e9===null){for(;t9<P.length;t9++)e9=I(E,P[t9],N),e9!==null&&(S=p(e9,S,t9),J===null?X=e9:J.sibling=e9,J=e9);return O9&&F1(E,t9),X}for(e9=u(E,e9);t9<P.length;t9++)$9=V(e9,E,t9,P[t9],N),$9!==null&&(e&&$9.alternate!==null&&e9.delete($9.key===null?t9:$9.key),S=p($9,S,t9),J===null?X=$9:J.sibling=$9,J=$9);return e&&e9.forEach(function(S1){return n(E,S1)}),O9&&F1(E,t9),X}function K(E,S,P,N){var X=Z(P);if(typeof X!="function")throw Error(i(150));if(P=X.call(P),P==null)throw Error(i(151));for(var J=X=null,e9=S,t9=S=0,$9=null,m9=P.next();e9!==null&&!m9.done;t9++,m9=P.next()){e9.index>t9?($9=e9,e9=null):$9=e9.sibling;var S1=R(E,e9,m9.value,N);if(S1===null){e9===null&&(e9=$9);break}e&&e9&&S1.alternate===null&&n(E,e9),S=p(S1,S,t9),J===null?X=S1:J.sibling=S1,J=S1,e9=$9}if(m9.done)return o(E,e9),O9&&F1(E,t9),X;if(e9===null){for(;!m9.done;t9++,m9=P.next())m9=I(E,m9.value,N),m9!==null&&(S=p(m9,S,t9),J===null?X=m9:J.sibling=m9,J=m9);return O9&&F1(E,t9),X}for(e9=u(E,e9);!m9.done;t9++,m9=P.next())m9=V(e9,E,t9,m9.value,N),m9!==null&&(e&&m9.alternate!==null&&e9.delete(m9.key===null?t9:m9.key),S=p(m9,S,t9),J===null?X=m9:J.sibling=m9,J=m9);return e&&e9.forEach(function(ho){return n(E,ho)}),O9&&F1(E,t9),X}function F9(E,S,P,N){if(typeof P=="object"&&P!==null&&P.type===Q&&P.key===null&&(P=P.props.children),typeof P=="object"&&P!==null){switch(P.$$typeof){case W:e:{for(var X=P.key,J=S;J!==null;){if(J.key===X){if(X=P.type,X===Q){if(J.tag===7){o(E,J.sibling),S=d(J,P.props.children),S.return=E,E=S;break e}}else if(J.elementType===X||typeof X=="object"&&X!==null&&X.$$typeof===g9&&Fe(X)===J.type){o(E,J.sibling),S=d(J,P.props),S.ref=s6(E,J,P),S.return=E,E=S;break e}o(E,J);break}else n(E,J);J=J.sibling}P.type===Q?(S=U1(P.props.children,E.mode,N,P.key),S.return=E,E=S):(N=V2(P.type,P.key,P.props,null,E.mode,N),N.ref=s6(E,S,P),N.return=E,E=N)}return m(E);case Y:e:{for(J=P.key;S!==null;){if(S.key===J)if(S.tag===4&&S.stateNode.containerInfo===P.containerInfo&&S.stateNode.implementation===P.implementation){o(E,S.sibling),S=d(S,P.children||[]),S.return=E,E=S;break e}else{o(E,S);break}else n(E,S);S=S.sibling}S=m4(P,E.mode,N),S.return=E,E=S}return m(E);case g9:return J=P._init,F9(E,S,J(P._payload),N)}if(z5(P))return $(E,S,P,N);if(Z(P))return K(E,S,P,N);v2(E,P)}return typeof P=="string"&&P!==""||typeof P=="number"?(P=""+P,S!==null&&S.tag===6?(o(E,S.sibling),S=d(S,P),S.return=E,E=S):(o(E,S),S=g4(P,E.mode,N),S.return=E,E=S),m(E)):o(E,S)}return F9}var m5=Ne(!0),Ae=Ne(!1),x2=d1(null),_2=null,y5=null,M7=null;function C7(){M7=y5=_2=null}function E7(e){var n=x2.current;C9(x2),e._currentValue=n}function P7(e,n,o){for(;e!==null;){var u=e.alternate;if((e.childLanes&n)!==n?(e.childLanes|=n,u!==null&&(u.childLanes|=n)):u!==null&&(u.childLanes&n)!==n&&(u.childLanes|=n),e===o)break;e=e.return}}function v5(e,n){_2=e,M7=y5=null,e=e.dependencies,e!==null&&e.firstContext!==null&&(e.lanes&n&&(o0=!0),e.firstContext=null)}function x0(e){var n=e._currentValue;if(M7!==e)if(e={context:e,memoizedValue:n,next:null},y5===null){if(_2===null)throw Error(i(308));y5=e,_2.dependencies={lanes:0,firstContext:e}}else y5=y5.next=e;return n}var N1=null;function T7(e){N1===null?N1=[e]:N1.push(e)}function je(e,n,o,u){var d=n.interleaved;return d===null?(o.next=o,T7(n)):(o.next=d.next,d.next=o),n.interleaved=o,G0(e,u)}function G0(e,n){e.lanes|=n;var o=e.alternate;for(o!==null&&(o.lanes|=n),o=e,e=e.return;e!==null;)e.childLanes|=n,o=e.alternate,o!==null&&(o.childLanes|=n),o=e,e=e.return;return o.tag===3?o.stateNode:null}var g1=!1;function O7(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Be(e,n){e=e.updateQueue,n.updateQueue===e&&(n.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function q0(e,n){return{eventTime:e,lane:n,tag:0,payload:null,callback:null,next:null}}function m1(e,n,o){var u=e.updateQueue;if(u===null)return null;if(u=u.shared,d9&2){var d=u.pending;return d===null?n.next=n:(n.next=d.next,d.next=n),u.pending=n,G0(e,o)}return d=u.interleaved,d===null?(n.next=n,T7(u)):(n.next=d.next,d.next=n),u.interleaved=n,G0(e,o)}function w2(e,n,o){if(n=n.updateQueue,n!==null&&(n=n.shared,(o&4194240)!==0)){var u=n.lanes;u&=e.pendingLanes,o|=u,n.lanes=o,U3(e,o)}}function He(e,n){var o=e.updateQueue,u=e.alternate;if(u!==null&&(u=u.updateQueue,o===u)){var d=null,p=null;if(o=o.firstBaseUpdate,o!==null){do{var m={eventTime:o.eventTime,lane:o.lane,tag:o.tag,payload:o.payload,callback:o.callback,next:null};p===null?d=p=m:p=p.next=m,o=o.next}while(o!==null);p===null?d=p=n:p=p.next=n}else d=p=n;o={baseState:u.baseState,firstBaseUpdate:d,lastBaseUpdate:p,shared:u.shared,effects:u.effects},e.updateQueue=o;return}e=o.lastBaseUpdate,e===null?o.firstBaseUpdate=n:e.next=n,o.lastBaseUpdate=n}function k2(e,n,o,u){var d=e.updateQueue;g1=!1;var p=d.firstBaseUpdate,m=d.lastBaseUpdate,_=d.shared.pending;if(_!==null){d.shared.pending=null;var w=_,O=w.next;w.next=null,m===null?p=O:m.next=O,m=w;var z=e.alternate;z!==null&&(z=z.updateQueue,_=z.lastBaseUpdate,_!==m&&(_===null?z.firstBaseUpdate=O:_.next=O,z.lastBaseUpdate=w))}if(p!==null){var I=d.baseState;m=0,z=O=w=null,_=p;do{var R=_.lane,V=_.eventTime;if((u&R)===R){z!==null&&(z=z.next={eventTime:V,lane:0,tag:_.tag,payload:_.payload,callback:_.callback,next:null});e:{var $=e,K=_;switch(R=n,V=o,K.tag){case 1:if($=K.payload,typeof $=="function"){I=$.call(V,I,R);break e}I=$;break e;case 3:$.flags=$.flags&-65537|128;case 0:if($=K.payload,R=typeof $=="function"?$.call(V,I,R):$,R==null)break e;I=B({},I,R);break e;case 2:g1=!0}}_.callback!==null&&_.lane!==0&&(e.flags|=64,R=d.effects,R===null?d.effects=[_]:R.push(_))}else V={eventTime:V,lane:R,tag:_.tag,payload:_.payload,callback:_.callback,next:null},z===null?(O=z=V,w=I):z=z.next=V,m|=R;if(_=_.next,_===null){if(_=d.shared.pending,_===null)break;R=_,_=R.next,R.next=null,d.lastBaseUpdate=R,d.shared.pending=null}}while(!0);if(z===null&&(w=I),d.baseState=w,d.firstBaseUpdate=O,d.lastBaseUpdate=z,n=d.shared.interleaved,n!==null){d=n;do m|=d.lane,d=d.next;while(d!==n)}else p===null&&(d.shared.lanes=0);B1|=m,e.lanes=m,e.memoizedState=I}}function Ve(e,n,o){if(e=n.effects,n.effects=null,e!==null)for(n=0;n<e.length;n++){var u=e[n],d=u.callback;if(d!==null){if(u.callback=null,u=o,typeof d!="function")throw Error(i(191,d));d.call(u)}}}var o6={},j0=d1(o6),l6=d1(o6),a6=d1(o6);function A1(e){if(e===o6)throw Error(i(174));return e}function L7(e,n){switch(b9(a6,n),b9(l6,e),b9(j0,o6),e=n.nodeType,e){case 9:case 11:n=(n=n.documentElement)?n.namespaceURI:D3(null,"");break;default:e=e===8?n.parentNode:n,n=e.namespaceURI||null,e=e.tagName,n=D3(n,e)}C9(j0),b9(j0,n)}function x5(){C9(j0),C9(l6),C9(a6)}function We(e){A1(a6.current);var n=A1(j0.current),o=D3(n,e.type);n!==o&&(b9(l6,e),b9(j0,o))}function D7(e){l6.current===e&&(C9(j0),C9(l6))}var L9=d1(0);function S2(e){for(var n=e;n!==null;){if(n.tag===13){var o=n.memoizedState;if(o!==null&&(o=o.dehydrated,o===null||o.data==="$?"||o.data==="$!"))return n}else if(n.tag===19&&n.memoizedProps.revealOrder!==void 0){if(n.flags&128)return n}else if(n.child!==null){n.child.return=n,n=n.child;continue}if(n===e)break;for(;n.sibling===null;){if(n.return===null||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}return null}var R7=[];function z7(){for(var e=0;e<R7.length;e++)R7[e]._workInProgressVersionPrimary=null;R7.length=0}var b2=H.ReactCurrentDispatcher,I7=H.ReactCurrentBatchConfig,j1=0,D9=null,j9=null,W9=null,M2=!1,u6=!1,c6=0,Is=0;function X9(){throw Error(i(321))}function F7(e,n){if(n===null)return!1;for(var o=0;o<n.length&&o<e.length;o++)if(!P0(e[o],n[o]))return!1;return!0}function N7(e,n,o,u,d,p){if(j1=p,D9=n,n.memoizedState=null,n.updateQueue=null,n.lanes=0,b2.current=e===null||e.memoizedState===null?js:Bs,e=o(u,d),u6){p=0;do{if(u6=!1,c6=0,25<=p)throw Error(i(301));p+=1,W9=j9=null,n.updateQueue=null,b2.current=Hs,e=o(u,d)}while(u6)}if(b2.current=P2,n=j9!==null&&j9.next!==null,j1=0,W9=j9=D9=null,M2=!1,n)throw Error(i(300));return e}function A7(){var e=c6!==0;return c6=0,e}function B0(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return W9===null?D9.memoizedState=W9=e:W9=W9.next=e,W9}function _0(){if(j9===null){var e=D9.alternate;e=e!==null?e.memoizedState:null}else e=j9.next;var n=W9===null?D9.memoizedState:W9.next;if(n!==null)W9=n,j9=e;else{if(e===null)throw Error(i(310));j9=e,e={memoizedState:j9.memoizedState,baseState:j9.baseState,baseQueue:j9.baseQueue,queue:j9.queue,next:null},W9===null?D9.memoizedState=W9=e:W9=W9.next=e}return W9}function f6(e,n){return typeof n=="function"?n(e):n}function j7(e){var n=_0(),o=n.queue;if(o===null)throw Error(i(311));o.lastRenderedReducer=e;var u=j9,d=u.baseQueue,p=o.pending;if(p!==null){if(d!==null){var m=d.next;d.next=p.next,p.next=m}u.baseQueue=d=p,o.pending=null}if(d!==null){p=d.next,u=u.baseState;var _=m=null,w=null,O=p;do{var z=O.lane;if((j1&z)===z)w!==null&&(w=w.next={lane:0,action:O.action,hasEagerState:O.hasEagerState,eagerState:O.eagerState,next:null}),u=O.hasEagerState?O.eagerState:e(u,O.action);else{var I={lane:z,action:O.action,hasEagerState:O.hasEagerState,eagerState:O.eagerState,next:null};w===null?(_=w=I,m=u):w=w.next=I,D9.lanes|=z,B1|=z}O=O.next}while(O!==null&&O!==p);w===null?m=u:w.next=_,P0(u,n.memoizedState)||(o0=!0),n.memoizedState=u,n.baseState=m,n.baseQueue=w,o.lastRenderedState=u}if(e=o.interleaved,e!==null){d=e;do p=d.lane,D9.lanes|=p,B1|=p,d=d.next;while(d!==e)}else d===null&&(o.lanes=0);return[n.memoizedState,o.dispatch]}function B7(e){var n=_0(),o=n.queue;if(o===null)throw Error(i(311));o.lastRenderedReducer=e;var u=o.dispatch,d=o.pending,p=n.memoizedState;if(d!==null){o.pending=null;var m=d=d.next;do p=e(p,m.action),m=m.next;while(m!==d);P0(p,n.memoizedState)||(o0=!0),n.memoizedState=p,n.baseQueue===null&&(n.baseState=p),o.lastRenderedState=p}return[p,u]}function Ue(){}function $e(e,n){var o=D9,u=_0(),d=n(),p=!P0(u.memoizedState,d);if(p&&(u.memoizedState=d,o0=!0),u=u.queue,H7(Qe.bind(null,o,u,e),[e]),u.getSnapshot!==n||p||W9!==null&&W9.memoizedState.tag&1){if(o.flags|=2048,d6(9,Ke.bind(null,o,u,d,n),void 0,null),U9===null)throw Error(i(349));j1&30||Ye(o,n,d)}return d}function Ye(e,n,o){e.flags|=16384,e={getSnapshot:n,value:o},n=D9.updateQueue,n===null?(n={lastEffect:null,stores:null},D9.updateQueue=n,n.stores=[e]):(o=n.stores,o===null?n.stores=[e]:o.push(e))}function Ke(e,n,o,u){n.value=o,n.getSnapshot=u,Xe(n)&&Ge(e)}function Qe(e,n,o){return o(function(){Xe(n)&&Ge(e)})}function Xe(e){var n=e.getSnapshot;e=e.value;try{var o=n();return!P0(e,o)}catch{return!0}}function Ge(e){var n=G0(e,1);n!==null&&R0(n,e,1,-1)}function qe(e){var n=B0();return typeof e=="function"&&(e=e()),n.memoizedState=n.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:f6,lastRenderedState:e},n.queue=e,e=e.dispatch=As.bind(null,D9,e),[n.memoizedState,e]}function d6(e,n,o,u){return e={tag:e,create:n,destroy:o,deps:u,next:null},n=D9.updateQueue,n===null?(n={lastEffect:null,stores:null},D9.updateQueue=n,n.lastEffect=e.next=e):(o=n.lastEffect,o===null?n.lastEffect=e.next=e:(u=o.next,o.next=e,e.next=u,n.lastEffect=e)),e}function Ze(){return _0().memoizedState}function C2(e,n,o,u){var d=B0();D9.flags|=e,d.memoizedState=d6(1|n,o,void 0,u===void 0?null:u)}function E2(e,n,o,u){var d=_0();u=u===void 0?null:u;var p=void 0;if(j9!==null){var m=j9.memoizedState;if(p=m.destroy,u!==null&&F7(u,m.deps)){d.memoizedState=d6(n,o,p,u);return}}D9.flags|=e,d.memoizedState=d6(1|n,o,p,u)}function Je(e,n){return C2(8390656,8,e,n)}function H7(e,n){return E2(2048,8,e,n)}function et(e,n){return E2(4,2,e,n)}function tt(e,n){return E2(4,4,e,n)}function nt(e,n){if(typeof n=="function")return e=e(),n(e),function(){n(null)};if(n!=null)return e=e(),n.current=e,function(){n.current=null}}function it(e,n,o){return o=o!=null?o.concat([e]):null,E2(4,4,nt.bind(null,n,e),o)}function V7(){}function rt(e,n){var o=_0();n=n===void 0?null:n;var u=o.memoizedState;return u!==null&&n!==null&&F7(n,u[1])?u[0]:(o.memoizedState=[e,n],e)}function st(e,n){var o=_0();n=n===void 0?null:n;var u=o.memoizedState;return u!==null&&n!==null&&F7(n,u[1])?u[0]:(e=e(),o.memoizedState=[e,n],e)}function ot(e,n,o){return j1&21?(P0(o,n)||(o=F8(),D9.lanes|=o,B1|=o,e.baseState=!0),n):(e.baseState&&(e.baseState=!1,o0=!0),e.memoizedState=o)}function Fs(e,n){var o=x9;x9=o!==0&&4>o?o:4,e(!0);var u=I7.transition;I7.transition={};try{e(!1),n()}finally{x9=o,I7.transition=u}}function lt(){return _0().memoizedState}function Ns(e,n,o){var u=_1(e);if(o={lane:u,action:o,hasEagerState:!1,eagerState:null,next:null},at(e))ut(n,o);else if(o=je(e,n,o,u),o!==null){var d=n0();R0(o,e,u,d),ct(o,n,u)}}function As(e,n,o){var u=_1(e),d={lane:u,action:o,hasEagerState:!1,eagerState:null,next:null};if(at(e))ut(n,d);else{var p=e.alternate;if(e.lanes===0&&(p===null||p.lanes===0)&&(p=n.lastRenderedReducer,p!==null))try{var m=n.lastRenderedState,_=p(m,o);if(d.hasEagerState=!0,d.eagerState=_,P0(_,m)){var w=n.interleaved;w===null?(d.next=d,T7(n)):(d.next=w.next,w.next=d),n.interleaved=d;return}}catch{}finally{}o=je(e,n,d,u),o!==null&&(d=n0(),R0(o,e,u,d),ct(o,n,u))}}function at(e){var n=e.alternate;return e===D9||n!==null&&n===D9}function ut(e,n){u6=M2=!0;var o=e.pending;o===null?n.next=n:(n.next=o.next,o.next=n),e.pending=n}function ct(e,n,o){if(o&4194240){var u=n.lanes;u&=e.pendingLanes,o|=u,n.lanes=o,U3(e,o)}}var P2={readContext:x0,useCallback:X9,useContext:X9,useEffect:X9,useImperativeHandle:X9,useInsertionEffect:X9,useLayoutEffect:X9,useMemo:X9,useReducer:X9,useRef:X9,useState:X9,useDebugValue:X9,useDeferredValue:X9,useTransition:X9,useMutableSource:X9,useSyncExternalStore:X9,useId:X9,unstable_isNewReconciler:!1},js={readContext:x0,useCallback:function(e,n){return B0().memoizedState=[e,n===void 0?null:n],e},useContext:x0,useEffect:Je,useImperativeHandle:function(e,n,o){return o=o!=null?o.concat([e]):null,C2(4194308,4,nt.bind(null,n,e),o)},useLayoutEffect:function(e,n){return C2(4194308,4,e,n)},useInsertionEffect:function(e,n){return C2(4,2,e,n)},useMemo:function(e,n){var o=B0();return n=n===void 0?null:n,e=e(),o.memoizedState=[e,n],e},useReducer:function(e,n,o){var u=B0();return n=o!==void 0?o(n):n,u.memoizedState=u.baseState=n,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:n},u.queue=e,e=e.dispatch=Ns.bind(null,D9,e),[u.memoizedState,e]},useRef:function(e){var n=B0();return e={current:e},n.memoizedState=e},useState:qe,useDebugValue:V7,useDeferredValue:function(e){return B0().memoizedState=e},useTransition:function(){var e=qe(!1),n=e[0];return e=Fs.bind(null,e[1]),B0().memoizedState=e,[n,e]},useMutableSource:function(){},useSyncExternalStore:function(e,n,o){var u=D9,d=B0();if(O9){if(o===void 0)throw Error(i(407));o=o()}else{if(o=n(),U9===null)throw Error(i(349));j1&30||Ye(u,n,o)}d.memoizedState=o;var p={value:o,getSnapshot:n};return d.queue=p,Je(Qe.bind(null,u,p,e),[e]),u.flags|=2048,d6(9,Ke.bind(null,u,p,o,n),void 0,null),o},useId:function(){var e=B0(),n=U9.identifierPrefix;if(O9){var o=X0,u=Q0;o=(u&~(1<<32-E0(u)-1)).toString(32)+o,n=":"+n+"R"+o,o=c6++,0<o&&(n+="H"+o.toString(32)),n+=":"}else o=Is++,n=":"+n+"r"+o.toString(32)+":";return e.memoizedState=n},unstable_isNewReconciler:!1},Bs={readContext:x0,useCallback:rt,useContext:x0,useEffect:H7,useImperativeHandle:it,useInsertionEffect:et,useLayoutEffect:tt,useMemo:st,useReducer:j7,useRef:Ze,useState:function(){return j7(f6)},useDebugValue:V7,useDeferredValue:function(e){var n=_0();return ot(n,j9.memoizedState,e)},useTransition:function(){var e=j7(f6)[0],n=_0().memoizedState;return[e,n]},useMutableSource:Ue,useSyncExternalStore:$e,useId:lt,unstable_isNewReconciler:!1},Hs={readContext:x0,useCallback:rt,useContext:x0,useEffect:H7,useImperativeHandle:it,useInsertionEffect:et,useLayoutEffect:tt,useMemo:st,useReducer:B7,useRef:Ze,useState:function(){return B7(f6)},useDebugValue:V7,useDeferredValue:function(e){var n=_0();return j9===null?n.memoizedState=e:ot(n,j9.memoizedState,e)},useTransition:function(){var e=B7(f6)[0],n=_0().memoizedState;return[e,n]},useMutableSource:Ue,useSyncExternalStore:$e,useId:lt,unstable_isNewReconciler:!1};function O0(e,n){if(e&&e.defaultProps){n=B({},n),e=e.defaultProps;for(var o in e)n[o]===void 0&&(n[o]=e[o]);return n}return n}function W7(e,n,o,u){n=e.memoizedState,o=o(u,n),o=o==null?n:B({},n,o),e.memoizedState=o,e.lanes===0&&(e.updateQueue.baseState=o)}var T2={isMounted:function(e){return(e=e._reactInternals)?D1(e)===e:!1},enqueueSetState:function(e,n,o){e=e._reactInternals;var u=n0(),d=_1(e),p=q0(u,d);p.payload=n,o!=null&&(p.callback=o),n=m1(e,p,d),n!==null&&(R0(n,e,d,u),w2(n,e,d))},enqueueReplaceState:function(e,n,o){e=e._reactInternals;var u=n0(),d=_1(e),p=q0(u,d);p.tag=1,p.payload=n,o!=null&&(p.callback=o),n=m1(e,p,d),n!==null&&(R0(n,e,d,u),w2(n,e,d))},enqueueForceUpdate:function(e,n){e=e._reactInternals;var o=n0(),u=_1(e),d=q0(o,u);d.tag=2,n!=null&&(d.callback=n),n=m1(e,d,u),n!==null&&(R0(n,e,u,o),w2(n,e,u))}};function ft(e,n,o,u,d,p,m){return e=e.stateNode,typeof e.shouldComponentUpdate=="function"?e.shouldComponentUpdate(u,p,m):n.prototype&&n.prototype.isPureReactComponent?!Z5(o,u)||!Z5(d,p):!0}function dt(e,n,o){var u=!1,d=h1,p=n.contextType;return typeof p=="object"&&p!==null?p=x0(p):(d=s0(n)?z1:Q9.current,u=n.contextTypes,p=(u=u!=null)?d5(e,d):h1),n=new n(o,p),e.memoizedState=n.state!==null&&n.state!==void 0?n.state:null,n.updater=T2,e.stateNode=n,n._reactInternals=e,u&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=d,e.__reactInternalMemoizedMaskedChildContext=p),n}function ht(e,n,o,u){e=n.state,typeof n.componentWillReceiveProps=="function"&&n.componentWillReceiveProps(o,u),typeof n.UNSAFE_componentWillReceiveProps=="function"&&n.UNSAFE_componentWillReceiveProps(o,u),n.state!==e&&T2.enqueueReplaceState(n,n.state,null)}function U7(e,n,o,u){var d=e.stateNode;d.props=o,d.state=e.memoizedState,d.refs={},O7(e);var p=n.contextType;typeof p=="object"&&p!==null?d.context=x0(p):(p=s0(n)?z1:Q9.current,d.context=d5(e,p)),d.state=e.memoizedState,p=n.getDerivedStateFromProps,typeof p=="function"&&(W7(e,n,p,o),d.state=e.memoizedState),typeof n.getDerivedStateFromProps=="function"||typeof d.getSnapshotBeforeUpdate=="function"||typeof d.UNSAFE_componentWillMount!="function"&&typeof d.componentWillMount!="function"||(n=d.state,typeof d.componentWillMount=="function"&&d.componentWillMount(),typeof d.UNSAFE_componentWillMount=="function"&&d.UNSAFE_componentWillMount(),n!==d.state&&T2.enqueueReplaceState(d,d.state,null),k2(e,o,d,u),d.state=e.memoizedState),typeof d.componentDidMount=="function"&&(e.flags|=4194308)}function _5(e,n){try{var o="",u=n;do o+=u9(u),u=u.return;while(u);var d=o}catch(p){d=`
Error generating stack: `+p.message+`
`+p.stack}return{value:e,source:n,stack:d,digest:null}}function $7(e,n,o){return{value:e,source:null,stack:o??null,digest:n??null}}function Y7(e,n){try{console.error(n.value)}catch(o){setTimeout(function(){throw o})}}var Vs=typeof WeakMap=="function"?WeakMap:Map;function pt(e,n,o){o=q0(-1,o),o.tag=3,o.payload={element:null};var u=n.value;return o.callback=function(){F2||(F2=!0,l4=u),Y7(e,n)},o}function gt(e,n,o){o=q0(-1,o),o.tag=3;var u=e.type.getDerivedStateFromError;if(typeof u=="function"){var d=n.value;o.payload=function(){return u(d)},o.callback=function(){Y7(e,n)}}var p=e.stateNode;return p!==null&&typeof p.componentDidCatch=="function"&&(o.callback=function(){Y7(e,n),typeof u!="function"&&(v1===null?v1=new Set([this]):v1.add(this));var m=n.stack;this.componentDidCatch(n.value,{componentStack:m!==null?m:""})}),o}function mt(e,n,o){var u=e.pingCache;if(u===null){u=e.pingCache=new Vs;var d=new Set;u.set(n,d)}else d=u.get(n),d===void 0&&(d=new Set,u.set(n,d));d.has(o)||(d.add(o),e=no.bind(null,e,n,o),n.then(e,e))}function yt(e){do{var n;if((n=e.tag===13)&&(n=e.memoizedState,n=n!==null?n.dehydrated!==null:!0),n)return e;e=e.return}while(e!==null);return null}function vt(e,n,o,u,d){return e.mode&1?(e.flags|=65536,e.lanes=d,e):(e===n?e.flags|=65536:(e.flags|=128,o.flags|=131072,o.flags&=-52805,o.tag===1&&(o.alternate===null?o.tag=17:(n=q0(-1,1),n.tag=2,m1(o,n,1))),o.lanes|=1),e)}var Ws=H.ReactCurrentOwner,o0=!1;function t0(e,n,o,u){n.child=e===null?Ae(n,null,o,u):m5(n,e.child,o,u)}function xt(e,n,o,u,d){o=o.render;var p=n.ref;return v5(n,d),u=N7(e,n,o,u,p,d),o=A7(),e!==null&&!o0?(n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~d,Z0(e,n,d)):(O9&&o&&_7(n),n.flags|=1,t0(e,n,u,d),n.child)}function _t(e,n,o,u,d){if(e===null){var p=o.type;return typeof p=="function"&&!p4(p)&&p.defaultProps===void 0&&o.compare===null&&o.defaultProps===void 0?(n.tag=15,n.type=p,wt(e,n,p,u,d)):(e=V2(o.type,null,u,n,n.mode,d),e.ref=n.ref,e.return=n,n.child=e)}if(p=e.child,!(e.lanes&d)){var m=p.memoizedProps;if(o=o.compare,o=o!==null?o:Z5,o(m,u)&&e.ref===n.ref)return Z0(e,n,d)}return n.flags|=1,e=k1(p,u),e.ref=n.ref,e.return=n,n.child=e}function wt(e,n,o,u,d){if(e!==null){var p=e.memoizedProps;if(Z5(p,u)&&e.ref===n.ref)if(o0=!1,n.pendingProps=u=p,(e.lanes&d)!==0)e.flags&131072&&(o0=!0);else return n.lanes=e.lanes,Z0(e,n,d)}return K7(e,n,o,u,d)}function kt(e,n,o){var u=n.pendingProps,d=u.children,p=e!==null?e.memoizedState:null;if(u.mode==="hidden")if(!(n.mode&1))n.memoizedState={baseLanes:0,cachePool:null,transitions:null},b9(k5,m0),m0|=o;else{if(!(o&1073741824))return e=p!==null?p.baseLanes|o:o,n.lanes=n.childLanes=1073741824,n.memoizedState={baseLanes:e,cachePool:null,transitions:null},n.updateQueue=null,b9(k5,m0),m0|=e,null;n.memoizedState={baseLanes:0,cachePool:null,transitions:null},u=p!==null?p.baseLanes:o,b9(k5,m0),m0|=u}else p!==null?(u=p.baseLanes|o,n.memoizedState=null):u=o,b9(k5,m0),m0|=u;return t0(e,n,d,o),n.child}function St(e,n){var o=n.ref;(e===null&&o!==null||e!==null&&e.ref!==o)&&(n.flags|=512,n.flags|=2097152)}function K7(e,n,o,u,d){var p=s0(o)?z1:Q9.current;return p=d5(n,p),v5(n,d),o=N7(e,n,o,u,p,d),u=A7(),e!==null&&!o0?(n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~d,Z0(e,n,d)):(O9&&u&&_7(n),n.flags|=1,t0(e,n,o,d),n.child)}function bt(e,n,o,u,d){if(s0(o)){var p=!0;h2(n)}else p=!1;if(v5(n,d),n.stateNode===null)L2(e,n),dt(n,o,u),U7(n,o,u,d),u=!0;else if(e===null){var m=n.stateNode,_=n.memoizedProps;m.props=_;var w=m.context,O=o.contextType;typeof O=="object"&&O!==null?O=x0(O):(O=s0(o)?z1:Q9.current,O=d5(n,O));var z=o.getDerivedStateFromProps,I=typeof z=="function"||typeof m.getSnapshotBeforeUpdate=="function";I||typeof m.UNSAFE_componentWillReceiveProps!="function"&&typeof m.componentWillReceiveProps!="function"||(_!==u||w!==O)&&ht(n,m,u,O),g1=!1;var R=n.memoizedState;m.state=R,k2(n,u,m,d),w=n.memoizedState,_!==u||R!==w||r0.current||g1?(typeof z=="function"&&(W7(n,o,z,u),w=n.memoizedState),(_=g1||ft(n,o,_,u,R,w,O))?(I||typeof m.UNSAFE_componentWillMount!="function"&&typeof m.componentWillMount!="function"||(typeof m.componentWillMount=="function"&&m.componentWillMount(),typeof m.UNSAFE_componentWillMount=="function"&&m.UNSAFE_componentWillMount()),typeof m.componentDidMount=="function"&&(n.flags|=4194308)):(typeof m.componentDidMount=="function"&&(n.flags|=4194308),n.memoizedProps=u,n.memoizedState=w),m.props=u,m.state=w,m.context=O,u=_):(typeof m.componentDidMount=="function"&&(n.flags|=4194308),u=!1)}else{m=n.stateNode,Be(e,n),_=n.memoizedProps,O=n.type===n.elementType?_:O0(n.type,_),m.props=O,I=n.pendingProps,R=m.context,w=o.contextType,typeof w=="object"&&w!==null?w=x0(w):(w=s0(o)?z1:Q9.current,w=d5(n,w));var V=o.getDerivedStateFromProps;(z=typeof V=="function"||typeof m.getSnapshotBeforeUpdate=="function")||typeof m.UNSAFE_componentWillReceiveProps!="function"&&typeof m.componentWillReceiveProps!="function"||(_!==I||R!==w)&&ht(n,m,u,w),g1=!1,R=n.memoizedState,m.state=R,k2(n,u,m,d);var $=n.memoizedState;_!==I||R!==$||r0.current||g1?(typeof V=="function"&&(W7(n,o,V,u),$=n.memoizedState),(O=g1||ft(n,o,O,u,R,$,w)||!1)?(z||typeof m.UNSAFE_componentWillUpdate!="function"&&typeof m.componentWillUpdate!="function"||(typeof m.componentWillUpdate=="function"&&m.componentWillUpdate(u,$,w),typeof m.UNSAFE_componentWillUpdate=="function"&&m.UNSAFE_componentWillUpdate(u,$,w)),typeof m.componentDidUpdate=="function"&&(n.flags|=4),typeof m.getSnapshotBeforeUpdate=="function"&&(n.flags|=1024)):(typeof m.componentDidUpdate!="function"||_===e.memoizedProps&&R===e.memoizedState||(n.flags|=4),typeof m.getSnapshotBeforeUpdate!="function"||_===e.memoizedProps&&R===e.memoizedState||(n.flags|=1024),n.memoizedProps=u,n.memoizedState=$),m.props=u,m.state=$,m.context=w,u=O):(typeof m.componentDidUpdate!="function"||_===e.memoizedProps&&R===e.memoizedState||(n.flags|=4),typeof m.getSnapshotBeforeUpdate!="function"||_===e.memoizedProps&&R===e.memoizedState||(n.flags|=1024),u=!1)}return Q7(e,n,o,u,p,d)}function Q7(e,n,o,u,d,p){St(e,n);var m=(n.flags&128)!==0;if(!u&&!m)return d&&Te(n,o,!1),Z0(e,n,p);u=n.stateNode,Ws.current=n;var _=m&&typeof o.getDerivedStateFromError!="function"?null:u.render();return n.flags|=1,e!==null&&m?(n.child=m5(n,e.child,null,p),n.child=m5(n,null,_,p)):t0(e,n,_,p),n.memoizedState=u.state,d&&Te(n,o,!0),n.child}function Mt(e){var n=e.stateNode;n.pendingContext?Ee(e,n.pendingContext,n.pendingContext!==n.context):n.context&&Ee(e,n.context,!1),L7(e,n.containerInfo)}function Ct(e,n,o,u,d){return g5(),b7(d),n.flags|=256,t0(e,n,o,u),n.child}var X7={dehydrated:null,treeContext:null,retryLane:0};function G7(e){return{baseLanes:e,cachePool:null,transitions:null}}function Et(e,n,o){var u=n.pendingProps,d=L9.current,p=!1,m=(n.flags&128)!==0,_;if((_=m)||(_=e!==null&&e.memoizedState===null?!1:(d&2)!==0),_?(p=!0,n.flags&=-129):(e===null||e.memoizedState!==null)&&(d|=1),b9(L9,d&1),e===null)return S7(n),e=n.memoizedState,e!==null&&(e=e.dehydrated,e!==null)?(n.mode&1?e.data==="$!"?n.lanes=8:n.lanes=1073741824:n.lanes=1,null):(m=u.children,e=u.fallback,p?(u=n.mode,p=n.child,m={mode:"hidden",children:m},!(u&1)&&p!==null?(p.childLanes=0,p.pendingProps=m):p=W2(m,u,0,null),e=U1(e,u,o,null),p.return=n,e.return=n,p.sibling=e,n.child=p,n.child.memoizedState=G7(o),n.memoizedState=X7,e):q7(n,m));if(d=e.memoizedState,d!==null&&(_=d.dehydrated,_!==null))return Us(e,n,m,u,_,d,o);if(p){p=u.fallback,m=n.mode,d=e.child,_=d.sibling;var w={mode:"hidden",children:u.children};return!(m&1)&&n.child!==d?(u=n.child,u.childLanes=0,u.pendingProps=w,n.deletions=null):(u=k1(d,w),u.subtreeFlags=d.subtreeFlags&14680064),_!==null?p=k1(_,p):(p=U1(p,m,o,null),p.flags|=2),p.return=n,u.return=n,u.sibling=p,n.child=u,u=p,p=n.child,m=e.child.memoizedState,m=m===null?G7(o):{baseLanes:m.baseLanes|o,cachePool:null,transitions:m.transitions},p.memoizedState=m,p.childLanes=e.childLanes&~o,n.memoizedState=X7,u}return p=e.child,e=p.sibling,u=k1(p,{mode:"visible",children:u.children}),!(n.mode&1)&&(u.lanes=o),u.return=n,u.sibling=null,e!==null&&(o=n.deletions,o===null?(n.deletions=[e],n.flags|=16):o.push(e)),n.child=u,n.memoizedState=null,u}function q7(e,n){return n=W2({mode:"visible",children:n},e.mode,0,null),n.return=e,e.child=n}function O2(e,n,o,u){return u!==null&&b7(u),m5(n,e.child,null,o),e=q7(n,n.pendingProps.children),e.flags|=2,n.memoizedState=null,e}function Us(e,n,o,u,d,p,m){if(o)return n.flags&256?(n.flags&=-257,u=$7(Error(i(422))),O2(e,n,m,u)):n.memoizedState!==null?(n.child=e.child,n.flags|=128,null):(p=u.fallback,d=n.mode,u=W2({mode:"visible",children:u.children},d,0,null),p=U1(p,d,m,null),p.flags|=2,u.return=n,p.return=n,u.sibling=p,n.child=u,n.mode&1&&m5(n,e.child,null,m),n.child.memoizedState=G7(m),n.memoizedState=X7,p);if(!(n.mode&1))return O2(e,n,m,null);if(d.data==="$!"){if(u=d.nextSibling&&d.nextSibling.dataset,u)var _=u.dgst;return u=_,p=Error(i(419)),u=$7(p,u,void 0),O2(e,n,m,u)}if(_=(m&e.childLanes)!==0,o0||_){if(u=U9,u!==null){switch(m&-m){case 4:d=2;break;case 16:d=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:d=32;break;case 536870912:d=268435456;break;default:d=0}d=d&(u.suspendedLanes|m)?0:d,d!==0&&d!==p.retryLane&&(p.retryLane=d,G0(e,d),R0(u,e,d,-1))}return h4(),u=$7(Error(i(421))),O2(e,n,m,u)}return d.data==="$?"?(n.flags|=128,n.child=e.child,n=io.bind(null,e),d._reactRetry=n,null):(e=p.treeContext,g0=f1(d.nextSibling),p0=n,O9=!0,T0=null,e!==null&&(y0[v0++]=Q0,y0[v0++]=X0,y0[v0++]=I1,Q0=e.id,X0=e.overflow,I1=n),n=q7(n,u.children),n.flags|=4096,n)}function Pt(e,n,o){e.lanes|=n;var u=e.alternate;u!==null&&(u.lanes|=n),P7(e.return,n,o)}function Z7(e,n,o,u,d){var p=e.memoizedState;p===null?e.memoizedState={isBackwards:n,rendering:null,renderingStartTime:0,last:u,tail:o,tailMode:d}:(p.isBackwards=n,p.rendering=null,p.renderingStartTime=0,p.last=u,p.tail=o,p.tailMode=d)}function Tt(e,n,o){var u=n.pendingProps,d=u.revealOrder,p=u.tail;if(t0(e,n,u.children,o),u=L9.current,u&2)u=u&1|2,n.flags|=128;else{if(e!==null&&e.flags&128)e:for(e=n.child;e!==null;){if(e.tag===13)e.memoizedState!==null&&Pt(e,o,n);else if(e.tag===19)Pt(e,o,n);else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===n)break e;for(;e.sibling===null;){if(e.return===null||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}u&=1}if(b9(L9,u),!(n.mode&1))n.memoizedState=null;else switch(d){case"forwards":for(o=n.child,d=null;o!==null;)e=o.alternate,e!==null&&S2(e)===null&&(d=o),o=o.sibling;o=d,o===null?(d=n.child,n.child=null):(d=o.sibling,o.sibling=null),Z7(n,!1,d,o,p);break;case"backwards":for(o=null,d=n.child,n.child=null;d!==null;){if(e=d.alternate,e!==null&&S2(e)===null){n.child=d;break}e=d.sibling,d.sibling=o,o=d,d=e}Z7(n,!0,o,null,p);break;case"together":Z7(n,!1,null,null,void 0);break;default:n.memoizedState=null}return n.child}function L2(e,n){!(n.mode&1)&&e!==null&&(e.alternate=null,n.alternate=null,n.flags|=2)}function Z0(e,n,o){if(e!==null&&(n.dependencies=e.dependencies),B1|=n.lanes,!(o&n.childLanes))return null;if(e!==null&&n.child!==e.child)throw Error(i(153));if(n.child!==null){for(e=n.child,o=k1(e,e.pendingProps),n.child=o,o.return=n;e.sibling!==null;)e=e.sibling,o=o.sibling=k1(e,e.pendingProps),o.return=n;o.sibling=null}return n.child}function $s(e,n,o){switch(n.tag){case 3:Mt(n),g5();break;case 5:We(n);break;case 1:s0(n.type)&&h2(n);break;case 4:L7(n,n.stateNode.containerInfo);break;case 10:var u=n.type._context,d=n.memoizedProps.value;b9(x2,u._currentValue),u._currentValue=d;break;case 13:if(u=n.memoizedState,u!==null)return u.dehydrated!==null?(b9(L9,L9.current&1),n.flags|=128,null):o&n.child.childLanes?Et(e,n,o):(b9(L9,L9.current&1),e=Z0(e,n,o),e!==null?e.sibling:null);b9(L9,L9.current&1);break;case 19:if(u=(o&n.childLanes)!==0,e.flags&128){if(u)return Tt(e,n,o);n.flags|=128}if(d=n.memoizedState,d!==null&&(d.rendering=null,d.tail=null,d.lastEffect=null),b9(L9,L9.current),u)break;return null;case 22:case 23:return n.lanes=0,kt(e,n,o)}return Z0(e,n,o)}var Ot,J7,Lt,Dt;Ot=function(e,n){for(var o=n.child;o!==null;){if(o.tag===5||o.tag===6)e.appendChild(o.stateNode);else if(o.tag!==4&&o.child!==null){o.child.return=o,o=o.child;continue}if(o===n)break;for(;o.sibling===null;){if(o.return===null||o.return===n)return;o=o.return}o.sibling.return=o.return,o=o.sibling}},J7=function(){},Lt=function(e,n,o,u){var d=e.memoizedProps;if(d!==u){e=n.stateNode,A1(j0.current);var p=null;switch(o){case"input":d=P3(e,d),u=P3(e,u),p=[];break;case"select":d=B({},d,{value:void 0}),u=B({},u,{value:void 0}),p=[];break;case"textarea":d=L3(e,d),u=L3(e,u),p=[];break;default:typeof d.onClick!="function"&&typeof u.onClick=="function"&&(e.onclick=c2)}R3(o,u);var m;o=null;for(O in d)if(!u.hasOwnProperty(O)&&d.hasOwnProperty(O)&&d[O]!=null)if(O==="style"){var _=d[O];for(m in _)_.hasOwnProperty(m)&&(o||(o={}),o[m]="")}else O!=="dangerouslySetInnerHTML"&&O!=="children"&&O!=="suppressContentEditableWarning"&&O!=="suppressHydrationWarning"&&O!=="autoFocus"&&(l.hasOwnProperty(O)?p||(p=[]):(p=p||[]).push(O,null));for(O in u){var w=u[O];if(_=d!=null?d[O]:void 0,u.hasOwnProperty(O)&&w!==_&&(w!=null||_!=null))if(O==="style")if(_){for(m in _)!_.hasOwnProperty(m)||w&&w.hasOwnProperty(m)||(o||(o={}),o[m]="");for(m in w)w.hasOwnProperty(m)&&_[m]!==w[m]&&(o||(o={}),o[m]=w[m])}else o||(p||(p=[]),p.push(O,o)),o=w;else O==="dangerouslySetInnerHTML"?(w=w?w.__html:void 0,_=_?_.__html:void 0,w!=null&&_!==w&&(p=p||[]).push(O,w)):O==="children"?typeof w!="string"&&typeof w!="number"||(p=p||[]).push(O,""+w):O!=="suppressContentEditableWarning"&&O!=="suppressHydrationWarning"&&(l.hasOwnProperty(O)?(w!=null&&O==="onScroll"&&M9("scroll",e),p||_===w||(p=[])):(p=p||[]).push(O,w))}o&&(p=p||[]).push("style",o);var O=p;(n.updateQueue=O)&&(n.flags|=4)}},Dt=function(e,n,o,u){o!==u&&(n.flags|=4)};function h6(e,n){if(!O9)switch(e.tailMode){case"hidden":n=e.tail;for(var o=null;n!==null;)n.alternate!==null&&(o=n),n=n.sibling;o===null?e.tail=null:o.sibling=null;break;case"collapsed":o=e.tail;for(var u=null;o!==null;)o.alternate!==null&&(u=o),o=o.sibling;u===null?n||e.tail===null?e.tail=null:e.tail.sibling=null:u.sibling=null}}function G9(e){var n=e.alternate!==null&&e.alternate.child===e.child,o=0,u=0;if(n)for(var d=e.child;d!==null;)o|=d.lanes|d.childLanes,u|=d.subtreeFlags&14680064,u|=d.flags&14680064,d.return=e,d=d.sibling;else for(d=e.child;d!==null;)o|=d.lanes|d.childLanes,u|=d.subtreeFlags,u|=d.flags,d.return=e,d=d.sibling;return e.subtreeFlags|=u,e.childLanes=o,n}function Ys(e,n,o){var u=n.pendingProps;switch(w7(n),n.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return G9(n),null;case 1:return s0(n.type)&&d2(),G9(n),null;case 3:return u=n.stateNode,x5(),C9(r0),C9(Q9),z7(),u.pendingContext&&(u.context=u.pendingContext,u.pendingContext=null),(e===null||e.child===null)&&(y2(n)?n.flags|=4:e===null||e.memoizedState.isDehydrated&&!(n.flags&256)||(n.flags|=1024,T0!==null&&(c4(T0),T0=null))),J7(e,n),G9(n),null;case 5:D7(n);var d=A1(a6.current);if(o=n.type,e!==null&&n.stateNode!=null)Lt(e,n,o,u,d),e.ref!==n.ref&&(n.flags|=512,n.flags|=2097152);else{if(!u){if(n.stateNode===null)throw Error(i(166));return G9(n),null}if(e=A1(j0.current),y2(n)){u=n.stateNode,o=n.type;var p=n.memoizedProps;switch(u[A0]=n,u[i6]=p,e=(n.mode&1)!==0,o){case"dialog":M9("cancel",u),M9("close",u);break;case"iframe":case"object":case"embed":M9("load",u);break;case"video":case"audio":for(d=0;d<e6.length;d++)M9(e6[d],u);break;case"source":M9("error",u);break;case"img":case"image":case"link":M9("error",u),M9("load",u);break;case"details":M9("toggle",u);break;case"input":d8(u,p),M9("invalid",u);break;case"select":u._wrapperState={wasMultiple:!!p.multiple},M9("invalid",u);break;case"textarea":g8(u,p),M9("invalid",u)}R3(o,p),d=null;for(var m in p)if(p.hasOwnProperty(m)){var _=p[m];m==="children"?typeof _=="string"?u.textContent!==_&&(p.suppressHydrationWarning!==!0&&u2(u.textContent,_,e),d=["children",_]):typeof _=="number"&&u.textContent!==""+_&&(p.suppressHydrationWarning!==!0&&u2(u.textContent,_,e),d=["children",""+_]):l.hasOwnProperty(m)&&_!=null&&m==="onScroll"&&M9("scroll",u)}switch(o){case"input":B6(u),p8(u,p,!0);break;case"textarea":B6(u),y8(u);break;case"select":case"option":break;default:typeof p.onClick=="function"&&(u.onclick=c2)}u=d,n.updateQueue=u,u!==null&&(n.flags|=4)}else{m=d.nodeType===9?d:d.ownerDocument,e==="http://www.w3.org/1999/xhtml"&&(e=v8(o)),e==="http://www.w3.org/1999/xhtml"?o==="script"?(e=m.createElement("div"),e.innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):typeof u.is=="string"?e=m.createElement(o,{is:u.is}):(e=m.createElement(o),o==="select"&&(m=e,u.multiple?m.multiple=!0:u.size&&(m.size=u.size))):e=m.createElementNS(e,o),e[A0]=n,e[i6]=u,Ot(e,n,!1,!1),n.stateNode=e;e:{switch(m=z3(o,u),o){case"dialog":M9("cancel",e),M9("close",e),d=u;break;case"iframe":case"object":case"embed":M9("load",e),d=u;break;case"video":case"audio":for(d=0;d<e6.length;d++)M9(e6[d],e);d=u;break;case"source":M9("error",e),d=u;break;case"img":case"image":case"link":M9("error",e),M9("load",e),d=u;break;case"details":M9("toggle",e),d=u;break;case"input":d8(e,u),d=P3(e,u),M9("invalid",e);break;case"option":d=u;break;case"select":e._wrapperState={wasMultiple:!!u.multiple},d=B({},u,{value:void 0}),M9("invalid",e);break;case"textarea":g8(e,u),d=L3(e,u),M9("invalid",e);break;default:d=u}R3(o,d),_=d;for(p in _)if(_.hasOwnProperty(p)){var w=_[p];p==="style"?w8(e,w):p==="dangerouslySetInnerHTML"?(w=w?w.__html:void 0,w!=null&&x8(e,w)):p==="children"?typeof w=="string"?(o!=="textarea"||w!=="")&&I5(e,w):typeof w=="number"&&I5(e,""+w):p!=="suppressContentEditableWarning"&&p!=="suppressHydrationWarning"&&p!=="autoFocus"&&(l.hasOwnProperty(p)?w!=null&&p==="onScroll"&&M9("scroll",e):w!=null&&A(e,p,w,m))}switch(o){case"input":B6(e),p8(e,u,!1);break;case"textarea":B6(e),y8(e);break;case"option":u.value!=null&&e.setAttribute("value",""+v9(u.value));break;case"select":e.multiple=!!u.multiple,p=u.value,p!=null?e5(e,!!u.multiple,p,!1):u.defaultValue!=null&&e5(e,!!u.multiple,u.defaultValue,!0);break;default:typeof d.onClick=="function"&&(e.onclick=c2)}switch(o){case"button":case"input":case"select":case"textarea":u=!!u.autoFocus;break e;case"img":u=!0;break e;default:u=!1}}u&&(n.flags|=4)}n.ref!==null&&(n.flags|=512,n.flags|=2097152)}return G9(n),null;case 6:if(e&&n.stateNode!=null)Dt(e,n,e.memoizedProps,u);else{if(typeof u!="string"&&n.stateNode===null)throw Error(i(166));if(o=A1(a6.current),A1(j0.current),y2(n)){if(u=n.stateNode,o=n.memoizedProps,u[A0]=n,(p=u.nodeValue!==o)&&(e=p0,e!==null))switch(e.tag){case 3:u2(u.nodeValue,o,(e.mode&1)!==0);break;case 5:e.memoizedProps.suppressHydrationWarning!==!0&&u2(u.nodeValue,o,(e.mode&1)!==0)}p&&(n.flags|=4)}else u=(o.nodeType===9?o:o.ownerDocument).createTextNode(u),u[A0]=n,n.stateNode=u}return G9(n),null;case 13:if(C9(L9),u=n.memoizedState,e===null||e.memoizedState!==null&&e.memoizedState.dehydrated!==null){if(O9&&g0!==null&&n.mode&1&&!(n.flags&128))Ie(),g5(),n.flags|=98560,p=!1;else if(p=y2(n),u!==null&&u.dehydrated!==null){if(e===null){if(!p)throw Error(i(318));if(p=n.memoizedState,p=p!==null?p.dehydrated:null,!p)throw Error(i(317));p[A0]=n}else g5(),!(n.flags&128)&&(n.memoizedState=null),n.flags|=4;G9(n),p=!1}else T0!==null&&(c4(T0),T0=null),p=!0;if(!p)return n.flags&65536?n:null}return n.flags&128?(n.lanes=o,n):(u=u!==null,u!==(e!==null&&e.memoizedState!==null)&&u&&(n.child.flags|=8192,n.mode&1&&(e===null||L9.current&1?B9===0&&(B9=3):h4())),n.updateQueue!==null&&(n.flags|=4),G9(n),null);case 4:return x5(),J7(e,n),e===null&&t6(n.stateNode.containerInfo),G9(n),null;case 10:return E7(n.type._context),G9(n),null;case 17:return s0(n.type)&&d2(),G9(n),null;case 19:if(C9(L9),p=n.memoizedState,p===null)return G9(n),null;if(u=(n.flags&128)!==0,m=p.rendering,m===null)if(u)h6(p,!1);else{if(B9!==0||e!==null&&e.flags&128)for(e=n.child;e!==null;){if(m=S2(e),m!==null){for(n.flags|=128,h6(p,!1),u=m.updateQueue,u!==null&&(n.updateQueue=u,n.flags|=4),n.subtreeFlags=0,u=o,o=n.child;o!==null;)p=o,e=u,p.flags&=14680066,m=p.alternate,m===null?(p.childLanes=0,p.lanes=e,p.child=null,p.subtreeFlags=0,p.memoizedProps=null,p.memoizedState=null,p.updateQueue=null,p.dependencies=null,p.stateNode=null):(p.childLanes=m.childLanes,p.lanes=m.lanes,p.child=m.child,p.subtreeFlags=0,p.deletions=null,p.memoizedProps=m.memoizedProps,p.memoizedState=m.memoizedState,p.updateQueue=m.updateQueue,p.type=m.type,e=m.dependencies,p.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext}),o=o.sibling;return b9(L9,L9.current&1|2),n.child}e=e.sibling}p.tail!==null&&I9()>S5&&(n.flags|=128,u=!0,h6(p,!1),n.lanes=4194304)}else{if(!u)if(e=S2(m),e!==null){if(n.flags|=128,u=!0,o=e.updateQueue,o!==null&&(n.updateQueue=o,n.flags|=4),h6(p,!0),p.tail===null&&p.tailMode==="hidden"&&!m.alternate&&!O9)return G9(n),null}else 2*I9()-p.renderingStartTime>S5&&o!==1073741824&&(n.flags|=128,u=!0,h6(p,!1),n.lanes=4194304);p.isBackwards?(m.sibling=n.child,n.child=m):(o=p.last,o!==null?o.sibling=m:n.child=m,p.last=m)}return p.tail!==null?(n=p.tail,p.rendering=n,p.tail=n.sibling,p.renderingStartTime=I9(),n.sibling=null,o=L9.current,b9(L9,u?o&1|2:o&1),n):(G9(n),null);case 22:case 23:return d4(),u=n.memoizedState!==null,e!==null&&e.memoizedState!==null!==u&&(n.flags|=8192),u&&n.mode&1?m0&1073741824&&(G9(n),n.subtreeFlags&6&&(n.flags|=8192)):G9(n),null;case 24:return null;case 25:return null}throw Error(i(156,n.tag))}function Ks(e,n){switch(w7(n),n.tag){case 1:return s0(n.type)&&d2(),e=n.flags,e&65536?(n.flags=e&-65537|128,n):null;case 3:return x5(),C9(r0),C9(Q9),z7(),e=n.flags,e&65536&&!(e&128)?(n.flags=e&-65537|128,n):null;case 5:return D7(n),null;case 13:if(C9(L9),e=n.memoizedState,e!==null&&e.dehydrated!==null){if(n.alternate===null)throw Error(i(340));g5()}return e=n.flags,e&65536?(n.flags=e&-65537|128,n):null;case 19:return C9(L9),null;case 4:return x5(),null;case 10:return E7(n.type._context),null;case 22:case 23:return d4(),null;case 24:return null;default:return null}}var D2=!1,q9=!1,Qs=typeof WeakSet=="function"?WeakSet:Set,U=null;function w5(e,n){var o=e.ref;if(o!==null)if(typeof o=="function")try{o(null)}catch(u){z9(e,n,u)}else o.current=null}function e4(e,n,o){try{o()}catch(u){z9(e,n,u)}}var Rt=!1;function Xs(e,n){if(d7=Z6,e=fe(),r7(e)){if("selectionStart"in e)var o={start:e.selectionStart,end:e.selectionEnd};else e:{o=(o=e.ownerDocument)&&o.defaultView||window;var u=o.getSelection&&o.getSelection();if(u&&u.rangeCount!==0){o=u.anchorNode;var d=u.anchorOffset,p=u.focusNode;u=u.focusOffset;try{o.nodeType,p.nodeType}catch{o=null;break e}var m=0,_=-1,w=-1,O=0,z=0,I=e,R=null;t:for(;;){for(var V;I!==o||d!==0&&I.nodeType!==3||(_=m+d),I!==p||u!==0&&I.nodeType!==3||(w=m+u),I.nodeType===3&&(m+=I.nodeValue.length),(V=I.firstChild)!==null;)R=I,I=V;for(;;){if(I===e)break t;if(R===o&&++O===d&&(_=m),R===p&&++z===u&&(w=m),(V=I.nextSibling)!==null)break;I=R,R=I.parentNode}I=V}o=_===-1||w===-1?null:{start:_,end:w}}else o=null}o=o||{start:0,end:0}}else o=null;for(h7={focusedElem:e,selectionRange:o},Z6=!1,U=n;U!==null;)if(n=U,e=n.child,(n.subtreeFlags&1028)!==0&&e!==null)e.return=n,U=e;else for(;U!==null;){n=U;try{var $=n.alternate;if(n.flags&1024)switch(n.tag){case 0:case 11:case 15:break;case 1:if($!==null){var K=$.memoizedProps,F9=$.memoizedState,E=n.stateNode,S=E.getSnapshotBeforeUpdate(n.elementType===n.type?K:O0(n.type,K),F9);E.__reactInternalSnapshotBeforeUpdate=S}break;case 3:var P=n.stateNode.containerInfo;P.nodeType===1?P.textContent="":P.nodeType===9&&P.documentElement&&P.removeChild(P.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(i(163))}}catch(N){z9(n,n.return,N)}if(e=n.sibling,e!==null){e.return=n.return,U=e;break}U=n.return}return $=Rt,Rt=!1,$}function p6(e,n,o){var u=n.updateQueue;if(u=u!==null?u.lastEffect:null,u!==null){var d=u=u.next;do{if((d.tag&e)===e){var p=d.destroy;d.destroy=void 0,p!==void 0&&e4(n,o,p)}d=d.next}while(d!==u)}}function R2(e,n){if(n=n.updateQueue,n=n!==null?n.lastEffect:null,n!==null){var o=n=n.next;do{if((o.tag&e)===e){var u=o.create;o.destroy=u()}o=o.next}while(o!==n)}}function t4(e){var n=e.ref;if(n!==null){var o=e.stateNode;switch(e.tag){case 5:e=o;break;default:e=o}typeof n=="function"?n(e):n.current=e}}function zt(e){var n=e.alternate;n!==null&&(e.alternate=null,zt(n)),e.child=null,e.deletions=null,e.sibling=null,e.tag===5&&(n=e.stateNode,n!==null&&(delete n[A0],delete n[i6],delete n[y7],delete n[Ls],delete n[Ds])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function It(e){return e.tag===5||e.tag===3||e.tag===4}function Ft(e){e:for(;;){for(;e.sibling===null;){if(e.return===null||It(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;e.tag!==5&&e.tag!==6&&e.tag!==18;){if(e.flags&2||e.child===null||e.tag===4)continue e;e.child.return=e,e=e.child}if(!(e.flags&2))return e.stateNode}}function n4(e,n,o){var u=e.tag;if(u===5||u===6)e=e.stateNode,n?o.nodeType===8?o.parentNode.insertBefore(e,n):o.insertBefore(e,n):(o.nodeType===8?(n=o.parentNode,n.insertBefore(e,o)):(n=o,n.appendChild(e)),o=o._reactRootContainer,o!=null||n.onclick!==null||(n.onclick=c2));else if(u!==4&&(e=e.child,e!==null))for(n4(e,n,o),e=e.sibling;e!==null;)n4(e,n,o),e=e.sibling}function i4(e,n,o){var u=e.tag;if(u===5||u===6)e=e.stateNode,n?o.insertBefore(e,n):o.appendChild(e);else if(u!==4&&(e=e.child,e!==null))for(i4(e,n,o),e=e.sibling;e!==null;)i4(e,n,o),e=e.sibling}var Y9=null,L0=!1;function y1(e,n,o){for(o=o.child;o!==null;)Nt(e,n,o),o=o.sibling}function Nt(e,n,o){if(N0&&typeof N0.onCommitFiberUnmount=="function")try{N0.onCommitFiberUnmount(Y6,o)}catch{}switch(o.tag){case 5:q9||w5(o,n);case 6:var u=Y9,d=L0;Y9=null,y1(e,n,o),Y9=u,L0=d,Y9!==null&&(L0?(e=Y9,o=o.stateNode,e.nodeType===8?e.parentNode.removeChild(o):e.removeChild(o)):Y9.removeChild(o.stateNode));break;case 18:Y9!==null&&(L0?(e=Y9,o=o.stateNode,e.nodeType===8?m7(e.parentNode,o):e.nodeType===1&&m7(e,o),Y5(e)):m7(Y9,o.stateNode));break;case 4:u=Y9,d=L0,Y9=o.stateNode.containerInfo,L0=!0,y1(e,n,o),Y9=u,L0=d;break;case 0:case 11:case 14:case 15:if(!q9&&(u=o.updateQueue,u!==null&&(u=u.lastEffect,u!==null))){d=u=u.next;do{var p=d,m=p.destroy;p=p.tag,m!==void 0&&(p&2||p&4)&&e4(o,n,m),d=d.next}while(d!==u)}y1(e,n,o);break;case 1:if(!q9&&(w5(o,n),u=o.stateNode,typeof u.componentWillUnmount=="function"))try{u.props=o.memoizedProps,u.state=o.memoizedState,u.componentWillUnmount()}catch(_){z9(o,n,_)}y1(e,n,o);break;case 21:y1(e,n,o);break;case 22:o.mode&1?(q9=(u=q9)||o.memoizedState!==null,y1(e,n,o),q9=u):y1(e,n,o);break;default:y1(e,n,o)}}function At(e){var n=e.updateQueue;if(n!==null){e.updateQueue=null;var o=e.stateNode;o===null&&(o=e.stateNode=new Qs),n.forEach(function(u){var d=ro.bind(null,e,u);o.has(u)||(o.add(u),u.then(d,d))})}}function D0(e,n){var o=n.deletions;if(o!==null)for(var u=0;u<o.length;u++){var d=o[u];try{var p=e,m=n,_=m;e:for(;_!==null;){switch(_.tag){case 5:Y9=_.stateNode,L0=!1;break e;case 3:Y9=_.stateNode.containerInfo,L0=!0;break e;case 4:Y9=_.stateNode.containerInfo,L0=!0;break e}_=_.return}if(Y9===null)throw Error(i(160));Nt(p,m,d),Y9=null,L0=!1;var w=d.alternate;w!==null&&(w.return=null),d.return=null}catch(O){z9(d,n,O)}}if(n.subtreeFlags&12854)for(n=n.child;n!==null;)jt(n,e),n=n.sibling}function jt(e,n){var o=e.alternate,u=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(D0(n,e),H0(e),u&4){try{p6(3,e,e.return),R2(3,e)}catch(K){z9(e,e.return,K)}try{p6(5,e,e.return)}catch(K){z9(e,e.return,K)}}break;case 1:D0(n,e),H0(e),u&512&&o!==null&&w5(o,o.return);break;case 5:if(D0(n,e),H0(e),u&512&&o!==null&&w5(o,o.return),e.flags&32){var d=e.stateNode;try{I5(d,"")}catch(K){z9(e,e.return,K)}}if(u&4&&(d=e.stateNode,d!=null)){var p=e.memoizedProps,m=o!==null?o.memoizedProps:p,_=e.type,w=e.updateQueue;if(e.updateQueue=null,w!==null)try{_==="input"&&p.type==="radio"&&p.name!=null&&h8(d,p),z3(_,m);var O=z3(_,p);for(m=0;m<w.length;m+=2){var z=w[m],I=w[m+1];z==="style"?w8(d,I):z==="dangerouslySetInnerHTML"?x8(d,I):z==="children"?I5(d,I):A(d,z,I,O)}switch(_){case"input":T3(d,p);break;case"textarea":m8(d,p);break;case"select":var R=d._wrapperState.wasMultiple;d._wrapperState.wasMultiple=!!p.multiple;var V=p.value;V!=null?e5(d,!!p.multiple,V,!1):R!==!!p.multiple&&(p.defaultValue!=null?e5(d,!!p.multiple,p.defaultValue,!0):e5(d,!!p.multiple,p.multiple?[]:"",!1))}d[i6]=p}catch(K){z9(e,e.return,K)}}break;case 6:if(D0(n,e),H0(e),u&4){if(e.stateNode===null)throw Error(i(162));d=e.stateNode,p=e.memoizedProps;try{d.nodeValue=p}catch(K){z9(e,e.return,K)}}break;case 3:if(D0(n,e),H0(e),u&4&&o!==null&&o.memoizedState.isDehydrated)try{Y5(n.containerInfo)}catch(K){z9(e,e.return,K)}break;case 4:D0(n,e),H0(e);break;case 13:D0(n,e),H0(e),d=e.child,d.flags&8192&&(p=d.memoizedState!==null,d.stateNode.isHidden=p,!p||d.alternate!==null&&d.alternate.memoizedState!==null||(o4=I9())),u&4&&At(e);break;case 22:if(z=o!==null&&o.memoizedState!==null,e.mode&1?(q9=(O=q9)||z,D0(n,e),q9=O):D0(n,e),H0(e),u&8192){if(O=e.memoizedState!==null,(e.stateNode.isHidden=O)&&!z&&e.mode&1)for(U=e,z=e.child;z!==null;){for(I=U=z;U!==null;){switch(R=U,V=R.child,R.tag){case 0:case 11:case 14:case 15:p6(4,R,R.return);break;case 1:w5(R,R.return);var $=R.stateNode;if(typeof $.componentWillUnmount=="function"){u=R,o=R.return;try{n=u,$.props=n.memoizedProps,$.state=n.memoizedState,$.componentWillUnmount()}catch(K){z9(u,o,K)}}break;case 5:w5(R,R.return);break;case 22:if(R.memoizedState!==null){Vt(I);continue}}V!==null?(V.return=R,U=V):Vt(I)}z=z.sibling}e:for(z=null,I=e;;){if(I.tag===5){if(z===null){z=I;try{d=I.stateNode,O?(p=d.style,typeof p.setProperty=="function"?p.setProperty("display","none","important"):p.display="none"):(_=I.stateNode,w=I.memoizedProps.style,m=w!=null&&w.hasOwnProperty("display")?w.display:null,_.style.display=_8("display",m))}catch(K){z9(e,e.return,K)}}}else if(I.tag===6){if(z===null)try{I.stateNode.nodeValue=O?"":I.memoizedProps}catch(K){z9(e,e.return,K)}}else if((I.tag!==22&&I.tag!==23||I.memoizedState===null||I===e)&&I.child!==null){I.child.return=I,I=I.child;continue}if(I===e)break e;for(;I.sibling===null;){if(I.return===null||I.return===e)break e;z===I&&(z=null),I=I.return}z===I&&(z=null),I.sibling.return=I.return,I=I.sibling}}break;case 19:D0(n,e),H0(e),u&4&&At(e);break;case 21:break;default:D0(n,e),H0(e)}}function H0(e){var n=e.flags;if(n&2){try{e:{for(var o=e.return;o!==null;){if(It(o)){var u=o;break e}o=o.return}throw Error(i(160))}switch(u.tag){case 5:var d=u.stateNode;u.flags&32&&(I5(d,""),u.flags&=-33);var p=Ft(e);i4(e,p,d);break;case 3:case 4:var m=u.stateNode.containerInfo,_=Ft(e);n4(e,_,m);break;default:throw Error(i(161))}}catch(w){z9(e,e.return,w)}e.flags&=-3}n&4096&&(e.flags&=-4097)}function Gs(e,n,o){U=e,Bt(e)}function Bt(e,n,o){for(var u=(e.mode&1)!==0;U!==null;){var d=U,p=d.child;if(d.tag===22&&u){var m=d.memoizedState!==null||D2;if(!m){var _=d.alternate,w=_!==null&&_.memoizedState!==null||q9;_=D2;var O=q9;if(D2=m,(q9=w)&&!O)for(U=d;U!==null;)m=U,w=m.child,m.tag===22&&m.memoizedState!==null?Wt(d):w!==null?(w.return=m,U=w):Wt(d);for(;p!==null;)U=p,Bt(p),p=p.sibling;U=d,D2=_,q9=O}Ht(e)}else d.subtreeFlags&8772&&p!==null?(p.return=d,U=p):Ht(e)}}function Ht(e){for(;U!==null;){var n=U;if(n.flags&8772){var o=n.alternate;try{if(n.flags&8772)switch(n.tag){case 0:case 11:case 15:q9||R2(5,n);break;case 1:var u=n.stateNode;if(n.flags&4&&!q9)if(o===null)u.componentDidMount();else{var d=n.elementType===n.type?o.memoizedProps:O0(n.type,o.memoizedProps);u.componentDidUpdate(d,o.memoizedState,u.__reactInternalSnapshotBeforeUpdate)}var p=n.updateQueue;p!==null&&Ve(n,p,u);break;case 3:var m=n.updateQueue;if(m!==null){if(o=null,n.child!==null)switch(n.child.tag){case 5:o=n.child.stateNode;break;case 1:o=n.child.stateNode}Ve(n,m,o)}break;case 5:var _=n.stateNode;if(o===null&&n.flags&4){o=_;var w=n.memoizedProps;switch(n.type){case"button":case"input":case"select":case"textarea":w.autoFocus&&o.focus();break;case"img":w.src&&(o.src=w.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(n.memoizedState===null){var O=n.alternate;if(O!==null){var z=O.memoizedState;if(z!==null){var I=z.dehydrated;I!==null&&Y5(I)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(i(163))}q9||n.flags&512&&t4(n)}catch(R){z9(n,n.return,R)}}if(n===e){U=null;break}if(o=n.sibling,o!==null){o.return=n.return,U=o;break}U=n.return}}function Vt(e){for(;U!==null;){var n=U;if(n===e){U=null;break}var o=n.sibling;if(o!==null){o.return=n.return,U=o;break}U=n.return}}function Wt(e){for(;U!==null;){var n=U;try{switch(n.tag){case 0:case 11:case 15:var o=n.return;try{R2(4,n)}catch(w){z9(n,o,w)}break;case 1:var u=n.stateNode;if(typeof u.componentDidMount=="function"){var d=n.return;try{u.componentDidMount()}catch(w){z9(n,d,w)}}var p=n.return;try{t4(n)}catch(w){z9(n,p,w)}break;case 5:var m=n.return;try{t4(n)}catch(w){z9(n,m,w)}}}catch(w){z9(n,n.return,w)}if(n===e){U=null;break}var _=n.sibling;if(_!==null){_.return=n.return,U=_;break}U=n.return}}var qs=Math.ceil,z2=H.ReactCurrentDispatcher,r4=H.ReactCurrentOwner,w0=H.ReactCurrentBatchConfig,d9=0,U9=null,A9=null,K9=0,m0=0,k5=d1(0),B9=0,g6=null,B1=0,I2=0,s4=0,m6=null,l0=null,o4=0,S5=1/0,J0=null,F2=!1,l4=null,v1=null,N2=!1,x1=null,A2=0,y6=0,a4=null,j2=-1,B2=0;function n0(){return d9&6?I9():j2!==-1?j2:j2=I9()}function _1(e){return e.mode&1?d9&2&&K9!==0?K9&-K9:zs.transition!==null?(B2===0&&(B2=F8()),B2):(e=x9,e!==0||(e=window.event,e=e===void 0?16:$8(e.type)),e):1}function R0(e,n,o,u){if(50<y6)throw y6=0,a4=null,Error(i(185));H5(e,o,u),(!(d9&2)||e!==U9)&&(e===U9&&(!(d9&2)&&(I2|=o),B9===4&&w1(e,K9)),a0(e,u),o===1&&d9===0&&!(n.mode&1)&&(S5=I9()+500,p2&&p1()))}function a0(e,n){var o=e.callbackNode;zr(e,n);var u=X6(e,e===U9?K9:0);if(u===0)o!==null&&R8(o),e.callbackNode=null,e.callbackPriority=0;else if(n=u&-u,e.callbackPriority!==n){if(o!=null&&R8(o),n===1)e.tag===0?Rs($t.bind(null,e)):Oe($t.bind(null,e)),Ts(function(){!(d9&6)&&p1()}),o=null;else{switch(N8(u)){case 1:o=H3;break;case 4:o=z8;break;case 16:o=$6;break;case 536870912:o=I8;break;default:o=$6}o=Jt(o,Ut.bind(null,e))}e.callbackPriority=n,e.callbackNode=o}}function Ut(e,n){if(j2=-1,B2=0,d9&6)throw Error(i(327));var o=e.callbackNode;if(b5()&&e.callbackNode!==o)return null;var u=X6(e,e===U9?K9:0);if(u===0)return null;if(u&30||u&e.expiredLanes||n)n=H2(e,u);else{n=u;var d=d9;d9|=2;var p=Kt();(U9!==e||K9!==n)&&(J0=null,S5=I9()+500,V1(e,n));do try{eo();break}catch(_){Yt(e,_)}while(!0);C7(),z2.current=p,d9=d,A9!==null?n=0:(U9=null,K9=0,n=B9)}if(n!==0){if(n===2&&(d=V3(e),d!==0&&(u=d,n=u4(e,d))),n===1)throw o=g6,V1(e,0),w1(e,u),a0(e,I9()),o;if(n===6)w1(e,u);else{if(d=e.current.alternate,!(u&30)&&!Zs(d)&&(n=H2(e,u),n===2&&(p=V3(e),p!==0&&(u=p,n=u4(e,p))),n===1))throw o=g6,V1(e,0),w1(e,u),a0(e,I9()),o;switch(e.finishedWork=d,e.finishedLanes=u,n){case 0:case 1:throw Error(i(345));case 2:W1(e,l0,J0);break;case 3:if(w1(e,u),(u&130023424)===u&&(n=o4+500-I9(),10<n)){if(X6(e,0)!==0)break;if(d=e.suspendedLanes,(d&u)!==u){n0(),e.pingedLanes|=e.suspendedLanes&d;break}e.timeoutHandle=g7(W1.bind(null,e,l0,J0),n);break}W1(e,l0,J0);break;case 4:if(w1(e,u),(u&4194240)===u)break;for(n=e.eventTimes,d=-1;0<u;){var m=31-E0(u);p=1<<m,m=n[m],m>d&&(d=m),u&=~p}if(u=d,u=I9()-u,u=(120>u?120:480>u?480:1080>u?1080:1920>u?1920:3e3>u?3e3:4320>u?4320:1960*qs(u/1960))-u,10<u){e.timeoutHandle=g7(W1.bind(null,e,l0,J0),u);break}W1(e,l0,J0);break;case 5:W1(e,l0,J0);break;default:throw Error(i(329))}}}return a0(e,I9()),e.callbackNode===o?Ut.bind(null,e):null}function u4(e,n){var o=m6;return e.current.memoizedState.isDehydrated&&(V1(e,n).flags|=256),e=H2(e,n),e!==2&&(n=l0,l0=o,n!==null&&c4(n)),e}function c4(e){l0===null?l0=e:l0.push.apply(l0,e)}function Zs(e){for(var n=e;;){if(n.flags&16384){var o=n.updateQueue;if(o!==null&&(o=o.stores,o!==null))for(var u=0;u<o.length;u++){var d=o[u],p=d.getSnapshot;d=d.value;try{if(!P0(p(),d))return!1}catch{return!1}}}if(o=n.child,n.subtreeFlags&16384&&o!==null)o.return=n,n=o;else{if(n===e)break;for(;n.sibling===null;){if(n.return===null||n.return===e)return!0;n=n.return}n.sibling.return=n.return,n=n.sibling}}return!0}function w1(e,n){for(n&=~s4,n&=~I2,e.suspendedLanes|=n,e.pingedLanes&=~n,e=e.expirationTimes;0<n;){var o=31-E0(n),u=1<<o;e[o]=-1,n&=~u}}function $t(e){if(d9&6)throw Error(i(327));b5();var n=X6(e,0);if(!(n&1))return a0(e,I9()),null;var o=H2(e,n);if(e.tag!==0&&o===2){var u=V3(e);u!==0&&(n=u,o=u4(e,u))}if(o===1)throw o=g6,V1(e,0),w1(e,n),a0(e,I9()),o;if(o===6)throw Error(i(345));return e.finishedWork=e.current.alternate,e.finishedLanes=n,W1(e,l0,J0),a0(e,I9()),null}function f4(e,n){var o=d9;d9|=1;try{return e(n)}finally{d9=o,d9===0&&(S5=I9()+500,p2&&p1())}}function H1(e){x1!==null&&x1.tag===0&&!(d9&6)&&b5();var n=d9;d9|=1;var o=w0.transition,u=x9;try{if(w0.transition=null,x9=1,e)return e()}finally{x9=u,w0.transition=o,d9=n,!(d9&6)&&p1()}}function d4(){m0=k5.current,C9(k5)}function V1(e,n){e.finishedWork=null,e.finishedLanes=0;var o=e.timeoutHandle;if(o!==-1&&(e.timeoutHandle=-1,Ps(o)),A9!==null)for(o=A9.return;o!==null;){var u=o;switch(w7(u),u.tag){case 1:u=u.type.childContextTypes,u!=null&&d2();break;case 3:x5(),C9(r0),C9(Q9),z7();break;case 5:D7(u);break;case 4:x5();break;case 13:C9(L9);break;case 19:C9(L9);break;case 10:E7(u.type._context);break;case 22:case 23:d4()}o=o.return}if(U9=e,A9=e=k1(e.current,null),K9=m0=n,B9=0,g6=null,s4=I2=B1=0,l0=m6=null,N1!==null){for(n=0;n<N1.length;n++)if(o=N1[n],u=o.interleaved,u!==null){o.interleaved=null;var d=u.next,p=o.pending;if(p!==null){var m=p.next;p.next=d,u.next=m}o.pending=u}N1=null}return e}function Yt(e,n){do{var o=A9;try{if(C7(),b2.current=P2,M2){for(var u=D9.memoizedState;u!==null;){var d=u.queue;d!==null&&(d.pending=null),u=u.next}M2=!1}if(j1=0,W9=j9=D9=null,u6=!1,c6=0,r4.current=null,o===null||o.return===null){B9=1,g6=n,A9=null;break}e:{var p=e,m=o.return,_=o,w=n;if(n=K9,_.flags|=32768,w!==null&&typeof w=="object"&&typeof w.then=="function"){var O=w,z=_,I=z.tag;if(!(z.mode&1)&&(I===0||I===11||I===15)){var R=z.alternate;R?(z.updateQueue=R.updateQueue,z.memoizedState=R.memoizedState,z.lanes=R.lanes):(z.updateQueue=null,z.memoizedState=null)}var V=yt(m);if(V!==null){V.flags&=-257,vt(V,m,_,p,n),V.mode&1&&mt(p,O,n),n=V,w=O;var $=n.updateQueue;if($===null){var K=new Set;K.add(w),n.updateQueue=K}else $.add(w);break e}else{if(!(n&1)){mt(p,O,n),h4();break e}w=Error(i(426))}}else if(O9&&_.mode&1){var F9=yt(m);if(F9!==null){!(F9.flags&65536)&&(F9.flags|=256),vt(F9,m,_,p,n),b7(_5(w,_));break e}}p=w=_5(w,_),B9!==4&&(B9=2),m6===null?m6=[p]:m6.push(p),p=m;do{switch(p.tag){case 3:p.flags|=65536,n&=-n,p.lanes|=n;var E=pt(p,w,n);He(p,E);break e;case 1:_=w;var S=p.type,P=p.stateNode;if(!(p.flags&128)&&(typeof S.getDerivedStateFromError=="function"||P!==null&&typeof P.componentDidCatch=="function"&&(v1===null||!v1.has(P)))){p.flags|=65536,n&=-n,p.lanes|=n;var N=gt(p,_,n);He(p,N);break e}}p=p.return}while(p!==null)}Xt(o)}catch(X){n=X,A9===o&&o!==null&&(A9=o=o.return);continue}break}while(!0)}function Kt(){var e=z2.current;return z2.current=P2,e===null?P2:e}function h4(){(B9===0||B9===3||B9===2)&&(B9=4),U9===null||!(B1&268435455)&&!(I2&268435455)||w1(U9,K9)}function H2(e,n){var o=d9;d9|=2;var u=Kt();(U9!==e||K9!==n)&&(J0=null,V1(e,n));do try{Js();break}catch(d){Yt(e,d)}while(!0);if(C7(),d9=o,z2.current=u,A9!==null)throw Error(i(261));return U9=null,K9=0,B9}function Js(){for(;A9!==null;)Qt(A9)}function eo(){for(;A9!==null&&!Mr();)Qt(A9)}function Qt(e){var n=Zt(e.alternate,e,m0);e.memoizedProps=e.pendingProps,n===null?Xt(e):A9=n,r4.current=null}function Xt(e){var n=e;do{var o=n.alternate;if(e=n.return,n.flags&32768){if(o=Ks(o,n),o!==null){o.flags&=32767,A9=o;return}if(e!==null)e.flags|=32768,e.subtreeFlags=0,e.deletions=null;else{B9=6,A9=null;return}}else if(o=Ys(o,n,m0),o!==null){A9=o;return}if(n=n.sibling,n!==null){A9=n;return}A9=n=e}while(n!==null);B9===0&&(B9=5)}function W1(e,n,o){var u=x9,d=w0.transition;try{w0.transition=null,x9=1,to(e,n,o,u)}finally{w0.transition=d,x9=u}return null}function to(e,n,o,u){do b5();while(x1!==null);if(d9&6)throw Error(i(327));o=e.finishedWork;var d=e.finishedLanes;if(o===null)return null;if(e.finishedWork=null,e.finishedLanes=0,o===e.current)throw Error(i(177));e.callbackNode=null,e.callbackPriority=0;var p=o.lanes|o.childLanes;if(Ir(e,p),e===U9&&(A9=U9=null,K9=0),!(o.subtreeFlags&2064)&&!(o.flags&2064)||N2||(N2=!0,Jt($6,function(){return b5(),null})),p=(o.flags&15990)!==0,o.subtreeFlags&15990||p){p=w0.transition,w0.transition=null;var m=x9;x9=1;var _=d9;d9|=4,r4.current=null,Xs(e,o),jt(o,e),ws(h7),Z6=!!d7,h7=d7=null,e.current=o,Gs(o),Cr(),d9=_,x9=m,w0.transition=p}else e.current=o;if(N2&&(N2=!1,x1=e,A2=d),p=e.pendingLanes,p===0&&(v1=null),Tr(o.stateNode),a0(e,I9()),n!==null)for(u=e.onRecoverableError,o=0;o<n.length;o++)d=n[o],u(d.value,{componentStack:d.stack,digest:d.digest});if(F2)throw F2=!1,e=l4,l4=null,e;return A2&1&&e.tag!==0&&b5(),p=e.pendingLanes,p&1?e===a4?y6++:(y6=0,a4=e):y6=0,p1(),null}function b5(){if(x1!==null){var e=N8(A2),n=w0.transition,o=x9;try{if(w0.transition=null,x9=16>e?16:e,x1===null)var u=!1;else{if(e=x1,x1=null,A2=0,d9&6)throw Error(i(331));var d=d9;for(d9|=4,U=e.current;U!==null;){var p=U,m=p.child;if(U.flags&16){var _=p.deletions;if(_!==null){for(var w=0;w<_.length;w++){var O=_[w];for(U=O;U!==null;){var z=U;switch(z.tag){case 0:case 11:case 15:p6(8,z,p)}var I=z.child;if(I!==null)I.return=z,U=I;else for(;U!==null;){z=U;var R=z.sibling,V=z.return;if(zt(z),z===O){U=null;break}if(R!==null){R.return=V,U=R;break}U=V}}}var $=p.alternate;if($!==null){var K=$.child;if(K!==null){$.child=null;do{var F9=K.sibling;K.sibling=null,K=F9}while(K!==null)}}U=p}}if(p.subtreeFlags&2064&&m!==null)m.return=p,U=m;else e:for(;U!==null;){if(p=U,p.flags&2048)switch(p.tag){case 0:case 11:case 15:p6(9,p,p.return)}var E=p.sibling;if(E!==null){E.return=p.return,U=E;break e}U=p.return}}var S=e.current;for(U=S;U!==null;){m=U;var P=m.child;if(m.subtreeFlags&2064&&P!==null)P.return=m,U=P;else e:for(m=S;U!==null;){if(_=U,_.flags&2048)try{switch(_.tag){case 0:case 11:case 15:R2(9,_)}}catch(X){z9(_,_.return,X)}if(_===m){U=null;break e}var N=_.sibling;if(N!==null){N.return=_.return,U=N;break e}U=_.return}}if(d9=d,p1(),N0&&typeof N0.onPostCommitFiberRoot=="function")try{N0.onPostCommitFiberRoot(Y6,e)}catch{}u=!0}return u}finally{x9=o,w0.transition=n}}return!1}function Gt(e,n,o){n=_5(o,n),n=pt(e,n,1),e=m1(e,n,1),n=n0(),e!==null&&(H5(e,1,n),a0(e,n))}function z9(e,n,o){if(e.tag===3)Gt(e,e,o);else for(;n!==null;){if(n.tag===3){Gt(n,e,o);break}else if(n.tag===1){var u=n.stateNode;if(typeof n.type.getDerivedStateFromError=="function"||typeof u.componentDidCatch=="function"&&(v1===null||!v1.has(u))){e=_5(o,e),e=gt(n,e,1),n=m1(n,e,1),e=n0(),n!==null&&(H5(n,1,e),a0(n,e));break}}n=n.return}}function no(e,n,o){var u=e.pingCache;u!==null&&u.delete(n),n=n0(),e.pingedLanes|=e.suspendedLanes&o,U9===e&&(K9&o)===o&&(B9===4||B9===3&&(K9&130023424)===K9&&500>I9()-o4?V1(e,0):s4|=o),a0(e,n)}function qt(e,n){n===0&&(e.mode&1?(n=Q6,Q6<<=1,!(Q6&130023424)&&(Q6=4194304)):n=1);var o=n0();e=G0(e,n),e!==null&&(H5(e,n,o),a0(e,o))}function io(e){var n=e.memoizedState,o=0;n!==null&&(o=n.retryLane),qt(e,o)}function ro(e,n){var o=0;switch(e.tag){case 13:var u=e.stateNode,d=e.memoizedState;d!==null&&(o=d.retryLane);break;case 19:u=e.stateNode;break;default:throw Error(i(314))}u!==null&&u.delete(n),qt(e,o)}var Zt;Zt=function(e,n,o){if(e!==null)if(e.memoizedProps!==n.pendingProps||r0.current)o0=!0;else{if(!(e.lanes&o)&&!(n.flags&128))return o0=!1,$s(e,n,o);o0=!!(e.flags&131072)}else o0=!1,O9&&n.flags&1048576&&Le(n,m2,n.index);switch(n.lanes=0,n.tag){case 2:var u=n.type;L2(e,n),e=n.pendingProps;var d=d5(n,Q9.current);v5(n,o),d=N7(null,n,u,e,d,o);var p=A7();return n.flags|=1,typeof d=="object"&&d!==null&&typeof d.render=="function"&&d.$$typeof===void 0?(n.tag=1,n.memoizedState=null,n.updateQueue=null,s0(u)?(p=!0,h2(n)):p=!1,n.memoizedState=d.state!==null&&d.state!==void 0?d.state:null,O7(n),d.updater=T2,n.stateNode=d,d._reactInternals=n,U7(n,u,e,o),n=Q7(null,n,u,!0,p,o)):(n.tag=0,O9&&p&&_7(n),t0(null,n,d,o),n=n.child),n;case 16:u=n.elementType;e:{switch(L2(e,n),e=n.pendingProps,d=u._init,u=d(u._payload),n.type=u,d=n.tag=oo(u),e=O0(u,e),d){case 0:n=K7(null,n,u,e,o);break e;case 1:n=bt(null,n,u,e,o);break e;case 11:n=xt(null,n,u,e,o);break e;case 14:n=_t(null,n,u,O0(u.type,e),o);break e}throw Error(i(306,u,""))}return n;case 0:return u=n.type,d=n.pendingProps,d=n.elementType===u?d:O0(u,d),K7(e,n,u,d,o);case 1:return u=n.type,d=n.pendingProps,d=n.elementType===u?d:O0(u,d),bt(e,n,u,d,o);case 3:e:{if(Mt(n),e===null)throw Error(i(387));u=n.pendingProps,p=n.memoizedState,d=p.element,Be(e,n),k2(n,u,null,o);var m=n.memoizedState;if(u=m.element,p.isDehydrated)if(p={element:u,isDehydrated:!1,cache:m.cache,pendingSuspenseBoundaries:m.pendingSuspenseBoundaries,transitions:m.transitions},n.updateQueue.baseState=p,n.memoizedState=p,n.flags&256){d=_5(Error(i(423)),n),n=Ct(e,n,u,o,d);break e}else if(u!==d){d=_5(Error(i(424)),n),n=Ct(e,n,u,o,d);break e}else for(g0=f1(n.stateNode.containerInfo.firstChild),p0=n,O9=!0,T0=null,o=Ae(n,null,u,o),n.child=o;o;)o.flags=o.flags&-3|4096,o=o.sibling;else{if(g5(),u===d){n=Z0(e,n,o);break e}t0(e,n,u,o)}n=n.child}return n;case 5:return We(n),e===null&&S7(n),u=n.type,d=n.pendingProps,p=e!==null?e.memoizedProps:null,m=d.children,p7(u,d)?m=null:p!==null&&p7(u,p)&&(n.flags|=32),St(e,n),t0(e,n,m,o),n.child;case 6:return e===null&&S7(n),null;case 13:return Et(e,n,o);case 4:return L7(n,n.stateNode.containerInfo),u=n.pendingProps,e===null?n.child=m5(n,null,u,o):t0(e,n,u,o),n.child;case 11:return u=n.type,d=n.pendingProps,d=n.elementType===u?d:O0(u,d),xt(e,n,u,d,o);case 7:return t0(e,n,n.pendingProps,o),n.child;case 8:return t0(e,n,n.pendingProps.children,o),n.child;case 12:return t0(e,n,n.pendingProps.children,o),n.child;case 10:e:{if(u=n.type._context,d=n.pendingProps,p=n.memoizedProps,m=d.value,b9(x2,u._currentValue),u._currentValue=m,p!==null)if(P0(p.value,m)){if(p.children===d.children&&!r0.current){n=Z0(e,n,o);break e}}else for(p=n.child,p!==null&&(p.return=n);p!==null;){var _=p.dependencies;if(_!==null){m=p.child;for(var w=_.firstContext;w!==null;){if(w.context===u){if(p.tag===1){w=q0(-1,o&-o),w.tag=2;var O=p.updateQueue;if(O!==null){O=O.shared;var z=O.pending;z===null?w.next=w:(w.next=z.next,z.next=w),O.pending=w}}p.lanes|=o,w=p.alternate,w!==null&&(w.lanes|=o),P7(p.return,o,n),_.lanes|=o;break}w=w.next}}else if(p.tag===10)m=p.type===n.type?null:p.child;else if(p.tag===18){if(m=p.return,m===null)throw Error(i(341));m.lanes|=o,_=m.alternate,_!==null&&(_.lanes|=o),P7(m,o,n),m=p.sibling}else m=p.child;if(m!==null)m.return=p;else for(m=p;m!==null;){if(m===n){m=null;break}if(p=m.sibling,p!==null){p.return=m.return,m=p;break}m=m.return}p=m}t0(e,n,d.children,o),n=n.child}return n;case 9:return d=n.type,u=n.pendingProps.children,v5(n,o),d=x0(d),u=u(d),n.flags|=1,t0(e,n,u,o),n.child;case 14:return u=n.type,d=O0(u,n.pendingProps),d=O0(u.type,d),_t(e,n,u,d,o);case 15:return wt(e,n,n.type,n.pendingProps,o);case 17:return u=n.type,d=n.pendingProps,d=n.elementType===u?d:O0(u,d),L2(e,n),n.tag=1,s0(u)?(e=!0,h2(n)):e=!1,v5(n,o),dt(n,u,d),U7(n,u,d,o),Q7(null,n,u,!0,e,o);case 19:return Tt(e,n,o);case 22:return kt(e,n,o)}throw Error(i(156,n.tag))};function Jt(e,n){return D8(e,n)}function so(e,n,o,u){this.tag=e,this.key=o,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=n,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=u,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function k0(e,n,o,u){return new so(e,n,o,u)}function p4(e){return e=e.prototype,!(!e||!e.isReactComponent)}function oo(e){if(typeof e=="function")return p4(e)?1:0;if(e!=null){if(e=e.$$typeof,e===o9)return 11;if(e===p9)return 14}return 2}function k1(e,n){var o=e.alternate;return o===null?(o=k0(e.tag,n,e.key,e.mode),o.elementType=e.elementType,o.type=e.type,o.stateNode=e.stateNode,o.alternate=e,e.alternate=o):(o.pendingProps=n,o.type=e.type,o.flags=0,o.subtreeFlags=0,o.deletions=null),o.flags=e.flags&14680064,o.childLanes=e.childLanes,o.lanes=e.lanes,o.child=e.child,o.memoizedProps=e.memoizedProps,o.memoizedState=e.memoizedState,o.updateQueue=e.updateQueue,n=e.dependencies,o.dependencies=n===null?null:{lanes:n.lanes,firstContext:n.firstContext},o.sibling=e.sibling,o.index=e.index,o.ref=e.ref,o}function V2(e,n,o,u,d,p){var m=2;if(u=e,typeof e=="function")p4(e)&&(m=1);else if(typeof e=="string")m=5;else e:switch(e){case Q:return U1(o.children,d,p,n);case G:m=8,d|=8;break;case r9:return e=k0(12,o,n,d|2),e.elementType=r9,e.lanes=p,e;case k9:return e=k0(13,o,n,d),e.elementType=k9,e.lanes=p,e;case R9:return e=k0(19,o,n,d),e.elementType=R9,e.lanes=p,e;case f9:return W2(o,d,p,n);default:if(typeof e=="object"&&e!==null)switch(e.$$typeof){case a9:m=10;break e;case s9:m=9;break e;case o9:m=11;break e;case p9:m=14;break e;case g9:m=16,u=null;break e}throw Error(i(130,e==null?e:typeof e,""))}return n=k0(m,o,n,d),n.elementType=e,n.type=u,n.lanes=p,n}function U1(e,n,o,u){return e=k0(7,e,u,n),e.lanes=o,e}function W2(e,n,o,u){return e=k0(22,e,u,n),e.elementType=f9,e.lanes=o,e.stateNode={isHidden:!1},e}function g4(e,n,o){return e=k0(6,e,null,n),e.lanes=o,e}function m4(e,n,o){return n=k0(4,e.children!==null?e.children:[],e.key,n),n.lanes=o,n.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},n}function lo(e,n,o,u,d){this.tag=n,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=W3(0),this.expirationTimes=W3(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=W3(0),this.identifierPrefix=u,this.onRecoverableError=d,this.mutableSourceEagerHydrationData=null}function y4(e,n,o,u,d,p,m,_,w){return e=new lo(e,n,o,_,w),n===1?(n=1,p===!0&&(n|=8)):n=0,p=k0(3,null,null,n),e.current=p,p.stateNode=e,p.memoizedState={element:u,isDehydrated:o,cache:null,transitions:null,pendingSuspenseBoundaries:null},O7(p),e}function ao(e,n,o){var u=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:Y,key:u==null?null:""+u,children:e,containerInfo:n,implementation:o}}function en(e){if(!e)return h1;e=e._reactInternals;e:{if(D1(e)!==e||e.tag!==1)throw Error(i(170));var n=e;do{switch(n.tag){case 3:n=n.stateNode.context;break e;case 1:if(s0(n.type)){n=n.stateNode.__reactInternalMemoizedMergedChildContext;break e}}n=n.return}while(n!==null);throw Error(i(171))}if(e.tag===1){var o=e.type;if(s0(o))return Pe(e,o,n)}return n}function tn(e,n,o,u,d,p,m,_,w){return e=y4(o,u,!0,e,d,p,m,_,w),e.context=en(null),o=e.current,u=n0(),d=_1(o),p=q0(u,d),p.callback=n??null,m1(o,p,d),e.current.lanes=d,H5(e,d,u),a0(e,u),e}function U2(e,n,o,u){var d=n.current,p=n0(),m=_1(d);return o=en(o),n.context===null?n.context=o:n.pendingContext=o,n=q0(p,m),n.payload={element:e},u=u===void 0?null:u,u!==null&&(n.callback=u),e=m1(d,n,m),e!==null&&(R0(e,d,m,p),w2(e,d,m)),m}function $2(e){if(e=e.current,!e.child)return null;switch(e.child.tag){case 5:return e.child.stateNode;default:return e.child.stateNode}}function nn(e,n){if(e=e.memoizedState,e!==null&&e.dehydrated!==null){var o=e.retryLane;e.retryLane=o!==0&&o<n?o:n}}function v4(e,n){nn(e,n),(e=e.alternate)&&nn(e,n)}var rn=typeof reportError=="function"?reportError:function(e){console.error(e)};function x4(e){this._internalRoot=e}Y2.prototype.render=x4.prototype.render=function(e){var n=this._internalRoot;if(n===null)throw Error(i(409));U2(e,n,null,null)},Y2.prototype.unmount=x4.prototype.unmount=function(){var e=this._internalRoot;if(e!==null){this._internalRoot=null;var n=e.containerInfo;H1(function(){U2(null,e,null,null)}),n[Y0]=null}};function Y2(e){this._internalRoot=e}Y2.prototype.unstable_scheduleHydration=function(e){if(e){var n=B8();e={blockedOn:null,target:e,priority:n};for(var o=0;o<a1.length&&n!==0&&n<a1[o].priority;o++);a1.splice(o,0,e),o===0&&W8(e)}};function _4(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11)}function K2(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11&&(e.nodeType!==8||e.nodeValue!==" react-mount-point-unstable "))}function sn(){}function uo(e,n,o,u,d){if(d){if(typeof u=="function"){var p=u;u=function(){var O=$2(m);p.call(O)}}var m=tn(n,u,e,0,null,!1,!1,"",sn);return e._reactRootContainer=m,e[Y0]=m.current,t6(e.nodeType===8?e.parentNode:e),H1(),m}for(;d=e.lastChild;)e.removeChild(d);if(typeof u=="function"){var _=u;u=function(){var O=$2(w);_.call(O)}}var w=y4(e,0,!1,null,null,!1,!1,"",sn);return e._reactRootContainer=w,e[Y0]=w.current,t6(e.nodeType===8?e.parentNode:e),H1(function(){U2(n,w,o,u)}),w}function Q2(e,n,o,u,d){var p=o._reactRootContainer;if(p){var m=p;if(typeof d=="function"){var _=d;d=function(){var w=$2(m);_.call(w)}}U2(n,m,e,d)}else m=uo(o,n,e,d,u);return $2(m)}A8=function(e){switch(e.tag){case 3:var n=e.stateNode;if(n.current.memoizedState.isDehydrated){var o=B5(n.pendingLanes);o!==0&&(U3(n,o|1),a0(n,I9()),!(d9&6)&&(S5=I9()+500,p1()))}break;case 13:H1(function(){var u=G0(e,1);if(u!==null){var d=n0();R0(u,e,1,d)}}),v4(e,1)}},$3=function(e){if(e.tag===13){var n=G0(e,134217728);if(n!==null){var o=n0();R0(n,e,134217728,o)}v4(e,134217728)}},j8=function(e){if(e.tag===13){var n=_1(e),o=G0(e,n);if(o!==null){var u=n0();R0(o,e,n,u)}v4(e,n)}},B8=function(){return x9},H8=function(e,n){var o=x9;try{return x9=e,n()}finally{x9=o}},N3=function(e,n,o){switch(n){case"input":if(T3(e,o),n=o.name,o.type==="radio"&&n!=null){for(o=e;o.parentNode;)o=o.parentNode;for(o=o.querySelectorAll("input[name="+JSON.stringify(""+n)+'][type="radio"]'),n=0;n<o.length;n++){var u=o[n];if(u!==e&&u.form===e.form){var d=f2(u);if(!d)throw Error(i(90));f8(u),T3(u,d)}}}break;case"textarea":m8(e,o);break;case"select":n=o.value,n!=null&&e5(e,!!o.multiple,n,!1)}},M8=f4,C8=H1;var co={usingClientEntryPoint:!1,Events:[r6,c5,f2,S8,b8,f4]},v6={findFiberByHostInstance:R1,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},fo={bundleType:v6.bundleType,version:v6.version,rendererPackageName:v6.rendererPackageName,rendererConfig:v6.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:H.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return e=O8(e),e===null?null:e.stateNode},findFiberByHostInstance:v6.findFiberByHostInstance,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var X2=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!X2.isDisabled&&X2.supportsFiber)try{Y6=X2.inject(fo),N0=X2}catch{}}return u0.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=co,u0.createPortal=function(e,n){var o=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!_4(n))throw Error(i(200));return ao(e,n,null,o)},u0.createRoot=function(e,n){if(!_4(e))throw Error(i(299));var o=!1,u="",d=rn;return n!=null&&(n.unstable_strictMode===!0&&(o=!0),n.identifierPrefix!==void 0&&(u=n.identifierPrefix),n.onRecoverableError!==void 0&&(d=n.onRecoverableError)),n=y4(e,1,!1,null,null,o,!1,u,d),e[Y0]=n.current,t6(e.nodeType===8?e.parentNode:e),new x4(n)},u0.findDOMNode=function(e){if(e==null)return null;if(e.nodeType===1)return e;var n=e._reactInternals;if(n===void 0)throw typeof e.render=="function"?Error(i(188)):(e=Object.keys(e).join(","),Error(i(268,e)));return e=O8(n),e=e===null?null:e.stateNode,e},u0.flushSync=function(e){return H1(e)},u0.hydrate=function(e,n,o){if(!K2(n))throw Error(i(200));return Q2(null,e,n,!0,o)},u0.hydrateRoot=function(e,n,o){if(!_4(e))throw Error(i(405));var u=o!=null&&o.hydratedSources||null,d=!1,p="",m=rn;if(o!=null&&(o.unstable_strictMode===!0&&(d=!0),o.identifierPrefix!==void 0&&(p=o.identifierPrefix),o.onRecoverableError!==void 0&&(m=o.onRecoverableError)),n=tn(n,null,e,1,o??null,d,!1,p,m),e[Y0]=n.current,t6(e),u)for(e=0;e<u.length;e++)o=u[e],d=o._getVersion,d=d(o._source),n.mutableSourceEagerHydrationData==null?n.mutableSourceEagerHydrationData=[o,d]:n.mutableSourceEagerHydrationData.push(o,d);return new Y2(n)},u0.render=function(e,n,o){if(!K2(n))throw Error(i(200));return Q2(null,e,n,!1,o)},u0.unmountComponentAtNode=function(e){if(!K2(e))throw Error(i(40));return e._reactRootContainer?(H1(function(){Q2(null,null,e,!1,function(){e._reactRootContainer=null,e[Y0]=null})}),!0):!1},u0.unstable_batchedUpdates=f4,u0.unstable_renderSubtreeIntoContainer=function(e,n,o,u){if(!K2(o))throw Error(i(200));if(e==null||e._reactInternals===void 0)throw Error(i(38));return Q2(e,n,o,!1,u)},u0.version="18.3.1-next-f1338f8080-20240426",u0}var hn;function So(){if(hn)return S4.exports;hn=1;function r(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(r)}catch(t){console.error(t)}}return r(),S4.exports=ko(),S4.exports}var pn;function bo(){if(pn)return G2;pn=1;var r=So();return G2.createRoot=r.createRoot,G2.hydrateRoot=r.hydrateRoot,G2}var Mo=bo();/*!
 * @kurkle/color v0.3.4
 * https://github.com/kurkle/color#readme
 * (c) 2024 Jukka Kurkela
 * Released under the MIT License
 */function A6(r){return r+.5|0}const M1=(r,t,i)=>Math.max(Math.min(r,i),t);function M6(r){return M1(A6(r*2.55),0,255)}function E1(r){return M1(A6(r*255),0,255)}function r1(r){return M1(A6(r/2.55)/100,0,1)}function gn(r){return M1(A6(r*100),0,100)}const S0={0:0,1:1,2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,A:10,B:11,C:12,D:13,E:14,F:15,a:10,b:11,c:12,d:13,e:14,f:15},B4=[..."0123456789ABCDEF"],Co=r=>B4[r&15],Eo=r=>B4[(r&240)>>4]+B4[r&15],q2=r=>(r&240)>>4===(r&15),Po=r=>q2(r.r)&&q2(r.g)&&q2(r.b)&&q2(r.a);function To(r){var t=r.length,i;return r[0]==="#"&&(t===4||t===5?i={r:255&S0[r[1]]*17,g:255&S0[r[2]]*17,b:255&S0[r[3]]*17,a:t===5?S0[r[4]]*17:255}:(t===7||t===9)&&(i={r:S0[r[1]]<<4|S0[r[2]],g:S0[r[3]]<<4|S0[r[4]],b:S0[r[5]]<<4|S0[r[6]],a:t===9?S0[r[7]]<<4|S0[r[8]]:255})),i}const Oo=(r,t)=>r<255?t(r):"";function Lo(r){var t=Po(r)?Co:Eo;return r?"#"+t(r.r)+t(r.g)+t(r.b)+Oo(r.a,t):void 0}const Do=/^(hsla?|hwb|hsv)\(\s*([-+.e\d]+)(?:deg)?[\s,]+([-+.e\d]+)%[\s,]+([-+.e\d]+)%(?:[\s,]+([-+.e\d]+)(%)?)?\s*\)$/;function Oi(r,t,i){const s=t*Math.min(i,1-i),l=(a,c=(a+r/30)%12)=>i-s*Math.max(Math.min(c-3,9-c,1),-1);return[l(0),l(8),l(4)]}function Ro(r,t,i){const s=(l,a=(l+r/60)%6)=>i-i*t*Math.max(Math.min(a,4-a,1),0);return[s(5),s(3),s(1)]}function zo(r,t,i){const s=Oi(r,1,.5);let l;for(t+i>1&&(l=1/(t+i),t*=l,i*=l),l=0;l<3;l++)s[l]*=1-t-i,s[l]+=t;return s}function Io(r,t,i,s,l){return r===l?(t-i)/s+(t<i?6:0):t===l?(i-r)/s+2:(r-t)/s+4}function G4(r){const i=r.r/255,s=r.g/255,l=r.b/255,a=Math.max(i,s,l),c=Math.min(i,s,l),f=(a+c)/2;let h,g,y;return a!==c&&(y=a-c,g=f>.5?y/(2-a-c):y/(a+c),h=Io(i,s,l,y,a),h=h*60+.5),[h|0,g||0,f]}function q4(r,t,i,s){return(Array.isArray(t)?r(t[0],t[1],t[2]):r(t,i,s)).map(E1)}function Z4(r,t,i){return q4(Oi,r,t,i)}function Fo(r,t,i){return q4(zo,r,t,i)}function No(r,t,i){return q4(Ro,r,t,i)}function Li(r){return(r%360+360)%360}function Ao(r){const t=Do.exec(r);let i=255,s;if(!t)return;t[5]!==s&&(i=t[6]?M6(+t[5]):E1(+t[5]));const l=Li(+t[2]),a=+t[3]/100,c=+t[4]/100;return t[1]==="hwb"?s=Fo(l,a,c):t[1]==="hsv"?s=No(l,a,c):s=Z4(l,a,c),{r:s[0],g:s[1],b:s[2],a:i}}function jo(r,t){var i=G4(r);i[0]=Li(i[0]+t),i=Z4(i),r.r=i[0],r.g=i[1],r.b=i[2]}function Bo(r){if(!r)return;const t=G4(r),i=t[0],s=gn(t[1]),l=gn(t[2]);return r.a<255?`hsla(${i}, ${s}%, ${l}%, ${r1(r.a)})`:`hsl(${i}, ${s}%, ${l}%)`}const mn={x:"dark",Z:"light",Y:"re",X:"blu",W:"gr",V:"medium",U:"slate",A:"ee",T:"ol",S:"or",B:"ra",C:"lateg",D:"ights",R:"in",Q:"turquois",E:"hi",P:"ro",O:"al",N:"le",M:"de",L:"yello",F:"en",K:"ch",G:"arks",H:"ea",I:"ightg",J:"wh"},yn={OiceXe:"f0f8ff",antiquewEte:"faebd7",aqua:"ffff",aquamarRe:"7fffd4",azuY:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"0",blanKedOmond:"ffebcd",Xe:"ff",XeviTet:"8a2be2",bPwn:"a52a2a",burlywood:"deb887",caMtXe:"5f9ea0",KartYuse:"7fff00",KocTate:"d2691e",cSO:"ff7f50",cSnflowerXe:"6495ed",cSnsilk:"fff8dc",crimson:"dc143c",cyan:"ffff",xXe:"8b",xcyan:"8b8b",xgTMnPd:"b8860b",xWay:"a9a9a9",xgYF:"6400",xgYy:"a9a9a9",xkhaki:"bdb76b",xmagFta:"8b008b",xTivegYF:"556b2f",xSange:"ff8c00",xScEd:"9932cc",xYd:"8b0000",xsOmon:"e9967a",xsHgYF:"8fbc8f",xUXe:"483d8b",xUWay:"2f4f4f",xUgYy:"2f4f4f",xQe:"ced1",xviTet:"9400d3",dAppRk:"ff1493",dApskyXe:"bfff",dimWay:"696969",dimgYy:"696969",dodgerXe:"1e90ff",fiYbrick:"b22222",flSOwEte:"fffaf0",foYstWAn:"228b22",fuKsia:"ff00ff",gaRsbSo:"dcdcdc",ghostwEte:"f8f8ff",gTd:"ffd700",gTMnPd:"daa520",Way:"808080",gYF:"8000",gYFLw:"adff2f",gYy:"808080",honeyMw:"f0fff0",hotpRk:"ff69b4",RdianYd:"cd5c5c",Rdigo:"4b0082",ivSy:"fffff0",khaki:"f0e68c",lavFMr:"e6e6fa",lavFMrXsh:"fff0f5",lawngYF:"7cfc00",NmoncEffon:"fffacd",ZXe:"add8e6",ZcSO:"f08080",Zcyan:"e0ffff",ZgTMnPdLw:"fafad2",ZWay:"d3d3d3",ZgYF:"90ee90",ZgYy:"d3d3d3",ZpRk:"ffb6c1",ZsOmon:"ffa07a",ZsHgYF:"20b2aa",ZskyXe:"87cefa",ZUWay:"778899",ZUgYy:"778899",ZstAlXe:"b0c4de",ZLw:"ffffe0",lime:"ff00",limegYF:"32cd32",lRF:"faf0e6",magFta:"ff00ff",maPon:"800000",VaquamarRe:"66cdaa",VXe:"cd",VScEd:"ba55d3",VpurpN:"9370db",VsHgYF:"3cb371",VUXe:"7b68ee",VsprRggYF:"fa9a",VQe:"48d1cc",VviTetYd:"c71585",midnightXe:"191970",mRtcYam:"f5fffa",mistyPse:"ffe4e1",moccasR:"ffe4b5",navajowEte:"ffdead",navy:"80",Tdlace:"fdf5e6",Tive:"808000",TivedBb:"6b8e23",Sange:"ffa500",SangeYd:"ff4500",ScEd:"da70d6",pOegTMnPd:"eee8aa",pOegYF:"98fb98",pOeQe:"afeeee",pOeviTetYd:"db7093",papayawEp:"ffefd5",pHKpuff:"ffdab9",peru:"cd853f",pRk:"ffc0cb",plum:"dda0dd",powMrXe:"b0e0e6",purpN:"800080",YbeccapurpN:"663399",Yd:"ff0000",Psybrown:"bc8f8f",PyOXe:"4169e1",saddNbPwn:"8b4513",sOmon:"fa8072",sandybPwn:"f4a460",sHgYF:"2e8b57",sHshell:"fff5ee",siFna:"a0522d",silver:"c0c0c0",skyXe:"87ceeb",UXe:"6a5acd",UWay:"708090",UgYy:"708090",snow:"fffafa",sprRggYF:"ff7f",stAlXe:"4682b4",tan:"d2b48c",teO:"8080",tEstN:"d8bfd8",tomato:"ff6347",Qe:"40e0d0",viTet:"ee82ee",JHt:"f5deb3",wEte:"ffffff",wEtesmoke:"f5f5f5",Lw:"ffff00",LwgYF:"9acd32"};function Ho(){const r={},t=Object.keys(yn),i=Object.keys(mn);let s,l,a,c,f;for(s=0;s<t.length;s++){for(c=f=t[s],l=0;l<i.length;l++)a=i[l],f=f.replace(a,mn[a]);a=parseInt(yn[c],16),r[f]=[a>>16&255,a>>8&255,a&255]}return r}let Z2;function Vo(r){Z2||(Z2=Ho(),Z2.transparent=[0,0,0,0]);const t=Z2[r.toLowerCase()];return t&&{r:t[0],g:t[1],b:t[2],a:t.length===4?t[3]:255}}const Wo=/^rgba?\(\s*([-+.\d]+)(%)?[\s,]+([-+.e\d]+)(%)?[\s,]+([-+.e\d]+)(%)?(?:[\s,/]+([-+.e\d]+)(%)?)?\s*\)$/;function Uo(r){const t=Wo.exec(r);let i=255,s,l,a;if(t){if(t[7]!==s){const c=+t[7];i=t[8]?M6(c):M1(c*255,0,255)}return s=+t[1],l=+t[3],a=+t[5],s=255&(t[2]?M6(s):M1(s,0,255)),l=255&(t[4]?M6(l):M1(l,0,255)),a=255&(t[6]?M6(a):M1(a,0,255)),{r:s,g:l,b:a,a:i}}}function $o(r){return r&&(r.a<255?`rgba(${r.r}, ${r.g}, ${r.b}, ${r1(r.a)})`:`rgb(${r.r}, ${r.g}, ${r.b})`)}const C4=r=>r<=.0031308?r*12.92:Math.pow(r,1/2.4)*1.055-.055,M5=r=>r<=.04045?r/12.92:Math.pow((r+.055)/1.055,2.4);function Yo(r,t,i){const s=M5(r1(r.r)),l=M5(r1(r.g)),a=M5(r1(r.b));return{r:E1(C4(s+i*(M5(r1(t.r))-s))),g:E1(C4(l+i*(M5(r1(t.g))-l))),b:E1(C4(a+i*(M5(r1(t.b))-a))),a:r.a+i*(t.a-r.a)}}function J2(r,t,i){if(r){let s=G4(r);s[t]=Math.max(0,Math.min(s[t]+s[t]*i,t===0?360:1)),s=Z4(s),r.r=s[0],r.g=s[1],r.b=s[2]}}function Di(r,t){return r&&Object.assign(t||{},r)}function vn(r){var t={r:0,g:0,b:0,a:255};return Array.isArray(r)?r.length>=3&&(t={r:r[0],g:r[1],b:r[2],a:255},r.length>3&&(t.a=E1(r[3]))):(t=Di(r,{r:0,g:0,b:0,a:1}),t.a=E1(t.a)),t}function Ko(r){return r.charAt(0)==="r"?Uo(r):Ao(r)}class R6{constructor(t){if(t instanceof R6)return t;const i=typeof t;let s;i==="object"?s=vn(t):i==="string"&&(s=To(t)||Vo(t)||Ko(t)),this._rgb=s,this._valid=!!s}get valid(){return this._valid}get rgb(){var t=Di(this._rgb);return t&&(t.a=r1(t.a)),t}set rgb(t){this._rgb=vn(t)}rgbString(){return this._valid?$o(this._rgb):void 0}hexString(){return this._valid?Lo(this._rgb):void 0}hslString(){return this._valid?Bo(this._rgb):void 0}mix(t,i){if(t){const s=this.rgb,l=t.rgb;let a;const c=i===a?.5:i,f=2*c-1,h=s.a-l.a,g=((f*h===-1?f:(f+h)/(1+f*h))+1)/2;a=1-g,s.r=255&g*s.r+a*l.r+.5,s.g=255&g*s.g+a*l.g+.5,s.b=255&g*s.b+a*l.b+.5,s.a=c*s.a+(1-c)*l.a,this.rgb=s}return this}interpolate(t,i){return t&&(this._rgb=Yo(this._rgb,t._rgb,i)),this}clone(){return new R6(this.rgb)}alpha(t){return this._rgb.a=E1(t),this}clearer(t){const i=this._rgb;return i.a*=1-t,this}greyscale(){const t=this._rgb,i=A6(t.r*.3+t.g*.59+t.b*.11);return t.r=t.g=t.b=i,this}opaquer(t){const i=this._rgb;return i.a*=1+t,this}negate(){const t=this._rgb;return t.r=255-t.r,t.g=255-t.g,t.b=255-t.b,this}lighten(t){return J2(this._rgb,2,t),this}darken(t){return J2(this._rgb,2,-t),this}saturate(t){return J2(this._rgb,1,t),this}desaturate(t){return J2(this._rgb,1,-t),this}rotate(t){return jo(this._rgb,t),this}}/*!
 * Chart.js v4.4.7
 * https://www.chartjs.org
 * (c) 2024 Chart.js Contributors
 * Released under the MIT License
 */function e1(){}const Qo=(()=>{let r=0;return()=>r++})();function P9(r){return r==null}function V9(r){if(Array.isArray&&Array.isArray(r))return!0;const t=Object.prototype.toString.call(r);return t.slice(0,7)==="[object"&&t.slice(-6)==="Array]"}function y9(r){return r!==null&&Object.prototype.toString.call(r)==="[object Object]"}function M0(r){return(typeof r=="number"||r instanceof Number)&&isFinite(+r)}function V0(r,t){return M0(r)?r:t}function w9(r,t){return typeof r>"u"?t:r}const Xo=(r,t)=>typeof r=="string"&&r.endsWith("%")?parseFloat(r)/100*t:+r;function E9(r,t,i){if(r&&typeof r.call=="function")return r.apply(i,t)}function _9(r,t,i,s){let l,a,c;if(V9(r))for(a=r.length,l=0;l<a;l++)t.call(i,r[l],l);else if(y9(r))for(c=Object.keys(r),a=c.length,l=0;l<a;l++)t.call(i,r[c[l]],c[l])}function y3(r,t){let i,s,l,a;if(!r||!t||r.length!==t.length)return!1;for(i=0,s=r.length;i<s;++i)if(l=r[i],a=t[i],l.datasetIndex!==a.datasetIndex||l.index!==a.index)return!1;return!0}function v3(r){if(V9(r))return r.map(v3);if(y9(r)){const t=Object.create(null),i=Object.keys(r),s=i.length;let l=0;for(;l<s;++l)t[i[l]]=v3(r[i[l]]);return t}return r}function Ri(r){return["__proto__","prototype","constructor"].indexOf(r)===-1}function Go(r,t,i,s){if(!Ri(r))return;const l=t[r],a=i[r];y9(l)&&y9(a)?z6(l,a,s):t[r]=v3(a)}function z6(r,t,i){const s=V9(t)?t:[t],l=s.length;if(!y9(r))return r;i=i||{};const a=i.merger||Go;let c;for(let f=0;f<l;++f){if(c=s[f],!y9(c))continue;const h=Object.keys(c);for(let g=0,y=h.length;g<y;++g)a(h[g],r,c,i)}return r}function T6(r,t){return z6(r,t,{merger:qo})}function qo(r,t,i){if(!Ri(r))return;const s=t[r],l=i[r];y9(s)&&y9(l)?T6(s,l):Object.prototype.hasOwnProperty.call(t,r)||(t[r]=v3(l))}const xn={"":r=>r,x:r=>r.x,y:r=>r.y};function Zo(r){const t=r.split("."),i=[];let s="";for(const l of t)s+=l,s.endsWith("\\")?s=s.slice(0,-1)+".":(i.push(s),s="");return i}function Jo(r){const t=Zo(r);return i=>{for(const s of t){if(s==="")break;i=i&&i[s]}return i}}function O5(r,t){return(xn[t]||(xn[t]=Jo(t)))(r)}function J4(r){return r.charAt(0).toUpperCase()+r.slice(1)}const I6=r=>typeof r<"u",O1=r=>typeof r=="function",_n=(r,t)=>{if(r.size!==t.size)return!1;for(const i of r)if(!t.has(i))return!1;return!0};function el(r){return r.type==="mouseup"||r.type==="click"||r.type==="contextmenu"}const e0=Math.PI,P1=2*e0,x3=Number.POSITIVE_INFINITY,tl=e0/180,z0=e0/2,$1=e0/4,wn=e0*2/3,H4=Math.log10,T1=Math.sign;function d3(r,t,i){return Math.abs(r-t)<i}function kn(r){const t=Math.round(r);r=d3(r,t,r/1e3)?t:r;const i=Math.pow(10,Math.floor(H4(r))),s=r/i;return(s<=1?1:s<=2?2:s<=5?5:10)*i}function nl(r){const t=[],i=Math.sqrt(r);let s;for(s=1;s<i;s++)r%s===0&&(t.push(s),t.push(r/s));return i===(i|0)&&t.push(i),t.sort((l,a)=>l-a).pop(),t}function _3(r){return!isNaN(parseFloat(r))&&isFinite(r)}function il(r,t){const i=Math.round(r);return i-t<=r&&i+t>=r}function rl(r,t,i){let s,l,a;for(s=0,l=r.length;s<l;s++)a=r[s][i],isNaN(a)||(t.min=Math.min(t.min,a),t.max=Math.max(t.max,a))}function q1(r){return r*(e0/180)}function sl(r){return r*(180/e0)}function Sn(r){if(!M0(r))return;let t=1,i=0;for(;Math.round(r*t)/t!==r;)t*=10,i++;return i}function ol(r,t){const i=t.x-r.x,s=t.y-r.y,l=Math.sqrt(i*i+s*s);let a=Math.atan2(s,i);return a<-.5*e0&&(a+=P1),{angle:a,distance:l}}function ll(r,t){return Math.sqrt(Math.pow(t.x-r.x,2)+Math.pow(t.y-r.y,2))}function Y1(r){return(r%P1+P1)%P1}function al(r,t,i,s){const l=Y1(r),a=Y1(t),c=Y1(i),f=Y1(a-l),h=Y1(c-l),g=Y1(l-a),y=Y1(l-c);return l===a||l===c||s&&a===c||f>h&&g<y}function I0(r,t,i){return Math.max(t,Math.min(i,r))}function ul(r){return I0(r,-32768,32767)}function E5(r,t,i,s=1e-6){return r>=Math.min(t,i)-s&&r<=Math.max(t,i)+s}function e8(r,t,i){i=i||(c=>r[c]<t);let s=r.length-1,l=0,a;for(;s-l>1;)a=l+s>>1,i(a)?l=a:s=a;return{lo:l,hi:s}}const V4=(r,t,i,s)=>e8(r,i,s?l=>{const a=r[l][t];return a<i||a===i&&r[l+1][t]===i}:l=>r[l][t]<i),cl=(r,t,i)=>e8(r,i,s=>r[s][t]>=i);function fl(r,t,i){let s=0,l=r.length;for(;s<l&&r[s]<t;)s++;for(;l>s&&r[l-1]>i;)l--;return s>0||l<r.length?r.slice(s,l):r}const zi=["push","pop","shift","splice","unshift"];function dl(r,t){if(r._chartjs){r._chartjs.listeners.push(t);return}Object.defineProperty(r,"_chartjs",{configurable:!0,enumerable:!1,value:{listeners:[t]}}),zi.forEach(i=>{const s="_onData"+J4(i),l=r[i];Object.defineProperty(r,i,{configurable:!0,enumerable:!1,value(...a){const c=l.apply(this,a);return r._chartjs.listeners.forEach(f=>{typeof f[s]=="function"&&f[s](...a)}),c}})})}function bn(r,t){const i=r._chartjs;if(!i)return;const s=i.listeners,l=s.indexOf(t);l!==-1&&s.splice(l,1),!(s.length>0)&&(zi.forEach(a=>{delete r[a]}),delete r._chartjs)}function Ii(r){const t=new Set(r);return t.size===r.length?r:Array.from(t)}const Fi=function(){return typeof window>"u"?function(r){return r()}:window.requestAnimationFrame}();function Ni(r,t){let i=[],s=!1;return function(...l){i=l,s||(s=!0,Fi.call(window,()=>{s=!1,r.apply(t,i)}))}}function hl(r,t){let i;return function(...s){return t?(clearTimeout(i),i=setTimeout(r,t,s)):r.apply(this,s),t}}const t8=r=>r==="start"?"left":r==="end"?"right":"center",Z9=(r,t,i)=>r==="start"?t:r==="end"?i:(t+i)/2,pl=(r,t,i,s)=>r===(s?"left":"right")?i:r==="center"?(t+i)/2:t,e3=r=>r===0||r===1,Mn=(r,t,i)=>-(Math.pow(2,10*(r-=1))*Math.sin((r-t)*P1/i)),Cn=(r,t,i)=>Math.pow(2,-10*r)*Math.sin((r-t)*P1/i)+1,O6={linear:r=>r,easeInQuad:r=>r*r,easeOutQuad:r=>-r*(r-2),easeInOutQuad:r=>(r/=.5)<1?.5*r*r:-.5*(--r*(r-2)-1),easeInCubic:r=>r*r*r,easeOutCubic:r=>(r-=1)*r*r+1,easeInOutCubic:r=>(r/=.5)<1?.5*r*r*r:.5*((r-=2)*r*r+2),easeInQuart:r=>r*r*r*r,easeOutQuart:r=>-((r-=1)*r*r*r-1),easeInOutQuart:r=>(r/=.5)<1?.5*r*r*r*r:-.5*((r-=2)*r*r*r-2),easeInQuint:r=>r*r*r*r*r,easeOutQuint:r=>(r-=1)*r*r*r*r+1,easeInOutQuint:r=>(r/=.5)<1?.5*r*r*r*r*r:.5*((r-=2)*r*r*r*r+2),easeInSine:r=>-Math.cos(r*z0)+1,easeOutSine:r=>Math.sin(r*z0),easeInOutSine:r=>-.5*(Math.cos(e0*r)-1),easeInExpo:r=>r===0?0:Math.pow(2,10*(r-1)),easeOutExpo:r=>r===1?1:-Math.pow(2,-10*r)+1,easeInOutExpo:r=>e3(r)?r:r<.5?.5*Math.pow(2,10*(r*2-1)):.5*(-Math.pow(2,-10*(r*2-1))+2),easeInCirc:r=>r>=1?r:-(Math.sqrt(1-r*r)-1),easeOutCirc:r=>Math.sqrt(1-(r-=1)*r),easeInOutCirc:r=>(r/=.5)<1?-.5*(Math.sqrt(1-r*r)-1):.5*(Math.sqrt(1-(r-=2)*r)+1),easeInElastic:r=>e3(r)?r:Mn(r,.075,.3),easeOutElastic:r=>e3(r)?r:Cn(r,.075,.3),easeInOutElastic(r){return e3(r)?r:r<.5?.5*Mn(r*2,.1125,.45):.5+.5*Cn(r*2-1,.1125,.45)},easeInBack(r){return r*r*((1.70158+1)*r-1.70158)},easeOutBack(r){return(r-=1)*r*((1.70158+1)*r+1.70158)+1},easeInOutBack(r){let t=1.70158;return(r/=.5)<1?.5*(r*r*(((t*=1.525)+1)*r-t)):.5*((r-=2)*r*(((t*=1.525)+1)*r+t)+2)},easeInBounce:r=>1-O6.easeOutBounce(1-r),easeOutBounce(r){return r<1/2.75?7.5625*r*r:r<2/2.75?7.5625*(r-=1.5/2.75)*r+.75:r<2.5/2.75?7.5625*(r-=2.25/2.75)*r+.9375:7.5625*(r-=2.625/2.75)*r+.984375},easeInOutBounce:r=>r<.5?O6.easeInBounce(r*2)*.5:O6.easeOutBounce(r*2-1)*.5+.5};function Ai(r){if(r&&typeof r=="object"){const t=r.toString();return t==="[object CanvasPattern]"||t==="[object CanvasGradient]"}return!1}function En(r){return Ai(r)?r:new R6(r)}function E4(r){return Ai(r)?r:new R6(r).saturate(.5).darken(.1).hexString()}const gl=["x","y","borderWidth","radius","tension"],ml=["color","borderColor","backgroundColor"];function yl(r){r.set("animation",{delay:void 0,duration:1e3,easing:"easeOutQuart",fn:void 0,from:void 0,loop:void 0,to:void 0,type:void 0}),r.describe("animation",{_fallback:!1,_indexable:!1,_scriptable:t=>t!=="onProgress"&&t!=="onComplete"&&t!=="fn"}),r.set("animations",{colors:{type:"color",properties:ml},numbers:{type:"number",properties:gl}}),r.describe("animations",{_fallback:"animation"}),r.set("transitions",{active:{animation:{duration:400}},resize:{animation:{duration:0}},show:{animations:{colors:{from:"transparent"},visible:{type:"boolean",duration:0}}},hide:{animations:{colors:{to:"transparent"},visible:{type:"boolean",easing:"linear",fn:t=>t|0}}}})}function vl(r){r.set("layout",{autoPadding:!0,padding:{top:0,right:0,bottom:0,left:0}})}const Pn=new Map;function xl(r,t){t=t||{};const i=r+JSON.stringify(t);let s=Pn.get(i);return s||(s=new Intl.NumberFormat(r,t),Pn.set(i,s)),s}function ji(r,t,i){return xl(t,i).format(r)}const Bi={values(r){return V9(r)?r:""+r},numeric(r,t,i){if(r===0)return"0";const s=this.chart.options.locale;let l,a=r;if(i.length>1){const g=Math.max(Math.abs(i[0].value),Math.abs(i[i.length-1].value));(g<1e-4||g>1e15)&&(l="scientific"),a=_l(r,i)}const c=H4(Math.abs(a)),f=isNaN(c)?1:Math.max(Math.min(-1*Math.floor(c),20),0),h={notation:l,minimumFractionDigits:f,maximumFractionDigits:f};return Object.assign(h,this.options.ticks.format),ji(r,s,h)},logarithmic(r,t,i){if(r===0)return"0";const s=i[t].significand||r/Math.pow(10,Math.floor(H4(r)));return[1,2,3,5,10,15].includes(s)||t>.8*i.length?Bi.numeric.call(this,r,t,i):""}};function _l(r,t){let i=t.length>3?t[2].value-t[1].value:t[1].value-t[0].value;return Math.abs(i)>=1&&r!==Math.floor(r)&&(i=r-Math.floor(r)),i}var Hi={formatters:Bi};function wl(r){r.set("scale",{display:!0,offset:!1,reverse:!1,beginAtZero:!1,bounds:"ticks",clip:!0,grace:0,grid:{display:!0,lineWidth:1,drawOnChartArea:!0,drawTicks:!0,tickLength:8,tickWidth:(t,i)=>i.lineWidth,tickColor:(t,i)=>i.color,offset:!1},border:{display:!0,dash:[],dashOffset:0,width:1},title:{display:!1,text:"",padding:{top:4,bottom:4}},ticks:{minRotation:0,maxRotation:50,mirror:!1,textStrokeWidth:0,textStrokeColor:"",padding:3,display:!0,autoSkip:!0,autoSkipPadding:3,labelOffset:0,callback:Hi.formatters.values,minor:{},major:{},align:"center",crossAlign:"near",showLabelBackdrop:!1,backdropColor:"rgba(255, 255, 255, 0.75)",backdropPadding:2}}),r.route("scale.ticks","color","","color"),r.route("scale.grid","color","","borderColor"),r.route("scale.border","color","","borderColor"),r.route("scale.title","color","","color"),r.describe("scale",{_fallback:!1,_scriptable:t=>!t.startsWith("before")&&!t.startsWith("after")&&t!=="callback"&&t!=="parser",_indexable:t=>t!=="borderDash"&&t!=="tickBorderDash"&&t!=="dash"}),r.describe("scales",{_fallback:"scale"}),r.describe("scale.ticks",{_scriptable:t=>t!=="backdropPadding"&&t!=="callback",_indexable:t=>t!=="backdropPadding"})}const J1=Object.create(null),W4=Object.create(null);function L6(r,t){if(!t)return r;const i=t.split(".");for(let s=0,l=i.length;s<l;++s){const a=i[s];r=r[a]||(r[a]=Object.create(null))}return r}function P4(r,t,i){return typeof t=="string"?z6(L6(r,t),i):z6(L6(r,""),t)}class kl{constructor(t,i){this.animation=void 0,this.backgroundColor="rgba(0,0,0,0.1)",this.borderColor="rgba(0,0,0,0.1)",this.color="#666",this.datasets={},this.devicePixelRatio=s=>s.chart.platform.getDevicePixelRatio(),this.elements={},this.events=["mousemove","mouseout","click","touchstart","touchmove"],this.font={family:"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",size:12,style:"normal",lineHeight:1.2,weight:null},this.hover={},this.hoverBackgroundColor=(s,l)=>E4(l.backgroundColor),this.hoverBorderColor=(s,l)=>E4(l.borderColor),this.hoverColor=(s,l)=>E4(l.color),this.indexAxis="x",this.interaction={mode:"nearest",intersect:!0,includeInvisible:!1},this.maintainAspectRatio=!0,this.onHover=null,this.onClick=null,this.parsing=!0,this.plugins={},this.responsive=!0,this.scale=void 0,this.scales={},this.showLine=!0,this.drawActiveElementsOnTop=!0,this.describe(t),this.apply(i)}set(t,i){return P4(this,t,i)}get(t){return L6(this,t)}describe(t,i){return P4(W4,t,i)}override(t,i){return P4(J1,t,i)}route(t,i,s,l){const a=L6(this,t),c=L6(this,s),f="_"+i;Object.defineProperties(a,{[f]:{value:a[i],writable:!0},[i]:{enumerable:!0,get(){const h=this[f],g=c[l];return y9(h)?Object.assign({},g,h):w9(h,g)},set(h){this[f]=h}}})}apply(t){t.forEach(i=>i(this))}}var N9=new kl({_scriptable:r=>!r.startsWith("on"),_indexable:r=>r!=="events",hover:{_fallback:"interaction"},interaction:{_scriptable:!1,_indexable:!1}},[yl,vl,wl]);function Sl(r){return!r||P9(r.size)||P9(r.family)?null:(r.style?r.style+" ":"")+(r.weight?r.weight+" ":"")+r.size+"px "+r.family}function Tn(r,t,i,s,l){let a=t[l];return a||(a=t[l]=r.measureText(l).width,i.push(l)),a>s&&(s=a),s}function K1(r,t,i){const s=r.currentDevicePixelRatio,l=i!==0?Math.max(i/2,.5):0;return Math.round((t-l)*s)/s+l}function On(r,t){!t&&!r||(t=t||r.getContext("2d"),t.save(),t.resetTransform(),t.clearRect(0,0,r.width,r.height),t.restore())}function Ln(r,t,i,s){Vi(r,t,i,s,null)}function Vi(r,t,i,s,l){let a,c,f,h,g,y,v,x;const k=t.pointStyle,T=t.rotation,M=t.radius;let C=(T||0)*tl;if(k&&typeof k=="object"&&(a=k.toString(),a==="[object HTMLImageElement]"||a==="[object HTMLCanvasElement]")){r.save(),r.translate(i,s),r.rotate(C),r.drawImage(k,-k.width/2,-k.height/2,k.width,k.height),r.restore();return}if(!(isNaN(M)||M<=0)){switch(r.beginPath(),k){default:l?r.ellipse(i,s,l/2,M,0,0,P1):r.arc(i,s,M,0,P1),r.closePath();break;case"triangle":y=l?l/2:M,r.moveTo(i+Math.sin(C)*y,s-Math.cos(C)*M),C+=wn,r.lineTo(i+Math.sin(C)*y,s-Math.cos(C)*M),C+=wn,r.lineTo(i+Math.sin(C)*y,s-Math.cos(C)*M),r.closePath();break;case"rectRounded":g=M*.516,h=M-g,c=Math.cos(C+$1)*h,v=Math.cos(C+$1)*(l?l/2-g:h),f=Math.sin(C+$1)*h,x=Math.sin(C+$1)*(l?l/2-g:h),r.arc(i-v,s-f,g,C-e0,C-z0),r.arc(i+x,s-c,g,C-z0,C),r.arc(i+v,s+f,g,C,C+z0),r.arc(i-x,s+c,g,C+z0,C+e0),r.closePath();break;case"rect":if(!T){h=Math.SQRT1_2*M,y=l?l/2:h,r.rect(i-y,s-h,2*y,2*h);break}C+=$1;case"rectRot":v=Math.cos(C)*(l?l/2:M),c=Math.cos(C)*M,f=Math.sin(C)*M,x=Math.sin(C)*(l?l/2:M),r.moveTo(i-v,s-f),r.lineTo(i+x,s-c),r.lineTo(i+v,s+f),r.lineTo(i-x,s+c),r.closePath();break;case"crossRot":C+=$1;case"cross":v=Math.cos(C)*(l?l/2:M),c=Math.cos(C)*M,f=Math.sin(C)*M,x=Math.sin(C)*(l?l/2:M),r.moveTo(i-v,s-f),r.lineTo(i+v,s+f),r.moveTo(i+x,s-c),r.lineTo(i-x,s+c);break;case"star":v=Math.cos(C)*(l?l/2:M),c=Math.cos(C)*M,f=Math.sin(C)*M,x=Math.sin(C)*(l?l/2:M),r.moveTo(i-v,s-f),r.lineTo(i+v,s+f),r.moveTo(i+x,s-c),r.lineTo(i-x,s+c),C+=$1,v=Math.cos(C)*(l?l/2:M),c=Math.cos(C)*M,f=Math.sin(C)*M,x=Math.sin(C)*(l?l/2:M),r.moveTo(i-v,s-f),r.lineTo(i+v,s+f),r.moveTo(i+x,s-c),r.lineTo(i-x,s+c);break;case"line":c=l?l/2:Math.cos(C)*M,f=Math.sin(C)*M,r.moveTo(i-c,s-f),r.lineTo(i+c,s+f);break;case"dash":r.moveTo(i,s),r.lineTo(i+Math.cos(C)*(l?l/2:M),s+Math.sin(C)*M);break;case!1:r.closePath();break}r.fill(),t.borderWidth>0&&r.stroke()}}function Wi(r,t,i){return i=i||.5,!t||r&&r.x>t.left-i&&r.x<t.right+i&&r.y>t.top-i&&r.y<t.bottom+i}function n8(r,t){r.save(),r.beginPath(),r.rect(t.left,t.top,t.right-t.left,t.bottom-t.top),r.clip()}function i8(r){r.restore()}function bl(r,t){t.translation&&r.translate(t.translation[0],t.translation[1]),P9(t.rotation)||r.rotate(t.rotation),t.color&&(r.fillStyle=t.color),t.textAlign&&(r.textAlign=t.textAlign),t.textBaseline&&(r.textBaseline=t.textBaseline)}function Ml(r,t,i,s,l){if(l.strikethrough||l.underline){const a=r.measureText(s),c=t-a.actualBoundingBoxLeft,f=t+a.actualBoundingBoxRight,h=i-a.actualBoundingBoxAscent,g=i+a.actualBoundingBoxDescent,y=l.strikethrough?(h+g)/2:g;r.strokeStyle=r.fillStyle,r.beginPath(),r.lineWidth=l.decorationWidth||2,r.moveTo(c,y),r.lineTo(f,y),r.stroke()}}function Cl(r,t){const i=r.fillStyle;r.fillStyle=t.color,r.fillRect(t.left,t.top,t.width,t.height),r.fillStyle=i}function F6(r,t,i,s,l,a={}){const c=V9(t)?t:[t],f=a.strokeWidth>0&&a.strokeColor!=="";let h,g;for(r.save(),r.font=l.string,bl(r,a),h=0;h<c.length;++h)g=c[h],a.backdrop&&Cl(r,a.backdrop),f&&(a.strokeColor&&(r.strokeStyle=a.strokeColor),P9(a.strokeWidth)||(r.lineWidth=a.strokeWidth),r.strokeText(g,i,s,a.maxWidth)),r.fillText(g,i,s,a.maxWidth),Ml(r,i,s,g,a),s+=Number(l.lineHeight);r.restore()}function w3(r,t){const{x:i,y:s,w:l,h:a,radius:c}=t;r.arc(i+c.topLeft,s+c.topLeft,c.topLeft,1.5*e0,e0,!0),r.lineTo(i,s+a-c.bottomLeft),r.arc(i+c.bottomLeft,s+a-c.bottomLeft,c.bottomLeft,e0,z0,!0),r.lineTo(i+l-c.bottomRight,s+a),r.arc(i+l-c.bottomRight,s+a-c.bottomRight,c.bottomRight,z0,0,!0),r.lineTo(i+l,s+c.topRight),r.arc(i+l-c.topRight,s+c.topRight,c.topRight,0,-z0,!0),r.lineTo(i+c.topLeft,s)}const El=/^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/,Pl=/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;function Tl(r,t){const i=(""+r).match(El);if(!i||i[1]==="normal")return t*1.2;switch(r=+i[2],i[3]){case"px":return r;case"%":r/=100;break}return t*r}const Ol=r=>+r||0;function Ui(r,t){const i={},s=y9(t),l=s?Object.keys(t):t,a=y9(r)?s?c=>w9(r[c],r[t[c]]):c=>r[c]:()=>r;for(const c of l)i[c]=Ol(a(c));return i}function $i(r){return Ui(r,{top:"y",right:"x",bottom:"y",left:"x"})}function P5(r){return Ui(r,["topLeft","topRight","bottomLeft","bottomRight"])}function C0(r){const t=$i(r);return t.width=t.left+t.right,t.height=t.top+t.bottom,t}function J9(r,t){r=r||{},t=t||N9.font;let i=w9(r.size,t.size);typeof i=="string"&&(i=parseInt(i,10));let s=w9(r.style,t.style);s&&!(""+s).match(Pl)&&(console.warn('Invalid font style specified: "'+s+'"'),s=void 0);const l={family:w9(r.family,t.family),lineHeight:Tl(w9(r.lineHeight,t.lineHeight),i),size:i,style:s,weight:w9(r.weight,t.weight),string:""};return l.string=Sl(l),l}function t3(r,t,i,s){let l,a,c;for(l=0,a=r.length;l<a;++l)if(c=r[l],c!==void 0&&c!==void 0)return c}function Ll(r,t,i){const{min:s,max:l}=r,a=Xo(t,(l-s)/2),c=(f,h)=>i&&f===0?0:f+h;return{min:c(s,-Math.abs(a)),max:c(l,a)}}function D5(r,t){return Object.assign(Object.create(r),t)}function r8(r,t=[""],i,s,l=()=>r[0]){const a=i||r;typeof s>"u"&&(s=Xi("_fallback",r));const c={[Symbol.toStringTag]:"Object",_cacheable:!0,_scopes:r,_rootScopes:a,_fallback:s,_getTarget:l,override:f=>r8([f,...r],t,a,s)};return new Proxy(c,{deleteProperty(f,h){return delete f[h],delete f._keys,delete r[0][h],!0},get(f,h){return Ki(f,h,()=>jl(h,t,r,f))},getOwnPropertyDescriptor(f,h){return Reflect.getOwnPropertyDescriptor(f._scopes[0],h)},getPrototypeOf(){return Reflect.getPrototypeOf(r[0])},has(f,h){return Rn(f).includes(h)},ownKeys(f){return Rn(f)},set(f,h,g){const y=f._storage||(f._storage=l());return f[h]=y[h]=g,delete f._keys,!0}})}function L5(r,t,i,s){const l={_cacheable:!1,_proxy:r,_context:t,_subProxy:i,_stack:new Set,_descriptors:Yi(r,s),setContext:a=>L5(r,a,i,s),override:a=>L5(r.override(a),t,i,s)};return new Proxy(l,{deleteProperty(a,c){return delete a[c],delete r[c],!0},get(a,c,f){return Ki(a,c,()=>Rl(a,c,f))},getOwnPropertyDescriptor(a,c){return a._descriptors.allKeys?Reflect.has(r,c)?{enumerable:!0,configurable:!0}:void 0:Reflect.getOwnPropertyDescriptor(r,c)},getPrototypeOf(){return Reflect.getPrototypeOf(r)},has(a,c){return Reflect.has(r,c)},ownKeys(){return Reflect.ownKeys(r)},set(a,c,f){return r[c]=f,delete a[c],!0}})}function Yi(r,t={scriptable:!0,indexable:!0}){const{_scriptable:i=t.scriptable,_indexable:s=t.indexable,_allKeys:l=t.allKeys}=r;return{allKeys:l,scriptable:i,indexable:s,isScriptable:O1(i)?i:()=>i,isIndexable:O1(s)?s:()=>s}}const Dl=(r,t)=>r?r+J4(t):t,s8=(r,t)=>y9(t)&&r!=="adapters"&&(Object.getPrototypeOf(t)===null||t.constructor===Object);function Ki(r,t,i){if(Object.prototype.hasOwnProperty.call(r,t)||t==="constructor")return r[t];const s=i();return r[t]=s,s}function Rl(r,t,i){const{_proxy:s,_context:l,_subProxy:a,_descriptors:c}=r;let f=s[t];return O1(f)&&c.isScriptable(t)&&(f=zl(t,f,r,i)),V9(f)&&f.length&&(f=Il(t,f,r,c.isIndexable)),s8(t,f)&&(f=L5(f,l,a&&a[t],c)),f}function zl(r,t,i,s){const{_proxy:l,_context:a,_subProxy:c,_stack:f}=i;if(f.has(r))throw new Error("Recursion detected: "+Array.from(f).join("->")+"->"+r);f.add(r);let h=t(a,c||s);return f.delete(r),s8(r,h)&&(h=o8(l._scopes,l,r,h)),h}function Il(r,t,i,s){const{_proxy:l,_context:a,_subProxy:c,_descriptors:f}=i;if(typeof a.index<"u"&&s(r))return t[a.index%t.length];if(y9(t[0])){const h=t,g=l._scopes.filter(y=>y!==h);t=[];for(const y of h){const v=o8(g,l,r,y);t.push(L5(v,a,c&&c[r],f))}}return t}function Qi(r,t,i){return O1(r)?r(t,i):r}const Fl=(r,t)=>r===!0?t:typeof r=="string"?O5(t,r):void 0;function Nl(r,t,i,s,l){for(const a of t){const c=Fl(i,a);if(c){r.add(c);const f=Qi(c._fallback,i,l);if(typeof f<"u"&&f!==i&&f!==s)return f}else if(c===!1&&typeof s<"u"&&i!==s)return null}return!1}function o8(r,t,i,s){const l=t._rootScopes,a=Qi(t._fallback,i,s),c=[...r,...l],f=new Set;f.add(s);let h=Dn(f,c,i,a||i,s);return h===null||typeof a<"u"&&a!==i&&(h=Dn(f,c,a,h,s),h===null)?!1:r8(Array.from(f),[""],l,a,()=>Al(t,i,s))}function Dn(r,t,i,s,l){for(;i;)i=Nl(r,t,i,s,l);return i}function Al(r,t,i){const s=r._getTarget();t in s||(s[t]={});const l=s[t];return V9(l)&&y9(i)?i:l||{}}function jl(r,t,i,s){let l;for(const a of t)if(l=Xi(Dl(a,r),i),typeof l<"u")return s8(r,l)?o8(i,s,r,l):l}function Xi(r,t){for(const i of t){if(!i)continue;const s=i[r];if(typeof s<"u")return s}}function Rn(r){let t=r._keys;return t||(t=r._keys=Bl(r._scopes)),t}function Bl(r){const t=new Set;for(const i of r)for(const s of Object.keys(i).filter(l=>!l.startsWith("_")))t.add(s);return Array.from(t)}function l8(){return typeof window<"u"&&typeof document<"u"}function a8(r){let t=r.parentNode;return t&&t.toString()==="[object ShadowRoot]"&&(t=t.host),t}function k3(r,t,i){let s;return typeof r=="string"?(s=parseInt(r,10),r.indexOf("%")!==-1&&(s=s/100*t.parentNode[i])):s=r,s}const M3=r=>r.ownerDocument.defaultView.getComputedStyle(r,null);function Hl(r,t){return M3(r).getPropertyValue(t)}const Vl=["top","right","bottom","left"];function Z1(r,t,i){const s={};i=i?"-"+i:"";for(let l=0;l<4;l++){const a=Vl[l];s[a]=parseFloat(r[t+"-"+a+i])||0}return s.width=s.left+s.right,s.height=s.top+s.bottom,s}const Wl=(r,t,i)=>(r>0||t>0)&&(!i||!i.shadowRoot);function Ul(r,t){const i=r.touches,s=i&&i.length?i[0]:r,{offsetX:l,offsetY:a}=s;let c=!1,f,h;if(Wl(l,a,r.target))f=l,h=a;else{const g=t.getBoundingClientRect();f=s.clientX-g.left,h=s.clientY-g.top,c=!0}return{x:f,y:h,box:c}}function G1(r,t){if("native"in r)return r;const{canvas:i,currentDevicePixelRatio:s}=t,l=M3(i),a=l.boxSizing==="border-box",c=Z1(l,"padding"),f=Z1(l,"border","width"),{x:h,y:g,box:y}=Ul(r,i),v=c.left+(y&&f.left),x=c.top+(y&&f.top);let{width:k,height:T}=t;return a&&(k-=c.width+f.width,T-=c.height+f.height),{x:Math.round((h-v)/k*i.width/s),y:Math.round((g-x)/T*i.height/s)}}function $l(r,t,i){let s,l;if(t===void 0||i===void 0){const a=r&&a8(r);if(!a)t=r.clientWidth,i=r.clientHeight;else{const c=a.getBoundingClientRect(),f=M3(a),h=Z1(f,"border","width"),g=Z1(f,"padding");t=c.width-g.width-h.width,i=c.height-g.height-h.height,s=k3(f.maxWidth,a,"clientWidth"),l=k3(f.maxHeight,a,"clientHeight")}}return{width:t,height:i,maxWidth:s||x3,maxHeight:l||x3}}const n3=r=>Math.round(r*10)/10;function Yl(r,t,i,s){const l=M3(r),a=Z1(l,"margin"),c=k3(l.maxWidth,r,"clientWidth")||x3,f=k3(l.maxHeight,r,"clientHeight")||x3,h=$l(r,t,i);let{width:g,height:y}=h;if(l.boxSizing==="content-box"){const x=Z1(l,"border","width"),k=Z1(l,"padding");g-=k.width+x.width,y-=k.height+x.height}return g=Math.max(0,g-a.width),y=Math.max(0,s?g/s:y-a.height),g=n3(Math.min(g,c,h.maxWidth)),y=n3(Math.min(y,f,h.maxHeight)),g&&!y&&(y=n3(g/2)),(t!==void 0||i!==void 0)&&s&&h.height&&y>h.height&&(y=h.height,g=n3(Math.floor(y*s))),{width:g,height:y}}function zn(r,t,i){const s=t||1,l=Math.floor(r.height*s),a=Math.floor(r.width*s);r.height=Math.floor(r.height),r.width=Math.floor(r.width);const c=r.canvas;return c.style&&(i||!c.style.height&&!c.style.width)&&(c.style.height=`${r.height}px`,c.style.width=`${r.width}px`),r.currentDevicePixelRatio!==s||c.height!==l||c.width!==a?(r.currentDevicePixelRatio=s,c.height=l,c.width=a,r.ctx.setTransform(s,0,0,s,0,0),!0):!1}const Kl=function(){let r=!1;try{const t={get passive(){return r=!0,!1}};l8()&&(window.addEventListener("test",null,t),window.removeEventListener("test",null,t))}catch{}return r}();function In(r,t){const i=Hl(r,t),s=i&&i.match(/^(\d+)(\.\d+)?px$/);return s?+s[1]:void 0}const Ql=function(r,t){return{x(i){return r+r+t-i},setWidth(i){t=i},textAlign(i){return i==="center"?i:i==="right"?"left":"right"},xPlus(i,s){return i-s},leftForLtr(i,s){return i-s}}},Xl=function(){return{x(r){return r},setWidth(r){},textAlign(r){return r},xPlus(r,t){return r+t},leftForLtr(r,t){return r}}};function T5(r,t,i){return r?Ql(t,i):Xl()}function Gi(r,t){let i,s;(t==="ltr"||t==="rtl")&&(i=r.canvas.style,s=[i.getPropertyValue("direction"),i.getPropertyPriority("direction")],i.setProperty("direction",t,"important"),r.prevTextDirection=s)}function qi(r,t){t!==void 0&&(delete r.prevTextDirection,r.canvas.style.setProperty("direction",t[0],t[1]))}/*!
 * Chart.js v4.4.7
 * https://www.chartjs.org
 * (c) 2024 Chart.js Contributors
 * Released under the MIT License
 */class Gl{constructor(){this._request=null,this._charts=new Map,this._running=!1,this._lastDate=void 0}_notify(t,i,s,l){const a=i.listeners[l],c=i.duration;a.forEach(f=>f({chart:t,initial:i.initial,numSteps:c,currentStep:Math.min(s-i.start,c)}))}_refresh(){this._request||(this._running=!0,this._request=Fi.call(window,()=>{this._update(),this._request=null,this._running&&this._refresh()}))}_update(t=Date.now()){let i=0;this._charts.forEach((s,l)=>{if(!s.running||!s.items.length)return;const a=s.items;let c=a.length-1,f=!1,h;for(;c>=0;--c)h=a[c],h._active?(h._total>s.duration&&(s.duration=h._total),h.tick(t),f=!0):(a[c]=a[a.length-1],a.pop());f&&(l.draw(),this._notify(l,s,t,"progress")),a.length||(s.running=!1,this._notify(l,s,t,"complete"),s.initial=!1),i+=a.length}),this._lastDate=t,i===0&&(this._running=!1)}_getAnims(t){const i=this._charts;let s=i.get(t);return s||(s={running:!1,initial:!0,items:[],listeners:{complete:[],progress:[]}},i.set(t,s)),s}listen(t,i,s){this._getAnims(t).listeners[i].push(s)}add(t,i){!i||!i.length||this._getAnims(t).items.push(...i)}has(t){return this._getAnims(t).items.length>0}start(t){const i=this._charts.get(t);i&&(i.running=!0,i.start=Date.now(),i.duration=i.items.reduce((s,l)=>Math.max(s,l._duration),0),this._refresh())}running(t){if(!this._running)return!1;const i=this._charts.get(t);return!(!i||!i.running||!i.items.length)}stop(t){const i=this._charts.get(t);if(!i||!i.items.length)return;const s=i.items;let l=s.length-1;for(;l>=0;--l)s[l].cancel();i.items=[],this._notify(t,i,Date.now(),"complete")}remove(t){return this._charts.delete(t)}}var n1=new Gl;const Fn="transparent",ql={boolean(r,t,i){return i>.5?t:r},color(r,t,i){const s=En(r||Fn),l=s.valid&&En(t||Fn);return l&&l.valid?l.mix(s,i).hexString():t},number(r,t,i){return r+(t-r)*i}};class Zl{constructor(t,i,s,l){const a=i[s];l=t3([t.to,l,a,t.from]);const c=t3([t.from,a,l]);this._active=!0,this._fn=t.fn||ql[t.type||typeof c],this._easing=O6[t.easing]||O6.linear,this._start=Math.floor(Date.now()+(t.delay||0)),this._duration=this._total=Math.floor(t.duration),this._loop=!!t.loop,this._target=i,this._prop=s,this._from=c,this._to=l,this._promises=void 0}active(){return this._active}update(t,i,s){if(this._active){this._notify(!1);const l=this._target[this._prop],a=s-this._start,c=this._duration-a;this._start=s,this._duration=Math.floor(Math.max(c,t.duration)),this._total+=a,this._loop=!!t.loop,this._to=t3([t.to,i,l,t.from]),this._from=t3([t.from,l,i])}}cancel(){this._active&&(this.tick(Date.now()),this._active=!1,this._notify(!1))}tick(t){const i=t-this._start,s=this._duration,l=this._prop,a=this._from,c=this._loop,f=this._to;let h;if(this._active=a!==f&&(c||i<s),!this._active){this._target[l]=f,this._notify(!0);return}if(i<0){this._target[l]=a;return}h=i/s%2,h=c&&h>1?2-h:h,h=this._easing(Math.min(1,Math.max(0,h))),this._target[l]=this._fn(a,f,h)}wait(){const t=this._promises||(this._promises=[]);return new Promise((i,s)=>{t.push({res:i,rej:s})})}_notify(t){const i=t?"res":"rej",s=this._promises||[];for(let l=0;l<s.length;l++)s[l][i]()}}class Zi{constructor(t,i){this._chart=t,this._properties=new Map,this.configure(i)}configure(t){if(!y9(t))return;const i=Object.keys(N9.animation),s=this._properties;Object.getOwnPropertyNames(t).forEach(l=>{const a=t[l];if(!y9(a))return;const c={};for(const f of i)c[f]=a[f];(V9(a.properties)&&a.properties||[l]).forEach(f=>{(f===l||!s.has(f))&&s.set(f,c)})})}_animateOptions(t,i){const s=i.options,l=ea(t,s);if(!l)return[];const a=this._createAnimations(l,s);return s.$shared&&Jl(t.options.$animations,s).then(()=>{t.options=s},()=>{}),a}_createAnimations(t,i){const s=this._properties,l=[],a=t.$animations||(t.$animations={}),c=Object.keys(i),f=Date.now();let h;for(h=c.length-1;h>=0;--h){const g=c[h];if(g.charAt(0)==="$")continue;if(g==="options"){l.push(...this._animateOptions(t,i));continue}const y=i[g];let v=a[g];const x=s.get(g);if(v)if(x&&v.active()){v.update(x,y,f);continue}else v.cancel();if(!x||!x.duration){t[g]=y;continue}a[g]=v=new Zl(x,t,g,y),l.push(v)}return l}update(t,i){if(this._properties.size===0){Object.assign(t,i);return}const s=this._createAnimations(t,i);if(s.length)return n1.add(this._chart,s),!0}}function Jl(r,t){const i=[],s=Object.keys(t);for(let l=0;l<s.length;l++){const a=r[s[l]];a&&a.active()&&i.push(a.wait())}return Promise.all(i)}function ea(r,t){if(!t)return;let i=r.options;if(!i){r.options=t;return}return i.$shared&&(r.options=i=Object.assign({},i,{$shared:!1,$animations:{}})),i}function Nn(r,t){const i=r&&r.options||{},s=i.reverse,l=i.min===void 0?t:0,a=i.max===void 0?t:0;return{start:s?a:l,end:s?l:a}}function ta(r,t,i){if(i===!1)return!1;const s=Nn(r,i),l=Nn(t,i);return{top:l.end,right:s.end,bottom:l.start,left:s.start}}function na(r){let t,i,s,l;return y9(r)?(t=r.top,i=r.right,s=r.bottom,l=r.left):t=i=s=l=r,{top:t,right:i,bottom:s,left:l,disabled:r===!1}}function Ji(r,t){const i=[],s=r._getSortedDatasetMetas(t);let l,a;for(l=0,a=s.length;l<a;++l)i.push(s[l].index);return i}function An(r,t,i,s={}){const l=r.keys,a=s.mode==="single";let c,f,h,g;if(t===null)return;let y=!1;for(c=0,f=l.length;c<f;++c){if(h=+l[c],h===i){if(y=!0,s.all)continue;break}g=r.values[h],M0(g)&&(a||t===0||T1(t)===T1(g))&&(t+=g)}return!y&&!s.all?0:t}function ia(r,t){const{iScale:i,vScale:s}=t,l=i.axis==="x"?"x":"y",a=s.axis==="x"?"x":"y",c=Object.keys(r),f=new Array(c.length);let h,g,y;for(h=0,g=c.length;h<g;++h)y=c[h],f[h]={[l]:y,[a]:r[y]};return f}function T4(r,t){const i=r&&r.options.stacked;return i||i===void 0&&t.stack!==void 0}function ra(r,t,i){return`${r.id}.${t.id}.${i.stack||i.type}`}function sa(r){const{min:t,max:i,minDefined:s,maxDefined:l}=r.getUserBounds();return{min:s?t:Number.NEGATIVE_INFINITY,max:l?i:Number.POSITIVE_INFINITY}}function oa(r,t,i){const s=r[t]||(r[t]={});return s[i]||(s[i]={})}function jn(r,t,i,s){for(const l of t.getMatchingVisibleMetas(s).reverse()){const a=r[l.index];if(i&&a>0||!i&&a<0)return l.index}return null}function Bn(r,t){const{chart:i,_cachedMeta:s}=r,l=i._stacks||(i._stacks={}),{iScale:a,vScale:c,index:f}=s,h=a.axis,g=c.axis,y=ra(a,c,s),v=t.length;let x;for(let k=0;k<v;++k){const T=t[k],{[h]:M,[g]:C}=T,L=T._stacks||(T._stacks={});x=L[g]=oa(l,y,M),x[f]=C,x._top=jn(x,c,!0,s.type),x._bottom=jn(x,c,!1,s.type);const F=x._visualValues||(x._visualValues={});F[f]=C}}function O4(r,t){const i=r.scales;return Object.keys(i).filter(s=>i[s].axis===t).shift()}function la(r,t){return D5(r,{active:!1,dataset:void 0,datasetIndex:t,index:t,mode:"default",type:"dataset"})}function aa(r,t,i){return D5(r,{active:!1,dataIndex:t,parsed:void 0,raw:void 0,element:i,index:t,mode:"default",type:"data"})}function _6(r,t){const i=r.controller.index,s=r.vScale&&r.vScale.axis;if(s){t=t||r._parsed;for(const l of t){const a=l._stacks;if(!a||a[s]===void 0||a[s][i]===void 0)return;delete a[s][i],a[s]._visualValues!==void 0&&a[s]._visualValues[i]!==void 0&&delete a[s]._visualValues[i]}}}const L4=r=>r==="reset"||r==="none",Hn=(r,t)=>t?r:Object.assign({},r),ua=(r,t,i)=>r&&!t.hidden&&t._stacked&&{keys:Ji(i,!0),values:null};class D6{constructor(t,i){this.chart=t,this._ctx=t.ctx,this.index=i,this._cachedDataOpts={},this._cachedMeta=this.getMeta(),this._type=this._cachedMeta.type,this.options=void 0,this._parsing=!1,this._data=void 0,this._objectData=void 0,this._sharedOptions=void 0,this._drawStart=void 0,this._drawCount=void 0,this.enableOptionSharing=!1,this.supportsDecimation=!1,this.$context=void 0,this._syncList=[],this.datasetElementType=new.target.datasetElementType,this.dataElementType=new.target.dataElementType,this.initialize()}initialize(){const t=this._cachedMeta;this.configure(),this.linkScales(),t._stacked=T4(t.vScale,t),this.addElements(),this.options.fill&&!this.chart.isPluginEnabled("filler")&&console.warn("Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options")}updateIndex(t){this.index!==t&&_6(this._cachedMeta),this.index=t}linkScales(){const t=this.chart,i=this._cachedMeta,s=this.getDataset(),l=(v,x,k,T)=>v==="x"?x:v==="r"?T:k,a=i.xAxisID=w9(s.xAxisID,O4(t,"x")),c=i.yAxisID=w9(s.yAxisID,O4(t,"y")),f=i.rAxisID=w9(s.rAxisID,O4(t,"r")),h=i.indexAxis,g=i.iAxisID=l(h,a,c,f),y=i.vAxisID=l(h,c,a,f);i.xScale=this.getScaleForId(a),i.yScale=this.getScaleForId(c),i.rScale=this.getScaleForId(f),i.iScale=this.getScaleForId(g),i.vScale=this.getScaleForId(y)}getDataset(){return this.chart.data.datasets[this.index]}getMeta(){return this.chart.getDatasetMeta(this.index)}getScaleForId(t){return this.chart.scales[t]}_getOtherScale(t){const i=this._cachedMeta;return t===i.iScale?i.vScale:i.iScale}reset(){this._update("reset")}_destroy(){const t=this._cachedMeta;this._data&&bn(this._data,this),t._stacked&&_6(t)}_dataCheck(){const t=this.getDataset(),i=t.data||(t.data=[]),s=this._data;if(y9(i)){const l=this._cachedMeta;this._data=ia(i,l)}else if(s!==i){if(s){bn(s,this);const l=this._cachedMeta;_6(l),l._parsed=[]}i&&Object.isExtensible(i)&&dl(i,this),this._syncList=[],this._data=i}}addElements(){const t=this._cachedMeta;this._dataCheck(),this.datasetElementType&&(t.dataset=new this.datasetElementType)}buildOrUpdateElements(t){const i=this._cachedMeta,s=this.getDataset();let l=!1;this._dataCheck();const a=i._stacked;i._stacked=T4(i.vScale,i),i.stack!==s.stack&&(l=!0,_6(i),i.stack=s.stack),this._resyncElements(t),(l||a!==i._stacked)&&(Bn(this,i._parsed),i._stacked=T4(i.vScale,i))}configure(){const t=this.chart.config,i=t.datasetScopeKeys(this._type),s=t.getOptionScopes(this.getDataset(),i,!0);this.options=t.createResolver(s,this.getContext()),this._parsing=this.options.parsing,this._cachedDataOpts={}}parse(t,i){const{_cachedMeta:s,_data:l}=this,{iScale:a,_stacked:c}=s,f=a.axis;let h=t===0&&i===l.length?!0:s._sorted,g=t>0&&s._parsed[t-1],y,v,x;if(this._parsing===!1)s._parsed=l,s._sorted=!0,x=l;else{V9(l[t])?x=this.parseArrayData(s,l,t,i):y9(l[t])?x=this.parseObjectData(s,l,t,i):x=this.parsePrimitiveData(s,l,t,i);const k=()=>v[f]===null||g&&v[f]<g[f];for(y=0;y<i;++y)s._parsed[y+t]=v=x[y],h&&(k()&&(h=!1),g=v);s._sorted=h}c&&Bn(this,x)}parsePrimitiveData(t,i,s,l){const{iScale:a,vScale:c}=t,f=a.axis,h=c.axis,g=a.getLabels(),y=a===c,v=new Array(l);let x,k,T;for(x=0,k=l;x<k;++x)T=x+s,v[x]={[f]:y||a.parse(g[T],T),[h]:c.parse(i[T],T)};return v}parseArrayData(t,i,s,l){const{xScale:a,yScale:c}=t,f=new Array(l);let h,g,y,v;for(h=0,g=l;h<g;++h)y=h+s,v=i[y],f[h]={x:a.parse(v[0],y),y:c.parse(v[1],y)};return f}parseObjectData(t,i,s,l){const{xScale:a,yScale:c}=t,{xAxisKey:f="x",yAxisKey:h="y"}=this._parsing,g=new Array(l);let y,v,x,k;for(y=0,v=l;y<v;++y)x=y+s,k=i[x],g[y]={x:a.parse(O5(k,f),x),y:c.parse(O5(k,h),x)};return g}getParsed(t){return this._cachedMeta._parsed[t]}getDataElement(t){return this._cachedMeta.data[t]}applyStack(t,i,s){const l=this.chart,a=this._cachedMeta,c=i[t.axis],f={keys:Ji(l,!0),values:i._stacks[t.axis]._visualValues};return An(f,c,a.index,{mode:s})}updateRangeFromParsed(t,i,s,l){const a=s[i.axis];let c=a===null?NaN:a;const f=l&&s._stacks[i.axis];l&&f&&(l.values=f,c=An(l,a,this._cachedMeta.index)),t.min=Math.min(t.min,c),t.max=Math.max(t.max,c)}getMinMax(t,i){const s=this._cachedMeta,l=s._parsed,a=s._sorted&&t===s.iScale,c=l.length,f=this._getOtherScale(t),h=ua(i,s,this.chart),g={min:Number.POSITIVE_INFINITY,max:Number.NEGATIVE_INFINITY},{min:y,max:v}=sa(f);let x,k;function T(){k=l[x];const M=k[f.axis];return!M0(k[t.axis])||y>M||v<M}for(x=0;x<c&&!(!T()&&(this.updateRangeFromParsed(g,t,k,h),a));++x);if(a){for(x=c-1;x>=0;--x)if(!T()){this.updateRangeFromParsed(g,t,k,h);break}}return g}getAllParsedValues(t){const i=this._cachedMeta._parsed,s=[];let l,a,c;for(l=0,a=i.length;l<a;++l)c=i[l][t.axis],M0(c)&&s.push(c);return s}getMaxOverflow(){return!1}getLabelAndValue(t){const i=this._cachedMeta,s=i.iScale,l=i.vScale,a=this.getParsed(t);return{label:s?""+s.getLabelForValue(a[s.axis]):"",value:l?""+l.getLabelForValue(a[l.axis]):""}}_update(t){const i=this._cachedMeta;this.update(t||"default"),i._clip=na(w9(this.options.clip,ta(i.xScale,i.yScale,this.getMaxOverflow())))}update(t){}draw(){const t=this._ctx,i=this.chart,s=this._cachedMeta,l=s.data||[],a=i.chartArea,c=[],f=this._drawStart||0,h=this._drawCount||l.length-f,g=this.options.drawActiveElementsOnTop;let y;for(s.dataset&&s.dataset.draw(t,a,f,h),y=f;y<f+h;++y){const v=l[y];v.hidden||(v.active&&g?c.push(v):v.draw(t,a))}for(y=0;y<c.length;++y)c[y].draw(t,a)}getStyle(t,i){const s=i?"active":"default";return t===void 0&&this._cachedMeta.dataset?this.resolveDatasetElementOptions(s):this.resolveDataElementOptions(t||0,s)}getContext(t,i,s){const l=this.getDataset();let a;if(t>=0&&t<this._cachedMeta.data.length){const c=this._cachedMeta.data[t];a=c.$context||(c.$context=aa(this.getContext(),t,c)),a.parsed=this.getParsed(t),a.raw=l.data[t],a.index=a.dataIndex=t}else a=this.$context||(this.$context=la(this.chart.getContext(),this.index)),a.dataset=l,a.index=a.datasetIndex=this.index;return a.active=!!i,a.mode=s,a}resolveDatasetElementOptions(t){return this._resolveElementOptions(this.datasetElementType.id,t)}resolveDataElementOptions(t,i){return this._resolveElementOptions(this.dataElementType.id,i,t)}_resolveElementOptions(t,i="default",s){const l=i==="active",a=this._cachedDataOpts,c=t+"-"+i,f=a[c],h=this.enableOptionSharing&&I6(s);if(f)return Hn(f,h);const g=this.chart.config,y=g.datasetElementScopeKeys(this._type,t),v=l?[`${t}Hover`,"hover",t,""]:[t,""],x=g.getOptionScopes(this.getDataset(),y),k=Object.keys(N9.elements[t]),T=()=>this.getContext(s,l,i),M=g.resolveNamedOptions(x,k,T,v);return M.$shared&&(M.$shared=h,a[c]=Object.freeze(Hn(M,h))),M}_resolveAnimations(t,i,s){const l=this.chart,a=this._cachedDataOpts,c=`animation-${i}`,f=a[c];if(f)return f;let h;if(l.options.animation!==!1){const y=this.chart.config,v=y.datasetAnimationScopeKeys(this._type,i),x=y.getOptionScopes(this.getDataset(),v);h=y.createResolver(x,this.getContext(t,s,i))}const g=new Zi(l,h&&h.animations);return h&&h._cacheable&&(a[c]=Object.freeze(g)),g}getSharedOptions(t){if(t.$shared)return this._sharedOptions||(this._sharedOptions=Object.assign({},t))}includeOptions(t,i){return!i||L4(t)||this.chart._animationsDisabled}_getSharedOptions(t,i){const s=this.resolveDataElementOptions(t,i),l=this._sharedOptions,a=this.getSharedOptions(s),c=this.includeOptions(i,a)||a!==l;return this.updateSharedOptions(a,i,s),{sharedOptions:a,includeOptions:c}}updateElement(t,i,s,l){L4(l)?Object.assign(t,s):this._resolveAnimations(i,l).update(t,s)}updateSharedOptions(t,i,s){t&&!L4(i)&&this._resolveAnimations(void 0,i).update(t,s)}_setStyle(t,i,s,l){t.active=l;const a=this.getStyle(i,l);this._resolveAnimations(i,s,l).update(t,{options:!l&&this.getSharedOptions(a)||a})}removeHoverStyle(t,i,s){this._setStyle(t,s,"active",!1)}setHoverStyle(t,i,s){this._setStyle(t,s,"active",!0)}_removeDatasetHoverStyle(){const t=this._cachedMeta.dataset;t&&this._setStyle(t,void 0,"active",!1)}_setDatasetHoverStyle(){const t=this._cachedMeta.dataset;t&&this._setStyle(t,void 0,"active",!0)}_resyncElements(t){const i=this._data,s=this._cachedMeta.data;for(const[f,h,g]of this._syncList)this[f](h,g);this._syncList=[];const l=s.length,a=i.length,c=Math.min(a,l);c&&this.parse(0,c),a>l?this._insertElements(l,a-l,t):a<l&&this._removeElements(a,l-a)}_insertElements(t,i,s=!0){const l=this._cachedMeta,a=l.data,c=t+i;let f;const h=g=>{for(g.length+=i,f=g.length-1;f>=c;f--)g[f]=g[f-i]};for(h(a),f=t;f<c;++f)a[f]=new this.dataElementType;this._parsing&&h(l._parsed),this.parse(t,i),s&&this.updateElements(a,t,i,"reset")}updateElements(t,i,s,l){}_removeElements(t,i){const s=this._cachedMeta;if(this._parsing){const l=s._parsed.splice(t,i);s._stacked&&_6(s,l)}s.data.splice(t,i)}_sync(t){if(this._parsing)this._syncList.push(t);else{const[i,s,l]=t;this[i](s,l)}this.chart._dataChanges.push([this.index,...t])}_onDataPush(){const t=arguments.length;this._sync(["_insertElements",this.getDataset().data.length-t,t])}_onDataPop(){this._sync(["_removeElements",this._cachedMeta.data.length-1,1])}_onDataShift(){this._sync(["_removeElements",0,1])}_onDataSplice(t,i){i&&this._sync(["_removeElements",t,i]);const s=arguments.length-2;s&&this._sync(["_insertElements",t,s])}_onDataUnshift(){this._sync(["_insertElements",0,arguments.length])}}h9(D6,"defaults",{}),h9(D6,"datasetElementType",null),h9(D6,"dataElementType",null);function ca(r,t){if(!r._cache.$bar){const i=r.getMatchingVisibleMetas(t);let s=[];for(let l=0,a=i.length;l<a;l++)s=s.concat(i[l].controller.getAllParsedValues(r));r._cache.$bar=Ii(s.sort((l,a)=>l-a))}return r._cache.$bar}function fa(r){const t=r.iScale,i=ca(t,r.type);let s=t._length,l,a,c,f;const h=()=>{c===32767||c===-32768||(I6(f)&&(s=Math.min(s,Math.abs(c-f)||s)),f=c)};for(l=0,a=i.length;l<a;++l)c=t.getPixelForValue(i[l]),h();for(f=void 0,l=0,a=t.ticks.length;l<a;++l)c=t.getPixelForTick(l),h();return s}function da(r,t,i,s){const l=i.barThickness;let a,c;return P9(l)?(a=t.min*i.categoryPercentage,c=i.barPercentage):(a=l*s,c=1),{chunk:a/s,ratio:c,start:t.pixels[r]-a/2}}function ha(r,t,i,s){const l=t.pixels,a=l[r];let c=r>0?l[r-1]:null,f=r<l.length-1?l[r+1]:null;const h=i.categoryPercentage;c===null&&(c=a-(f===null?t.end-t.start:f-a)),f===null&&(f=a+a-c);const g=a-(a-Math.min(c,f))/2*h;return{chunk:Math.abs(f-c)/2*h/s,ratio:i.barPercentage,start:g}}function pa(r,t,i,s){const l=i.parse(r[0],s),a=i.parse(r[1],s),c=Math.min(l,a),f=Math.max(l,a);let h=c,g=f;Math.abs(c)>Math.abs(f)&&(h=f,g=c),t[i.axis]=g,t._custom={barStart:h,barEnd:g,start:l,end:a,min:c,max:f}}function er(r,t,i,s){return V9(r)?pa(r,t,i,s):t[i.axis]=i.parse(r,s),t}function Vn(r,t,i,s){const l=r.iScale,a=r.vScale,c=l.getLabels(),f=l===a,h=[];let g,y,v,x;for(g=i,y=i+s;g<y;++g)x=t[g],v={},v[l.axis]=f||l.parse(c[g],g),h.push(er(x,v,a,g));return h}function D4(r){return r&&r.barStart!==void 0&&r.barEnd!==void 0}function ga(r,t,i){return r!==0?T1(r):(t.isHorizontal()?1:-1)*(t.min>=i?1:-1)}function ma(r){let t,i,s,l,a;return r.horizontal?(t=r.base>r.x,i="left",s="right"):(t=r.base<r.y,i="bottom",s="top"),t?(l="end",a="start"):(l="start",a="end"),{start:i,end:s,reverse:t,top:l,bottom:a}}function ya(r,t,i,s){let l=t.borderSkipped;const a={};if(!l){r.borderSkipped=a;return}if(l===!0){r.borderSkipped={top:!0,right:!0,bottom:!0,left:!0};return}const{start:c,end:f,reverse:h,top:g,bottom:y}=ma(r);l==="middle"&&i&&(r.enableBorderRadius=!0,(i._top||0)===s?l=g:(i._bottom||0)===s?l=y:(a[Wn(y,c,f,h)]=!0,l=g)),a[Wn(l,c,f,h)]=!0,r.borderSkipped=a}function Wn(r,t,i,s){return s?(r=va(r,t,i),r=Un(r,i,t)):r=Un(r,t,i),r}function va(r,t,i){return r===t?i:r===i?t:r}function Un(r,t,i){return r==="start"?t:r==="end"?i:r}function xa(r,{inflateAmount:t},i){r.inflateAmount=t==="auto"?i===1?.33:0:t}class h3 extends D6{parsePrimitiveData(t,i,s,l){return Vn(t,i,s,l)}parseArrayData(t,i,s,l){return Vn(t,i,s,l)}parseObjectData(t,i,s,l){const{iScale:a,vScale:c}=t,{xAxisKey:f="x",yAxisKey:h="y"}=this._parsing,g=a.axis==="x"?f:h,y=c.axis==="x"?f:h,v=[];let x,k,T,M;for(x=s,k=s+l;x<k;++x)M=i[x],T={},T[a.axis]=a.parse(O5(M,g),x),v.push(er(O5(M,y),T,c,x));return v}updateRangeFromParsed(t,i,s,l){super.updateRangeFromParsed(t,i,s,l);const a=s._custom;a&&i===this._cachedMeta.vScale&&(t.min=Math.min(t.min,a.min),t.max=Math.max(t.max,a.max))}getMaxOverflow(){return 0}getLabelAndValue(t){const i=this._cachedMeta,{iScale:s,vScale:l}=i,a=this.getParsed(t),c=a._custom,f=D4(c)?"["+c.start+", "+c.end+"]":""+l.getLabelForValue(a[l.axis]);return{label:""+s.getLabelForValue(a[s.axis]),value:f}}initialize(){this.enableOptionSharing=!0,super.initialize();const t=this._cachedMeta;t.stack=this.getDataset().stack}update(t){const i=this._cachedMeta;this.updateElements(i.data,0,i.data.length,t)}updateElements(t,i,s,l){const a=l==="reset",{index:c,_cachedMeta:{vScale:f}}=this,h=f.getBasePixel(),g=f.isHorizontal(),y=this._getRuler(),{sharedOptions:v,includeOptions:x}=this._getSharedOptions(i,l);for(let k=i;k<i+s;k++){const T=this.getParsed(k),M=a||P9(T[f.axis])?{base:h,head:h}:this._calculateBarValuePixels(k),C=this._calculateBarIndexPixels(k,y),L=(T._stacks||{})[f.axis],F={horizontal:g,base:M.base,enableBorderRadius:!L||D4(T._custom)||c===L._top||c===L._bottom,x:g?M.head:C.center,y:g?C.center:M.head,height:g?C.size:Math.abs(M.size),width:g?Math.abs(M.size):C.size};x&&(F.options=v||this.resolveDataElementOptions(k,t[k].active?"active":l));const A=F.options||t[k].options;ya(F,A,L,c),xa(F,A,y.ratio),this.updateElement(t[k],k,F,l)}}_getStacks(t,i){const{iScale:s}=this._cachedMeta,l=s.getMatchingVisibleMetas(this._type).filter(y=>y.controller.options.grouped),a=s.options.stacked,c=[],f=this._cachedMeta.controller.getParsed(i),h=f&&f[s.axis],g=y=>{const v=y._parsed.find(k=>k[s.axis]===h),x=v&&v[y.vScale.axis];if(P9(x)||isNaN(x))return!0};for(const y of l)if(!(i!==void 0&&g(y))&&((a===!1||c.indexOf(y.stack)===-1||a===void 0&&y.stack===void 0)&&c.push(y.stack),y.index===t))break;return c.length||c.push(void 0),c}_getStackCount(t){return this._getStacks(void 0,t).length}_getStackIndex(t,i,s){const l=this._getStacks(t,s),a=i!==void 0?l.indexOf(i):-1;return a===-1?l.length-1:a}_getRuler(){const t=this.options,i=this._cachedMeta,s=i.iScale,l=[];let a,c;for(a=0,c=i.data.length;a<c;++a)l.push(s.getPixelForValue(this.getParsed(a)[s.axis],a));const f=t.barThickness;return{min:f||fa(i),pixels:l,start:s._startPixel,end:s._endPixel,stackCount:this._getStackCount(),scale:s,grouped:t.grouped,ratio:f?1:t.categoryPercentage*t.barPercentage}}_calculateBarValuePixels(t){const{_cachedMeta:{vScale:i,_stacked:s,index:l},options:{base:a,minBarLength:c}}=this,f=a||0,h=this.getParsed(t),g=h._custom,y=D4(g);let v=h[i.axis],x=0,k=s?this.applyStack(i,h,s):v,T,M;k!==v&&(x=k-v,k=v),y&&(v=g.barStart,k=g.barEnd-g.barStart,v!==0&&T1(v)!==T1(g.barEnd)&&(x=0),x+=v);const C=!P9(a)&&!y?a:x;let L=i.getPixelForValue(C);if(this.chart.getDataVisibility(t)?T=i.getPixelForValue(x+k):T=L,M=T-L,Math.abs(M)<c){M=ga(M,i,f)*c,v===f&&(L-=M/2);const F=i.getPixelForDecimal(0),A=i.getPixelForDecimal(1),H=Math.min(F,A),W=Math.max(F,A);L=Math.max(Math.min(L,W),H),T=L+M,s&&!y&&(h._stacks[i.axis]._visualValues[l]=i.getValueForPixel(T)-i.getValueForPixel(L))}if(L===i.getPixelForValue(f)){const F=T1(M)*i.getLineWidthForValue(f)/2;L+=F,M-=F}return{size:M,base:L,head:T,center:T+M/2}}_calculateBarIndexPixels(t,i){const s=i.scale,l=this.options,a=l.skipNull,c=w9(l.maxBarThickness,1/0);let f,h;if(i.grouped){const g=a?this._getStackCount(t):i.stackCount,y=l.barThickness==="flex"?ha(t,i,l,g):da(t,i,l,g),v=this._getStackIndex(this.index,this._cachedMeta.stack,a?t:void 0);f=y.start+y.chunk*v+y.chunk/2,h=Math.min(c,y.chunk*y.ratio)}else f=s.getPixelForValue(this.getParsed(t)[s.axis],t),h=Math.min(c,i.min*i.ratio);return{base:f-h/2,head:f+h/2,center:f,size:h}}draw(){const t=this._cachedMeta,i=t.vScale,s=t.data,l=s.length;let a=0;for(;a<l;++a)this.getParsed(a)[i.axis]!==null&&!s[a].hidden&&s[a].draw(this._ctx)}}h9(h3,"id","bar"),h9(h3,"defaults",{datasetElementType:!1,dataElementType:"bar",categoryPercentage:.8,barPercentage:.9,grouped:!0,animations:{numbers:{type:"number",properties:["x","y","base","width","height"]}}}),h9(h3,"overrides",{scales:{_index_:{type:"category",offset:!0,grid:{offset:!0}},_value_:{type:"linear",beginAtZero:!0}}});function Q1(){throw new Error("This method is not implemented: Check that a complete date adapter is provided.")}class u8{constructor(t){h9(this,"options");this.options=t||{}}static override(t){Object.assign(u8.prototype,t)}init(){}formats(){return Q1()}parse(){return Q1()}format(){return Q1()}add(){return Q1()}diff(){return Q1()}startOf(){return Q1()}endOf(){return Q1()}}var _a={_date:u8};function wa(r,t,i,s){const{controller:l,data:a,_sorted:c}=r,f=l._cachedMeta.iScale;if(f&&t===f.axis&&t!=="r"&&c&&a.length){const h=f._reversePixels?cl:V4;if(s){if(l._sharedOptions){const g=a[0],y=typeof g.getRange=="function"&&g.getRange(t);if(y){const v=h(a,t,i-y),x=h(a,t,i+y);return{lo:v.lo,hi:x.hi}}}}else return h(a,t,i)}return{lo:0,hi:a.length-1}}function j6(r,t,i,s,l){const a=r.getSortedVisibleDatasetMetas(),c=i[t];for(let f=0,h=a.length;f<h;++f){const{index:g,data:y}=a[f],{lo:v,hi:x}=wa(a[f],t,c,l);for(let k=v;k<=x;++k){const T=y[k];T.skip||s(T,g,k)}}}function ka(r){const t=r.indexOf("x")!==-1,i=r.indexOf("y")!==-1;return function(s,l){const a=t?Math.abs(s.x-l.x):0,c=i?Math.abs(s.y-l.y):0;return Math.sqrt(Math.pow(a,2)+Math.pow(c,2))}}function R4(r,t,i,s,l){const a=[];return!l&&!r.isPointInArea(t)||j6(r,i,t,function(f,h,g){!l&&!Wi(f,r.chartArea,0)||f.inRange(t.x,t.y,s)&&a.push({element:f,datasetIndex:h,index:g})},!0),a}function Sa(r,t,i,s){let l=[];function a(c,f,h){const{startAngle:g,endAngle:y}=c.getProps(["startAngle","endAngle"],s),{angle:v}=ol(c,{x:t.x,y:t.y});al(v,g,y)&&l.push({element:c,datasetIndex:f,index:h})}return j6(r,i,t,a),l}function ba(r,t,i,s,l,a){let c=[];const f=ka(i);let h=Number.POSITIVE_INFINITY;function g(y,v,x){const k=y.inRange(t.x,t.y,l);if(s&&!k)return;const T=y.getCenterPoint(l);if(!(!!a||r.isPointInArea(T))&&!k)return;const C=f(t,T);C<h?(c=[{element:y,datasetIndex:v,index:x}],h=C):C===h&&c.push({element:y,datasetIndex:v,index:x})}return j6(r,i,t,g),c}function z4(r,t,i,s,l,a){return!a&&!r.isPointInArea(t)?[]:i==="r"&&!s?Sa(r,t,i,l):ba(r,t,i,s,l,a)}function $n(r,t,i,s,l){const a=[],c=i==="x"?"inXRange":"inYRange";let f=!1;return j6(r,i,t,(h,g,y)=>{h[c]&&h[c](t[i],l)&&(a.push({element:h,datasetIndex:g,index:y}),f=f||h.inRange(t.x,t.y,l))}),s&&!f?[]:a}var Ma={evaluateInteractionItems:j6,modes:{index(r,t,i,s){const l=G1(t,r),a=i.axis||"x",c=i.includeInvisible||!1,f=i.intersect?R4(r,l,a,s,c):z4(r,l,a,!1,s,c),h=[];return f.length?(r.getSortedVisibleDatasetMetas().forEach(g=>{const y=f[0].index,v=g.data[y];v&&!v.skip&&h.push({element:v,datasetIndex:g.index,index:y})}),h):[]},dataset(r,t,i,s){const l=G1(t,r),a=i.axis||"xy",c=i.includeInvisible||!1;let f=i.intersect?R4(r,l,a,s,c):z4(r,l,a,!1,s,c);if(f.length>0){const h=f[0].datasetIndex,g=r.getDatasetMeta(h).data;f=[];for(let y=0;y<g.length;++y)f.push({element:g[y],datasetIndex:h,index:y})}return f},point(r,t,i,s){const l=G1(t,r),a=i.axis||"xy",c=i.includeInvisible||!1;return R4(r,l,a,s,c)},nearest(r,t,i,s){const l=G1(t,r),a=i.axis||"xy",c=i.includeInvisible||!1;return z4(r,l,a,i.intersect,s,c)},x(r,t,i,s){const l=G1(t,r);return $n(r,l,"x",i.intersect,s)},y(r,t,i,s){const l=G1(t,r);return $n(r,l,"y",i.intersect,s)}}};const tr=["left","top","right","bottom"];function w6(r,t){return r.filter(i=>i.pos===t)}function Yn(r,t){return r.filter(i=>tr.indexOf(i.pos)===-1&&i.box.axis===t)}function k6(r,t){return r.sort((i,s)=>{const l=t?s:i,a=t?i:s;return l.weight===a.weight?l.index-a.index:l.weight-a.weight})}function Ca(r){const t=[];let i,s,l,a,c,f;for(i=0,s=(r||[]).length;i<s;++i)l=r[i],{position:a,options:{stack:c,stackWeight:f=1}}=l,t.push({index:i,box:l,pos:a,horizontal:l.isHorizontal(),weight:l.weight,stack:c&&a+c,stackWeight:f});return t}function Ea(r){const t={};for(const i of r){const{stack:s,pos:l,stackWeight:a}=i;if(!s||!tr.includes(l))continue;const c=t[s]||(t[s]={count:0,placed:0,weight:0,size:0});c.count++,c.weight+=a}return t}function Pa(r,t){const i=Ea(r),{vBoxMaxWidth:s,hBoxMaxHeight:l}=t;let a,c,f;for(a=0,c=r.length;a<c;++a){f=r[a];const{fullSize:h}=f.box,g=i[f.stack],y=g&&f.stackWeight/g.weight;f.horizontal?(f.width=y?y*s:h&&t.availableWidth,f.height=l):(f.width=s,f.height=y?y*l:h&&t.availableHeight)}return i}function Ta(r){const t=Ca(r),i=k6(t.filter(g=>g.box.fullSize),!0),s=k6(w6(t,"left"),!0),l=k6(w6(t,"right")),a=k6(w6(t,"top"),!0),c=k6(w6(t,"bottom")),f=Yn(t,"x"),h=Yn(t,"y");return{fullSize:i,leftAndTop:s.concat(a),rightAndBottom:l.concat(h).concat(c).concat(f),chartArea:w6(t,"chartArea"),vertical:s.concat(l).concat(h),horizontal:a.concat(c).concat(f)}}function Kn(r,t,i,s){return Math.max(r[i],t[i])+Math.max(r[s],t[s])}function nr(r,t){r.top=Math.max(r.top,t.top),r.left=Math.max(r.left,t.left),r.bottom=Math.max(r.bottom,t.bottom),r.right=Math.max(r.right,t.right)}function Oa(r,t,i,s){const{pos:l,box:a}=i,c=r.maxPadding;if(!y9(l)){i.size&&(r[l]-=i.size);const v=s[i.stack]||{size:0,count:1};v.size=Math.max(v.size,i.horizontal?a.height:a.width),i.size=v.size/v.count,r[l]+=i.size}a.getPadding&&nr(c,a.getPadding());const f=Math.max(0,t.outerWidth-Kn(c,r,"left","right")),h=Math.max(0,t.outerHeight-Kn(c,r,"top","bottom")),g=f!==r.w,y=h!==r.h;return r.w=f,r.h=h,i.horizontal?{same:g,other:y}:{same:y,other:g}}function La(r){const t=r.maxPadding;function i(s){const l=Math.max(t[s]-r[s],0);return r[s]+=l,l}r.y+=i("top"),r.x+=i("left"),i("right"),i("bottom")}function Da(r,t){const i=t.maxPadding;function s(l){const a={left:0,top:0,right:0,bottom:0};return l.forEach(c=>{a[c]=Math.max(t[c],i[c])}),a}return s(r?["left","right"]:["top","bottom"])}function C6(r,t,i,s){const l=[];let a,c,f,h,g,y;for(a=0,c=r.length,g=0;a<c;++a){f=r[a],h=f.box,h.update(f.width||t.w,f.height||t.h,Da(f.horizontal,t));const{same:v,other:x}=Oa(t,i,f,s);g|=v&&l.length,y=y||x,h.fullSize||l.push(f)}return g&&C6(l,t,i,s)||y}function i3(r,t,i,s,l){r.top=i,r.left=t,r.right=t+s,r.bottom=i+l,r.width=s,r.height=l}function Qn(r,t,i,s){const l=i.padding;let{x:a,y:c}=t;for(const f of r){const h=f.box,g=s[f.stack]||{count:1,placed:0,weight:1},y=f.stackWeight/g.weight||1;if(f.horizontal){const v=t.w*y,x=g.size||h.height;I6(g.start)&&(c=g.start),h.fullSize?i3(h,l.left,c,i.outerWidth-l.right-l.left,x):i3(h,t.left+g.placed,c,v,x),g.start=c,g.placed+=v,c=h.bottom}else{const v=t.h*y,x=g.size||h.width;I6(g.start)&&(a=g.start),h.fullSize?i3(h,a,l.top,x,i.outerHeight-l.bottom-l.top):i3(h,a,t.top+g.placed,x,v),g.start=a,g.placed+=v,a=h.right}}t.x=a,t.y=c}var b0={addBox(r,t){r.boxes||(r.boxes=[]),t.fullSize=t.fullSize||!1,t.position=t.position||"top",t.weight=t.weight||0,t._layers=t._layers||function(){return[{z:0,draw(i){t.draw(i)}}]},r.boxes.push(t)},removeBox(r,t){const i=r.boxes?r.boxes.indexOf(t):-1;i!==-1&&r.boxes.splice(i,1)},configure(r,t,i){t.fullSize=i.fullSize,t.position=i.position,t.weight=i.weight},update(r,t,i,s){if(!r)return;const l=C0(r.options.layout.padding),a=Math.max(t-l.width,0),c=Math.max(i-l.height,0),f=Ta(r.boxes),h=f.vertical,g=f.horizontal;_9(r.boxes,M=>{typeof M.beforeLayout=="function"&&M.beforeLayout()});const y=h.reduce((M,C)=>C.box.options&&C.box.options.display===!1?M:M+1,0)||1,v=Object.freeze({outerWidth:t,outerHeight:i,padding:l,availableWidth:a,availableHeight:c,vBoxMaxWidth:a/2/y,hBoxMaxHeight:c/2}),x=Object.assign({},l);nr(x,C0(s));const k=Object.assign({maxPadding:x,w:a,h:c,x:l.left,y:l.top},l),T=Pa(h.concat(g),v);C6(f.fullSize,k,v,T),C6(h,k,v,T),C6(g,k,v,T)&&C6(h,k,v,T),La(k),Qn(f.leftAndTop,k,v,T),k.x+=k.w,k.y+=k.h,Qn(f.rightAndBottom,k,v,T),r.chartArea={left:k.left,top:k.top,right:k.left+k.w,bottom:k.top+k.h,height:k.h,width:k.w},_9(f.chartArea,M=>{const C=M.box;Object.assign(C,r.chartArea),C.update(k.w,k.h,{left:0,top:0,right:0,bottom:0})})}};class ir{acquireContext(t,i){}releaseContext(t){return!1}addEventListener(t,i,s){}removeEventListener(t,i,s){}getDevicePixelRatio(){return 1}getMaximumSize(t,i,s,l){return i=Math.max(0,i||t.width),s=s||t.height,{width:i,height:Math.max(0,l?Math.floor(i/l):s)}}isAttached(t){return!0}updateConfig(t){}}class Ra extends ir{acquireContext(t){return t&&t.getContext&&t.getContext("2d")||null}updateConfig(t){t.options.animation=!1}}const p3="$chartjs",za={touchstart:"mousedown",touchmove:"mousemove",touchend:"mouseup",pointerenter:"mouseenter",pointerdown:"mousedown",pointermove:"mousemove",pointerup:"mouseup",pointerleave:"mouseout",pointerout:"mouseout"},Xn=r=>r===null||r==="";function Ia(r,t){const i=r.style,s=r.getAttribute("height"),l=r.getAttribute("width");if(r[p3]={initial:{height:s,width:l,style:{display:i.display,height:i.height,width:i.width}}},i.display=i.display||"block",i.boxSizing=i.boxSizing||"border-box",Xn(l)){const a=In(r,"width");a!==void 0&&(r.width=a)}if(Xn(s))if(r.style.height==="")r.height=r.width/(t||2);else{const a=In(r,"height");a!==void 0&&(r.height=a)}return r}const rr=Kl?{passive:!0}:!1;function Fa(r,t,i){r&&r.addEventListener(t,i,rr)}function Na(r,t,i){r&&r.canvas&&r.canvas.removeEventListener(t,i,rr)}function Aa(r,t){const i=za[r.type]||r.type,{x:s,y:l}=G1(r,t);return{type:i,chart:t,native:r,x:s!==void 0?s:null,y:l!==void 0?l:null}}function S3(r,t){for(const i of r)if(i===t||i.contains(t))return!0}function ja(r,t,i){const s=r.canvas,l=new MutationObserver(a=>{let c=!1;for(const f of a)c=c||S3(f.addedNodes,s),c=c&&!S3(f.removedNodes,s);c&&i()});return l.observe(document,{childList:!0,subtree:!0}),l}function Ba(r,t,i){const s=r.canvas,l=new MutationObserver(a=>{let c=!1;for(const f of a)c=c||S3(f.removedNodes,s),c=c&&!S3(f.addedNodes,s);c&&i()});return l.observe(document,{childList:!0,subtree:!0}),l}const N6=new Map;let Gn=0;function sr(){const r=window.devicePixelRatio;r!==Gn&&(Gn=r,N6.forEach((t,i)=>{i.currentDevicePixelRatio!==r&&t()}))}function Ha(r,t){N6.size||window.addEventListener("resize",sr),N6.set(r,t)}function Va(r){N6.delete(r),N6.size||window.removeEventListener("resize",sr)}function Wa(r,t,i){const s=r.canvas,l=s&&a8(s);if(!l)return;const a=Ni((f,h)=>{const g=l.clientWidth;i(f,h),g<l.clientWidth&&i()},window),c=new ResizeObserver(f=>{const h=f[0],g=h.contentRect.width,y=h.contentRect.height;g===0&&y===0||a(g,y)});return c.observe(l),Ha(r,a),c}function I4(r,t,i){i&&i.disconnect(),t==="resize"&&Va(r)}function Ua(r,t,i){const s=r.canvas,l=Ni(a=>{r.ctx!==null&&i(Aa(a,r))},r);return Fa(s,t,l),l}class $a extends ir{acquireContext(t,i){const s=t&&t.getContext&&t.getContext("2d");return s&&s.canvas===t?(Ia(t,i),s):null}releaseContext(t){const i=t.canvas;if(!i[p3])return!1;const s=i[p3].initial;["height","width"].forEach(a=>{const c=s[a];P9(c)?i.removeAttribute(a):i.setAttribute(a,c)});const l=s.style||{};return Object.keys(l).forEach(a=>{i.style[a]=l[a]}),i.width=i.width,delete i[p3],!0}addEventListener(t,i,s){this.removeEventListener(t,i);const l=t.$proxies||(t.$proxies={}),c={attach:ja,detach:Ba,resize:Wa}[i]||Ua;l[i]=c(t,i,s)}removeEventListener(t,i){const s=t.$proxies||(t.$proxies={}),l=s[i];if(!l)return;({attach:I4,detach:I4,resize:I4}[i]||Na)(t,i,l),s[i]=void 0}getDevicePixelRatio(){return window.devicePixelRatio}getMaximumSize(t,i,s,l){return Yl(t,i,s,l)}isAttached(t){const i=t&&a8(t);return!!(i&&i.isConnected)}}function Ya(r){return!l8()||typeof OffscreenCanvas<"u"&&r instanceof OffscreenCanvas?Ra:$a}class L1{constructor(){h9(this,"x");h9(this,"y");h9(this,"active",!1);h9(this,"options");h9(this,"$animations")}tooltipPosition(t){const{x:i,y:s}=this.getProps(["x","y"],t);return{x:i,y:s}}hasValue(){return _3(this.x)&&_3(this.y)}getProps(t,i){const s=this.$animations;if(!i||!s)return this;const l={};return t.forEach(a=>{l[a]=s[a]&&s[a].active()?s[a]._to:this[a]}),l}}h9(L1,"defaults",{}),h9(L1,"defaultRoutes");function Ka(r,t){const i=r.options.ticks,s=Qa(r),l=Math.min(i.maxTicksLimit||s,s),a=i.major.enabled?Ga(t):[],c=a.length,f=a[0],h=a[c-1],g=[];if(c>l)return qa(t,g,a,c/l),g;const y=Xa(a,t,l);if(c>0){let v,x;const k=c>1?Math.round((h-f)/(c-1)):null;for(r3(t,g,y,P9(k)?0:f-k,f),v=0,x=c-1;v<x;v++)r3(t,g,y,a[v],a[v+1]);return r3(t,g,y,h,P9(k)?t.length:h+k),g}return r3(t,g,y),g}function Qa(r){const t=r.options.offset,i=r._tickSize(),s=r._length/i+(t?0:1),l=r._maxLength/i;return Math.floor(Math.min(s,l))}function Xa(r,t,i){const s=Za(r),l=t.length/i;if(!s)return Math.max(l,1);const a=nl(s);for(let c=0,f=a.length-1;c<f;c++){const h=a[c];if(h>l)return h}return Math.max(l,1)}function Ga(r){const t=[];let i,s;for(i=0,s=r.length;i<s;i++)r[i].major&&t.push(i);return t}function qa(r,t,i,s){let l=0,a=i[0],c;for(s=Math.ceil(s),c=0;c<r.length;c++)c===a&&(t.push(r[c]),l++,a=i[l*s])}function r3(r,t,i,s,l){const a=w9(s,0),c=Math.min(w9(l,r.length),r.length);let f=0,h,g,y;for(i=Math.ceil(i),l&&(h=l-s,i=h/Math.floor(h/i)),y=a;y<0;)f++,y=Math.round(a+f*i);for(g=Math.max(a,0);g<c;g++)g===y&&(t.push(r[g]),f++,y=Math.round(a+f*i))}function Za(r){const t=r.length;let i,s;if(t<2)return!1;for(s=r[0],i=1;i<t;++i)if(r[i]-r[i-1]!==s)return!1;return s}const Ja=r=>r==="left"?"right":r==="right"?"left":r,qn=(r,t,i)=>t==="top"||t==="left"?r[t]+i:r[t]-i,Zn=(r,t)=>Math.min(t||r,r);function Jn(r,t){const i=[],s=r.length/t,l=r.length;let a=0;for(;a<l;a+=s)i.push(r[Math.floor(a)]);return i}function eu(r,t,i){const s=r.ticks.length,l=Math.min(t,s-1),a=r._startPixel,c=r._endPixel,f=1e-6;let h=r.getPixelForTick(l),g;if(!(i&&(s===1?g=Math.max(h-a,c-h):t===0?g=(r.getPixelForTick(1)-h)/2:g=(h-r.getPixelForTick(l-1))/2,h+=l<t?g:-g,h<a-f||h>c+f)))return h}function tu(r,t){_9(r,i=>{const s=i.gc,l=s.length/2;let a;if(l>t){for(a=0;a<l;++a)delete i.data[s[a]];s.splice(0,l)}})}function S6(r){return r.drawTicks?r.tickLength:0}function ei(r,t){if(!r.display)return 0;const i=J9(r.font,t),s=C0(r.padding);return(V9(r.text)?r.text.length:1)*i.lineHeight+s.height}function nu(r,t){return D5(r,{scale:t,type:"scale"})}function iu(r,t,i){return D5(r,{tick:i,index:t,type:"tick"})}function ru(r,t,i){let s=t8(r);return(i&&t!=="right"||!i&&t==="right")&&(s=Ja(s)),s}function su(r,t,i,s){const{top:l,left:a,bottom:c,right:f,chart:h}=r,{chartArea:g,scales:y}=h;let v=0,x,k,T;const M=c-l,C=f-a;if(r.isHorizontal()){if(k=Z9(s,a,f),y9(i)){const L=Object.keys(i)[0],F=i[L];T=y[L].getPixelForValue(F)+M-t}else i==="center"?T=(g.bottom+g.top)/2+M-t:T=qn(r,i,t);x=f-a}else{if(y9(i)){const L=Object.keys(i)[0],F=i[L];k=y[L].getPixelForValue(F)-C+t}else i==="center"?k=(g.left+g.right)/2-C+t:k=qn(r,i,t);T=Z9(s,c,l),v=i==="left"?-z0:z0}return{titleX:k,titleY:T,maxWidth:x,rotation:v}}class R5 extends L1{constructor(t){super(),this.id=t.id,this.type=t.type,this.options=void 0,this.ctx=t.ctx,this.chart=t.chart,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.width=void 0,this.height=void 0,this._margins={left:0,right:0,top:0,bottom:0},this.maxWidth=void 0,this.maxHeight=void 0,this.paddingTop=void 0,this.paddingBottom=void 0,this.paddingLeft=void 0,this.paddingRight=void 0,this.axis=void 0,this.labelRotation=void 0,this.min=void 0,this.max=void 0,this._range=void 0,this.ticks=[],this._gridLineItems=null,this._labelItems=null,this._labelSizes=null,this._length=0,this._maxLength=0,this._longestTextCache={},this._startPixel=void 0,this._endPixel=void 0,this._reversePixels=!1,this._userMax=void 0,this._userMin=void 0,this._suggestedMax=void 0,this._suggestedMin=void 0,this._ticksLength=0,this._borderValue=0,this._cache={},this._dataLimitsCached=!1,this.$context=void 0}init(t){this.options=t.setContext(this.getContext()),this.axis=t.axis,this._userMin=this.parse(t.min),this._userMax=this.parse(t.max),this._suggestedMin=this.parse(t.suggestedMin),this._suggestedMax=this.parse(t.suggestedMax)}parse(t,i){return t}getUserBounds(){let{_userMin:t,_userMax:i,_suggestedMin:s,_suggestedMax:l}=this;return t=V0(t,Number.POSITIVE_INFINITY),i=V0(i,Number.NEGATIVE_INFINITY),s=V0(s,Number.POSITIVE_INFINITY),l=V0(l,Number.NEGATIVE_INFINITY),{min:V0(t,s),max:V0(i,l),minDefined:M0(t),maxDefined:M0(i)}}getMinMax(t){let{min:i,max:s,minDefined:l,maxDefined:a}=this.getUserBounds(),c;if(l&&a)return{min:i,max:s};const f=this.getMatchingVisibleMetas();for(let h=0,g=f.length;h<g;++h)c=f[h].controller.getMinMax(this,t),l||(i=Math.min(i,c.min)),a||(s=Math.max(s,c.max));return i=a&&i>s?s:i,s=l&&i>s?i:s,{min:V0(i,V0(s,i)),max:V0(s,V0(i,s))}}getPadding(){return{left:this.paddingLeft||0,top:this.paddingTop||0,right:this.paddingRight||0,bottom:this.paddingBottom||0}}getTicks(){return this.ticks}getLabels(){const t=this.chart.data;return this.options.labels||(this.isHorizontal()?t.xLabels:t.yLabels)||t.labels||[]}getLabelItems(t=this.chart.chartArea){return this._labelItems||(this._labelItems=this._computeLabelItems(t))}beforeLayout(){this._cache={},this._dataLimitsCached=!1}beforeUpdate(){E9(this.options.beforeUpdate,[this])}update(t,i,s){const{beginAtZero:l,grace:a,ticks:c}=this.options,f=c.sampleSize;this.beforeUpdate(),this.maxWidth=t,this.maxHeight=i,this._margins=s=Object.assign({left:0,right:0,top:0,bottom:0},s),this.ticks=null,this._labelSizes=null,this._gridLineItems=null,this._labelItems=null,this.beforeSetDimensions(),this.setDimensions(),this.afterSetDimensions(),this._maxLength=this.isHorizontal()?this.width+s.left+s.right:this.height+s.top+s.bottom,this._dataLimitsCached||(this.beforeDataLimits(),this.determineDataLimits(),this.afterDataLimits(),this._range=Ll(this,a,l),this._dataLimitsCached=!0),this.beforeBuildTicks(),this.ticks=this.buildTicks()||[],this.afterBuildTicks();const h=f<this.ticks.length;this._convertTicksToLabels(h?Jn(this.ticks,f):this.ticks),this.configure(),this.beforeCalculateLabelRotation(),this.calculateLabelRotation(),this.afterCalculateLabelRotation(),c.display&&(c.autoSkip||c.source==="auto")&&(this.ticks=Ka(this,this.ticks),this._labelSizes=null,this.afterAutoSkip()),h&&this._convertTicksToLabels(this.ticks),this.beforeFit(),this.fit(),this.afterFit(),this.afterUpdate()}configure(){let t=this.options.reverse,i,s;this.isHorizontal()?(i=this.left,s=this.right):(i=this.top,s=this.bottom,t=!t),this._startPixel=i,this._endPixel=s,this._reversePixels=t,this._length=s-i,this._alignToPixels=this.options.alignToPixels}afterUpdate(){E9(this.options.afterUpdate,[this])}beforeSetDimensions(){E9(this.options.beforeSetDimensions,[this])}setDimensions(){this.isHorizontal()?(this.width=this.maxWidth,this.left=0,this.right=this.width):(this.height=this.maxHeight,this.top=0,this.bottom=this.height),this.paddingLeft=0,this.paddingTop=0,this.paddingRight=0,this.paddingBottom=0}afterSetDimensions(){E9(this.options.afterSetDimensions,[this])}_callHooks(t){this.chart.notifyPlugins(t,this.getContext()),E9(this.options[t],[this])}beforeDataLimits(){this._callHooks("beforeDataLimits")}determineDataLimits(){}afterDataLimits(){this._callHooks("afterDataLimits")}beforeBuildTicks(){this._callHooks("beforeBuildTicks")}buildTicks(){return[]}afterBuildTicks(){this._callHooks("afterBuildTicks")}beforeTickToLabelConversion(){E9(this.options.beforeTickToLabelConversion,[this])}generateTickLabels(t){const i=this.options.ticks;let s,l,a;for(s=0,l=t.length;s<l;s++)a=t[s],a.label=E9(i.callback,[a.value,s,t],this)}afterTickToLabelConversion(){E9(this.options.afterTickToLabelConversion,[this])}beforeCalculateLabelRotation(){E9(this.options.beforeCalculateLabelRotation,[this])}calculateLabelRotation(){const t=this.options,i=t.ticks,s=Zn(this.ticks.length,t.ticks.maxTicksLimit),l=i.minRotation||0,a=i.maxRotation;let c=l,f,h,g;if(!this._isVisible()||!i.display||l>=a||s<=1||!this.isHorizontal()){this.labelRotation=l;return}const y=this._getLabelSizes(),v=y.widest.width,x=y.highest.height,k=I0(this.chart.width-v,0,this.maxWidth);f=t.offset?this.maxWidth/s:k/(s-1),v+6>f&&(f=k/(s-(t.offset?.5:1)),h=this.maxHeight-S6(t.grid)-i.padding-ei(t.title,this.chart.options.font),g=Math.sqrt(v*v+x*x),c=sl(Math.min(Math.asin(I0((y.highest.height+6)/f,-1,1)),Math.asin(I0(h/g,-1,1))-Math.asin(I0(x/g,-1,1)))),c=Math.max(l,Math.min(a,c))),this.labelRotation=c}afterCalculateLabelRotation(){E9(this.options.afterCalculateLabelRotation,[this])}afterAutoSkip(){}beforeFit(){E9(this.options.beforeFit,[this])}fit(){const t={width:0,height:0},{chart:i,options:{ticks:s,title:l,grid:a}}=this,c=this._isVisible(),f=this.isHorizontal();if(c){const h=ei(l,i.options.font);if(f?(t.width=this.maxWidth,t.height=S6(a)+h):(t.height=this.maxHeight,t.width=S6(a)+h),s.display&&this.ticks.length){const{first:g,last:y,widest:v,highest:x}=this._getLabelSizes(),k=s.padding*2,T=q1(this.labelRotation),M=Math.cos(T),C=Math.sin(T);if(f){const L=s.mirror?0:C*v.width+M*x.height;t.height=Math.min(this.maxHeight,t.height+L+k)}else{const L=s.mirror?0:M*v.width+C*x.height;t.width=Math.min(this.maxWidth,t.width+L+k)}this._calculatePadding(g,y,C,M)}}this._handleMargins(),f?(this.width=this._length=i.width-this._margins.left-this._margins.right,this.height=t.height):(this.width=t.width,this.height=this._length=i.height-this._margins.top-this._margins.bottom)}_calculatePadding(t,i,s,l){const{ticks:{align:a,padding:c},position:f}=this.options,h=this.labelRotation!==0,g=f!=="top"&&this.axis==="x";if(this.isHorizontal()){const y=this.getPixelForTick(0)-this.left,v=this.right-this.getPixelForTick(this.ticks.length-1);let x=0,k=0;h?g?(x=l*t.width,k=s*i.height):(x=s*t.height,k=l*i.width):a==="start"?k=i.width:a==="end"?x=t.width:a!=="inner"&&(x=t.width/2,k=i.width/2),this.paddingLeft=Math.max((x-y+c)*this.width/(this.width-y),0),this.paddingRight=Math.max((k-v+c)*this.width/(this.width-v),0)}else{let y=i.height/2,v=t.height/2;a==="start"?(y=0,v=t.height):a==="end"&&(y=i.height,v=0),this.paddingTop=y+c,this.paddingBottom=v+c}}_handleMargins(){this._margins&&(this._margins.left=Math.max(this.paddingLeft,this._margins.left),this._margins.top=Math.max(this.paddingTop,this._margins.top),this._margins.right=Math.max(this.paddingRight,this._margins.right),this._margins.bottom=Math.max(this.paddingBottom,this._margins.bottom))}afterFit(){E9(this.options.afterFit,[this])}isHorizontal(){const{axis:t,position:i}=this.options;return i==="top"||i==="bottom"||t==="x"}isFullSize(){return this.options.fullSize}_convertTicksToLabels(t){this.beforeTickToLabelConversion(),this.generateTickLabels(t);let i,s;for(i=0,s=t.length;i<s;i++)P9(t[i].label)&&(t.splice(i,1),s--,i--);this.afterTickToLabelConversion()}_getLabelSizes(){let t=this._labelSizes;if(!t){const i=this.options.ticks.sampleSize;let s=this.ticks;i<s.length&&(s=Jn(s,i)),this._labelSizes=t=this._computeLabelSizes(s,s.length,this.options.ticks.maxTicksLimit)}return t}_computeLabelSizes(t,i,s){const{ctx:l,_longestTextCache:a}=this,c=[],f=[],h=Math.floor(i/Zn(i,s));let g=0,y=0,v,x,k,T,M,C,L,F,A,H,W;for(v=0;v<i;v+=h){if(T=t[v].label,M=this._resolveTickFontOptions(v),l.font=C=M.string,L=a[C]=a[C]||{data:{},gc:[]},F=M.lineHeight,A=H=0,!P9(T)&&!V9(T))A=Tn(l,L.data,L.gc,A,T),H=F;else if(V9(T))for(x=0,k=T.length;x<k;++x)W=T[x],!P9(W)&&!V9(W)&&(A=Tn(l,L.data,L.gc,A,W),H+=F);c.push(A),f.push(H),g=Math.max(A,g),y=Math.max(H,y)}tu(a,i);const Y=c.indexOf(g),Q=f.indexOf(y),G=r9=>({width:c[r9]||0,height:f[r9]||0});return{first:G(0),last:G(i-1),widest:G(Y),highest:G(Q),widths:c,heights:f}}getLabelForValue(t){return t}getPixelForValue(t,i){return NaN}getValueForPixel(t){}getPixelForTick(t){const i=this.ticks;return t<0||t>i.length-1?null:this.getPixelForValue(i[t].value)}getPixelForDecimal(t){this._reversePixels&&(t=1-t);const i=this._startPixel+t*this._length;return ul(this._alignToPixels?K1(this.chart,i,0):i)}getDecimalForPixel(t){const i=(t-this._startPixel)/this._length;return this._reversePixels?1-i:i}getBasePixel(){return this.getPixelForValue(this.getBaseValue())}getBaseValue(){const{min:t,max:i}=this;return t<0&&i<0?i:t>0&&i>0?t:0}getContext(t){const i=this.ticks||[];if(t>=0&&t<i.length){const s=i[t];return s.$context||(s.$context=iu(this.getContext(),t,s))}return this.$context||(this.$context=nu(this.chart.getContext(),this))}_tickSize(){const t=this.options.ticks,i=q1(this.labelRotation),s=Math.abs(Math.cos(i)),l=Math.abs(Math.sin(i)),a=this._getLabelSizes(),c=t.autoSkipPadding||0,f=a?a.widest.width+c:0,h=a?a.highest.height+c:0;return this.isHorizontal()?h*s>f*l?f/s:h/l:h*l<f*s?h/s:f/l}_isVisible(){const t=this.options.display;return t!=="auto"?!!t:this.getMatchingVisibleMetas().length>0}_computeGridLineItems(t){const i=this.axis,s=this.chart,l=this.options,{grid:a,position:c,border:f}=l,h=a.offset,g=this.isHorizontal(),v=this.ticks.length+(h?1:0),x=S6(a),k=[],T=f.setContext(this.getContext()),M=T.display?T.width:0,C=M/2,L=function(g9){return K1(s,g9,M)};let F,A,H,W,Y,Q,G,r9,a9,s9,o9,k9;if(c==="top")F=L(this.bottom),Q=this.bottom-x,r9=F-C,s9=L(t.top)+C,k9=t.bottom;else if(c==="bottom")F=L(this.top),s9=t.top,k9=L(t.bottom)-C,Q=F+C,r9=this.top+x;else if(c==="left")F=L(this.right),Y=this.right-x,G=F-C,a9=L(t.left)+C,o9=t.right;else if(c==="right")F=L(this.left),a9=t.left,o9=L(t.right)-C,Y=F+C,G=this.left+x;else if(i==="x"){if(c==="center")F=L((t.top+t.bottom)/2+.5);else if(y9(c)){const g9=Object.keys(c)[0],f9=c[g9];F=L(this.chart.scales[g9].getPixelForValue(f9))}s9=t.top,k9=t.bottom,Q=F+C,r9=Q+x}else if(i==="y"){if(c==="center")F=L((t.left+t.right)/2);else if(y9(c)){const g9=Object.keys(c)[0],f9=c[g9];F=L(this.chart.scales[g9].getPixelForValue(f9))}Y=F-C,G=Y-x,a9=t.left,o9=t.right}const R9=w9(l.ticks.maxTicksLimit,v),p9=Math.max(1,Math.ceil(v/R9));for(A=0;A<v;A+=p9){const g9=this.getContext(A),f9=a.setContext(g9),j=f.setContext(g9),Z=f9.lineWidth,B=f9.color,b=j.dash||[],D=j.dashOffset,n9=f9.tickWidth,i9=f9.tickColor,u9=f9.tickBorderDash||[],l9=f9.tickBorderDashOffset;H=eu(this,A,h),H!==void 0&&(W=K1(s,H,Z),g?Y=G=a9=o9=W:Q=r9=s9=k9=W,k.push({tx1:Y,ty1:Q,tx2:G,ty2:r9,x1:a9,y1:s9,x2:o9,y2:k9,width:Z,color:B,borderDash:b,borderDashOffset:D,tickWidth:n9,tickColor:i9,tickBorderDash:u9,tickBorderDashOffset:l9}))}return this._ticksLength=v,this._borderValue=F,k}_computeLabelItems(t){const i=this.axis,s=this.options,{position:l,ticks:a}=s,c=this.isHorizontal(),f=this.ticks,{align:h,crossAlign:g,padding:y,mirror:v}=a,x=S6(s.grid),k=x+y,T=v?-y:k,M=-q1(this.labelRotation),C=[];let L,F,A,H,W,Y,Q,G,r9,a9,s9,o9,k9="middle";if(l==="top")Y=this.bottom-T,Q=this._getXAxisLabelAlignment();else if(l==="bottom")Y=this.top+T,Q=this._getXAxisLabelAlignment();else if(l==="left"){const p9=this._getYAxisLabelAlignment(x);Q=p9.textAlign,W=p9.x}else if(l==="right"){const p9=this._getYAxisLabelAlignment(x);Q=p9.textAlign,W=p9.x}else if(i==="x"){if(l==="center")Y=(t.top+t.bottom)/2+k;else if(y9(l)){const p9=Object.keys(l)[0],g9=l[p9];Y=this.chart.scales[p9].getPixelForValue(g9)+k}Q=this._getXAxisLabelAlignment()}else if(i==="y"){if(l==="center")W=(t.left+t.right)/2-k;else if(y9(l)){const p9=Object.keys(l)[0],g9=l[p9];W=this.chart.scales[p9].getPixelForValue(g9)}Q=this._getYAxisLabelAlignment(x).textAlign}i==="y"&&(h==="start"?k9="top":h==="end"&&(k9="bottom"));const R9=this._getLabelSizes();for(L=0,F=f.length;L<F;++L){A=f[L],H=A.label;const p9=a.setContext(this.getContext(L));G=this.getPixelForTick(L)+a.labelOffset,r9=this._resolveTickFontOptions(L),a9=r9.lineHeight,s9=V9(H)?H.length:1;const g9=s9/2,f9=p9.color,j=p9.textStrokeColor,Z=p9.textStrokeWidth;let B=Q;c?(W=G,Q==="inner"&&(L===F-1?B=this.options.reverse?"left":"right":L===0?B=this.options.reverse?"right":"left":B="center"),l==="top"?g==="near"||M!==0?o9=-s9*a9+a9/2:g==="center"?o9=-R9.highest.height/2-g9*a9+a9:o9=-R9.highest.height+a9/2:g==="near"||M!==0?o9=a9/2:g==="center"?o9=R9.highest.height/2-g9*a9:o9=R9.highest.height-s9*a9,v&&(o9*=-1),M!==0&&!p9.showLabelBackdrop&&(W+=a9/2*Math.sin(M))):(Y=G,o9=(1-s9)*a9/2);let b;if(p9.showLabelBackdrop){const D=C0(p9.backdropPadding),n9=R9.heights[L],i9=R9.widths[L];let u9=o9-D.top,l9=0-D.left;switch(k9){case"middle":u9-=n9/2;break;case"bottom":u9-=n9;break}switch(Q){case"center":l9-=i9/2;break;case"right":l9-=i9;break;case"inner":L===F-1?l9-=i9:L>0&&(l9-=i9/2);break}b={left:l9,top:u9,width:i9+D.width,height:n9+D.height,color:p9.backdropColor}}C.push({label:H,font:r9,textOffset:o9,options:{rotation:M,color:f9,strokeColor:j,strokeWidth:Z,textAlign:B,textBaseline:k9,translation:[W,Y],backdrop:b}})}return C}_getXAxisLabelAlignment(){const{position:t,ticks:i}=this.options;if(-q1(this.labelRotation))return t==="top"?"left":"right";let l="center";return i.align==="start"?l="left":i.align==="end"?l="right":i.align==="inner"&&(l="inner"),l}_getYAxisLabelAlignment(t){const{position:i,ticks:{crossAlign:s,mirror:l,padding:a}}=this.options,c=this._getLabelSizes(),f=t+a,h=c.widest.width;let g,y;return i==="left"?l?(y=this.right+a,s==="near"?g="left":s==="center"?(g="center",y+=h/2):(g="right",y+=h)):(y=this.right-f,s==="near"?g="right":s==="center"?(g="center",y-=h/2):(g="left",y=this.left)):i==="right"?l?(y=this.left+a,s==="near"?g="right":s==="center"?(g="center",y-=h/2):(g="left",y-=h)):(y=this.left+f,s==="near"?g="left":s==="center"?(g="center",y+=h/2):(g="right",y=this.right)):g="right",{textAlign:g,x:y}}_computeLabelArea(){if(this.options.ticks.mirror)return;const t=this.chart,i=this.options.position;if(i==="left"||i==="right")return{top:0,left:this.left,bottom:t.height,right:this.right};if(i==="top"||i==="bottom")return{top:this.top,left:0,bottom:this.bottom,right:t.width}}drawBackground(){const{ctx:t,options:{backgroundColor:i},left:s,top:l,width:a,height:c}=this;i&&(t.save(),t.fillStyle=i,t.fillRect(s,l,a,c),t.restore())}getLineWidthForValue(t){const i=this.options.grid;if(!this._isVisible()||!i.display)return 0;const l=this.ticks.findIndex(a=>a.value===t);return l>=0?i.setContext(this.getContext(l)).lineWidth:0}drawGrid(t){const i=this.options.grid,s=this.ctx,l=this._gridLineItems||(this._gridLineItems=this._computeGridLineItems(t));let a,c;const f=(h,g,y)=>{!y.width||!y.color||(s.save(),s.lineWidth=y.width,s.strokeStyle=y.color,s.setLineDash(y.borderDash||[]),s.lineDashOffset=y.borderDashOffset,s.beginPath(),s.moveTo(h.x,h.y),s.lineTo(g.x,g.y),s.stroke(),s.restore())};if(i.display)for(a=0,c=l.length;a<c;++a){const h=l[a];i.drawOnChartArea&&f({x:h.x1,y:h.y1},{x:h.x2,y:h.y2},h),i.drawTicks&&f({x:h.tx1,y:h.ty1},{x:h.tx2,y:h.ty2},{color:h.tickColor,width:h.tickWidth,borderDash:h.tickBorderDash,borderDashOffset:h.tickBorderDashOffset})}}drawBorder(){const{chart:t,ctx:i,options:{border:s,grid:l}}=this,a=s.setContext(this.getContext()),c=s.display?a.width:0;if(!c)return;const f=l.setContext(this.getContext(0)).lineWidth,h=this._borderValue;let g,y,v,x;this.isHorizontal()?(g=K1(t,this.left,c)-c/2,y=K1(t,this.right,f)+f/2,v=x=h):(v=K1(t,this.top,c)-c/2,x=K1(t,this.bottom,f)+f/2,g=y=h),i.save(),i.lineWidth=a.width,i.strokeStyle=a.color,i.beginPath(),i.moveTo(g,v),i.lineTo(y,x),i.stroke(),i.restore()}drawLabels(t){if(!this.options.ticks.display)return;const s=this.ctx,l=this._computeLabelArea();l&&n8(s,l);const a=this.getLabelItems(t);for(const c of a){const f=c.options,h=c.font,g=c.label,y=c.textOffset;F6(s,g,0,y,h,f)}l&&i8(s)}drawTitle(){const{ctx:t,options:{position:i,title:s,reverse:l}}=this;if(!s.display)return;const a=J9(s.font),c=C0(s.padding),f=s.align;let h=a.lineHeight/2;i==="bottom"||i==="center"||y9(i)?(h+=c.bottom,V9(s.text)&&(h+=a.lineHeight*(s.text.length-1))):h+=c.top;const{titleX:g,titleY:y,maxWidth:v,rotation:x}=su(this,h,i,f);F6(t,s.text,0,0,a,{color:s.color,maxWidth:v,rotation:x,textAlign:ru(f,i,l),textBaseline:"middle",translation:[g,y]})}draw(t){this._isVisible()&&(this.drawBackground(),this.drawGrid(t),this.drawBorder(),this.drawTitle(),this.drawLabels(t))}_layers(){const t=this.options,i=t.ticks&&t.ticks.z||0,s=w9(t.grid&&t.grid.z,-1),l=w9(t.border&&t.border.z,0);return!this._isVisible()||this.draw!==R5.prototype.draw?[{z:i,draw:a=>{this.draw(a)}}]:[{z:s,draw:a=>{this.drawBackground(),this.drawGrid(a),this.drawTitle()}},{z:l,draw:()=>{this.drawBorder()}},{z:i,draw:a=>{this.drawLabels(a)}}]}getMatchingVisibleMetas(t){const i=this.chart.getSortedVisibleDatasetMetas(),s=this.axis+"AxisID",l=[];let a,c;for(a=0,c=i.length;a<c;++a){const f=i[a];f[s]===this.id&&(!t||f.type===t)&&l.push(f)}return l}_resolveTickFontOptions(t){const i=this.options.ticks.setContext(this.getContext(t));return J9(i.font)}_maxDigits(){const t=this._resolveTickFontOptions(0).lineHeight;return(this.isHorizontal()?this.width:this.height)/t}}class s3{constructor(t,i,s){this.type=t,this.scope=i,this.override=s,this.items=Object.create(null)}isForType(t){return Object.prototype.isPrototypeOf.call(this.type.prototype,t.prototype)}register(t){const i=Object.getPrototypeOf(t);let s;au(i)&&(s=this.register(i));const l=this.items,a=t.id,c=this.scope+"."+a;if(!a)throw new Error("class does not have id: "+t);return a in l||(l[a]=t,ou(t,c,s),this.override&&N9.override(t.id,t.overrides)),c}get(t){return this.items[t]}unregister(t){const i=this.items,s=t.id,l=this.scope;s in i&&delete i[s],l&&s in N9[l]&&(delete N9[l][s],this.override&&delete J1[s])}}function ou(r,t,i){const s=z6(Object.create(null),[i?N9.get(i):{},N9.get(t),r.defaults]);N9.set(t,s),r.defaultRoutes&&lu(t,r.defaultRoutes),r.descriptors&&N9.describe(t,r.descriptors)}function lu(r,t){Object.keys(t).forEach(i=>{const s=i.split("."),l=s.pop(),a=[r].concat(s).join("."),c=t[i].split("."),f=c.pop(),h=c.join(".");N9.route(a,l,h,f)})}function au(r){return"id"in r&&"defaults"in r}class uu{constructor(){this.controllers=new s3(D6,"datasets",!0),this.elements=new s3(L1,"elements"),this.plugins=new s3(Object,"plugins"),this.scales=new s3(R5,"scales"),this._typedRegistries=[this.controllers,this.scales,this.elements]}add(...t){this._each("register",t)}remove(...t){this._each("unregister",t)}addControllers(...t){this._each("register",t,this.controllers)}addElements(...t){this._each("register",t,this.elements)}addPlugins(...t){this._each("register",t,this.plugins)}addScales(...t){this._each("register",t,this.scales)}getController(t){return this._get(t,this.controllers,"controller")}getElement(t){return this._get(t,this.elements,"element")}getPlugin(t){return this._get(t,this.plugins,"plugin")}getScale(t){return this._get(t,this.scales,"scale")}removeControllers(...t){this._each("unregister",t,this.controllers)}removeElements(...t){this._each("unregister",t,this.elements)}removePlugins(...t){this._each("unregister",t,this.plugins)}removeScales(...t){this._each("unregister",t,this.scales)}_each(t,i,s){[...i].forEach(l=>{const a=s||this._getRegistryForType(l);s||a.isForType(l)||a===this.plugins&&l.id?this._exec(t,a,l):_9(l,c=>{const f=s||this._getRegistryForType(c);this._exec(t,f,c)})})}_exec(t,i,s){const l=J4(t);E9(s["before"+l],[],s),i[t](s),E9(s["after"+l],[],s)}_getRegistryForType(t){for(let i=0;i<this._typedRegistries.length;i++){const s=this._typedRegistries[i];if(s.isForType(t))return s}return this.plugins}_get(t,i,s){const l=i.get(t);if(l===void 0)throw new Error('"'+t+'" is not a registered '+s+".");return l}}var U0=new uu;class cu{constructor(){this._init=[]}notify(t,i,s,l){i==="beforeInit"&&(this._init=this._createDescriptors(t,!0),this._notify(this._init,t,"install"));const a=l?this._descriptors(t).filter(l):this._descriptors(t),c=this._notify(a,t,i,s);return i==="afterDestroy"&&(this._notify(a,t,"stop"),this._notify(this._init,t,"uninstall")),c}_notify(t,i,s,l){l=l||{};for(const a of t){const c=a.plugin,f=c[s],h=[i,l,a.options];if(E9(f,h,c)===!1&&l.cancelable)return!1}return!0}invalidate(){P9(this._cache)||(this._oldCache=this._cache,this._cache=void 0)}_descriptors(t){if(this._cache)return this._cache;const i=this._cache=this._createDescriptors(t);return this._notifyStateChanges(t),i}_createDescriptors(t,i){const s=t&&t.config,l=w9(s.options&&s.options.plugins,{}),a=fu(s);return l===!1&&!i?[]:hu(t,a,l,i)}_notifyStateChanges(t){const i=this._oldCache||[],s=this._cache,l=(a,c)=>a.filter(f=>!c.some(h=>f.plugin.id===h.plugin.id));this._notify(l(i,s),t,"stop"),this._notify(l(s,i),t,"start")}}function fu(r){const t={},i=[],s=Object.keys(U0.plugins.items);for(let a=0;a<s.length;a++)i.push(U0.getPlugin(s[a]));const l=r.plugins||[];for(let a=0;a<l.length;a++){const c=l[a];i.indexOf(c)===-1&&(i.push(c),t[c.id]=!0)}return{plugins:i,localIds:t}}function du(r,t){return!t&&r===!1?null:r===!0?{}:r}function hu(r,{plugins:t,localIds:i},s,l){const a=[],c=r.getContext();for(const f of t){const h=f.id,g=du(s[h],l);g!==null&&a.push({plugin:f,options:pu(r.config,{plugin:f,local:i[h]},g,c)})}return a}function pu(r,{plugin:t,local:i},s,l){const a=r.pluginScopeKeys(t),c=r.getOptionScopes(s,a);return i&&t.defaults&&c.push(t.defaults),r.createResolver(c,l,[""],{scriptable:!1,indexable:!1,allKeys:!0})}function U4(r,t){const i=N9.datasets[r]||{};return((t.datasets||{})[r]||{}).indexAxis||t.indexAxis||i.indexAxis||"x"}function gu(r,t){let i=r;return r==="_index_"?i=t:r==="_value_"&&(i=t==="x"?"y":"x"),i}function mu(r,t){return r===t?"_index_":"_value_"}function ti(r){if(r==="x"||r==="y"||r==="r")return r}function yu(r){if(r==="top"||r==="bottom")return"x";if(r==="left"||r==="right")return"y"}function $4(r,...t){if(ti(r))return r;for(const i of t){const s=i.axis||yu(i.position)||r.length>1&&ti(r[0].toLowerCase());if(s)return s}throw new Error(`Cannot determine type of '${r}' axis. Please provide 'axis' or 'position' option.`)}function ni(r,t,i){if(i[t+"AxisID"]===r)return{axis:t}}function vu(r,t){if(t.data&&t.data.datasets){const i=t.data.datasets.filter(s=>s.xAxisID===r||s.yAxisID===r);if(i.length)return ni(r,"x",i[0])||ni(r,"y",i[0])}return{}}function xu(r,t){const i=J1[r.type]||{scales:{}},s=t.scales||{},l=U4(r.type,t),a=Object.create(null);return Object.keys(s).forEach(c=>{const f=s[c];if(!y9(f))return console.error(`Invalid scale configuration for scale: ${c}`);if(f._proxy)return console.warn(`Ignoring resolver passed as options for scale: ${c}`);const h=$4(c,f,vu(c,r),N9.scales[f.type]),g=mu(h,l),y=i.scales||{};a[c]=T6(Object.create(null),[{axis:h},f,y[h],y[g]])}),r.data.datasets.forEach(c=>{const f=c.type||r.type,h=c.indexAxis||U4(f,t),y=(J1[f]||{}).scales||{};Object.keys(y).forEach(v=>{const x=gu(v,h),k=c[x+"AxisID"]||x;a[k]=a[k]||Object.create(null),T6(a[k],[{axis:x},s[k],y[v]])})}),Object.keys(a).forEach(c=>{const f=a[c];T6(f,[N9.scales[f.type],N9.scale])}),a}function or(r){const t=r.options||(r.options={});t.plugins=w9(t.plugins,{}),t.scales=xu(r,t)}function lr(r){return r=r||{},r.datasets=r.datasets||[],r.labels=r.labels||[],r}function _u(r){return r=r||{},r.data=lr(r.data),or(r),r}const ii=new Map,ar=new Set;function o3(r,t){let i=ii.get(r);return i||(i=t(),ii.set(r,i),ar.add(i)),i}const b6=(r,t,i)=>{const s=O5(t,i);s!==void 0&&r.add(s)};class wu{constructor(t){this._config=_u(t),this._scopeCache=new Map,this._resolverCache=new Map}get platform(){return this._config.platform}get type(){return this._config.type}set type(t){this._config.type=t}get data(){return this._config.data}set data(t){this._config.data=lr(t)}get options(){return this._config.options}set options(t){this._config.options=t}get plugins(){return this._config.plugins}update(){const t=this._config;this.clearCache(),or(t)}clearCache(){this._scopeCache.clear(),this._resolverCache.clear()}datasetScopeKeys(t){return o3(t,()=>[[`datasets.${t}`,""]])}datasetAnimationScopeKeys(t,i){return o3(`${t}.transition.${i}`,()=>[[`datasets.${t}.transitions.${i}`,`transitions.${i}`],[`datasets.${t}`,""]])}datasetElementScopeKeys(t,i){return o3(`${t}-${i}`,()=>[[`datasets.${t}.elements.${i}`,`datasets.${t}`,`elements.${i}`,""]])}pluginScopeKeys(t){const i=t.id,s=this.type;return o3(`${s}-plugin-${i}`,()=>[[`plugins.${i}`,...t.additionalOptionScopes||[]]])}_cachedScopes(t,i){const s=this._scopeCache;let l=s.get(t);return(!l||i)&&(l=new Map,s.set(t,l)),l}getOptionScopes(t,i,s){const{options:l,type:a}=this,c=this._cachedScopes(t,s),f=c.get(i);if(f)return f;const h=new Set;i.forEach(y=>{t&&(h.add(t),y.forEach(v=>b6(h,t,v))),y.forEach(v=>b6(h,l,v)),y.forEach(v=>b6(h,J1[a]||{},v)),y.forEach(v=>b6(h,N9,v)),y.forEach(v=>b6(h,W4,v))});const g=Array.from(h);return g.length===0&&g.push(Object.create(null)),ar.has(i)&&c.set(i,g),g}chartOptionScopes(){const{options:t,type:i}=this;return[t,J1[i]||{},N9.datasets[i]||{},{type:i},N9,W4]}resolveNamedOptions(t,i,s,l=[""]){const a={$shared:!0},{resolver:c,subPrefixes:f}=ri(this._resolverCache,t,l);let h=c;if(Su(c,i)){a.$shared=!1,s=O1(s)?s():s;const g=this.createResolver(t,s,f);h=L5(c,s,g)}for(const g of i)a[g]=h[g];return a}createResolver(t,i,s=[""],l){const{resolver:a}=ri(this._resolverCache,t,s);return y9(i)?L5(a,i,void 0,l):a}}function ri(r,t,i){let s=r.get(t);s||(s=new Map,r.set(t,s));const l=i.join();let a=s.get(l);return a||(a={resolver:r8(t,i),subPrefixes:i.filter(f=>!f.toLowerCase().includes("hover"))},s.set(l,a)),a}const ku=r=>y9(r)&&Object.getOwnPropertyNames(r).some(t=>O1(r[t]));function Su(r,t){const{isScriptable:i,isIndexable:s}=Yi(r);for(const l of t){const a=i(l),c=s(l),f=(c||a)&&r[l];if(a&&(O1(f)||ku(f))||c&&V9(f))return!0}return!1}var bu="4.4.7";const Mu=["top","bottom","left","right","chartArea"];function si(r,t){return r==="top"||r==="bottom"||Mu.indexOf(r)===-1&&t==="x"}function oi(r,t){return function(i,s){return i[r]===s[r]?i[t]-s[t]:i[r]-s[r]}}function li(r){const t=r.chart,i=t.options.animation;t.notifyPlugins("afterRender"),E9(i&&i.onComplete,[r],t)}function Cu(r){const t=r.chart,i=t.options.animation;E9(i&&i.onProgress,[r],t)}function ur(r){return l8()&&typeof r=="string"?r=document.getElementById(r):r&&r.length&&(r=r[0]),r&&r.canvas&&(r=r.canvas),r}const g3={},ai=r=>{const t=ur(r);return Object.values(g3).filter(i=>i.canvas===t).pop()};function Eu(r,t,i){const s=Object.keys(r);for(const l of s){const a=+l;if(a>=t){const c=r[l];delete r[l],(i>0||a>t)&&(r[a+i]=c)}}}function Pu(r,t,i,s){return!i||r.type==="mouseout"?null:s?t:r}function l3(r,t,i){return r.options.clip?r[i]:t[i]}function Tu(r,t){const{xScale:i,yScale:s}=r;return i&&s?{left:l3(i,t,"left"),right:l3(i,t,"right"),top:l3(s,t,"top"),bottom:l3(s,t,"bottom")}:t}var b1;let C3=(b1=class{static register(...t){U0.add(...t),ui()}static unregister(...t){U0.remove(...t),ui()}constructor(t,i){const s=this.config=new wu(i),l=ur(t),a=ai(l);if(a)throw new Error("Canvas is already in use. Chart with ID '"+a.id+"' must be destroyed before the canvas with ID '"+a.canvas.id+"' can be reused.");const c=s.createResolver(s.chartOptionScopes(),this.getContext());this.platform=new(s.platform||Ya(l)),this.platform.updateConfig(s);const f=this.platform.acquireContext(l,c.aspectRatio),h=f&&f.canvas,g=h&&h.height,y=h&&h.width;if(this.id=Qo(),this.ctx=f,this.canvas=h,this.width=y,this.height=g,this._options=c,this._aspectRatio=this.aspectRatio,this._layers=[],this._metasets=[],this._stacks=void 0,this.boxes=[],this.currentDevicePixelRatio=void 0,this.chartArea=void 0,this._active=[],this._lastEvent=void 0,this._listeners={},this._responsiveListeners=void 0,this._sortedMetasets=[],this.scales={},this._plugins=new cu,this.$proxies={},this._hiddenIndices={},this.attached=!1,this._animationsDisabled=void 0,this.$context=void 0,this._doResize=hl(v=>this.update(v),c.resizeDelay||0),this._dataChanges=[],g3[this.id]=this,!f||!h){console.error("Failed to create chart: can't acquire context from the given item");return}n1.listen(this,"complete",li),n1.listen(this,"progress",Cu),this._initialize(),this.attached&&this.update()}get aspectRatio(){const{options:{aspectRatio:t,maintainAspectRatio:i},width:s,height:l,_aspectRatio:a}=this;return P9(t)?i&&a?a:l?s/l:null:t}get data(){return this.config.data}set data(t){this.config.data=t}get options(){return this._options}set options(t){this.config.options=t}get registry(){return U0}_initialize(){return this.notifyPlugins("beforeInit"),this.options.responsive?this.resize():zn(this,this.options.devicePixelRatio),this.bindEvents(),this.notifyPlugins("afterInit"),this}clear(){return On(this.canvas,this.ctx),this}stop(){return n1.stop(this),this}resize(t,i){n1.running(this)?this._resizeBeforeDraw={width:t,height:i}:this._resize(t,i)}_resize(t,i){const s=this.options,l=this.canvas,a=s.maintainAspectRatio&&this.aspectRatio,c=this.platform.getMaximumSize(l,t,i,a),f=s.devicePixelRatio||this.platform.getDevicePixelRatio(),h=this.width?"resize":"attach";this.width=c.width,this.height=c.height,this._aspectRatio=this.aspectRatio,zn(this,f,!0)&&(this.notifyPlugins("resize",{size:c}),E9(s.onResize,[this,c],this),this.attached&&this._doResize(h)&&this.render())}ensureScalesHaveIDs(){const i=this.options.scales||{};_9(i,(s,l)=>{s.id=l})}buildOrUpdateScales(){const t=this.options,i=t.scales,s=this.scales,l=Object.keys(s).reduce((c,f)=>(c[f]=!1,c),{});let a=[];i&&(a=a.concat(Object.keys(i).map(c=>{const f=i[c],h=$4(c,f),g=h==="r",y=h==="x";return{options:f,dposition:g?"chartArea":y?"bottom":"left",dtype:g?"radialLinear":y?"category":"linear"}}))),_9(a,c=>{const f=c.options,h=f.id,g=$4(h,f),y=w9(f.type,c.dtype);(f.position===void 0||si(f.position,g)!==si(c.dposition))&&(f.position=c.dposition),l[h]=!0;let v=null;if(h in s&&s[h].type===y)v=s[h];else{const x=U0.getScale(y);v=new x({id:h,type:y,ctx:this.ctx,chart:this}),s[v.id]=v}v.init(f,t)}),_9(l,(c,f)=>{c||delete s[f]}),_9(s,c=>{b0.configure(this,c,c.options),b0.addBox(this,c)})}_updateMetasets(){const t=this._metasets,i=this.data.datasets.length,s=t.length;if(t.sort((l,a)=>l.index-a.index),s>i){for(let l=i;l<s;++l)this._destroyDatasetMeta(l);t.splice(i,s-i)}this._sortedMetasets=t.slice(0).sort(oi("order","index"))}_removeUnreferencedMetasets(){const{_metasets:t,data:{datasets:i}}=this;t.length>i.length&&delete this._stacks,t.forEach((s,l)=>{i.filter(a=>a===s._dataset).length===0&&this._destroyDatasetMeta(l)})}buildOrUpdateControllers(){const t=[],i=this.data.datasets;let s,l;for(this._removeUnreferencedMetasets(),s=0,l=i.length;s<l;s++){const a=i[s];let c=this.getDatasetMeta(s);const f=a.type||this.config.type;if(c.type&&c.type!==f&&(this._destroyDatasetMeta(s),c=this.getDatasetMeta(s)),c.type=f,c.indexAxis=a.indexAxis||U4(f,this.options),c.order=a.order||0,c.index=s,c.label=""+a.label,c.visible=this.isDatasetVisible(s),c.controller)c.controller.updateIndex(s),c.controller.linkScales();else{const h=U0.getController(f),{datasetElementType:g,dataElementType:y}=N9.datasets[f];Object.assign(h,{dataElementType:U0.getElement(y),datasetElementType:g&&U0.getElement(g)}),c.controller=new h(this,s),t.push(c.controller)}}return this._updateMetasets(),t}_resetElements(){_9(this.data.datasets,(t,i)=>{this.getDatasetMeta(i).controller.reset()},this)}reset(){this._resetElements(),this.notifyPlugins("reset")}update(t){const i=this.config;i.update();const s=this._options=i.createResolver(i.chartOptionScopes(),this.getContext()),l=this._animationsDisabled=!s.animation;if(this._updateScales(),this._checkEventBindings(),this._updateHiddenIndices(),this._plugins.invalidate(),this.notifyPlugins("beforeUpdate",{mode:t,cancelable:!0})===!1)return;const a=this.buildOrUpdateControllers();this.notifyPlugins("beforeElementsUpdate");let c=0;for(let g=0,y=this.data.datasets.length;g<y;g++){const{controller:v}=this.getDatasetMeta(g),x=!l&&a.indexOf(v)===-1;v.buildOrUpdateElements(x),c=Math.max(+v.getMaxOverflow(),c)}c=this._minPadding=s.layout.autoPadding?c:0,this._updateLayout(c),l||_9(a,g=>{g.reset()}),this._updateDatasets(t),this.notifyPlugins("afterUpdate",{mode:t}),this._layers.sort(oi("z","_idx"));const{_active:f,_lastEvent:h}=this;h?this._eventHandler(h,!0):f.length&&this._updateHoverStyles(f,f,!0),this.render()}_updateScales(){_9(this.scales,t=>{b0.removeBox(this,t)}),this.ensureScalesHaveIDs(),this.buildOrUpdateScales()}_checkEventBindings(){const t=this.options,i=new Set(Object.keys(this._listeners)),s=new Set(t.events);(!_n(i,s)||!!this._responsiveListeners!==t.responsive)&&(this.unbindEvents(),this.bindEvents())}_updateHiddenIndices(){const{_hiddenIndices:t}=this,i=this._getUniformDataChanges()||[];for(const{method:s,start:l,count:a}of i){const c=s==="_removeElements"?-a:a;Eu(t,l,c)}}_getUniformDataChanges(){const t=this._dataChanges;if(!t||!t.length)return;this._dataChanges=[];const i=this.data.datasets.length,s=a=>new Set(t.filter(c=>c[0]===a).map((c,f)=>f+","+c.splice(1).join(","))),l=s(0);for(let a=1;a<i;a++)if(!_n(l,s(a)))return;return Array.from(l).map(a=>a.split(",")).map(a=>({method:a[1],start:+a[2],count:+a[3]}))}_updateLayout(t){if(this.notifyPlugins("beforeLayout",{cancelable:!0})===!1)return;b0.update(this,this.width,this.height,t);const i=this.chartArea,s=i.width<=0||i.height<=0;this._layers=[],_9(this.boxes,l=>{s&&l.position==="chartArea"||(l.configure&&l.configure(),this._layers.push(...l._layers()))},this),this._layers.forEach((l,a)=>{l._idx=a}),this.notifyPlugins("afterLayout")}_updateDatasets(t){if(this.notifyPlugins("beforeDatasetsUpdate",{mode:t,cancelable:!0})!==!1){for(let i=0,s=this.data.datasets.length;i<s;++i)this.getDatasetMeta(i).controller.configure();for(let i=0,s=this.data.datasets.length;i<s;++i)this._updateDataset(i,O1(t)?t({datasetIndex:i}):t);this.notifyPlugins("afterDatasetsUpdate",{mode:t})}}_updateDataset(t,i){const s=this.getDatasetMeta(t),l={meta:s,index:t,mode:i,cancelable:!0};this.notifyPlugins("beforeDatasetUpdate",l)!==!1&&(s.controller._update(i),l.cancelable=!1,this.notifyPlugins("afterDatasetUpdate",l))}render(){this.notifyPlugins("beforeRender",{cancelable:!0})!==!1&&(n1.has(this)?this.attached&&!n1.running(this)&&n1.start(this):(this.draw(),li({chart:this})))}draw(){let t;if(this._resizeBeforeDraw){const{width:s,height:l}=this._resizeBeforeDraw;this._resizeBeforeDraw=null,this._resize(s,l)}if(this.clear(),this.width<=0||this.height<=0||this.notifyPlugins("beforeDraw",{cancelable:!0})===!1)return;const i=this._layers;for(t=0;t<i.length&&i[t].z<=0;++t)i[t].draw(this.chartArea);for(this._drawDatasets();t<i.length;++t)i[t].draw(this.chartArea);this.notifyPlugins("afterDraw")}_getSortedDatasetMetas(t){const i=this._sortedMetasets,s=[];let l,a;for(l=0,a=i.length;l<a;++l){const c=i[l];(!t||c.visible)&&s.push(c)}return s}getSortedVisibleDatasetMetas(){return this._getSortedDatasetMetas(!0)}_drawDatasets(){if(this.notifyPlugins("beforeDatasetsDraw",{cancelable:!0})===!1)return;const t=this.getSortedVisibleDatasetMetas();for(let i=t.length-1;i>=0;--i)this._drawDataset(t[i]);this.notifyPlugins("afterDatasetsDraw")}_drawDataset(t){const i=this.ctx,s=t._clip,l=!s.disabled,a=Tu(t,this.chartArea),c={meta:t,index:t.index,cancelable:!0};this.notifyPlugins("beforeDatasetDraw",c)!==!1&&(l&&n8(i,{left:s.left===!1?0:a.left-s.left,right:s.right===!1?this.width:a.right+s.right,top:s.top===!1?0:a.top-s.top,bottom:s.bottom===!1?this.height:a.bottom+s.bottom}),t.controller.draw(),l&&i8(i),c.cancelable=!1,this.notifyPlugins("afterDatasetDraw",c))}isPointInArea(t){return Wi(t,this.chartArea,this._minPadding)}getElementsAtEventForMode(t,i,s,l){const a=Ma.modes[i];return typeof a=="function"?a(this,t,s,l):[]}getDatasetMeta(t){const i=this.data.datasets[t],s=this._metasets;let l=s.filter(a=>a&&a._dataset===i).pop();return l||(l={type:null,data:[],dataset:null,controller:null,hidden:null,xAxisID:null,yAxisID:null,order:i&&i.order||0,index:t,_dataset:i,_parsed:[],_sorted:!1},s.push(l)),l}getContext(){return this.$context||(this.$context=D5(null,{chart:this,type:"chart"}))}getVisibleDatasetCount(){return this.getSortedVisibleDatasetMetas().length}isDatasetVisible(t){const i=this.data.datasets[t];if(!i)return!1;const s=this.getDatasetMeta(t);return typeof s.hidden=="boolean"?!s.hidden:!i.hidden}setDatasetVisibility(t,i){const s=this.getDatasetMeta(t);s.hidden=!i}toggleDataVisibility(t){this._hiddenIndices[t]=!this._hiddenIndices[t]}getDataVisibility(t){return!this._hiddenIndices[t]}_updateVisibility(t,i,s){const l=s?"show":"hide",a=this.getDatasetMeta(t),c=a.controller._resolveAnimations(void 0,l);I6(i)?(a.data[i].hidden=!s,this.update()):(this.setDatasetVisibility(t,s),c.update(a,{visible:s}),this.update(f=>f.datasetIndex===t?l:void 0))}hide(t,i){this._updateVisibility(t,i,!1)}show(t,i){this._updateVisibility(t,i,!0)}_destroyDatasetMeta(t){const i=this._metasets[t];i&&i.controller&&i.controller._destroy(),delete this._metasets[t]}_stop(){let t,i;for(this.stop(),n1.remove(this),t=0,i=this.data.datasets.length;t<i;++t)this._destroyDatasetMeta(t)}destroy(){this.notifyPlugins("beforeDestroy");const{canvas:t,ctx:i}=this;this._stop(),this.config.clearCache(),t&&(this.unbindEvents(),On(t,i),this.platform.releaseContext(i),this.canvas=null,this.ctx=null),delete g3[this.id],this.notifyPlugins("afterDestroy")}toBase64Image(...t){return this.canvas.toDataURL(...t)}bindEvents(){this.bindUserEvents(),this.options.responsive?this.bindResponsiveEvents():this.attached=!0}bindUserEvents(){const t=this._listeners,i=this.platform,s=(a,c)=>{i.addEventListener(this,a,c),t[a]=c},l=(a,c,f)=>{a.offsetX=c,a.offsetY=f,this._eventHandler(a)};_9(this.options.events,a=>s(a,l))}bindResponsiveEvents(){this._responsiveListeners||(this._responsiveListeners={});const t=this._responsiveListeners,i=this.platform,s=(h,g)=>{i.addEventListener(this,h,g),t[h]=g},l=(h,g)=>{t[h]&&(i.removeEventListener(this,h,g),delete t[h])},a=(h,g)=>{this.canvas&&this.resize(h,g)};let c;const f=()=>{l("attach",f),this.attached=!0,this.resize(),s("resize",a),s("detach",c)};c=()=>{this.attached=!1,l("resize",a),this._stop(),this._resize(0,0),s("attach",f)},i.isAttached(this.canvas)?f():c()}unbindEvents(){_9(this._listeners,(t,i)=>{this.platform.removeEventListener(this,i,t)}),this._listeners={},_9(this._responsiveListeners,(t,i)=>{this.platform.removeEventListener(this,i,t)}),this._responsiveListeners=void 0}updateHoverStyle(t,i,s){const l=s?"set":"remove";let a,c,f,h;for(i==="dataset"&&(a=this.getDatasetMeta(t[0].datasetIndex),a.controller["_"+l+"DatasetHoverStyle"]()),f=0,h=t.length;f<h;++f){c=t[f];const g=c&&this.getDatasetMeta(c.datasetIndex).controller;g&&g[l+"HoverStyle"](c.element,c.datasetIndex,c.index)}}getActiveElements(){return this._active||[]}setActiveElements(t){const i=this._active||[],s=t.map(({datasetIndex:a,index:c})=>{const f=this.getDatasetMeta(a);if(!f)throw new Error("No dataset found at index "+a);return{datasetIndex:a,element:f.data[c],index:c}});!y3(s,i)&&(this._active=s,this._lastEvent=null,this._updateHoverStyles(s,i))}notifyPlugins(t,i,s){return this._plugins.notify(this,t,i,s)}isPluginEnabled(t){return this._plugins._cache.filter(i=>i.plugin.id===t).length===1}_updateHoverStyles(t,i,s){const l=this.options.hover,a=(h,g)=>h.filter(y=>!g.some(v=>y.datasetIndex===v.datasetIndex&&y.index===v.index)),c=a(i,t),f=s?t:a(t,i);c.length&&this.updateHoverStyle(c,l.mode,!1),f.length&&l.mode&&this.updateHoverStyle(f,l.mode,!0)}_eventHandler(t,i){const s={event:t,replay:i,cancelable:!0,inChartArea:this.isPointInArea(t)},l=c=>(c.options.events||this.options.events).includes(t.native.type);if(this.notifyPlugins("beforeEvent",s,l)===!1)return;const a=this._handleEvent(t,i,s.inChartArea);return s.cancelable=!1,this.notifyPlugins("afterEvent",s,l),(a||s.changed)&&this.render(),this}_handleEvent(t,i,s){const{_active:l=[],options:a}=this,c=i,f=this._getActiveElements(t,l,s,c),h=el(t),g=Pu(t,this._lastEvent,s,h);s&&(this._lastEvent=null,E9(a.onHover,[t,f,this],this),h&&E9(a.onClick,[t,f,this],this));const y=!y3(f,l);return(y||i)&&(this._active=f,this._updateHoverStyles(f,l,i)),this._lastEvent=g,y}_getActiveElements(t,i,s,l){if(t.type==="mouseout")return[];if(!s)return i;const a=this.options.hover;return this.getElementsAtEventForMode(t,a.mode,a,l)}},h9(b1,"defaults",N9),h9(b1,"instances",g3),h9(b1,"overrides",J1),h9(b1,"registry",U0),h9(b1,"version",bu),h9(b1,"getChart",ai),b1);function ui(){return _9(C3.instances,r=>r._plugins.invalidate())}function cr(r,t){const{x:i,y:s,base:l,width:a,height:c}=r.getProps(["x","y","base","width","height"],t);let f,h,g,y,v;return r.horizontal?(v=c/2,f=Math.min(i,l),h=Math.max(i,l),g=s-v,y=s+v):(v=a/2,f=i-v,h=i+v,g=Math.min(s,l),y=Math.max(s,l)),{left:f,top:g,right:h,bottom:y}}function C1(r,t,i,s){return r?0:I0(t,i,s)}function Ou(r,t,i){const s=r.options.borderWidth,l=r.borderSkipped,a=$i(s);return{t:C1(l.top,a.top,0,i),r:C1(l.right,a.right,0,t),b:C1(l.bottom,a.bottom,0,i),l:C1(l.left,a.left,0,t)}}function Lu(r,t,i){const{enableBorderRadius:s}=r.getProps(["enableBorderRadius"]),l=r.options.borderRadius,a=P5(l),c=Math.min(t,i),f=r.borderSkipped,h=s||y9(l);return{topLeft:C1(!h||f.top||f.left,a.topLeft,0,c),topRight:C1(!h||f.top||f.right,a.topRight,0,c),bottomLeft:C1(!h||f.bottom||f.left,a.bottomLeft,0,c),bottomRight:C1(!h||f.bottom||f.right,a.bottomRight,0,c)}}function Du(r){const t=cr(r),i=t.right-t.left,s=t.bottom-t.top,l=Ou(r,i/2,s/2),a=Lu(r,i/2,s/2);return{outer:{x:t.left,y:t.top,w:i,h:s,radius:a},inner:{x:t.left+l.l,y:t.top+l.t,w:i-l.l-l.r,h:s-l.t-l.b,radius:{topLeft:Math.max(0,a.topLeft-Math.max(l.t,l.l)),topRight:Math.max(0,a.topRight-Math.max(l.t,l.r)),bottomLeft:Math.max(0,a.bottomLeft-Math.max(l.b,l.l)),bottomRight:Math.max(0,a.bottomRight-Math.max(l.b,l.r))}}}}function F4(r,t,i,s){const l=t===null,a=i===null,f=r&&!(l&&a)&&cr(r,s);return f&&(l||E5(t,f.left,f.right))&&(a||E5(i,f.top,f.bottom))}function Ru(r){return r.topLeft||r.topRight||r.bottomLeft||r.bottomRight}function zu(r,t){r.rect(t.x,t.y,t.w,t.h)}function N4(r,t,i={}){const s=r.x!==i.x?-t:0,l=r.y!==i.y?-t:0,a=(r.x+r.w!==i.x+i.w?t:0)-s,c=(r.y+r.h!==i.y+i.h?t:0)-l;return{x:r.x+s,y:r.y+l,w:r.w+a,h:r.h+c,radius:r.radius}}class m3 extends L1{constructor(t){super(),this.options=void 0,this.horizontal=void 0,this.base=void 0,this.width=void 0,this.height=void 0,this.inflateAmount=void 0,t&&Object.assign(this,t)}draw(t){const{inflateAmount:i,options:{borderColor:s,backgroundColor:l}}=this,{inner:a,outer:c}=Du(this),f=Ru(c.radius)?w3:zu;t.save(),(c.w!==a.w||c.h!==a.h)&&(t.beginPath(),f(t,N4(c,i,a)),t.clip(),f(t,N4(a,-i,c)),t.fillStyle=s,t.fill("evenodd")),t.beginPath(),f(t,N4(a,i)),t.fillStyle=l,t.fill(),t.restore()}inRange(t,i,s){return F4(this,t,i,s)}inXRange(t,i){return F4(this,t,null,i)}inYRange(t,i){return F4(this,null,t,i)}getCenterPoint(t){const{x:i,y:s,base:l,horizontal:a}=this.getProps(["x","y","base","horizontal"],t);return{x:a?(i+l)/2:i,y:a?s:(s+l)/2}}getRange(t){return t==="x"?this.width/2:this.height/2}}h9(m3,"id","bar"),h9(m3,"defaults",{borderSkipped:"start",borderWidth:0,borderRadius:0,inflateAmount:"auto",pointStyle:void 0}),h9(m3,"defaultRoutes",{backgroundColor:"backgroundColor",borderColor:"borderColor"});const ci=(r,t)=>{let{boxHeight:i=t,boxWidth:s=t}=r;return r.usePointStyle&&(i=Math.min(i,t),s=r.pointStyleWidth||Math.min(s,t)),{boxWidth:s,boxHeight:i,itemHeight:Math.max(t,i)}},Iu=(r,t)=>r!==null&&t!==null&&r.datasetIndex===t.datasetIndex&&r.index===t.index;class fi extends L1{constructor(t){super(),this._added=!1,this.legendHitBoxes=[],this._hoveredItem=null,this.doughnutMode=!1,this.chart=t.chart,this.options=t.options,this.ctx=t.ctx,this.legendItems=void 0,this.columnSizes=void 0,this.lineWidths=void 0,this.maxHeight=void 0,this.maxWidth=void 0,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.height=void 0,this.width=void 0,this._margins=void 0,this.position=void 0,this.weight=void 0,this.fullSize=void 0}update(t,i,s){this.maxWidth=t,this.maxHeight=i,this._margins=s,this.setDimensions(),this.buildLabels(),this.fit()}setDimensions(){this.isHorizontal()?(this.width=this.maxWidth,this.left=this._margins.left,this.right=this.width):(this.height=this.maxHeight,this.top=this._margins.top,this.bottom=this.height)}buildLabels(){const t=this.options.labels||{};let i=E9(t.generateLabels,[this.chart],this)||[];t.filter&&(i=i.filter(s=>t.filter(s,this.chart.data))),t.sort&&(i=i.sort((s,l)=>t.sort(s,l,this.chart.data))),this.options.reverse&&i.reverse(),this.legendItems=i}fit(){const{options:t,ctx:i}=this;if(!t.display){this.width=this.height=0;return}const s=t.labels,l=J9(s.font),a=l.size,c=this._computeTitleHeight(),{boxWidth:f,itemHeight:h}=ci(s,a);let g,y;i.font=l.string,this.isHorizontal()?(g=this.maxWidth,y=this._fitRows(c,a,f,h)+10):(y=this.maxHeight,g=this._fitCols(c,l,f,h)+10),this.width=Math.min(g,t.maxWidth||this.maxWidth),this.height=Math.min(y,t.maxHeight||this.maxHeight)}_fitRows(t,i,s,l){const{ctx:a,maxWidth:c,options:{labels:{padding:f}}}=this,h=this.legendHitBoxes=[],g=this.lineWidths=[0],y=l+f;let v=t;a.textAlign="left",a.textBaseline="middle";let x=-1,k=-y;return this.legendItems.forEach((T,M)=>{const C=s+i/2+a.measureText(T.text).width;(M===0||g[g.length-1]+C+2*f>c)&&(v+=y,g[g.length-(M>0?0:1)]=0,k+=y,x++),h[M]={left:0,top:k,row:x,width:C,height:l},g[g.length-1]+=C+f}),v}_fitCols(t,i,s,l){const{ctx:a,maxHeight:c,options:{labels:{padding:f}}}=this,h=this.legendHitBoxes=[],g=this.columnSizes=[],y=c-t;let v=f,x=0,k=0,T=0,M=0;return this.legendItems.forEach((C,L)=>{const{itemWidth:F,itemHeight:A}=Fu(s,i,a,C,l);L>0&&k+A+2*f>y&&(v+=x+f,g.push({width:x,height:k}),T+=x+f,M++,x=k=0),h[L]={left:T,top:k,col:M,width:F,height:A},x=Math.max(x,F),k+=A+f}),v+=x,g.push({width:x,height:k}),v}adjustHitBoxes(){if(!this.options.display)return;const t=this._computeTitleHeight(),{legendHitBoxes:i,options:{align:s,labels:{padding:l},rtl:a}}=this,c=T5(a,this.left,this.width);if(this.isHorizontal()){let f=0,h=Z9(s,this.left+l,this.right-this.lineWidths[f]);for(const g of i)f!==g.row&&(f=g.row,h=Z9(s,this.left+l,this.right-this.lineWidths[f])),g.top+=this.top+t+l,g.left=c.leftForLtr(c.x(h),g.width),h+=g.width+l}else{let f=0,h=Z9(s,this.top+t+l,this.bottom-this.columnSizes[f].height);for(const g of i)g.col!==f&&(f=g.col,h=Z9(s,this.top+t+l,this.bottom-this.columnSizes[f].height)),g.top=h,g.left+=this.left+l,g.left=c.leftForLtr(c.x(g.left),g.width),h+=g.height+l}}isHorizontal(){return this.options.position==="top"||this.options.position==="bottom"}draw(){if(this.options.display){const t=this.ctx;n8(t,this),this._draw(),i8(t)}}_draw(){const{options:t,columnSizes:i,lineWidths:s,ctx:l}=this,{align:a,labels:c}=t,f=N9.color,h=T5(t.rtl,this.left,this.width),g=J9(c.font),{padding:y}=c,v=g.size,x=v/2;let k;this.drawTitle(),l.textAlign=h.textAlign("left"),l.textBaseline="middle",l.lineWidth=.5,l.font=g.string;const{boxWidth:T,boxHeight:M,itemHeight:C}=ci(c,v),L=function(Y,Q,G){if(isNaN(T)||T<=0||isNaN(M)||M<0)return;l.save();const r9=w9(G.lineWidth,1);if(l.fillStyle=w9(G.fillStyle,f),l.lineCap=w9(G.lineCap,"butt"),l.lineDashOffset=w9(G.lineDashOffset,0),l.lineJoin=w9(G.lineJoin,"miter"),l.lineWidth=r9,l.strokeStyle=w9(G.strokeStyle,f),l.setLineDash(w9(G.lineDash,[])),c.usePointStyle){const a9={radius:M*Math.SQRT2/2,pointStyle:G.pointStyle,rotation:G.rotation,borderWidth:r9},s9=h.xPlus(Y,T/2),o9=Q+x;Vi(l,a9,s9,o9,c.pointStyleWidth&&T)}else{const a9=Q+Math.max((v-M)/2,0),s9=h.leftForLtr(Y,T),o9=P5(G.borderRadius);l.beginPath(),Object.values(o9).some(k9=>k9!==0)?w3(l,{x:s9,y:a9,w:T,h:M,radius:o9}):l.rect(s9,a9,T,M),l.fill(),r9!==0&&l.stroke()}l.restore()},F=function(Y,Q,G){F6(l,G.text,Y,Q+C/2,g,{strikethrough:G.hidden,textAlign:h.textAlign(G.textAlign)})},A=this.isHorizontal(),H=this._computeTitleHeight();A?k={x:Z9(a,this.left+y,this.right-s[0]),y:this.top+y+H,line:0}:k={x:this.left+y,y:Z9(a,this.top+H+y,this.bottom-i[0].height),line:0},Gi(this.ctx,t.textDirection);const W=C+y;this.legendItems.forEach((Y,Q)=>{l.strokeStyle=Y.fontColor,l.fillStyle=Y.fontColor;const G=l.measureText(Y.text).width,r9=h.textAlign(Y.textAlign||(Y.textAlign=c.textAlign)),a9=T+x+G;let s9=k.x,o9=k.y;h.setWidth(this.width),A?Q>0&&s9+a9+y>this.right&&(o9=k.y+=W,k.line++,s9=k.x=Z9(a,this.left+y,this.right-s[k.line])):Q>0&&o9+W>this.bottom&&(s9=k.x=s9+i[k.line].width+y,k.line++,o9=k.y=Z9(a,this.top+H+y,this.bottom-i[k.line].height));const k9=h.x(s9);if(L(k9,o9,Y),s9=pl(r9,s9+T+x,A?s9+a9:this.right,t.rtl),F(h.x(s9),o9,Y),A)k.x+=a9+y;else if(typeof Y.text!="string"){const R9=g.lineHeight;k.y+=fr(Y,R9)+y}else k.y+=W}),qi(this.ctx,t.textDirection)}drawTitle(){const t=this.options,i=t.title,s=J9(i.font),l=C0(i.padding);if(!i.display)return;const a=T5(t.rtl,this.left,this.width),c=this.ctx,f=i.position,h=s.size/2,g=l.top+h;let y,v=this.left,x=this.width;if(this.isHorizontal())x=Math.max(...this.lineWidths),y=this.top+g,v=Z9(t.align,v,this.right-x);else{const T=this.columnSizes.reduce((M,C)=>Math.max(M,C.height),0);y=g+Z9(t.align,this.top,this.bottom-T-t.labels.padding-this._computeTitleHeight())}const k=Z9(f,v,v+x);c.textAlign=a.textAlign(t8(f)),c.textBaseline="middle",c.strokeStyle=i.color,c.fillStyle=i.color,c.font=s.string,F6(c,i.text,k,y,s)}_computeTitleHeight(){const t=this.options.title,i=J9(t.font),s=C0(t.padding);return t.display?i.lineHeight+s.height:0}_getLegendItemAt(t,i){let s,l,a;if(E5(t,this.left,this.right)&&E5(i,this.top,this.bottom)){for(a=this.legendHitBoxes,s=0;s<a.length;++s)if(l=a[s],E5(t,l.left,l.left+l.width)&&E5(i,l.top,l.top+l.height))return this.legendItems[s]}return null}handleEvent(t){const i=this.options;if(!ju(t.type,i))return;const s=this._getLegendItemAt(t.x,t.y);if(t.type==="mousemove"||t.type==="mouseout"){const l=this._hoveredItem,a=Iu(l,s);l&&!a&&E9(i.onLeave,[t,l,this],this),this._hoveredItem=s,s&&!a&&E9(i.onHover,[t,s,this],this)}else s&&E9(i.onClick,[t,s,this],this)}}function Fu(r,t,i,s,l){const a=Nu(s,r,t,i),c=Au(l,s,t.lineHeight);return{itemWidth:a,itemHeight:c}}function Nu(r,t,i,s){let l=r.text;return l&&typeof l!="string"&&(l=l.reduce((a,c)=>a.length>c.length?a:c)),t+i.size/2+s.measureText(l).width}function Au(r,t,i){let s=r;return typeof t.text!="string"&&(s=fr(t,i)),s}function fr(r,t){const i=r.text?r.text.length:0;return t*i}function ju(r,t){return!!((r==="mousemove"||r==="mouseout")&&(t.onHover||t.onLeave)||t.onClick&&(r==="click"||r==="mouseup"))}var Bu={id:"legend",_element:fi,start(r,t,i){const s=r.legend=new fi({ctx:r.ctx,options:i,chart:r});b0.configure(r,s,i),b0.addBox(r,s)},stop(r){b0.removeBox(r,r.legend),delete r.legend},beforeUpdate(r,t,i){const s=r.legend;b0.configure(r,s,i),s.options=i},afterUpdate(r){const t=r.legend;t.buildLabels(),t.adjustHitBoxes()},afterEvent(r,t){t.replay||r.legend.handleEvent(t.event)},defaults:{display:!0,position:"top",align:"center",fullSize:!0,reverse:!1,weight:1e3,onClick(r,t,i){const s=t.datasetIndex,l=i.chart;l.isDatasetVisible(s)?(l.hide(s),t.hidden=!0):(l.show(s),t.hidden=!1)},onHover:null,onLeave:null,labels:{color:r=>r.chart.options.color,boxWidth:40,padding:10,generateLabels(r){const t=r.data.datasets,{labels:{usePointStyle:i,pointStyle:s,textAlign:l,color:a,useBorderRadius:c,borderRadius:f}}=r.legend.options;return r._getSortedDatasetMetas().map(h=>{const g=h.controller.getStyle(i?0:void 0),y=C0(g.borderWidth);return{text:t[h.index].label,fillStyle:g.backgroundColor,fontColor:a,hidden:!h.visible,lineCap:g.borderCapStyle,lineDash:g.borderDash,lineDashOffset:g.borderDashOffset,lineJoin:g.borderJoinStyle,lineWidth:(y.width+y.height)/4,strokeStyle:g.borderColor,pointStyle:s||g.pointStyle,rotation:g.rotation,textAlign:l||g.textAlign,borderRadius:c&&(f||g.borderRadius),datasetIndex:h.index}},this)}},title:{color:r=>r.chart.options.color,display:!1,position:"center",text:""}},descriptors:{_scriptable:r=>!r.startsWith("on"),labels:{_scriptable:r=>!["generateLabels","filter","sort"].includes(r)}}};class dr extends L1{constructor(t){super(),this.chart=t.chart,this.options=t.options,this.ctx=t.ctx,this._padding=void 0,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.width=void 0,this.height=void 0,this.position=void 0,this.weight=void 0,this.fullSize=void 0}update(t,i){const s=this.options;if(this.left=0,this.top=0,!s.display){this.width=this.height=this.right=this.bottom=0;return}this.width=this.right=t,this.height=this.bottom=i;const l=V9(s.text)?s.text.length:1;this._padding=C0(s.padding);const a=l*J9(s.font).lineHeight+this._padding.height;this.isHorizontal()?this.height=a:this.width=a}isHorizontal(){const t=this.options.position;return t==="top"||t==="bottom"}_drawArgs(t){const{top:i,left:s,bottom:l,right:a,options:c}=this,f=c.align;let h=0,g,y,v;return this.isHorizontal()?(y=Z9(f,s,a),v=i+t,g=a-s):(c.position==="left"?(y=s+t,v=Z9(f,l,i),h=e0*-.5):(y=a-t,v=Z9(f,i,l),h=e0*.5),g=l-i),{titleX:y,titleY:v,maxWidth:g,rotation:h}}draw(){const t=this.ctx,i=this.options;if(!i.display)return;const s=J9(i.font),a=s.lineHeight/2+this._padding.top,{titleX:c,titleY:f,maxWidth:h,rotation:g}=this._drawArgs(a);F6(t,i.text,0,0,s,{color:i.color,maxWidth:h,rotation:g,textAlign:t8(i.align),textBaseline:"middle",translation:[c,f]})}}function Hu(r,t){const i=new dr({ctx:r.ctx,options:t,chart:r});b0.configure(r,i,t),b0.addBox(r,i),r.titleBlock=i}var Vu={id:"title",_element:dr,start(r,t,i){Hu(r,i)},stop(r){const t=r.titleBlock;b0.removeBox(r,t),delete r.titleBlock},beforeUpdate(r,t,i){const s=r.titleBlock;b0.configure(r,s,i),s.options=i},defaults:{align:"center",display:!1,font:{weight:"bold"},fullSize:!0,padding:10,position:"top",text:"",weight:2e3},defaultRoutes:{color:"color"},descriptors:{_scriptable:!0,_indexable:!1}};const E6={average(r){if(!r.length)return!1;let t,i,s=new Set,l=0,a=0;for(t=0,i=r.length;t<i;++t){const f=r[t].element;if(f&&f.hasValue()){const h=f.tooltipPosition();s.add(h.x),l+=h.y,++a}}return a===0||s.size===0?!1:{x:[...s].reduce((f,h)=>f+h)/s.size,y:l/a}},nearest(r,t){if(!r.length)return!1;let i=t.x,s=t.y,l=Number.POSITIVE_INFINITY,a,c,f;for(a=0,c=r.length;a<c;++a){const h=r[a].element;if(h&&h.hasValue()){const g=h.getCenterPoint(),y=ll(t,g);y<l&&(l=y,f=h)}}if(f){const h=f.tooltipPosition();i=h.x,s=h.y}return{x:i,y:s}}};function W0(r,t){return t&&(V9(t)?Array.prototype.push.apply(r,t):r.push(t)),r}function i1(r){return(typeof r=="string"||r instanceof String)&&r.indexOf(`
`)>-1?r.split(`
`):r}function Wu(r,t){const{element:i,datasetIndex:s,index:l}=t,a=r.getDatasetMeta(s).controller,{label:c,value:f}=a.getLabelAndValue(l);return{chart:r,label:c,parsed:a.getParsed(l),raw:r.data.datasets[s].data[l],formattedValue:f,dataset:a.getDataset(),dataIndex:l,datasetIndex:s,element:i}}function di(r,t){const i=r.chart.ctx,{body:s,footer:l,title:a}=r,{boxWidth:c,boxHeight:f}=t,h=J9(t.bodyFont),g=J9(t.titleFont),y=J9(t.footerFont),v=a.length,x=l.length,k=s.length,T=C0(t.padding);let M=T.height,C=0,L=s.reduce((H,W)=>H+W.before.length+W.lines.length+W.after.length,0);if(L+=r.beforeBody.length+r.afterBody.length,v&&(M+=v*g.lineHeight+(v-1)*t.titleSpacing+t.titleMarginBottom),L){const H=t.displayColors?Math.max(f,h.lineHeight):h.lineHeight;M+=k*H+(L-k)*h.lineHeight+(L-1)*t.bodySpacing}x&&(M+=t.footerMarginTop+x*y.lineHeight+(x-1)*t.footerSpacing);let F=0;const A=function(H){C=Math.max(C,i.measureText(H).width+F)};return i.save(),i.font=g.string,_9(r.title,A),i.font=h.string,_9(r.beforeBody.concat(r.afterBody),A),F=t.displayColors?c+2+t.boxPadding:0,_9(s,H=>{_9(H.before,A),_9(H.lines,A),_9(H.after,A)}),F=0,i.font=y.string,_9(r.footer,A),i.restore(),C+=T.width,{width:C,height:M}}function Uu(r,t){const{y:i,height:s}=t;return i<s/2?"top":i>r.height-s/2?"bottom":"center"}function $u(r,t,i,s){const{x:l,width:a}=s,c=i.caretSize+i.caretPadding;if(r==="left"&&l+a+c>t.width||r==="right"&&l-a-c<0)return!0}function Yu(r,t,i,s){const{x:l,width:a}=i,{width:c,chartArea:{left:f,right:h}}=r;let g="center";return s==="center"?g=l<=(f+h)/2?"left":"right":l<=a/2?g="left":l>=c-a/2&&(g="right"),$u(g,r,t,i)&&(g="center"),g}function hi(r,t,i){const s=i.yAlign||t.yAlign||Uu(r,i);return{xAlign:i.xAlign||t.xAlign||Yu(r,t,i,s),yAlign:s}}function Ku(r,t){let{x:i,width:s}=r;return t==="right"?i-=s:t==="center"&&(i-=s/2),i}function Qu(r,t,i){let{y:s,height:l}=r;return t==="top"?s+=i:t==="bottom"?s-=l+i:s-=l/2,s}function pi(r,t,i,s){const{caretSize:l,caretPadding:a,cornerRadius:c}=r,{xAlign:f,yAlign:h}=i,g=l+a,{topLeft:y,topRight:v,bottomLeft:x,bottomRight:k}=P5(c);let T=Ku(t,f);const M=Qu(t,h,g);return h==="center"?f==="left"?T+=g:f==="right"&&(T-=g):f==="left"?T-=Math.max(y,x)+l:f==="right"&&(T+=Math.max(v,k)+l),{x:I0(T,0,s.width-t.width),y:I0(M,0,s.height-t.height)}}function a3(r,t,i){const s=C0(i.padding);return t==="center"?r.x+r.width/2:t==="right"?r.x+r.width-s.right:r.x+s.left}function gi(r){return W0([],i1(r))}function Xu(r,t,i){return D5(r,{tooltip:t,tooltipItems:i,type:"tooltip"})}function mi(r,t){const i=t&&t.dataset&&t.dataset.tooltip&&t.dataset.tooltip.callbacks;return i?r.override(i):r}const hr={beforeTitle:e1,title(r){if(r.length>0){const t=r[0],i=t.chart.data.labels,s=i?i.length:0;if(this&&this.options&&this.options.mode==="dataset")return t.dataset.label||"";if(t.label)return t.label;if(s>0&&t.dataIndex<s)return i[t.dataIndex]}return""},afterTitle:e1,beforeBody:e1,beforeLabel:e1,label(r){if(this&&this.options&&this.options.mode==="dataset")return r.label+": "+r.formattedValue||r.formattedValue;let t=r.dataset.label||"";t&&(t+=": ");const i=r.formattedValue;return P9(i)||(t+=i),t},labelColor(r){const i=r.chart.getDatasetMeta(r.datasetIndex).controller.getStyle(r.dataIndex);return{borderColor:i.borderColor,backgroundColor:i.backgroundColor,borderWidth:i.borderWidth,borderDash:i.borderDash,borderDashOffset:i.borderDashOffset,borderRadius:0}},labelTextColor(){return this.options.bodyColor},labelPointStyle(r){const i=r.chart.getDatasetMeta(r.datasetIndex).controller.getStyle(r.dataIndex);return{pointStyle:i.pointStyle,rotation:i.rotation}},afterLabel:e1,afterBody:e1,beforeFooter:e1,footer:e1,afterFooter:e1};function c0(r,t,i,s){const l=r[t].call(i,s);return typeof l>"u"?hr[t].call(i,s):l}class Y4 extends L1{constructor(t){super(),this.opacity=0,this._active=[],this._eventPosition=void 0,this._size=void 0,this._cachedAnimations=void 0,this._tooltipItems=[],this.$animations=void 0,this.$context=void 0,this.chart=t.chart,this.options=t.options,this.dataPoints=void 0,this.title=void 0,this.beforeBody=void 0,this.body=void 0,this.afterBody=void 0,this.footer=void 0,this.xAlign=void 0,this.yAlign=void 0,this.x=void 0,this.y=void 0,this.height=void 0,this.width=void 0,this.caretX=void 0,this.caretY=void 0,this.labelColors=void 0,this.labelPointStyles=void 0,this.labelTextColors=void 0}initialize(t){this.options=t,this._cachedAnimations=void 0,this.$context=void 0}_resolveAnimations(){const t=this._cachedAnimations;if(t)return t;const i=this.chart,s=this.options.setContext(this.getContext()),l=s.enabled&&i.options.animation&&s.animations,a=new Zi(this.chart,l);return l._cacheable&&(this._cachedAnimations=Object.freeze(a)),a}getContext(){return this.$context||(this.$context=Xu(this.chart.getContext(),this,this._tooltipItems))}getTitle(t,i){const{callbacks:s}=i,l=c0(s,"beforeTitle",this,t),a=c0(s,"title",this,t),c=c0(s,"afterTitle",this,t);let f=[];return f=W0(f,i1(l)),f=W0(f,i1(a)),f=W0(f,i1(c)),f}getBeforeBody(t,i){return gi(c0(i.callbacks,"beforeBody",this,t))}getBody(t,i){const{callbacks:s}=i,l=[];return _9(t,a=>{const c={before:[],lines:[],after:[]},f=mi(s,a);W0(c.before,i1(c0(f,"beforeLabel",this,a))),W0(c.lines,c0(f,"label",this,a)),W0(c.after,i1(c0(f,"afterLabel",this,a))),l.push(c)}),l}getAfterBody(t,i){return gi(c0(i.callbacks,"afterBody",this,t))}getFooter(t,i){const{callbacks:s}=i,l=c0(s,"beforeFooter",this,t),a=c0(s,"footer",this,t),c=c0(s,"afterFooter",this,t);let f=[];return f=W0(f,i1(l)),f=W0(f,i1(a)),f=W0(f,i1(c)),f}_createItems(t){const i=this._active,s=this.chart.data,l=[],a=[],c=[];let f=[],h,g;for(h=0,g=i.length;h<g;++h)f.push(Wu(this.chart,i[h]));return t.filter&&(f=f.filter((y,v,x)=>t.filter(y,v,x,s))),t.itemSort&&(f=f.sort((y,v)=>t.itemSort(y,v,s))),_9(f,y=>{const v=mi(t.callbacks,y);l.push(c0(v,"labelColor",this,y)),a.push(c0(v,"labelPointStyle",this,y)),c.push(c0(v,"labelTextColor",this,y))}),this.labelColors=l,this.labelPointStyles=a,this.labelTextColors=c,this.dataPoints=f,f}update(t,i){const s=this.options.setContext(this.getContext()),l=this._active;let a,c=[];if(!l.length)this.opacity!==0&&(a={opacity:0});else{const f=E6[s.position].call(this,l,this._eventPosition);c=this._createItems(s),this.title=this.getTitle(c,s),this.beforeBody=this.getBeforeBody(c,s),this.body=this.getBody(c,s),this.afterBody=this.getAfterBody(c,s),this.footer=this.getFooter(c,s);const h=this._size=di(this,s),g=Object.assign({},f,h),y=hi(this.chart,s,g),v=pi(s,g,y,this.chart);this.xAlign=y.xAlign,this.yAlign=y.yAlign,a={opacity:1,x:v.x,y:v.y,width:h.width,height:h.height,caretX:f.x,caretY:f.y}}this._tooltipItems=c,this.$context=void 0,a&&this._resolveAnimations().update(this,a),t&&s.external&&s.external.call(this,{chart:this.chart,tooltip:this,replay:i})}drawCaret(t,i,s,l){const a=this.getCaretPosition(t,s,l);i.lineTo(a.x1,a.y1),i.lineTo(a.x2,a.y2),i.lineTo(a.x3,a.y3)}getCaretPosition(t,i,s){const{xAlign:l,yAlign:a}=this,{caretSize:c,cornerRadius:f}=s,{topLeft:h,topRight:g,bottomLeft:y,bottomRight:v}=P5(f),{x,y:k}=t,{width:T,height:M}=i;let C,L,F,A,H,W;return a==="center"?(H=k+M/2,l==="left"?(C=x,L=C-c,A=H+c,W=H-c):(C=x+T,L=C+c,A=H-c,W=H+c),F=C):(l==="left"?L=x+Math.max(h,y)+c:l==="right"?L=x+T-Math.max(g,v)-c:L=this.caretX,a==="top"?(A=k,H=A-c,C=L-c,F=L+c):(A=k+M,H=A+c,C=L+c,F=L-c),W=A),{x1:C,x2:L,x3:F,y1:A,y2:H,y3:W}}drawTitle(t,i,s){const l=this.title,a=l.length;let c,f,h;if(a){const g=T5(s.rtl,this.x,this.width);for(t.x=a3(this,s.titleAlign,s),i.textAlign=g.textAlign(s.titleAlign),i.textBaseline="middle",c=J9(s.titleFont),f=s.titleSpacing,i.fillStyle=s.titleColor,i.font=c.string,h=0;h<a;++h)i.fillText(l[h],g.x(t.x),t.y+c.lineHeight/2),t.y+=c.lineHeight+f,h+1===a&&(t.y+=s.titleMarginBottom-f)}}_drawColorBox(t,i,s,l,a){const c=this.labelColors[s],f=this.labelPointStyles[s],{boxHeight:h,boxWidth:g}=a,y=J9(a.bodyFont),v=a3(this,"left",a),x=l.x(v),k=h<y.lineHeight?(y.lineHeight-h)/2:0,T=i.y+k;if(a.usePointStyle){const M={radius:Math.min(g,h)/2,pointStyle:f.pointStyle,rotation:f.rotation,borderWidth:1},C=l.leftForLtr(x,g)+g/2,L=T+h/2;t.strokeStyle=a.multiKeyBackground,t.fillStyle=a.multiKeyBackground,Ln(t,M,C,L),t.strokeStyle=c.borderColor,t.fillStyle=c.backgroundColor,Ln(t,M,C,L)}else{t.lineWidth=y9(c.borderWidth)?Math.max(...Object.values(c.borderWidth)):c.borderWidth||1,t.strokeStyle=c.borderColor,t.setLineDash(c.borderDash||[]),t.lineDashOffset=c.borderDashOffset||0;const M=l.leftForLtr(x,g),C=l.leftForLtr(l.xPlus(x,1),g-2),L=P5(c.borderRadius);Object.values(L).some(F=>F!==0)?(t.beginPath(),t.fillStyle=a.multiKeyBackground,w3(t,{x:M,y:T,w:g,h,radius:L}),t.fill(),t.stroke(),t.fillStyle=c.backgroundColor,t.beginPath(),w3(t,{x:C,y:T+1,w:g-2,h:h-2,radius:L}),t.fill()):(t.fillStyle=a.multiKeyBackground,t.fillRect(M,T,g,h),t.strokeRect(M,T,g,h),t.fillStyle=c.backgroundColor,t.fillRect(C,T+1,g-2,h-2))}t.fillStyle=this.labelTextColors[s]}drawBody(t,i,s){const{body:l}=this,{bodySpacing:a,bodyAlign:c,displayColors:f,boxHeight:h,boxWidth:g,boxPadding:y}=s,v=J9(s.bodyFont);let x=v.lineHeight,k=0;const T=T5(s.rtl,this.x,this.width),M=function(G){i.fillText(G,T.x(t.x+k),t.y+x/2),t.y+=x+a},C=T.textAlign(c);let L,F,A,H,W,Y,Q;for(i.textAlign=c,i.textBaseline="middle",i.font=v.string,t.x=a3(this,C,s),i.fillStyle=s.bodyColor,_9(this.beforeBody,M),k=f&&C!=="right"?c==="center"?g/2+y:g+2+y:0,H=0,Y=l.length;H<Y;++H){for(L=l[H],F=this.labelTextColors[H],i.fillStyle=F,_9(L.before,M),A=L.lines,f&&A.length&&(this._drawColorBox(i,t,H,T,s),x=Math.max(v.lineHeight,h)),W=0,Q=A.length;W<Q;++W)M(A[W]),x=v.lineHeight;_9(L.after,M)}k=0,x=v.lineHeight,_9(this.afterBody,M),t.y-=a}drawFooter(t,i,s){const l=this.footer,a=l.length;let c,f;if(a){const h=T5(s.rtl,this.x,this.width);for(t.x=a3(this,s.footerAlign,s),t.y+=s.footerMarginTop,i.textAlign=h.textAlign(s.footerAlign),i.textBaseline="middle",c=J9(s.footerFont),i.fillStyle=s.footerColor,i.font=c.string,f=0;f<a;++f)i.fillText(l[f],h.x(t.x),t.y+c.lineHeight/2),t.y+=c.lineHeight+s.footerSpacing}}drawBackground(t,i,s,l){const{xAlign:a,yAlign:c}=this,{x:f,y:h}=t,{width:g,height:y}=s,{topLeft:v,topRight:x,bottomLeft:k,bottomRight:T}=P5(l.cornerRadius);i.fillStyle=l.backgroundColor,i.strokeStyle=l.borderColor,i.lineWidth=l.borderWidth,i.beginPath(),i.moveTo(f+v,h),c==="top"&&this.drawCaret(t,i,s,l),i.lineTo(f+g-x,h),i.quadraticCurveTo(f+g,h,f+g,h+x),c==="center"&&a==="right"&&this.drawCaret(t,i,s,l),i.lineTo(f+g,h+y-T),i.quadraticCurveTo(f+g,h+y,f+g-T,h+y),c==="bottom"&&this.drawCaret(t,i,s,l),i.lineTo(f+k,h+y),i.quadraticCurveTo(f,h+y,f,h+y-k),c==="center"&&a==="left"&&this.drawCaret(t,i,s,l),i.lineTo(f,h+v),i.quadraticCurveTo(f,h,f+v,h),i.closePath(),i.fill(),l.borderWidth>0&&i.stroke()}_updateAnimationTarget(t){const i=this.chart,s=this.$animations,l=s&&s.x,a=s&&s.y;if(l||a){const c=E6[t.position].call(this,this._active,this._eventPosition);if(!c)return;const f=this._size=di(this,t),h=Object.assign({},c,this._size),g=hi(i,t,h),y=pi(t,h,g,i);(l._to!==y.x||a._to!==y.y)&&(this.xAlign=g.xAlign,this.yAlign=g.yAlign,this.width=f.width,this.height=f.height,this.caretX=c.x,this.caretY=c.y,this._resolveAnimations().update(this,y))}}_willRender(){return!!this.opacity}draw(t){const i=this.options.setContext(this.getContext());let s=this.opacity;if(!s)return;this._updateAnimationTarget(i);const l={width:this.width,height:this.height},a={x:this.x,y:this.y};s=Math.abs(s)<.001?0:s;const c=C0(i.padding),f=this.title.length||this.beforeBody.length||this.body.length||this.afterBody.length||this.footer.length;i.enabled&&f&&(t.save(),t.globalAlpha=s,this.drawBackground(a,t,l,i),Gi(t,i.textDirection),a.y+=c.top,this.drawTitle(a,t,i),this.drawBody(a,t,i),this.drawFooter(a,t,i),qi(t,i.textDirection),t.restore())}getActiveElements(){return this._active||[]}setActiveElements(t,i){const s=this._active,l=t.map(({datasetIndex:f,index:h})=>{const g=this.chart.getDatasetMeta(f);if(!g)throw new Error("Cannot find a dataset at index "+f);return{datasetIndex:f,element:g.data[h],index:h}}),a=!y3(s,l),c=this._positionChanged(l,i);(a||c)&&(this._active=l,this._eventPosition=i,this._ignoreReplayEvents=!0,this.update(!0))}handleEvent(t,i,s=!0){if(i&&this._ignoreReplayEvents)return!1;this._ignoreReplayEvents=!1;const l=this.options,a=this._active||[],c=this._getActiveElements(t,a,i,s),f=this._positionChanged(c,t),h=i||!y3(c,a)||f;return h&&(this._active=c,(l.enabled||l.external)&&(this._eventPosition={x:t.x,y:t.y},this.update(!0,i))),h}_getActiveElements(t,i,s,l){const a=this.options;if(t.type==="mouseout")return[];if(!l)return i.filter(f=>this.chart.data.datasets[f.datasetIndex]&&this.chart.getDatasetMeta(f.datasetIndex).controller.getParsed(f.index)!==void 0);const c=this.chart.getElementsAtEventForMode(t,a.mode,a,s);return a.reverse&&c.reverse(),c}_positionChanged(t,i){const{caretX:s,caretY:l,options:a}=this,c=E6[a.position].call(this,t,i);return c!==!1&&(s!==c.x||l!==c.y)}}h9(Y4,"positioners",E6);var Gu={id:"tooltip",_element:Y4,positioners:E6,afterInit(r,t,i){i&&(r.tooltip=new Y4({chart:r,options:i}))},beforeUpdate(r,t,i){r.tooltip&&r.tooltip.initialize(i)},reset(r,t,i){r.tooltip&&r.tooltip.initialize(i)},afterDraw(r){const t=r.tooltip;if(t&&t._willRender()){const i={tooltip:t};if(r.notifyPlugins("beforeTooltipDraw",{...i,cancelable:!0})===!1)return;t.draw(r.ctx),r.notifyPlugins("afterTooltipDraw",i)}},afterEvent(r,t){if(r.tooltip){const i=t.replay;r.tooltip.handleEvent(t.event,i,t.inChartArea)&&(t.changed=!0)}},defaults:{enabled:!0,external:null,position:"average",backgroundColor:"rgba(0,0,0,0.8)",titleColor:"#fff",titleFont:{weight:"bold"},titleSpacing:2,titleMarginBottom:6,titleAlign:"left",bodyColor:"#fff",bodySpacing:2,bodyFont:{},bodyAlign:"left",footerColor:"#fff",footerSpacing:2,footerMarginTop:6,footerFont:{weight:"bold"},footerAlign:"left",padding:6,caretPadding:2,caretSize:5,cornerRadius:6,boxHeight:(r,t)=>t.bodyFont.size,boxWidth:(r,t)=>t.bodyFont.size,multiKeyBackground:"#fff",displayColors:!0,boxPadding:0,borderColor:"rgba(0,0,0,0)",borderWidth:0,animation:{duration:400,easing:"easeOutQuart"},animations:{numbers:{type:"number",properties:["x","y","width","height","caretX","caretY"]},opacity:{easing:"linear",duration:200}},callbacks:hr},defaultRoutes:{bodyFont:"font",footerFont:"font",titleFont:"font"},descriptors:{_scriptable:r=>r!=="filter"&&r!=="itemSort"&&r!=="external",_indexable:!1,callbacks:{_scriptable:!1,_indexable:!1},animation:{_fallback:!1},animations:{_fallback:"animation"}},additionalOptionScopes:["interaction"]};const qu=(r,t,i,s)=>(typeof t=="string"?(i=r.push(t)-1,s.unshift({index:i,label:t})):isNaN(t)&&(i=null),i);function Zu(r,t,i,s){const l=r.indexOf(t);if(l===-1)return qu(r,t,i,s);const a=r.lastIndexOf(t);return l!==a?i:l}const Ju=(r,t)=>r===null?null:I0(Math.round(r),0,t);function yi(r){const t=this.getLabels();return r>=0&&r<t.length?t[r]:r}class K4 extends R5{constructor(t){super(t),this._startValue=void 0,this._valueRange=0,this._addedLabels=[]}init(t){const i=this._addedLabels;if(i.length){const s=this.getLabels();for(const{index:l,label:a}of i)s[l]===a&&s.splice(l,1);this._addedLabels=[]}super.init(t)}parse(t,i){if(P9(t))return null;const s=this.getLabels();return i=isFinite(i)&&s[i]===t?i:Zu(s,t,w9(i,t),this._addedLabels),Ju(i,s.length-1)}determineDataLimits(){const{minDefined:t,maxDefined:i}=this.getUserBounds();let{min:s,max:l}=this.getMinMax(!0);this.options.bounds==="ticks"&&(t||(s=0),i||(l=this.getLabels().length-1)),this.min=s,this.max=l}buildTicks(){const t=this.min,i=this.max,s=this.options.offset,l=[];let a=this.getLabels();a=t===0&&i===a.length-1?a:a.slice(t,i+1),this._valueRange=Math.max(a.length-(s?0:1),1),this._startValue=this.min-(s?.5:0);for(let c=t;c<=i;c++)l.push({value:c});return l}getLabelForValue(t){return yi.call(this,t)}configure(){super.configure(),this.isHorizontal()||(this._reversePixels=!this._reversePixels)}getPixelForValue(t){return typeof t!="number"&&(t=this.parse(t)),t===null?NaN:this.getPixelForDecimal((t-this._startValue)/this._valueRange)}getPixelForTick(t){const i=this.ticks;return t<0||t>i.length-1?null:this.getPixelForValue(i[t].value)}getValueForPixel(t){return Math.round(this._startValue+this.getDecimalForPixel(t)*this._valueRange)}getBasePixel(){return this.bottom}}h9(K4,"id","category"),h9(K4,"defaults",{ticks:{callback:yi}});function ec(r,t){const i=[],{bounds:l,step:a,min:c,max:f,precision:h,count:g,maxTicks:y,maxDigits:v,includeBounds:x}=r,k=a||1,T=y-1,{min:M,max:C}=t,L=!P9(c),F=!P9(f),A=!P9(g),H=(C-M)/(v+1);let W=kn((C-M)/T/k)*k,Y,Q,G,r9;if(W<1e-14&&!L&&!F)return[{value:M},{value:C}];r9=Math.ceil(C/W)-Math.floor(M/W),r9>T&&(W=kn(r9*W/T/k)*k),P9(h)||(Y=Math.pow(10,h),W=Math.ceil(W*Y)/Y),l==="ticks"?(Q=Math.floor(M/W)*W,G=Math.ceil(C/W)*W):(Q=M,G=C),L&&F&&a&&il((f-c)/a,W/1e3)?(r9=Math.round(Math.min((f-c)/W,y)),W=(f-c)/r9,Q=c,G=f):A?(Q=L?c:Q,G=F?f:G,r9=g-1,W=(G-Q)/r9):(r9=(G-Q)/W,d3(r9,Math.round(r9),W/1e3)?r9=Math.round(r9):r9=Math.ceil(r9));const a9=Math.max(Sn(W),Sn(Q));Y=Math.pow(10,P9(h)?a9:h),Q=Math.round(Q*Y)/Y,G=Math.round(G*Y)/Y;let s9=0;for(L&&(x&&Q!==c?(i.push({value:c}),Q<c&&s9++,d3(Math.round((Q+s9*W)*Y)/Y,c,vi(c,H,r))&&s9++):Q<c&&s9++);s9<r9;++s9){const o9=Math.round((Q+s9*W)*Y)/Y;if(F&&o9>f)break;i.push({value:o9})}return F&&x&&G!==f?i.length&&d3(i[i.length-1].value,f,vi(f,H,r))?i[i.length-1].value=f:i.push({value:f}):(!F||G===f)&&i.push({value:G}),i}function vi(r,t,{horizontal:i,minRotation:s}){const l=q1(s),a=(i?Math.sin(l):Math.cos(l))||.001,c=.75*t*(""+r).length;return Math.min(t/a,c)}class tc extends R5{constructor(t){super(t),this.start=void 0,this.end=void 0,this._startValue=void 0,this._endValue=void 0,this._valueRange=0}parse(t,i){return P9(t)||(typeof t=="number"||t instanceof Number)&&!isFinite(+t)?null:+t}handleTickRangeOptions(){const{beginAtZero:t}=this.options,{minDefined:i,maxDefined:s}=this.getUserBounds();let{min:l,max:a}=this;const c=h=>l=i?l:h,f=h=>a=s?a:h;if(t){const h=T1(l),g=T1(a);h<0&&g<0?f(0):h>0&&g>0&&c(0)}if(l===a){let h=a===0?1:Math.abs(a*.05);f(a+h),t||c(l-h)}this.min=l,this.max=a}getTickLimit(){const t=this.options.ticks;let{maxTicksLimit:i,stepSize:s}=t,l;return s?(l=Math.ceil(this.max/s)-Math.floor(this.min/s)+1,l>1e3&&(console.warn(`scales.${this.id}.ticks.stepSize: ${s} would result generating up to ${l} ticks. Limiting to 1000.`),l=1e3)):(l=this.computeTickLimit(),i=i||11),i&&(l=Math.min(i,l)),l}computeTickLimit(){return Number.POSITIVE_INFINITY}buildTicks(){const t=this.options,i=t.ticks;let s=this.getTickLimit();s=Math.max(2,s);const l={maxTicks:s,bounds:t.bounds,min:t.min,max:t.max,precision:i.precision,step:i.stepSize,count:i.count,maxDigits:this._maxDigits(),horizontal:this.isHorizontal(),minRotation:i.minRotation||0,includeBounds:i.includeBounds!==!1},a=this._range||this,c=ec(l,a);return t.bounds==="ticks"&&rl(c,this,"value"),t.reverse?(c.reverse(),this.start=this.max,this.end=this.min):(this.start=this.min,this.end=this.max),c}configure(){const t=this.ticks;let i=this.min,s=this.max;if(super.configure(),this.options.offset&&t.length){const l=(s-i)/Math.max(t.length-1,1)/2;i-=l,s+=l}this._startValue=i,this._endValue=s,this._valueRange=s-i}getLabelForValue(t){return ji(t,this.chart.options.locale,this.options.ticks.format)}}class Q4 extends tc{determineDataLimits(){const{min:t,max:i}=this.getMinMax(!0);this.min=M0(t)?t:0,this.max=M0(i)?i:1,this.handleTickRangeOptions()}computeTickLimit(){const t=this.isHorizontal(),i=t?this.width:this.height,s=q1(this.options.ticks.minRotation),l=(t?Math.sin(s):Math.cos(s))||.001,a=this._resolveTickFontOptions(0);return Math.ceil(i/Math.min(40,a.lineHeight/l))}getPixelForValue(t){return t===null?NaN:this.getPixelForDecimal((t-this._startValue)/this._valueRange)}getValueForPixel(t){return this._startValue+this.getDecimalForPixel(t)*this._valueRange}}h9(Q4,"id","linear"),h9(Q4,"defaults",{ticks:{callback:Hi.formatters.numeric}});const E3={millisecond:{common:!0,size:1,steps:1e3},second:{common:!0,size:1e3,steps:60},minute:{common:!0,size:6e4,steps:60},hour:{common:!0,size:36e5,steps:24},day:{common:!0,size:864e5,steps:30},week:{common:!1,size:6048e5,steps:4},month:{common:!0,size:2628e6,steps:12},quarter:{common:!1,size:7884e6,steps:4},year:{common:!0,size:3154e7}},f0=Object.keys(E3);function xi(r,t){return r-t}function _i(r,t){if(P9(t))return null;const i=r._adapter,{parser:s,round:l,isoWeekday:a}=r._parseOpts;let c=t;return typeof s=="function"&&(c=s(c)),M0(c)||(c=typeof s=="string"?i.parse(c,s):i.parse(c)),c===null?null:(l&&(c=l==="week"&&(_3(a)||a===!0)?i.startOf(c,"isoWeek",a):i.startOf(c,l)),+c)}function wi(r,t,i,s){const l=f0.length;for(let a=f0.indexOf(r);a<l-1;++a){const c=E3[f0[a]],f=c.steps?c.steps:Number.MAX_SAFE_INTEGER;if(c.common&&Math.ceil((i-t)/(f*c.size))<=s)return f0[a]}return f0[l-1]}function nc(r,t,i,s,l){for(let a=f0.length-1;a>=f0.indexOf(i);a--){const c=f0[a];if(E3[c].common&&r._adapter.diff(l,s,c)>=t-1)return c}return f0[i?f0.indexOf(i):0]}function ic(r){for(let t=f0.indexOf(r)+1,i=f0.length;t<i;++t)if(E3[f0[t]].common)return f0[t]}function ki(r,t,i){if(!i)r[t]=!0;else if(i.length){const{lo:s,hi:l}=e8(i,t),a=i[s]>=t?i[s]:i[l];r[a]=!0}}function rc(r,t,i,s){const l=r._adapter,a=+l.startOf(t[0].value,s),c=t[t.length-1].value;let f,h;for(f=a;f<=c;f=+l.add(f,1,s))h=i[f],h>=0&&(t[h].major=!0);return t}function Si(r,t,i){const s=[],l={},a=t.length;let c,f;for(c=0;c<a;++c)f=t[c],l[f]=c,s.push({value:f,major:!1});return a===0||!i?s:rc(r,s,l,i)}class b3 extends R5{constructor(t){super(t),this._cache={data:[],labels:[],all:[]},this._unit="day",this._majorUnit=void 0,this._offsets={},this._normalized=!1,this._parseOpts=void 0}init(t,i={}){const s=t.time||(t.time={}),l=this._adapter=new _a._date(t.adapters.date);l.init(i),T6(s.displayFormats,l.formats()),this._parseOpts={parser:s.parser,round:s.round,isoWeekday:s.isoWeekday},super.init(t),this._normalized=i.normalized}parse(t,i){return t===void 0?null:_i(this,t)}beforeLayout(){super.beforeLayout(),this._cache={data:[],labels:[],all:[]}}determineDataLimits(){const t=this.options,i=this._adapter,s=t.time.unit||"day";let{min:l,max:a,minDefined:c,maxDefined:f}=this.getUserBounds();function h(g){!c&&!isNaN(g.min)&&(l=Math.min(l,g.min)),!f&&!isNaN(g.max)&&(a=Math.max(a,g.max))}(!c||!f)&&(h(this._getLabelBounds()),(t.bounds!=="ticks"||t.ticks.source!=="labels")&&h(this.getMinMax(!1))),l=M0(l)&&!isNaN(l)?l:+i.startOf(Date.now(),s),a=M0(a)&&!isNaN(a)?a:+i.endOf(Date.now(),s)+1,this.min=Math.min(l,a-1),this.max=Math.max(l+1,a)}_getLabelBounds(){const t=this.getLabelTimestamps();let i=Number.POSITIVE_INFINITY,s=Number.NEGATIVE_INFINITY;return t.length&&(i=t[0],s=t[t.length-1]),{min:i,max:s}}buildTicks(){const t=this.options,i=t.time,s=t.ticks,l=s.source==="labels"?this.getLabelTimestamps():this._generate();t.bounds==="ticks"&&l.length&&(this.min=this._userMin||l[0],this.max=this._userMax||l[l.length-1]);const a=this.min,c=this.max,f=fl(l,a,c);return this._unit=i.unit||(s.autoSkip?wi(i.minUnit,this.min,this.max,this._getLabelCapacity(a)):nc(this,f.length,i.minUnit,this.min,this.max)),this._majorUnit=!s.major.enabled||this._unit==="year"?void 0:ic(this._unit),this.initOffsets(l),t.reverse&&f.reverse(),Si(this,f,this._majorUnit)}afterAutoSkip(){this.options.offsetAfterAutoskip&&this.initOffsets(this.ticks.map(t=>+t.value))}initOffsets(t=[]){let i=0,s=0,l,a;this.options.offset&&t.length&&(l=this.getDecimalForValue(t[0]),t.length===1?i=1-l:i=(this.getDecimalForValue(t[1])-l)/2,a=this.getDecimalForValue(t[t.length-1]),t.length===1?s=a:s=(a-this.getDecimalForValue(t[t.length-2]))/2);const c=t.length<3?.5:.25;i=I0(i,0,c),s=I0(s,0,c),this._offsets={start:i,end:s,factor:1/(i+1+s)}}_generate(){const t=this._adapter,i=this.min,s=this.max,l=this.options,a=l.time,c=a.unit||wi(a.minUnit,i,s,this._getLabelCapacity(i)),f=w9(l.ticks.stepSize,1),h=c==="week"?a.isoWeekday:!1,g=_3(h)||h===!0,y={};let v=i,x,k;if(g&&(v=+t.startOf(v,"isoWeek",h)),v=+t.startOf(v,g?"day":c),t.diff(s,i,c)>1e5*f)throw new Error(i+" and "+s+" are too far apart with stepSize of "+f+" "+c);const T=l.ticks.source==="data"&&this.getDataTimestamps();for(x=v,k=0;x<s;x=+t.add(x,f,c),k++)ki(y,x,T);return(x===s||l.bounds==="ticks"||k===1)&&ki(y,x,T),Object.keys(y).sort(xi).map(M=>+M)}getLabelForValue(t){const i=this._adapter,s=this.options.time;return s.tooltipFormat?i.format(t,s.tooltipFormat):i.format(t,s.displayFormats.datetime)}format(t,i){const l=this.options.time.displayFormats,a=this._unit,c=i||l[a];return this._adapter.format(t,c)}_tickFormatFunction(t,i,s,l){const a=this.options,c=a.ticks.callback;if(c)return E9(c,[t,i,s],this);const f=a.time.displayFormats,h=this._unit,g=this._majorUnit,y=h&&f[h],v=g&&f[g],x=s[i],k=g&&v&&x&&x.major;return this._adapter.format(t,l||(k?v:y))}generateTickLabels(t){let i,s,l;for(i=0,s=t.length;i<s;++i)l=t[i],l.label=this._tickFormatFunction(l.value,i,t)}getDecimalForValue(t){return t===null?NaN:(t-this.min)/(this.max-this.min)}getPixelForValue(t){const i=this._offsets,s=this.getDecimalForValue(t);return this.getPixelForDecimal((i.start+s)*i.factor)}getValueForPixel(t){const i=this._offsets,s=this.getDecimalForPixel(t)/i.factor-i.end;return this.min+s*(this.max-this.min)}_getLabelSize(t){const i=this.options.ticks,s=this.ctx.measureText(t).width,l=q1(this.isHorizontal()?i.maxRotation:i.minRotation),a=Math.cos(l),c=Math.sin(l),f=this._resolveTickFontOptions(0).size;return{w:s*a+f*c,h:s*c+f*a}}_getLabelCapacity(t){const i=this.options.time,s=i.displayFormats,l=s[i.unit]||s.millisecond,a=this._tickFormatFunction(t,0,Si(this,[t],this._majorUnit),l),c=this._getLabelSize(a),f=Math.floor(this.isHorizontal()?this.width/c.w:this.height/c.h)-1;return f>0?f:1}getDataTimestamps(){let t=this._cache.data||[],i,s;if(t.length)return t;const l=this.getMatchingVisibleMetas();if(this._normalized&&l.length)return this._cache.data=l[0].controller.getAllParsedValues(this);for(i=0,s=l.length;i<s;++i)t=t.concat(l[i].controller.getAllParsedValues(this));return this._cache.data=this.normalize(t)}getLabelTimestamps(){const t=this._cache.labels||[];let i,s;if(t.length)return t;const l=this.getLabels();for(i=0,s=l.length;i<s;++i)t.push(_i(this,l[i]));return this._cache.labels=this._normalized?t:this.normalize(t)}normalize(t){return Ii(t.sort(xi))}}h9(b3,"id","time"),h9(b3,"defaults",{bounds:"data",adapters:{},time:{parser:!1,unit:!1,round:!1,isoWeekday:!1,minUnit:"millisecond",displayFormats:{}},ticks:{source:"auto",callback:!1,major:{enabled:!1}}});function u3(r,t,i){let s=0,l=r.length-1,a,c,f,h;i?(t>=r[s].pos&&t<=r[l].pos&&({lo:s,hi:l}=V4(r,"pos",t)),{pos:a,time:f}=r[s],{pos:c,time:h}=r[l]):(t>=r[s].time&&t<=r[l].time&&({lo:s,hi:l}=V4(r,"time",t)),{time:a,pos:f}=r[s],{time:c,pos:h}=r[l]);const g=c-a;return g?f+(h-f)*(t-a)/g:f}class bi extends b3{constructor(t){super(t),this._table=[],this._minPos=void 0,this._tableRange=void 0}initOffsets(){const t=this._getTimestampsForTable(),i=this._table=this.buildLookupTable(t);this._minPos=u3(i,this.min),this._tableRange=u3(i,this.max)-this._minPos,super.initOffsets(t)}buildLookupTable(t){const{min:i,max:s}=this,l=[],a=[];let c,f,h,g,y;for(c=0,f=t.length;c<f;++c)g=t[c],g>=i&&g<=s&&l.push(g);if(l.length<2)return[{time:i,pos:0},{time:s,pos:1}];for(c=0,f=l.length;c<f;++c)y=l[c+1],h=l[c-1],g=l[c],Math.round((y+h)/2)!==g&&a.push({time:g,pos:c/(f-1)});return a}_generate(){const t=this.min,i=this.max;let s=super.getDataTimestamps();return(!s.includes(t)||!s.length)&&s.splice(0,0,t),(!s.includes(i)||s.length===1)&&s.push(i),s.sort((l,a)=>l-a)}_getTimestampsForTable(){let t=this._cache.all||[];if(t.length)return t;const i=this.getDataTimestamps(),s=this.getLabelTimestamps();return i.length&&s.length?t=this.normalize(i.concat(s)):t=i.length?i:s,t=this._cache.all=t,t}getDecimalForValue(t){return(u3(this._table,t)-this._minPos)/this._tableRange}getValueForPixel(t){const i=this._offsets,s=this.getDecimalForPixel(t)/i.factor-i.end;return u3(this._table,s*this._tableRange+this._minPos,!0)}}h9(bi,"id","timeseries"),h9(bi,"defaults",b3.defaults);const pr="label";function Mi(r,t){typeof r=="function"?r(t):r&&(r.current=t)}function sc(r,t){const i=r.options;i&&t&&Object.assign(i,t)}function gr(r,t){r.labels=t}function mr(r,t){let i=arguments.length>2&&arguments[2]!==void 0?arguments[2]:pr;const s=[];r.datasets=t.map(l=>{const a=r.datasets.find(c=>c[i]===l[i]);return!a||!l.data||s.includes(a)?{...l}:(s.push(a),Object.assign(a,l),a)})}function oc(r){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:pr;const i={labels:[],datasets:[]};return gr(i,r.labels),mr(i,r.datasets,t),i}function lc(r,t){const{height:i=150,width:s=300,redraw:l=!1,datasetIdKey:a,type:c,data:f,options:h,plugins:g=[],fallbackContent:y,updateMode:v,...x}=r,k=H9.useRef(null),T=H9.useRef(null),M=()=>{k.current&&(T.current=new C3(k.current,{type:c,data:oc(f,a),options:h&&{...h},plugins:g}),Mi(t,T.current))},C=()=>{Mi(t,null),T.current&&(T.current.destroy(),T.current=null)};return H9.useEffect(()=>{!l&&T.current&&h&&sc(T.current,h)},[l,h]),H9.useEffect(()=>{!l&&T.current&&gr(T.current.config.data,f.labels)},[l,f.labels]),H9.useEffect(()=>{!l&&T.current&&f.datasets&&mr(T.current.config.data,f.datasets,a)},[l,f.datasets]),H9.useEffect(()=>{T.current&&(l?(C(),setTimeout(M)):T.current.update(v))},[l,h,f.labels,f.datasets,v]),H9.useEffect(()=>{T.current&&(C(),setTimeout(M))},[c]),H9.useEffect(()=>(M(),()=>C()),[]),Ti.createElement("canvas",{ref:k,role:"img",height:i,width:s,...x},y)}const ac=H9.forwardRef(lc);function uc(r,t){return C3.register(t),H9.forwardRef((i,s)=>Ti.createElement(ac,{...i,ref:s,type:r}))}const cc=uc("bar",h3);C3.register(K4,Q4,m3,Vu,Gu,Bu);const fc=({data:r,xmin:t,xmax:i})=>{const s={labels:r?r.labels:null,datasets:[{label:"Frecuency",data:r?r.values:null,backgroundColor:"rgba(75, 192, 192, 0.2)",borderColor:"yellow",borderWidth:1,categoryPercentage:1}]},l={responsive:!0,scales:{x:{min:t,max:i,ticks:{color:"yellow"}},y:{beginAtZero:!0,title:{display:!0,text:"Frequency",color:"yellow"},ticks:{color:"yellow"}}},plugins:{title:{display:!1,text:"Histogram"},legend:{display:!1}}};return q.jsx(cc,{data:s,options:l})},dc=({distributions:r,selectedDistribution:t,handleDistributionSelect:i,parameters:s,increments:l,handleParamChange:a,resample:c})=>q.jsxs("div",{className:"distributionSelector",children:[q.jsx("div",{className:"selectorItem",children:q.jsx("table",{children:q.jsxs("tbody",{children:[q.jsxs("tr",{children:[q.jsx("td",{children:"Distribution"}),q.jsx("td",{children:q.jsx("select",{value:t,onChange:i,children:r.map(f=>q.jsx("option",{value:f.name,children:f.name},f.name))})})]},"distribution"),Object.keys(s).map((f,h)=>q.jsxs("tr",{children:[q.jsx("td",{children:f}),q.jsx("td",{children:q.jsx("input",{type:"number",value:s[f]??defaultValue,step:l[h],onChange:g=>a(f,g.target.value)})})]},f))]})})}),q.jsx("div",{className:"selectorItem",children:q.jsx("button",{id:"resampleButton",onClick:c,children:q.jsx("b",{children:"Sample"})})})]});let hc=Math.random;function $0(){return hc}function F0(r,t){if(t===null)return r();if(typeof t=="number")return Array.from({length:t},()=>r());if(Array.isArray(t)){const i=s=>{const[l,...a]=s;return Array.from({length:l},()=>a.length>0?i(a):r())};return i(t)}else throw new Error("size must be a number, an array, or null")}function yr(r,t=null,i=null){if(t===null&&(t=r,r=0),r>=t)throw new Error("low must be less than high");return F0(()=>Math.floor($0()()*(t-r)+r),i)}function P6(r=0,t=1,i=null){if(r>=t)throw new Error("low must be less than high");return F0(()=>$0()()*(t-r)+r,i)}const t1=[622096057427174e-30,630232463237987e-30,6384736738561162e-31,6468210178957527e-31,6552758405344601e-31,663839503716088e-30,6725133863560783e-31,6812988845492691e-31,6901974117801946e-31,6992103991358987e-31,7083392955213121e-31,7175855678772167e-31,726950701400833e-30,7364361997690278e-31,7460435853642744e-31,7557743995031796e-31,7656302026679585e-31,7756125747404577e-31,7857231152392053e-31,7959634435590867e-31,8063351992141211e-31,8168400420828962e-31,8274796526572087e-31,8382557322934205e-31,849170003467074e-30,8602242100303102e-31,8714201174726226e-31,8827595131844686e-31,894244206724291e-30,905876030088484e-30,9176568379848355e-31,9295885081089926e-31,9416729414244787e-31,953912062445788e-30,9663078195251577e-31,9788621851424571e-31,9915771561988532e-31,10044547543136464e-31,10174970261250164e-31,10307060435939614e-31,1044083904312255e-30,10576327318137562e-31,10713546758896157e-31,10852519129071793e-31,10993266461326927e-31,11135811060578712e-31,11280175507303345e-31,11426382660879915e-31,1157445566297407e-30,11724417940961863e-31,11876293211394562e-31,1203010548350442e-30,12185879062752297e-31,12343638554417474e-31,12503408867230134e-31,12665215217046937e-31,12829083130570544e-31,12995038449112991e-31,13163107332403988e-31,13333316262444326e-31,13505692047405337e-31,13680261825574024e-31,13857053069345783e-31,140360935892639e-29,1421741153810718e-30,14401035415026276e-31,14586994069728484e-31,1477531670671285e-30,1496603288955494e-30,15159172545242631e-31,15354765968563093e-31,15552843826542037e-31,15753437162935217e-31,15956577402772919e-31,1616229635695915e-30,16370626226924002e-31,16581599609331902e-31,16795249500845409e-31,17011609302944935e-31,172307128268064e-29,17452594298234446e-31,17677288362657469e-31,17904830090177105e-31,18135254980682285e-31,18368598969018577e-31,1860489843022393e-30,18844190184820554e-31,19086511504174898e-31,1933190011591521e-30,19580394209418674e-31,19832032441358236e-31,2008685394131789e-30,203448983174731e-29,2060620566233834e-30,2087081655858217e-30,21138772084910882e-31,21410113822021433e-31,2168488385862441e-30,2196312479753803e-30,2224487976185363e-30,2253019240117364e-30,2281910689792321e-30,231116679737356e-29,2340792089591339e-30,23707911483964357e-31,24011686116215586e-31,2431929173650418e-30,2463077586094694e-30,24946186584789864e-31,2526557258933702e-30,25588983148962105e-31,25916468138201102e-31,26248078038928595e-31,2658386394761855e-30,26923877582689307e-31,2726817129193579e-30,27616798060047883e-31,27969811516217285e-31,2832726594183377e-30,28689216278270517e-31,29055718134761953e-31,29426827796372764e-31,2980260223206055e-30,30183099102832767e-31,30568376769998983e-31,30958494303519914e-31,3135351149045364e-30,31753488843500757e-31,3215848760964932e-30,32568569778920757e-31,3298379809321827e-30,3340423605527786e-30,3382994793772442e-30,3426099879223322e-30,3469745445879841e-30,35139381575109506e-31,3558684758603772e-30,3603992075323197e-30,3649867016482758e-30,3696316574526758e-30,3743347826523878e-30,3790967935172457e-30,383918414981702e-29,3888003807477534e-30,39374343338894524e-31,3987483244557224e-30,4038158145818566e-30,4089466735922685e-30,4141416806119487e-30,4194016241762926e-30,4247273023425719e-30,4301195228028547e-30,4355791029980784e-30,4411068702335943e-30,4467036617959417e-30,4523703250710466e-30,45810771766375376e-31,463916707518773e-29,46979817304300234e-31,4757530032292938e-30,4817820977816426e-30,48788636724181875e-31,4940667331174895e-30,5003241280118e-27,50665949575447896e-31,5130737915344422e-30,5195679820339508e-30,5261430455642994e-30,53279997220309885e-31,5395397639331309e-30,5463634347828129e-30,5532720109682902e-30,5602665310371667e-30,5673480460139036e-30,5745176195468891e-30,5817763280572145e-30,589125260889164e-29,5965655204624441e-30,6040982224261762e-30,6117244958146554e-30,6194454832049133e-30,62726234087609834e-31,6351762389706915e-30,64318836165759035e-31,65129990729705134e-31,6595120886075625e-30,66782613283461235e-31,6762432819214263e-30,6847647926816407e-30,6933919369740014e-30,7021260018790318e-30,7109682898777697e-30,7199201190325679e-30,7289828231698849e-30,738157752065344e-29,7474462716307113e-30,7568497641032562e-30,7663696282370348e-30,7760072794966314e-30,785764150252871e-29,7956416899810287e-30,8056413654610611e-30,8157646609803855e-30,8260130785387577e-30,8363881380557116e-30,8468913775801577e-30,8575243535026331e-30,8682886407697078e-30,8791858331011417e-30,8902175432092283e-30,9013854030209647e-30,9126910639024427e-30,9241361968861176e-30,9357224929004044e-30,9474516630021532e-30,9593254386115301e-30,9713455717498508e-30,9835138352798544e-30,9958320231490157e-30,10083019506353707e-30,10209254545963416e-30,10337043937202962e-30,1046640648781046e-29,10597361228952056e-30,10729927417825103e-30,10864124540291155e-30,10999972313538602e-30,11137490688776213e-30,11276699853956987e-30,11417620236533234e-30,11560272506242992e-30,11704677577928362e-30,11850856614385764e-30,11998831029248577e-30,12148622489902992e-30,12300252920436821e-30,12453744504621603e-30,12609119688929245e-30,12766401185582477e-30,12925611975640207e-30,13086775312117827e-30,13249914723143729e-30,13415054015149736e-30,13582217276100877e-30,13751428878758158e-30,1392271348398241e-29,14096096044071427e-30,1427160180613921e-29,14449256315529338e-30,1462908541927153e-29,14811115269572578e-30,1499537232735192e-29,1518188336581235e-29,1537067547405587e-29,15561776060735964e-30,1575521285775606e-29,15951013924004606e-30,16149207649137982e-30,1634982275740078e-29,16552888311494685e-30,16758433716485613e-30,16966488723760756e-30,17177083435024576e-30,17390248306345977e-30,1760601415224509e-29,17824412149832054e-30,18045473842987445e-30,18269231146594278e-30,18495716350814502e-30,1872496212541568e-29,1895700152414556e-29,19191867989156684e-30,19429595355480593e-30,19670217855552186e-30,199137701237856e-28,20160287201201556e-30,2040980454010668e-29,2066235800882558e-29,2091798389648658e-29,2117671891786058e-29,21438600218255407e-30,21703665378464417e-30,21971952419771175e-30,22243499809010422e-30,22518346463685763e-30,2279653175714535e-29,2307809552381522e-29,23363078064491716e-30,23651520151693424e-30,23943463035073025e-30,24238948446890333e-30,24538018607546334e-30,24840716231179458e-30,25147084531324874e-30,25457167226636975e-30,25771008546676595e-30,26088653237762123e-30,2641014656888742e-29,2673553433770519e-29,27064862876577362e-30,27398179058695286e-30,27735530304263765e-30,28076964586759928e-30,2842253043925833e-29,2877227696082959e-29,29126253823006274e-30,29484511276326956e-30,2984710015694828e-29,30214071893335666e-30,3058547851302225e-29,30961372649452365e-30,3134180754889155e-29,3172683707742324e-29,3211651572801485e-29,3251089862767081e-29,32910041544657615e-30,3331400089581773e-29,33722833753955964e-30,3413659785531798e-29,3455535160714336e-29,34979154095308553e-30,3540806509205275e-29,3584214506379068e-29,3628145517901122e-29,3672605731626546e-29,3717601407224305e-29,37631388769937725e-30,38092245466904655e-30,3855864896360975e-29,3903066481187093e-29,3950835932339388e-29,3999179957840246e-29,404810534343656e-28,4097618953481976e-29,41477277318291215e-30,41984387027315975e-30,4249758971756035e-29,4301695726704339e-29,4354256238545987e-29,4407447862360909e-29,4461278038292625e-29,45157542925120554e-30,4570884238191963e-29,4626675576492269e-29,4683136097556207e-29,4740273681517468e-29,4798096299518736e-29,4856612014741174e-29,49158289834455154e-30,4975755456024683e-29,503639977806791e-28,509777039143676e-28,5159875835352986e-29,52227247474984005e-30,5286325865127003e-29,5350688026189258e-29,5415820170468801e-29,54817313407319094e-30,55484306838893444e-30,56159274521712247e-30,5684231004314865e-29,5753350806765616e-29,5823296434890996e-29,5894077574208219e-29,5965704021625315e-29,603818568669572e-28,6111532592886978e-29,618575487886312e-28,6260862799781639e-29,6336866728603775e-29,6413777157420662e-29,6491604698792659e-29,6570360087104365e-29,665005417993379e-28,6730697959437675e-29,6812302533750746e-29,6894879138401159e-29,697843913774117e-28,7062994026393997e-29,7148555430715835e-29,723513511027446e-28,7322744959343646e-29,7411397008414807e-29,7501103425724036e-29,7591876518796954e-29,7683728736009416e-29,7776672668166962e-29,7870721050099549e-29,7965886762275421e-29,8062182832431504e-29,8159622437222867e-29,8258218903888749e-29,8357985711938104e-29,8458936494852895e-29,8561085041810249e-29,8664445299423364e-29,8769031373501627e-29,8874857530829595e-29,8981938200965909e-29,9090287978061455e-29,9199921622697539e-29,9310854063744249e-29,9423100400238794e-29,9536675903284708e-29,9651596017971497e-29,9767876365315356e-29,9885532744220995e-29,10004581133464993e-29,10125037693700428e-29,10246918769483812e-29,10370240891323724e-29,10495020777752033e-29,10621275337417331e-29,107490216712016e-27,10878277074359533e-29,11009059038681311e-29,11141385254678888e-29,1127527361379595e-28,1141074221064205e-28,1154780934525127e-28,11686493525364049e-29,11826813468736485e-29,11968788105471326e-29,1211243658037773e-28,12257778255353206e-29,1240483271179503e-28,12553619753033852e-29,12704159406797915e-29,12856471927699782e-29,13010577799754022e-29,1316649773891834e-28,13324252695666188e-29,13483863857582993e-29,1364535265199492e-28,13808740748621747e-29,13974050062262752e-29,141413027555072e-27,14310521241478823e-29,14481728186605125e-29,14654946513421725e-29,14830199403401797e-29,15007510299821024e-29,15186902910649148e-29,15368401211476585e-29,1555202944846898e-28,15737812141357358e-29,15925774086457277e-29,16115940359722527e-29,16308336319831302e-29,16502987611305245e-29,16699920167662582e-29,16899160214605198e-29,171007342732398e-27,17304669163333878e-29,1751099200660706e-28,1771973023005718e-28,17930911569323017e-29,18144564072082543e-29,18360716101488076e-29,18579396339638232e-29,18800633791087244e-29,19024457786392175e-29,19250897985697993e-29,19479984382361206e-29,19711747306612605e-29,19946217429259105e-29,20183425765425652e-29,20423403678336908e-29,20666182883139684e-29,20911795450766281e-29,2116027381184029e-28,2141165076062124e-28,21665959458996506e-29,21923233440509927e-29,22183506614440194e-29,22446813269916061e-29,22713188080082312e-29,22982666106303933e-29,232552828024215e-27,2353107401904611e-28,23810076007905823e-29,24092325426233235e-29,2437785934120561e-28,24666715234426067e-29,2495893100645985e-28,2525454498141155e-28,2555359591155821e-28,2585612298202546e-28,26162165815520435e-29,26471764477107163e-29,2678495947904171e-28,27101791785649903e-29,27422302818266005e-29,2774653446021525e-28,28074529061858223e-29,2840632944567986e-28,2874197891144196e-28,29081521241382406e-29,29425000705475236e-29,2977246206674401e-28,3012395058663269e-28,30479512030433264e-29,3083919267277128e-28,31203039303149565e-29,31571099231551275e-29,31943420294101723e-29,32320050858791015e-29,3270103983125698e-28,3308643666063034e-28,3347629134544037e-28,33870654439585095e-29,3426957705836334e-28,34673110884571433e-29,3508130817466479e-28,3549422176498366e-28,35911905078046545e-29,3633441212890882e-28,36761797531589297e-29,3719411650556535e-28,37631424882335357e-29,3807377911205232e-28,3852123627022641e-28,38973854064499004e-29,39431690841488086e-29,39894805593705595e-29,4036325796655106e-28,40837108265371603e-29,41316417462605965e-29,41801247204996765e-29,4229165982088412e-28,42787718327569457e-29,4328948643876548e-28,43797028572118007e-29,44310409856811663e-29,4482969614125025e-28,4535495400082557e-28,4588625074576073e-28,4642365442904347e-28,4696723385443298e-28,4751705858456312e-28,4807319894912081e-28,4863572605311775e-28,4920471178524166e-28,4978022882630504e-28,5036235065777136e-28,5095115157038332e-28,5154670667286977e-28,5214909190075309e-28,5275838402524441e-28,5337466066223378e-28,5399800028137431e-28,5462848221526231e-28,5526618666871293e-28,559111947281326e-27,5656358837099244e-28,5722345047539741e-28,5789086482975794e-28,5856591614256305e-28,5924869005225452e-28,5993927313720541e-28,6063775292580278e-28,6134421790663581e-28,6205875753879129e-28,6278146226225564e-28,6351242350842639e-28,6425173371073373e-28,6499948631537216e-28,6575577579214638e-28,6652069764542709e-28,6729434842522488e-28,6807682573837715e-28,6886822825985279e-28,6966865574417526e-28,7047820903696403e-28,7129699008659583e-28,7212510195598972e-28,7296264883451352e-28,7380973605001308e-28,746664700809702e-27,7553295856878322e-28,7640931033017926e-28,7729563536975274e-28,7819204489263677e-28,7909865131730339e-28,8001556828850058e-28,8094291069032092e-28,8188079465940744e-28,8282933759829603e-28,8378865818889816e-28,8475887640612037e-28,8574011353162914e-28,8673249216775568e-28,8773613625154582e-28,8875117106895751e-28,8977772326920163e-28,9081592087923608e-28,9186589331840598e-28,9292777141324265e-28,9400168741239984e-28,9508777500176986e-28,9618616931973158e-28,972970069725719e-27,9842042605005742e-28,9955656614117854e-28,1007055683500435e-27,10186757531194494e-28,10304273120958834e-28,10423118178949625e-28,10543307437856882e-28,10664855790082837e-28,10787778289432414e-28,10912090152822902e-28,11037806762009307e-28,1116494366532895e-27,11293516579463002e-28,11423541391217694e-28,11555034159322012e-28,11688011116245245e-28,11822488670032834e-28,1195848340616113e-27,12096012089411234e-28,12235091665762372e-28,1237573926430436e-27,12517972199170087e-28,12661807971487686e-28,12807264271352857e-28,12954358979821567e-28,13103110170923015e-28,13253536113693443e-28,13405655274230782e-28,135594863177704e-26,13715048110782342e-28,13872359723089627e-28,14031440430008934e-28,14192309714512618e-28,14354987269413523e-28,1451949299957146e-27,14685847024123138e-28,14854069678734063e-28,15024181517874512e-28,15196203317117818e-28,1537015607546277e-27,1554606101767989e-27,15723939596681076e-28,15903813495914258e-28,16085704631782075e-28,16269635156085683e-28,1645562745849213e-27,16643704169030242e-28,16833888160607147e-28,1702620255155585e-27,17220670708203843e-28,17417316247472511e-28,17616163039498375e-28,17817235210286316e-28,18020557144384017e-28,18226153487589826e-28,18434049149682238e-28,1864426930718277e-27,18856839406141617e-28,19071785164957257e-28,19289132577218756e-28,1950890791458332e-27,19731137729676867e-28,19955848859030017e-28,2018306842603855e-27,20412823843958732e-28,20645142818929236e-28,20880053353026596e-28,2111758374734911e-27,21357762605135495e-28,21600618834911345e-28,21846181653670752e-28,22094480590087042e-28,2234554548776051e-27,2259940650849423e-27,22856094135606342e-28,23115639177274565e-28,23378072769915405e-28,2364342638159644e-27,23911731815484497e-28,241830212133278e-26,2445732705897368e-27,24734682181921886e-28,2501511976091415e-27,25298673327559092e-28,2558537676999515e-27,25875264336589347e-28,2616837063967403e-27,26464730659321487e-28,26764379747155927e-28,27067353630204965e-28,27373688414789235e-28,27683420590451552e-28,27996587033925535e-28,2831322501314475e-27,28633372191291666e-28,2895706663088726e-27,29284346797923102e-28,29615251566034222e-28,2994982022071223e-27,30288092463565055e-28,3063010841661542e-27,30975908626645803e-28,31325534069582934e-28,31679026154932925e-28,320364267302526e-26,32397778085674853e-28,3276312295847061e-27,33132504537664854e-28,33505966468691112e-28,33883552858100943e-28,3426530827831156e-27,34651277772411264e-28,3504150685900187e-27,35436041537101546e-28,3583492829108515e-27,36238214095684984e-28,36645946421031205e-28,3705817323775346e-27,3747494302212263e-27,3789630476125421e-27,3832230795835512e-27,387530026380306e-26,3918843935163769e-27,3962866918269641e-27,400737437523534e-26,4052371522490106e-27,4097863631335016e-27,4143856028506042e-27,4190354096742521e-27,4237363275361478e-27,4284889060837479e-27,4332937007388498e-27,4381512727567447e-27,4430621892859689e-27,44802702342864865e-28,4530463543014451e-27,45812076709711525e-28,4632508531466663e-27,4684372099821513e-27,473680441400081e-26,478981157525456e-26,484339974876452e-26,4897575164297437e-27,4952344116864737e-27,500771296738879e-26,5063688143375812e-27,5120276139595494e-27,51774835187671705e-28,52353169122533566e-28,5293783020759139e-27,5352888615039706e-27,5412640536614071e-27,547304569848635e-26,55341110858735145e-28,5595843756941341e-27,5658250843546785e-27,57213395519884025e-28,5785117163763294e-27,5849591036332664e-27,5914768603894059e-27,59806573781618605e-28,604726494915477e-26,6114598985992041e-27,6182667237696669e-27,6251477534007333e-27,6321037786197414e-27,63913559879030935e-28,6462440215958956e-27,6534298631242298e-27,66069394795249835e-28,6680371092334864e-27,6754601887824663e-27,6829640371650217e-27,6905495137856578e-27,69821748697733825e-28,7059688340919289e-27,7138044415914474e-27,7217252051402825e-27,7297320296983032e-27,7378258296148635e-27,7460075287237614e-27,7542780604391117e-27,7626383678521646e-27,7710894038290902e-27,7796321311096944e-27,7882675224071409e-27,7969965605086216e-27,8058202383770321e-27,8147395592536378e-27,8237555367617556e-27,8328691950114424e-27,8420815687052141e-27,8513937032448046e-27,860806654838963e-26,8703214906123131e-27,8799392887152862e-27,889661138435109e-26,8994881403078982e-27,9094214062318405e-27,919462059581482e-26,9296112353231463e-27,9398700801314625e-27,9502397525070435e-27,9607214228953107e-27,9713162738064798e-27,9820254999367299e-27,9928503082905224e-27,1003791918304159e-26,10148515619705038e-27,10260304839649588e-27,10373299417726238e-27,10487512058167474e-27,10602955595883857e-27,10719642997773482e-27,10837587364043997e-27,10956801929548194e-27,11077300065130924e-27,11199095278991338e-27,11322201218056587e-27,11446631669370136e-27,11572400561492115e-27,11699521965914874e-27,11828010098491823e-27,11957879320878887e-27,120891441419921e-25,1222181921947701e-26,1235591936119506e-26,12491459526721649e-27,12628454828860657e-27,1276692053517216e-26,12906872069517166e-27,13048325013614472e-27,13191295108615023e-27,1333579825668953e-26,13481850522633987e-27,1362946813548773e-26,13778667490169488e-27,1392946514912767e-26,1408187784400855e-26,1423592247733816e-26,14391616124222355e-27,14548976034061911e-27,14708019632286056e-27,1486876452210044e-26,15031228486253587e-27,15195429488819463e-27,15361385676998832e-27,15529115382935403e-27,15698637125552e-24,15869969612402262e-27,16043131741542734e-27,16218142603420386e-27,1639502148277975e-26,16573787860588188e-27,16754461415979728e-27,1693706202821733e-26,1712160977867424e-26,17308124952834316e-27,17496628042311852e-27,17687139746890118e-27,1787968097658043e-26,18074272853700213e-27,1827093671497131e-26,18469694113638767e-27,1867056682160906e-26,18873576831609888e-27,19078746359369936e-27,19286097845819746e-27,19495653959314e-24,19707437597874297e-27,19921471891454472e-27,20137780204226705e-27,20356386136889812e-27,2057731352900036e-26,20800586461323957e-27,2102622925821261e-26,2125426649e-20,21484722975425232e-27,21717623784073974e-27,2195299423884865e-26,22190859918456392e-27,22431246659926614e-27,22674180561146965e-27,22919687983428814e-27,23167795554091928e-27,2341853016907933e-26,23671918995591338e-27,23927989474750368e-27,2418676932428556e-26,24448286541248573e-27,24712569404749508e-27,24979646478724866e-27,25249546614725624e-27,25522298954737784e-27,2579793293402479e-26,260764782840006e-25,2635796503512676e-26,26642423519841314e-27,2692988437551081e-26,2722037854741344e-26,27513937291749774e-27,27810592178681237e-27,2811037509539874e-26,2841331824921926e-26,28719454170712433e-27,29028815716856536e-27,2934143607422427e-26,2965734876219928e-26,29976587636222314e-27,3029918689106866e-26,3062518106415631e-26,3095460503888602e-26,312874940480117e-25,31623883677044264e-27,31963809867686355e-27,3230730892130018e-26,326544175024078e-25,33005172642224904e-27,3335961174222749e-26,33717772577751835e-27,3407969330163017e-26,344454124478578e-25,3481496893529882e-26,35188402071420815e-27,3556575155607175e-26,3594705748528685e-26,36332360355135247e-27,36721701065598185e-27,3711512092448973e-26,3751266165140911e-26,37914365381734205e-27,38320274670647635e-27,3873043249720778e-26,39144882268449965e-27,39563667823534576e-27,3998683343792456e-26,40414423827613506e-27,4084648415338112e-26,4128306002510008e-26,4172419750607355e-26,42169943117422166e-27,4262034384250301e-26,4307544713137974e-26,4353530090532446e-26,4399995356137252e-26,4446945397690803e-26,44943851514305487e-27,4542319602560105e-26,4590753785722053e-26,4639692785473988e-26,46891417367701004e-27,4739105825446344e-26,47895902887106614e-27,4840600415637704e-26,4892141547667987e-26,4944219079111954e-26,4996838457658549e-26,50500051848886294e-27,5103724816793128e-26,51580029642960597e-27,5212845293782434e-26,5268257527631001e-26,53242454447520424e-27,538081488113011e-25,54379717303718434e-27,5495721944258945e-26,5554071533306097e-26,56130265673243576e-27,5672593175989528e-26,573277754941595e-25,5793585938735629e-26,585502465668267e-25,5917100078183047e-26,5979818640950386e-26,604318684608623e-25,6107211258686998e-26,6171898508455872e-26,6237255290320775e-26,6303288365057341e-26,6370004559918727e-26,6437410769270426e-26,6505513955231472e-26,6574321148320794e-26,6643839448110733e-26,6714076023885541e-26,6785038115306808e-26,6856733033083979e-26,6929168159652305e-26,7002350949856154e-26,7076288931639315e-26,7150989706740536e-26,7226460951397101e-26,7302710417053435e-26,7379745931077362e-26,7457575397481824e-26,7536206797654412e-26,7615648191092878e-26,7695907716147764e-26,7776993590771387e-26,785891411327444e-25,7941677663089167e-26,802529270153927e-25,8109767772617596e-26,8195111503770014e-26,8281332606687876e-26,8368439878106189e-26,8456442200610323e-26,8545348543449412e-26,8635167963357713e-26,8725909605383039e-26,8817582703723241e-26,8910196582569993e-26,9003760656960603e-26,9098284433637296e-26,9193777511914758e-26,929024958455534e-25,9387710438652366e-26,9486169956521507e-26,9585638116600464e-26,9686124994356502e-26,9787640763202799e-26,9890195695422702e-26,9993800163102673e-26,10098464639073853e-26,10204199697861783e-26,10311016016645413e-26,10418924376224354e-26,10527935661995155e-26,10638060864936643e-26,10749311082603784e-26,10861697520131188e-26,10975231491245303e-26,11089924419286043e-26,11205787838237614e-26,1132283339376895e-25,11441072844283167e-26,11560518061977113e-26,11681181033910143e-26,11803073863082733e-26,11926208769525084e-26,12050598091395182e-26,1217625428608735e-25,12303189931350492e-26,1243141772641647e-25,12560950493139533e-26,12691801177144152e-26,12823982848985775e-26,129575087053201e-24,1309239207008429e-25,13228646395687382e-26,1336628526421316e-25,13505322388633224e-26,13645771614030305e-26,1378764691883387e-25,13930962416065667e-26,14075732354598403e-26,14221971120423254e-26,1436969323793115e-25,14518913371203756e-26,1466964632531815e-25,14821907047661258e-26,14975710629257262e-26,15131072306106565e-26,152880074605378e-24,1544653162257028e-25,15606660471290317e-26,1576840983623861e-25,1593179569881215e-25,16096834193676088e-26,16263541610190458e-26,16431934393848135e-26,16602029147727988e-26,16773842633958033e-26,16947391775194457e-26,17122693656111913e-26,17299765524909329e-26,17478624794826839e-26,1765928904567821e-25,17841776025396186e-26,1802610365159154e-25,18212290013127044e-26,18400353371704327e-26,18590312163465764e-26,18782185000610645e-26,18975990673025517e-26,1917174814992932e-25,19369476581533209e-26,19569195300715204e-26,19770923824710038e-26,19974681856813744e-26,20180489288103712e-26,203883661991741e-24,2059833286188661e-25,20810409741137387e-26,21024617496638735e-26,2124097698471784e-25,21459509260130703e-26,21680235577892898e-26,21903177395125794e-26,22128356372920182e-26,22355794378216548e-26,22585513485699963e-26,22817535979715949e-26,2305188435619827e-25,2328858132461943e-25,23527649809952856e-26,2376911295465803e-25,24012994120677914e-26,242593168914594e-24,2450810507398668e-25,24759382700837674e-26,25013174032252976e-26,2526950355823004e-25,2552839600062854e-25,25789876315301306e-26,26053969694238153e-26,26320701567734347e-26,26590097606572366e-26,26862183724229045e-26,27136986079097007e-26,274145310767295e-24,2769484537210222e-25,2797795587189851e-25,2826388973681097e-25,2855267438386641e-25,2884433748876878e-25,2913890698826675e-25,2943641108253714e-25,2973687823759304e-25,30040337187712224e-26,30346816937886124e-26,30656346766291846e-26,3096895622678475e-25,3128467515141367e-25,31603533652958106e-26,319255621274876e-24,32250791256944224e-26,32579252011747e-23,3291097565341976e-25,33245993737242046e-26,33584338114923063e-26,3392604093729988e-25,3427113465705789e-25,34619652031477e-23,34971626125200377e-26,3532709031302872e-25,3568607828273767e-25,36048624037921673e-26,3641476190086071e-25,36784526515414813e-26,37157952849940674e-26,37535076200237656e-26,3791593219251501e-25,3830055678638948e-25,38688986277906355e-26,3908125730258951e-25,3947740683851253e-25,39877472209406e-23,4028149108778079e-25,40689501498090064e-26,4110154181990786e-25,4151765079114622e-25,4193786751128919e-25,4236223144466685e-25,4279078242374567e-25,432235606524604e-24,4366060670956182e-25,4410196155200584e-25,44547666518361825e-26,44997763332260075e-26,4545229410585857e-25,4591130134335287e-25,4637482794450232e-25,4684291720820092e-25,4731561283606579e-25,4779295893606996e-25,4827500002619399e-25,487617810381215e-24,4925334732095582e-25,4974974464497697e-25,5025101920542651e-25,507572176263278e-24,5126838696433849e-25,5178457471263523e-25,5230582880483475e-25,5283219761894565e-25,5336372998135718e-25,5390047517086168e-25,5444248292271025e-25,5498980343270568e-25,5554248736133013e-25,5610058583790768e-25,5666415046480378e-25,5723323332166016e-25,5780788696966756e-25,5838816445587411e-25,5897411931753061e-25,5956580558647511e-25,6016327779355415e-25,6076659097308099e-25,6137580066733489e-25,6199096293109568e-25,626121343362231e-24,632393719762661e-24,6387273347112334e-25,6451227697173351e-25,6515806116481489e-25,6581014527763555e-25,6646858908283517e-25,671334529032801e-24,6780479761696737e-25,6848268466195998e-25,6916717604137797e-25,6985833432842151e-25,7055622267144536e-25,7126090479906581e-25,7197244502532545e-25,7269090825488987e-25,7341635998829865e-25,7414886632725035e-25,7488849397994544e-25,7563531026646345e-25,7638938312419629e-25,7715078111331628e-25,7791957342230332e-25,7869582987350982e-25,7947962092878133e-25,8027101769511289e-25,8107009193036855e-25,8187691604904061e-25,8269156312805816e-25,8351410691264751e-25,8434462182224329e-25,8518318295644646e-25,8602986610103706e-25,8688474773403473e-25,8774790503181394e-25,8861941587526724e-25,8949935885602556e-25,9038781328272805e-25,912848591873462e-24,9219057733156174e-25,931050492131999e-24,940283570727139e-24,9496058389972893e-25,959018134396381e-24,9685213020025553e-25,978116194585275e-24,9878036726729629e-25,9975846046212662e-25,10074598666818564e-25,10174303430718286e-25,10274969260436933e-25,10376605159559681e-25,10479220213443002e-25,10582823589933048e-25,10687424540089066e-25,10793032398913767e-25,10899656586088801e-25,11007306606717598e-25,1111599205207376e-24,11225722600356287e-25,11336508017450036e-25,11448358157694389e-25,1156128296465662e-24,11675292471913384e-25,11790396803836953e-25,11906606176389939e-25,1202393089792551e-24,12142381369994953e-25,1226196808816112e-24,12382701642820115e-25,12504592720028622e-25,1262765210233917e-24,12751890669641229e-25,12877319400010634e-25,13003949370565367e-25,13131791758328976e-25,13260857841100542e-25,13391158998332443e-25,13522706712015957e-25,1365551256757308e-24,13789588254756915e-25,13924945568558477e-25,14061596410123008e-25,14199552787671357e-25,14338826817431363e-25,1447943072457524e-24,14621376844166772e-25,14764677622114114e-25,14909345616132636e-25,15055393496713797e-25,15202834048104702e-25,15351680169292988e-25,15501944875001919e-25,1565364129669263e-24,15806782683576026e-25,1596138240363142e-24,16117453944635089e-25,16275010915196053e-25,16434067045802672e-25,16594636189874933e-25,16756732324828167e-25,16920369553143572e-25,17085562103449852e-25,1725232433161124e-24,17420670721826742e-25,17590615887737107e-25,17762174573541898e-25,1793536165512521e-24,18110192141190952e-25,18286681174407772e-25,18464844032562777e-25,1864469612972576e-24,18826253017422242e-25,19009530385816595e-25,1919454406490511e-24,1938131002571834e-24,19569844381534172e-25,1976016338910029e-24,1995228344986699e-24,2014622111123013e-24,20341993067784635e-25,2053961616258754e-24,2073910738843254e-24,20940483889134163e-25,21143762960822898e-25,2134896205325106e-24,21556098771109473e-25,2176519087535451e-24,21976256284545935e-25,22189313076197644e-25,22404379488136807e-25,2262147391987576e-24,22840614933994566e-25,23061821257536466e-25,2328511178341199e-24,23510505571817143e-25,23738021851661487e-25,23967680022009865e-25,24199499653533644e-25,2443350048997569e-24,2466970244962564e-24,2490812562681032e-24,2514879029339203e-24,2539171690028299e-24,2563692607896918e-24,25884438643049887e-25,2613427558978646e-24,26386458101665817e-25,26641007547975633e-25,2689794548639449e-24,2715729366459163e-24,27419074021842694e-25,27683308690656636e-25,27950019998418313e-25,28219230469041465e-25,284909628246374e-23,2876523998719634e-24,2904208508028301e-24,29321521430745026e-25,29603572570436603e-25,29888262237955034e-25,30175614380391848e-25,3046565315509858e-24,30758402931465713e-25,3105388829271753e-24,3135213403772041e-24,3165316518280639e-24,3195700696361114e-24,32263684836927648e-25,32573224482573398e-25,32885651805274612e-25,3320099293656418e-24,33519274236695644e-25,33840522296573027e-25,34164763939695083e-25,3449202622411684e-24,34822336444425744e-25,35155722133734016e-25,35492211065689103e-25,35831831256495185e-25,36174610966957873e-25,3652057870454001e-24,36869763225437563e-25,37222193536668087e-25,3757789889818187e-24,37936908824984214e-25,3829925308928025e-24,3866496172263082e-24,3903406501813209e-24,3940659353260857e-24,3978257808882574e-24,4016204977771789e-24,40545039960638044e-25,4093158027162175e-24,4132170261967349e-24,4171543919106474e-24,4211282245165876e-24,4251388514924748e-24,4291866031591157e-24,43327181270394185e-25,4373948162050035e-24,4415559526551097e-24,4457555639861711e-24,4499939950937307e-24,4542715938617315e-24,4585887111874246e-24,46294570100650945e-25,467342920318476e-23,4717807292121384e-24,4762594908913739e-24,48077957170108e-22,48534134115331526e-25,4899451719536763e-24,4945914400278616e-24,4992805245484627e-24,50401280796195835e-25,5087886760159368e-24,5136085177865146e-24,5184727257059979e-24,5233816955907444e-24,5283358266692551e-24,53333552161049505e-25,5383811865524214e-24,5434732311307602e-24,548612068507997e-23,5537981154025996e-24,559031792118483e-23,56431352257468714e-25,5696437343353127e-24,5750228586396966e-24,5804513304327762e-24,585929588395771e-23,5914580749770535e-24,5970372364232888e-24,602667522810785e-23,60834938807715126e-25,6140832900531498e-24,619869690494855e-23,6257090551159763e-24,6316018536205547e-24,6375485597358224e-24,6435496512453817e-24,649605610022587e-23,6557169220642509e-24,6618840775245792e-24,6681075707494017e-24,6743879003106079e-24,6807255690409452e-24,6871210840690289e-24,6935749568546531e-24,7000877032243415e-24,7066598434072452e-24,7132919020712545e-24,7199844083594595e-24,7267378959268191e-24,7335529029771718e-24,7404299723005647e-24,7473696513107799e-24,7543724920832581e-24,7614390513932177e-24,768569890754204e-23,7757655764567993e-24,7830266796077215e-24,7903537761692152e-24,7977474469987353e-24,8052082778889654e-24,8127368596080971e-24,8203337879404959e-24,8279996637276316e-24,8357350929093586e-24,8435406865654766e-24,8514170609576739e-24,859364837571751e-23,8673846431602086e-24,875477109785124e-23,8836428748613917e-24,8918825812003245e-24,9001968770535279e-24,9085864161571726e-24,9170518577765812e-24,925593866751195e-23,9342131135398325e-24,9429102742663603e-24,9516860307656817e-24,9605410706301067e-24,9694760872560515e-24,9784917798911113e-24,9875888536815367e-24,9967680197200105e-24,10060299950938556e-24,10153755029335551e-24,10248052724617294e-24,10343200390424105e-24,1043920544230747e-23,10536075358230618e-24,10633817679073438e-24,10732440009140856e-24,10831950016675152e-24,1093235543437236e-23,11033664059902981e-24,11135883756436171e-24,11239022453167995e-24,11343088145854123e-24,11448088897346581e-24,115540328381344e-22,11660928166888362e-24,11768783151010175e-24,1187760612718607e-23,11987405501944227e-24,12098189752216411e-24,12209967425904323e-24,1232274714245045e-23,12436537593412586e-24,12551347543043171e-24,12667185828873254e-24,12784061362300713e-24,12901983129183001e-24,13020960190434257e-24,13141001682627442e-24,13262116818600702e-24,13384314888068602e-24,1350760525823764e-23,1363199737442706e-23,13757500760694086e-24,13884125020463691e-24,14011879837163752e-24,1414077497486433e-23,1427082027892286e-23,14402025676633055e-24,1453440117787962e-23,14667956875797508e-24,14802702947436735e-24,1493864965443144e-23,1507580734367485e-23,15214186447998604e-24,1535379748685826e-23,15494651067023092e-24,15636757883271176e-24,15780128719090418e-24,159247744473846e-22,1607070603118455e-23,16217934524364685e-24,163664710723653e-22,16516326912920575e-24,16667513376791414e-24,16820041888503913e-24,16973923967093964e-24,1712917122685742e-23,17285795378105414e-24,17443808227925577e-24,17603221680949185e-24,17764047740124526e-24,1792629850749519e-23,1808998618498436e-23,1825512307518615e-23,18421721582161693e-24,1858979421224132e-23,1875935357483348e-23,1893041238323958e-23,19102983455474597e-24,1927707971509369e-23,19452714192025642e-24,19629900023412718e-24,19808650454456082e-24,19988978839267572e-24,20170898641728936e-24,20354423436356346e-24,20539566909172367e-24,2072634285858322e-23,20914765196264066e-24,2110484794804999e-23,21296605254834235e-24,214900513734721e-22,21685200677693203e-24,2188206765901949e-23,22080666927690174e-24,2228101321359403e-23,22483121367207952e-24,22687006360543967e-24,2289268328810133e-23,2310016736782738e-23,23309473942084462e-24,23520618478625287e-24,23733616571574087e-24,23948483942416337e-24,24165236440994718e-24,2438389004651408e-23,24604460868552412e-24,24826965148079508e-24,25051419258483984e-24,2527783970660777e-23,25506243133787972e-24,25736646316905814e-24,25969066169444736e-24,26203519742556035e-24,2644002422613175e-23,26678596949885435e-24,2691925538444184e-23,2716201714243455e-23,27406899979611076e-24,27653921795945987e-24,27903100636763553e-24,28154454693867524e-24,2840800230668008e-23,28663761963388005e-24,28921752302098757e-24,29181992112004358e-24,29444500334554075e-24,29709296064634947e-24,29976398551762606e-24,302458272012795e-22,3051760157556287e-23,3079174139524089e-23,3106826654041752e-23,3134719705190865e-23,3162855313248387e-23,3191235514812026e-23,3219862362926341e-23,3248737927209992e-23,3277864293983657e-23,33072435663991195e-24,3336877864569121e-23,33667693256983654e-24,3396920104215321e-23,34273323719049835e-24,3458008318042754e-23,34889501495292073e-24,35201600910258535e-24,35516403850918206e-24,3583393292321724e-23,361542109148438e-22,3647726079662578e-23,3680310572393859e-23,37131769038124596e-24,37463274267920595e-24,37797645130897515e-24,3813490553490947e-23,3847507957955498e-23,388181915576471e-22,3916426595669455e-23,3951332746039454e-23,39865400950136585e-24,4022051150651595e-23,4057868441085838e-23,4093994514675692e-23,4130431940161994e-23,4167183306822908e-23,4204251224630867e-23,4241638324410791e-23,4279347257999424e-23,4317380698405692e-23,43557413399722643e-24,4394431898538453e-23,4433455111604081e-23,44728137384947155e-24,451251056052783e-22,4552548381180537e-23,45929300262582474e-24,4633658344064691e-23,46747362055730266e-24,4716166504598366e-23,47579521579714335e-24,4800096105713534e-23,4842601311212669e-23,4885470761401049e-23,4928707466933911e-23,4972314462369416e-23,5016294806350134e-23,50606515817854865e-24,51053878960359546e-24,51505068810981086e-24,5196011693791391e-23,5241905515945899e-23,52881915545918716e-24,5334873042150232e-23,53819532366245987e-24,5429435421794667e-23,547732290741116e-22,55256190293918814e-24,55743271500192684e-24,5623450658139442e-23,567299296936272e-22,5722957526265433e-23,5773347798593118e-23,5824167283465353e-23,5875419505582098e-23,5927108017431285e-23,597923639949792e-22,6031808260474845e-23,6084827237474965e-23,6138296996244903e-23,6192221231380067e-23,6246603666541577e-23,630144805467446e-22,6356758178227593e-23,6412537849374901e-23,6468790910238552e-23,6525521233113365e-23,6582732720693147e-23,6640429306298207e-23,6698614954104922e-23,6757293659376782e-23,6816469448696847e-23,6876146380202212e-23,6936328543819865e-23,6997020061504449e-23,7058225087477343e-23,71199478084679e-21,7182192443955992e-23,7244963246416641e-23,7308264501565841e-23,737210052860875e-22,7436475680489272e-23,7501394344141307e-23,7566860940742139e-23,7632879925967142e-23,7699455790246866e-23,776659305902535e-22,7834296293020619e-23,7902570088486801e-23,797141907747843e-22,8040847928116096e-23,8110861344854459e-23,8181464068751658e-23,8252660877741273e-23,8324456586905489e-23,8396856048750574e-23,8469864153484121e-23,8543485829294595e-23,8617726042632368e-23,8692589798492814e-23,8768082140701618e-23,884420815220209e-22,892097295534415e-22,8998381712175566e-23,9076439624735137e-23,915515193534827e-22,923452392692411e-22,93145609232549e-21,939526828931762e-22,9476651431577688e-23,9558715798294598e-23,9641466879829697e-23,9724910208956365e-23,9809051361172069e-23,9893895955012934e-23,9979449652369804e-23,10065718158807502e-23,10152707223885367e-23,10240422641480798e-23,10328870250114204e-23,10418055933277108e-23,10507985619761917e-23,10598665283994151e-23,10690100946366964e-23,10782298673577987e-23,10875264578968697e-23,10969004822865702e-23,11063525612924802e-23,11158833204477065e-23,11254933900877869e-23,11351834053857538e-23,114495400638752e-21,11548058380474345e-23,11647395502641669e-23,1174755797916772e-22,11848552409010047e-23,11950385441659305e-23,120530637775077e-21,12156594168219765e-23,12260983417105694e-23,12366238379497488e-23,12472365963127728e-23,1257937312851071e-22,12687266889325965e-23,12796054312805042e-23,1290574252012069e-22,13016338686778499e-23,1312785004301122e-22,13240283874176122e-23,1335364752115516e-22,13467948380756967e-23,1358319390612257e-22,1369939160713381e-22,13816549050824004e-23,13934673861791513e-23,14053773722616588e-23,14173856374280906e-23,14294929616589694e-23,14417001308596664e-23,14540079369032466e-23,1466417177673544e-22,14789286571085795e-23,14915431852441914e-23,150426157825808e-21,15170846585140564e-23,1530013254606652e-22,15430482014059592e-23,1556190340102881e-22,1569440518254578e-22,1582799589830328e-22,15962684152575926e-23,1609847861468462e-22,16235388019464342e-23,16373421167734374e-23,16512586926772172e-23,16652894230790378e-23,167943520814173e-21,16936969548180054e-23,17080755768991462e-23,17225719950639903e-23,1737187136928307e-22,17519219370944328e-23,17667773372012663e-23,17817542859746047e-23,1796853739277862e-22,1812076660163061e-22,1827424018922178e-22,1842896793138853e-22,18584959677404923e-23,18742225350506443e-23,18900774948417265e-23,1906061854388161e-22,1922176628519871e-22,19384228396760882e-23,1954801517959509e-22,19713137011908657e-23,19879604349638812e-23,2004742772700512e-22,20216617757065856e-23,20387185132278724e-23,20559140625064602e-23,2073249508837549e-22,20907259456265724e-23,21083444744467803e-23,2126106205097127e-22,21440122556606228e-23,21620637525629608e-23,2180261830631679e-22,21986076331555956e-23,22171023119447276e-23,22357470273905262e-23,22545429485265538e-23,2273491253089625e-22,22925931275812214e-23,23118497673294357e-23,23312623765512237e-23,23508321684152126e-23,23705603651047515e-23,23904481978815083e-23,24104969071494053e-23,243070774251909e-21,2451081962872711e-22,24716208364291445e-23,2492325640809727e-22,2513197663104373e-22,2534238199938138e-22,25554485575381253e-23,25768300518010727e-23,25983840083611146e-23,2620111762658166e-22,2642014660006664e-22,266409405566487e-21,2686351314904524e-22,27087878130809455e-23,27314049357036823e-23,2754204078507633e-22,277718664752454e-21,28003540591549483e-23,2823707740240772e-22,28472491281382396e-23,28709796707913215e-23,28949008268056023e-23,2919014065522739e-22,29433208670953537e-23,2967822722562415e-22,2992521133925053e-22,30174176142229657e-23,3042513687611337e-22,3067810889438162e-22,3093310766322071e-22,3119014876230825e-22,3144924788560115e-22,3171042084213062e-22,3197368355680039e-22,3223905207119211e-22,32506542544374517e-23,32776171253719034e-23,3304795459571896e-22,3332190908681629e-22,3359805136423221e-22,3387639818680318e-22,3415696643582334e-22,34439773115890943e-23,3472483535576236e-22,35012170409209144e-23,3530179565588266e-22,3559372860218293e-22,35887986882134497e-23,36184588258266535e-23,36483550622499464e-23,36784891997036677e-23,37088630535263527e-23,3739478452265026e-22,377033723776614e-21,38014412652671214e-23,3832792403488593e-22,3864392534727022e-22,3896243554947994e-22,3928347373880202e-22,39607059151099984e-23,39933211161765187e-23,4026194928667327e-22,4059329318314846e-22,40927262650934104e-23,41263877633167997e-23,41603158217363717e-23,41945124636400874e-23,4228979726951905e-22,4263719664331962e-22,429873434327724e-21,4334025846223091e-22,43695962706452415e-23,44054477291625677e-23,44415823496403337e-23,4478002275294363e-22,4514709664795639e-22,4551706692375759e-22,4588995547932813e-22,4626578437138259e-22,4664457581544234e-22,4702635218691597e-22,47411136022187563e-23,4779895001971031e-22,4818981704110934e-22,4858376011228845e-22,4898080242454686e-22,4938096733570142e-22,4978427837121665e-22,5019075922534025e-22,5060043376224888e-22,5101332601719855e-22,5142946019768344e-22,518488606846015e-21,5227155203342755e-22,5269755897539556e-22,5312690641868453e-22,5355961944961583e-22,5399572333385508e-22,5443524351762484e-22,5487820562892092e-22,5532463547873971e-22,557745590623114e-21,5622800256034235e-22,5668499234026397e-22,571455549574896e-21,5760971715667959e-22,5807750587301582e-22,585489482334817e-21,5902407155815069e-22,5950290336148403e-22,599854713536371e-21,6047180344177179e-22,6096192773137809e-22,6145587252760427e-22,6195366633659607e-22,6245533786684283e-22,629609160305315e-21,6347042994491192e-22,639839089336676e-21,64501382528298e-20,6502288046950516e-22,6554843270859382e-22,6607806940887702e-22,6661182094709256e-22,6714971791482483e-22,6769179111994036e-22,6823807158802789e-22,6878859056385107e-22,6934337951280654e-22,699024701223932e-21,7046589430369167e-22,7103368419284974e-22,7160587215258025e-22,7218249077366482e-22,727635728764717e-21,733491515124776e-21,7393925996580292e-22,7453393175475362e-22,7513320063337637e-22,7573710059301909e-22,7634566586390285e-22,7695893091670427e-22,7757693046414772e-22,7819969946260569e-22,7882727311370912e-22,7945968686596948e-22,8009697641641051e-22,8073917771220841e-22,8138632695234204e-22,8203846058925484e-22,8269561533052768e-22,8335782814055921e-22,8402513624225746e-22,8469757711874204e-22,8537518851505937e-22,8605800843990398e-22,8674607516735115e-22,8743942723860376e-22,8813810346374749e-22,8884214292351358e-22,8955158497105734e-22,9026646923374683e-22,9098683561495994e-22,9171272429589202e-22,9244417573737798e-22,9318123068172449e-22,9392393015455113e-22,9467231546664296e-22,954264282158179e-21,9618631028880107e-22,9695200386311508e-22,9772355140897487e-22,985009956912026e-21,992843797711472e-21,10007374700862049e-22,10086914106383947e-22,10167060589938681e-22,10247818578217847e-22,10329192528544562e-22,10411186929072673e-22,1049380629898721e-21,10577055188706423e-22,10660938180084297e-22,10745459886615052e-22,1083062495363816e-21,10916438058545493e-22,1100290391098864e-21,11090027253088427e-22,11177812859644962e-22,11266265538349587e-22,11355390129997672e-22,11445191508702607e-22,11535674582111456e-22,11626844291621819e-22,1171870561259973e-21,1181126355459898e-21,11904523161581833e-22,11998489512141178e-22,1209316771972376e-21,12188562932854711e-22,12284680335363573e-22,123815251466119e-20,12479102621721824e-22,12577418051805861e-22,1267647676419861e-21,12776284122689696e-22,12876845527757774e-22,12978166416805956e-22,1308025226439918e-21,13183108582502298e-22,13286740920720276e-22,1339115486653883e-21,13496356045567708e-22,13602350121784407e-22,1370914279778004e-21,13816739815005912e-22,13925146954022365e-22,1403437003474869e-21,1414441491671432e-21,14255287499311945e-22,14366993722051645e-22,14479539564817242e-22,14592931048123227e-22,1470717423337401e-21,14822275223123973e-22,1493824016134014e-21,15055075233664905e-22,15172786667681718e-22,15291380733181227e-22,1541086374242991e-21,15531242050439695e-22,15652522055238954e-22,15774710198146123e-22,158978129640437e-20,16021836881654569e-22,1614678852381971e-21,16272674507777844e-22,16399501495446133e-22,16527276193703008e-22,1665600535467239e-21,16785695776009826e-22,16916354301190126e-22,17047987819796462e-22,17180603267811397e-22,17314207627909964e-22,17448807929753845e-22,17584411250287243e-22,17721024714034898e-22,17858655493401964e-22,17997310808975028e-22,18136997929824957e-22,18277724173811997e-22,18419496907892508e-22,18562323548427067e-22,18706211561490535e-22,18851168463184068e-22,18997201819949154e-22,19144319248882945e-22,19292528418055303e-22,19441837046828556e-22,19592252906178227e-22,19743783819016305e-22,1989643766051524e-21,2005022235843542e-21,20205145893453174e-22,20361216299491532e-22,20518441664052052e-22,20676830128549416e-22,20836389888647544e-22,2099712919459745e-21,21159056351577397e-22,21322179720034547e-22,2148650771602954e-21,21652048811581714e-22,2181881153501716e-21,21986804471318467e-22,2215603626247702e-21,2232651560784622e-21,22498251264497897e-22,2267125204757959e-21,2284552683067514e-21,2302108454616661e-21,231979341855977e-20,2337608480004027e-21,2355554550046301e-21,2373632545810118e-21,23918433904828932e-22,24101880133533998e-22,2428667349849472e-21,24472823415758465e-22,24660339363522218e-22,2484923088251612e-21,25039507576388886e-22,25231179112094872e-22,2542425522028357e-21,2561874569569189e-21,25814660397537784e-22,26012009249917046e-22,26210802242200846e-22,2641104942943762e-21,26612760932755087e-22,2681594693976643e-21,27020617704976873e-22,27226783550194192e-22,2743445486494059e-21,2764364210686746e-21,27854355802171762e-22,2806660654601498e-21,282804050029458e-20,28495761907322117e-22,2871268806373865e-21,28931194347454913e-22,2915129170482668e-21,29372991153738516e-22,2959630378404048e-21,29821240757985805e-22,30047813310672054e-22,30276032750483835e-22,30505910459538363e-22,3073745789413423e-21,3097068658520123e-21,3120560813875398e-21,31442234236346884e-22,3168057663553339e-21,31920647170325453e-22,32162457751657647e-22,32406020367852285e-22,3265134708508854e-21,32898450047873243e-22,3314734147951381e-21,3339803368259495e-21,3365053903945795e-21,3390487001268162e-21,34161039145566347e-22,3441905906262078e-21,34678942470052404e-22,34940702156258656e-22,3520435099232194e-21,35469901932507522e-22,3573736801476396e-21,36006762361226507e-22,36278098178721828e-22,365513887592776e-20,36826647480634076e-22,3710388780675812e-21,37383123288359653e-22,37664367563412285e-22,37947634357675958e-22,3823293748522266e-21,3852029084896394e-21,3880970844118372e-21,3910120434407124e-21,3939479273025953e-21,39690487863363985e-22,3998830409852672e-21,4028825588296174e-21,4059035775650463e-21,4089462435216382e-21,4120107039667557e-21,415097107110627e-20,4182056021119465e-21,4213363390835225e-21,4244894690979381e-21,4276651441932677e-21,4308635173787967e-21,4340847426407912e-21,43732897494828445e-22,4405963702589184e-21,44388708552478925e-22,4472012786983349e-21,4505391087382592e-21,4539007356154908e-21,4572863203191607e-21,4606960248626172e-21,4641300122894776e-21,46758844667971425e-22,47107149315576786e-22,4745793178886853e-21,4781120881043064e-21,4816699720894837e-21,485253139198323e-20,48886175985845575e-22,4924960055773623e-21,4961560489487208e-21,4998420636587855e-21,503554224492793e-20,5072927073414269e-21,5110576892072964e-21,51484934821144585e-22,5186678635999181e-21,52251341575034055e-22,5263861861785529e-21,53028635754525e-19,53421411366268656e-22,538169639501413e-20,5421531211970292e-21,5461647460569827e-21,5502047025674169e-21,5542731804000365e-21,558370370419022e-20,5624964646879661e-21,5666516564768643e-21,5708361402691322e-21,5750501117686668e-21,5792937679069253e-21,5835673068500703e-21,5878709280061384e-21,5922048320322332e-21,59656922084178625e-22,6009642976118203e-21,60539026679029145e-22,6098473341034294e-21,6143357065631469e-21,618855592474462e-20,6234072014429948e-21,6279907443824612e-21,6326064335222368e-21,6372544824149419e-21,6419351059440866e-21,6466485203317378e-21,6513949431462211e-21,6561745933098854e-21,6609876911068948e-21,6658344581910668e-21,6707151175937273e-21,6756298937316405e-21,68057901241497346e-22,6855627008552791e-21,6905811876735345e-21,6956347029082279e-21,7007234780234882e-21,7058477459172399e-21,711007740929406e-20,7162036988501672e-21,7214358569282491e-21,7267044538792657e-21,73200972989407755e-22,7373519266472318e-21,7427312873054163e-21,748148056535977e-20,7536024805154531e-21,75909480693819215e-22,764625285024971e-20,7701941655317028e-21,7758017007581371e-21,7814481445566556e-21,7871337523410869e-21,792858781095561e-20,7986234893834263e-21,8044281373561935e-21,8102729867625552e-21,8161583009574119e-21,822084344910977e-20,8280513852179035e-21,8340596901064845e-21,8401095294478724e-21,846201174765365e-20,8523348992437184e-21,8585109777385456e-21,8647296867857171e-21,870991304610822e-20,8772961111387178e-21,8836443880030596e-21,890036418555937e-20,8964724878775173e-21,9029528827857806e-21,909477891846256e-20,9160478053818447e-21,922662915482664e-20,9293235160159771e-21,936029902636142e-20,9427823727946037e-21,9495812257499694e-21,956426762578123e-20,9633192861823755e-21,9702591013036682e-21,9772465145308403e-21,9842818343109592e-21,9913653709596701e-21,998497436671603e-20,10056783455308519e-21,10129084135215092e-21,10201879585382304e-21,10275173003968421e-21,10348967608450458e-21,10423266635731396e-21,10498073342248194e-21,10573391004079866e-21,10649222917056732e-21,10725572396869764e-21,10802442779180685e-21,10879837419732339e-21,1095775969446005e-20,1103621299960315e-20,11115200751817245e-21,11194726388286977e-21,11274793366839261e-21,11355405166057418e-21,11436565285395364e-21,11518277245292796e-21,11600544587290605e-21,11683370874147272e-21,11766759689955409e-21,11850714640259152e-21,11935239352171809e-21,12020337474494696e-21,12106012677835956e-21,12192268654730067e-21,12279109119758133e-21,12366537809668871e-21,12454558483499833e-21,1254317492269918e-20,12632390931248512e-21,1272221033578608e-20,12812636985730434e-21,12903674753404687e-21,12995327534161605e-21,13087599246509316e-21,13180493832237441e-21,13274015256543631e-21,13368167508161294e-21,13462954599487637e-21,13558380566712251e-21,13654449469946224e-21,13751165393352364e-21,13848532445275519e-21,13946554758373899e-21,14045236489750704e-21,14144581821086708e-21,1424459495877321e-20,1434528013404607e-20,14446641603119478e-21,14548683647321534e-21,14651410573229661e-21,14754826712806923e-21,14858936423538975e-21,14963744088571668e-21,15069254116849561e-21,15175470943254369e-21,15282399028745047e-21,15390042860497832e-21,1549840695204733e-20,15607495843427828e-21,15717314101315953e-21,15827866319173356e-21,15939157117390625e-21,16051191143431367e-21,1616397307197721e-20,16277507605073873e-21,1639179947227715e-20,16506853430800233e-21,1662267426566124e-20,1673926678983224e-20,16856635844387836e-21,1697478629865545e-20,17093723050365624e-21,17213451025803727e-21,17333975179961788e-21,17455300496691042e-21,17577431988855536e-21,17700374698486556e-21,17824133696937325e-21,17948714085038504e-21,18074120993254675e-21,18200359581841677e-21,18327435041004214e-21,184553525910543e-19,1858411748257071e-20,18713734996559307e-21,1884421044461362e-20,18975549169076144e-21,19107756543200982e-21,1924083797131701e-20,19374798888991633e-21,19509644763194904e-21,1964538109246558e-20,1978201340707679e-20,1991954726920333e-20,2005798827308876e-20,20197342045214384e-21,2033761424446811e-20,2047881056231493e-20,20620936722967025e-21,20763998483555955e-21,20908001634304797e-21,21052951998701307e-21,2119885543367199e-20,21345717829756465e-21,2149354511128383e-20,2164234323654827e-20,2179211819798676e-20,21942876022356507e-21,22094622770914603e-21,22247364539596814e-21,2240110745919863e-20,22555857695556064e-21,22711621449728313e-21,22868404958180394e-21,23026214492966753e-21,23185056361916022e-21,2334493690881682e-20,23505862513603785e-21,23667839592544298e-21,2383087459842706e-20,23994974020750866e-21,2416014438591432e-20,24326392257405977e-21,24493724235996052e-21,24662146959928996e-21,2483166710511644e-20,2500229138533089e-20,25174026552400974e-21,25346879396407725e-21,2552085674588004e-20,256959654679931e-19,25872212468766806e-21,26049604693265045e-21,2622814912579548e-20,2640785279011092e-20,26588722749611885e-21,26770766107548934e-21,2695399000722644e-20,27138401632207713e-21,27324008206520493e-21,2751081699486371e-20,27698835302814467e-21,2788807047703715e-20,2807852990549223e-20,28270221017647098e-21,284631512846866e-19,28657328219725707e-21,28852759378022412e-21,2904945235719214e-20,29247414797421837e-21,29446654381686884e-21,2964717883596754e-20,29848995929466778e-21,30052113474829284e-21,30256539328360746e-21,30462281390249454e-21,3066934760478717e-20,3087774596059245e-20,3108748449083353e-20,3129857127345408e-20,3151101443139781e-20,3172482213283566e-20,31940002591393065e-21,3215656406637918e-20,32374514863015386e-21,3259386333266714e-20,3281461787307498e-20,3303678692858664e-20,3326037899039187e-20,3348540259675589e-20,3371186633325606e-20,3393977883301759e-20,341691487769524e-19,34399984893996525e-21,3463229596135137e-20,3486609080472296e-20,351013782985654e-19,3533816736632217e-20,35576466980671694e-21,35816286163770744e-21,3605763398750199e-20,3630051957371971e-20,3654495209449929e-20,3679094077238512e-20,3703849488064242e-20,3728762374350691e-20,3753833673643902e-20,3779064328637575e-20,38044552871986755e-21,3830007502392905e-20,3855721932510415e-20,3881599541091606e-20,39076412969530124e-21,39338481742133125e-21,3960221152319455e-20,3986761216072874e-20,4013469355655859e-20,4040346566657975e-20,4067393850102644e-20,40946122124738176e-21,412200266574281e-19,414956622739508e-19,41773039204574294e-21,4205216773524931e-20,4233305820788373e-20,4261572102061435e-20,4290016662808323e-20,431864055417121e-19,4347444832998096e-20,4376430561870452e-20,4405598809131363e-20,443495064891336e-19,4464487161166808e-20,44942094316879953e-21,4524118552147732e-20,4554215620119686e-20,45845017391092105e-21,4614978018581928e-20,46456455739927876e-21,46765055268148975e-21,4707559004568824e-20,4738807140851637e-20,4770251075366487e-20,48018919539518815e-21,48337309286114895e-21,4865769157543676e-20,4898007805171532e-20,4930448042172731e-20,4963091045509667e-20,4995937998459677e-20,5028990090645382e-20,5062248518065154e-20,50957144831237207e-21,512938919466288e-19,51632738679923174e-21,5197369724920642e-20,52316779937864196e-21,52661999094894296e-21,53009367135220113e-21,5335889654000526e-20,53710599856970186e-21,5406448970070875e-20,54420578753007315e-21,5477887976316472e-20,5513940554831326e-20,5550216899374138e-20,55867183053217494e-21,5623446074931492e-20,5660401517373863e-20,5697585948765273e-20,5735000692200963e-20,5772647077788087e-20,5810526442678758e-20,584864013110354e-19,58869894944046755e-21,5925575891069883e-20,5964400686765816e-20,600346525437217e-19,60427709740154014e-21,6082319233103068e-20,6122111426357861e-20,6162148955852216e-20,620243323104258e-19,624296566880434e-19,6283747693466333e-20,6324780736846071e-20,6366066238284525e-20,6407605644681595e-20,6449400410531217e-20,6491451997957094e-20,6533761876748063e-20,6576331524394124e-20,6619162426122093e-20,6662256074931912e-20,6705613971632558e-20,6749237624878661e-20,6793128551206708e-20,6837288275071904e-20,688171832888473e-19,6926420253047977e-20,6971395595993728e-20,7016645914220575e-20,7062172772330951e-20,7107977743068592e-20,7154062407356203e-20,720042835433318e-19,7247077181393559e-20,7294010494224088e-20,7341229906842383e-20,7388737041635428e-20,7436533529397833e-20,748462100937079e-19,7533001129280592e-20,758167554537785e-19,7630645922476318e-20,7679913933992462e-20,7729481261984511e-20,7779349597192367e-20,7829520639076976e-20,7879996095860489e-20,7930777684565972e-20,798186713105788e-19,8033266170082028e-20,808497654530643e-19,813700000936153e-19,8189338323881356e-20,8241993259544084e-20,829496659611347e-19,8348260122479757e-20,8401875636701377e-20,8455814946046188e-20,8510079867033548e-20,8564672225475749e-20,8619593856520473e-20,8674846604692572e-20,8730432323936735e-20,8786352877659767e-20,884261013877329e-19,8899205989736694e-20,895614232259982e-19,9013421039046442e-20,907104405043722e-19,9129013277853471e-20,918733065214047e-19,9245998113951568e-20,9305017613791744e-20,9364391112062109e-20,9424120579103842e-20,9484207995242803e-20,9544655350834062e-20,9605464646306648e-20,9666637892208509e-20,972817710925155e-19,9790084328356923e-20,9852361590700436e-20,9915010947758092e-20,9978034461351918e-20,.00010041434203695821,.0001010521225744167,.00010169370715725574,.00010233911682214381,.00010298837271151997,.00010364149607406565,.00010429850826516899,.00010495943074740089,.0001056242850909831,.00010629309297426646,.00010696587618420343,.00010764265661682989,.00010832345627773993,.00010900829728257247,.00010969720185748852,.00011039019233966156,.00011108729117775896,.0001117885209324344,.00011249390427681404,.000113203463996992,.00011391722299251951,.00011463520427690499,.00011535743097810604,.00011608392633903245,.00011681471371804304,.00011754981658945169,.00011828925854402695,.00011903306328950273,.00011978125465108095,.00012053385657194551,.00012129089311377009,.00012205238845723272,.00012281836690252997,.00012358885286989414,.0001243638709001111,.0001251434456550404,.00012592760191813785,.00012671636459497904,.0001275097587137846,.00012830780942594858,.00012911054200656668,.00012991798185496925,.00013073015449525076,.00013154708557680975,.00013236880087487982,.00013319532629107344,.00013402668785391777,.00013486291171940128,.00013570402417151342,.000136550051622795,.00013740102061488154,.0001382569578190579,.00013911789003680447,.00013998384420035675,.0001408548473732542,.00014173092675090303,.0001426121096611333,.00014349842356475756,.00014438989605613893,.00014528655486375052,.00014618842785074708,.00014709554301552927,.00014800792849231897,.0001489256125517263,.00014984862360133009,.00015077699018624835,.00015171074098972227,.000152649904833691,.00015359451067937946,.00015454458762787632,.0001555001649207266,.00015646127194051353,.00015742793821145427,.00015840019339998608,.00015937806731536626,.0001603615899102623,.00016135079128135526,.00016234570166993384,.0001633463514625018,.00016435277119137748,.00016536499153530176,.00016638304332004545,.00016740695751901868,.00016843676525388283,.00016947249779516457,.00017051418656287122,.00017156186312710858,.0001726155592087011,.00017367530667981325,.00017474113756457338,.00017581308403969998,.00017689117843512858,.00017797545323464358,.00017906594107650682,.0001801626747540962,.00018126568721653577,.0001823750115693409,.00018349068107505054,.00018461272915387726,.00018574118938434364,.00018687609550393637,.00018801748140974671,.00018916538115912833,.00019031982897034275,.00019148085922322054,.0001926485064598113,.0001938228053850491,.00019500379086740628,.00019619149793956325,.00019738596179906634,.000198587217809002,.00019979530149865865,.00020101024856420484,.0002022320948693561,.00020346087644605704,.00020469662949515067,.00020593939038706762,.00020718919566249826,.00020844608203308482,.00020971008638210166,.00021098124576514576,.00021225959741082685,.00021354517872145958,.00021483802727375752,.0002161381808195303,.00021744567728638258,.00021876055477841404,.00022008285157692367,.0002214126061411141,.00022274985710879803,.00022409464329711177,.00022544700370322,.0002268069775050376,.0002281746040619386,.00022954992291547905,.0002309329737901149,.00023232379659392558,.0002337224314193381,.00023512891854385456,.00023654329843078047,.00023796561172995584,.0002393958992784911,.0002408342021014969,.00024228056141283017,.00024373501861582443,.00024519761530404286,.00024666839326201135,.00024814739446597523,.00024963466108463966,.0002511302354799286,.00025263416020772914,.00025414647801865685,.0002556672318588034,.00025719646487050587,.00025873422039309976,.00026028054196369283,.00026183547331792124,.00026339905839072904,.0002649713413171298,.0002665523664329873,.0002681421782757841,.00026974082158540705,.00027134834130491866,.00027296478258134873,.0002745901907664681,.0002762246114175873,.0002778680902983336,.0002795206733794522,.00028118240683959353,.00028285333706611136,.00028453351065586065,.0002862229744159971,.00028792177536478085,.00028962996073238017,.0002913475779616789,.00029307467470908666,.0002948112988453491,.0002965574984563622,.00029831332184398975,.0003000788175268801,.00030185403424128667,.00030363902094189505,.0003054338268026412,.00030723850121754684,.00030905309380154167,.0003108776543913044,.0003127122330460868,.0003145568800485622,.00031641164590565183,.0003182765813493798,.0003201517373377039,.0003220371650553722,.00032393291591476263,.0003258390415567429,.00032775559385151207,.00032968262489946863,.0003316201870320555,.0003335683328126316,.0003355271150373222,.0003374965867358965,.00033947680117262045,.00034146781184714027,.0003434696724953399,.0003454824370902277,.00034750615984280086,.0003495408952029356,.00035158669786025535,.000353643622745026,.00035571172502903457,.0003577910601264747,.0003598816836948463,.00036198365163583526,.00036409702009622234,.00036622184546876544,.000368358184393114,.00037050609375669636,.0003726656306956389,.0003748368525956564,.0003770198170929762,.00037921458207523865,.00038142120568241495,.0003836397463077231,.0003858702625985456,.00038811281345734903,.0003903674580426086,.0003926342557697333,.00039491326631199176,.0003972045496014442,.00039950816582987405,.0004018241754497217,.0004041526391750263,.00040649361798235476,.00040884717311175713,.00041121336606769727,.0004135922586200124,.0004159839128048484,.00041838839092562483,.0004208057555539743,.0004232360695307132,.0004256793959667845,.0004281357982442351,.00043060534001716024,.00043308808521268834,.00043558409803193,.0004380934429509646,.00044061618472179847,.0004431523883733531,.00044570211921242836,.00044826544282469677,.0004508424250756692,.0004534331321116967,.0004560376303609393,.00045865598653437235,.00046128826762676045,.0004639345409176684,.00046659487397244023,.0004692693346432132,.00047195799106990714,.00047466091168123367,.0004773781651956987,.0004801098206226116,.00048285594726309584,.0004856166147110997,.0004883918928544127,.0004911818518756826,.0004939865622534346,.000496806094763094,.0004996405204780083,.0005024899107704797,.0005053543373127836,.0005082338720782142,.0005111285873421019,.0005140385556828663,.0005169638499830389,.0005199045434303176,.0005228607095185964,.000525832422049027,.0005288197551310468,.0005318227831834506,.0005348415809354225,.0005378762234276089,.0005409267860131596,.0005439933443588036,.0005470759744458927,.0005501747525714831,.0005532897553493938,.0005564210597112685,.0005595687429076648,.0005627328825091073,.0005659135564071822,.0005691108428155971,.0005723248202712819,.0005755555676354494,.0005788031640947029,.0005820676891621024,.000585349222678274,.0005886478448124836,.0005919636360637503,.000595296677261922,.0005986470495687976,.0006020148344792055,.0006054001138221282,.0006088029697617883,.0006122234847987781,.0006156617417711467,.0006191178238555368,.0006225918145682784,.0006260837977665235,.0006295938576493541,.0006331220787589106,.0006366685459815131,.0006402333445487898,.000643816560038804,.0006474182783771886,.0006510385858382744,.0006546775690462318,.0006583353149762051,.0006620119109554509,.0006657074446644857,.0006694220041382312,.0006731556777671494,.0006769085542984124,.0006806807228370314,.0006844722728470308,.000688283294152586,.0006921138769392013,.0006959641117548477,.0006998340895111499,.0007037239014845273,.000707633639317385,.0007115633950192593,.0007155132609680129,.0007194833299109854,.0007234736949661937,.0007274844496234864,.0007315156877457454,.0007355675035700491,.0007396399917088792,.0007437332471512818,.000747847365264085,.0007519824417930625,.0007561385728641534,.0007603158549846332,.000764514385044336,.0007687342603168309,.0007729755784606465,.00077723843752046,.0007815229359283086,.0007858291725047999,.0007901572464603223,.0007945072573962547,.0007988793053061875,.0008032734905771351,.0008076899139907581,.000812128676724583,.0008165898803532268,.0008210736268496233,.0008255800185862561,.000830109158336371,.0008346611492752331,.000839236094981341,.0008438340994376727,.0008484552670329229,.0008530997025627398,.0008577675112309725,.0008624587986509136,.0008671736708465424,.0008719122342537825,.0008766745957217418,.0008814608625139729,.0008862711423097292,.0008911055432052069,.0008959641737148328,.0009008471427724886,.00090575455973281,.0009106865343724202,.0009156431768912236,.0009206245979136505,.0009256309084899543,.0009306622200974545,.0009357186446418415,.0009408002944584262,.0009459072823134445,.0009510397214053111,.0009561977253659342,.0009613814082619633,.0009665908845961132,.0009718262693084173,.0009770876777775517,.0009823752258220947,.0009876890297018542,.0009930292061191299,.0009983958722200451,.0010037891455958144,.0010092091442840752,.0010146559867701653,.0010201297919884519,.0010256306793236202,.0010311587686119925,.0010367141801428366,.0010422970346596792,.0010479074533616217,.0010535455579046562,.001059211470402981,.0010649053134303248,.0010706272100212669,.0010763772836725636,.0010821556583444642,.0010879624584620594,.0010937978089165786,.0010996618350667556,.0011055546627401292,.0011114764182344088,.001117427228318776,.0011234072202352598,.0011294165217000372,.0011354552609048139,.0011415235665181273,.001147621567686733,.0011537493940369052,.0011599071756758321,.0011660950431929208,.0011723131276611867,.001178561560638574,.0011848404741693418,.0011911500007853848,.0011974902735076298,.0012038614258473542,.0012102635918075904,.0012166969058844412,.0012231615030684922,.0012296575188461313,.0012361850892009566,.0012427443506151082,.001249335440070673,.0012559584950510363,.0012626136535422454,.0012693010540344182,.0012760208355230757,.001282773137510568,.0012895581000074029,.0012963758635336756,.001303226569120404,.001310110358310957,.0013170273731623972,.0013239777562469043,.001330961650653138,.0013379791999876367,.0013450305483762044,.0013521158404653083,.0013592352214234673,.0013663888369426465,.0013735768332396561,.0013807993570575461,.0013880565556670032,.0013953485768677589,.0014026755689899818,.0014100376808956789,.0014174350619801084,.0014248678621731855,.0014323362319408656,.0014398403222865895,.0014473802847526514,.0014549562714216498,.0014625684349178541,.0014702169284086667,.0014779019056059797,.0014856235207676522,.001493381928698861,.0015011772847535814,.0015090097448359427,.0015168794654017068,.0015247866034596342,.0015327313165729526,.0015407137628607364,.0015487341009993729,.0015567924902239393,.0015648890903296794,.0015730240616733805,.001581197565174845,.0015894097623182764,.0015976608151537534,.00160595088629861,.0016142801389389249,.0016226487368308912,.001631056844302306,.0016395046262539642,.001647992248161114,.0016565198760748866,.0016650876766237284,.0016736958170148514,.001682344465035657,.0016910337890551823,.001699763958025541,.0017085351414833627,.0017173475095512306,.001726201232939125,.001735096482945884,.0017440334314606026,.001753012250964139,.001762033114530495,.0017710961958283236,.001780201669122314,.0017893497092747001,.0017985404917466525,.0018077741925997732,.0018170509884975023,.0018263710567066134,.001835734575098612,.0018451417221512433,.0018545926769498826,.0018640876191890398,.001873626729173789,.0018832101878212045,.0018928381766618527,.0019025108778412017,.0019122284741211262,.0019219911488813038,.0019317990861207283,.0019416524704591067,.0019515514871383817,.00196149632202411,.001971487161607001,.001981524193004292,.0019916076039612823,.0020017375828527213,.0020119143186843316,.0020221380010941974,.002032408820354294,.002042726967371879,.0020530926336910127,.002063506011493959,.002073967293602699,.002084476673480337,.0020950343452326046,.002105640503609295,.002116295344005729,.002126999062464209,.00213775185567549,.0021485539209802284,.0021594054563704476,.002170306660490993,.002181257732640996,.002192258872775332,.002203310281506075,.002214412160103963,.0022255647104998657,.00223676813528621,.0022480226377184914,.002259328421716674,.002270685691866706,.0022820946534219265,.0022935555123045786,.0023050684751071966,.002316633749094147,.0023282515422030077,.0023399220630460943,.002351645520911846,.0023634221257663626,.0023752520882547768,.0023871356197027868,.002399072932118044,.002411064238191676,.002423109751299667,.0024352096855043887,.0024473642555559853,.002459573676893879,.0024718381656481853,.002484157938641198,.002496533213388805,.002508964208101976,.0025214511416881817,.002533994233752871,.0025465937046008913,.002559249775237969,.0025719626673721178,.0025847326034151422,.002597559806484012,.0026104445004023844,.002623386909701973,.0026363872596240684,.002649445776120905,.0026625626858571808,.0026757382162114172,.002688972595277485,.002702266051865965,.0027156188155056434,.0027290311164449407,.002742503185653298,.002756035254822702,.002769627556369023,.0027832803234335403,.0027969937898842914,.002810768190317583,.00282460376005934,.002838500735166619,.0028524593524289605,.0028664798493698795,.0028805624642482368,.0028947074360597094,.0029089150045381804,.00292318541015719,.0029375188941313185,.002951915698417659,.0029663760657171754,.0029809002394761766,.0029954884638876745,.0030101409838928714,.0030248580451824798,.0030396398941982287,.003054486778134189,.003069398944938259,.003084376643313489,.0030994201227195813,.0031145296333741955,.003129705426254432,.003144947753098174,.0031602568664055265,.0031756330194401814,.003191076466230847,.0032065874615725964,.0032221662610283125,.0032378131209300225,.0032535282983803433,.003269312051253807,.0032851646381983047,.00330108631863641,.0033170773527668295,.003333138001565693,.00334926852678803,.00336546919096904,.003381740257425571,.003398081990257386,.00341449465434863,.00343097851536911,.0034475338397757216,.0034641608948137725,.0034808599485183726,.0034976312697157534,.0035144751280246724,.003531391793857711,.003548381538422685,.0035654446337239297,.00358258135256371,.0035997919685435004,.003617076756065394,.0036344359903333627,.0036518699473546867,.0036693789039411793,.0036869631377106425,.0037046229270880655,.0037223585513070823,.0037401702904111597,.003758058425255052,.0037760232375060095,.0037940650096451706,.003812184024968818,.00383038056758974,.0038486549224384884,.0038670073752647377,.003885438212638524,.00390394772195161,.003922536191418718,.003941203910078875,.003959951167796684,.003978778255263587,.003997685463999197,.004016673086352524,.0040357414155033165,.004054890745463272,.0040741213710773685,.004093433588025073,.004112827692821674,.004132303982819469,.004151862756209107,.004171504312020758,.004191228950125454,.00421103697123624,.0042309286769095355,.004250904369546244,.004270964352393136,.00429110892954394,.004311338405940715,.004331653087374946,.004352053280488889,.0043725392927766935,.0043931114325857,.004413770009117587,.004434515332429639,.00445534771343591,.00447626746390846,.00449727489647852,.004518370324637734,.004539554062739287,.004560826425999174,.004582187730497291,.004603638293178721,.004625178431854795,.00464680846520438,.004668528712774931,.0046903394949837805,.004712241133119166,.004734233949341519,.004756318266684489,.004778494409056211,.004800762701240342,.004823123468897289,.004845577038565277,.0048681237376615345,.004890763894483364,.004913497838209328,.004936325898900296,.004959248407500637,.004982265695839237,.005005378096630702,.005028585943476361,.005051889570865462,.005075289314176147,.005098785509676666,.005122378494526329,.005146068606776712,.005169856185372595,.005193741570153166,.005217725101852958,.005241807122103009,.005265987973431835,.005290267999266543,.005314647543933818,.00533912695266101,.005363706571577122,.005388386747713887,.005413167829006735,.00543805016429587,.005463034103327218,.00548811999675352,.005513308196135219,.005538599053941597,.005563992923551607,.005589490159255026,.0056150911162533195,.0056407961506606385,.005666605619504837,.005692519880728371,.005718539293189331,.005744664216662314,.005770895011839469,.005797232040331323,.005823675664667851,.005850226248299261,.005876884155597088,.0059036497518549355,.005930523403289558,.005957505477041618,.005984596341176728,.006011796364686238,.0060391059174882,.006066525370428195,.006094055095280276,.0061216954647477645,.006149446852464216,.006177309632994168,.006205284181834112,.006233370875413228,.00626157009109433,.006289882207174621,.0063183076028866065,.006346846658398807,.006375499754816714,.006404267274183449,.006433149599480739,.006462147114629527,.006491260204490958,.0065204892548669825,.006549834652501297,.006579296785079985,.006608876041232387,.0066385728105317725,.006668387483496171,.006698320451589051,.006728372107220125,.006758542843745993,.006788833055470998,.0068192431376477925,.006849773486478195,.006880424499113768,.00691119657365665,.00694209010916008,.006973105505629279,.00700424316402193,.0070355034862490205,.007066886875175351,.007098393734620348,.007130024469358556,.007161779485120417,.007193659188592785,.007225663987419669,.007257794290202729,.007290050506502019,.00732243304683646,.0073549423226845516,.0073875787464848805,.007420342731636759,.007453234692500734,.007486255044399267,.007519404203617118,.00755268258740211,.00758609061396545,.0076196287024824895,.0076532972730930324,.007687096746902061,.007721027545980056,.00775509009336369,.007789284813056146,.00782361213002776,.007858072470216368,.007892666260527868,.007927393928836712,.007962255903986198,.007997252615789131,.008032384495028072,.008067651973455957,.008103055483796313,.008138595459743882,.008174272335964837,.00821008654809735,.008246038532751835,.00828212872751145,.008318357570932366,.008354725502544234,.00839123296285043,.008427880393328518,.008464668236430477,.00850159693558313,.00853866693518837,.00857587868062359,.008613232618241822,.00865072919537224,.008688368860320208,.00872615206236781,.008764079251773855,.008802150879774403,.008840367398582757,.008878729261389934,.008917236922364707,.008955890836653976,.008994691460382856,.00903363925065499,.009072734665552645,.009111978164137008,.00915137020644823,.009190911253505728,.009230601767308225,.009270442210833984,.009310433048040877,.00935057474386662,.0093908677642287,.009431312576024744,.009471909647132353,.009512659446409426,.009553562443694043,.00959461910980471,.00963582991654025,.009677195336680024,.009718715843983814,.009760391913192003,.009802224020025441,.009844212641185618,.009886358254354508,.009928661338194719,.009971122372349305,.010013741837441907,.010056520215076558,.010099457987837781,.010142555639290365,.010185813653979497,.010229232517430454,.010272812716148745,.010316554737619768,.01036045907030896,.010404526203661411,.01044875662810198,.010493150835034928,.010537709316843955,.010582432566891876,.010627321079520597,.01067237535005078,.010717595874781782,.010762983150991338,.010808537676935433,.010854259951847982,.010900150475940685,.010946209750402754,.010992438277400558,.011038836560077479,.011085405102553538,.011132144409925174,.011179054988264854,.011226137344620862,.011273391987016839,.011320819424451588,.011368420166898588,.011416194725305777,.01146414361159499,.01151226733866181,.011560566420374918,.01160904137157596,.01165769270807882,.011706520946669512,.011755526605105437,.01180471020211521,.011854072257397914,.011903613291622915,.01195333382642911,.012003234384424626,.01205331548918614,.012103577665258557,.012154021438154238,.01220464733435269,.012255455881299783,.0123064476074074,.012357623042052642,.012408982715577412,.012460527159287658,.012512256905452934,.012564172487305517,.012616274439040079,.012668563295812669,.012721039593740432,.01277370386990056,.012826556662329945,.012879598510024135,.012932829952936941,.012986251531979427,.013039863789019395,.013093667266880457,.013147662509341396,.013201850061135284,.013256230467948807,.013310804276421312,.013365572034144154,.013420534289659707,.013475691592460677,.013531044492989074,.013586593542635576,.013642339293738348,.013698282299582473,.013754423114398716,.013810762293362972,.01386730039259493,.013924037969157504,.013980975581055592,.014038113787235284,.014095453147582765,.01415299422292341,.014210737575020659,.01426868376657516,.014326833361223522,.014385186923537482,.014443745019022637,.014502508214117558,.014561477076192526,.014620652173548587,.014680034075416272,.01473962335195467,.01479942057425002,.014859426314314823,.014919641145086532,.014980065640426296,.015040700375117972,.01510154592486669,.015162602866297807,.015223871776955522,.01528535323530176,.015347047820714759,.015408956113487991,.015471078694828558,.01553341614685629,.015595969052601997,.015658737996006512,.015721723561919015,.015784926336095982,.0158483469051995,.015911985856796148,.01597584377935535,.016039921262248194,.01610421889574575,.01616873727101787,.01623347698013149,.016298438616049356,.016363622772628376,.01642903004461825,.016494661027659792,.016560516318283598,.016626596513908253,.01669290221283906,.016759434014266134,.01682619251826314,.016893178325785373,.016960392038668455,.017027834259626354,.01709550559225011,.017163406641005803,.017231538011233203,.017299900309143766,.017368494141819228,.01743732011720961,.017506378844131722,.017575670932267175,.017645196992160862,.0177149576352189,.01778495347370713,.017855185120749014,.017925653190324093,.017996358297265827,.018067301057260125,.018138482086843013,.01820990200339925,.018281561425159937,.018353460971201045,.01842560126144107,.01849798291663947,.01857060655839438,.01864347280914088,.018716582292148804,.018789935631520926,.018863533452190724,.018937376379920576,.019011465041299455,.01908580006374114,.019160382075481815,.01923521170557829,.019310289583905592,.019385616341155137,.019461192608832216,.019537019019254278,.019613096205548266,.019689424801648914,.01976600544229606,.019842838763032875,.01991992540020326,.019997265990949847,.020074861173211507,.020152711585721253,.020230817868003955,.02030918066037369,.02038780060393193,.02046667834056465,.02054581451294049,.020625209764507855,.020704864739493022,.02078478008289725,.020864956440494815,.02094539445883013,.021026094785215662,.021107058067729122,.021188284955211335,.021269776097263316,.021351532144244192,.02143355374726821,.02151584155820264,.02159839622966475,.021681218415019656,.021764308768377295,.021847667944590237,.02193129659925057,.022015195388687812,.022099364969965608,.022183806000879693,.02226851913995458,.02235350504644139,.022438764380314696,.02252429780227007,.022610105973721043,.02269618955679665,.02278254921433831,.022869185609897282,.02295609940773159,.023043291272803412,.023130761870775996,.02321851186801102,.023306541931565408,.023394852729188773,.02348344492932005,.023572319201085067,.023661476214293015,.023750916639434058,.02384064114767579,.023930650410860718,.02402094510150274,.024111525892784622,.02420239345855447,.02429354847332301,.024384991612260213,.024476723551192445,.024568744966599092,.024661056535609654,.024753658936000348,.02484655284619119,.024939738945242537,.025033217912852117,.025126990429351573,.025221057175703533,.02531541883349791,.025410076084949124,.025505029612892326,.02560028010078059,.02569582823268101,.025791674693272,.025887820167839293,.025984265342273168,.026081010903064503,.026178057537301846,.026275405932667587,.026373056777434883,.026471010760463824,.026569268571198346,.026667830899662348,.026766698436456505,.026865871872754635,.026965351900299958,.027065139211401926,.027165234498932243,.027265638456321597,.027366351777555777,.02746737515717234,.02756870929025661,.027670354872438414,.02777231259988802,.027874583169312774,.02797716727795309,.028080065623579016,.028183278904486186,.02828680781949242,.028390653067933452,.02849481534965977,.028599295365032053,.02870409381491813,.028809211400688404,.02891464882421265,.029020406787855477,.029126485994473074,.02923288714740875,.029339610950489422,.029446658108021308,.02955402932478633,.02966172530603774,.029769746757496524,.029878094385347005,.029986768896233154,.03009577099725419,.030205101395960898,.03031476080035115,.03042474991886625,.030535069460386272,.030645720134226517,.03075670265013279,.030868017718277813,.03097966604925639,.03109164835408192,.03120396534418151,.03131661773139227,.03142960622795664,.0315429315465185,.031656594400118504,.03177059550219019,.03188493556655524,.03199961530741953,.03211463543936841,.032229996677362704,.03234569973673394,.032461745333180414,.032578134182762154,.0326948670018972,.032811944507356416,.03292936741625975,.033047136446070983,.03316525231459403,.033283715739967634,.033402527440661516,.033521688135471274,.033641198543514245,.03376105938422448,.033881271377348685,.03400183524294097,.03412275170135879,.03424402147325786,.03436564527958781,.03448762384158717,.03460995788077902,.03473264811896588,.0348556952782255,.034979100080905344,.03510286324961874,.035226985507239156,.0353514675768962,.03547631018197034,.03560151404608808,.03572707989311737,.03585300844716237,.035979300432558994,.03610595657386953,.036232977595878256,.03636036422358584,.03648811718220519,.036616237197155586,.03674472499405863,.03687358129873237,.03700280683718701,.03713240233561925,.03726236852040788,.03739270611810802,.03752341585544667,.03765449845931711,.03778595465677417,.037917785175028786,.03804999074144314,.038182572083525136,.03831552992892371,.038448865005423036,.038582578040937926,.038716669763508,.038851140901293116,.038985992182567306,.03912122433571436,.03925683808922163,.039392834171675675,.03952921331175603,.039665976238230594,.0398031236799497,.039940656365841265,.04007857502490487,.04021688038620686,.04035557317887446,.04049465413209077,.040634123975088914,.040773983437146936,.04091423324758193,.04105487413574501,.04119590683101524,.04133733206279467,.04147915056050226,.041621363053568845,.041763970271430945,.04190697294352587,.04205037179928537,.0421941675681308,.04233836097946661,.04248295276267559,.042627943647112386,.04277333436209846,.04291912563691585,.04306531820080198,.04321191278294338,.04335891011247049,.043506310918451335,.04365411592988634,.04380232587570191,.04395094148474522,.04409996348577789,.04424939260747059,.04439922957839667,.04454947512702694,.04470012998172302,.0448511948707323,.0450026705221811,.04515455766406969,.04530685702426543,.04545956933049767,.04561269531035101,.04576623569125982,.04592019120050225,.04607456256519364,.04622935051228133,.046384555768537734,.04654017906055523,.04669622111473902,.04685268265730213,.04700956441425832,.04716686711141675,.04732459147437529,.04748273822851479,.04764130809899249,.047800301810736336,.047959720088438296,.04811956365654867,.04827983323926925,.048440529560547764,.04860165334407106,.04876320531325927,.04892518619125908,.04908759670093819,.049250437564877965,.049413709505368206,.049577413244399814,.04974154950365945,.049906119004522145,.05007112246804603,.050236560614964704,.05040243416568217,.05056874384026525,.05073549035843803,.0509026744395748,.05107029680269407,.05123835816645171,.051406859249134886,.05157580076865512,.051745183442542274,.05191500798793744,.05208527512158713,.05225598555983597,.05242714001862096,.05259873921346394,.0527707838594661,.052943274671300264,.05311621236320538,.05328959764897886,.05346343124197091,.05363771385507705,.05381244620073213,.0539876289909031,.05416326293708285,.054339348750282984,.05451588714102766,.054692878819346355,.05487032449476759,.055048224876311724,.05522658067248476,.05540539259127091,.05558466134012654,.055764387625972585,.0559445721551887,.056125215633605306,.05630631876649796,.05648788225857938,.05666990681399371,.05685239313630846,.05703534192850884,.05721875389298992,.05740262973155033,.05758697014538494,.057771775835078344,.05795704750059752,.0581427858412853,.05832899155585297,.05851566534237381,.058702807898275554,.05889041992033392,.05907850210466549,.05926705514672029,.059456079741275376,.05964557658242735,.05983554636358566,.06002598977746516,.06021690751607957,.060408300270733774,.06060016873201745,.06079251358979722,.06098533553321031,.06117863525065668,.06137241342979277,.061566670757523284,.06176140791999527,.061956625602589785,.062152324489915894,.06234850526580221,.06254516861329111,.0627423152146302,.06293994575126632,.06313806090383738,.06333666135216574,.06353574777525066,.06373532085126127,.06393538125752912,.06413592967054126,.06433696676593242,.06453849321847846,.06474050970208829,.06494301688979735,.06514601545375964,.06534950606524105,.06555348939461131,.06575796611133759,.06596293688397596,.06616840238016547,.06637436326661939,.06658082020911907,.06678777387250547,.06699522492067295,.06720317401656077,.0674116218221465,.06762056899843806,.06783001620546691,.06803996410227996,.06825041334693277,.06846136459648154,.06867281850697633,.06888477573345286,.06909723692992582,.06931020274938067,.06952367384376704,.0697376508639901,.06995213445990449,.07016712528030532,.07038262397292212,.07059863118441007,.07081514756034361,.07103217374520795,.07124971038239235,.0714677581141818,.0716863175817505,.07190538942515312,.07212497428331832,.07234507279404055,.07256568559397274,.07278681331861861,.07300845660232538,.0732306160782756,.07345329237848044,.07367648613377115,.07390019797379238,.07412442852699362,.07434917842062258,.07457444828071694,.07480023873209674,.07502655039835718,.07525338390186048,.0754807398637288,.07570861890383594,.07593702164080052,.0761659486919774,.07639540067345106,.07662537820002681,.0768558818852243,.07708691234126872,.0773184701790843,.0775505560082854,.07778317043717009,.07801631407271133,.07824998752055021,.0784841913849875,.0787189262689767,.07895419277411558,.07918999150063916,.07942632304741154,.07966318801191868,.07990058699025981,.08013852057714099,.08037698936586607,.08061599394833002,.08085553491501063,.08109561285496097,.08133622835580157,.08157738200371312,.08181907438342784,.08206130607822276,.0823040776699111,.08254738973883552,.08279124286385903,.08303563762235894,.08328057459021726,.08352605434181481,.08377207745002174,.08401864448619129,.0842657560201508,.0845134126201949,.0847616148530771,.08501036328400263,.08525965847661982,.08550950099301347,.085759891393696,.08601083023760059,.08626231808207252,.08651435548286274,.0867669429941183,.08702008116837617,.08727377055655478,.08752801170794622,.08778280517020864,.08803815148935867,.08829405120976291,.08855050487413135,.08880751302350842,.08906507619726622,.08932319493309582,.08958186976700033,.08984110123328665,.09010088986455794,.0903612361917055,.09062214074390162,.09088360404859114,.0911456266314844,.09140820901654889,.09167135172600177,.09193505528030183,.09219932019814253,.09246414699644301,.09272953619034152,.09299548829318727,.09326200381653199,.09352908327012344,.09379672716189652,.0940649359979665,.09433371028262028,.09460305051830986,.0948729572056432,.09514343084337806,.09541447192841251,.09568608095577907,.0959582584186352,.09623100480825736,.09650432061403147,.09677820632344686,.09705266242208732,.0973276893936243,.09760328771980836,.09787945788046226,.09815620035347283,.09843351561478325,.09871140413838558,.0989898663963133,.0992689028586326,.09954851399343623,.09982870026683444,.1001094621429483,.10039080008390122,.10067271454981225,.1009552059987876,.10123827488691334,.10152192166824764,.10180614679481348,.10209095071659047,.10237633388150785,.10266229673543603,.10294883972218016,.10323596328347107,.10352366785895945,.10381195388620601,.10410082180067654,.1043902720357317,.10468030502262143,.10497092119047619,.10526212096630017,.10555390477496307,.1058462730391933,.10613922617956945,.10643276461451384,.10672688876028386,.10702159903096597,.10731689583846621,.10761277959250454,.10790925070060609,.10820630956809463,.1085039565980837,.10880219219147114,.10910101674692946,.10940043066090027,.1097004343275852,.11000102813894003,.1103022124846656,.1106039877522021,.1109063543267198,.11120931259111377,.11151286292599427,.11181700570968134,.11212174131819547,.11242707012525238,.11273299250225366,.11303950881828079,.1133466194400869,.1136543247320902,.1139626250563659,.11427152077263969,.11458101223827954,.11489109980828927,.11520178383530072,.11551306466956629,.11582494265895277,.11613741814893247,.11645049148257752,.11676416300055115,.11707843304110238,.11739330194005643,.11770877003080965,.11802483764432109,.11834150510910585,.11865877275122749,.11897664089429133,.11929510985943692,.11961417996533158,.119933851528162,.12025412486162851,.1205750002769373,.1208964780827933,.12121855858539315,.12154124208841866,.12186452889302862,.12218841929785329,.12251291359898575,.12283801208997647,.12316371506182483,.12349002280297361,.1238169355993004,.12414445373411243,.12447257748813773,.12480130713952031,.12513064296381088,.1254605852339623,.12579113422032068,.12612229019062005,.1264540534099743,.12678642414087138,.12711940264316562,.1274529891740716,.12778718398815647,.1281219873373345,.12845739947085855,.12879342063531524,.12913005107461645,.12946729102999416,.12980514073999183,.1301436004404603,.13048267036454836,.13082235074269832,.1311626418026376,.13150354376937362,.13184505686518588,.1321871813096206,.13252991731948266,.13287326510883068,.1332172248889691,.1335617968684425,.1339069812530283,.1342527782457315,.13459918804677645,.13494621085360242,.135293846860855,.13564209626038176,.13599095924122379,.13634043598961126,.13669052668895548,.1370412315198436,.13739255066003114,.13774448428443742,.138097032565137,.13845019567135547,.13880397376946152,.13915836702296225,.13951337559249521,.13986899963582372,.14022523930783004,.14058209476050865,.14093956614296121,.14129765360138924,.14165635727908926,.1420156773164452,.14237561385092395,.1427361670170676,.14309733694648907,.14345912376786457,.14382152760692885,.14418454858646818,.14454818682631515,.14491244244334223,.14527731555145634,.14564280626159204,.14600891468170696,.14637564091677463,.14674298506877964,.14711094723671092,.14747952751655696,.14784872600129895,.14821854278090613,.14858897794232867,.14896003156949367,.14933170374329757,.14970399454160233,.15007690403922813,.15045043230794913,.15082457941648664,.15119934543050473,.15157473041260333,.15195073442231422,.15232735751609366,.15270459974731904,.15308246116628127,.15346094182018127,.15384004175312266,.15421976100610824,.15460009961703264,.15498105762067893,.15536263504871156,.1557448319296726,.15612764828897452,.15651108414889747,.15689513952858125,.1572798144440225,.15766510890806762,.1580510229304093,.15843755651757946,.1588247096729462,.15921248239670688,.15960087468588452,.159989886534321,.1603795179326743,.16076976886841132,.16116063932580443,.1615521292859255,.16194423872664182,.16233696762261046,.16273031594527387,.16312428366285464,.16351887074035149,.16391407713953282,.16430990281893432,.1647063477338514,.16510341183633748,.16550109507519617,.1658993973959796,.16629831874098133,.1666978590492334,.1670980182565005,.1674987962952766,.16790019309477894,.16830220858094547,.168704842676428,.1691080953005899,.16951196636950067,.1699164557959309,.17032156348934935,.1707272893559173,.17113363329848513,.17154059521658716,.17194817500643872,.17235637256092984,.1727651877696234,.1731746205187487,.17358467069119937,.17399533816652724,.1744066228209401,.17481852452729618,.1752310431551009,.1756441785705023,.17605793063628805,.17647229921187974,.17688728415333094,.17730288531332167,.1777191025411557,.1781359356827556,.17855338458066033,.17897144907401957,.17939012899859202,.17980942418673979,.1802293344674264,.18064985966621122,.18107099960524808,.18149275410327914,.18191512297563384,.182338106034223,.18276170308753725,.18318591394064188,.18361073839517517,.18403617624934276,.18446222729791645,.18488889133222902,.18531616814017238,.18574405750619272,.18617255921128895,.18660167303300756,.18703139874544134,.18746173611922434,.18789268492153027,.18832424491606808,.18875641586308017,.18918919751933772,.18962258963813955,.1900565919693069,.19049120425918292,.19092642625062745,.1913622576830158,.19179869829223462,.19223574781068026,.19267340596725446,.19311167248736355,.19355054709291325,.19399002950230843,.19443011943044824,.19487081658872552,.1953121206850219,.19575403142370762,.19619654850563673,.1966396716281465,.19708340048505324,.19752773476665136,.19797267415970932,.19841821834746914,.198864367009642,.1993111198224079,.19975847645841138,.20020643658676124,.20065499987302637,.2011041659792352,.20155393456387277,.20200430528187818,.20245527778464378,.20290685172001116,.20335902673227157,.20381180246216146,.20426517854686266,.2047191546199984,.2051737303116336,.20562890524827082,.20608467905285055,.20654105134474726,.20699802173976972,.20745558985015744,.20791375528458061,.20837251764813708,.2088318765423517,.20929183156517372,.20975238231097704,.21021352837055612,.2106752693311273,.21113760477632443,.21160053428620051,.21206405743722329,.2125281738022769,.2129928829506577,.21345818444807535,.21392407785664985,.21439056273491164,.21485763863779933,.2153253051166596,.21579356171924502,.2162624079897142,.21673184346862928,.2172018676929569,.21767248019606483,.21814368050772354,.2186154681541031,.2190878426577743,.21956080353770585,.22003435030926566,.220508482484218,.2209831995707251,.22145850107334403,.2219343864930282,.22241085532712518,.2228879070693775,.22336554120992058,.22384375723528405,.22432255462838924,.22480193286855116,.22528189143147542,.22576242978926064,.22624354741039554,.22672524375976116,.22720751829862823,.22769037048465918,.228173799771906,.22865780561081195,.22914238744820958,.22962754472732289,.23011327688776484,.23059958336553982,.2310864635930414,.23157391699905477,.23206194300875443,.23255054104370682,.23303971052186812,.23352945085758697,.2340197614616022,.23451064174104552,.23500209109943987,.2354941089367018,.23598669464913952,.23647984762945606,.2369735672667473,.23746785294650424,.2379627040506132,.23845811995735522,.23895410004140916,.23945064367384944,.2399477502221496,.24044541905018058,.24094364951821406,.24144244098292056,.24194179279737305,.24244170431104528,.24294217486981534,.24344320381596402,.2439447904881784,.24444693422155062,.24494963434758116,.24545289019417765,.24595670108565865,.24646106634275222,.24696598528259972,.2474714572187549,.24797748146118725,.24848405731628115,.24899118408683985,.24949886107208435,.2500070875676574,.2505158628656224,.2510251862544677,.2515350570191056,.25204547444087666,.25255643779754844,.2530679463633202,.25357999940882203,.2540925962011189,.2546057360037106,.25511941807653526,.2556336416759697,.256148406054833,.25666371046238684,.25717955414433924,.2576959363428448,.25821285629650886,.2587303132403874,.2592483064059916,.2597668350212877,.2602858983107015,.26080549549511833,.2613256257918882,.26184628841482516,.2623674825742124,.26288920747680233,.2634114623258216,.2639342463209708,.26445755865842996,.26498139853085845,.2655057651274002,.2660306576336836,.2665560752318274,.2670820171004401,.26760848241462604,.26813547034598534,.2686629800626193,.269191010729131,.26971956150663046,.27024863155273554,.27077822002157725,.2713083260638001,.2718389488265684,.27237008745356606,.2729017410850031,.27343390885761554,.273966589904672,.2744997833559739,.2750334883378619,.27556770397321595,.2761024293814617,.2766376636785725,.2771734059770725,.2777096553860418,.27824641101111786,.2787836719545016,.27932143731495834,.27985970618782446,.28039847766500814,.28093775083499584,.2814775247828537,.2820177985902338,.28255857133537543,.28309984209311184,.28364160993487136,.28418387392868405,.28472663313918345,.2852698866276127,.2858136334518267,.28635787266629825,.28690260332212014,.28744782446701156,.2879935351453205,.28853973439802955,.28908642126275874,.28963359477377193,.2901812539619785,.29072939785494123,.2912780254768772,.29182713584866565,.2923767279878496,.29292680090864315,.2934773536219338,.29402838513528917,.29457989445295973,.29513188057588585,.29568434250170006,.29623727922473464,.29679068973602357,.29734457302331047,.2978989280710507,.29845375386041895,.29900904936931183,.2995648135723556,.30012104544090823,.3006777439430678,.3012349080436746,.3017925367043191,.3023506288833448,.3029091835358557,.30346819961371974,.3040276760655758,.30458761183683747,.3051480058697006,.3057088571031463,.3062701644729489,.3068319269116793,.3073941433487128,.30795681271023223,.3085199339192366,.3090835058955434,.30964752755579783,.3102119978134755,.310776915578891,.3113422797592008,.31190808925841257,.31247434297738774,.3130410398138504,.3136081786623906,.31417575841447315,.314743777958441,.315312236179524,.31588113195984213,.3164504641784152,.3170202317111653,.3175904334309262,.31816106820744827,.31873213490740426,.31930363239439713,.31987555952896496,.320447915168589,.3210206981676982,.3215939073776781,.3221675416468748,.3227415998206041,.3233160807411556,.323890983247802,.3244663061768032,.3250420483614154,.32561820863189567,.326194785815511,.32677177873654273,.32734918621629605,.3279270070731042,.32850524012233795,.32908388417641043,.3296629380447862,.3302424005339859,.33082227044759616,.3314025465862737,.33198322774775557,.3325643127268634,.3331458003155132,.33372768930272056,.33430997847460975,.33489266661441897,.3354757525025104,.33605923491637446,.33664311263064056,.33722738441708133,.33781204904462336,.3383971052793514,.3389825518845191,.33956838762055386,.34015461124506713,.34074122151285924,.3413282171759301,.34191559698348384,.3425033596819399,.3430915040149374,.3436800287233463,.3442689325452723,.3448582142160675,.3454478724683355,.3460379060319425,.3466283136340221,.34721909399898626,.34781024584853093,.3484017679016465,.3489936588746233,.3495859174810627,.35017854243188234,.3507715324353273,.3513648861969756,.35195860241974897,.35255267980391913,.3531471170471181,.3537419128443442,.35433706588797353,.3549325748677652,.35552843847087284,.35612465538185045,.3567212242826634,.35731814385269467,.35791541276875594,.3585130297050936,.35911099333340013,.35970930232282017,.36030795533996196,.3609069510489035,.3615062881112039,.3621059651859094,.3627059809295652,.3633063339962226,.3639070230374475,.3645080467023315,.36510940363749816,.36571109248711475,.3663131118928987,.3669154604941294,.36751813692765434,.3681211398279013,.3687244678268846,.3693281195542174,.36993209363711743,.37053638870041994,.37114100336658357,.3717459362557026,.3723511859855138,.37295675117140825,.37356263042643806,.37416882236132876,.3747753255844857,.3753821387020067,.3759892603176885,.37659668903303906,.3772044234472847,.37781246215738223,.3784208037580258,.37902944684165935,.37963838999848376,.3802476318164691,.38085717088136173,.3814670057766966,.38207713508380486,.3826875573818258,.38329827124771443,.3839092752562537,.3845205679800622,.38513214798960627,.3857440138532078,.3863561641370564,.3869685974052172,.3875813122196432,.38819430714018294,.38880758072459304,.3894211315285459,.39003495810564237,.3906490590074193,.3912634327833624,.39187807798091384,.392492993145485,.3931081768204645,.3937236275472306,.3943393438651594,.3949553243116375,.39557156742206984,.39618807172989284,.3968048357665821,.3974218580616654,.3980391371427307,.3986566715354394,.3992744597635337,.39989250034885054,.4005107918113288,.4011293326690232,.40174812143811156,.402367156632909,.402986436765875,.4036059603476275,.40422572588695044,.40484573189080764,.4054659768643503,.4060864593109312,.40670717773211196,.4073281306276775,.40794931649564325,.4085707338322693,.4091923811320694,.4098142568878216,.4104363595905812,.411058687729689,.4116812397927851,.4123040142658171,.4129270096330539,.41355022437709404,.4141736569788794,.41479730591770386,.41542116967122655,.4160452467154809,.41666953552488806,.41729403457226555,.41791874232884124,.41854365726426157,.4191687778466059,.41979410254239446,.4204196298166031,.4210453581326711,.4216712859525158,.42229741173654084,.42292373394365035,.42355025103125765,.42417696145529926,.42480386367024364,.4254309561291053,.4260582372834536,.42668570558342683,.42731335947774096,.427941197413704,.4285692178372246,.4291974191928266,.4298257999236573,.4304543584715025,.4310830932767946,.43171200277862765,.4323410854147656,.43297033962165715,.4335997638344443,.4342293564869771,.43485911601182214,.43548904084027756,.43611912940238157,.43674938012692716,.43737979144147093,.43801036177234787,.43864108954468,.43927197318239136,.4399030111082167,.4405342017437162,.4411655435092847,.441797034824166,.4424286741064623,.4430604597731485,.4436923902400818,.44432446392201574,.44495667923261006,.4455890345844448,.44622152838903,.44685415905682,.447486924997223,.44811982461861544,.4487528563283517,.4493860185327786,.4500193096372446,.4506527280461149,.4512862721627804,.4519199403896729,.4525537311282741,.45318764277913054,.4538216737418631,.4544558224151818,.45509008719689487,.4557244664839243,.4563589586723146,.4569935621572476,.45762827533305395,.45826309659322356,.4588980243304209,.4595330569364939,.46016819280248933,.4608034303186621,.46143876787449034,.46207420385868464,.46270973665920334,.46334536466326204,.46398108625734846,.46461689982723203,.46525280375797906,.4658887964339621,.4665248762388751,.4671610415557432,.46779729076693727,.4684336222541841,.4690700343985811,.469706525580606,.4703430941801321,.47097973857643766,.4716164571482213,.4722532482736114,.47289011033018136,.4735270416949591,.4741640407444426,.47480110585460916,.47543823540093066,.47607542775838335,.47671268130146305,.4773499944041947,.4779873654401476,.4786247927824452,.4792622748037802,.4798998098764244,.48053739637224363,.4811750326627079,.48181271711890633,.4824504481115568,.4830882240110216,.4837260431873166,.4843639040101272,.4850018048488174,.48563974407244537,.48627772004977327,.4869157311492825,.4875537757391833,.48819185218743005,.48882995886173125,.48946809412956466,.49010625635818694,.4907444439146492,.4913826551658067,.49202088847833386,.4926591422187346,.4932974147533571,.49393570444840385,.49457400966994697,.49521232878393784,.4958506601562227,.4964890021525521,.49712735313859635,.4977657114799554,.4984040755421741,.4990424436907518,.4996808142911581,.5003191857088426,.5009575563092482,.5015959244578263,.5022342885200449,.5028726468614043,.5035109978474479,.5041493398437776,.5047876712160625,.5054259903300531,.5060642955515962,.5067025852466432,.5073408577812658,.5079791115216661,.5086173448341933,.5092555560853511,.5098937436418134,.5105319058704354,.5111700411382687,.5118081478125703,.5124462242608171,.5130842688507175,.5137222799502267,.514360255927555,.514998195151183,.5156360959898728,.5162739568126834,.5169117759889788,.5175495518884435,.5181872828810937,.5188249673372921,.5194626036277568,.520100190123576,.5207377251962197,.5213752072175548,.5220126345598528,.5226500055958057,.523287318698537,.5239245722416166,.5245617645990697,.5251988941453912,.5258359592555574,.5264729583050408,.527109889669819,.527746751726389,.5283835428517787,.5290202614235623,.5296569058198682,.5302934744193943,.5309299656014189,.5315663777458159,.5322027092330631,.5328389584442572,.5334751237611248,.5341112035660379,.5347471962420213,.5353831001727684,.5360189137426515,.536654635336738,.537290263340797,.5379257961413157,.5385612321255097,.5391965696813379,.539831807197511,.5404669430635065,.5411019756695791,.5417369034067764,.5423717246669464,.5430064378427527,.5436410413276854,.544275533516076,.5449099128031055,.545544177584819,.5461783262581369,.5468123572208698,.5474462688717263,.5480800596103278,.5487137278372196,.5493472719538854,.5499806903627558,.5506139814672221,.5512471436716483,.5518801753813849,.5525130750027774,.55314584094318,.5537784716109699,.5544109654155556,.5550433207673903,.5556755360779843,.5563076097599182,.5569395402268518,.5575713258935381,.558202965175834,.5588344564907153,.5594657982562842,.5600969888917837,.5607280268176087,.5613589104553199,.5619896382276525,.5626202085585293,.5632506198730729,.5638808705976184,.5645109591597228,.5651408839881782,.565770643513023,.5664002361655557,.5670296603783432,.5676589145852348,.5682879972213724,.5689169067232054,.5695456415284978,.570174200076343,.5708025808071734,.5714307821627753,.5720588025862963,.5726866405222594,.5733142944165731,.5739417627165464,.574569043870895,.5751961363297567,.5758230385447007,.5764497489687423,.57707626605635,.5777025882634595,.5783287140474842,.5789546418673289,.5795803701833973,.5802058974576059,.5808312221533941,.5814563427357384,.5820812576711591,.5827059654277348,.5833304644751119,.5839547532845191,.5845788303287738,.5852026940822965,.5858263430211206,.586449775622906,.5870729903669465,.5876959857341832,.5883187602072149,.588941312270311,.5895636404094191,.5901857431121788,.5908076188679307,.5914292661677307,.5920506835043571,.5926718693723232,.593292822267888,.5939135406890692,.5945340231356501,.595154268109193,.5957742741130495,.5963940396523728,.5970135632341254,.5976328433670917,.5982518785618884,.5988706673309772,.5994892081886716,.6001074996511495,.6007255402364663,.601343328464561,.6019608628572696,.6025781419383346,.6031951642334179,.6038119282701075,.6044284325779306,.6050446756883625,.6056606561348405,.6062763724527698,.6068918231795358,.607507006854515,.6081219220190862,.6087365672166379,.609350940992581,.6099650418943576,.6105788684714542,.6111924192754074,.6118056928598175,.6124186877803568,.6130314025947827,.6136438358629439,.6142559861467926,.6148678520103937,.6154794320199378,.6160907247437466,.6167017287522859,.6173124426181742,.6179228649161951,.6185329942233037,.6191428291186386,.6197523681835309,.6203616100015162,.620970553158341,.6215791962419746,.6221875378426177,.6227955765527153,.6234033109669612,.6240107396823119,.6246178612979933,.6252246744155143,.6258311776386716,.6264373695735622,.6270432488285917,.6276488140144862,.6282540637442977,.6288589966334168,.6294636112995801,.6300679063628826,.6306718804457829,.6312755321731157,.6318788601720987,.6324818630723457,.633084539505871,.6336868881071016,.6342889075128852,.6348905963625018,.6354919532976688,.6360929769625528,.6366936660037774,.6372940190704348,.6378940348140909,.6384937118887968,.6390930489510964,.6396920446600384,.6402906976771802,.6408890066666006,.6414869702949064,.6420845872312444,.6426818561473056,.6432787757173373,.6438753446181495,.6444715615291274,.6450674251322351,.6456629341120271,.6462580871556558,.6468528829528822,.6474473201960812,.648041397580251,.6486351138030244,.649228467564673,.6498214575681179,.6504140825189373,.6510063411253767,.6515982320983538,.6521897541514694,.6527809060010137,.653371686365978,.6539620939680578,.6545521275316648,.6551417857839326,.6557310674547276,.656319971276654,.656908495985063,.6574966403180601,.6580844030165162,.6586717828240702,.6592587784871411,.6598453887549329,.6604316123794461,.6610174481154811,.6616028947206489,.6621879509553766,.6627726155829187,.6633568873693597,.6639407650836259,.6645242474974896,.665107333385581,.6656900215253906,.6662723106972798,.6668541996844868,.6674356872731366,.6680167722522448,.6685974534137267,.6691777295524038,.6697575994660141,.6703370619552141,.6709161158235899,.671494759877662,.6720729929268958,.6726508137837043,.6732282212634576,.673805214184489,.6743817913681043,.6749579516385849,.6755336938231971,.6761090167521979,.6766839192588444,.6772584001793962,.6778324583531256,.6784060926223219,.6789793018323018,.6795520848314114,.6801244404710354,.6806963676056028,.6812678650925957,.681838931792552,.6824095665690741,.6829797682888348,.6835495358215852,.6841188680401582,.6846877638204767,.685256222041559,.6858242415855271,.6863918213376097,.6869589601861503,.6875256570226123,.6880919107415877,.6886577202407995,.6892230844211098,.6897880021865245,.6903524724442025,.690916494104457,.6914800660807634,.6920431872897678,.6926058566512876,.6931680730883211,.6937298355270511,.6942911428968537,.6948519941302997,.6954123881631629,.6959723239344242,.6965318003862803,.6970908164641446,.6976493711166555,.698207463295681,.6987650919563254,.6993222560569325,.699878954559092,.7004351864276444,.7009909506306882,.7015462461395814,.7021010719289495,.7026554269766896,.7032093102639765,.7037627207752657,.7043156574983003,.7048681194241142,.7054201055470403,.7059716148647112,.7065226463780665,.7070731990913568,.7076232720121505,.7081728641513347,.708721974523123,.7092706021450588,.7098187460380214,.7103664052262285,.7109135787372416,.7114602656019704,.7120064648546796,.7125521755329887,.7130973966778802,.7136421273337017,.7141863665481734,.7147301133723876,.7152733668608169,.715816126071316,.7163583900651287,.7169001579068885,.7174414286646249,.7179822014097662,.7185224752171463,.7190622491650045,.7196015223349922,.7201402938121755,.7206785626850416,.7212163280454988,.7217535889888824,.7222903446139581,.7228265940229275,.7233623363214278,.7238975706185387,.724432296026784,.7249665116621384,.7255002166440263,.7260334100953286,.7265660911423845,.7270982589149972,.7276299125464343,.7281610511734322,.7286916739361999,.7292217799784231,.7297513684472647,.7302804384933701,.730808989270869,.731337019937381,.7318645296540149,.7323915175853739,.7329179828995599,.7334439247681729,.7339693423663167,.7344942348725998,.7350186014691416,.7355424413415703,.7360657536790295,.7365885376741784,.7371107925231977,.737632517425788,.7381537115851752,.7386743742081118,.7391945045048817,.7397141016892989,.7402331649787126,.7407516935940084,.7412696867596126,.7417871437034914,.7423040636571554,.7428204458556608,.7433362895376132,.7438515939451673,.7443663583240305,.7448805819234647,.7453942639962894,.7459074037988813,.7464200005911783,.7469320536366798,.7474435622024516,.7479545255591237,.7484649429808946,.7489748137455323,.7494841371343777,.7499929124323429,.7505011389279159,.7510088159131602,.7515159426837188,.7520225185388131,.7525285427812454,.7530340147174003,.7535389336572478,.7540432989143417,.7545471098058225,.7550503656524188,.7555530657784494,.7560552095118218,.7565567961840363,.7570578251301847,.7575582956889547,.7580582072026273,.7585575590170797,.759056350481786,.7595545809498194,.7600522497778507,.7605493563261508,.7610458999585908,.7615418800426448,.7620372959493871,.762532147053496,.7630264327332528,.7635201523705442,.7640133053508608,.7645058910632988,.7649979089005601,.7654893582589548,.765980238538398,.7664705491424135,.7669602894781319,.7674494589562935,.767938056991246,.7684260830009458,.7689135364069586,.7694004166344605,.7698867231122355,.7703724552726772,.7708576125517904,.7713421943891883,.7718262002280942,.7723096295153409,.7727924817013718,.7732747562402391,.7737564525896047,.7742375702107394,.7747181085685246,.7751980671314491,.7756774453716111,.776156242764716,.7766344587900794,.7771120929306228,.7775891446728751,.7780656135069718,.7785414989266559,.7790168004292751,.7794915175157822,.7799656496907343,.7804391964622941,.780912157342226,.7813845318458972,.7818563194922765,.7823275198039352,.7827981323070434,.783268156531371,.7837375920102858,.784206438280755,.7846746948833406,.785142361362201,.7856094372650884,.7860759221433502,.7865418155519248,.7870071170493426,.7874718261977232,.7879359425627768,.7883994657137998,.7888623952236758,.7893247306688727,.7897864716294438,.7902476176890232,.7907081684348265,.7911681234576483,.791627482351863,.7920862447154196,.7925444101498429,.7930019782602302,.7934589486552528,.7939153209471497,.7943710947517294,.7948262696883663,.7952808453800015,.7957348214531377,.7961881975378389,.7966409732677284,.7970931482799888,.7975447222153564,.7979956947181219,.7984460654361272,.7988958340207648,.7993450001269738,.7997935634132393,.8002415235415886,.8006888801775924,.8011356329903583,.8015817816525314,.8020273258402907,.8024722652333489,.802916599514947,.8033603283718539,.8038034514943633,.8042459685762926,.8046878793149783,.805129183411275,.8055698805695517,.8060099704976917,.806449452907087,.8068883275126364,.8073265940327455,.80776425218932,.8082013017077656,.8086377423169842,.8090735737493726,.8095087957408174,.8099434080306933,.8103774103618604,.8108108024806623,.8112435841369201,.8116757550839321,.8121073150784697,.8125382638807757,.8129686012545588,.8133983269669927,.813827440788711,.8142559424938073,.8146838318598278,.8151111086677713,.8155377727020836,.8159638237506572,.816389261604825,.8168140860593583,.8172382969124627,.8176618939657769,.8180848770243664,.8185072458967211,.8189290003947519,.8193501403337888,.8197706655325738,.8201905758132604,.820609871001408,.8210285509259805,.8214466154193398,.8218640643172446,.8222808974588443,.8226971146866784,.8231127158466693,.8235277007881205,.823942069363712,.8243558214294977,.8247689568448993,.825181475472704,.8255933771790599,.8260046618334728,.826415329308801,.8268253794812516,.8272348122303765,.8276436274390702,.8280518249935616,.828459404783413,.8288663667015148,.8292727106440827,.8296784365106509,.8300835442040693,.8304880336304994,.8308919046994101,.8312951573235723,.831697791419055,.832099806905221,.8325012037047237,.8329019817434997,.833302140950767,.8337016812590187,.8341006026040205,.834498904924804,.8348965881636631,.8352936522661486,.8356900971810659,.8360859228604673,.836481129259649,.8368757163371454,.8372696840547262,.8376630323773898,.8380557612733581,.8384478707140746,.8388393606741957,.8392302311315889,.8396204820673256,.840010113465679,.8403991253141158,.8407875176032933,.8411752903270537,.8415624434824205,.8419489770695909,.8423348910919326,.8427201855559775,.8431048604714187,.8434889158511027,.8438723517110256,.8442551680703274,.8446373649512884,.8450189423793213,.8453999003829675,.8457802389938918,.8461599582468773,.8465390581798189,.8469175388337189,.8472954002526809,.8476726424839063,.848049265577686,.8484252695873968,.8488006545694953,.8491754205835134,.849549567692051,.8499230959607722,.8502960054583977,.8506682962567025,.8510399684305066,.8514110220576715,.8517814572190938,.852151273998701,.8525204724834432,.8528890527632893,.8532570149312204,.8536243590832253,.8539910853182933,.8543571937384082,.8547226844485436,.8550875575566578,.855451813173685,.8558154514135321,.8561784723930712,.8565408762321354,.856902663053511,.8572638329829326,.857624386149076,.8579843226835548,.858343642720911,.858702346398611,.8590604338570388,.8594179052394914,.8597747606921702,.8601310003641764,.8604866244075048,.860841632977038,.8611960262305387,.8615498043286449,.861902967434863,.8622555157155628,.862607449339969,.8629587684801567,.8633094733110445,.8636595640103888,.8640090407587764,.8643579037396187,.864706153139145,.8650537891463979,.8654008119532237,.8657472217542685,.8660930187469718,.8664382031315576,.8667827751110311,.8671267348911693,.8674700826805173,.8678128186903795,.8681549431348143,.8684964562306263,.8688373581973624,.8691776492573018,.8695173296354518,.8698563995595396,.8701948592600082,.8705327089700061,.8708699489253837,.8712065793646848,.8715426005291415,.8718780126626657,.8722128160118436,.8725470108259283,.8728805973568343,.8732135758591288,.8735459465900259,.87387770980938,.8742088657796794,.8745394147660379,.8748693570361893,.8751986928604797,.8755274225118623,.8758555462658877,.8761830644006998,.8765099771970264,.8768362849381752,.8771619879100236,.8774870864010145,.8778115807021467,.8781354711069713,.8784587579115815,.8787814414146069,.8791035219172068,.8794249997230628,.8797458751383715,.8800661484718382,.8803858200346684,.8807048901405631,.8810233591057088,.8813412272487728,.8816584948908941,.8819751623556789,.8822912299691905,.8826066980599439,.8829215669588977,.8832358369994489,.8835495085174228,.8838625818510677,.8841750573410472,.8844869353304337,.8847982161646994,.885108900191711,.8854189877617205,.8857284792273604,.8860373749436343,.8863456752679102,.886653380559913,.8869604911817194,.8872670074977466,.8875729298747479,.8878782586818046,.888182994290319,.888487137074006,.8887906874088866,.8890936456732802,.8893960122477981,.8896977875153345,.8899989718610599,.8902995656724149,.8905995693390999,.8908989832530707,.8911978078085289,.8914960434019163,.8917936904319057,.8920907492993941,.8923872204074954,.8926831041615337,.8929784009690342,.8932731112397163,.8935672353854862,.8938607738204305,.8941537269608069,.894446095225037,.8947378790336998,.8950290788095239,.8953196949773787,.8956097279642685,.8958991781993235,.896188046113794,.8964763321410407,.896764036716529,.8970511602778198,.897337703264564,.8976236661184922,.8979090492834096,.8981938532051865,.8984780783317523,.8987617251130868,.8990447940012125,.8993272854501877,.8996091999160988,.8998905378570519,.9001712997331657,.9004514860065638,.9007310971413673,.9010101336036869,.9012885958616146,.9015664843852167,.9018437996465272,.9021205421195377,.9023967122801918,.9026723106063756,.9029473375779127,.9032217936765532,.9034956793859686,.9037689951917427,.9040417415813649,.9043139190442211,.9045855280715877,.9048565691566219,.9051270427943567,.9053969494816902,.90566628971738,.9059350640020335,.9062032728381035,.9064709167298768,.9067379961834682,.9070045117068127,.9072704638096585,.9075358530035572,.9078006798018577,.9080649447196982,.9083286482739984,.9085917909834513,.9088543733685157,.9091163959514088,.9093778592560985,.9096387638082947,.9098991101354423,.9101588987667133,.9104181302329998,.9106768050669044,.9109349238027338,.9111924869764916,.9114494951258688,.9117059487902373,.9119618485106413,.9122171948297914,.9124719882920539,.9127262294434454,.9129799188316239,.9132330570058818,.9134856445171373,.9137376819179275,.9139891697623994,.914240108606304,.9144904990069866,.9147403415233804,.9149896367159973,.9152383851469229,.9154865873798053,.9157342439798494,.9159813555138088,.9162279225499783,.9164739456581854,.9167194254097829,.9169643623776411,.9172087571361409,.9174526102611646,.917695922330089,.9179386939217773,.9181809256165722,.9184226179962869,.9186637716441985,.9189043871450391,.9191444650849894,.9193840060516701,.9196230106341341,.919861479422859,.9200994130097402,.9203368119880815,.9205736769525885,.9208100084993609,.9210458072258845,.9212810737310235,.9215158086150126,.9217500124794498,.9219836859272886,.92221682956283,.9224494439917148,.9226815298209157,.9229130876587313,.9231441181147758,.9233746217999733,.9236045993265489,.9238340513080225,.9240629783591996,.9242913810961642,.9245192601362712,.9247466160981395,.924973449601643,.9251997612679034,.9254255517192831,.9256508215793774,.9258755714730065,.9260998020262079,.9263235138662289,.9265467076215197,.9267693839217245,.9269915433976749,.9272131866813814,.9274343144060273,.9276549272059595,.9278750257166819,.9280946105748469,.9283136824182496,.9285322418858183,.9287502896176079,.928967826254792,.9291848524396564,.92940136881559,.9296173760270778,.9298328747196947,.9300478655400957,.93026234913601,.930476326156233,.9306897972506193,.9309027630700742,.9311152242665472,.9313271814930236,.9315386354035184,.9317495866530674,.9319600358977201,.9321699837945331,.932379431001562,.9325883781778537,.9327968259834394,.9330047750793271,.9332122261274945,.9334191797908811,.9336256367333807,.9338315976198346,.9340370631160241,.9342420338886626,.9344465106053887,.934650493934759,.9348539845462404,.9350569831102028,.9352594902979118,.9354615067815215,.9356630332340676,.9358640703294588,.9360646187424709,.9362646791487388,.9364642522247494,.9366633386478344,.9368619390961628,.9370600542487337,.9372576847853697,.937454831386709,.9376514947341978,.9378476755100841,.9380433743974103,.9382385920800048,.9384333292424768,.9386275865702072,.9388213647493433,.9390146644667898,.9392074864102029,.9393998312679825,.9395916997292663,.9397830924839206,.9399740102225349,.9401644536364143,.9403544234175727,.9405439202587247,.9407329448532799,.9409214978953345,.941109580079666,.9412971921017246,.9414843346576264,.9416710084441471,.9418572141587148,.9420429524994026,.9422282241649218,.9424130298546151,.9425973702684497,.9427812461070102,.9429646580714913,.9431476068636916,.9433300931860064,.9435121177414207,.9436936812335023,.9438747843663947,.9440554278448114,.9442356123740274,.9444153386598735,.9445946074087291,.9447734193275154,.9449517751236883,.9451296755052324,.9453071211806536,.9454841128589724,.9456606512497171,.9458367370629172,.9460123710090969,.9461875537992679,.946362286144923,.946536568758029,.9467104023510211,.9468837876367947,.9470567253286999,.9472292161405339,.9474012607865361,.9475728599813792,.9477440144401641,.9479147248784129,.9480849920120625,.9482548165574578,.948424199231345,.9485931407508651,.9487616418335483,.9489297031973061,.9490973255604254,.949264509641562,.9494312561597348,.9495975658343179,.9497634393850354,.949928877531954,.9500938809954779,.9502584504963406,.9504225867556003,.9505862904946318,.950749562435122,.9509124032990619,.951074813808741,.9512367946867407,.9513983466559289,.9515594704394523,.9517201667607309,.9518804363434513,.9520402799115617,.9521996981892638,.9523586919010076,.9525172617714852,.9526754085256247,.9528331328885833,.9529904355857418,.9531473173426979,.953303778885261,.9534598209394449,.9536154442314624,.9537706494877187,.9539254374348064,.9540798087994978,.9542337643087402,.9543873046896489,.9545404306695023,.9546931429757346,.9548454423359305,.9549973294778189,.9551488051292678,.9552998700182771,.9554505248729732,.9556007704216033,.9557506073925295,.9559000365142222,.9560490585152549,.9561976741242981,.9563458840701138,.9564936890815487,.9566410898875295,.9567880872170567,.9569346817991982,.9570808743630842,.9572266656379016,.9573720563528876,.9575170472373244,.9576616390205335,.9578058324318692,.9579496282007146,.9580930270564743,.9582360297285691,.9583786369464311,.9585208494394978,.9586626679372054,.9588040931689849,.958945125864255,.9590857667524181,.9592260165628531,.9593658760249112,.9595053458679093,.9596444268211255,.9597831196137933,.9599214249750951,.9600593436341587,.9601968763200504,.9603340237617695,.960470786688244,.9606071658283243,.9607431619107784,.9608787756642857,.9610140078174327,.9611488590987068,.961283330236492,.9614174219590622,.961551134994577,.9616844700710763,.9618174279164748,.9619500092585569,.9620822148249712,.9622140453432259,.9623455015406829,.9624765841445534,.962607293881892,.9627376314795921,.9628675976643808,.9629971931628131,.9631264187012677,.9632552750059413,.9633837628028444,.9635118828177949,.9636396357764142,.9637670224041217,.9638940434261305,.9640206995674411,.9641469915528377,.9642729201068826,.9643984859539119,.9645236898180297,.9646485324231039,.9647730144927609,.9648971367503814,.9650208999190947,.9651443047217747,.9652673518810341,.9653900421192211,.9655123761584129,.9656343547204124,.9657559785267421,.9658772482986413,.9659981647570591,.9661187286226515,.9662389406157755,.9663588014564858,.9664783118645288,.9665974725593385,.9667162842600323,.966834747685406,.9669528635539291,.9670706325837403,.9671880554926435,.9673051329981028,.9674218658172379,.9675382546668196,.967654300263266,.9677700033226374,.9678853645606317,.9680003846925804,.9681150644334447,.9682294044978099,.9683434055998815,.9684570684534815,.9685703937720433,.9686833822686077,.9687960346558185,.968908351645918,.9690203339507436,.9691319822817223,.9692432973498672,.9693542798657735,.9694649305396137,.9695752500811339,.9696852391996489,.9697948986040391,.9699042290027458,.9700132311037669,.9701219056146531,.9702302532425034,.9703382746939623,.9704459706752138,.9705533418919787,.9706603890495106,.9707671128525912,.9708735140055269,.9709795932121446,.9710853511757873,.9711907885993116,.9712959061850819,.971400704634968,.9715051846503402,.9716093469320666,.9717131921805077,.9718167210955139,.971919934376421,.9720228327220469,.9721254168306873,.972227687400112,.9723296451275616,.9724312907097434,.9725326248428278,.9726336482224442,.9727343615436784,.9728347655010677,.9729348607885981,.9730346480997001,.9731341281272453,.9732333015635435,.9733321691003377,.9734307314288018,.9735289892395361,.9736269432225652,.9737245940673325,.9738219424626983,.9739189890969355,.9740157346577268,.9741121798321608,.9742083253067281,.974304171767319,.9743997198992195,.9744949703871078,.9745899239150508,.9746845811665021,.9747789428242966,.9748730095706485,.9749667820871479,.9750602610547575,.9751534471538088,.9752463410639997,.9753389434643903,.9754312550334009,.9755232764488077,.9756150083877398,.975706451526677,.9757976065414455,.9758884741072155,.9759790548984973,.9760693495891393,.9761593588523242,.976249083360566,.9763385237857071,.976427680798915,.9765165550706799,.9766051472708113,.9766934580684347,.976781488131989,.976869238129224,.9769567087271966,.9770439005922684,.9771308143901027,.9772174507856617,.9773038104432034,.977389894026279,.97747570219773,.9775612356196853,.9776464949535586,.9777314808600455,.9778161939991203,.9779006350300344,.9779848046113122,.9780687034007495,.9781523320554097,.9782356912316227,.9783187815849804,.9784016037703352,.9784841584417974,.9785664462527318,.9786484678557559,.9787302239027367,.9788117150447887,.9788929419322708,.9789739052147843,.97905460554117,.9791350435595052,.9792152199171027,.979295135260507,.9793747902354922,.9794541854870595,.9795333216594353,.9796121993960681,.9796908193396263,.979769182131996,.9798472884142787,.9799251388267886,.9800027340090502,.9800800745997967,.9801571612369672,.980233994557704,.9803105751983512,.9803869037944517,.9804629809807458,.9805388073911678,.9806143836588449,.9806897104160944,.9807647882944217,.9808396179245182,.980914199936259,.9809885349587005,.9810626236200795,.9811364665478093,.9812100643684791,.9812834177078512,.9813565271908592,.9814293934416056,.9815020170833605,.9815743987385589,.981646539028799,.9817184385748401,.9817900979966008,.981861517913157,.9819326989427399,.9820036417027342,.9820743468096759,.982144814879251,.9822150465262929,.9822850423647811,.9823548030078392,.9824243290677328,.9824936211558684,.9825626798827904,.9826315058581808,.9827000996908563,.9827684619887669,.9828365933589942,.9829044944077499,.9829721657403736,.9830396079613316,.9831068216742147,.9831738074817369,.9832405659857338,.983307097787161,.9833734034860918,.9834394836817164,.9835053389723402,.9835709699553818,.9836363772273716,.9837015613839506,.9837665230198686,.9838312627289821,.9838957811042542,.9839600787377518,.9840241562206447,.9840880141432039,.9841516530948006,.984215073663904,.984278276438081,.9843412620039935,.984404030947398,.9844665838531437,.9845289213051714,.9845910438865121,.9846529521792853,.9847146467646982,.9847761282230445,.9848373971337022,.9848984540751333,.984959299624882,.9850199343595737,.9850803588549135,.9851405736856852,.98520057942575,.9852603766480453,.9853199659245837,.9853793478264515,.9854385229238075,.9854974917858825,.9855562549809774,.9856148130764626,.9856731666387765,.9857313162334249,.9857892624249793,.9858470057770766,.9859045468524172,.9859618862127647,.9860190244189444,.9860759620308425,.986132699607405,.986189237706637,.9862455768856013,.9863017177004175,.9863576607062616,.9864134064573644,.986468955507011,.9865243084075394,.9865794657103403,.9866344279658559,.9866891957235787,.9867437695320512,.9867981499388647,.9868523374906586,.9869063327331196,.9869601362109806,.9870137484680206,.9870671700470631,.9871204014899759,.9871734433376701,.9872262961300995,.9872789604062596,.9873314367041873,.9873837255609599,.9874358275126944,.9874877430945471,.9875394728407123,.9875910172844226,.9876423769579473,.9876935523925926,.9877445441187003,.9877953526656473,.9878459785618458,.9878964223347415,.9879466845108139,.9879967656155754,.9880466661735708,.9880963867083771,.9881459277426021,.9881952897978847,.9882444733948945,.9882934790533305,.9883423072919212,.9883909586284241,.988439433579625,.9884877326613383,.988535856388405,.9885838052746942,.9886315798331015,.9886791805755485,.9887266080129832,.9887738626553791,.9888209450117351,.9888678555900748,.9889145948974465,.9889611634399226,.9890075617225994,.9890537902495973,.9890998495240594,.989145740048152,.9891914623230645,.9892370168490087,.9892824041252183,.9893276246499492,.9893726789204794,.9894175674331082,.989462290683156,.9895068491649651,.989551243371898,.9895954737963386,.9896395409296911,.9896834452623803,.9897271872838512,.9897707674825695,.9898141863460205,.9898574443607097,.9899005420121623,.9899434797849235,.9899862581625581,.9900288776276507,.9900713386618053,.9901136417456455,.9901557873588144,.9901977759799746,.990239608086808,.9902812841560162,.99032280466332,.9903641700834598,.9904053808901954,.990446437556306,.9904873405535906,.9905280903528676,.9905686874239753,.9906091322357713,.9906494252561334,.9906895669519591,.990729557789166,.9907693982326918,.9908090887464943,.9908486297935518,.990888021835863,.9909272653344474,.990966360749345,.9910053085396171,.9910441091633461,.9910827630776353,.9911212707386101,.9911596326014173,.9911978491202256,.9912359207482262,.9912738479376322,.9913116311396798,.9913492708046278,.9913867673817582,.9914241213193764,.9914613330648117,.9914984030644169,.9915353317635696,.9915721196066715,.9916087670371496,.9916452744974558,.9916816424290676,.9917178712724886,.9917539614672481,.9917899134519027,.9918257276640352,.9918614045402561,.9918969445162037,.9919323480265441,.9919676155049719,.9920027473842109,.9920377440960138,.9920726060711633,.9921073337394721,.9921419275297836,.9921763878699723,.9922107151869439,.9922449099066364,.99227897245402,.992312903253098,.992346702726907,.9923803712975175,.9924139093860346,.992447317412598,.9924805957963829,.9925137449556007,.9925467653074993,.9925796572683633,.9926124212535151,.9926450576773155,.9926775669531636,.992709949493498,.9927422057097973,.9927743360125804,.9928063408114072,.9928382205148796,.9928699755306415,.9929016062653796,.9929331131248247,.992964496513751,.9929957568359781,.9930268944943708,.99305790989084,.9930888034263433,.9931195755008863,.9931502265135218,.9931807568623522,.993211166944529,.993241457156254,.9932716278927799,.993301679548411,.9933316125165038,.9933614271894683,.9933911239587676,.99342070321492,.9934501653474987,.9934795107451331,.993508739795509,.9935378528853704,.9935668504005193,.9935957327258166,.9936245002451833,.9936531533416012,.9936816923971135,.9937101177928254,.9937384299089057,.9937666291245868,.9937947158181659,.9938226903670059,.9938505531475358,.9938783045352523,.9939059449047197,.9939334746295718,.9939608940825118,.9939882036353138,.9940154036588232,.9940424945229585,.9940694765967104,.994096350248145,.9941231158444029,.9941497737517008,.9941763243353321,.9942027679596687,.9942291049881605,.9942553357833377,.9942814607068107,.9943074801192716,.9943333943804952,.9943592038493394,.9943849088837466,.994410509840745,.9944360070764484,.9944614009460584,.9944866918038647,.9945118800032465,.9945369658966728,.9945619498357041,.9945868321709933,.9946116132522861,.9946362934284229,.994660873047339,.9946853524560662,.9947097320007334,.9947340120265682,.994758192877897,.9947822748981471,.9948062584298468,.9948301438146274,.9948539313932233,.9948776215054737,.9949012144903233,.9949247106858239,.9949481104291346,.9949714140565237,.9949946219033693,.9950177343041607,.9950407515924994,.9950636741010997,.9950865021617907,.9951092361055166,.9951318762623385,.9951544229614347,.9951768765311028,.9951992372987597,.9952215055909438,.9952436817333155,.9952657660506585,.9952877588668808,.9953096605050162,.9953314712872251,.9953531915347956,.9953748215681452,.9953963617068213,.9954178122695027,.9954391735740008,.9954604459372607,.9954816296753622,.9955027251035214,.9955237325360915,.9955446522865641,.9955654846675703,.9955862299908824,.9956068885674143,.9956274607072233,.9956479467195111,.9956683469126251,.9956886615940593,.9957088910704561,.9957290356476068,.9957490956304538,.9957690713230904,.9957889630287637,.9958087710498745,.9958284956879793,.995848137243791,.9958676960171805,.9958871723071784,.995906566411975,.9959258786289227,.9959451092545367,.9959642585844967,.9959833269136474,.9960023145360009,.9960212217447364,.9960400488322033,.9960587960899211,.9960774638085813,.9960960522780484,.9961145617873615,.9961329926247353,.9961513450775615,.9961696194324102,.9961878159750311,.9962059349903548,.996223976762494,.996241941574745,.9962598297095888,.9962776414486929,.9962953770729119,.9963130368622893,.9963306210960589,.9963481300526453,.9963655640096667,.9963829232439346,.9964002080314565,.9964174186474363,.9964345553662761,.9964516184615773,.9964686082061422,.9964855248719754,.9965023687302843,.9965191400514817,.9965358391051862,.9965524661602243,.9965690214846309,.9965855053456514,.9966019180097426,.9966182597425745,.996634530809031,.9966507314732119,.9966668619984344,.9966829226472331,.9966989136813635,.9967148353618017,.9967306879487462,.9967464717016197,.99676218687907,.9967778337389717,.9967934125384275,.9968089235337692,.9968243669805599,.9968397431335945,.9968550522469019,.9968702945737455,.9968854703666258,.9969005798772804,.9969156233566865,.9969306010550617,.9969455132218659,.9969603601058018,.9969751419548175,.9969898590161071,.9970045115361124,.9970190997605238,.9970336239342829,.9970480843015823,.9970624811058687,.9970768145898428,.9970910849954618,.9971052925639403,.9971194375357517,.9971335201506302,.997147540647571,.9971614992648334,.9971753962399407,.9971892318096824,.9972030062101157,.9972167196765664,.997230372443631,.9972439647451773,.9972574968143467,.997270968883555,.9972843811844944,.997297733948134,.9973110274047225,.9973242617837886,.9973374373141428,.9973505542238791,.997363612740376,.997376613090298,.9973895554995976,.997402440193516,.9974152673965848,.9974280373326279,.9974407502247621,.9974534062953991,.9974660057662471,.9974785488583118,.997491035791898,.9975034667866112,.9975158420613588,.9975281618343518,.9975404263231061,.997552635744444,.9975647903144956,.9975768902487003,.9975889357618083,.997600927067882,.9976128643802972,.9976247479117453,.9976365778742337,.9976483544790882,.9976600779369539,.997671748457797,.9976833662509058,.9976949315248929,.9977064444876954,.9977179053465781,.9977293143081333,.9977406715782833,.9977519773622815,.9977632318647138,.9977744352895002,.997785587839896,.9977966897184939,.9978077411272247,.997818742267359,.997829693339509,.9978405945436296,.9978514460790198,.9978622481443246,.9978730009375358,.9978837046559943,.9978943594963907,.9979049656547674,.9979155233265197,.9979260327063973,.997936493988506,.997946907366309,.9979572730326282,.9979675911796457,.9979778619989058,.9979880856813157,.9979982624171473,.9980083923960388,.9980184758069958,.998028512838393,.9980385036779759,.9980484485128617,.9980583475295409,.9980682009138793,.9980780088511187,.9980877715258789,.9980974891221588,.9981071618233381,.9981167898121788,.9981263732708262,.998135912380811,.9981454073230501,.9981548582778488,.9981642654249014,.9981736289432934,.9981829490115025,.9981922258074002,.9982014595082533,.9982106502907253,.9982197983308777,.9982289038041717,.9982379668854695,.9982469877490359,.9982559665685394,.9982649035170541,.9982737987670609,.9982826524904488,.9982914648585166,.9983002360419745,.9983089662109448,.9983176555349643,.9983263041829852,.9983349123233762,.9983434801239252,.9983520077518389,.998360495373746,.9983689431556977,.9983773512631691,.9983857198610611,.9983940491137014,.9984023391848462,.9984105902376817,.9984188024348252,.9984269759383266,.9984351109096703,.9984432075097761,.9984512658990006,.9984592862371393,.9984672686834271,.9984752133965403,.9984831205345983,.9984909902551641,.9984988227152464,.9985066180713011,.9985143764792324,.9985220980943941,.9985297830715913,.9985374315650821,.9985450437285783,.9985526197152473,.9985601596777134,.9985676637680592,.9985751321378268,.9985825649380199,.9985899623191044,.99859732443101,.9986046514231323,.998611943444333,.9986192006429424,.9986264231667603,.9986336111630574,.9986407647785766,.9986478841595346,.9986549694516238,.9986620208000123,.9986690383493468,.9986760222437531,.9986829726268376,.998689889641689,.9986967734308796,.9987036241364663,.9987104418999926,.9987172268624894,.998723979164477,.9987306989459656,.9987373863464578,.998744041504949,.9987506645599293,.9987572556493849,.998763814910799,.9987703424811538,.9987768384969316,.9987833030941156,.9987897364081925,.9987961385741526,.9988025097264924,.9988088499992146,.9988151595258307,.9988214384393614,.9988276868723388,.9988339049568071,.9988400928243242,.9988462506059631,.9988523784323132,.9988584764334819,.9988645447390951,.9988705834782999,.9988765927797647,.9988825727716812,.9988885235817656,.9988944453372599,.9989003381649333,.9989062021910834,.9989120375415379,.9989178443416555,.9989236227163274,.9989293727899787,.9989350946865697,.998940788529597,.9989464544420954,.9989520925466384,.9989577029653404,.9989632858198572,.998968841231388,.9989743693206764,.9989798702080116,.9989853440132298,.998990790855716,.9989962108544042,.9990016041277799,.9990069707938809,.9990123109702982,.9990176247741779,.9990229123222224,.9990281737306916,.9990334091154038,.999038618591738,.9990438022746341,.9990489602785947,.9990540927176865,.9990591997055416,.9990642813553582,.9990693377799026,.99907436909151,.9990793754020864,.9990843568231088,.9990893134656276,.9990942454402671,.9990991528572275,.9991040358262852,.9991088944567947,.9991137288576902,.999118539137486,.9991233254042783,.9991280877657462,.9991328263291535,.9991375412013491,.999142232488769,.9991469002974372,.9991515447329671,.9991561659005623,.9991607639050186,.9991653388507248,.9991698908416636,.9991744199814138,.9991789263731504,.9991834101196467,.9991878713232755,.9991923100860093,.9991967265094228,.9992011206946938,.9992054927426037,.9992098427535396,.9992141708274952,.9992184770640717,.9992227615624796,.9992270244215393,.9992312657396831,.9992354856149557,.9992396841450154,.9992438614271358,.9992480175582069,.9992521526347359,.9992562667528487,.9992603600082911,.9992644324964299,.9992684843122542,.9992725155503765,.9992765263050338,.999280516670089,.999284486739032,.9992884366049808,.9992923663606826,.9992962760985155,.9993001659104889,.9993040358882451,.9993078861230608,.9993117167058474,.9993155277271529,.999319319277163,.9993230914457016,.9993268443222328,.9993305779958618,.9993342925553356,.9993379880890445,.9993416646850238,.9993453224309538,.9993489614141617,.9993525817216228,.9993561834399612,.9993597666554512,.9993633314540185,.9993668779212411,.9993704061423506,.9993739162022335,.9993774081854317,.9993808821761445,.9993843382582288,.9993877765152013,.9993911970302383,.9993945998861778,.9993979851655208,.9994013529504312,.9994047033227381,.9994080363639363,.9994113521551875,.9994146507773217,.9994179323108379,.9994211968359052,.9994244444323646,.9994276751797287,.9994308891571844,.9994340864435928,.9994372671174909,.9994404312570924,.9994435789402887,.9994467102446506,.9994498252474285,.9994529240255541,.9994560066556412,.9994590732139869,.9994621237765724,.9994651584190646,.9994681772168166,.9994711802448689,.9994741675779509,.9994771392904814,.9994800954565697,.999483036150017,.9994859614443171,.9994888714126579,.9994917661279218,.9994946456626872,.9994975100892295,.999500359479522,.9995031939052369,.9995060134377466,.9995088181481243,.9995116081071456,.9995143833852889,.999517144052737,.9995198901793774,.9995226218348043,.9995253390883188,.9995280420089301,.9995307306653568,.9995334051260275,.9995360654590824,.9995387117323732,.9995413440134656,.999543962369639,.9995465668678883,.9995491575749244,.9995517345571753,.9995542978807875,.9995568476116267,.9995593838152782,.999561906557049,.9995644159019681,.9995669119147873,.9995693946599828,.9995718642017558,.9995743206040332,.9995767639304692,.9995791942444461,.9995816116090743,.9995840160871952,.99958640774138,.9995887866339324,.9995911528268883,.9995935063820176,.999595847360825,.9995981758245502,.9996004918341701,.9996027954503985,.999605086733688,.9996073657442303,.9996096325419573,.9996118871865427,.9996141297374015,.9996163602536923,.9996185787943176,.9996207854179248,.9996229801829071,.9996251631474043,.9996273343693044,.9996294939062433,.9996316418156069,.9996337781545312,.9996359029799038,.9996380163483641,.9996401183163052,.9996422089398735,.999644288274971,.999646356377255,.9996484133021397,.9996504591047971,.9996524938401572,.9996545175629098,.9996565303275047,.9996585321881528,.9996605231988274,.9996625034132641,.9996644728849626,.9996664316671874,.999668379812968,.9996703173751005,.9996722444061484,.9996741609584433,.9996760670840852,.9996779628349446,.9996798482626623,.9996817234186506,.9996835883540943,.9996854431199514,.9996872877669539,.9996891223456087,.9996909469061984,.9996927614987825,.9996945661731974,.9996963609790581,.9996981459657587,.9996999211824731,.9997016866781561,.9997034425015436,.9997051887011547,.9997069253252909,.9997086524220383,.9997103700392677,.9997120782246353,.999713777025584,.9997154664893442,.9997171466629339,.9997188175931604,.9997204793266206,.9997221319097017,.9997237753885824,.9997254098092335,.9997270352174187,.9997286516586951,.9997302591784146,.9997318578217242,.999733447633567,.9997350286586829,.9997366009416093,.9997381645266821,.9997397194580363,.9997412657796069,.9997428035351295,.9997443327681412,.9997458535219813,.9997473658397923,.99974886976452,.9997503653389154,.999751852605534,.999753331606738,.9997548023846959,.9997562649813841,.9997577194385872,.9997591657978985,.9997606041007215,.99976203438827,.9997634567015692,.9997648710814562,.9997662775685806,.9997676762034061,.9997690670262099,.9997704500770845,.999771825395938,.999773193022495,.9997745529962968,.9997759053567029,.9997772501428912,.9997785873938589,.9997799171484231,.9997812394452216,.9997825543227136,.9997838618191804,.9997851619727263,.9997864548212786,.9997877404025892,.9997890187542349,.9997902899136178,.9997915539179669,.9997928108043375,.999794060609613,.9997953033705048,.9997965391235539,.9997977679051306,.9997989897514358,.9998002046985014,.999801412782191,.9998026140382009,.9998038085020604,.9998049962091325,.999806177194615,.9998073514935402,.9998085191407767,.9998096801710297,.9998108346188409,.9998119825185903,.9998131239044961,.9998142588106157,.9998153872708462,.999816509318925,.9998176249884306,.9998187343127835,.9998198373252459,.9998209340589235,.9998220245467654,.9998231088215649,.9998241869159603,.9998252588624355,.9998263246933202,.9998273844407913,.9998284381368729,.9998294858134371,.9998305275022048,.9998315632347461,.999832593042481,.9998336169566799,.9998346350084647,.9998356472288086,.9998366536485375,.99983765429833,.9998386492087187,.9998396384100897,.9998406219326846,.9998415998066,.9998425720617885,.9998435387280595,.9998444998350793,.9998454554123721,.9998464054893206,.9998473500951663,.9998482892590103,.9998492230098137,.9998501513763987,.9998510743874482,.9998519920715077,.9998529044569845,.9998538115721493,.9998547134451362,.9998556101039439,.9998565015764352,.9998573878903388,.9998582690732492,.9998591451526267,.9998600161557997,.9998608821099632,.9998617430421809,.9998625989793851,.9998634499483772,.9998642959758285,.9998651370882806,.9998659733121461,.9998668046737089,.9998676311991251,.9998684529144232,.9998692698455047,.999870082018145,.9998708894579934,.999871692190574,.9998724902412862,.9998732836354051,.9998740723980819,.9998748565543449,.9998756361290999,.9998764111471301,.9998771816330975,.9998779476115428,.9998787091068863,.999879466143428,.9998802187453489,.9998809669367105,.9998817107414559,.9998824501834106,.999883185286282,.999883916073661,.9998846425690219,.9998853647957231,.9998860827770075,.999886796536003,.9998875060957232,.9998882114790676,.9998889127088222,.9998896098076603,.9998903027981425,.9998909917027174,.9998916765437222,.9998923573433832,.9998930341238158,.9998937069070257,.999894375714909,.9998950405692526,.9998957014917348,.9998963585039259,.9998970116272885,.9998976608831779,.9998983062928427,.9998989478774256,.999899585657963,.9999002196553864,.9999008498905224,.999901476384093,.9999020991567165,.9999027182289075,.9999033336210779,.9999039453535369,.9999045534464917,.9999051579200475,.999905758794209,.9999063560888793,.9999069498238621,.9999075400188605,.9999081266934786,.9999087098672215,.9999092895594957,.9999098657896095,.999910438576774,.9999110079401027,.9999115738986123,.9999121364712235,.9999126956767607,.999913251533953,.9999138040614348,.9999143532777452,.9999148992013297,.9999154418505395,.999915981243633,.9999165173987752,.9999170503340389,.9999175800674046,.9999181066167612,.9999186299999064,.9999191502345469,.9999196673382992,.9999201813286894,.9999206922231544,.9999212000390414,.9999217047936092,.9999222065040281,.9999227051873801,.9999232008606601,.9999236935407753,.9999241832445462,.9999246699887072,.9999251537899063,.9999256346647061,.9999261126295836,.9999265877009316,.9999270598950578,.9999275292281861,.9999279957164566,.9999284593759264,.9999289202225693,.9999293782722767,.9999298335408578,.9999302860440401,.9999307357974695,.9999311828167111,.9999316271172493,.9999320687144879,.9999325076237512,.9999329438602836,.9999333774392507,.9999338083757388,.999934236684756,.9999346623812325,.9999350854800204,.9999355059958946,.9999359239435531,.9999363393376172,.9999367521926316,.9999371625230653,.999937570343312,.9999379756676896,.9999383785104414,.9999387788857365,.999939176807669,.9999395722902599,.9999399653474563,.9999403559931324,.9999407442410893,.9999411301050559,.999941513598689,.9999418947355733,.9999422735292222,.999942649993078,.9999430241405124,.9999433959848263,.9999437655392507,.9999441328169468,.9999444978310063,.9999448605944516,.9999452211202369,.999945579421247,.9999459355102993,.9999462894001431,.99994664110346,.9999469906328647,.9999473380009051,.9999476832200621,.9999480263027508,.9999483672613201,.9999487061080534,.9999490428551687,.9999493775148194,.9999497100990935,.9999500406200154,.9999503690895449,.9999506955195783,.9999510199219482,.9999513423084245,.9999516626907139,.9999519810804605,.9999522974892463,.9999526119285915,.9999529244099543,.9999532349447319,.99995354354426,.9999538502198142,.9999541549826089,.9999544578437988,.9999547588144785,.9999550579056832,.9999553551283883,.9999556504935109,.9999559440119087,.9999562356943813,.99995652555167,.9999568135944583,.9999570998333719,.9999573842789794,.9999576669417921,.9999579478322648,.9999582269607954,.999958504337726,.9999587799733426,.9999590538778753,.999959326061499,.9999595965343334,.9999598653064434,.9999601323878393,.9999603977884768,.9999606615182579,.9999609235870305,.9999611840045891,.9999614427806749,.9999616999249761,.999961955447128,.9999622093567136,.9999624616632635,.9999627123762564,.9999629615051193,.9999632090592276,.9999634550479055,.9999636994804263,.9999639423660125,.9999641837138362,.9999644235330193,.9999646618326337,.9999648986217015,.9999651339091953,.9999653677040387,.999965600015106,.999965830851223,.999966060221167,.9999662881336667,.9999665145974033,.9999667396210096,.9999669632130714,.9999671853821269,.9999674061366673,.999967625485137,.9999678434359336,.9999680599974086,.9999682751778671,.9999684889855686,.9999687014287265,.9999689125155091,.9999691222540394,.9999693306523952,.9999695377186097,.9999697434606717,.9999699478865252,.9999701510040705,.9999703528211641,.9999705533456184,.9999707525852026,.9999709505476428,.999971147240622,.9999713426717802,.9999715368487153,.9999717297789823,.9999719214700945,.999972111929523,.9999723011646972,.9999724891830052,.9999726759917935,.9999728615983678,.9999730460099928,.9999732292338924,.9999734112772504,.9999735921472099,.9999737718508742,.9999739503953068,.9999741277875313,.999974304034532,.9999744791432541,.9999746531206036,.9999748259734476,.9999749977086146,.9999751683328949,.99997533785304,.999975506275764,.9999756736077426,.9999758398556141,.9999760050259793,.9999761691254015,.9999763321604075,.9999764941374863,.9999766550630912,.9999768149436381,.999976973785507,.9999771315950419,.9999772883785503,.9999774441423045,.9999775988925408,.9999777526354604,.9999779053772291,.9999780571239777,.999978207881802,.9999783576567635,.9999785064548887,.9999786542821703,.9999788011445663,.9999789470480013,.9999790919983657,.9999792360015164,.999979379063277,.9999795211894377,.9999796623857555,.9999798026579548,.9999799420117269,.9999800804527308,.999980217986593,.9999803546189076,.9999804903552368,.999980625201111,.9999807591620287,.9999808922434568,.9999810244508309,.9999811557895554,.9999812862650035,.9999814158825174,.999981544647409,.999981672564959,.9999817996404181,.9999819258790067,.999982051285915,.9999821758663031,.9999822996253015,.9999824225680112,.9999825446995033,.99998266602482,.9999827865489742,.9999829062769496,.9999830252137013,.9999831433641556,.9999832607332102,.9999833773257344,.9999834931465692,.9999836082005277,.999983722492395,.999983836026928,.9999839488088565,.9999840608428826,.9999841721336808,.9999842826858987,.9999843925041566,.999984501593048,.9999846099571394,.9999847176009713,.9999848245290568,.9999849307458831,.9999850362559114,.9999851410635765,.9999852451732872,.9999853485894268,.9999854513163526,.9999855533583969,.999985654719866,.9999857554050412,.9999858554181789,.9999859547635103,.9999860534452416,.9999861514675548,.9999862488346066,.99998634555053,.9999864416194333,.9999865370454005,.9999866318324918,.9999867259847435,.9999868195061677,.9999869124007534,.9999870046724658,.9999870963252466,.9999871873630143,.9999872777896642,.9999873676090687,.9999874568250773,.9999875454415165,.9999876334621903,.9999877208908803,.9999878077313453,.9999878939873221,.9999879796625255,.9999880647606478,.9999881492853597,.99998823324031,.9999883166291259,.9999883994554127,.9999884817227547,.9999885634347147,.9999886445948339,.9999887252066332,.9999888052736117,.9999888847992482,.9999889637870004,.9999890422403055,.9999891201625802,.9999891975572208,.9999892744276031,.999989350777083,.9999894266089959,.9999895019266577,.9999895767333643,.9999896510323916,.999989724826996,.9999897981204147,.9999898709158648,.9999899432165447,.9999900150256333,.9999900863462904,.9999901571816568,.9999902275348547,.9999902974089869,.9999903668071382,.9999904357323742,.9999905041877425,.9999905721762721,.9999906397009737,.9999907067648398,.9999907733708452,.9999908395219462,.9999909052210816,.9999909704711721,.9999910352751212,.9999910996358145,.9999911635561199,.9999912270388887,.9999912900869539,.9999913527031321,.9999914148902226,.9999914766510075,.9999915379882524,.9999915989047056,.999991659403099,.9999917194861478,.9999917791565509,.9999918384169905,.9999918972701324,.9999919557186264,.9999920137651062,.999992071412189,.9999921286624766,.9999921855185544,.9999922419829924,.9999922980583447,.9999923537471498,.9999924090519307,.9999924639751948,.9999925185194346,.9999925726871269,.9999926264807335,.999992679902701,.9999927329554612,.9999927856414307,.9999928379630115,.9999928899225907,.9999929415225408,.9999929927652198,.9999930436529709,.9999930941881232,.9999931443729915,.9999931942098759,.9999932437010627,.9999932928488241,.9999933416554181,.999993390123089,.999993438254067,.9999934860505686,.9999935335147967,.9999935806489405,.9999936274551758,.9999936739356647,.9999937200925562,.9999937659279856,.9999938114440753,.9999938566429344,.999993901526659,.999993946097332,.9999939903570239,.9999940343077915,.9999940779516797,.99999412129072,.9999941643269314,.9999942070623209,.9999942494988823,.9999942916385973,.9999943334834352,.9999943750353532,.9999944162962958,.999994457268196,.9999944979529743,.9999945383525394,.999994578468788,.999994618303605,.9999946578588633,.9999946971364245,.9999947361381382,.9999947748658425,.999994813321364,.9999948515065179,.9999948894231079,.9999949270729266,.999994964457755,.9999950015793634,.9999950384395105,.9999950750399442,.9999951113824014,.9999951474686081,.9999951833002791,.9999952188791189,.9999952542068211,.9999952892850684,.9999953241155332,.9999953586998771,.9999953930397514,.9999954271367968,.9999954609926438,.9999954946089126,.999995527987213,.9999955611291448,.9999955940362975,.9999956267102506,.9999956591525736,.9999956913648262,.999995723348558,.999995755105309,.9999957866366092,.9999958179439788,.9999958490289289,.9999958798929603,.9999959105375648,.9999959409642244,.9999959711744117,.9999960011695902,.9999960309512137,.999996060520727,.9999960898795656,.9999961190291559,.9999961479709151,.9999961767062515,.9999962052365642,.9999962335632436,.9999962616876712,.9999962896112193,.999996317335252,.9999963448611241,.9999963721901821,.9999963993237638,.9999964262631985,.9999964530098068,.9999964795649008,.9999965059297844,.999996532105753,.9999965580940937,.9999965838960855,.9999966095129987,.999996634946096,.9999966601966317,.9999966852658521,.9999967101549952,.9999967348652915,.9999967593979632,.9999967837542248,.999996807935283,.9999968319423365,.9999968557765764,.9999968794391861,.9999969029313415,.9999969262542105,.999996949408954,.9999969723967249,.9999969952186689,.9999970178759242,.9999970403696216,.9999970627008846,.9999970848708295,.9999971068805652,.9999971287311936,.9999971504238093,.9999971719594997,.9999971933393454,.9999972145644198,.9999972356357893,.9999972565545135,.999997277321645,.9999972979382296,.999997318405306,.9999973387239067,.999997358895057,.9999973789197758,.999997398799075,.9999974185339603,.9999974381254304,.999997457574478,.9999974768820888,.9999974960492424,.9999975150769117,.9999975339660636,.9999975527176584,.9999975713326501,.9999975898119866,.9999976081566095,.9999976263674542,.9999976444454499,.99999766239152,.9999976802065814,.9999976978915454,.999997715447317,.9999977328747952,.9999977501748736,.9999977673484393,.9999977843963738,.9999978013195528,.9999978181188465,.9999978347951188,.9999978513492284,.999997867782028,.9999978840943649,.9999979002870806,.9999979163610111,.9999979323169872,.9999979481558336,.99999796387837,.9999979794854107,.9999979949777642,.9999980103562339,.9999980256216181,.9999980407747093,.9999980558162953,.9999980707471582,.9999980855680751,.9999981002798181,.9999981148831537,.9999981293788438,.9999981437676452,.9999981580503092,.9999981722275826,.999998186300207,.9999982002689191,.9999982141344507,.9999982278975286,.999998241558875,.999998255119207,.9999982685792372,.9999982819396732,.999998295201218,.9999983083645699,.9999983214304224,.9999983343994645,.9999983472723807,.9999983600498504,.9999983727325492,.9999983853211476,.9999983978163118,.9999984102187036,.9999984225289802,.9999984347477945,.999998446875795,.9999984589136257,.9999984708619267,.9999984827213332,.9999984944924767,.9999985061759838,.9999985177724777,.9999985292825767,.9999985407068952,.9999985520460435,.9999985633006278,.9999985744712501,.9999985855585083,.9999985965629965,.9999986074853046,.9999986183260186,.9999986290857202,.9999986397649878,.9999986503643954,.9999986608845134,.9999986713259079,.9999986816891417,.9999986919747735,.9999987021833583,.9999987123154472,.9999987223715877,.9999987323523236,.9999987422581949,.9999987520897379,.9999987618474854,.9999987715319665,.9999987811437067,.9999987906832281,.9999988001510488,.9999988095476838,.9999988188736445,.9999988281294387,.9999988373155708,.9999988464325418,.9999988554808491,.999998864460987,.9999988733734462,.999998882218714,.9999988909972747,.9999988997096089,.9999989083561941,.9999989169375046,.9999989254540114,.999998933906182,.9999989422944812,.99999895061937,.9999989588813071,.9999989670807471,.9999989752181422,.999998983293941,.9999989913085894,.9999989992625299,.9999990071562023,.9999990149900431,.9999990227644859,.9999990304799614,.9999990381368972,.9999990457357179,.9999990532768454,.9999990607606984,.9999990681876931,.9999990755582426,.9999990828727571,.9999990901316439,.9999990973353077,.9999991044841503,.9999991115785708,.9999991186189654,.9999991256057276,.9999991325392483,.9999991394199156,.9999991462481148,.9999991530242288,.9999991597486376,.9999991664217186,.9999991730438467,.9999991796153941,.9999991861367304,.9999991926082229,.9999991990302358,.9999992054031314,.9999992117272689,.9999992180030054,.9999992242306953,.9999992304106908,.9999992365433413,.9999992426289941,.9999992486679936,.9999992546606824,.9999992606074003,.9999992665084849,.9999992723642712,.9999992781750923,.9999992839412785,.9999992896631581,.9999992953410569,.9999993009752988,.9999993065662048,.9999993121140943,.9999993176192841,.9999993230820888,.9999993285028208,.9999993338817905,.999999339219306,.999999344515673,.9999993497711953,.9999993549861748,.9999993601609106,.9999993652957005,.9999993703908397,.9999993754466213,.9999993804633366,.9999993854412748,.9999993903807227,.9999993952819656,.9999994001452864,.9999994049709664,.9999994097592844,.9999994145105177,.9999994192249413,.9999994239028285,.9999994285444505,.9999994331500766,.9999994377199743,.9999994422544094,.9999994467536452,.9999994512179438,.9999994556475649,.9999994600427666,.9999994644038055,.9999994687309358,.9999994730244103,.9999994772844797,.9999994815113932,.999999485705398,.9999994898667398,.9999994939956623,.9999994980924077,.9999995021572163,.9999995061903266,.9999995101919757,.9999995141623989,.9999995181018296,.9999995220104998,.9999995258886398,.9999995297364781,.9999995335542419,.9999995373421563,.9999995411004452,.9999995448293307,.9999995485290335,.9999995521997724,.999999555841765,.9999995594552271,.999999563040373,.9999995665974154,.9999995701265657,.9999995736280336,.9999995771020274,.9999995805487536,.9999995839684178,.9999995873612236,.9999995907273735,.9999995940670682,.9999995973805071,.9999996006678884,.9999996039294085,.9999996071652626,.9999996103756446,.9999996135607465,.9999996167207597,.9999996198558735,.9999996229662762,.9999996260521548,.9999996291136947,.99999963215108,.9999996351644937,.9999996381541174,.9999996411201312,.999999644062714,.9999996469820435,.9999996498782959,.9999996527516465,.9999996556022689,.9999996584303357,.9999996612360181,.9999996640194864,.9999996667809091,.999999669520454,.9999996722382875,.9999996749345745,.9999996776094793,.9999996802631644,.9999996828957916,.9999996855075212,.9999996880985124,.9999996906689234,.999999693218911,.9999996957486312,.9999996982582385,.9999997007478866,.9999997032177278,.9999997056679133,.9999997080985934,.9999997105099173,.9999997129020329,.9999997152750871,.999999717629226,.9999997199645941,.9999997222813353,.9999997245795922,.9999997268595064,.9999997291212187,.9999997313648685,.9999997335905945,.999999735798534,.9999997379888237,.9999997401615992,.9999997423169948,.9999997444551443,.99999974657618,.9999997486802337,.999999750767436,.9999997528379163,.9999997548918037,.9999997569292257,.9999997589503092,.9999997609551802,.9999997629439635,.9999997649167831,.9999997668737624,.9999997688150233,.9999997707406872,.9999997726508747,.9999997745457051,.9999997764252972,.9999997782897688,.9999997801392367,.9999997819738169,.9999997837936248,.9999997855987744,.9999997873893794,.9999997891655525,.9999997909274054,.9999997926750491,.9999997944085938,.9999997961281487,.9999997978338224,.9999997995257227,.9999998012039565,.9999998028686299,.9999998045198482,.999999806157716,.9999998077823371,.9999998093938146,.9999998109922505,.9999998125777465,.9999998141504032,.9999998157103207,.9999998172575981,.999999818792334,.9999998203146261,.9999998218245714,.9999998233222663,.9999998248078062,.9999998262812863,.9999998277428005,.9999998291924423,.9999998306303045,.9999998320564791,.9999998334710577,.9999998348741307,.9999998362657884,.9999998376461198,.9999998390152138,.9999998403731585,.999999841720041,.9999998430559481,.999999844380966,.9999998456951799,.9999998469986745,.9999998482915341,.9999998495738421,.9999998508456814,.9999998521071343,.9999998533582822,.9999998545992063,.999999855829987,.9999998570507038,.9999998582614362,.9999998594622628,.9999998606532614,.9999998618345095,.9999998630060839,.999999864168061,.9999998653205162,.9999998664635248,.9999998675971613,.9999998687214996,.9999998698366132,.9999998709425748,.9999998720394568,.9999998731273311,.9999998742062687,.9999998752763404,.9999998763376162,.9999998773901658,.9999998784340584,.9999998794693622,.9999998804961456,.9999998815144759,.9999998825244202,.999999883526045,.9999998845194162,.9999998855045994,.9999998864816595,.999999887450661,.999999888411668,.9999998893647438,.9999998903099517,.9999998912473542,.9999998921770132,.9999998930989905,.9999998940133472,.9999998949201439,.9999998958194407,.9999998967112975,.9999998975957736,.9999998984729278,.9999998993428184,.9999999002055034,.9999999010610404,.9999999019094864,.9999999027508979,.9999999035853312,.999999904412842,.9999999052334857,.9999999060473171,.9999999068543908,.9999999076547608,.9999999084484806,.9999999092356038,.9999999100161828,.9999999107902704,.9999999115579185,.9999999123191786,.999999913074102,.9999999138227396,.9999999145651417,.9999999153013585,.9999999160314396,.9999999167554341,.9999999174733912,.9999999181853593,.9999999188913865,.9999999195915207,.9999999202858092,.9999999209742991,.9999999216570371,.9999999223340694,.999999923005442,.9999999236712007,.9999999243313906,.9999999249860566,.9999999256352432,.9999999262789947,.999999926917355,.9999999275503675,.9999999281780756,.9999999288005219,.9999999294177492,.9999999300297994,.9999999306367146,.9999999312385361,.9999999318353056,.9999999324270634,.9999999330138505,.9999999335957069,.9999999341726727,.9999999347447877,.9999999353120909,.9999999358746215,.9999999364324182,.9999999369855195,.9999999375339633,.9999999380777876,.9999999386170301,.9999999391517276,.9999999396819174,.999999940207636,.9999999407289198,.9999999412458049,.9999999417583272,.999999942266522,.9999999427704247,.9999999432700704,.9999999437654934,.9999999442567284,.9999999447438097,.9999999452267709,.9999999457056458,.9999999461804676,.9999999466512696,.9999999471180845,.9999999475809448,.999999948039883,.9999999484949312,.999999948946121,.9999999493934841,.999999949837052,.9999999502768554,.9999999507129254,.9999999511452924,.9999999515739869,.9999999519990389,.9999999524204785,.999999952838335,.9999999532526379,.9999999536634165,.9999999540706997,.9999999544745162,.9999999548748943,.9999999552718626,.9999999556654489,.999999956055681,.9999999564425865,.999999956826193,.9999999572065275,.9999999575836167,.9999999579574878,.9999999583281669,.9999999586956806,.9999999590600549,.9999999594213156,.9999999597794885,.999999960134599,.9999999604866725,.9999999608357341,.9999999611818084,.9999999615249204,.9999999618650944,.9999999622023549,.9999999625367257,.999999962868231,.9999999631968943,.9999999635227392,.999999963845789,.9999999641660671,.9999999644835962,.9999999647983991,.9999999651104985,.9999999654199169,.9999999657266763,.999999966030799,.9999999663323067,.9999999666312214,.9999999669275643,.9999999672213571,.9999999675126208,.9999999678013763,.9999999680876448,.9999999683714469,.9999999686528029,.9999999689317335,.9999999692082586,.9999999694823984,.9999999697541728,.9999999700236014,.999999970290704,.9999999705554997,.9999999708180078,.9999999710782477,.9999999713362381,.9999999715919977,.9999999718455453,.9999999720968994,.9999999723460782,.9999999725931,.9999999728379828,.9999999730807446,.999999973321403,.9999999735599757,.9999999737964803,.9999999740309339,.9999999742633536,.9999999744937569,.9999999747221603,.9999999749485807,.9999999751730348,.9999999753955391,.99999997561611,.9999999758347635,.999999976051516,.9999999762663835,.9999999764793815,.9999999766905261,.9999999768998327,.9999999771073167,.9999999773129936,.9999999775168786,.9999999777189867,.999999977919333,.9999999781179323,.9999999783147994,.9999999785099486,.9999999787033947,.999999978895152,.9999999790852349,.9999999792736571,.9999999794604331,.9999999796455765,.9999999798291014,.9999999800110212,.9999999801913495,.9999999803701,.9999999805472858,.9999999807229203,.9999999808970166,.9999999810695877,.9999999812406464,.9999999814102057,.9999999815782784,.9999999817448769,.9999999819100138,.9999999820737014,.9999999822359522,.9999999823967783,.9999999825561918,.9999999827142046,.9999999828708288,.9999999830260761,.9999999831799581,.9999999833324866,.9999999834836731,.9999999836335289,.9999999837820654,.999999983929294,.9999999840752255,.9999999842198712,.9999999843632421,.9999999845053489,.9999999846462025,.9999999847858135,.9999999849241926,.9999999850613503,.999999985197297,.9999999853320432,.9999999854655989,.9999999855979743,.9999999857291797,.999999985859225,.9999999859881201,.9999999861158749,.9999999862424992,.9999999863680026,.9999999864923947,.9999999866156851,.9999999867378832,.9999999868589983,.9999999869790398,.9999999870980169,.9999999872159386,.9999999873328141,.9999999874486525,.9999999875634624,.9999999876772528,.9999999877900326,.9999999879018102,.9999999880125945,.9999999881223939,.9999999882312168,.9999999883390719,.9999999884459672,.9999999885519111,.9999999886569119,.9999999887609775,.9999999888641162,.9999999889663359,.9999999890676445,.99999998916805,.99999998926756,.9999999893661823,.9999999894639247,.9999999895607946,.9999999896567996,.9999999897519473,.9999999898462449,.9999999899397001,.9999999900323198,.9999999901241114,.9999999902150822,.9999999903052391,.9999999903945893,.9999999904831397,.9999999905708973,.9999999906578688,.9999999907440613,.9999999908294814,.9999999909141358,.9999999909980313,.9999999910811742,.9999999911635713,.9999999912452289,.9999999913261536,.9999999914063517,.9999999914858294,.9999999915645932,.9999999916426491,.9999999917200033,.9999999917966621,.9999999918726314,.9999999919479172,.9999999920225255,.9999999920964623,.9999999921697332,.9999999922423443,.9999999923143011,.9999999923856094,.9999999924562751,.9999999925263034,.9999999925957003,.9999999926644709,.9999999927326211,.999999992800156,.999999992867081,.9999999929334016,.999999992999123,.9999999930642505,.9999999931287892,.9999999931927444,.999999993256121,.9999999933189243,.9999999933811592,.9999999934428307,.9999999935039439,.9999999935645035,.9999999936245144,.9999999936839815,.9999999937429095,.9999999938013031,.999999993859167,.9999999939165061,.9999999939733247,.9999999940296276,.9999999940854193,.9999999941407041,.9999999941954867,.9999999942497714,.9999999943035627,.9999999943568648,.9999999944096821,.9999999944620188,.9999999945138793,.9999999945652677,.9999999946161882,.9999999946666448,.9999999947166417,.9999999947661831,.9999999948152728,.9999999948639148,.9999999949121132,.9999999949598719,.9999999950071947,.9999999950540855,.9999999951005483,.9999999951465866,.9999999951922043,.9999999952374051,.9999999952821927,.9999999953265708,.999999995370543,.9999999954141129,.999999995457284,.99999999550006,.9999999955424443,.9999999955844405,.9999999956260518,.9999999956672819,.9999999957081339,.9999999957486115,.9999999957887178,.9999999958284561,.9999999958678297,.999999995906842,.999999995945496,.9999999959837951,.9999999960217422,.9999999960593406,.9999999960965935,.9999999961335039,.9999999961700747,.9999999962063091,.9999999962422101,.9999999962777807,.9999999963130237,.9999999963479421,.9999999963825389,.9999999964168169,.9999999964507789,.9999999964844278,.9999999965177664,.9999999965507974,.9999999965835236,.9999999966159477,.9999999966480726,.9999999966799007,.9999999967114348,.9999999967426776,.9999999967736315,.9999999968042993,.9999999968346834,.9999999968647866,.9999999968946112,.9999999969241598,.9999999969534347,.9999999969824386,.9999999970111738,.9999999970396427,.9999999970678478,.9999999970957915,.999999997123476,.9999999971509037,.999999997178077,.999999997204998,.9999999972316691,.9999999972580926,.9999999972842706,.9999999973102055,.9999999973358993,.9999999973613541,.9999999973865724,.9999999974115561,.9999999974363074,.9999999974608283,.9999999974851209,.9999999975091874,.9999999975330297,.9999999975566499,.99999999758005,.999999997603232,.9999999976261978,.9999999976489494,.9999999976714888,.9999999976938179,.9999999977159385,.9999999977378526,.999999997759562,.9999999977810687,.9999999978023744,.9999999978234809,.9999999978443901,.9999999978651037,.9999999978856237,.9999999979059516,.9999999979260893,.9999999979460383,.9999999979658007,.9999999979853779,.9999999980047717,.9999999980239836,.9999999980430155,.999999998061869,.9999999980805456,.9999999980990469,.9999999981173747,.9999999981355304,.9999999981535156,.9999999981713319,.9999999981889808,.9999999982064638,.9999999982237825,.9999999982409384,.999999998257933,.9999999982747676,.9999999982914438,.999999998307963,.9999999983243267,.9999999983405364,.9999999983565933,.9999999983724989,.9999999983882546,.9999999984038618,.9999999984193217,.9999999984346358,.9999999984498055,.999999998464832,.9999999984797165,.9999999984944606,.9999999985090654,.9999999985235323,.9999999985378624,.9999999985520569,.9999999985661173,.9999999985800447,.9999999985938404,.9999999986075054,.9999999986210412,.9999999986344488,.9999999986477294,.9999999986608841,.9999999986739142,.9999999986868209,.9999999986996051,.9999999987122681,.9999999987248109,.9999999987372348,.9999999987495407,.9999999987617298,.9999999987738032,.9999999987857618,.9999999987976069,.9999999988093394,.9999999988209604,.9999999988324707,.9999999988438717,.9999999988551642,.9999999988663492,.9999999988774277,.9999999988884007,.9999999988992694,.9999999989100343,.9999999989206968,.9999999989312576,.9999999989417176,.999999998952078,.9999999989623395,.999999998972503,.9999999989825696,.9999999989925401,.9999999990024154,.9999999990121963,.9999999990218839,.9999999990314787,.9999999990409819,.9999999990503942,.9999999990597165,.9999999990689495,.9999999990780942,.9999999990871514,.9999999990961219,.9999999991050064,.9999999991138059,.9999999991225209,.9999999991311526,.9999999991397014,.9999999991481682,.9999999991565538,.9999999991648589,.9999999991730844,.9999999991812308,.999999999189299,.9999999991972898,.9999999992052038,.9999999992130417,.9999999992208043,.9999999992284921,.9999999992361062,.9999999992436469,.999999999251115,.9999999992585114,.9999999992658364,.9999999992730909,.9999999992802755,.9999999992873909,.9999999992944377,.9999999993014167,.9999999993083283,.9999999993151731,.999999999321952,.9999999993286655,.9999999993353141,.9999999993418985,.9999999993484194,.9999999993548773,.9999999993612727,.9999999993676063,.9999999993738786,.9999999993800903,.999999999386242,.9999999993923341,.9999999993983673,.9999999994043419,.9999999994102589,.9999999994161184,.9999999994219211,.9999999994276677,.9999999994333585,.9999999994389941,.9999999994445751,.999999999450102,.9999999994555752,.9999999994609953,.9999999994663628,.9999999994716781,.9999999994769417,.9999999994821542,.9999999994873161,.9999999994924278,.9999999994974899,.9999999995025025,.9999999995074665,.9999999995123822,.99999999951725,.9999999995220704,.9999999995268438,.9999999995315708,.9999999995362517,.999999999540887,.999999999545477,.9999999995500224,.9999999995545233,.9999999995589803,.9999999995633939,.9999999995677644,.9999999995720922,.9999999995763776,.9999999995806214,.9999999995848234,.9999999995889846,.999999999593105,.9999999995971851,.9999999996012253,.9999999996052259,.9999999996091874,.9999999996131101,.9999999996169945,.9999999996208406,.9999999996246492,.9999999996284205,.9999999996321547,.9999999996358524,.9999999996395138,.9999999996431392,.9999999996467291,.9999999996502837,.9999999996538035,.9999999996572887,.9999999996607396,.9999999996641566,.99999999966754,.9999999996708903,.9999999996742075,.9999999996774921,.9999999996807444,.9999999996839647,.9999999996871533,.9999999996903104,.9999999996934366,.9999999996965319,.9999999996995966,.9999999997026312,.9999999997056359,.999999999708611,.9999999997115566,.9999999997144733,.9999999997173611,.9999999997202205,.9999999997230515,.9999999997258547,.9999999997286302,.9999999997313782,.999999999734099,.999999999736793,.9999999997394603,.9999999997421012,.9999999997447161,.9999999997473049,.9999999997498683,.9999999997524062,.9999999997549189,.9999999997574068,.9999999997598701,.9999999997623089,.9999999997647235,.9999999997671142,.9999999997694812,.9999999997718246,.9999999997741449,.999999999776442,.9999999997787165,.9999999997809682,.9999999997831976,.9999999997854049,.9999999997875902,.9999999997897538,.9999999997918959,.9999999997940167,.9999999997961163,.9999999997981951,.9999999998002532,.9999999998022907,.9999999998043081,.9999999998063053,.9999999998082825,.9999999998102401,.9999999998121781,.9999999998140969,.9999999998159965,.9999999998178771,.999999999819739,.9999999998215823,.9999999998234071,.9999999998252137,.9999999998270024,.9999999998287731,.9999999998305261,.9999999998322616,.9999999998339797,.9999999998356807,.9999999998373645,.9999999998390317,.999999999840682,.9999999998423159,.9999999998439334,.9999999998455347,.99999999984712,.9999999998486893,.9999999998502429,.9999999998517809,.9999999998533036,.9999999998548109,.9999999998563031,.9999999998577803,.9999999998592427,.9999999998606903,.9999999998621235,.9999999998635423,.9999999998649468,.9999999998663371,.9999999998677135,.9999999998690761,.9999999998704249,.9999999998717601,.999999999873082,.9999999998743905,.9999999998756858,.9999999998769681,.9999999998782375,.9999999998794941,.999999999880738,.9999999998819693,.9999999998831882,.9999999998843948,.9999999998855893,.9999999998867717,.9999999998879421,.9999999998891007,.9999999998902477,.999999999891383,.9999999998925069,.9999999998936194,.9999999998947207,.9999999998958108,.9999999998968898,.999999999897958,.9999999998990153,.999999999900062,.999999999901098,.9999999999021236,.9999999999031387,.9999999999041436,.9999999999051383,.9999999999061229,.9999999999070975,.9999999999080622,.9999999999090171,.9999999999099624,.999999999910898,.9999999999118242,.9999999999127409,.9999999999136483,.9999999999145465,.9999999999154355,.9999999999163156,.9999999999171867,.9999999999180489,.9999999999189023,.9999999999197471,.9999999999205832,.9999999999214109,.9999999999222301,.9999999999230409,.9999999999238435,.999999999924638,.9999999999254242,.9999999999262026,.9999999999269729,.9999999999277354,.9999999999284901,.9999999999292372,.9999999999299765,.9999999999307083,.9999999999314326,.9999999999321496,.9999999999328593,.9999999999335616,.9999999999342568,.9999999999349448,.9999999999356259,.9999999999363,.9999999999369671,.9999999999376274,.999999999938281,.9999999999389279,.9999999999395681,.9999999999402018,.999999999940829,.9999999999414497,.9999999999420641,.9999999999426722,.999999999943274,.9999999999438698,.9999999999444593,.9999999999450427,.9999999999456203,.9999999999461918,.9999999999467576,.9999999999473175,.9999999999478716,.9999999999484199,.9999999999489627,.9999999999495,.9999999999500316,.9999999999505578,.9999999999510786,.9999999999515939,.9999999999521041,.9999999999526089,.9999999999531086,.9999999999536031,.9999999999540925,.9999999999545768,.9999999999550562,.9999999999555306,.9999999999560001,.9999999999564647,.9999999999569246,.9999999999573796,.9999999999578301,.9999999999582758,.9999999999587169,.9999999999591536,.9999999999595856,.9999999999600132,.9999999999604363,.9999999999608551,.9999999999612695,.9999999999616798,.9999999999620857,.9999999999624873,.9999999999628849,.9999999999632783,.9999999999636676,.999999999964053,.9999999999644342,.9999999999648116,.9999999999651851,.9999999999655546,.9999999999659203,.9999999999662822,.9999999999666404,.9999999999669948,.9999999999673456,.9999999999676927,.9999999999680362,.9999999999683761,.9999999999687125,.9999999999690454,.9999999999693748,.9999999999697008,.9999999999700234,.9999999999703426,.9999999999706586,.9999999999709712,.9999999999712805,.9999999999715867,.9999999999718896,.9999999999721894,.999999999972486,.9999999999727797,.9999999999730701,.9999999999733575,.9999999999736421,.9999999999739235,.9999999999742021,.9999999999744777,.9999999999747504,.9999999999750203,.9999999999752874,.9999999999755517,.9999999999758132,.999999999976072,.999999999976328,.9999999999765815,.9999999999768322,.9999999999770803,.9999999999773258,.9999999999775687,.9999999999778092,.999999999978047,.9999999999782824,.9999999999785153,.9999999999787458,.9999999999789738,.9999999999791994,.9999999999794227,.9999999999796436,.9999999999798622,.9999999999800785,.9999999999802925,.9999999999805044,.9999999999807139,.9999999999809213,.9999999999811264,.9999999999813294,.9999999999815303,.9999999999817291,.9999999999819257,.9999999999821203,.9999999999823128,.9999999999825033,.9999999999826918,.9999999999828784,.999999999983063,.9999999999832455,.9999999999834263,.999999999983605,.9999999999837819,.9999999999839568,.99999999998413,.9999999999843013,.9999999999844709,.9999999999846386,.9999999999848046,.9999999999849688,.9999999999851312,.999999999985292,.999999999985451,.9999999999856084,.999999999985764,.9999999999859182,.9999999999860706,.9999999999862214,.9999999999863706,.9999999999865181,.9999999999866642,.9999999999868087,.9999999999869517,.9999999999870931,.9999999999872331,.9999999999873715,.9999999999875085,.9999999999876441,.9999999999877782,.9999999999879109,.9999999999880421,.999999999988172,.9999999999883005,.9999999999884276,.9999999999885534,.9999999999886778,.999999999988801,.9999999999889227,.9999999999890432,.9999999999891624,.9999999999892804,.999999999989397,.9999999999895125,.9999999999896267,.9999999999897397,.9999999999898515,.999999999989962,.9999999999900715,.9999999999901797,.9999999999902869,.9999999999903928,.9999999999904976,.9999999999906013,.9999999999907039,.9999999999908054,.9999999999909058,.9999999999910051,.9999999999911033,.9999999999912006,.9999999999912967,.9999999999913919,.999999999991486,.9999999999915792,.9999999999916713,.9999999999917625,.9999999999918526,.9999999999919418,.99999999999203,.9999999999921173,.9999999999922037,.9999999999922891,.9999999999923737,.9999999999924573,.99999999999254,.9999999999926218,.9999999999927027,.9999999999927828,.9999999999928619,.9999999999929403,.9999999999930178,.9999999999930945,.9999999999931704,.9999999999932454,.9999999999933197,.9999999999933931,.9999999999934657,.9999999999935376,.9999999999936087,.999999999993679,.9999999999937486,.9999999999938173,.9999999999938854,.9999999999939527,.9999999999940193,.9999999999940853,.9999999999941505,.9999999999942148,.9999999999942787,.9999999999943417,.9999999999944041,.9999999999944659,.9999999999945269,.9999999999945873,.9999999999946471,.9999999999947062,.9999999999947646,.9999999999948225,.9999999999948798,.9999999999949363,.9999999999949923,.9999999999950476,.9999999999951025,.9999999999951567,.9999999999952102,.9999999999952632,.9999999999953156,.9999999999953675,.9999999999954188,.9999999999954695,.9999999999955197,.9999999999955694,.9999999999956185,.999999999995667,.9999999999957151,.9999999999957626,.9999999999958097,.9999999999958561,.9999999999959022,.9999999999959476,.9999999999959926,.9999999999960372,.9999999999960811,.9999999999961247,.9999999999961677,.9999999999962104,.9999999999962526,.9999999999962942,.9999999999963354,.9999999999963762,.9999999999964165,.9999999999964564,.9999999999964958,.9999999999965349,.9999999999965735,.9999999999966116,.9999999999966495,.9999999999966868,.9999999999967237,.9999999999967603,.9999999999967963,.9999999999968321,.9999999999968674,.9999999999969024,.999999999996937,.9999999999969712,.9999999999970051,.9999999999970385,.9999999999970716,.9999999999971043,.9999999999971366,.9999999999971687,.9999999999972004,.9999999999972317,.9999999999972626,.9999999999972933,.9999999999973236,.9999999999973536,.9999999999973832,.9999999999974125,.9999999999974415,.9999999999974701,.9999999999974984,.9999999999975265,.9999999999975543,.9999999999975817,.9999999999976088,.9999999999976357,.9999999999976622,.9999999999976884,.9999999999977144,.99999999999774,.9999999999977655,.9999999999977905,.9999999999978154,.99999999999784,.9999999999978643,.9999999999978882,.999999999997912,.9999999999979355,.9999999999979587,.9999999999979817,.9999999999980044,.9999999999980269,.9999999999980491,.9999999999980711,.9999999999980929,.9999999999981143,.9999999999981356,.9999999999981566,.9999999999981773,.999999999998198,.9999999999982183,.9999999999982384,.9999999999982583,.9999999999982779,.9999999999982974,.9999999999983166,.9999999999983357,.9999999999983544,.9999999999983731,.9999999999983914,.9999999999984096,.9999999999984276,.9999999999984454,.999999999998463,.9999999999984803,.9999999999984975,.9999999999985146,.9999999999985314,.999999999998548,.9999999999985645,.9999999999985808,.9999999999985969,.9999999999986128,.9999999999986285,.9999999999986441,.9999999999986594,.9999999999986746,.9999999999986897,.9999999999987046,.9999999999987192,.9999999999987338,.9999999999987482,.9999999999987624,.9999999999987765,.9999999999987904,.9999999999988042,.9999999999988177,.9999999999988312,.9999999999988445,.9999999999988577,.9999999999988707,.9999999999988836,.9999999999988962,.9999999999989088,.9999999999989212,.9999999999989335,.9999999999989456,.9999999999989577,.9999999999989696,.9999999999989814,.9999999999989929,.9999999999990045,.9999999999990158,.999999999999027,.9999999999990381,.9999999999990491,.99999999999906,.9999999999990707,.9999999999990813,.9999999999990918,.9999999999991023,.9999999999991125,.9999999999991226,.9999999999991327,.9999999999991426,.9999999999991525,.9999999999991621,.9999999999991717,.9999999999991812,.9999999999991905,.9999999999991999,.999999999999209,.9999999999992181,.9999999999992271,.999999999999236,.9999999999992447,.9999999999992534,.9999999999992619,.9999999999992704,.9999999999992788,.999999999999287,.9999999999992952,.9999999999993033,.9999999999993113,.9999999999993192,.9999999999993271,.9999999999993348,.9999999999993424,.99999999999935,.9999999999993575,.9999999999993648,.9999999999993722,.9999999999993794,.9999999999993866,.9999999999993936,.9999999999994006,.9999999999994075,.9999999999994144,.9999999999994211,.9999999999994278,.9999999999994343,.9999999999994409,.9999999999994473,.9999999999994538,.99999999999946,.9999999999994662,.9999999999994724,.9999999999994785,.9999999999994845,.9999999999994905,.9999999999994964,.9999999999995022,.999999999999508,.9999999999995136,.9999999999995193,.9999999999995248,.9999999999995304,.9999999999995358,.9999999999995411,.9999999999995465,.9999999999995517,.9999999999995569,.999999999999562,.9999999999995671,.9999999999995721,.9999999999995771,.999999999999582,.9999999999995869,.9999999999995917,.9999999999995963,.9999999999996011,.9999999999996056,.9999999999996103,.9999999999996148,.9999999999996193,.9999999999996236,.9999999999996281,.9999999999996324,.9999999999996366,.9999999999996408,.9999999999996451,.9999999999996492,.9999999999996533,.9999999999996573,.9999999999996613,.9999999999996653,.9999999999996692,.999999999999673,.9999999999996768,.9999999999996806,.9999999999996843,.9999999999996879,.9999999999996916,.9999999999996952,.9999999999996988,.9999999999997022,.9999999999997058,.9999999999997092,.9999999999997126,.9999999999997159,.9999999999997192,.9999999999997226,.9999999999997258,.999999999999729,.9999999999997321,.9999999999997353,.9999999999997384,.9999999999997414,.9999999999997444,.9999999999997474,.9999999999997504,.9999999999997533,.9999999999997562,.9999999999997591,.9999999999997619,.9999999999997647,.9999999999997674,.9999999999997702,.9999999999997728,.9999999999997755,.9999999999997782,.9999999999997807,.9999999999997834,.9999999999997858,.9999999999997884,.9999999999997908,.9999999999997934,.9999999999997957,.9999999999997982,.9999999999998005,.9999999999998029,.9999999999998052,.9999999999998075,.9999999999998097,.999999999999812,.9999999999998143,.9999999999998164,.9999999999998186,.9999999999998207,.9999999999998228,.9999999999998249,.9999999999998269,.999999999999829,.999999999999831,.999999999999833,.999999999999835,.9999999999998369,.9999999999998388,.9999999999998408,.9999999999998426,.9999999999998445,.9999999999998463,.9999999999998481,.9999999999998499,.9999999999998517,.9999999999998535,.9999999999998552,.9999999999998569,.9999999999998586,.9999999999998602,.9999999999998619,.9999999999998636,.9999999999998651,.9999999999998668,.9999999999998683,.9999999999998699,.9999999999998714,.999999999999873,.9999999999998744,.999999999999876,.9999999999998774,.9999999999998789,.9999999999998803,.9999999999998818,.9999999999998831,.9999999999998845,.9999999999998859,.9999999999998872,.9999999999998885,.9999999999998899,.9999999999998912,.9999999999998925,.9999999999998938,.9999999999998951,.9999999999998963,.9999999999998975,.9999999999998987,.9999999999999,.9999999999999012,.9999999999999023,.9999999999999035,.9999999999999046,.9999999999999057,.9999999999999069,.999999999999908,.9999999999999091,.9999999999999102,.9999999999999113,.9999999999999123,.9999999999999134,.9999999999999144,.9999999999999154,.9999999999999164,.9999999999999174,.9999999999999184,.9999999999999194,.9999999999999203,.9999999999999213,.9999999999999223,.9999999999999232,.9999999999999241,.999999999999925,.9999999999999258,.9999999999999267,.9999999999999276,.9999999999999285,.9999999999999294,.9999999999999302,.999999999999931,.9999999999999318,.9999999999999327,.9999999999999335,.9999999999999343,.999999999999935,.9999999999999358,.9999999999999366,.9999999999999374,.9999999999999382,.9999999999999389,.9999999999999396,.9999999999999404,.999999999999941,.9999999999999417,.9999999999999425,.9999999999999432,.9999999999999438,.9999999999999445,.9999999999999452,.9999999999999458,.9999999999999465,.9999999999999472,.9999999999999478,.9999999999999484,.999999999999949,.9999999999999496,.9999999999999503,.9999999999999508,.9999999999999515,.999999999999952,.9999999999999526,.9999999999999531,.9999999999999537,.9999999999999543,.9999999999999548,.9999999999999554,.9999999999999559,.9999999999999565,.999999999999957,.9999999999999575,.999999999999958,.9999999999999585,.999999999999959,.9999999999999595,.99999999999996,.9999999999999605,.9999999999999609,.9999999999999615,.9999999999999619,.9999999999999624,.9999999999999628,.9999999999999633,.9999999999999637,.9999999999999641,.9999999999999646,.999999999999965,.9999999999999655,.9999999999999659,.9999999999999662,.9999999999999667,.9999999999999671,.9999999999999675,.9999999999999679,.9999999999999682,.9999999999999687,.999999999999969,.9999999999999695,.9999999999999698,.9999999999999701,.9999999999999705,.9999999999999709,.9999999999999712,.9999999999999716,.9999999999999719,.9999999999999722,.9999999999999726,.9999999999999729,.9999999999999732,.9999999999999736,.9999999999999739,.9999999999999742,.9999999999999746,.9999999999999748,.9999999999999751,.9999999999999755,.9999999999999758,.999999999999976,.9999999999999764,.9999999999999767,.9999999999999769,.9999999999999772,.9999999999999775,.9999999999999778,.999999999999978,.9999999999999784,.9999999999999786,.9999999999999788,.9999999999999791,.9999999999999793,.9999999999999796,.9999999999999798,.9999999999999801,.9999999999999803,.9999999999999806,.9999999999999808,.999999999999981,.9999999999999812,.9999999999999815,.9999999999999817,.9999999999999819,.9999999999999821,.9999999999999823,.9999999999999826,.9999999999999828,.999999999999983,.9999999999999832,.9999999999999835,.9999999999999837,.9999999999999839,.999999999999984,.9999999999999842,.9999999999999845,.9999999999999847,.9999999999999848,.999999999999985,.9999999999999852,.9999999999999853,.9999999999999856,.9999999999999857,.9999999999999859,.9999999999999861,.9999999999999862,.9999999999999865,.9999999999999866,.9999999999999868,.9999999999999869,.9999999999999871,.9999999999999872,.9999999999999873,.9999999999999876,.9999999999999877,.9999999999999879,.999999999999988,.9999999999999881,.9999999999999883,.9999999999999885,.9999999999999886,.9999999999999887,.9999999999999889,.999999999999989,.9999999999999891,.9999999999999892,.9999999999999895,.9999999999999896,.9999999999999897,.9999999999999898,.9999999999999899,.99999999999999,.9999999999999901,.9999999999999903,.9999999999999905,.9999999999999906,.9999999999999907,.9999999999999908,.9999999999999909,.999999999999991,.9999999999999911,.9999999999999912,.9999999999999913,.9999999999999915,.9999999999999916,.9999999999999917,.9999999999999918,.9999999999999919,.9999999999999919,.999999999999992,.9999999999999921,.9999999999999922,.9999999999999923,.9999999999999925,.9999999999999926,.9999999999999927,.9999999999999927,.9999999999999928,.9999999999999929,.999999999999993,.9999999999999931,.9999999999999931,.9999999999999932,.9999999999999933,.9999999999999934,.9999999999999934,.9999999999999936,.9999999999999937,.9999999999999938,.9999999999999938,.9999999999999939,.999999999999994,.999999999999994,.9999999999999941,.9999999999999942,.9999999999999942,.9999999999999943,.9999999999999944,.9999999999999944,.9999999999999946,.9999999999999946,.9999999999999947,.9999999999999948,.9999999999999948,.9999999999999949,.9999999999999949,.999999999999995,.999999999999995,.9999999999999951,.9999999999999952,.9999999999999952,.9999999999999953,.9999999999999953,.9999999999999954,.9999999999999954,.9999999999999956,.9999999999999956,.9999999999999957,.9999999999999957,.9999999999999958,.9999999999999958,.9999999999999959,.9999999999999959,.999999999999996,.999999999999996,.9999999999999961,.9999999999999961,.9999999999999961,.9999999999999962,.9999999999999962,.9999999999999963,.9999999999999963,.9999999999999964,.9999999999999964,.9999999999999964,.9999999999999966,.9999999999999966,.9999999999999967,.9999999999999967,.9999999999999967,.9999999999999968,.9999999999999968,.9999999999999968,.9999999999999969,.9999999999999969,.9999999999999969,.999999999999997,.999999999999997,.999999999999997,.9999999999999971,.9999999999999971,.9999999999999971,.9999999999999972,.9999999999999972,.9999999999999972,.9999999999999973,.9999999999999973,.9999999999999973,.9999999999999974,.9999999999999974,.9999999999999974,.9999999999999976,.9999999999999976,.9999999999999976,.9999999999999976,.9999999999999977,.9999999999999977,.9999999999999977,.9999999999999977,.9999999999999978,.9999999999999978,.9999999999999978,.9999999999999978,.9999999999999979,.9999999999999979,.9999999999999979,.9999999999999979,.999999999999998,.999999999999998,.999999999999998,.999999999999998,.9999999999999981,.9999999999999981,.9999999999999981,.9999999999999981,.9999999999999981,.9999999999999982,.9999999999999982,.9999999999999982,.9999999999999982,.9999999999999982,.9999999999999983,.9999999999999983,.9999999999999983,.9999999999999983,.9999999999999983,.9999999999999984,.9999999999999984,.9999999999999984,.9999999999999984,.9999999999999984,.9999999999999986,.9999999999999986,.9999999999999986,.9999999999999986,.9999999999999986,.9999999999999986,.9999999999999987,.9999999999999987,.9999999999999987,.9999999999999987,.9999999999999987,.9999999999999987,.9999999999999987,.9999999999999988,.9999999999999988,.9999999999999988,.9999999999999988,.9999999999999988,.9999999999999988,.9999999999999988,.9999999999999989,.9999999999999989,.9999999999999989,.9999999999999989,.9999999999999989,.9999999999999989,.9999999999999989,.9999999999999989,.999999999999999,.999999999999999,.999999999999999,.999999999999999,.999999999999999,.999999999999999,.999999999999999,.999999999999999,.9999999999999991,.9999999999999991,.9999999999999991,.9999999999999991,.9999999999999991,.9999999999999991,.9999999999999991,.9999999999999991,.9999999999999991,.9999999999999991,.9999999999999992,.9999999999999992,.9999999999999992,.9999999999999992,.9999999999999992,.9999999999999992,.9999999999999992,.9999999999999992,.9999999999999992,.9999999999999992,.9999999999999992,.9999999999999993,.9999999999999993,.9999999999999993,.9999999999999993,.9999999999999993,.9999999999999993,.9999999999999993,.9999999999999993,.9999999999999993,.9999999999999993,.9999999999999993,.9999999999999993],X1=[-8,-7.998399839983999,-7.996799679967997,-7.995199519951996,-7.993599359935994,-7.991999199919992,-7.99039903990399,-7.988798879887989,-7.987198719871987,-7.985598559855986,-7.983998399839984,-7.982398239823983,-7.980798079807981,-7.97919791979198,-7.9775977597759775,-7.975997599759976,-7.974397439743974,-7.972797279727973,-7.971197119711971,-7.96959695969597,-7.967996799679968,-7.966396639663967,-7.964796479647965,-7.9631963196319635,-7.9615961596159615,-7.95999599959996,-7.958395839583958,-7.956795679567957,-7.955195519551955,-7.953595359535954,-7.951995199519952,-7.950395039503951,-7.948794879487949,-7.947194719471947,-7.945594559455945,-7.943994399439944,-7.942394239423942,-7.940794079407941,-7.939193919391939,-7.937593759375938,-7.935993599359936,-7.934393439343935,-7.9327932793279325,-7.931193119311931,-7.929592959295929,-7.927992799279928,-7.926392639263926,-7.924792479247925,-7.923192319231923,-7.921592159215922,-7.91999199919992,-7.9183918391839185,-7.9167916791679165,-7.915191519151915,-7.913591359135913,-7.911991199119912,-7.91039103910391,-7.908790879087909,-7.907190719071907,-7.905590559055906,-7.903990399039904,-7.9023902390239025,-7.9007900790079,-7.899189918991899,-7.897589758975897,-7.895989598959896,-7.894389438943894,-7.892789278927893,-7.891189118911891,-7.88958895889589,-7.887988798879888,-7.886388638863886,-7.884788478847884,-7.883188318831883,-7.881588158815881,-7.87998799879988,-7.878387838783878,-7.876787678767877,-7.875187518751876,-7.873587358735874,-7.871987198719872,-7.87038703870387,-7.868786878687869,-7.867186718671867,-7.865586558655866,-7.863986398639864,-7.862386238623863,-7.860786078607861,-7.8591859185918596,-7.8575857585758575,-7.855985598559856,-7.854385438543854,-7.852785278527853,-7.851185118511851,-7.84958495849585,-7.847984798479848,-7.846384638463847,-7.844784478447845,-7.8431843184318435,-7.841584158415841,-7.83998399839984,-7.838383838383838,-7.836783678367837,-7.835183518351835,-7.833583358335834,-7.831983198319832,-7.830383038303831,-7.828782878287829,-7.827182718271827,-7.825582558255825,-7.823982398239824,-7.822382238223822,-7.820782078207821,-7.819181918191819,-7.817581758175818,-7.815981598159816,-7.814381438143815,-7.8127812781278125,-7.811181118111811,-7.809580958095809,-7.807980798079808,-7.806380638063806,-7.804780478047805,-7.803180318031803,-7.801580158015802,-7.7999799979998,-7.7983798379837985,-7.7967796779677965,-7.795179517951795,-7.793579357935793,-7.791979197919792,-7.79037903790379,-7.788778877887789,-7.787178717871787,-7.785578557855786,-7.783978397839784,-7.7823782378237825,-7.78077807780778,-7.779177917791779,-7.777577757775777,-7.775977597759776,-7.774377437743774,-7.772777277727773,-7.771177117711771,-7.76957695769577,-7.767976797679768,-7.766376637663766,-7.764776477647764,-7.763176317631763,-7.761576157615761,-7.75997599759976,-7.758375837583758,-7.756775677567757,-7.755175517551756,-7.7535753575357536,-7.751975197519752,-7.75037503750375,-7.748774877487749,-7.747174717471747,-7.745574557455746,-7.743974397439744,-7.742374237423743,-7.740774077407741,-7.7391739173917395,-7.7375737573757375,-7.735973597359736,-7.734373437343734,-7.732773277327733,-7.731173117311731,-7.72957295729573,-7.727972797279728,-7.726372637263727,-7.724772477247725,-7.7231723172317235,-7.721572157215721,-7.71997199719972,-7.718371837183718,-7.716771677167717,-7.715171517151715,-7.713571357135714,-7.711971197119712,-7.710371037103711,-7.708770877087709,-7.707170717071707,-7.705570557055705,-7.703970397039704,-7.702370237023702,-7.700770077007701,-7.699169916991699,-7.697569756975698,-7.695969596959696,-7.694369436943695,-7.6927692769276925,-7.691169116911691,-7.689568956895689,-7.687968796879688,-7.686368636863686,-7.684768476847685,-7.683168316831683,-7.681568156815682,-7.67996799679968,-7.6783678367836785,-7.6767676767676765,-7.675167516751675,-7.673567356735673,-7.671967196719672,-7.67036703670367,-7.668766876687669,-7.667166716671667,-7.665566556655666,-7.663966396639664,-7.6623662366236625,-7.66076607660766,-7.659165916591659,-7.657565756575657,-7.655965596559656,-7.654365436543654,-7.652765276527653,-7.651165116511651,-7.64956495649565,-7.6479647964796476,-7.646364636463646,-7.644764476447644,-7.643164316431643,-7.641564156415642,-7.63996399639964,-7.638363836383638,-7.636763676367637,-7.635163516351636,-7.6335633563356335,-7.6319631963196315,-7.63036303630363,-7.628762876287629,-7.627162716271627,-7.625562556255626,-7.623962396239624,-7.622362236223623,-7.620762076207621,-7.6191619161916195,-7.6175617561756175,-7.615961596159616,-7.614361436143614,-7.612761276127613,-7.611161116111611,-7.60956095609561,-7.607960796079608,-7.606360636063607,-7.604760476047605,-7.6031603160316035,-7.601560156015601,-7.5999599959996,-7.598359835983598,-7.596759675967597,-7.595159515951595,-7.593559355935594,-7.591959195919592,-7.590359035903591,-7.588758875887589,-7.587158715871587,-7.585558555855585,-7.583958395839584,-7.582358235823582,-7.580758075807581,-7.579157915791579,-7.577557755775578,-7.575957595759576,-7.574357435743575,-7.5727572757275725,-7.571157115711571,-7.569556955695569,-7.567956795679568,-7.566356635663566,-7.564756475647565,-7.563156315631563,-7.561556155615562,-7.55995599559956,-7.5583558355835585,-7.5567556755675565,-7.555155515551555,-7.553555355535553,-7.551955195519552,-7.55035503550355,-7.548754875487549,-7.547154715471547,-7.545554555455546,-7.543954395439544,-7.542354235423542,-7.54075407540754,-7.539153915391539,-7.537553755375537,-7.535953595359536,-7.534353435343534,-7.532753275327533,-7.531153115311531,-7.52955295529553,-7.5279527952795275,-7.526352635263526,-7.524752475247524,-7.523152315231523,-7.521552155215522,-7.51995199519952,-7.518351835183518,-7.516751675167517,-7.515151515151516,-7.5135513551355135,-7.5119511951195115,-7.51035103510351,-7.508750875087509,-7.507150715071507,-7.505550555055506,-7.503950395039504,-7.502350235023503,-7.500750075007501,-7.4991499149914995,-7.4975497549754975,-7.495949594959496,-7.494349434943494,-7.492749274927493,-7.491149114911491,-7.48954895489549,-7.487948794879488,-7.486348634863487,-7.484748474847485,-7.4831483148314835,-7.481548154815481,-7.47994799479948,-7.478347834783478,-7.476747674767477,-7.475147514751475,-7.473547354735474,-7.471947194719472,-7.470347034703471,-7.468746874687469,-7.467146714671467,-7.465546554655465,-7.463946394639464,-7.462346234623462,-7.460746074607461,-7.459145914591459,-7.457545754575458,-7.455945594559456,-7.4543454345434546,-7.4527452745274525,-7.451145114511451,-7.449544954495449,-7.447944794479448,-7.446344634463446,-7.444744474447445,-7.443144314431443,-7.441544154415442,-7.43994399439944,-7.4383438343834385,-7.436743674367436,-7.435143514351435,-7.433543354335433,-7.431943194319432,-7.43034303430343,-7.428742874287429,-7.427142714271427,-7.425542554255426,-7.423942394239424,-7.422342234223422,-7.42074207420742,-7.419141914191419,-7.417541754175417,-7.415941594159416,-7.414341434143414,-7.412741274127413,-7.411141114111411,-7.40954095409541,-7.407940794079408,-7.406340634063406,-7.404740474047404,-7.403140314031403,-7.401540154015402,-7.3999399939994,-7.398339833983398,-7.396739673967397,-7.395139513951396,-7.3935393539353935,-7.3919391939193915,-7.39033903390339,-7.388738873887389,-7.387138713871387,-7.385538553855385,-7.383938393839384,-7.382338233823383,-7.380738073807381,-7.379137913791379,-7.3775377537753775,-7.375937593759376,-7.374337433743374,-7.372737273727373,-7.371137113711371,-7.36953695369537,-7.367936793679368,-7.366336633663367,-7.364736473647365,-7.3631363136313634,-7.361536153615361,-7.35993599359936,-7.358335833583358,-7.356735673567357,-7.355135513551355,-7.353535353535354,-7.351935193519352,-7.350335033503351,-7.3487348734873486,-7.347134713471347,-7.345534553455345,-7.343934393439344,-7.342334233423342,-7.340734073407341,-7.339133913391339,-7.337533753375338,-7.335933593359336,-7.3343334333433345,-7.3327332733273325,-7.331133113311331,-7.329532953295329,-7.327932793279328,-7.326332633263326,-7.324732473247325,-7.323132313231323,-7.321532153215322,-7.31993199319932,-7.3183318331833185,-7.316731673167316,-7.315131513151315,-7.313531353135313,-7.311931193119312,-7.31033103310331,-7.308730873087309,-7.307130713071307,-7.305530553055306,-7.303930393039304,-7.302330233023302,-7.3007300730073,-7.299129912991299,-7.297529752975297,-7.295929592959296,-7.294329432943294,-7.292729272927293,-7.291129112911291,-7.28952895289529,-7.2879287928792875,-7.286328632863286,-7.284728472847284,-7.283128312831283,-7.281528152815282,-7.27992799279928,-7.278327832783278,-7.276727672767277,-7.275127512751276,-7.2735273527352735,-7.2719271927192715,-7.27032703270327,-7.268726872687269,-7.267126712671267,-7.265526552655265,-7.263926392639264,-7.262326232623263,-7.260726072607261,-7.259125912591259,-7.2575257525752574,-7.255925592559256,-7.254325432543254,-7.252725272527253,-7.251125112511251,-7.24952495249525,-7.247924792479248,-7.246324632463247,-7.244724472447245,-7.243124312431243,-7.241524152415241,-7.23992399239924,-7.238323832383238,-7.236723672367237,-7.235123512351235,-7.233523352335234,-7.231923192319232,-7.230323032303231,-7.2287228722872285,-7.227122712271227,-7.225522552255225,-7.223922392239224,-7.222322232223222,-7.220722072207221,-7.219121912191219,-7.217521752175218,-7.215921592159216,-7.2143214321432145,-7.2127212721272125,-7.211121112111211,-7.209520952095209,-7.207920792079208,-7.206320632063206,-7.204720472047205,-7.203120312031203,-7.201520152015202,-7.1999199919992,-7.1983198319831985,-7.196719671967196,-7.195119511951195,-7.193519351935193,-7.191919191919192,-7.19031903190319,-7.188718871887189,-7.187118711871187,-7.185518551855186,-7.183918391839184,-7.182318231823182,-7.18071807180718,-7.179117911791179,-7.177517751775177,-7.175917591759176,-7.174317431743174,-7.172717271727173,-7.171117111711171,-7.16951695169517,-7.1679167916791675,-7.166316631663166,-7.164716471647164,-7.163116311631163,-7.161516151615162,-7.15991599159916,-7.158315831583158,-7.156715671567157,-7.1551155115511555,-7.1535153515351535,-7.1519151915191514,-7.15031503150315,-7.148714871487149,-7.147114711471147,-7.145514551455145,-7.143914391439144,-7.142314231423143,-7.140714071407141,-7.139113911391139,-7.137513751375137,-7.135913591359136,-7.134313431343134,-7.132713271327133,-7.131113111311131,-7.12951295129513,-7.127912791279128,-7.126312631263127,-7.124712471247125,-7.123112311231123,-7.121512151215121,-7.11991199119912,-7.118311831183118,-7.116711671167117,-7.115111511151115,-7.113511351135114,-7.111911191119112,-7.110311031103111,-7.1087108710871085,-7.107110711071107,-7.105510551055105,-7.103910391039104,-7.102310231023102,-7.100710071007101,-7.099109910991099,-7.097509750975098,-7.095909590959096,-7.0943094309430945,-7.0927092709270925,-7.091109110911091,-7.089508950895089,-7.087908790879088,-7.086308630863086,-7.084708470847085,-7.083108310831083,-7.081508150815082,-7.07990799079908,-7.0783078307830785,-7.076707670767076,-7.075107510751075,-7.073507350735073,-7.071907190719072,-7.07030703070307,-7.068706870687069,-7.067106710671067,-7.065506550655066,-7.063906390639064,-7.062306230623062,-7.06070607060706,-7.059105910591059,-7.057505750575057,-7.055905590559056,-7.054305430543054,-7.052705270527053,-7.051105110511051,-7.0495049504950495,-7.0479047904790475,-7.046304630463046,-7.044704470447044,-7.043104310431043,-7.041504150415042,-7.03990399039904,-7.038303830383038,-7.036703670367037,-7.0351035103510355,-7.0335033503350335,-7.031903190319031,-7.03030303030303,-7.028702870287029,-7.027102710271027,-7.025502550255025,-7.023902390239024,-7.022302230223023,-7.020702070207021,-7.019101910191019,-7.017501750175017,-7.015901590159016,-7.014301430143014,-7.012701270127013,-7.011101110111011,-7.00950095009501,-7.007900790079008,-7.006300630063007,-7.004700470047005,-7.003100310031003,-7.001500150015001,-6.999899989998999,-6.998299829982998,-6.996699669966997,-6.995099509950995,-6.993499349934994,-6.991899189918992,-6.990299029902991,-6.9886988698869885,-6.987098709870987,-6.985498549854985,-6.983898389838984,-6.982298229822982,-6.980698069806981,-6.979097909790979,-6.977497749774978,-6.975897589758976,-6.9742974297429745,-6.9726972697269725,-6.971097109710971,-6.969496949694969,-6.967896789678968,-6.966296629662966,-6.964696469646965,-6.963096309630963,-6.961496149614962,-6.95989598959896,-6.9582958295829584,-6.956695669566956,-6.955095509550955,-6.953495349534953,-6.951895189518952,-6.95029502950295,-6.948694869486949,-6.947094709470947,-6.945494549454946,-6.9438943894389435,-6.942294229422942,-6.94069406940694,-6.939093909390939,-6.937493749374937,-6.935893589358936,-6.934293429342935,-6.932693269326933,-6.931093109310931,-6.9294929492949295,-6.927892789278928,-6.926292629262926,-6.924692469246924,-6.923092309230923,-6.921492149214922,-6.91989198919892,-6.918291829182918,-6.916691669166917,-6.9150915091509155,-6.9134913491349135,-6.911891189118911,-6.91029102910291,-6.908690869086909,-6.907090709070907,-6.905490549054905,-6.903890389038904,-6.902290229022903,-6.900690069006901,-6.899089908990899,-6.897489748974897,-6.895889588958896,-6.894289428942894,-6.892689268926892,-6.891089108910891,-6.88948894889489,-6.887888788878888,-6.886288628862886,-6.884688468846885,-6.883088308830883,-6.881488148814881,-6.879887988798879,-6.878287828782878,-6.876687668766877,-6.875087508750875,-6.873487348734874,-6.871887188718872,-6.870287028702871,-6.8686868686868685,-6.867086708670867,-6.865486548654865,-6.863886388638864,-6.862286228622862,-6.860686068606861,-6.859085908590859,-6.857485748574858,-6.855885588558856,-6.8542854285428545,-6.8526852685268524,-6.851085108510851,-6.849484948494849,-6.847884788478848,-6.846284628462846,-6.844684468446845,-6.843084308430843,-6.841484148414842,-6.83988398839884,-6.838283828382838,-6.836683668366836,-6.835083508350835,-6.833483348334833,-6.831883188318832,-6.83028302830283,-6.828682868286829,-6.827082708270827,-6.825482548254826,-6.8238823882388235,-6.822282228222822,-6.82068206820682,-6.819081908190819,-6.817481748174817,-6.815881588158816,-6.814281428142815,-6.812681268126813,-6.811081108110811,-6.8094809480948095,-6.807880788078808,-6.806280628062806,-6.804680468046804,-6.803080308030803,-6.801480148014802,-6.7998799879988,-6.798279827982798,-6.796679667966797,-6.7950795079507955,-6.7934793479347935,-6.791879187918791,-6.79027902790279,-6.788678867886789,-6.787078707870787,-6.785478547854785,-6.783878387838784,-6.782278227822783,-6.780678067806781,-6.779077907790779,-6.777477747774777,-6.775877587758776,-6.774277427742774,-6.772677267726772,-6.771077107710771,-6.76947694769477,-6.767876787678768,-6.766276627662766,-6.764676467646765,-6.763076307630763,-6.761476147614761,-6.759875987598759,-6.758275827582758,-6.756675667566757,-6.755075507550755,-6.753475347534754,-6.751875187518752,-6.7502750275027505,-6.7486748674867485,-6.747074707470747,-6.745474547454745,-6.743874387438744,-6.742274227422742,-6.740674067406741,-6.739073907390739,-6.737473747374738,-6.735873587358736,-6.7342734273427345,-6.732673267326732,-6.731073107310731,-6.729472947294729,-6.727872787278728,-6.726272627262726,-6.724672467246725,-6.723072307230723,-6.721472147214722,-6.71987198719872,-6.718271827182718,-6.716671667166716,-6.715071507150715,-6.713471347134713,-6.711871187118712,-6.71027102710271,-6.708670867086709,-6.707070707070707,-6.705470547054706,-6.7038703870387035,-6.702270227022702,-6.7006700670067,-6.699069906990699,-6.697469746974697,-6.695869586958696,-6.694269426942695,-6.692669266926693,-6.691069106910691,-6.6894689468946895,-6.687868786878688,-6.686268626862686,-6.684668466846684,-6.683068306830683,-6.681468146814682,-6.67986798679868,-6.678267826782678,-6.676667666766677,-6.6750675067506755,-6.6734673467346735,-6.671867186718671,-6.67026702670267,-6.668666866686669,-6.667066706670667,-6.665466546654665,-6.663866386638664,-6.662266226622663,-6.660666066606661,-6.659065906590659,-6.657465746574657,-6.655865586558656,-6.654265426542654,-6.652665266526652,-6.651065106510651,-6.64946494649465,-6.647864786478648,-6.646264626462646,-6.6446644664466445,-6.643064306430643,-6.641464146414641,-6.639863986398639,-6.638263826382638,-6.636663666366637,-6.635063506350635,-6.633463346334634,-6.631863186318632,-6.6302630263026305,-6.6286628662866285,-6.627062706270627,-6.625462546254625,-6.623862386238624,-6.622262226222622,-6.620662066206621,-6.619061906190619,-6.617461746174618,-6.615861586158616,-6.6142614261426145,-6.612661266126612,-6.611061106110611,-6.609460946094609,-6.607860786078608,-6.606260626062606,-6.604660466046605,-6.603060306030603,-6.601460146014602,-6.5998599859986,-6.598259825982598,-6.596659665966596,-6.595059505950595,-6.593459345934593,-6.591859185918592,-6.59025902590259,-6.588658865886589,-6.587058705870587,-6.585458545854586,-6.5838583858385835,-6.582258225822582,-6.58065806580658,-6.579057905790579,-6.577457745774577,-6.575857585758576,-6.574257425742574,-6.572657265726573,-6.571057105710571,-6.5694569456945695,-6.567856785678568,-6.566256625662566,-6.564656465646564,-6.563056305630563,-6.561456145614562,-6.55985598559856,-6.558255825582558,-6.556655665566557,-6.5550555055505555,-6.5534553455345534,-6.551855185518551,-6.55025502550255,-6.548654865486549,-6.547054705470547,-6.545454545454545,-6.543854385438544,-6.542254225422543,-6.540654065406541,-6.5390539053905385,-6.537453745374537,-6.535853585358536,-6.534253425342534,-6.532653265326532,-6.531053105310531,-6.52945294529453,-6.527852785278528,-6.526252625262526,-6.5246524652465245,-6.523052305230523,-6.521452145214521,-6.519851985198519,-6.518251825182518,-6.516651665166517,-6.515051505150515,-6.513451345134513,-6.511851185118512,-6.5102510251025105,-6.5086508650865085,-6.507050705070507,-6.505450545054505,-6.503850385038504,-6.502250225022502,-6.500650065006501,-6.499049904990499,-6.497449744974498,-6.495849584958496,-6.4942494249424945,-6.492649264926492,-6.491049104910491,-6.489448944894489,-6.487848784878488,-6.486248624862486,-6.484648464846485,-6.483048304830483,-6.481448144814482,-6.47984798479848,-6.478247824782478,-6.476647664766476,-6.475047504750475,-6.473447344734473,-6.471847184718472,-6.47024702470247,-6.468646864686469,-6.467046704670467,-6.4654465446544656,-6.4638463846384635,-6.462246224622462,-6.46064606460646,-6.459045904590459,-6.457445744574457,-6.455845584558456,-6.454245424542454,-6.452645264526453,-6.451045104510451,-6.4494449444944495,-6.447844784478448,-6.446244624462446,-6.444644464446444,-6.443044304430443,-6.441444144414442,-6.43984398439844,-6.438243824382438,-6.436643664366437,-6.4350435043504355,-6.433443344334433,-6.431843184318431,-6.43024302430243,-6.428642864286429,-6.427042704270427,-6.425442544254425,-6.423842384238424,-6.422242224222423,-6.420642064206421,-6.4190419041904185,-6.417441744174417,-6.415841584158416,-6.414241424142414,-6.412641264126412,-6.411041104110411,-6.40944094409441,-6.407840784078408,-6.406240624062406,-6.4046404640464045,-6.403040304030403,-6.401440144014401,-6.399839983998399,-6.398239823982398,-6.396639663966397,-6.395039503950395,-6.393439343934393,-6.391839183918392,-6.3902390239023905,-6.3886388638863885,-6.387038703870387,-6.385438543854385,-6.383838383838384,-6.382238223822382,-6.380638063806381,-6.379037903790379,-6.377437743774378,-6.375837583758376,-6.3742374237423745,-6.372637263726372,-6.371037103710371,-6.369436943694369,-6.367836783678368,-6.366236623662366,-6.364636463646365,-6.363036303630363,-6.361436143614362,-6.3598359835983596,-6.358235823582358,-6.356635663566356,-6.355035503550355,-6.353435343534353,-6.351835183518352,-6.35023502350235,-6.348634863486349,-6.347034703470347,-6.3454345434543455,-6.3438343834383435,-6.342234223422342,-6.34063406340634,-6.339033903390339,-6.337433743374337,-6.335833583358336,-6.334233423342334,-6.332633263326333,-6.331033103310331,-6.3294329432943295,-6.327832783278328,-6.326232623262326,-6.324632463246324,-6.323032303230323,-6.321432143214322,-6.31983198319832,-6.318231823182318,-6.316631663166317,-6.3150315031503155,-6.313431343134313,-6.311831183118311,-6.31023102310231,-6.308630863086309,-6.307030703070307,-6.305430543054305,-6.303830383038304,-6.302230223022303,-6.300630063006301,-6.2990299029902985,-6.297429742974297,-6.295829582958296,-6.294229422942294,-6.292629262926292,-6.291029102910291,-6.28942894289429,-6.287828782878288,-6.286228622862286,-6.2846284628462845,-6.283028302830283,-6.281428142814281,-6.279827982798279,-6.278227822782278,-6.276627662766277,-6.275027502750275,-6.273427342734273,-6.271827182718272,-6.2702270227022705,-6.2686268626862685,-6.267026702670267,-6.265426542654265,-6.263826382638264,-6.262226222622262,-6.260626062606261,-6.259025902590259,-6.257425742574258,-6.255825582558256,-6.254225422542254,-6.252625262526252,-6.251025102510251,-6.249424942494249,-6.247824782478248,-6.246224622462246,-6.244624462446245,-6.243024302430243,-6.241424142414242,-6.2398239823982395,-6.238223822382238,-6.236623662366236,-6.235023502350235,-6.233423342334233,-6.231823182318232,-6.23022302230223,-6.228622862286229,-6.227022702270227,-6.2254225422542255,-6.2238223822382235,-6.222222222222222,-6.22062206220622,-6.219021902190219,-6.217421742174217,-6.215821582158216,-6.214221422142214,-6.212621262126213,-6.211021102110211,-6.2094209420942095,-6.207820782078208,-6.206220622062206,-6.204620462046204,-6.203020302030203,-6.201420142014202,-6.1998199819982,-6.198219821982198,-6.196619661966197,-6.1950195019501955,-6.193419341934193,-6.191819181918191,-6.19021902190219,-6.188618861886189,-6.187018701870187,-6.185418541854185,-6.183818381838184,-6.182218221822183,-6.180618061806181,-6.1790179017901785,-6.177417741774177,-6.175817581758176,-6.174217421742174,-6.172617261726172,-6.171017101710171,-6.16941694169417,-6.167816781678168,-6.166216621662166,-6.1646164616461645,-6.163016301630163,-6.161416141614161,-6.159815981598159,-6.158215821582158,-6.156615661566157,-6.155015501550155,-6.153415341534153,-6.151815181518152,-6.1502150215021505,-6.148614861486148,-6.147014701470147,-6.145414541454145,-6.143814381438144,-6.142214221422142,-6.140614061406141,-6.139013901390139,-6.137413741374138,-6.135813581358136,-6.134213421342134,-6.132613261326132,-6.131013101310131,-6.129412941294129,-6.127812781278128,-6.126212621262126,-6.124612461246125,-6.123012301230123,-6.121412141214122,-6.1198119811981195,-6.118211821182118,-6.116611661166116,-6.115011501150115,-6.113411341134113,-6.111811181118112,-6.11021102110211,-6.108610861086109,-6.107010701070107,-6.1054105410541055,-6.1038103810381035,-6.102210221022102,-6.1006100610061,-6.099009900990099,-6.097409740974097,-6.095809580958096,-6.094209420942094,-6.092609260926093,-6.091009100910091,-6.0894089408940895,-6.087808780878088,-6.086208620862086,-6.084608460846084,-6.083008300830083,-6.081408140814082,-6.07980798079808,-6.078207820782078,-6.076607660766077,-6.0750075007500755,-6.073407340734073,-6.071807180718071,-6.07020702070207,-6.068606860686069,-6.067006700670067,-6.065406540654065,-6.063806380638064,-6.062206220622063,-6.0606060606060606,-6.0590059005900585,-6.057405740574057,-6.055805580558056,-6.054205420542054,-6.052605260526052,-6.051005100510051,-6.04940494049405,-6.047804780478048,-6.046204620462046,-6.0446044604460445,-6.043004300430043,-6.041404140414041,-6.039803980398039,-6.038203820382038,-6.036603660366037,-6.035003500350035,-6.033403340334033,-6.031803180318032,-6.0302030203020305,-6.028602860286028,-6.027002700270027,-6.025402540254025,-6.023802380238024,-6.022202220222022,-6.020602060206021,-6.019001900190019,-6.017401740174018,-6.015801580158016,-6.014201420142014,-6.012601260126012,-6.011001100110011,-6.009400940094009,-6.007800780078008,-6.006200620062006,-6.004600460046005,-6.003000300030003,-6.001400140014002,-5.9997999799979995,-5.998199819981998,-5.996599659965996,-5.994999499949995,-5.993399339933994,-5.991799179917992,-5.99019901990199,-5.988598859885989,-5.986998699869988,-5.9853985398539855,-5.9837983798379835,-5.982198219821982,-5.980598059805981,-5.978997899789979,-5.977397739773977,-5.975797579757976,-5.974197419741975,-5.972597259725973,-5.970997099709971,-5.9693969396939695,-5.967796779677968,-5.966196619661966,-5.964596459645964,-5.962996299629963,-5.961396139613962,-5.95979597959796,-5.958195819581958,-5.956595659565957,-5.954995499549955,-5.953395339533953,-5.951795179517951,-5.95019501950195,-5.948594859485949,-5.946994699469947,-5.945394539453945,-5.943794379437944,-5.942194219421943,-5.9405940594059405,-5.9389938993899385,-5.937393739373937,-5.935793579357936,-5.934193419341934,-5.932593259325932,-5.930993099309931,-5.92939293929393,-5.927792779277928,-5.926192619261926,-5.9245924592459245,-5.922992299229923,-5.921392139213921,-5.919791979197919,-5.918191819181918,-5.916591659165917,-5.914991499149915,-5.913391339133913,-5.911791179117912,-5.9101910191019105,-5.908590859085908,-5.906990699069906,-5.905390539053905,-5.903790379037904,-5.902190219021902,-5.9005900590059,-5.898989898989899,-5.897389738973898,-5.895789578957896,-5.8941894189418935,-5.892589258925892,-5.890989098909891,-5.889388938893889,-5.887788778877887,-5.886188618861886,-5.884588458845885,-5.882988298829883,-5.881388138813881,-5.8797879787978795,-5.878187818781878,-5.876587658765876,-5.874987498749875,-5.873387338733874,-5.871787178717872,-5.87018701870187,-5.868586858685869,-5.8669866986698676,-5.8653865386538655,-5.8637863786378635,-5.862186218621862,-5.860586058605861,-5.858985898589859,-5.857385738573857,-5.855785578557856,-5.854185418541855,-5.852585258525853,-5.850985098509851,-5.849384938493849,-5.847784778477848,-5.846184618461846,-5.844584458445844,-5.842984298429843,-5.841384138413842,-5.83978397839784,-5.838183818381838,-5.836583658365837,-5.834983498349835,-5.833383338333833,-5.831783178317831,-5.83018301830183,-5.828582858285829,-5.826982698269827,-5.825382538253825,-5.823782378237824,-5.822182218221823,-5.8205820582058205,-5.8189818981898185,-5.817381738173817,-5.815781578157816,-5.814181418141814,-5.812581258125812,-5.810981098109811,-5.80938093809381,-5.807780778077808,-5.806180618061806,-5.8045804580458045,-5.802980298029803,-5.801380138013801,-5.799779977997799,-5.798179817981798,-5.796579657965797,-5.794979497949795,-5.793379337933793,-5.791779177917792,-5.7901790179017905,-5.788578857885788,-5.786978697869786,-5.785378537853785,-5.783778377837784,-5.782178217821782,-5.78057805780578,-5.778977897789779,-5.777377737773778,-5.775777577757776,-5.7741774177417735,-5.772577257725772,-5.770977097709771,-5.769376937693769,-5.767776777677767,-5.766176617661766,-5.764576457645765,-5.762976297629763,-5.761376137613761,-5.7597759775977595,-5.758175817581758,-5.756575657565756,-5.754975497549754,-5.753375337533754,-5.751775177517752,-5.75017501750175,-5.748574857485749,-5.7469746974697475,-5.7453745374537455,-5.743774377437743,-5.742174217421742,-5.740574057405741,-5.738973897389739,-5.737373737373737,-5.735773577357736,-5.734173417341735,-5.732573257325733,-5.730973097309731,-5.729372937293729,-5.727772777277728,-5.726172617261726,-5.724572457245724,-5.722972297229723,-5.721372137213722,-5.71977197719772,-5.718171817181718,-5.716571657165717,-5.714971497149715,-5.713371337133713,-5.711771177117711,-5.71017101710171,-5.708570857085709,-5.706970697069707,-5.705370537053705,-5.703770377037704,-5.702170217021703,-5.7005700570057005,-5.6989698969896985,-5.697369736973697,-5.695769576957696,-5.694169416941694,-5.692569256925692,-5.690969096909691,-5.68936893689369,-5.687768776877688,-5.686168616861686,-5.6845684568456845,-5.682968296829683,-5.681368136813681,-5.679767976797679,-5.678167816781678,-5.676567656765677,-5.674967496749675,-5.673367336733673,-5.671767176717672,-5.6701670167016704,-5.668566856685668,-5.666966696669666,-5.665366536653665,-5.663766376637664,-5.662166216621662,-5.66056605660566,-5.658965896589659,-5.657365736573658,-5.6557655765576555,-5.6541654165416535,-5.652565256525652,-5.650965096509651,-5.649364936493649,-5.647764776477647,-5.646164616461646,-5.644564456445645,-5.642964296429643,-5.641364136413641,-5.6397639763976395,-5.638163816381638,-5.636563656365636,-5.634963496349634,-5.633363336333633,-5.631763176317632,-5.63016301630163,-5.628562856285629,-5.6269626962696275,-5.6253625362536255,-5.623762376237623,-5.622162216221622,-5.620562056205621,-5.618961896189619,-5.617361736173617,-5.615761576157616,-5.614161416141615,-5.612561256125613,-5.610961096109611,-5.609360936093609,-5.607760776077608,-5.606160616061606,-5.604560456045604,-5.602960296029603,-5.601360136013602,-5.5997599759976,-5.598159815981598,-5.596559655965597,-5.594959495949595,-5.593359335933593,-5.591759175917591,-5.59015901590159,-5.588558855885589,-5.586958695869587,-5.585358535853585,-5.583758375837584,-5.582158215821583,-5.5805580558055805,-5.5789578957895785,-5.577357735773577,-5.575757575757576,-5.574157415741574,-5.572557255725572,-5.570957095709571,-5.56935693569357,-5.567756775677568,-5.566156615661566,-5.5645564556455644,-5.562956295629563,-5.561356135613561,-5.559755975597559,-5.558155815581558,-5.556555655565557,-5.554955495549555,-5.553355335533553,-5.551755175517552,-5.55015501550155,-5.548554855485548,-5.546954695469546,-5.545354535453545,-5.543754375437544,-5.542154215421542,-5.54055405540554,-5.538953895389539,-5.537353735373538,-5.5357535753575355,-5.5341534153415335,-5.532553255325532,-5.530953095309531,-5.529352935293529,-5.527752775277527,-5.526152615261526,-5.524552455245525,-5.522952295229523,-5.521352135213521,-5.5197519751975195,-5.518151815181518,-5.516551655165516,-5.514951495149514,-5.513351335133513,-5.511751175117512,-5.51015101510151,-5.508550855085509,-5.5069506950695075,-5.5053505350535055,-5.503750375037503,-5.502150215021502,-5.500550055005501,-5.498949894989499,-5.497349734973497,-5.495749574957496,-5.494149414941495,-5.492549254925493,-5.490949094909491,-5.489348934893489,-5.487748774877488,-5.486148614861486,-5.484548454845484,-5.482948294829483,-5.481348134813482,-5.47974797479748,-5.478147814781478,-5.476547654765477,-5.474947494749475,-5.473347334733473,-5.471747174717471,-5.47014701470147,-5.468546854685469,-5.466946694669467,-5.465346534653465,-5.463746374637464,-5.4621462146214625,-5.4605460546054605,-5.4589458945894584,-5.457345734573457,-5.455745574557456,-5.454145414541454,-5.452545254525452,-5.450945094509451,-5.44934493449345,-5.447744774477448,-5.446144614461446,-5.444544454445444,-5.442944294429443,-5.441344134413441,-5.439743974397439,-5.438143814381438,-5.436543654365437,-5.434943494349435,-5.433343334333433,-5.431743174317432,-5.43014301430143,-5.428542854285428,-5.426942694269426,-5.425342534253425,-5.423742374237424,-5.422142214221422,-5.42054205420542,-5.418941894189419,-5.417341734173418,-5.4157415741574155,-5.4141414141414135,-5.412541254125412,-5.410941094109411,-5.409340934093409,-5.407740774077407,-5.406140614061406,-5.404540454045405,-5.402940294029403,-5.401340134013401,-5.3997399739973995,-5.398139813981398,-5.396539653965396,-5.394939493949394,-5.393339333933393,-5.391739173917392,-5.39013901390139,-5.388538853885389,-5.3869386938693875,-5.3853385338533855,-5.383738373837383,-5.382138213821382,-5.380538053805381,-5.378937893789379,-5.377337733773377,-5.375737573757376,-5.374137413741375,-5.372537253725373,-5.370937093709371,-5.369336933693369,-5.367736773677368,-5.366136613661366,-5.364536453645364,-5.362936293629363,-5.361336133613362,-5.35973597359736,-5.358135813581358,-5.3565356535653565,-5.354935493549355,-5.353335333533353,-5.351735173517351,-5.35013501350135,-5.348534853485349,-5.346934693469347,-5.345334533453345,-5.343734373437344,-5.3421342134213425,-5.3405340534053405,-5.338933893389338,-5.337333733373337,-5.335733573357336,-5.334133413341334,-5.332533253325332,-5.330933093309331,-5.32933293329333,-5.327732773277328,-5.326132613261326,-5.324532453245324,-5.322932293229323,-5.321332133213321,-5.319731973197319,-5.318131813181318,-5.316531653165317,-5.314931493149315,-5.313331333133313,-5.311731173117312,-5.31013101310131,-5.308530853085308,-5.306930693069306,-5.305330533053305,-5.303730373037304,-5.302130213021302,-5.3005300530053,-5.298929892989299,-5.297329732973298,-5.2957295729572955,-5.2941294129412935,-5.292529252925292,-5.290929092909291,-5.289328932893289,-5.287728772877287,-5.286128612861286,-5.284528452845285,-5.282928292829283,-5.281328132813281,-5.2797279727972795,-5.278127812781278,-5.276527652765276,-5.274927492749274,-5.273327332733273,-5.271727172717272,-5.27012701270127,-5.268526852685269,-5.2669266926692675,-5.2653265326532654,-5.263726372637263,-5.262126212621262,-5.260526052605261,-5.258925892589259,-5.257325732573257,-5.255725572557256,-5.254125412541255,-5.252525252525253,-5.2509250925092505,-5.249324932493249,-5.247724772477248,-5.246124612461246,-5.244524452445244,-5.242924292429243,-5.241324132413242,-5.23972397239724,-5.238123812381238,-5.2365236523652365,-5.234923492349235,-5.233323332333233,-5.231723172317231,-5.23012301230123,-5.228522852285229,-5.226922692269227,-5.225322532253225,-5.223722372237224,-5.2221222122212225,-5.2205220522052205,-5.218921892189218,-5.217321732173217,-5.215721572157216,-5.214121412141214,-5.212521252125212,-5.210921092109211,-5.20932093209321,-5.207720772077208,-5.206120612061206,-5.204520452045204,-5.202920292029203,-5.201320132013201,-5.199719971997199,-5.198119811981198,-5.196519651965197,-5.194919491949195,-5.193319331933193,-5.191719171917192,-5.19011901190119,-5.188518851885188,-5.186918691869186,-5.185318531853185,-5.183718371837184,-5.182118211821182,-5.18051805180518,-5.178917891789179,-5.177317731773178,-5.1757175717571755,-5.1741174117411735,-5.172517251725172,-5.170917091709171,-5.169316931693169,-5.167716771677167,-5.166116611661166,-5.164516451645165,-5.162916291629163,-5.161316131613161,-5.1597159715971594,-5.158115811581158,-5.156515651565156,-5.154915491549154,-5.153315331533153,-5.151715171517152,-5.15011501150115,-5.148514851485148,-5.1469146914691475,-5.145314531453145,-5.143714371437143,-5.142114211421142,-5.140514051405141,-5.138913891389139,-5.137313731373137,-5.135713571357136,-5.134113411341135,-5.132513251325133,-5.1309130913091305,-5.129312931293129,-5.127712771277128,-5.126112611261126,-5.124512451245124,-5.122912291229123,-5.121312131213122,-5.11971197119712,-5.118111811181118,-5.1165116511651165,-5.114911491149115,-5.113311331133113,-5.111711171117111,-5.11011101110111,-5.108510851085109,-5.106910691069107,-5.105310531053105,-5.103710371037104,-5.1021102110211025,-5.1005100510051005,-5.098909890989098,-5.097309730973097,-5.095709570957096,-5.094109410941094,-5.092509250925092,-5.090909090909091,-5.08930893089309,-5.087708770877088,-5.086108610861086,-5.084508450845084,-5.082908290829083,-5.081308130813081,-5.079707970797079,-5.078107810781078,-5.076507650765077,-5.074907490749075,-5.073307330733073,-5.0717071707170716,-5.07010701070107,-5.068506850685068,-5.066906690669066,-5.065306530653065,-5.063706370637064,-5.062106210621062,-5.06050605060506,-5.058905890589059,-5.0573057305730575,-5.0557055705570555,-5.0541054105410534,-5.052505250525052,-5.050905090509051,-5.049304930493049,-5.047704770477047,-5.046104610461046,-5.044504450445045,-5.042904290429043,-5.041304130413041,-5.039703970397039,-5.038103810381038,-5.036503650365036,-5.034903490349034,-5.033303330333033,-5.031703170317032,-5.03010301030103,-5.028502850285028,-5.026902690269027,-5.025302530253025,-5.023702370237023,-5.022102210221022,-5.020502050205021,-5.018901890189019,-5.017301730173017,-5.015701570157016,-5.014101410141015,-5.012501250125013,-5.0109010901090105,-5.009300930093009,-5.007700770077008,-5.006100610061006,-5.004500450045004,-5.002900290029003,-5.001300130013002,-4.999699969997,-4.998099809980998,-4.9964996499649965,-4.994899489948995,-4.993299329932993,-4.991699169916991,-4.99009900990099,-4.988498849884989,-4.986898689868987,-4.985298529852985,-4.983698369836984,-4.9820982098209825,-4.9804980498049805,-4.978897889788978,-4.977297729772977,-4.975697569756976,-4.974097409740974,-4.972497249724972,-4.970897089708971,-4.96929692969297,-4.967696769676968,-4.9660966096609656,-4.964496449644964,-4.962896289628963,-4.961296129612961,-4.959695969596959,-4.958095809580958,-4.956495649564957,-4.954895489548955,-4.953295329532953,-4.9516951695169515,-4.95009500950095,-4.948494849484948,-4.946894689468946,-4.945294529452945,-4.943694369436944,-4.942094209420942,-4.94049404940494,-4.938893889388939,-4.9372937293729375,-4.9356935693569355,-4.934093409340933,-4.932493249324932,-4.930893089308931,-4.929292929292929,-4.927692769276927,-4.926092609260926,-4.924492449244925,-4.922892289228923,-4.921292129212921,-4.919691969196919,-4.918091809180918,-4.916491649164916,-4.914891489148914,-4.913291329132913,-4.911691169116912,-4.91009100910091,-4.908490849084908,-4.906890689068907,-4.905290529052905,-4.903690369036903,-4.902090209020902,-4.900490049004901,-4.898889888988899,-4.897289728972897,-4.895689568956896,-4.894089408940895,-4.892489248924893,-4.8908890889088905,-4.889288928892889,-4.887688768876888,-4.886088608860886,-4.884488448844884,-4.882888288828883,-4.881288128812882,-4.87968796879688,-4.878087808780878,-4.8764876487648765,-4.874887488748875,-4.873287328732873,-4.871687168716871,-4.87008700870087,-4.868486848684869,-4.866886688668867,-4.865286528652865,-4.863686368636864,-4.8620862086208625,-4.86048604860486,-4.858885888588858,-4.857285728572857,-4.855685568556856,-4.854085408540854,-4.852485248524852,-4.850885088508851,-4.84928492849285,-4.847684768476848,-4.8460846084608455,-4.844484448444844,-4.842884288428843,-4.841284128412841,-4.839683968396839,-4.838083808380838,-4.836483648364837,-4.834883488348835,-4.833283328332833,-4.8316831683168315,-4.83008300830083,-4.828482848284828,-4.826882688268826,-4.825282528252825,-4.823682368236824,-4.822082208220822,-4.82048204820482,-4.818881888188819,-4.8172817281728175,-4.8156815681568155,-4.814081408140813,-4.812481248124812,-4.810881088108811,-4.809280928092809,-4.807680768076807,-4.806080608060806,-4.804480448044805,-4.802880288028803,-4.801280128012801,-4.799679967996799,-4.798079807980798,-4.796479647964796,-4.794879487948794,-4.793279327932793,-4.791679167916792,-4.79007900790079,-4.788478847884788,-4.786878687868787,-4.785278527852785,-4.783678367836783,-4.782078207820782,-4.780478047804781,-4.778877887788779,-4.777277727772777,-4.775677567756776,-4.774077407740775,-4.7724772477247726,-4.7708770877087705,-4.769276927692769,-4.767676767676768,-4.766076607660766,-4.764476447644764,-4.762876287628763,-4.761276127612762,-4.75967596759676,-4.758075807580758,-4.7564756475647565,-4.754875487548755,-4.753275327532753,-4.751675167516751,-4.75007500750075,-4.748474847484749,-4.746874687468747,-4.745274527452745,-4.743674367436744,-4.7420742074207425,-4.74047404740474,-4.738873887388738,-4.737273727372737,-4.735673567356736,-4.734073407340734,-4.732473247324732,-4.730873087308731,-4.72927292729273,-4.727672767276728,-4.7260726072607255,-4.724472447244724,-4.722872287228723,-4.721272127212721,-4.719671967196719,-4.718071807180718,-4.716471647164717,-4.714871487148715,-4.713271327132713,-4.7116711671167115,-4.71007100710071,-4.708470847084708,-4.706870687068706,-4.705270527052705,-4.703670367036704,-4.702070207020702,-4.7004700470047,-4.698869886988699,-4.6972697269726975,-4.6956695669566955,-4.694069406940693,-4.692469246924692,-4.690869086908691,-4.689268926892689,-4.687668766876687,-4.686068606860686,-4.684468446844685,-4.682868286828683,-4.681268126812681,-4.679667966796679,-4.678067806780678,-4.676467646764676,-4.674867486748674,-4.673267326732673,-4.671667166716672,-4.67006700670067,-4.668466846684668,-4.6668666866686666,-4.665266526652665,-4.663666366636663,-4.662066206620662,-4.660466046604661,-4.658865886588659,-4.657265726572657,-4.655665566556656,-4.654065406540655,-4.6524652465246525,-4.6508650865086505,-4.649264926492649,-4.647664766476648,-4.646064606460646,-4.644464446444644,-4.642864286428643,-4.641264126412642,-4.63966396639664,-4.638063806380638,-4.6364636463646365,-4.634863486348635,-4.633263326332633,-4.631663166316631,-4.63006300630063,-4.628462846284629,-4.626862686268627,-4.625262526252625,-4.623662366236624,-4.6220622062206225,-4.62046204620462,-4.618861886188618,-4.617261726172617,-4.615661566156616,-4.614061406140614,-4.612461246124612,-4.610861086108611,-4.60926092609261,-4.607660766076608,-4.6060606060606055,-4.604460446044604,-4.602860286028603,-4.601260126012601,-4.599659965996599,-4.598059805980598,-4.596459645964597,-4.594859485948595,-4.593259325932593,-4.5916591659165915,-4.59005900590059,-4.588458845884588,-4.586858685868586,-4.585258525852585,-4.583658365836584,-4.582058205820582,-4.58045804580458,-4.578857885788579,-4.5772577257725775,-4.5756575657565755,-4.574057405740573,-4.572457245724572,-4.570857085708571,-4.569256925692569,-4.567656765676567,-4.566056605660566,-4.564456445644565,-4.562856285628563,-4.5612561256125606,-4.559655965596559,-4.558055805580558,-4.556455645564556,-4.554855485548554,-4.553255325532553,-4.551655165516552,-4.55005500550055,-4.548454845484548,-4.5468546854685465,-4.545254525452545,-4.543654365436543,-4.542054205420541,-4.540454045404541,-4.538853885388539,-4.537253725372537,-4.535653565356536,-4.534053405340535,-4.5324532453245325,-4.5308530853085305,-4.529252925292529,-4.527652765276528,-4.526052605260526,-4.524452445244524,-4.522852285228523,-4.521252125212522,-4.51965196519652,-4.518051805180518,-4.5164516451645165,-4.514851485148515,-4.513251325132513,-4.511651165116511,-4.51005100510051,-4.508450845084509,-4.506850685068507,-4.505250525052505,-4.503650365036504,-4.5020502050205025,-4.5004500450045,-4.498849884988498,-4.497249724972497,-4.495649564956496,-4.494049404940494,-4.492449244924492,-4.490849084908491,-4.48924892489249,-4.487648764876488,-4.4860486048604855,-4.484448444844484,-4.482848284828483,-4.481248124812481,-4.479647964796479,-4.478047804780478,-4.476447644764477,-4.474847484748475,-4.473247324732473,-4.4716471647164715,-4.47004700470047,-4.468446844684468,-4.466846684668466,-4.465246524652465,-4.463646364636464,-4.462046204620462,-4.46044604460446,-4.458845884588459,-4.4572457245724575,-4.455645564556455,-4.454045404540453,-4.452445244524452,-4.450845084508451,-4.449244924492449,-4.447644764476447,-4.446044604460446,-4.444444444444445,-4.442844284428443,-4.4412441244124405,-4.439643964396439,-4.438043804380438,-4.436443644364436,-4.434843484348434,-4.433243324332433,-4.431643164316432,-4.43004300430043,-4.428442844284428,-4.4268426842684265,-4.425242524252425,-4.423642364236423,-4.422042204220421,-4.42044204420442,-4.418841884188419,-4.417241724172417,-4.415641564156416,-4.414041404140415,-4.4124412441244125,-4.4108410841084105,-4.409240924092409,-4.407640764076408,-4.406040604060406,-4.404440444044404,-4.402840284028403,-4.401240124012402,-4.3996399639964,-4.398039803980398,-4.3964396439643965,-4.394839483948395,-4.393239323932393,-4.391639163916391,-4.39003900390039,-4.388438843884389,-4.386838683868387,-4.385238523852385,-4.383638363836384,-4.3820382038203824,-4.38043804380438,-4.378837883788378,-4.377237723772377,-4.375637563756376,-4.374037403740374,-4.372437243724372,-4.370837083708371,-4.36923692369237,-4.3676367636763676,-4.3660366036603655,-4.364436443644364,-4.362836283628363,-4.361236123612361,-4.359635963596359,-4.358035803580358,-4.356435643564357,-4.354835483548355,-4.353235323532353,-4.3516351635163515,-4.35003500350035,-4.348434843484348,-4.346834683468346,-4.345234523452345,-4.343634363436344,-4.342034203420342,-4.34043404340434,-4.338833883388339,-4.3372337233723375,-4.335633563356335,-4.334033403340333,-4.332433243324332,-4.330833083308331,-4.329232923292329,-4.327632763276327,-4.326032603260326,-4.324432443244325,-4.322832283228323,-4.3212321232123205,-4.319631963196319,-4.318031803180318,-4.316431643164316,-4.314831483148314,-4.313231323132313,-4.311631163116312,-4.31003100310031,-4.308430843084308,-4.3068306830683065,-4.305230523052305,-4.303630363036303,-4.302030203020301,-4.3004300430043,-4.298829882988299,-4.297229722972297,-4.295629562956296,-4.294029402940295,-4.2924292429242925,-4.2908290829082905,-4.289228922892289,-4.287628762876288,-4.286028602860286,-4.284428442844284,-4.282828282828283,-4.281228122812282,-4.27962796279628,-4.278027802780278,-4.2764276427642764,-4.274827482748275,-4.273227322732273,-4.271627162716271,-4.27002700270027,-4.268426842684269,-4.266826682668267,-4.265226522652265,-4.263626362636264,-4.262026202620262,-4.26042604260426,-4.258825882588258,-4.257225722572257,-4.255625562556256,-4.254025402540254,-4.252425242524252,-4.250825082508251,-4.24922492249225,-4.2476247624762475,-4.2460246024602455,-4.244424442444244,-4.242824282428243,-4.241224122412241,-4.239623962396239,-4.238023802380238,-4.236423642364237,-4.234823482348235,-4.233223322332233,-4.2316231623162315,-4.23002300230023,-4.228422842284228,-4.226822682268226,-4.225222522252225,-4.223622362236224,-4.222022202220222,-4.22042204220422,-4.218821882188219,-4.2172217221722175,-4.215621562156215,-4.214021402140213,-4.212421242124212,-4.210821082108211,-4.209220922092209,-4.207620762076207,-4.206020602060206,-4.204420442044205,-4.202820282028203,-4.2012201220122005,-4.199619961996199,-4.198019801980198,-4.196419641964196,-4.194819481948194,-4.193219321932193,-4.191619161916192,-4.19001900190019,-4.188418841884188,-4.1868186818681865,-4.185218521852185,-4.183618361836183,-4.182018201820181,-4.18041804180418,-4.178817881788179,-4.177217721772177,-4.175617561756176,-4.1740174017401745,-4.1724172417241725,-4.1708170817081704,-4.169216921692169,-4.167616761676168,-4.166016601660166,-4.164416441644164,-4.162816281628163,-4.161216121612162,-4.15961596159616,-4.158015801580158,-4.156415641564156,-4.154815481548155,-4.153215321532153,-4.151615161516151,-4.15001500150015,-4.148414841484149,-4.146814681468147,-4.145214521452145,-4.143614361436144,-4.142014201420142,-4.14041404140414,-4.138813881388138,-4.137213721372137,-4.135613561356136,-4.134013401340134,-4.132413241324132,-4.130813081308131,-4.12921292129213,-4.1276127612761275,-4.1260126012601255,-4.124412441244124,-4.122812281228123,-4.121212121212121,-4.119611961196119,-4.118011801180118,-4.116411641164117,-4.114811481148115,-4.113211321132113,-4.1116111611161115,-4.11001100110011,-4.108410841084108,-4.106810681068106,-4.105210521052105,-4.103610361036104,-4.102010201020102,-4.1004100410041,-4.098809880988099,-4.0972097209720975,-4.095609560956095,-4.094009400940093,-4.092409240924092,-4.090809080908091,-4.089208920892089,-4.087608760876087,-4.086008600860086,-4.084408440844085,-4.082808280828083,-4.0812081208120805,-4.079607960796079,-4.078007800780078,-4.076407640764076,-4.074807480748074,-4.073207320732073,-4.071607160716072,-4.07000700070007,-4.068406840684068,-4.0668066806680665,-4.065206520652065,-4.063606360636063,-4.062006200620061,-4.06040604060406,-4.058805880588059,-4.057205720572057,-4.055605560556055,-4.0540054005400545,-4.0524052405240525,-4.05080508050805,-4.049204920492049,-4.047604760476048,-4.046004600460046,-4.044404440444044,-4.042804280428043,-4.041204120412042,-4.03960396039604,-4.038003800380038,-4.036403640364036,-4.034803480348035,-4.033203320332033,-4.031603160316031,-4.03000300030003,-4.028402840284029,-4.026802680268027,-4.025202520252025,-4.023602360236024,-4.022002200220022,-4.02040204020402,-4.018801880188018,-4.017201720172017,-4.015601560156016,-4.014001400140014,-4.012401240124012,-4.010801080108011,-4.00920092009201,-4.0076007600760075,-4.0060006000600055,-4.004400440044004,-4.002800280028003,-4.001200120012001,-3.999599959995999,-3.997999799979998,-3.996399639963996,-3.9947994799479947,-3.9931993199319935,-3.9915991599159915,-3.9899989998999903,-3.9883988398839882,-3.986798679867987,-3.985198519851985,-3.983598359835984,-3.981998199819982,-3.9803980398039807,-3.9787978797879786,-3.9771977197719774,-3.9755975597559754,-3.9739973997399742,-3.972397239723972,-3.970797079707971,-3.969196919691969,-3.967596759675968,-3.9659965996599658,-3.9643964396439646,-3.9627962796279625,-3.9611961196119614,-3.9595959595959593,-3.957995799579958,-3.956395639563956,-3.954795479547955,-3.953195319531953,-3.9515951595159517,-3.9499949994999497,-3.9483948394839485,-3.9467946794679465,-3.9451945194519453,-3.9435943594359433,-3.941994199419942,-3.94039403940394,-3.938793879387939,-3.937193719371937,-3.9355935593559357,-3.9339933993399336,-3.9323932393239325,-3.9307930793079304,-3.9291929192919293,-3.927592759275927,-3.925992599259926,-3.924392439243924,-3.922792279227923,-3.921192119211921,-3.9195919591959196,-3.9179917991799176,-3.9163916391639164,-3.9147914791479144,-3.913191319131913,-3.911591159115911,-3.90999099909991,-3.908390839083908,-3.906790679067907,-3.9051905190519047,-3.9035903590359036,-3.9019901990199015,-3.9003900390039004,-3.8987898789878983,-3.897189718971897,-3.895589558955895,-3.893989398939894,-3.892389238923892,-3.8907890789078907,-3.8891889188918887,-3.8875887588758875,-3.8859885988598855,-3.8843884388438843,-3.8827882788278822,-3.881188118811881,-3.879587958795879,-3.877987798779878,-3.876387638763876,-3.8747874787478747,-3.8731873187318735,-3.8715871587158714,-3.8699869986998703,-3.8683868386838682,-3.866786678667867,-3.865186518651865,-3.863586358635864,-3.861986198619862,-3.8603860386038606,-3.8587858785878586,-3.8571857185718574,-3.8555855585558554,-3.8539853985398542,-3.852385238523852,-3.850785078507851,-3.849184918491849,-3.847584758475848,-3.8459845984598457,-3.8443844384438446,-3.8427842784278425,-3.8411841184118414,-3.8395839583958393,-3.837983798379838,-3.836383638363836,-3.834783478347835,-3.833183318331833,-3.8315831583158317,-3.8299829982998297,-3.8283828382838285,-3.8267826782678265,-3.8251825182518253,-3.8235823582358233,-3.821982198219822,-3.82038203820382,-3.818781878187819,-3.817181718171817,-3.8155815581558157,-3.8139813981398136,-3.8123812381238125,-3.8107810781078104,-3.8091809180918093,-3.807580758075807,-3.805980598059806,-3.804380438043804,-3.802780278027803,-3.801180118011801,-3.7995799579957996,-3.7979797979797976,-3.7963796379637964,-3.7947794779477944,-3.793179317931793,-3.791579157915791,-3.78997899789979,-3.788378837883788,-3.7867786778677868,-3.7851785178517847,-3.7835783578357836,-3.7819781978197815,-3.7803780378037803,-3.7787778777877783,-3.777177717771777,-3.775577557755775,-3.773977397739774,-3.772377237723772,-3.7707770777077707,-3.7691769176917687,-3.7675767576757675,-3.7659765976597654,-3.7643764376437643,-3.7627762776277622,-3.761176117611761,-3.759575957595759,-3.757975797579758,-3.756375637563756,-3.7547754775477546,-3.7531753175317526,-3.7515751575157514,-3.7499749974997503,-3.7483748374837482,-3.746774677467747,-3.745174517451745,-3.743574357435744,-3.741974197419742,-3.7403740374037406,-3.7387738773877386,-3.7371737173717374,-3.7355735573557354,-3.733973397339734,-3.732373237323732,-3.730773077307731,-3.729172917291729,-3.727572757275728,-3.7259725972597257,-3.7243724372437246,-3.7227722772277225,-3.7211721172117214,-3.7195719571957193,-3.717971797179718,-3.716371637163716,-3.714771477147715,-3.713171317131713,-3.7115711571157117,-3.7099709970997097,-3.7083708370837085,-3.7067706770677065,-3.7051705170517053,-3.7035703570357033,-3.701970197019702,-3.7003700370037,-3.698769876987699,-3.697169716971697,-3.6955695569556957,-3.6939693969396936,-3.6923692369236925,-3.6907690769076904,-3.6891689168916892,-3.687568756875687,-3.685968596859686,-3.684368436843684,-3.682768276827683,-3.6811681168116808,-3.6795679567956796,-3.6779677967796776,-3.6763676367636764,-3.6747674767476743,-3.673167316731673,-3.671567156715671,-3.66996699669967,-3.668366836683668,-3.6667666766676668,-3.6651665166516647,-3.6635663566356635,-3.6619661966196615,-3.6603660366036603,-3.6587658765876583,-3.657165716571657,-3.655565556555655,-3.653965396539654,-3.652365236523652,-3.6507650765076507,-3.6491649164916486,-3.6475647564756475,-3.6459645964596454,-3.6443644364436443,-3.6427642764276422,-3.641164116411641,-3.639563956395639,-3.637963796379638,-3.636363636363636,-3.6347634763476346,-3.6331633163316326,-3.6315631563156314,-3.6299629962996303,-3.628362836283628,-3.626762676267627,-3.625162516251625,-3.623562356235624,-3.621962196219622,-3.6203620362036206,-3.6187618761876186,-3.6171617161716174,-3.6155615561556154,-3.613961396139614,-3.612361236123612,-3.610761076107611,-3.609160916091609,-3.6075607560756078,-3.6059605960596057,-3.6043604360436046,-3.6027602760276025,-3.6011601160116014,-3.5995599559955993,-3.597959795979598,-3.596359635963596,-3.594759475947595,-3.593159315931593,-3.5915591559155917,-3.5899589958995897,-3.5883588358835885,-3.5867586758675865,-3.5851585158515853,-3.5835583558355832,-3.581958195819582,-3.58035803580358,-3.578757875787579,-3.577157715771577,-3.5755575557555757,-3.5739573957395736,-3.5723572357235724,-3.5707570757075704,-3.5691569156915692,-3.567556755675567,-3.565956595659566,-3.564356435643564,-3.562756275627563,-3.5611561156115608,-3.5595559555955596,-3.5579557955795575,-3.5563556355635564,-3.5547554755475543,-3.553155315531553,-3.551555155515551,-3.54995499549955,-3.548354835483548,-3.5467546754675467,-3.5451545154515447,-3.5435543554355435,-3.5419541954195415,-3.5403540354035403,-3.5387538753875383,-3.537153715371537,-3.535553555355535,-3.533953395339534,-3.532353235323532,-3.5307530753075307,-3.5291529152915286,-3.5275527552755275,-3.5259525952595254,-3.5243524352435243,-3.522752275227522,-3.521152115211521,-3.519551955195519,-3.517951795179518,-3.516351635163516,-3.5147514751475146,-3.5131513151315126,-3.5115511551155114,-3.5099509950995094,-3.508350835083508,-3.506750675067507,-3.505150515051505,-3.503550355035504,-3.5019501950195018,-3.5003500350035006,-3.4987498749874986,-3.4971497149714974,-3.4955495549554954,-3.493949394939494,-3.492349234923492,-3.490749074907491,-3.489148914891489,-3.4875487548754878,-3.4859485948594857,-3.4843484348434846,-3.4827482748274825,-3.4811481148114813,-3.4795479547954793,-3.477947794779478,-3.476347634763476,-3.474747474747475,-3.473147314731473,-3.4715471547154717,-3.4699469946994697,-3.4683468346834685,-3.4667466746674664,-3.4651465146514653,-3.4635463546354632,-3.461946194619462,-3.46034603460346,-3.458745874587459,-3.457145714571457,-3.4555455545554556,-3.4539453945394536,-3.4523452345234524,-3.4507450745074504,-3.449144914491449,-3.447544754475447,-3.445944594459446,-3.444344434443444,-3.442744274427443,-3.4411441144114407,-3.4395439543954396,-3.4379437943794375,-3.4363436343634364,-3.4347434743474343,-3.433143314331433,-3.431543154315431,-3.42994299429943,-3.428342834283428,-3.4267426742674267,-3.4251425142514247,-3.4235423542354235,-3.4219421942194215,-3.4203420342034203,-3.4187418741874183,-3.417141714171417,-3.415541554155415,-3.413941394139414,-3.412341234123412,-3.4107410741074107,-3.4091409140914086,-3.4075407540754075,-3.4059405940594054,-3.4043404340434043,-3.402740274027402,-3.401140114011401,-3.399539953995399,-3.397939793979398,-3.3963396339633958,-3.3947394739473946,-3.3931393139313926,-3.3915391539153914,-3.3899389938993894,-3.388338833883388,-3.386738673867387,-3.385138513851385,-3.383538353835384,-3.3819381938193818,-3.3803380338033806,-3.3787378737873786,-3.3771377137713774,-3.3755375537553753,-3.373937393739374,-3.372337233723372,-3.370737073707371,-3.369136913691369,-3.3675367536753678,-3.3659365936593657,-3.3643364336433645,-3.3627362736273625,-3.3611361136113613,-3.3595359535953593,-3.357935793579358,-3.356335633563356,-3.354735473547355,-3.353135313531353,-3.3515351535153517,-3.3499349934993496,-3.3483348334833485,-3.3467346734673464,-3.3451345134513453,-3.343534353435343,-3.341934193419342,-3.34033403340334,-3.338733873387339,-3.337133713371337,-3.3355335533553356,-3.3339333933393336,-3.3323332333233324,-3.3307330733073304,-3.329132913291329,-3.327532753275327,-3.325932593259326,-3.324332433243324,-3.322732273227323,-3.3211321132113207,-3.3195319531953196,-3.3179317931793175,-3.3163316331633164,-3.3147314731473143,-3.313131313131313,-3.311531153115311,-3.30993099309931,-3.308330833083308,-3.3067306730673067,-3.3051305130513047,-3.3035303530353035,-3.3019301930193015,-3.3003300330033003,-3.2987298729872983,-3.297129712971297,-3.295529552955295,-3.293929392939294,-3.292329232923292,-3.2907290729072907,-3.2891289128912886,-3.2875287528752875,-3.2859285928592854,-3.2843284328432842,-3.282728272827282,-3.281128112811281,-3.279527952795279,-3.277927792779278,-3.2763276327632758,-3.2747274727472746,-3.2731273127312726,-3.2715271527152714,-3.2699269926992693,-3.268326832683268,-3.266726672667266,-3.265126512651265,-3.263526352635264,-3.2619261926192618,-3.2603260326032606,-3.2587258725872585,-3.2571257125712574,-3.2555255525552553,-3.253925392539254,-3.252325232523252,-3.250725072507251,-3.249124912491249,-3.2475247524752477,-3.2459245924592457,-3.2443244324432445,-3.2427242724272425,-3.2411241124112413,-3.2395239523952393,-3.237923792379238,-3.236323632363236,-3.234723472347235,-3.233123312331233,-3.2315231523152317,-3.2299229922992296,-3.2283228322832285,-3.2267226722672264,-3.2251225122512253,-3.223522352235223,-3.221922192219222,-3.22032203220322,-3.218721872187219,-3.217121712171217,-3.2155215521552156,-3.2139213921392136,-3.2123212321232124,-3.2107210721072104,-3.209120912091209,-3.207520752075207,-3.205920592059206,-3.204320432043204,-3.2027202720272028,-3.2011201120112007,-3.1995199519951996,-3.1979197919791975,-3.1963196319631964,-3.1947194719471943,-3.193119311931193,-3.191519151915191,-3.18991899189919,-3.188318831883188,-3.1867186718671867,-3.1851185118511847,-3.1835183518351835,-3.1819181918191815,-3.1803180318031803,-3.1787178717871782,-3.177117711771177,-3.175517551755175,-3.173917391739174,-3.172317231723172,-3.1707170717071707,-3.1691169116911686,-3.1675167516751674,-3.1659165916591654,-3.1643164316431642,-3.162716271627162,-3.161116111611161,-3.159515951595159,-3.157915791579158,-3.1563156315631558,-3.1547154715471546,-3.1531153115311525,-3.1515151515151514,-3.1499149914991493,-3.148314831483148,-3.146714671467146,-3.145114511451145,-3.143514351435144,-3.1419141914191417,-3.1403140314031406,-3.1387138713871385,-3.1371137113711374,-3.1355135513551353,-3.133913391339134,-3.132313231323132,-3.130713071307131,-3.129112911291129,-3.1275127512751277,-3.1259125912591257,-3.1243124312431245,-3.1227122712271225,-3.1211121112111213,-3.1195119511951193,-3.117911791179118,-3.116311631163116,-3.114711471147115,-3.113111311131113,-3.1115111511151117,-3.1099109910991096,-3.1083108310831085,-3.1067106710671064,-3.1051105110511052,-3.103510351035103,-3.101910191019102,-3.1003100310031,-3.098709870987099,-3.0971097109710968,-3.0955095509550956,-3.0939093909390936,-3.0923092309230924,-3.0907090709070904,-3.089108910891089,-3.087508750875087,-3.085908590859086,-3.084308430843084,-3.0827082708270828,-3.0811081108110807,-3.0795079507950796,-3.0779077907790775,-3.0763076307630763,-3.0747074707470743,-3.073107310731073,-3.071507150715071,-3.06990699069907,-3.068306830683068,-3.0667066706670667,-3.0651065106510647,-3.0635063506350635,-3.0619061906190614,-3.0603060306030603,-3.0587058705870582,-3.057105710571057,-3.055505550555055,-3.053905390539054,-3.052305230523052,-3.0507050705070506,-3.0491049104910486,-3.0475047504750474,-3.0459045904590454,-3.044304430443044,-3.042704270427042,-3.041104110411041,-3.039503950395039,-3.037903790379038,-3.0363036303630357,-3.0347034703470346,-3.0331033103310325,-3.0315031503150314,-3.0299029902990293,-3.028302830283028,-3.026702670267026,-3.025102510251025,-3.023502350235024,-3.0219021902190217,-3.0203020302030206,-3.0187018701870185,-3.0171017101710174,-3.0155015501550153,-3.013901390139014,-3.012301230123012,-3.010701070107011,-3.009100910091009,-3.0075007500750077,-3.0059005900590057,-3.0043004300430045,-3.0027002700270025,-3.0011001100110013,-2.9994999499949992,-2.997899789978998,-2.996299629962996,-2.994699469946995,-2.993099309930993,-2.9914991499149917,-2.9898989898989896,-2.9882988298829884,-2.9866986698669864,-2.9850985098509852,-2.983498349834983,-2.981898189818982,-2.98029802980298,-2.978697869786979,-2.9770977097709768,-2.9754975497549756,-2.9738973897389736,-2.9722972297229724,-2.9706970697069703,-2.969096909690969,-2.967496749674967,-2.965896589658966,-2.964296429642964,-2.9626962696269628,-2.9610961096109607,-2.9594959495949595,-2.9578957895789575,-2.9562956295629563,-2.9546954695469543,-2.953095309530953,-2.951495149514951,-2.94989498949895,-2.948294829482948,-2.9466946694669467,-2.9450945094509446,-2.9434943494349435,-2.9418941894189414,-2.9402940294029403,-2.938693869386938,-2.937093709370937,-2.935493549354935,-2.933893389338934,-2.932293229322932,-2.9306930693069306,-2.9290929092909286,-2.9274927492749274,-2.9258925892589254,-2.924292429242924,-2.922692269226922,-2.921092109210921,-2.919491949194919,-2.917891789178918,-2.9162916291629157,-2.9146914691469146,-2.9130913091309125,-2.9114911491149114,-2.9098909890989093,-2.908290829082908,-2.906690669066906,-2.905090509050905,-2.903490349034903,-2.9018901890189017,-2.9002900290029006,-2.8986898689868985,-2.8970897089708973,-2.8954895489548953,-2.893889388938894,-2.892289228922892,-2.890689068906891,-2.889088908890889,-2.8874887488748877,-2.8858885888588857,-2.8842884288428845,-2.8826882688268824,-2.8810881088108813,-2.8794879487948792,-2.877887788778878,-2.876287628762876,-2.874687468746875,-2.873087308730873,-2.8714871487148717,-2.8698869886988696,-2.8682868286828684,-2.8666866686668664,-2.8650865086508652,-2.863486348634863,-2.861886188618862,-2.86028602860286,-2.858685868586859,-2.8570857085708568,-2.8554855485548556,-2.8538853885388535,-2.8522852285228524,-2.8506850685068503,-2.849084908490849,-2.847484748474847,-2.845884588458846,-2.844284428442844,-2.8426842684268427,-2.8410841084108407,-2.8394839483948395,-2.8378837883788375,-2.8362836283628363,-2.8346834683468343,-2.833083308330833,-2.831483148314831,-2.82988298829883,-2.828282828282828,-2.8266826682668267,-2.8250825082508246,-2.8234823482348235,-2.8218821882188214,-2.8202820282028203,-2.818681868186818,-2.817081708170817,-2.815481548154815,-2.813881388138814,-2.812281228122812,-2.8106810681068106,-2.8090809080908086,-2.8074807480748074,-2.8058805880588054,-2.804280428042804,-2.802680268026802,-2.801080108010801,-2.799479947994799,-2.7978797879787978,-2.7962796279627957,-2.7946794679467946,-2.7930793079307925,-2.7914791479147913,-2.7898789878987893,-2.788278827882788,-2.786678667866786,-2.785078507850785,-2.783478347834783,-2.7818781878187817,-2.7802780278027805,-2.7786778677867785,-2.7770777077707773,-2.7754775477547753,-2.773877387738774,-2.772277227722772,-2.770677067706771,-2.769076907690769,-2.7674767476747677,-2.7658765876587657,-2.7642764276427645,-2.7626762676267624,-2.7610761076107613,-2.7594759475947592,-2.757875787578758,-2.756275627562756,-2.754675467546755,-2.753075307530753,-2.7514751475147516,-2.7498749874987496,-2.7482748274827484,-2.7466746674667464,-2.745074507450745,-2.743474347434743,-2.741874187418742,-2.74027402740274,-2.738673867386739,-2.7370737073707367,-2.7354735473547356,-2.7338733873387335,-2.7322732273227324,-2.7306730673067303,-2.729072907290729,-2.727472747274727,-2.725872587258726,-2.724272427242724,-2.7226722672267227,-2.7210721072107207,-2.7194719471947195,-2.7178717871787175,-2.7162716271627163,-2.7146714671467143,-2.713071307130713,-2.711471147114711,-2.70987098709871,-2.708270827082708,-2.7066706670667067,-2.7050705070507046,-2.7034703470347035,-2.7018701870187014,-2.7002700270027002,-2.698669866986698,-2.697069706970697,-2.695469546954695,-2.693869386938694,-2.6922692269226918,-2.6906690669066906,-2.6890689068906886,-2.6874687468746874,-2.6858685868586853,-2.684268426842684,-2.682668266826682,-2.681068106810681,-2.679467946794679,-2.6778677867786778,-2.6762676267626757,-2.6746674667466745,-2.6730673067306725,-2.6714671467146713,-2.6698669866986693,-2.668266826682668,-2.666666666666666,-2.665066506650665,-2.663466346634663,-2.6618661866186617,-2.6602660266026597,-2.6586658665866585,-2.6570657065706573,-2.6554655465546553,-2.653865386538654,-2.652265226522652,-2.650665066506651,-2.649064906490649,-2.6474647464746477,-2.6458645864586456,-2.6442644264426445,-2.6426642664266424,-2.6410641064106413,-2.639463946394639,-2.637863786378638,-2.636263626362636,-2.634663466346635,-2.633063306330633,-2.6314631463146316,-2.6298629862986296,-2.6282628262826284,-2.6266626662666264,-2.625062506250625,-2.623462346234623,-2.621862186218622,-2.62026202620262,-2.618661866186619,-2.6170617061706167,-2.6154615461546156,-2.6138613861386135,-2.6122612261226124,-2.6106610661066103,-2.609060906090609,-2.607460746074607,-2.605860586058606,-2.604260426042604,-2.6026602660266027,-2.6010601060106007,-2.5994599459945995,-2.5978597859785975,-2.5962596259625963,-2.5946594659465942,-2.593059305930593,-2.591459145914591,-2.58985898589859,-2.588258825882588,-2.5866586658665867,-2.5850585058505846,-2.5834583458345834,-2.5818581858185814,-2.5802580258025802,-2.578657865786578,-2.577057705770577,-2.575457545754575,-2.573857385738574,-2.5722572257225718,-2.5706570657065706,-2.5690569056905685,-2.5674567456745674,-2.5658565856585653,-2.564256425642564,-2.562656265626562,-2.561056105610561,-2.559455945594559,-2.5578557855785578,-2.5562556255625557,-2.5546554655465545,-2.5530553055305525,-2.5514551455145513,-2.5498549854985493,-2.548254825482548,-2.546654665466546,-2.545054505450545,-2.543454345434543,-2.5418541854185417,-2.5402540254025396,-2.5386538653865385,-2.5370537053705373,-2.5354535453545353,-2.533853385338534,-2.532253225322532,-2.530653065306531,-2.529052905290529,-2.5274527452745277,-2.5258525852585256,-2.5242524252425245,-2.5226522652265224,-2.5210521052105213,-2.519451945194519,-2.517851785178518,-2.516251625162516,-2.514651465146515,-2.513051305130513,-2.5114511451145116,-2.5098509850985096,-2.5082508250825084,-2.5066506650665064,-2.505050505050505,-2.503450345034503,-2.501850185018502,-2.5002500250025,-2.4986498649864988,-2.4970497049704967,-2.4954495449544956,-2.4938493849384935,-2.4922492249224923,-2.4906490649064903,-2.489048904890489,-2.487448744874487,-2.485848584858486,-2.484248424842484,-2.4826482648264827,-2.4810481048104807,-2.4794479447944795,-2.4778477847784774,-2.4762476247624763,-2.4746474647464742,-2.473047304730473,-2.471447144714471,-2.46984698469847,-2.468246824682468,-2.4666466646664666,-2.4650465046504646,-2.4634463446344634,-2.4618461846184614,-2.4602460246024602,-2.458645864586458,-2.457045704570457,-2.455445544554455,-2.453845384538454,-2.4522452245224517,-2.4506450645064506,-2.4490449044904485,-2.4474447444744474,-2.4458445844584453,-2.444244424442444,-2.442644264426442,-2.441044104410441,-2.439443944394439,-2.4378437843784377,-2.4362436243624357,-2.4346434643464345,-2.4330433043304325,-2.4314431443144313,-2.4298429842984293,-2.428242824282428,-2.426642664266426,-2.425042504250425,-2.423442344234423,-2.4218421842184217,-2.4202420242024196,-2.4186418641864185,-2.4170417041704164,-2.4154415441544153,-2.413841384138414,-2.412241224122412,-2.410641064106411,-2.409040904090409,-2.4074407440744077,-2.4058405840584056,-2.4042404240424045,-2.4026402640264024,-2.4010401040104012,-2.399439943994399,-2.397839783978398,-2.396239623962396,-2.394639463946395,-2.3930393039303928,-2.3914391439143916,-2.3898389838983896,-2.3882388238823884,-2.3866386638663863,-2.385038503850385,-2.383438343834383,-2.381838183818382,-2.38023802380238,-2.3786378637863788,-2.3770377037703767,-2.3754375437543755,-2.3738373837383735,-2.3722372237223723,-2.3706370637063703,-2.369036903690369,-2.367436743674367,-2.365836583658366,-2.364236423642364,-2.3626362636263627,-2.3610361036103606,-2.3594359435943595,-2.3578357835783574,-2.3562356235623563,-2.3546354635463542,-2.353035303530353,-2.351435143514351,-2.34983498349835,-2.348234823482348,-2.3466346634663466,-2.3450345034503446,-2.3434343434343434,-2.3418341834183414,-2.34023402340234,-2.338633863386338,-2.337033703370337,-2.335433543354335,-2.333833383338334,-2.3322332233223317,-2.3306330633063306,-2.3290329032903285,-2.3274327432743274,-2.3258325832583253,-2.324232423242324,-2.322632263226322,-2.321032103210321,-2.319431943194319,-2.3178317831783177,-2.3162316231623157,-2.3146314631463145,-2.3130313031303125,-2.3114311431143113,-2.3098309830983093,-2.308230823082308,-2.306630663066306,-2.305030503050305,-2.303430343034303,-2.3018301830183017,-2.3002300230022996,-2.2986298629862985,-2.2970297029702964,-2.2954295429542952,-2.293829382938294,-2.292229222922292,-2.290629062906291,-2.289028902890289,-2.2874287428742877,-2.2858285828582856,-2.2842284228422844,-2.2826282628262824,-2.2810281028102812,-2.279427942794279,-2.277827782778278,-2.276227622762276,-2.274627462746275,-2.2730273027302728,-2.2714271427142716,-2.2698269826982695,-2.2682268226822684,-2.2666266626662663,-2.265026502650265,-2.263426342634263,-2.261826182618262,-2.26022602260226,-2.2586258625862587,-2.2570257025702567,-2.2554255425542555,-2.2538253825382535,-2.2522252225222523,-2.2506250625062503,-2.249024902490249,-2.247424742474247,-2.245824582458246,-2.244224422442244,-2.2426242624262427,-2.2410241024102406,-2.2394239423942395,-2.2378237823782374,-2.2362236223622363,-2.234623462346234,-2.233023302330233,-2.231423142314231,-2.22982298229823,-2.228222822282228,-2.2266226622662266,-2.2250225022502246,-2.2234223422342234,-2.2218221822182214,-2.22022202220222,-2.218621862186218,-2.217021702170217,-2.215421542154215,-2.213821382138214,-2.2122212221222117,-2.2106210621062106,-2.2090209020902085,-2.2074207420742074,-2.2058205820582053,-2.204220422042204,-2.202620262026202,-2.201020102010201,-2.199419941994199,-2.1978197819781977,-2.1962196219621957,-2.1946194619461945,-2.1930193019301925,-2.1914191419141913,-2.1898189818981892,-2.188218821882188,-2.186618661866186,-2.185018501850185,-2.183418341834183,-2.1818181818181817,-2.1802180218021796,-2.1786178617861784,-2.1770177017701764,-2.1754175417541752,-2.173817381738174,-2.172217221722172,-2.170617061706171,-2.169016901690169,-2.1674167416741676,-2.1658165816581656,-2.1642164216421644,-2.1626162616261624,-2.161016101610161,-2.159415941594159,-2.157815781578158,-2.156215621562156,-2.154615461546155,-2.1530153015301527,-2.1514151415141516,-2.1498149814981495,-2.1482148214821484,-2.1466146614661463,-2.145014501450145,-2.143414341434143,-2.141814181418142,-2.14021402140214,-2.1386138613861387,-2.1370137013701367,-2.1354135413541355,-2.1338133813381335,-2.1322132213221323,-2.1306130613061303,-2.129012901290129,-2.127412741274127,-2.125812581258126,-2.124212421242124,-2.1226122612261227,-2.1210121012101206,-2.1194119411941195,-2.1178117811781174,-2.1162116211621163,-2.114611461146114,-2.113011301130113,-2.111411141114111,-2.10981098109811,-2.1082108210821078,-2.1066106610661066,-2.1050105010501046,-2.1034103410341034,-2.1018101810181014,-2.1002100210021,-2.098609860986098,-2.097009700970097,-2.095409540954095,-2.0938093809380938,-2.0922092209220917,-2.0906090609060906,-2.0890089008900885,-2.0874087408740873,-2.0858085808580853,-2.084208420842084,-2.082608260826082,-2.081008100810081,-2.079407940794079,-2.0778077807780777,-2.0762076207620757,-2.0746074607460745,-2.0730073007300724,-2.0714071407140713,-2.0698069806980692,-2.068206820682068,-2.066606660666066,-2.065006500650065,-2.063406340634063,-2.0618061806180616,-2.0602060206020596,-2.0586058605860584,-2.0570057005700564,-2.055405540554055,-2.053805380538053,-2.052205220522052,-2.050605060506051,-2.049004900490049,-2.0474047404740476,-2.0458045804580456,-2.0442044204420444,-2.0426042604260424,-2.041004100410041,-2.039403940394039,-2.037803780378038,-2.036203620362036,-2.034603460346035,-2.0330033003300327,-2.0314031403140316,-2.0298029802980295,-2.0282028202820284,-2.0266026602660263,-2.025002500250025,-2.023402340234023,-2.021802180218022,-2.02020202020202,-2.0186018601860187,-2.0170017001700167,-2.0154015401540155,-2.0138013801380135,-2.0122012201220123,-2.0106010601060103,-2.009000900090009,-2.007400740074007,-2.005800580058006,-2.004200420042004,-2.0026002600260027,-2.0010001000100006,-1.9993999399939995,-1.9977997799779974,-1.9961996199619962,-1.9945994599459942,-1.992999299929993,-1.991399139913991,-1.9897989798979898,-1.9881988198819878,-1.9865986598659866,-1.9849984998499846,-1.9833983398339834,-1.9817981798179813,-1.9801980198019802,-1.9785978597859781,-1.976997699769977,-1.975397539753975,-1.9737973797379738,-1.9721972197219717,-1.9705970597059705,-1.9689968996899685,-1.9673967396739673,-1.9657965796579653,-1.9641964196419641,-1.962596259625962,-1.960996099609961,-1.9593959395939589,-1.9577957795779577,-1.9561956195619556,-1.9545954595459545,-1.9529952995299524,-1.9513951395139513,-1.9497949794979492,-1.948194819481948,-1.946594659465946,-1.9449944994499448,-1.9433943394339428,-1.9417941794179416,-1.9401940194019396,-1.9385938593859384,-1.9369936993699364,-1.9353935393539352,-1.9337933793379332,-1.932193219321932,-1.9305930593059308,-1.9289928992899288,-1.9273927392739276,-1.9257925792579256,-1.9241924192419244,-1.9225922592259224,-1.9209920992099212,-1.9193919391939191,-1.917791779177918,-1.916191619161916,-1.9145914591459148,-1.9129912991299127,-1.9113911391139116,-1.9097909790979095,-1.9081908190819084,-1.9065906590659063,-1.9049904990499051,-1.903390339033903,-1.901790179017902,-1.9001900190018999,-1.8985898589858987,-1.8969896989698967,-1.8953895389538955,-1.8937893789378935,-1.8921892189218923,-1.8905890589058902,-1.888988898889889,-1.887388738873887,-1.8857885788578859,-1.8841884188418838,-1.8825882588258827,-1.8809880988098806,-1.8793879387938794,-1.8777877787778774,-1.8761876187618762,-1.8745874587458742,-1.872987298729873,-1.871387138713871,-1.8697869786978698,-1.8681868186818678,-1.8665866586658666,-1.8649864986498645,-1.8633863386338634,-1.8617861786178613,-1.8601860186018602,-1.8585858585858581,-1.856985698569857,-1.855385538553855,-1.8537853785378537,-1.8521852185218517,-1.8505850585058505,-1.8489848984898485,-1.8473847384738473,-1.8457845784578453,-1.844184418441844,-1.842584258425842,-1.840984098409841,-1.8393839383938388,-1.8377837783778377,-1.8361836183618356,-1.8345834583458345,-1.8329832983298324,-1.8313831383138313,-1.8297829782978292,-1.828182818281828,-1.826582658265826,-1.8249824982498248,-1.8233823382338228,-1.8217821782178216,-1.8201820182018196,-1.8185818581858184,-1.8169816981698164,-1.8153815381538152,-1.8137813781378131,-1.812181218121812,-1.81058105810581,-1.8089808980898088,-1.8073807380738076,-1.8057805780578056,-1.8041804180418044,-1.8025802580258024,-1.8009800980098012,-1.7993799379937991,-1.797779777977798,-1.796179617961796,-1.7945794579457948,-1.7929792979297927,-1.7913791379137916,-1.7897789778977895,-1.7881788178817883,-1.7865786578657863,-1.7849784978497851,-1.783378337833783,-1.781778177817782,-1.7801780178017799,-1.7785778577857787,-1.7769776977697767,-1.7753775377537755,-1.7737773777377734,-1.7721772177217723,-1.7705770577057702,-1.768976897689769,-1.767376737673767,-1.7657765776577659,-1.7641764176417638,-1.7625762576257626,-1.7609760976097606,-1.7593759375937594,-1.7577757775777574,-1.7561756175617562,-1.7545754575457542,-1.752975297529753,-1.751375137513751,-1.7497749774977498,-1.7481748174817477,-1.7465746574657466,-1.7449744974497445,-1.7433743374337434,-1.7417741774177413,-1.7401740174017402,-1.738573857385738,-1.736973697369737,-1.735373537353735,-1.7337733773377337,-1.7321732173217317,-1.7305730573057305,-1.7289728972897285,-1.7273727372737273,-1.7257725772577253,-1.724172417241724,-1.722572257225722,-1.7209720972097209,-1.7193719371937188,-1.7177717771777177,-1.7161716171617156,-1.7145714571457145,-1.7129712971297124,-1.7113711371137112,-1.7097709770977092,-1.708170817081708,-1.706570657065706,-1.7049704970497048,-1.7033703370337028,-1.7017701770177016,-1.7001700170016996,-1.6985698569856984,-1.6969696969696964,-1.6953695369536952,-1.6937693769376931,-1.692169216921692,-1.69056905690569,-1.6889688968896888,-1.6873687368736876,-1.6857685768576856,-1.6841684168416844,-1.6825682568256823,-1.6809680968096812,-1.6793679367936791,-1.677767776777678,-1.676167616761676,-1.6745674567456748,-1.6729672967296727,-1.6713671367136715,-1.6697669766976695,-1.6681668166816683,-1.6665666566656663,-1.6649664966496651,-1.663366336633663,-1.661766176617662,-1.6601660166016599,-1.6585658565856587,-1.6569656965696566,-1.6553655365536555,-1.6537653765376534,-1.6521652165216523,-1.6505650565056502,-1.648964896489649,-1.647364736473647,-1.6457645764576458,-1.6441644164416438,-1.6425642564256426,-1.6409640964096406,-1.6393639363936394,-1.6377637763776374,-1.6361636163616362,-1.6345634563456342,-1.632963296329633,-1.631363136313631,-1.6297629762976298,-1.6281628162816277,-1.6265626562656266,-1.6249624962496245,-1.6233623362336234,-1.6217621762176213,-1.6201620162016201,-1.618561856185618,-1.616961696169617,-1.6153615361536149,-1.6137613761376137,-1.6121612161216117,-1.6105610561056105,-1.6089608960896085,-1.6073607360736073,-1.6057605760576052,-1.604160416041604,-1.602560256025602,-1.6009600960096009,-1.5993599359935988,-1.5977597759775977,-1.5961596159615956,-1.5945594559455945,-1.5929592959295924,-1.5913591359135912,-1.5897589758975892,-1.588158815881588,-1.586558655865586,-1.5849584958495848,-1.5833583358335828,-1.5817581758175816,-1.5801580158015796,-1.5785578557855784,-1.5769576957695763,-1.5753575357535752,-1.5737573757375731,-1.572157215721572,-1.57055705570557,-1.5689568956895688,-1.5673567356735667,-1.5657565756575655,-1.5641564156415644,-1.5625562556255623,-1.5609560956095612,-1.5593559355935591,-1.557755775577558,-1.556155615561556,-1.5545554555455547,-1.5529552955295527,-1.5513551355135515,-1.5497549754975495,-1.5481548154815483,-1.5465546554655463,-1.544954495449545,-1.543354335433543,-1.541754175417542,-1.5401540154015398,-1.5385538553855387,-1.5369536953695366,-1.5353535353535355,-1.5337533753375334,-1.5321532153215323,-1.5305530553055302,-1.528952895289529,-1.527352735273527,-1.5257525752575258,-1.5241524152415238,-1.5225522552255226,-1.5209520952095206,-1.5193519351935194,-1.5177517751775174,-1.5161516151615162,-1.5145514551455141,-1.512951295129513,-1.511351135113511,-1.5097509750975098,-1.5081508150815077,-1.5065506550655066,-1.5049504950495045,-1.5033503350335033,-1.5017501750175013,-1.5001500150015001,-1.498549854985498,-1.496949694969497,-1.4953495349534949,-1.4937493749374937,-1.4921492149214917,-1.4905490549054905,-1.4889488948894885,-1.4873487348734873,-1.4857485748574852,-1.484148414841484,-1.482548254825482,-1.4809480948094809,-1.4793479347934788,-1.4777477747774777,-1.4761476147614756,-1.4745474547454744,-1.4729472947294724,-1.4713471347134712,-1.4697469746974692,-1.468146814681468,-1.466546654665466,-1.4649464946494648,-1.4633463346334628,-1.4617461746174616,-1.4601460146014595,-1.4585458545854584,-1.4569456945694563,-1.4553455345534552,-1.4537453745374531,-1.452145214521452,-1.45054505450545,-1.4489448944894487,-1.4473447344734467,-1.4457445744574455,-1.4441444144414444,-1.4425442544254423,-1.4409440944094412,-1.439343934393439,-1.437743774377438,-1.436143614361436,-1.4345434543454347,-1.4329432943294327,-1.4313431343134315,-1.4297429742974295,-1.4281428142814283,-1.4265426542654263,-1.424942494249425,-1.423342334233423,-1.4217421742174219,-1.4201420142014198,-1.4185418541854187,-1.4169416941694166,-1.4153415341534155,-1.4137413741374134,-1.4121412141214122,-1.4105410541054102,-1.408940894089409,-1.407340734073407,-1.4057405740574058,-1.4041404140414038,-1.4025402540254026,-1.4009400940094006,-1.3993399339933994,-1.3977397739773973,-1.3961396139613962,-1.3945394539453941,-1.392939293929393,-1.391339133913391,-1.3897389738973898,-1.3881388138813877,-1.3865386538653866,-1.3849384938493845,-1.3833383338333833,-1.3817381738173813,-1.3801380138013801,-1.378537853785378,-1.376937693769377,-1.3753375337533749,-1.3737373737373737,-1.3721372137213717,-1.3705370537053705,-1.3689368936893684,-1.3673367336733673,-1.3657365736573652,-1.364136413641364,-1.362536253625362,-1.3609360936093609,-1.3593359335933588,-1.3577357735773576,-1.3561356135613556,-1.3545354535453544,-1.3529352935293524,-1.3513351335133512,-1.3497349734973492,-1.348134813481348,-1.346534653465346,-1.3449344934493448,-1.3433343334333427,-1.3417341734173416,-1.3401340134013395,-1.3385338533853384,-1.3369336933693363,-1.3353335333533352,-1.333733373337333,-1.332133213321332,-1.33053305330533,-1.3289328932893287,-1.3273327332733267,-1.3257325732573255,-1.3241324132413244,-1.3225322532253223,-1.3209320932093211,-1.319331933193319,-1.317731773177318,-1.3161316131613159,-1.3145314531453147,-1.3129312931293127,-1.3113311331133115,-1.3097309730973095,-1.3081308130813083,-1.3065306530653062,-1.304930493049305,-1.303330333033303,-1.3017301730173019,-1.3001300130012998,-1.2985298529852987,-1.2969296929692966,-1.2953295329532954,-1.2937293729372934,-1.2921292129212922,-1.2905290529052902,-1.288928892889289,-1.287328732873287,-1.2857285728572858,-1.2841284128412838,-1.2825282528252826,-1.2809280928092805,-1.2793279327932794,-1.2777277727772773,-1.2761276127612762,-1.2745274527452741,-1.272927292729273,-1.271327132713271,-1.2697269726972698,-1.2681268126812677,-1.2665266526652665,-1.2649264926492645,-1.2633263326332633,-1.2617261726172613,-1.2601260126012601,-1.258525852585258,-1.256925692569257,-1.2553255325532549,-1.2537253725372537,-1.2521252125212516,-1.2505250525052505,-1.2489248924892484,-1.2473247324732473,-1.2457245724572452,-1.244124412441244,-1.242524252425242,-1.2409240924092408,-1.2393239323932388,-1.2377237723772376,-1.2361236123612356,-1.2345234523452344,-1.2329232923292324,-1.2313231323132312,-1.2297229722972292,-1.228122812281228,-1.226522652265226,-1.2249224922492248,-1.2233223322332227,-1.2217221722172216,-1.2201220122012195,-1.2185218521852184,-1.2169216921692163,-1.2153215321532151,-1.213721372137213,-1.212121212121212,-1.2105210521052099,-1.2089208920892087,-1.2073207320732067,-1.2057205720572055,-1.2041204120412035,-1.2025202520252023,-1.2009200920092011,-1.199319931993199,-1.197719771977198,-1.1961196119611959,-1.1945194519451947,-1.1929192919291927,-1.1913191319131915,-1.1897189718971894,-1.1881188118811883,-1.1865186518651862,-1.184918491849185,-1.183318331833183,-1.1817181718171819,-1.1801180118011798,-1.1785178517851786,-1.1769176917691766,-1.1753175317531754,-1.1737173717371734,-1.1721172117211722,-1.1705170517051702,-1.168916891689169,-1.167316731673167,-1.1657165716571658,-1.1641164116411638,-1.1625162516251626,-1.1609160916091605,-1.1593159315931594,-1.1577157715771573,-1.1561156115611562,-1.1545154515451541,-1.152915291529153,-1.151315131513151,-1.1497149714971497,-1.1481148114811477,-1.1465146514651465,-1.1449144914491445,-1.1433143314331433,-1.1417141714171413,-1.14011401140114,-1.138513851385138,-1.136913691369137,-1.1353135313531348,-1.1337133713371337,-1.1321132113211316,-1.1305130513051305,-1.1289128912891284,-1.1273127312731273,-1.1257125712571252,-1.124112411241124,-1.122512251225122,-1.1209120912091208,-1.1193119311931188,-1.1177117711771176,-1.1161116111611156,-1.1145114511451144,-1.1129112911291124,-1.1113111311131112,-1.1097109710971091,-1.108110811081108,-1.106510651065106,-1.1049104910491048,-1.1033103310331027,-1.1017101710171016,-1.1001100110010995,-1.0985098509850983,-1.0969096909690963,-1.0953095309530951,-1.093709370937093,-1.092109210921092,-1.0905090509050899,-1.0889088908890887,-1.0873087308730867,-1.0857085708570855,-1.0841084108410834,-1.0825082508250823,-1.0809080908090811,-1.079307930793079,-1.077707770777078,-1.0761076107610759,-1.0745074507450747,-1.0729072907290726,-1.0713071307130715,-1.0697069706970694,-1.0681068106810683,-1.0665066506650662,-1.064906490649065,-1.063306330633063,-1.0617061706170619,-1.0601060106010598,-1.0585058505850586,-1.0569056905690566,-1.0553055305530554,-1.0537053705370534,-1.0521052105210522,-1.0505050505050502,-1.048904890489049,-1.047304730473047,-1.0457045704570458,-1.0441044104410437,-1.0425042504250426,-1.0409040904090405,-1.0393039303930394,-1.0377037703770373,-1.0361036103610362,-1.034503450345034,-1.032903290329033,-1.031303130313031,-1.0297029702970297,-1.0281028102810277,-1.0265026502650265,-1.0249024902490245,-1.0233023302330233,-1.0217021702170213,-1.02010201020102,-1.018501850185018,-1.0169016901690169,-1.0153015301530148,-1.0137013701370137,-1.0121012101210116,-1.0105010501050105,-1.0089008900890084,-1.0073007300730072,-1.0057005700570052,-1.004100410041004,-1.002500250025002,-1.0009000900090008,-.9992999299929988,-.9976997699769976,-.9960996099609956,-.9944994499449944,-.9928992899289923,-.9912991299129912,-.9896989698969891,-.988098809880988,-.9864986498649859,-.9848984898489848,-.9832983298329827,-.9816981698169815,-.9800980098009795,-.9784978497849783,-.9768976897689763,-.9752975297529751,-.9736973697369731,-.9720972097209719,-.9704970497049699,-.9688968896889687,-.9672967296729666,-.9656965696569655,-.9640964096409634,-.9624962496249623,-.9608960896089602,-.9592959295929591,-.9576957695769579,-.9560956095609559,-.9544954495449547,-.9528952895289526,-.9512951295129515,-.9496949694969494,-.9480948094809483,-.9464946494649462,-.944894489448945,-.943294329432943,-.9416941694169418,-.9400940094009398,-.9384938493849386,-.9368936893689366,-.9352935293529354,-.9336933693369334,-.9320932093209322,-.9304930493049302,-.928892889288929,-.9272927292729269,-.9256925692569258,-.9240924092409237,-.9224922492249226,-.9208920892089205,-.9192919291929194,-.9176917691769173,-.9160916091609161,-.9144914491449141,-.9128912891289129,-.9112911291129109,-.9096909690969097,-.9080908090809077,-.9064906490649065,-.9048904890489045,-.9032903290329033,-.9016901690169012,-.9000900090009001,-.898489848984898,-.8968896889688969,-.8952895289528948,-.8936893689368937,-.8920892089208916,-.8904890489048904,-.8888888888888884,-.8872887288728872,-.8856885688568852,-.884088408840884,-.882488248824882,-.8808880888088808,-.8792879287928788,-.8776877687768776,-.8760876087608755,-.8744874487448744,-.8728872887288723,-.8712871287128712,-.8696869686968691,-.868086808680868,-.8664866486648659,-.8648864886488647,-.8632863286328627,-.8616861686168615,-.8600860086008595,-.8584858485848583,-.8568856885688563,-.8552855285528551,-.8536853685368531,-.8520852085208519,-.8504850485048498,-.8488848884888487,-.8472847284728466,-.8456845684568455,-.8440844084408434,-.8424842484248423,-.8408840884088402,-.839283928392839,-.8376837683768379,-.8360836083608358,-.8344834483448347,-.8328832883288326,-.8312831283128315,-.8296829682968294,-.8280828082808283,-.8264826482648262,-.824882488248825,-.823282328232823,-.8216821682168218,-.8200820082008198,-.8184818481848186,-.8168816881688166,-.8152815281528154,-.8136813681368134,-.8120812081208122,-.8104810481048101,-.808880888088809,-.8072807280728069,-.8056805680568058,-.8040804080408037,-.8024802480248026,-.8008800880088005,-.7992799279927993,-.7976797679767973,-.7960796079607961,-.7944794479447941,-.7928792879287929,-.7912791279127909,-.7896789678967897,-.7880788078807877,-.7864786478647865,-.7848784878487844,-.7832783278327833,-.7816781678167812,-.7800780078007801,-.778477847784778,-.7768776877687769,-.7752775277527748,-.7736773677367736,-.7720772077207716,-.7704770477047704,-.7688768876887684,-.7672767276727672,-.7656765676567652,-.764076407640764,-.762476247624762,-.7608760876087608,-.7592759275927587,-.7576757675767576,-.7560756075607555,-.7544754475447544,-.7528752875287523,-.7512751275127512,-.7496749674967491,-.748074807480748,-.7464746474647459,-.7448744874487447,-.7432743274327427,-.7416741674167415,-.7400740074007395,-.7384738473847383,-.7368736873687363,-.7352735273527351,-.733673367336733,-.7320732073207319,-.7304730473047298,-.7288728872887287,-.7272727272727266,-.7256725672567255,-.7240724072407234,-.7224722472247223,-.7208720872087202,-.719271927192719,-.717671767176717,-.7160716071607158,-.7144714471447147,-.7128712871287126,-.7112711271127115,-.7096709670967094,-.7080708070807082,-.7064706470647062,-.704870487048705,-.703270327032703,-.7016701670167018,-.7000700070006998,-.6984698469846986,-.6968696869686966,-.6952695269526954,-.6936693669366933,-.6920692069206922,-.6904690469046901,-.688868886888689,-.6872687268726869,-.6856685668566858,-.6840684068406837,-.6824682468246825,-.6808680868086805,-.6792679267926793,-.6776677667766773,-.6760676067606761,-.6744674467446741,-.6728672867286729,-.6712671267126709,-.6696669666966697,-.6680668066806676,-.6664666466646665,-.6648664866486644,-.6632663266326633,-.6616661666166612,-.6600660066006601,-.658465846584658,-.6568656865686568,-.6552655265526548,-.6536653665366536,-.6520652065206516,-.6504650465046504,-.6488648864886484,-.6472647264726472,-.6456645664566452,-.644064406440644,-.642464246424642,-.6408640864086408,-.6392639263926387,-.6376637663766376,-.6360636063606355,-.6344634463446344,-.6328632863286323,-.6312631263126312,-.6296629662966291,-.6280628062806279,-.6264626462646259,-.6248624862486247,-.6232623262326227,-.6216621662166215,-.6200620062006195,-.6184618461846183,-.6168616861686163,-.6152615261526151,-.613661366136613,-.6120612061206119,-.6104610461046098,-.6088608860886087,-.6072607260726066,-.6056605660566055,-.6040604060406034,-.6024602460246022,-.6008600860086002,-.599259925992599,-.597659765976597,-.5960596059605958,-.5944594459445947,-.5928592859285926,-.5912591259125914,-.5896589658965894,-.5880588058805882,-.5864586458645862,-.584858485848585,-.583258325832583,-.5816581658165818,-.5800580058005798,-.5784578457845786,-.5768576857685765,-.5752575257525754,-.5736573657365733,-.5720572057205722,-.5704570457045701,-.568856885688569,-.5672567256725669,-.5656565656565657,-.5640564056405637,-.5624562456245625,-.5608560856085605,-.5592559255925593,-.5576557655765573,-.5560556055605561,-.5544554455445541,-.5528552855285529,-.5512551255125508,-.5496549654965497,-.5480548054805476,-.5464546454645465,-.5448544854485444,-.5432543254325433,-.5416541654165412,-.54005400540054,-.538453845384538,-.5368536853685368,-.5352535253525348,-.5336533653365336,-.5320532053205316,-.5304530453045304,-.5288528852885284,-.5272527252725272,-.5256525652565252,-.524052405240524,-.5224522452245219,-.5208520852085208,-.5192519251925187,-.5176517651765176,-.5160516051605155,-.5144514451445144,-.5128512851285123,-.5112511251125111,-.5096509650965091,-.5080508050805079,-.5064506450645059,-.5048504850485047,-.5032503250325027,-.5016501650165015,-.5000500050004995,-.4984498449844983,-.49684968496849624,-.4952495249524951,-.49364936493649303,-.49204920492049187,-.4904490449044898,-.48884888488848866,-.4872487248724866,-.48564856485648544,-.4840484048404834,-.48244824482448223,-.4808480848084802,-.479247924792479,-.47764776477647697,-.4760476047604758,-.47444744474447464,-.4728472847284726,-.47124712471247143,-.4696469646964694,-.4680468046804682,-.46644664466446617,-.464846484648465,-.46324632463246296,-.4616461646164618,-.46004600460045975,-.4584458445844586,-.45684568456845653,-.45524552455245537,-.4536453645364533,-.45204520452045216,-.4504450445044501,-.44884488448844895,-.4472447244724469,-.44564456445644574,-.4440444044404437,-.4424442444244425,-.4408440844084405,-.4392439243924393,-.43764376437643726,-.4360436043604361,-.43444344434443405,-.4328432843284329,-.43124312431243084,-.4296429642964297,-.4280428042804276,-.42644264426442646,-.4248424842484244,-.42324232423242325,-.4216421642164212,-.42004200420042004,-.418441844184418,-.4168416841684168,-.4152415241524148,-.4136413641364136,-.41204120412041156,-.4104410441044104,-.40884088408840835,-.4072407240724072,-.40564056405640514,-.404040404040404,-.4024402440244019,-.40084008400840077,-.3992399239923987,-.39763976397639755,-.3960396039603955,-.39443944394439434,-.3928392839283923,-.39123912391239113,-.3896389638963891,-.3880388038803879,-.38643864386438587,-.3848384838483847,-.38323832383238265,-.3816381638163815,-.38003800380037944,-.3784378437843783,-.37683768376837623,-.37523752375237507,-.373637363736373,-.37203720372037186,-.3704370437043698,-.36883688368836864,-.3672367236723666,-.36563656365636543,-.3640364036403634,-.3624362436243622,-.36083608360836017,-.359235923592359,-.35763576357635696,-.3560356035603558,-.35443544354435375,-.3528352835283526,-.3512351235123514,-.34963496349634937,-.3480348034803482,-.34643464346434616,-.344834483448345,-.34323432343234295,-.3416341634163418,-.34003400340033973,-.3384338433843386,-.3368336833683365,-.33523352335233536,-.3336333633363333,-.33203320332033215,-.3304330433043301,-.32883288328832894,-.3272327232723269,-.3256325632563257,-.3240324032403237,-.3224322432243225,-.32083208320832046,-.3192319231923193,-.31763176317631725,-.3160316031603161,-.31443144314431404,-.3128312831283129,-.3112311231123108,-.30963096309630966,-.3080308030803076,-.30643064306430645,-.3048304830483044,-.30323032303230324,-.3016301630163012,-.3000300030003,-.298429842984298,-.2968296829682968,-.29522952295229477,-.2936293629362936,-.29202920292029155,-.2904290429042904,-.28882888288828834,-.2872287228722872,-.28562856285628513,-.28402840284028397,-.2824282428242819,-.28082808280828075,-.2792279227922787,-.27762776277627754,-.2760276027602755,-.27442744274427433,-.2728272827282723,-.2712271227122711,-.26962696269626907,-.2680268026802679,-.26642664266426586,-.2648264826482647,-.26322632263226264,-.2616261626162615,-.26002600260025943,-.25842584258425827,-.2568256825682562,-.25522552255225506,-.253625362536253,-.25202520252025185,-.2504250425042498,-.24882488248824863,-.24722472247224658,-.24562456245624542,-.24402440244024337,-.2424242424242422,-.24082408240824016,-.239223922392239,-.23762376237623695,-.23602360236023578,-.23442344234423373,-.23282328232823257,-.2312231223122314,-.22962296229622936,-.2280228022802282,-.22642264226422615,-.224822482248225,-.22322232223222294,-.22162216221622177,-.22002200220021972,-.21842184218421856,-.2168216821682165,-.21522152215221535,-.2136213621362133,-.21202120212021214,-.2104210421042101,-.20882088208820893,-.20722072207220688,-.2056205620562057,-.20402040204020366,-.2024202420242025,-.20082008200820045,-.1992199219921993,-.19761976197619724,-.19601960196019608,-.19441944194419403,-.19281928192819286,-.19121912191219081,-.18961896189618965,-.1880188018801876,-.18641864186418644,-.1848184818481844,-.18321832183218323,-.18161816181618118,-.18001800180018002,-.17841784178417797,-.1768176817681768,-.17521752175217475,-.1736173617361736,-.17201720172017154,-.17041704170417038,-.16881688168816833,-.16721672167216717,-.16561656165616512,-.16401640164016396,-.1624162416241619,-.16081608160816074,-.1592159215921587,-.15761576157615753,-.15601560156015548,-.15441544154415432,-.15281528152815227,-.1512151215121511,-.14961496149614906,-.1480148014801479,-.14641464146414584,-.14481448144814468,-.14321432143214263,-.14161416141614147,-.14001400140013942,-.13841384138413826,-.1368136813681362,-.13521352135213505,-.133613361336133,-.13201320132013183,-.13041304130412978,-.12881288128812862,-.12721272127212657,-.1256125612561254,-.12401240124012336,-.1224122412241222,-.12081208120812015,-.11921192119211899,-.11761176117611694,-.11601160116011577,-.11441144114411372,-.11281128112811256,-.11121112111211051,-.10961096109610935,-.10801080108010819,-.10641064106410614,-.10481048104810498,-.10321032103210293,-.10161016101610176,-.10001000100009971,-.09840984098409855,-.0968096809680965,-.09520952095209534,-.09360936093609329,-.09200920092009213,-.09040904090409008,-.08880888088808891,-.08720872087208686,-.0856085608560857,-.08400840084008365,-.08240824082408249,-.08080808080808044,-.07920792079207928,-.07760776077607723,-.07600760076007607,-.07440744074407402,-.07280728072807285,-.0712071207120708,-.06960696069606964,-.06800680068006759,-.06640664066406643,-.06480648064806438,-.06320632063206322,-.06160616061606117,-.060006000600060005,-.058405840584057955,-.05680568056805679,-.05520552055205474,-.05360536053605358,-.05200520052005153,-.05040504050405037,-.04880488048804832,-.04720472047204716,-.04560456045604511,-.044004400440043945,-.042404240424041895,-.04080408040804073,-.03920392039203868,-.03760376037603752,-.03600360036003547,-.03440344034403431,-.03280328032803226,-.031203120312031096,-.029602960296029046,-.028002800280027884,-.026402640264025834,-.024802480248024672,-.023202320232022622,-.02160216021602146,-.02000200020001941,-.018401840184018248,-.016801680168016198,-.015201520152015036,-.013601360136012985,-.012001200120011823,-.010401040104009773,-.008800880088008611,-.007200720072006561,-.005600560056005399,-.004000400040003349,-.002400240024002187,-.0008000800080001369,.0008000800080019133,.002400240024002187,.004000400040004237,.005600560056006287,.0072007200720083375,.008800880088008611,.010401040104010661,.012001200120012712,.013601360136012985,.015201520152015036,.016801680168017086,.018401840184019136,.02000200020001941,.02160216021602146,.02320232023202351,.02480248024802556,.026402640264025834,.028002800280027884,.029602960296029934,.031203120312031984,.03280328032803226,.03440344034403431,.03600360036003636,.03760376037603841,.03920392039203868,.04080408040804073,.04240424042404278,.04400440044004483,.04560456045604511,.04720472047204716,.04880488048804921,.05040504050405126,.05200520052005153,.05360536053605358,.05520552055205563,.05680568056805768,.058405840584057955,.060006000600060005,.061606160616062056,.0632063206320641,.06480648064806438,.06640664066406643,.06800680068006848,.06960696069607053,.0712071207120708,.07280728072807285,.0744074407440749,.07600760076007695,.07760776077607723,.07920792079207928,.08080808080808133,.08240824082408338,.08400840084008365,.0856085608560857,.08720872087208775,.0888088808880898,.09040904090409008,.09200920092009213,.09360936093609418,.09520952095209623,.0968096809680965,.09840984098409855,.1000100010001006,.10161016101610265,.10321032103210293,.10481048104810498,.10641064106410703,.10801080108010908,.10961096109610935,.1112111211121114,.11281128112811345,.1144114411441155,.11601160116011577,.11761176117611782,.11921192119211987,.12081208120812192,.1224122412241222,.12401240124012425,.1256125612561263,.12721272127212835,.12881288128812862,.13041304130413067,.13201320132013272,.133613361336133,.13521352135213505,.1368136813681371,.13841384138413915,.14001400140013942,.14161416141614147,.14321432143214352,.14481448144814557,.14641464146414584,.1480148014801479,.14961496149614995,.151215121512152,.15281528152815227,.15441544154415432,.15601560156015637,.15761576157615842,.1592159215921587,.16081608160816074,.1624162416241628,.16401640164016484,.16561656165616512,.16721672167216717,.16881688168816922,.17041704170417127,.17201720172017154,.1736173617361736,.17521752175217564,.1768176817681777,.17841784178417797,.18001800180018002,.18161816181618207,.18321832183218412,.1848184818481844,.18641864186418644,.1880188018801885,.18961896189619054,.19121912191219081,.19281928192819286,.19441944194419492,.19601960196019697,.19761976197619724,.1992199219921993,.20082008200820134,.2024202420242034,.20402040204020366,.2056205620562057,.20722072207220776,.2088208820882098,.2104210421042101,.21202120212021214,.2136213621362142,.21522152215221624,.2168216821682165,.21842184218421856,.2200220022002206,.22162216221622266,.22322232223222294,.224822482248225,.22642264226422704,.2280228022802291,.22962296229622936,.2312231223122314,.23282328232823346,.2344234423442355,.23602360236023578,.23762376237623783,.23922392239223988,.24082408240824194,.2424242424242422,.24402440244024426,.2456245624562463,.24722472247224836,.24882488248824863,.2504250425042507,.25202520252025273,.253625362536253,.25522552255225506,.2568256825682571,.25842584258425916,.26002600260025943,.2616261626162615,.26322632263226353,.2648264826482656,.26642664266426586,.2680268026802679,.26962696269626996,.271227122712272,.2728272827282723,.27442744274427433,.2760276027602764,.27762776277627843,.2792279227922787,.28082808280828075,.2824282428242828,.28402840284028485,.28562856285628513,.2872287228722872,.28882888288828923,.2904290429042913,.29202920292029155,.2936293629362936,.29522952295229565,.2968296829682977,.298429842984298,.3000300030003,.3016301630163021,.3032303230323041,.3048304830483044,.30643064306430645,.3080308030803085,.30963096309631055,.3112311231123108,.3128312831283129,.3144314431443149,.316031603160317,.31763176317631725,.3192319231923193,.32083208320832135,.3224322432243234,.3240324032403237,.3256325632563257,.3272327232723278,.3288328832883298,.3304330433043301,.33203320332033215,.3336333633363342,.33523352335233625,.3368336833683365,.3384338433843386,.3400340034003406,.3416341634163427,.34323432343234295,.344834483448345,.34643464346434705,.3480348034803491,.34963496349634937,.3512351235123514,.35283528352835347,.3544354435443555,.3560356035603558,.35763576357635785,.3592359235923599,.36083608360836195,.3624362436243622,.36403640364036427,.3656365636563663,.36723672367236837,.36883688368836864,.3704370437043707,.37203720372037274,.3736373637363748,.37523752375237507,.3768376837683771,.37843784378437917,.38003800380037944,.3816381638163815,.38323832383238354,.3848384838483856,.38643864386438587,.3880388038803879,.38963896389638997,.391239123912392,.3928392839283923,.39443944394439434,.3960396039603964,.39763976397639844,.3992399239923987,.40084008400840077,.4024402440244028,.40404040404040487,.40564056405640514,.4072407240724072,.40884088408840924,.4104410441044113,.41204120412041156,.4136413641364136,.41524152415241566,.4168416841684177,.418441844184418,.42004200420042004,.4216421642164221,.42324232423242414,.4248424842484244,.42644264426442646,.4280428042804285,.42964296429643056,.43124312431243084,.4328432843284329,.43444344434443494,.436043604360437,.43764376437643726,.4392439243924393,.44084408440844136,.4424442444244434,.4440444044404437,.44564456445644574,.4472447244724478,.44884488448844984,.4504450445044501,.45204520452045216,.4536453645364542,.45524552455245626,.45684568456845653,.4584458445844586,.46004600460046063,.4616461646164627,.46324632463246296,.464846484648465,.46644664466446706,.4680468046804691,.4696469646964694,.47124712471247143,.4728472847284735,.47444744474447553,.4760476047604758,.47764776477647786,.4792479247924799,.48084808480848196,.48244824482448223,.4840484048404843,.48564856485648633,.4872487248724884,.48884888488848866,.4904490449044907,.49204920492049276,.4936493649364948,.4952495249524951,.49684968496849713,.4984498449844992,.5000500050004995,.5016501650165015,.5032503250325036,.5048504850485056,.5064506450645059,.5080508050805079,.50965096509651,.511251125112512,.5128512851285123,.5144514451445144,.5160516051605164,.5176517651765185,.5192519251925187,.5208520852085208,.5224522452245228,.5240524052405249,.5256525652565252,.5272527252725272,.5288528852885293,.5304530453045313,.5320532053205316,.5336533653365336,.5352535253525357,.5368536853685377,.538453845384538,.54005400540054,.5416541654165421,.5432543254325441,.5448544854485444,.5464546454645465,.5480548054805485,.5496549654965506,.5512551255125508,.5528552855285529,.554455445544555,.556055605560557,.5576557655765573,.5592559255925593,.5608560856085614,.5624562456245634,.5640564056405637,.5656565656565657,.5672567256725678,.5688568856885698,.5704570457045701,.5720572057205722,.5736573657365742,.5752575257525763,.5768576857685765,.5784578457845786,.5800580058005806,.5816581658165827,.583258325832583,.584858485848585,.5864586458645871,.5880588058805891,.5896589658965894,.5912591259125914,.5928592859285935,.5944594459445955,.5960596059605958,.5976597659765979,.5992599259925999,.600860086008602,.6024602460246022,.6040604060406043,.6056605660566063,.6072607260726084,.6088608860886087,.6104610461046107,.6120612061206128,.6136613661366148,.6152615261526151,.6168616861686171,.6184618461846192,.6200620062006195,.6216621662166215,.6232623262326236,.6248624862486256,.6264626462646259,.6280628062806279,.62966296629663,.631263126312632,.6328632863286323,.6344634463446344,.6360636063606364,.6376637663766385,.6392639263926387,.6408640864086408,.6424642464246428,.6440644064406449,.6456645664566452,.6472647264726472,.6488648864886493,.6504650465046513,.6520652065206516,.6536653665366536,.6552655265526557,.6568656865686577,.658465846584658,.6600660066006601,.6616661666166621,.6632663266326642,.6648664866486644,.6664666466646665,.6680668066806685,.6696669666966706,.6712671267126709,.6728672867286729,.674467446744675,.676067606760677,.6776677667766773,.6792679267926793,.6808680868086814,.6824682468246834,.6840684068406837,.6856685668566858,.6872687268726878,.6888688868886899,.6904690469046901,.6920692069206922,.6936693669366942,.6952695269526963,.6968696869686966,.6984698469846986,.7000700070007007,.7016701670167027,.703270327032703,.704870487048705,.7064706470647071,.7080708070807091,.7096709670967094,.7112711271127115,.7128712871287135,.7144714471447156,.7160716071607158,.7176717671767179,.7192719271927199,.720872087208722,.7224722472247223,.7240724072407243,.7256725672567264,.7272727272727284,.7288728872887287,.7304730473047307,.7320732073207328,.7336733673367348,.7352735273527351,.7368736873687372,.7384738473847392,.7400740074007395,.7416741674167415,.7432743274327436,.7448744874487456,.7464746474647459,.748074807480748,.74967496749675,.751275127512752,.7528752875287523,.7544754475447544,.7560756075607564,.7576757675767585,.7592759275927587,.7608760876087608,.7624762476247628,.7640764076407649,.7656765676567652,.7672767276727672,.7688768876887693,.7704770477047713,.7720772077207716,.7736773677367736,.7752775277527757,.7768776877687777,.778477847784778,.7800780078007801,.7816781678167821,.7832783278327842,.7848784878487844,.7864786478647865,.7880788078807885,.7896789678967906,.7912791279127909,.7928792879287929,.794479447944795,.796079607960797,.7976797679767973,.7992799279927993,.8008800880088014,.8024802480248034,.8040804080408037,.8056805680568058,.8072807280728078,.8088808880888099,.8104810481048101,.8120812081208122,.8136813681368142,.8152815281528163,.8168816881688166,.8184818481848186,.8200820082008207,.8216821682168227,.823282328232823,.824882488248825,.8264826482648271,.8280828082808291,.8296829682968294,.8312831283128315,.8328832883288335,.8344834483448356,.8360836083608358,.8376837683768379,.8392839283928399,.840884088408842,.8424842484248423,.8440844084408443,.8456845684568464,.8472847284728484,.8488848884888487,.8504850485048507,.8520852085208528,.8536853685368548,.8552855285528551,.8568856885688572,.8584858485848592,.8600860086008613,.8616861686168615,.8632863286328636,.8648864886488656,.8664866486648659,.868086808680868,.86968696869687,.8712871287128721,.8728872887288723,.8744874487448744,.8760876087608764,.8776877687768785,.8792879287928788,.8808880888088808,.8824882488248829,.8840884088408849,.8856885688568852,.8872887288728872,.8888888888888893,.8904890489048913,.8920892089208916,.8936893689368937,.8952895289528957,.8968896889688978,.898489848984898,.9000900090009001,.9016901690169021,.9032903290329042,.9048904890489045,.9064906490649065,.9080908090809086,.9096909690969106,.9112911291129109,.9128912891289129,.914491449144915,.916091609160917,.9176917691769173,.9192919291929194,.9208920892089214,.9224922492249235,.9240924092409237,.9256925692569258,.9272927292729278,.9288928892889299,.9304930493049302,.9320932093209322,.9336933693369343,.9352935293529363,.9368936893689366,.9384938493849386,.9400940094009407,.9416941694169427,.943294329432943,.944894489448945,.9464946494649471,.9480948094809492,.9496949694969494,.9512951295129515,.9528952895289535,.9544954495449556,.9560956095609559,.9576957695769579,.95929592959296,.960896089608962,.9624962496249623,.9640964096409643,.9656965696569664,.9672967296729684,.9688968896889687,.9704970497049707,.9720972097209728,.9736973697369748,.9752975297529751,.9768976897689772,.9784978497849792,.9800980098009813,.9816981698169815,.9832983298329836,.9848984898489856,.9864986498649859,.988098809880988,.98969896989699,.9912991299129921,.9928992899289923,.9944994499449944,.9960996099609964,.9976997699769985,.9992999299929988,1.0009000900090008,1.0025002500250029,1.004100410041005,1.0057005700570052,1.0073007300730072,1.0089008900890093,1.0105010501050113,1.0121012101210116,1.0137013701370137,1.0153015301530157,1.0169016901690178,1.018501850185018,1.02010201020102,1.0217021702170221,1.0233023302330242,1.0249024902490245,1.0265026502650265,1.0281028102810286,1.0297029702970306,1.031303130313031,1.032903290329033,1.034503450345035,1.036103610361037,1.0377037703770373,1.0393039303930394,1.0409040904090414,1.0425042504250435,1.0441044104410437,1.0457045704570458,1.0473047304730478,1.04890489048905,1.0505050505050502,1.0521052105210522,1.0537053705370543,1.0553055305530563,1.0569056905690566,1.0585058505850586,1.0601060106010607,1.0617061706170627,1.063306330633063,1.064906490649065,1.0665066506650671,1.0681068106810692,1.0697069706970694,1.0713071307130715,1.0729072907290735,1.0745074507450756,1.0761076107610759,1.077707770777078,1.07930793079308,1.080908090809082,1.0825082508250823,1.0841084108410843,1.0857085708570864,1.0873087308730884,1.0889088908890887,1.0905090509050908,1.0921092109210928,1.0937093709370949,1.0953095309530951,1.0969096909690972,1.0985098509850992,1.1001100110011013,1.1017101710171016,1.1033103310331036,1.1049104910491057,1.106510651065106,1.108110811081108,1.10971097109711,1.111311131113112,1.1129112911291124,1.1145114511451144,1.1161116111611165,1.1177117711771185,1.1193119311931188,1.1209120912091208,1.1225122512251229,1.124112411241125,1.1257125712571252,1.1273127312731273,1.1289128912891293,1.1305130513051314,1.1321132113211316,1.1337133713371337,1.1353135313531357,1.1369136913691378,1.138513851385138,1.14011401140114,1.1417141714171422,1.1433143314331442,1.1449144914491445,1.1465146514651465,1.1481148114811486,1.1497149714971506,1.151315131513151,1.152915291529153,1.154515451545155,1.156115611561157,1.1577157715771573,1.1593159315931594,1.1609160916091614,1.1625162516251635,1.1641164116411638,1.1657165716571658,1.1673167316731679,1.16891689168917,1.1705170517051702,1.1721172117211722,1.1737173717371743,1.1753175317531763,1.1769176917691766,1.1785178517851786,1.1801180118011807,1.1817181718171827,1.183318331833183,1.184918491849185,1.1865186518651871,1.1881188118811892,1.1897189718971894,1.1913191319131915,1.1929192919291935,1.1945194519451956,1.1961196119611959,1.197719771977198,1.1993199319932,1.200920092009202,1.2025202520252023,1.2041204120412043,1.2057205720572064,1.2073207320732084,1.2089208920892087,1.2105210521052108,1.2121212121212128,1.2137213721372149,1.2153215321532151,1.2169216921692172,1.2185218521852192,1.2201220122012213,1.2217221722172216,1.2233223322332236,1.2249224922492257,1.226522652265226,1.228122812281228,1.22972297229723,1.231323132313232,1.2329232923292324,1.2345234523452344,1.2361236123612365,1.2377237723772385,1.2393239323932388,1.2409240924092408,1.242524252425243,1.244124412441245,1.2457245724572452,1.2473247324732473,1.2489248924892493,1.2505250525052514,1.2521252125212516,1.2537253725372537,1.2553255325532557,1.2569256925692578,1.258525852585258,1.2601260126012601,1.2617261726172622,1.2633263326332642,1.2649264926492645,1.2665266526652665,1.2681268126812686,1.2697269726972706,1.271327132713271,1.272927292729273,1.274527452745275,1.276127612761277,1.2777277727772773,1.2793279327932794,1.2809280928092814,1.2825282528252835,1.2841284128412838,1.2857285728572858,1.2873287328732879,1.28892889288929,1.2905290529052902,1.2921292129212922,1.2937293729372943,1.2953295329532963,1.2969296929692966,1.2985298529852987,1.3001300130013007,1.3017301730173028,1.303330333033303,1.304930493049305,1.3065306530653071,1.3081308130813092,1.3097309730973095,1.3113311331133115,1.3129312931293136,1.3145314531453156,1.3161316131613159,1.317731773177318,1.31933193319332,1.320932093209322,1.3225322532253223,1.3241324132413244,1.3257325732573264,1.3273327332733285,1.3289328932893287,1.3305330533053308,1.3321332133213328,1.3337333733373349,1.3353335333533352,1.3369336933693372,1.3385338533853393,1.3401340134013413,1.3417341734173416,1.3433343334333436,1.3449344934493457,1.346534653465346,1.348134813481348,1.34973497349735,1.351335133513352,1.3529352935293524,1.3545354535453544,1.3561356135613565,1.3577357735773585,1.3593359335933588,1.3609360936093609,1.362536253625363,1.364136413641365,1.3657365736573652,1.3673367336733673,1.3689368936893693,1.3705370537053714,1.3721372137213717,1.3737373737373737,1.3753375337533758,1.3769376937693778,1.378537853785378,1.3801380138013801,1.3817381738173822,1.3833383338333842,1.3849384938493845,1.3865386538653866,1.3881388138813886,1.3897389738973907,1.391339133913391,1.392939293929393,1.394539453945395,1.396139613961397,1.3977397739773973,1.3993399339933994,1.4009400940094014,1.4025402540254035,1.4041404140414038,1.4057405740574058,1.4073407340734079,1.40894089408941,1.4105410541054102,1.4121412141214122,1.4137413741374143,1.4153415341534163,1.4169416941694166,1.4185418541854187,1.4201420142014207,1.4217421742174228,1.423342334233423,1.424942494249425,1.4265426542654271,1.4281428142814292,1.4297429742974295,1.4313431343134315,1.4329432943294336,1.4345434543454356,1.436143614361436,1.437743774377438,1.43934393439344,1.440944094409442,1.4425442544254423,1.4441444144414444,1.4457445744574464,1.4473447344734485,1.4489448944894487,1.4505450545054508,1.4521452145214528,1.453745374537455,1.4553455345534552,1.4569456945694572,1.4585458545854593,1.4601460146014613,1.4617461746174616,1.4633463346334636,1.4649464946494657,1.4665466546654677,1.468146814681468,1.46974697469747,1.4713471347134721,1.4729472947294724,1.4745474547454744,1.4761476147614765,1.4777477747774785,1.4793479347934788,1.4809480948094809,1.482548254825483,1.484148414841485,1.4857485748574852,1.4873487348734873,1.4889488948894893,1.4905490549054914,1.4921492149214917,1.4937493749374937,1.4953495349534958,1.4969496949694978,1.498549854985498,1.5001500150015001,1.5017501750175022,1.5033503350335042,1.5049504950495045,1.5065506550655066,1.5081508150815086,1.5097509750975107,1.511351135113511,1.512951295129513,1.514551455145515,1.516151615161517,1.5177517751775174,1.5193519351935194,1.5209520952095215,1.5225522552255235,1.5241524152415238,1.5257525752575258,1.5273527352735279,1.52895289528953,1.5305530553055302,1.5321532153215323,1.5337533753375343,1.5353535353535364,1.5369536953695366,1.5385538553855387,1.5401540154015407,1.5417541754175428,1.543354335433543,1.544954495449545,1.5465546554655472,1.5481548154815492,1.5497549754975495,1.5513551355135515,1.5529552955295536,1.5545554555455556,1.556155615561556,1.557755775577558,1.55935593559356,1.560956095609562,1.5625562556255623,1.5641564156415644,1.5657565756575664,1.5673567356735685,1.5689568956895688,1.5705570557055708,1.5721572157215729,1.573757375737575,1.5753575357535752,1.5769576957695772,1.5785578557855793,1.5801580158015813,1.5817581758175816,1.5833583358335837,1.5849584958495857,1.5865586558655878,1.588158815881588,1.58975897589759,1.5913591359135921,1.5929592959295924,1.5945594559455945,1.5961596159615965,1.5977597759775986,1.5993599359935988,1.6009600960096009,1.602560256025603,1.604160416041605,1.6057605760576052,1.6073607360736073,1.6089608960896093,1.6105610561056114,1.6121612161216117,1.6137613761376137,1.6153615361536158,1.6169616961696178,1.618561856185618,1.6201620162016201,1.6217621762176222,1.6233623362336242,1.6249624962496245,1.6265626562656266,1.6281628162816286,1.6297629762976307,1.631363136313631,1.632963296329633,1.634563456345635,1.636163616361637,1.6377637763776374,1.6393639363936394,1.6409640964096415,1.6425642564256435,1.6441644164416438,1.6457645764576458,1.647364736473648,1.64896489648965,1.6505650565056502,1.6521652165216523,1.6537653765376543,1.6553655365536564,1.6569656965696566,1.6585658565856587,1.6601660166016607,1.6617661766176628,1.663366336633663,1.6649664966496651,1.6665666566656672,1.6681668166816692,1.6697669766976695,1.6713671367136715,1.6729672967296736,1.6745674567456756,1.676167616761676,1.677767776777678,1.67936793679368,1.680968096809682,1.6825682568256823,1.6841684168416844,1.6857685768576864,1.6873687368736885,1.6889688968896888,1.6905690569056908,1.6921692169216929,1.693769376937695,1.6953695369536952,1.6969696969696972,1.6985698569856993,1.7001700170017013,1.7017701770177016,1.7033703370337037,1.7049704970497057,1.7065706570657078,1.708170817081708,1.70977097709771,1.7113711371137121,1.7129712971297124,1.7145714571457145,1.7161716171617165,1.7177717771777186,1.7193719371937188,1.7209720972097209,1.722572257225723,1.724172417241725,1.7257725772577253,1.7273727372737273,1.7289728972897294,1.7305730573057314,1.7321732173217317,1.7337733773377337,1.7353735373537358,1.7369736973697378,1.738573857385738,1.7401740174017402,1.7417741774177422,1.7433743374337443,1.7449744974497445,1.7465746574657466,1.7481748174817486,1.7497749774977507,1.751375137513751,1.752975297529753,1.754575457545755,1.756175617561757,1.7577757775777574,1.7593759375937594,1.7609760976097615,1.7625762576257635,1.7641764176417638,1.7657765776577659,1.767376737673768,1.76897689768977,1.7705770577057702,1.7721772177217723,1.7737773777377743,1.7753775377537764,1.7769776977697767,1.7785778577857787,1.7801780178017808,1.7817781778177828,1.783378337833783,1.7849784978497851,1.7865786578657872,1.7881788178817892,1.7897789778977895,1.7913791379137916,1.7929792979297936,1.7945794579457957,1.796179617961796,1.797779777977798,1.7993799379938,1.800980098009802,1.8025802580258024,1.8041804180418044,1.8057805780578065,1.8073807380738085,1.8089808980898088,1.8105810581058108,1.8121812181218129,1.813781378137815,1.8153815381538152,1.8169816981698172,1.8185818581858193,1.8201820182018214,1.8217821782178216,1.8233823382338237,1.8249824982498257,1.8265826582658278,1.828182818281828,1.82978297829783,1.8313831383138321,1.8329832983298324,1.8345834583458345,1.8361836183618365,1.8377837783778386,1.8393839383938388,1.840984098409841,1.842584258425843,1.844184418441845,1.8457845784578453,1.8473847384738473,1.8489848984898494,1.8505850585058514,1.8521852185218517,1.8537853785378537,1.8553855385538558,1.8569856985698578,1.8585858585858581,1.8601860186018602,1.8617861786178622,1.8633863386338643,1.8649864986498645,1.8665866586658666,1.8681868186818686,1.8697869786978707,1.871387138713871,1.872987298729873,1.874587458745875,1.8761876187618771,1.8777877787778774,1.8793879387938794,1.8809880988098815,1.8825882588258835,1.8841884188418838,1.8857885788578859,1.887388738873888,1.88898889888989,1.8905890589058902,1.8921892189218923,1.8937893789378943,1.8953895389538964,1.8969896989698967,1.8985898589858987,1.9001900190019008,1.9017901790179028,1.903390339033903,1.9049904990499051,1.9065906590659072,1.9081908190819092,1.9097909790979095,1.9113911391139116,1.9129912991299136,1.9145914591459157,1.916191619161916,1.917791779177918,1.91939193919392,1.920992099209922,1.9225922592259224,1.9241924192419244,1.9257925792579265,1.9273927392739285,1.9289928992899288,1.9305930593059308,1.9321932193219329,1.933793379337935,1.9353935393539352,1.9369936993699373,1.9385938593859393,1.9401940194019414,1.9417941794179416,1.9433943394339437,1.9449944994499457,1.9465946594659478,1.948194819481948,1.94979497949795,1.9513951395139522,1.9529952995299524,1.9545954595459545,1.9561956195619565,1.9577957795779586,1.9593959395939589,1.960996099609961,1.962596259625963,1.964196419641965,1.9657965796579653,1.9673967396739673,1.9689968996899694,1.9705970597059714,1.9721972197219717,1.9737973797379738,1.9753975397539758,1.9769976997699779,1.9785978597859781,1.9801980198019802,1.9817981798179822,1.9833983398339843,1.9849984998499846,1.9865986598659866,1.9881988198819887,1.9897989798979907,1.991399139913991,1.992999299929993,1.994599459945995,1.9961996199619971,1.9977997799779974,1.9993999399939995,2.0010001000100015,2.0026002600260036,2.004200420042004,2.005800580058006,2.007400740074008,2.00900090009001,2.0106010601060103,2.0122012201220123,2.0138013801380144,2.0154015401540164,2.0170017001700167,2.0186018601860187,2.0202020202020208,2.021802180218023,2.023402340234023,2.025002500250025,2.026602660266027,2.0282028202820293,2.0298029802980295,2.0314031403140316,2.0330033003300336,2.0346034603460357,2.036203620362036,2.037803780378038,2.03940394039404,2.041004100410042,2.0426042604260424,2.0442044204420444,2.0458045804580465,2.0474047404740485,2.049004900490049,2.050605060506051,2.052205220522053,2.053805380538055,2.055405540554055,2.0570057005700573,2.0586058605860593,2.0602060206020614,2.0618061806180616,2.0634063406340637,2.0650065006500657,2.066606660666068,2.068206820682068,2.06980698069807,2.071407140714072,2.073007300730074,2.0746074607460745,2.0762076207620765,2.0778077807780786,2.079407940794079,2.081008100810081,2.082608260826083,2.084208420842085,2.0858085808580853,2.0874087408740873,2.0890089008900894,2.0906090609060914,2.0922092209220917,2.0938093809380938,2.095409540954096,2.097009700970098,2.098609860986098,2.1002100210021,2.1018101810181022,2.1034103410341043,2.1050105010501046,2.1066106610661066,2.1082108210821087,2.1098109810981107,2.111411141114111,2.113011301130113,2.114611461146115,2.116211621162117,2.1178117811781174,2.1194119411941195,2.1210121012101215,2.1226122612261236,2.124212421242124,2.125812581258126,2.127412741274128,2.12901290129013,2.1306130613061303,2.1322132213221323,2.1338133813381344,2.1354135413541364,2.1370137013701367,2.1386138613861387,2.140214021402141,2.141814181418143,2.143414341434143,2.145014501450145,2.146614661466147,2.1482148214821493,2.1498149814981495,2.1514151415141516,2.1530153015301536,2.1546154615461557,2.156215621562156,2.157815781578158,2.15941594159416,2.161016101610162,2.1626162616261624,2.1642164216421644,2.1658165816581665,2.1674167416741685,2.169016901690169,2.170617061706171,2.172217221722173,2.173817381738175,2.1754175417541752,2.1770177017701773,2.1786178617861793,2.1802180218021814,2.1818181818181817,2.1834183418341837,2.1850185018501858,2.186618661866188,2.188218821882188,2.18981898189819,2.191419141914192,2.1930193019301942,2.1946194619461945,2.1962196219621966,2.1978197819781986,2.199419941994199,2.201020102010201,2.202620262026203,2.204220422042205,2.2058205820582053,2.2074207420742074,2.2090209020902094,2.2106210621062115,2.2122212221222117,2.213821382138214,2.215421542154216,2.217021702170218,2.218621862186218,2.22022202220222,2.2218221822182223,2.2234223422342243,2.2250225022502246,2.2266226622662266,2.2282228222822287,2.2298229822982307,2.231423142314231,2.233023302330233,2.234623462346235,2.236223622362237,2.2378237823782374,2.2394239423942395,2.2410241024102415,2.2426242624262436,2.244224422442244,2.245824582458246,2.247424742474248,2.24902490249025,2.2506250625062503,2.2522252225222523,2.2538253825382544,2.2554255425542564,2.2570257025702567,2.2586258625862587,2.260226022602261,2.261826182618263,2.263426342634263,2.265026502650265,2.2666266626662672,2.2682268226822693,2.2698269826982695,2.2714271427142716,2.2730273027302736,2.2746274627462757,2.276227622762276,2.277827782778278,2.27942794279428,2.281028102810282,2.2826282628262824,2.2842284228422844,2.2858285828582865,2.2874287428742885,2.289028902890289,2.290629062906291,2.292229222922293,2.293829382938295,2.2954295429542952,2.2970297029702973,2.2986298629862993,2.3002300230023014,2.3018301830183017,2.3034303430343037,2.3050305030503058,2.306630663066308,2.308230823082308,2.30983098309831,2.311431143114312,2.3130313031303142,2.3146314631463145,2.3162316231623166,2.3178317831783186,2.319431943194319,2.321032103210321,2.322632263226323,2.324232423242325,2.3258325832583253,2.3274327432743274,2.3290329032903294,2.3306330633063315,2.3322332233223317,2.333833383338334,2.335433543354336,2.337033703370338,2.338633863386338,2.34023402340234,2.3418341834183423,2.3434343434343443,2.3450345034503446,2.3466346634663466,2.3482348234823487,2.3498349834983507,2.351435143514351,2.353035303530353,2.354635463546355,2.356235623562357,2.3578357835783574,2.3594359435943595,2.3610361036103615,2.3626362636263636,2.364236423642364,2.365836583658366,2.367436743674368,2.36903690369037,2.3706370637063703,2.3722372237223723,2.3738373837383744,2.3754375437543764,2.3770377037703767,2.3786378637863788,2.380238023802381,2.381838183818383,2.383438343834383,2.385038503850385,2.3866386638663872,2.3882388238823893,2.3898389838983896,2.3914391439143916,2.3930393039303937,2.3946394639463957,2.396239623962396,2.397839783978398,2.3994399439944,2.401040104010402,2.4026402640264024,2.4042404240424045,2.4058405840584065,2.4074407440744086,2.409040904090409,2.410641064106411,2.412241224122413,2.413841384138415,2.4154415441544153,2.4170417041704173,2.4186418641864194,2.4202420242024214,2.4218421842184217,2.4234423442344237,2.425042504250426,2.426642664266428,2.428242824282428,2.42984298429843,2.431443144314432,2.4330433043304343,2.4346434643464345,2.4362436243624366,2.4378437843784386,2.439443944394439,2.441044104410441,2.442644264426443,2.444244424442445,2.4458445844584453,2.4474447444744474,2.4490449044904494,2.4506450645064515,2.4522452245224517,2.453845384538454,2.455445544554456,2.457045704570458,2.458645864586458,2.4602460246024602,2.4618461846184623,2.4634463446344643,2.4650465046504646,2.4666466646664666,2.4682468246824687,2.4698469846984707,2.471447144714471,2.473047304730473,2.474647464746475,2.476247624762477,2.4778477847784774,2.4794479447944795,2.4810481048104815,2.4826482648264836,2.484248424842484,2.485848584858486,2.487448744874488,2.48904890489049,2.4906490649064903,2.4922492249224923,2.4938493849384944,2.4954495449544964,2.4970497049704967,2.4986498649864988,2.500250025002501,2.501850185018503,2.503450345034503,2.505050505050505,2.5066506650665072,2.5082508250825093,2.5098509850985096,2.5114511451145116,2.5130513051305137,2.5146514651465157,2.516251625162516,2.517851785178518,2.51945194519452,2.521052105210522,2.5226522652265224,2.5242524252425245,2.5258525852585265,2.5274527452745286,2.529052905290529,2.530653065306531,2.532253225322533,2.533853385338535,2.5354535453545353,2.5370537053705373,2.5386538653865394,2.5402540254025414,2.5418541854185417,2.5434543454345437,2.545054505450546,2.546654665466548,2.548254825482548,2.54985498549855,2.551455145514552,2.5530553055305543,2.5546554655465545,2.5562556255625566,2.5578557855785586,2.5594559455945607,2.561056105610561,2.562656265626563,2.564256425642565,2.5658565856585653,2.5674567456745674,2.5690569056905694,2.5706570657065715,2.5722572257225718,2.573857385738574,2.575457545754576,2.577057705770578,2.578657865786578,2.5802580258025802,2.5818581858185823,2.5834583458345843,2.5850585058505846,2.5866586658665867,2.5882588258825887,2.5898589858985908,2.591459145914591,2.593059305930593,2.594659465946595,2.596259625962597,2.5978597859785975,2.5994599459945995,2.6010601060106016,2.6026602660266036,2.604260426042604,2.605860586058606,2.607460746074608,2.60906090609061,2.6106610661066103,2.6122612261226124,2.6138613861386144,2.6154615461546165,2.6170617061706167,2.618661866186619,2.620262026202621,2.621862186218623,2.623462346234623,2.625062506250625,2.6266626662666273,2.6282628262826293,2.6298629862986296,2.6314631463146316,2.6330633063306337,2.6346634663466357,2.636263626362636,2.637863786378638,2.63946394639464,2.641064106410642,2.6426642664266424,2.6442644264426445,2.6458645864586465,2.6474647464746486,2.649064906490649,2.650665066506651,2.652265226522653,2.653865386538655,2.6554655465546553,2.6570657065706573,2.6586658665866594,2.6602660266026614,2.6618661866186617,2.6634663466346638,2.665066506650666,2.666666666666668,2.668266826682668,2.66986698669867,2.6714671467146722,2.6730673067306743,2.6746674667466745,2.6762676267626766,2.6778677867786786,2.6794679467946807,2.681068106810681,2.682668266826683,2.684268426842685,2.6858685868586853,2.6874687468746874,2.6890689068906894,2.6906690669066915,2.6922692269226918,2.693869386938694,2.695469546954696,2.697069706970698,2.698669866986698,2.7002700270027002,2.7018701870187023,2.7034703470347043,2.7050705070507046,2.7066706670667067,2.7082708270827087,2.7098709870987108,2.711471147114711,2.713071307130713,2.714671467146715,2.716271627162717,2.7178717871787175,2.7194719471947195,2.7210721072107216,2.7226722672267236,2.724272427242724,2.725872587258726,2.727472747274728,2.72907290729073,2.7306730673067303,2.7322732273227324,2.7338733873387344,2.7354735473547365,2.7370737073707367,2.738673867386739,2.740274027402741,2.741874187418743,2.743474347434743,2.745074507450745,2.7466746674667473,2.7482748274827493,2.7498749874987496,2.7514751475147516,2.7530753075307537,2.7546754675467557,2.756275627562756,2.757875787578758,2.75947594759476,2.761076107610762,2.7626762676267624,2.7642764276427645,2.7658765876587665,2.7674767476747686,2.769076907690769,2.770677067706771,2.772277227722773,2.773877387738775,2.7754775477547753,2.7770777077707773,2.7786778677867794,2.7802780278027814,2.7818781878187817,2.7834783478347838,2.785078507850786,2.786678667866788,2.788278827882788,2.78987898789879,2.7914791479147922,2.7930793079307943,2.7946794679467946,2.7962796279627966,2.7978797879787987,2.7994799479948007,2.801080108010801,2.802680268026803,2.804280428042805,2.8058805880588054,2.8074807480748074,2.8090809080908095,2.8106810681068115,2.812281228122812,2.813881388138814,2.815481548154816,2.817081708170818,2.818681868186818,2.8202820282028203,2.8218821882188223,2.8234823482348244,2.8250825082508246,2.8266826682668267,2.8282828282828287,2.829882988298831,2.831483148314831,2.833083308330833,2.834683468346835,2.836283628362837,2.8378837883788375,2.8394839483948395,2.8410841084108416,2.8426842684268436,2.844284428442844,2.845884588458846,2.847484748474848,2.84908490849085,2.8506850685068503,2.8522852285228524,2.8538853885388544,2.8554855485548565,2.8570857085708568,2.858685868586859,2.860286028602861,2.861886188618863,2.863486348634863,2.8650865086508652,2.8666866686668673,2.8682868286828693,2.8698869886988696,2.8714871487148717,2.8730873087308737,2.8746874687468758,2.876287628762876,2.877887788778878,2.87948794879488,2.881088108810882,2.8826882688268824,2.8842884288428845,2.8858885888588865,2.8874887488748886,2.889088908890889,2.890689068906891,2.892289228922893,2.893889388938895,2.8954895489548953,2.8970897089708973,2.8986898689868994,2.9002900290029014,2.9018901890189017,2.9034903490349038,2.905090509050906,2.906690669066908,2.908290829082908,2.90989098909891,2.9114911491149122,2.9130913091309143,2.9146914691469146,2.9162916291629166,2.9178917891789187,2.9194919491949207,2.921092109210921,2.922692269226923,2.924292429242925,2.9258925892589254,2.9274927492749274,2.9290929092909295,2.9306930693069315,2.932293229322932,2.933893389338934,2.935493549354936,2.937093709370938,2.938693869386938,2.9402940294029403,2.9418941894189423,2.9434943494349444,2.9450945094509446,2.9466946694669467,2.9482948294829487,2.949894989498951,2.951495149514951,2.953095309530953,2.954695469546955,2.956295629562957,2.9578957895789575,2.9594959495949595,2.9610961096109616,2.9626962696269636,2.964296429642964,2.965896589658966,2.967496749674968,2.96909690969097,2.9706970697069703,2.9722972297229724,2.9738973897389744,2.9754975497549765,2.9770977097709768,2.978697869786979,2.980298029802981,2.981898189818983,2.983498349834983,2.9850985098509852,2.9866986698669873,2.9882988298829893,2.9898989898989896,2.9914991499149917,2.9930993099309937,2.9946994699469958,2.996299629962996,2.997899789978998,2.999499949995,3.001100110011002,3.0027002700270025,3.0043004300430045,3.0059005900590066,3.0075007500750086,3.009100910091009,3.010701070107011,3.012301230123013,3.013901390139015,3.0155015501550153,3.0171017101710174,3.0187018701870194,3.0203020302030215,3.0219021902190217,3.023502350235024,3.025102510251026,3.026702670267028,3.028302830283028,3.02990299029903,3.0315031503150323,3.0331033103310343,3.0347034703470346,3.0363036303630366,3.0379037903790387,3.0395039503950407,3.041104110411041,3.042704270427043,3.044304430443045,3.0459045904590454,3.0475047504750474,3.0491049104910495,3.0507050705070515,3.052305230523052,3.053905390539054,3.055505550555056,3.057105710571058,3.0587058705870582,3.0603060306030603,3.0619061906190623,3.0635063506350644,3.0651065106510647,3.0667066706670667,3.0683068306830688,3.069906990699071,3.071507150715071,3.073107310731073,3.074707470747075,3.0763076307630772,3.0779077907790775,3.0795079507950796,3.0811081108110816,3.0827082708270837,3.084308430843084,3.085908590859086,3.087508750875088,3.08910891089109,3.0907090709070904,3.0923092309230924,3.0939093909390945,3.0955095509550965,3.0971097109710968,3.098709870987099,3.100310031003101,3.101910191019103,3.103510351035103,3.1051105110511052,3.1067106710671073,3.1083108310831093,3.1099109910991096,3.1115111511151117,3.1131113111311137,3.1147114711471158,3.116311631163116,3.117911791179118,3.11951195119512,3.121112111211122,3.1227122712271225,3.1243124312431245,3.1259125912591266,3.1275127512751286,3.129112911291129,3.130713071307131,3.132313231323133,3.133913391339135,3.1355135513551353,3.1371137113711374,3.1387138713871394,3.1403140314031415,3.1419141914191417,3.143514351435144,3.145114511451146,3.146714671467148,3.148314831483148,3.14991499149915,3.1515151515151523,3.1531153115311543,3.1547154715471546,3.1563156315631566,3.1579157915791587,3.1595159515951607,3.161116111611161,3.162716271627163,3.164316431643165,3.165916591659167,3.1675167516751674,3.1691169116911695,3.1707170717071715,3.172317231723172,3.173917391739174,3.175517551755176,3.177117711771178,3.1787178717871782,3.1803180318031803,3.1819181918191823,3.1835183518351844,3.1851185118511847,3.1867186718671867,3.1883188318831888,3.189918991899191,3.191519151915191,3.193119311931193,3.194719471947195,3.1963196319631972,3.1979197919791975,3.1995199519951996,3.2011201120112016,3.2027202720272037,3.204320432043204,3.205920592059206,3.207520752075208,3.20912091209121,3.2107210721072104,3.2123212321232124,3.2139213921392145,3.2155215521552165,3.217121712171217,3.218721872187219,3.220322032203221,3.221922192219223,3.223522352235223,3.2251225122512253,3.2267226722672273,3.2283228322832294,3.2299229922992296,3.2315231523152317,3.2331233123312337,3.234723472347236,3.236323632363236,3.237923792379238,3.23952395239524,3.241124112411242,3.2427242724272425,3.2443244324432445,3.2459245924592466,3.2475247524752486,3.249124912491249,3.250725072507251,3.252325232523253,3.253925392539255,3.2555255525552553,3.2571257125712574,3.2587258725872594,3.2603260326032615,3.2619261926192618,3.263526352635264,3.265126512651266,3.266726672667268,3.268326832683268,3.2699269926992702,3.2715271527152723,3.2731273127312743,3.2747274727472746,3.2763276327632767,3.2779277927792787,3.2795279527952808,3.281128112811281,3.282728272827283,3.284328432843285,3.285928592859287,3.2875287528752875,3.2891289128912895,3.2907290729072916,3.292329232923292,3.293929392939294,3.295529552955296,3.297129712971298,3.2987298729872983,3.3003300330033003,3.3019301930193024,3.3035303530353044,3.3051305130513047,3.3067306730673067,3.3083308330833088,3.309930993099311,3.311531153115311,3.313131313131313,3.314731473147315,3.3163316331633172,3.3179317931793175,3.3195319531953196,3.3211321132113216,3.3227322732273237,3.324332433243324,3.325932593259326,3.327532753275328,3.32913291329133,3.3307330733073304,3.3323332333233324,3.3339333933393345,3.3355335533553365,3.337133713371337,3.338733873387339,3.340334033403341,3.341934193419343,3.343534353435343,3.3451345134513453,3.3467346734673473,3.3483348334833494,3.3499349934993496,3.3515351535153517,3.3531353135313537,3.354735473547356,3.356335633563356,3.357935793579358,3.35953595359536,3.361136113611362,3.3627362736273625,3.3643364336433645,3.3659365936593666,3.3675367536753686,3.369136913691369,3.370737073707371,3.372337233723373,3.373937393739375,3.3755375537553753,3.3771377137713774,3.3787378737873794,3.3803380338033815,3.3819381938193818,3.383538353835384,3.385138513851386,3.386738673867388,3.388338833883388,3.3899389938993902,3.3915391539153923,3.3931393139313943,3.3947394739473946,3.3963396339633967,3.3979397939793987,3.3995399539954008,3.401140114011401,3.402740274027403,3.404340434043405,3.405940594059407,3.4075407540754075,3.4091409140914095,3.4107410741074116,3.412341234123412,3.413941394139414,3.415541554155416,3.417141714171418,3.4187418741874183,3.4203420342034203,3.4219421942194224,3.4235423542354244,3.4251425142514247,3.4267426742674267,3.428342834283429,3.429942994299431,3.431543154315431,3.433143314331433,3.434743474347435,3.4363436343634373,3.4379437943794375,3.4395439543954396,3.4411441144114416,3.4427442744274437,3.444344434443444,3.445944594459446,3.447544754475448,3.44914491449145,3.4507450745074504,3.4523452345234524,3.4539453945394545,3.4555455545554565,3.457145714571457,3.458745874587459,3.460346034603461,3.461946194619463,3.4635463546354632,3.4651465146514653,3.4667466746674673,3.4683468346834694,3.4699469946994697,3.4715471547154717,3.4731473147314738,3.474747474747476,3.476347634763476,3.477947794779478,3.47954795479548,3.4811481148114822,3.4827482748274825,3.4843484348434846,3.4859485948594866,3.4875487548754887,3.489148914891489,3.490749074907491,3.492349234923493,3.493949394939495,3.4955495549554954,3.4971497149714974,3.4987498749874995,3.5003500350035015,3.5019501950195018,3.503550355035504,3.505150515051506,3.506750675067508,3.508350835083508,3.5099509950995103,3.5115511551155123,3.5131513151315144,3.5147514751475146,3.5163516351635167,3.5179517951795187,3.5195519551955208,3.521152115211521,3.522752275227523,3.524352435243525,3.525952595259527,3.5275527552755275,3.5291529152915295,3.5307530753075316,3.532353235323532,3.533953395339534,3.535553555355536,3.537153715371538,3.5387538753875383,3.5403540354035403,3.5419541954195424,3.5435543554355444,3.5451545154515447,3.5467546754675467,3.548354835483549,3.549954995499551,3.551555155515551,3.553155315531553,3.554755475547555,3.5563556355635573,3.5579557955795575,3.5595559555955596,3.5611561156115616,3.5627562756275637,3.564356435643564,3.565956595659566,3.567556755675568,3.56915691569157,3.5707570757075704,3.5723572357235724,3.5739573957395745,3.5755575557555765,3.577157715771577,3.578757875787579,3.580358035803581,3.581958195819583,3.5835583558355832,3.5851585158515853,3.5867586758675873,3.5883588358835894,3.5899589958995897,3.5915591559155917,3.5931593159315938,3.594759475947596,3.596359635963596,3.597959795979598,3.5995599559956,3.6011601160116022,3.6027602760276025,3.6043604360436046,3.6059605960596066,3.6075607560756087,3.609160916091609,3.610761076107611,3.612361236123613,3.613961396139615,3.6155615561556154,3.6171617161716174,3.6187618761876195,3.6203620362036215,3.621962196219622,3.623562356235624,3.625162516251626,3.626762676267628,3.628362836283628,3.6299629962996303,3.6315631563156323,3.6331633163316344,3.6347634763476346,3.6363636363636367,3.6379637963796387,3.639563956395641,3.641164116411641,3.642764276427643,3.644364436443645,3.645964596459647,3.6475647564756475,3.6491649164916495,3.6507650765076516,3.652365236523652,3.653965396539654,3.655565556555656,3.657165716571658,3.6587658765876583,3.6603660366036603,3.6619661966196624,3.6635663566356644,3.6651665166516647,3.6667666766676668,3.668366836683669,3.669966996699671,3.671567156715671,3.673167316731673,3.6747674767476752,3.6763676367636773,3.6779677967796776,3.6795679567956796,3.6811681168116817,3.6827682768276837,3.684368436843684,3.685968596859686,3.687568756875688,3.68916891689169,3.6907690769076904,3.6923692369236925,3.6939693969396945,3.6955695569556966,3.697169716971697,3.698769876987699,3.700370037003701,3.701970197019703,3.7035703570357033,3.7051705170517053,3.7067706770677074,3.7083708370837094,3.7099709970997097,3.7115711571157117,3.7131713171317138,3.714771477147716,3.716371637163716,3.717971797179718,3.71957195719572,3.7211721172117223,3.7227722772277225,3.7243724372437246,3.7259725972597266,3.7275727572757287,3.729172917291729,3.730773077307731,3.732373237323733,3.733973397339735,3.7355735573557354,3.7371737173717374,3.7387738773877395,3.7403740374037415,3.741974197419742,3.743574357435744,3.745174517451746,3.746774677467748,3.7483748374837482,3.7499749974997503,3.7515751575157523,3.7531753175317544,3.7547754775477546,3.7563756375637567,3.7579757975797587,3.759575957595761,3.761176117611761,3.762776277627763,3.764376437643765,3.7659765976597672,3.7675767576757675,3.7691769176917695,3.7707770777077716,3.7723772377237736,3.773977397739774,3.775577557755776,3.777177717771778,3.7787778777877783,3.7803780378037803,3.7819781978197824,3.7835783578357844,3.7851785178517847,3.7867786778677868,3.788378837883789,3.789978997899791,3.791579157915791,3.793179317931793,3.7947794779477952,3.7963796379637973,3.7979797979797976,3.7995799579957996,3.8011801180118017,3.8027802780278037,3.804380438043804,3.805980598059806,3.807580758075808,3.80918091809181,3.8107810781078104,3.8123812381238125,3.8139813981398145,3.8155815581558166,3.817181718171817,3.818781878187819,3.820382038203821,3.821982198219823,3.8235823582358233,3.8251825182518253,3.8267826782678274,3.8283828382838294,3.8299829982998297,3.8315831583158317,3.833183318331834,3.834783478347836,3.836383638363836,3.837983798379838,3.83958395839584,3.8411841184118423,3.8427842784278425,3.8443844384438446,3.8459845984598466,3.8475847584758487,3.849184918491849,3.850785078507851,3.852385238523853,3.853985398539855,3.8555855585558554,3.8571857185718574,3.8587858785878595,3.8603860386038615,3.861986198619862,3.863586358635864,3.865186518651866,3.866786678667868,3.8683868386838682,3.8699869986998703,3.8715871587158723,3.8731873187318744,3.8747874787478747,3.8763876387638767,3.8779877987798788,3.879587958795881,3.881188118811881,3.882788278827883,3.884388438843885,3.8859885988598872,3.8875887588758875,3.8891889188918896,3.8907890789078916,3.8923892389238937,3.893989398939894,3.895589558955896,3.897189718971898,3.8987898789878983,3.9003900390039004,3.9019901990199024,3.9035903590359045,3.9051905190519047,3.906790679067907,3.908390839083909,3.909990999099911,3.911591159115911,3.913191319131913,3.9147914791479153,3.9163916391639173,3.9179917991799176,3.9195919591959196,3.9211921192119217,3.9227922792279237,3.924392439243924,3.925992599259926,3.927592759275928,3.92919291929193,3.9307930793079304,3.9323932393239325,3.9339933993399345,3.9355935593559366,3.937193719371937,3.938793879387939,3.940394039403941,3.941994199419943,3.9435943594359433,3.9451945194519453,3.9467946794679474,3.9483948394839494,3.9499949994999497,3.9515951595159517,3.953195319531954,3.954795479547956,3.956395639563956,3.957995799579958,3.9595959595959602,3.9611961196119623,3.9627962796279625,3.9643964396439646,3.9659965996599666,3.9675967596759687,3.969196919691969,3.970797079707971,3.972397239723973,3.973997399739975,3.9755975597559754,3.9771977197719774,3.9787978797879795,3.9803980398039815,3.981998199819982,3.983598359835984,3.985198519851986,3.986798679867988,3.9883988398839882,3.9899989998999903,3.9915991599159923,3.9931993199319944,3.9947994799479947,3.9963996399639967,3.9979997999799988,3.999599959996001,4.001200120012001,4.002800280028003,4.004400440044005,4.006000600060007,4.0076007600760075,4.00920092009201,4.010801080108012,4.012401240124014,4.014001400140014,4.015601560156016,4.017201720172018,4.018801880188018,4.02040204020402,4.022002200220022,4.0236023602360245,4.025202520252025,4.026802680268027,4.028402840284029,4.030003000300031,4.031603160316031,4.033203320332033,4.034803480348035,4.036403640364037,4.038003800380038,4.03960396039604,4.041204120412042,4.042804280428044,4.044404440444044,4.046004600460046,4.047604760476048,4.04920492049205,4.05080508050805,4.0524052405240525,4.0540054005400545,4.055605560556057,4.057205720572057,4.058805880588059,4.060406040604061,4.062006200620063,4.063606360636063,4.065206520652065,4.066806680668067,4.068406840684069,4.07000700070007,4.071607160716072,4.073207320732074,4.074807480748076,4.076407640764076,4.078007800780078,4.07960796079608,4.081208120812082,4.082808280828083,4.084408440844085,4.086008600860087,4.087608760876089,4.089208920892089,4.090809080908091,4.092409240924093,4.094009400940095,4.095609560956095,4.0972097209720975,4.0988098809880995,4.100410041004102,4.102010201020102,4.103610361036104,4.105210521052106,4.106810681068108,4.108410841084108,4.11001100110011,4.111611161116112,4.113211321132114,4.114811481148115,4.116411641164117,4.118011801180119,4.119611961196121,4.121212121212121,4.122812281228123,4.124412441244125,4.126012601260127,4.1276127612761275,4.12921292129213,4.130813081308132,4.132413241324134,4.134013401340134,4.135613561356136,4.137213721372138,4.138813881388138,4.14041404140414,4.142014201420142,4.1436143614361445,4.145214521452145,4.146814681468147,4.148414841484149,4.150015001500151,4.151615161516151,4.153215321532153,4.154815481548155,4.156415641564157,4.158015801580158,4.15961596159616,4.161216121612162,4.162816281628164,4.164416441644164,4.166016601660166,4.167616761676168,4.16921692169217,4.1708170817081704,4.1724172417241725,4.1740174017401745,4.175617561756177,4.177217721772177,4.178817881788179,4.180418041804181,4.182018201820183,4.183618361836183,4.185218521852185,4.186818681868187,4.1884188418841894,4.19001900190019,4.191619161916192,4.193219321932194,4.194819481948196,4.196419641964196,4.198019801980198,4.1996199619962,4.201220122012202,4.202820282028203,4.204420442044205,4.206020602060207,4.207620762076209,4.209220922092209,4.210821082108211,4.212421242124213,4.214021402140215,4.215621562156215,4.2172217221722175,4.2188218821882195,4.220422042204222,4.222022202220222,4.223622362236224,4.225222522252226,4.226822682268228,4.228422842284228,4.23002300230023,4.231623162316232,4.233223322332234,4.234823482348235,4.236423642364237,4.238023802380239,4.239623962396241,4.241224122412241,4.242824282428243,4.244424442444245,4.246024602460247,4.2476247624762475,4.24922492249225,4.250825082508252,4.252425242524254,4.254025402540254,4.255625562556256,4.257225722572258,4.25882588258826,4.26042604260426,4.262026202620262,4.2636263626362645,4.265226522652265,4.266826682668267,4.268426842684269,4.270027002700271,4.271627162716271,4.273227322732273,4.274827482748275,4.276427642764277,4.278027802780278,4.27962796279628,4.281228122812282,4.282828282828284,4.284428442844284,4.286028602860286,4.287628762876288,4.28922892289229,4.2908290829082905,4.2924292429242925,4.294029402940295,4.295629562956297,4.297229722972297,4.298829882988299,4.300430043004301,4.302030203020303,4.303630363036303,4.305230523052305,4.306830683068307,4.3084308430843095,4.31003100310031,4.311631163116312,4.313231323132314,4.314831483148316,4.316431643164316,4.318031803180318,4.31963196319632,4.321232123212322,4.322832283228323,4.324432443244325,4.326032603260327,4.327632763276329,4.329232923292329,4.330833083308331,4.332433243324333,4.334033403340335,4.335633563356335,4.3372337233723375,4.3388338833883395,4.340434043404342,4.342034203420342,4.343634363436344,4.345234523452346,4.346834683468348,4.348434843484348,4.35003500350035,4.351635163516352,4.353235323532354,4.354835483548355,4.356435643564357,4.358035803580359,4.359635963596361,4.361236123612361,4.362836283628363,4.364436443644365,4.366036603660367,4.3676367636763676,4.36923692369237,4.370837083708372,4.372437243724374,4.374037403740374,4.375637563756376,4.377237723772378,4.37883788378838,4.38043804380438,4.3820382038203824,4.3836383638363845,4.385238523852385,4.386838683868387,4.388438843884389,4.390039003900391,4.391639163916391,4.393239323932393,4.394839483948395,4.396439643964397,4.398039803980398,4.3996399639964,4.401240124012402,4.402840284028404,4.404440444044404,4.406040604060406,4.407640764076408,4.40924092409241,4.4108410841084105,4.4124412441244125,4.414041404140415,4.415641564156417,4.417241724172417,4.418841884188419,4.420442044204421,4.422042204220423,4.423642364236423,4.425242524252425,4.426842684268427,4.4284428442844295,4.43004300430043,4.431643164316432,4.433243324332434,4.434843484348436,4.436443644364436,4.438043804380438,4.43964396439644,4.441244124412442,4.442844284428443,4.444444444444445,4.446044604460447,4.447644764476449,4.449244924492449,4.450845084508451,4.452445244524453,4.454045404540455,4.455645564556455,4.4572457245724575,4.4588458845884595,4.460446044604462,4.462046204620462,4.463646364636464,4.465246524652466,4.466846684668468,4.468446844684468,4.47004700470047,4.471647164716472,4.473247324732474,4.474847484748475,4.476447644764477,4.478047804780479,4.479647964796481,4.481248124812481,4.482848284828483,4.484448444844485,4.486048604860487,4.487648764876488,4.48924892489249,4.490849084908492,4.492449244924494,4.494049404940494,4.495649564956496,4.497249724972498,4.4988498849885,4.5004500450045,4.5020502050205025,4.5036503650365045,4.505250525052505,4.506850685068507,4.508450845084509,4.510051005100511,4.511651165116511,4.513251325132513,4.514851485148515,4.516451645164517,4.518051805180518,4.51965196519652,4.521252125212522,4.522852285228524,4.524452445244524,4.526052605260526,4.527652765276528,4.52925292529253,4.5308530853085305,4.5324532453245325,4.534053405340535,4.535653565356537,4.537253725372537,4.538853885388539,4.540454045404541,4.542054205420543,4.543654365436543,4.545254525452545,4.546854685468547,4.5484548454845495,4.55005500550055,4.551655165516552,4.553255325532554,4.554855485548556,4.556455645564556,4.558055805580558,4.55965596559656,4.561256125612562,4.562856285628563,4.564456445644565,4.566056605660567,4.567656765676569,4.569256925692569,4.570857085708571,4.572457245724573,4.574057405740575,4.5756575657565755,4.5772577257725775,4.5788578857885796,4.580458045804582,4.582058205820582,4.583658365836584,4.585258525852586,4.586858685868588,4.588458845884588,4.59005900590059,4.591659165916592,4.5932593259325945,4.594859485948595,4.596459645964597,4.598059805980599,4.599659965996601,4.601260126012601,4.602860286028603,4.604460446044605,4.606060606060607,4.607660766076608,4.60926092609261,4.610861086108612,4.612461246124614,4.614061406140614,4.615661566156616,4.617261726172618,4.61886188618862,4.62046204620462,4.6220622062206225,4.6236623662366245,4.625262526252625,4.626862686268627,4.628462846284629,4.630063006300631,4.631663166316631,4.633263326332633,4.634863486348635,4.636463646364637,4.638063806380638,4.63966396639664,4.641264126412642,4.642864286428644,4.644464446444644,4.646064606460646,4.647664766476648,4.64926492649265,4.6508650865086505,4.6524652465246525,4.654065406540655,4.655665566556657,4.657265726572657,4.658865886588659,4.660466046604661,4.662066206620663,4.663666366636663,4.665266526652665,4.666866686668667,4.6684668466846695,4.67006700670067,4.671667166716672,4.673267326732674,4.674867486748676,4.676467646764676,4.678067806780678,4.67966796679668,4.681268126812682,4.682868286828683,4.684468446844685,4.686068606860687,4.687668766876689,4.689268926892689,4.690869086908691,4.692469246924693,4.694069406940695,4.6956695669566955,4.6972697269726975,4.6988698869887,4.700470047004702,4.702070207020702,4.703670367036704,4.705270527052706,4.706870687068708,4.708470847084708,4.71007100710071,4.711671167116712,4.7132713271327145,4.714871487148715,4.716471647164717,4.718071807180719,4.719671967196721,4.721272127212721,4.722872287228723,4.724472447244725,4.726072607260727,4.727672767276728,4.72927292729273,4.730873087308732,4.732473247324734,4.734073407340734,4.735673567356736,4.737273727372738,4.73887388738874,4.74047404740474,4.7420742074207425,4.7436743674367445,4.745274527452745,4.746874687468747,4.748474847484749,4.750075007500751,4.751675167516751,4.753275327532753,4.754875487548755,4.756475647564757,4.758075807580758,4.75967596759676,4.761276127612762,4.762876287628764,4.764476447644764,4.766076607660766,4.767676767676768,4.76927692769277,4.7708770877087705,4.7724772477247726,4.774077407740775,4.775677567756777,4.777277727772777,4.778877887788779,4.780478047804781,4.782078207820783,4.783678367836783,4.785278527852785,4.7868786878687875,4.7884788478847895,4.79007900790079,4.791679167916792,4.793279327932794,4.794879487948796,4.796479647964796,4.798079807980798,4.7996799679968,4.801280128012802,4.802880288028803,4.804480448044805,4.806080608060807,4.807680768076809,4.809280928092809,4.810881088108811,4.812481248124813,4.814081408140815,4.8156815681568155,4.8172817281728175,4.81888188818882,4.820482048204822,4.822082208220822,4.823682368236824,4.825282528252826,4.826882688268828,4.828482848284828,4.83008300830083,4.831683168316832,4.8332833283328345,4.834883488348835,4.836483648364837,4.838083808380839,4.839683968396841,4.841284128412841,4.842884288428843,4.844484448444845,4.846084608460847,4.847684768476848,4.84928492849285,4.850885088508852,4.852485248524854,4.854085408540854,4.855685568556856,4.857285728572858,4.85888588858886,4.86048604860486,4.8620862086208625,4.8636863686368645,4.865286528652867,4.866886688668867,4.868486848684869,4.870087008700871,4.871687168716871,4.873287328732873,4.874887488748875,4.876487648764877,4.878087808780878,4.87968796879688,4.881288128812882,4.882888288828884,4.884488448844884,4.886088608860886,4.887688768876888,4.88928892889289,4.8908890889088905,4.892489248924893,4.894089408940895,4.895689568956897,4.897289728972897,4.898889888988899,4.900490049004901,4.902090209020903,4.903690369036903,4.905290529052905,4.9068906890689075,4.9084908490849095,4.91009100910091,4.911691169116912,4.913291329132914,4.914891489148916,4.916491649164916,4.918091809180918,4.91969196919692,4.921292129212922,4.922892289228923,4.924492449244925,4.926092609260927,4.927692769276929,4.929292929292929,4.930893089308931,4.932493249324933,4.934093409340935,4.9356935693569355,4.9372937293729375,4.93889388938894,4.940494049404942,4.942094209420942,4.943694369436944,4.945294529452946,4.946894689468948,4.948494849484948,4.95009500950095,4.951695169516952,4.9532953295329545,4.954895489548955,4.956495649564957,4.958095809580959,4.959695969596961,4.961296129612961,4.962896289628963,4.964496449644965,4.966096609660967,4.967696769676968,4.96929692969297,4.970897089708972,4.972497249724974,4.974097409740974,4.975697569756976,4.977297729772978,4.97889788978898,4.9804980498049805,4.9820982098209825,4.9836983698369846,4.985298529852987,4.986898689868987,4.988498849884989,4.990099009900991,4.991699169916991,4.993299329932993,4.994899489948995,4.996499649964997,4.998099809980998,4.999699969997,5.001300130013002,5.002900290029004,5.004500450045004,5.006100610061006,5.007700770077008,5.00930093009301,5.0109010901090105,5.012501250125013,5.014101410141015,5.015701570157017,5.017301730173017,5.018901890189019,5.020502050205021,5.022102210221023,5.023702370237023,5.025302530253025,5.0269026902690275,5.0285028502850295,5.03010301030103,5.031703170317032,5.033303330333034,5.034903490349036,5.036503650365036,5.038103810381038,5.03970397039704,5.041304130413042,5.042904290429043,5.044504450445045,5.046104610461047,5.047704770477049,5.049304930493049,5.050905090509051,5.052505250525053,5.054105410541055,5.0557055705570555,5.0573057305730575,5.05890589058906,5.060506050605062,5.062106210621062,5.063706370637064,5.065306530653066,5.066906690669068,5.068506850685068,5.07010701070107,5.071707170717072,5.0733073307330745,5.074907490749075,5.076507650765077,5.078107810781079,5.079707970797081,5.081308130813081,5.082908290829083,5.084508450845085,5.086108610861087,5.087708770877088,5.08930893089309,5.090909090909092,5.092509250925094,5.094109410941094,5.095709570957096,5.097309730973098,5.0989098909891,5.1005100510051005,5.1021102110211025,5.103710371037105,5.105310531053107,5.106910691069107,5.108510851085109,5.110111011101111,5.111711171117111,5.113311331133113,5.114911491149115,5.116511651165117,5.118111811181118,5.11971197119712,5.121312131213122,5.122912291229124,5.124512451245124,5.126112611261126,5.127712771277128,5.12931293129313,5.1309130913091305,5.132513251325133,5.134113411341135,5.135713571357137,5.137313731373137,5.138913891389139,5.140514051405141,5.142114211421143,5.143714371437143,5.145314531453145,5.1469146914691475,5.1485148514851495,5.15011501150115,5.151715171517152,5.153315331533154,5.154915491549156,5.156515651565156,5.158115811581158,5.15971597159716,5.161316131613162,5.162916291629163,5.164516451645165,5.166116611661167,5.167716771677169,5.169316931693169,5.170917091709171,5.172517251725173,5.174117411741175,5.1757175717571755,5.177317731773178,5.17891789178918,5.180518051805182,5.182118211821182,5.183718371837184,5.185318531853186,5.186918691869188,5.188518851885188,5.19011901190119,5.1917191719171925,5.1933193319331945,5.194919491949195,5.196519651965197,5.198119811981199,5.199719971997201,5.201320132013201,5.202920292029203,5.204520452045205,5.206120612061207,5.207720772077208,5.20932093209321,5.210921092109212,5.212521252125214,5.214121412141214,5.215721572157216,5.217321732173218,5.21892189218922,5.2205220522052205,5.2221222122212225,5.223722372237225,5.225322532253227,5.226922692269227,5.228522852285229,5.230123012301231,5.231723172317231,5.233323332333233,5.234923492349235,5.236523652365237,5.238123812381238,5.23972397239724,5.241324132413242,5.242924292429244,5.244524452445244,5.246124612461246,5.247724772477248,5.24932493249325,5.2509250925092505,5.252525252525253,5.254125412541255,5.255725572557257,5.257325732573257,5.258925892589259,5.260526052605261,5.262126212621263,5.263726372637263,5.2653265326532654,5.2669266926692675,5.2685268526852695,5.27012701270127,5.271727172717272,5.273327332733274,5.274927492749276,5.276527652765276,5.278127812781278,5.27972797279728,5.281328132813282,5.282928292829283,5.284528452845285,5.286128612861287,5.287728772877289,5.289328932893289,5.290929092909291,5.292529252925293,5.294129412941295,5.2957295729572955,5.297329732973298,5.2989298929893,5.300530053005302,5.302130213021302,5.303730373037304,5.305330533053306,5.306930693069308,5.308530853085308,5.31013101310131,5.3117311731173125,5.3133313331333145,5.314931493149315,5.316531653165317,5.318131813181319,5.319731973197321,5.321332133213321,5.322932293229323,5.324532453245325,5.326132613261327,5.327732773277328,5.32933293329333,5.330933093309332,5.332533253325334,5.334133413341334,5.335733573357336,5.337333733373338,5.33893389338934,5.3405340534053405,5.3421342134213425,5.343734373437345,5.345334533453347,5.346934693469347,5.348534853485349,5.350135013501351,5.351735173517351,5.353335333533353,5.354935493549355,5.356535653565357,5.358135813581358,5.35973597359736,5.361336133613362,5.362936293629364,5.364536453645364,5.366136613661366,5.367736773677368,5.36933693369337,5.370937093709371,5.372537253725373,5.374137413741375,5.375737573757377,5.377337733773377,5.378937893789379,5.380538053805381,5.382138213821383,5.383738373837383,5.3853385338533855,5.3869386938693875,5.38853885388539,5.39013901390139,5.391739173917392,5.393339333933394,5.394939493949396,5.396539653965396,5.398139813981398,5.3997399739974,5.401340134013402,5.402940294029403,5.404540454045405,5.406140614061407,5.407740774077409,5.409340934093409,5.410941094109411,5.412541254125413,5.414141414141415,5.4157415741574155,5.417341734173418,5.41894189418942,5.420542054205422,5.422142214221422,5.423742374237424,5.425342534253426,5.426942694269428,5.428542854285428,5.43014301430143,5.4317431743174325,5.4333433343334345,5.434943494349435,5.436543654365437,5.438143814381439,5.439743974397441,5.441344134413441,5.442944294429443,5.444544454445445,5.446144614461447,5.447744774477448,5.44934493449345,5.450945094509452,5.452545254525454,5.454145414541454,5.455745574557456,5.457345734573458,5.45894589458946,5.4605460546054605,5.4621462146214625,5.463746374637465,5.465346534653467,5.466946694669467,5.468546854685469,5.470147014701471,5.471747174717473,5.473347334733473,5.474947494749475,5.4765476547654774,5.478147814781478,5.47974797479748,5.481348134813482,5.482948294829484,5.484548454845484,5.486148614861486,5.487748774877488,5.48934893489349,5.490949094909491,5.492549254925493,5.494149414941495,5.495749574957497,5.497349734973497,5.498949894989499,5.500550055005501,5.502150215021503,5.503750375037503,5.5053505350535055,5.5069506950695075,5.50855085508551,5.51015101510151,5.511751175117512,5.513351335133514,5.514951495149516,5.516551655165516,5.518151815181518,5.51975197519752,5.521352135213522,5.522952295229523,5.524552455245525,5.526152615261527,5.527752775277529,5.529352935293529,5.530953095309531,5.532553255325533,5.534153415341535,5.5357535753575355,5.537353735373538,5.53895389538954,5.540554055405542,5.542154215421542,5.543754375437544,5.545354535453546,5.546954695469548,5.548554855485548,5.55015501550155,5.5517551755175525,5.5533553355335545,5.554955495549555,5.556555655565557,5.558155815581559,5.559755975597561,5.561356135613561,5.562956295629563,5.564556455645565,5.566156615661567,5.567756775677568,5.56935693569357,5.570957095709572,5.572557255725574,5.574157415741574,5.575757575757576,5.577357735773578,5.57895789578958,5.5805580558055805,5.582158215821583,5.583758375837585,5.585358535853587,5.586958695869587,5.588558855885589,5.590159015901591,5.591759175917593,5.593359335933593,5.594959495949595,5.5965596559655975,5.598159815981598,5.5997599759976,5.601360136013602,5.602960296029604,5.604560456045604,5.606160616061606,5.607760776077608,5.60936093609361,5.610961096109611,5.612561256125613,5.614161416141615,5.615761576157617,5.617361736173617,5.618961896189619,5.620562056205621,5.622162216221623,5.623762376237623,5.6253625362536255,5.6269626962696275,5.62856285628563,5.63016301630163,5.631763176317632,5.633363336333634,5.634963496349636,5.636563656365636,5.638163816381638,5.63976397639764,5.641364136413642,5.642964296429643,5.644564456445645,5.646164616461647,5.647764776477649,5.649364936493649,5.650965096509651,5.652565256525653,5.654165416541655,5.6557655765576555,5.657365736573658,5.65896589658966,5.660566056605662,5.662166216621662,5.663766376637664,5.665366536653666,5.666966696669668,5.668566856685668,5.6701670167016704,5.6717671767176725,5.6733673367336745,5.674967496749675,5.676567656765677,5.678167816781679,5.679767976797681,5.681368136813681,5.682968296829683,5.684568456845685,5.686168616861687,5.687768776877688,5.68936893689369,5.690969096909692,5.692569256925694,5.694169416941694,5.695769576957696,5.697369736973698,5.6989698969897,5.7005700570057005,5.702170217021703,5.703770377037705,5.705370537053707,5.706970697069707,5.708570857085709,5.710171017101711,5.711771177117713,5.713371337133713,5.714971497149715,5.7165716571657175,5.718171817181718,5.71977197719772,5.721372137213722,5.722972297229724,5.724572457245724,5.726172617261726,5.727772777277728,5.72937293729373,5.730973097309731,5.732573257325733,5.734173417341735,5.735773577357737,5.737373737373737,5.738973897389739,5.740574057405741,5.742174217421743,5.743774377437743,5.7453745374537455,5.7469746974697475,5.74857485748575,5.75017501750175,5.751775177517752,5.753375337533754,5.754975497549756,5.756575657565756,5.758175817581758,5.75977597759776,5.761376137613762,5.762976297629763,5.764576457645765,5.766176617661767,5.767776777677769,5.769376937693769,5.770977097709771,5.772577257725773,5.774177417741775,5.775777577757776,5.777377737773778,5.77897789778978,5.780578057805782,5.782178217821782,5.783778377837784,5.785378537853786,5.786978697869788,5.788578857885788,5.7901790179017905,5.7917791779177925,5.793379337933795,5.794979497949795,5.796579657965797,5.798179817981799,5.799779977997801,5.801380138013801,5.802980298029803,5.804580458045805,5.806180618061807,5.807780778077808,5.80938093809381,5.810981098109812,5.812581258125814,5.814181418141814,5.815781578157816,5.817381738173818,5.81898189818982,5.8205820582058205,5.822182218221823,5.823782378237825,5.825382538253827,5.826982698269827,5.828582858285829,5.830183018301831,5.831783178317833,5.833383338333833,5.834983498349835,5.8365836583658375,5.838183818381838,5.83978397839784,5.841384138413842,5.842984298429844,5.844584458445844,5.846184618461846,5.847784778477848,5.84938493849385,5.850985098509851,5.852585258525853,5.854185418541855,5.855785578557857,5.857385738573857,5.858985898589859,5.860586058605861,5.862186218621863,5.8637863786378635,5.8653865386538655,5.8669866986698676,5.86858685868587,5.87018701870187,5.871787178717872,5.873387338733874,5.874987498749876,5.876587658765876,5.878187818781878,5.87978797879788,5.8813881388138824,5.882988298829883,5.884588458845885,5.886188618861887,5.887788778877889,5.889388938893889,5.890989098909891,5.892589258925893,5.894189418941895,5.895789578957896,5.897389738973898,5.8989898989899,5.900590059005902,5.902190219021902,5.903790379037904,5.905390539053906,5.906990699069908,5.908590859085908,5.9101910191019105,5.9117911791179125,5.913391339133915,5.914991499149915,5.916591659165917,5.918191819181919,5.919791979197921,5.921392139213921,5.922992299229923,5.924592459245925,5.926192619261927,5.927792779277928,5.92939293929393,5.930993099309932,5.932593259325934,5.934193419341934,5.935793579357936,5.937393739373938,5.93899389938994,5.9405940594059405,5.942194219421943,5.943794379437945,5.945394539453947,5.946994699469947,5.948594859485949,5.950195019501951,5.951795179517953,5.953395339533953,5.954995499549955,5.9565956595659575,5.958195819581958,5.95979597959796,5.961396139613962,5.962996299629964,5.964596459645964,5.966196619661966,5.967796779677968,5.96939693969397,5.970997099709971,5.972597259725973,5.974197419741975,5.975797579757977,5.977397739773977,5.978997899789979,5.980598059805981,5.982198219821983,5.9837983798379835,5.9853985398539855,5.986998699869988,5.98859885988599,5.99019901990199,5.991799179917992,5.993399339933994,5.994999499949996,5.996599659965996,5.998199819981998,5.999799979998,6.0014001400140025,6.003000300030003,6.004600460046005,6.006200620062007,6.007800780078009,6.009400940094009,6.011001100110011,6.012601260126013,6.014201420142015,6.015801580158016,6.017401740174018,6.01900190019002,6.020602060206022,6.022202220222022,6.023802380238024,6.025402540254026,6.027002700270028,6.028602860286028,6.0302030203020305,6.0318031803180325,6.033403340334035,6.035003500350035,6.036603660366037,6.038203820382039,6.039803980398041,6.041404140414041,6.043004300430043,6.044604460446045,6.046204620462047,6.047804780478048,6.04940494049405,6.051005100510052,6.052605260526054,6.054205420542054,6.055805580558056,6.057405740574058,6.05900590059006,6.0606060606060606,6.062206220622063,6.063806380638065,6.065406540654067,6.067006700670067,6.068606860686069,6.070207020702071,6.071807180718073,6.073407340734073,6.0750075007500755,6.0766076607660775,6.0782078207820796,6.07980798079808,6.081408140814082,6.083008300830084,6.084608460846084,6.086208620862086,6.087808780878088,6.08940894089409,6.091009100910091,6.092609260926093,6.094209420942095,6.095809580958097,6.097409740974097,6.099009900990099,6.100610061006101,6.102210221022103,6.1038103810381035,6.1054105410541055,6.107010701070108,6.10861086108611,6.11021102110211,6.111811181118112,6.113411341134114,6.115011501150116,6.116611661166116,6.118211821182118,6.11981198119812,6.1214121412141225,6.123012301230123,6.124612461246125,6.126212621262127,6.127812781278129,6.129412941294129,6.131013101310131,6.132613261326133,6.134213421342135,6.135813581358136,6.137413741374138,6.13901390139014,6.140614061406142,6.142214221422142,6.143814381438144,6.145414541454146,6.147014701470148,6.148614861486148,6.1502150215021505,6.1518151815181525,6.153415341534155,6.155015501550155,6.156615661566157,6.158215821582159,6.159815981598161,6.161416141614161,6.163016301630163,6.164616461646165,6.166216621662167,6.167816781678168,6.16941694169417,6.171017101710172,6.172617261726174,6.174217421742174,6.175817581758176,6.177417741774178,6.17901790179018,6.180618061806181,6.182218221822183,6.183818381838185,6.185418541854187,6.187018701870187,6.188618861886189,6.190219021902191,6.191819181918193,6.193419341934193,6.1950195019501955,6.1966196619661975,6.1982198219822,6.1998199819982,6.201420142014202,6.203020302030204,6.204620462046204,6.206220622062206,6.207820782078208,6.20942094209421,6.211021102110211,6.212621262126213,6.214221422142215,6.215821582158217,6.217421742174217,6.219021902190219,6.220622062206221,6.222222222222223,6.2238223822382235,6.2254225422542255,6.227022702270228,6.22862286228623,6.23022302230223,6.231823182318232,6.233423342334234,6.235023502350236,6.236623662366236,6.238223822382238,6.23982398239824,6.2414241424142425,6.243024302430243,6.244624462446245,6.246224622462247,6.247824782478249,6.249424942494249,6.251025102510251,6.252625262526253,6.254225422542255,6.255825582558256,6.257425742574258,6.25902590259026,6.260626062606262,6.262226222622262,6.263826382638264,6.265426542654266,6.267026702670268,6.2686268626862685,6.2702270227022705,6.2718271827182726,6.273427342734275,6.275027502750275,6.276627662766277,6.278227822782279,6.279827982798281,6.281428142814281,6.283028302830283,6.284628462846285,6.2862286228622875,6.287828782878288,6.28942894289429,6.291029102910292,6.292629262926294,6.294229422942294,6.295829582958296,6.297429742974298,6.2990299029903,6.300630063006301,6.302230223022303,6.303830383038305,6.305430543054307,6.307030703070307,6.308630863086309,6.310231023102311,6.311831183118313,6.313431343134313,6.3150315031503155,6.3166316631663175,6.31823182318232,6.31983198319832,6.321432143214322,6.323032303230324,6.324632463246324,6.326232623262326,6.327832783278328,6.32943294329433,6.331033103310331,6.332633263326333,6.334233423342335,6.335833583358337,6.337433743374337,6.339033903390339,6.340634063406341,6.342234223422343,6.3438343834383435,6.3454345434543455,6.347034703470348,6.34863486348635,6.35023502350235,6.351835183518352,6.353435343534354,6.355035503550356,6.356635663566356,6.358235823582358,6.35983598359836,6.3614361436143625,6.363036303630363,6.364636463646365,6.366236623662367,6.367836783678369,6.369436943694369,6.371037103710371,6.372637263726373,6.374237423742375,6.375837583758376,6.377437743774378,6.37903790379038,6.380638063806382,6.382238223822382,6.383838383838384,6.385438543854386,6.387038703870388,6.3886388638863885,6.3902390239023905,6.391839183918393,6.393439343934395,6.395039503950395,6.396639663966397,6.398239823982399,6.399839983998401,6.401440144014401,6.403040304030403,6.404640464046405,6.4062406240624075,6.407840784078408,6.40944094409441,6.411041104110412,6.412641264126414,6.414241424142414,6.415841584158416,6.417441744174418,6.41904190419042,6.420642064206421,6.422242224222423,6.423842384238425,6.425442544254427,6.427042704270427,6.428642864286429,6.430243024302431,6.431843184318433,6.433443344334433,6.4350435043504355,6.4366436643664375,6.43824382438244,6.43984398439844,6.441444144414442,6.443044304430444,6.444644464446444,6.446244624462446,6.447844784478448,6.44944494449445,6.451045104510451,6.452645264526453,6.454245424542455,6.455845584558457,6.457445744574457,6.459045904590459,6.460646064606461,6.462246224622463,6.4638463846384635,6.4654465446544656,6.467046704670468,6.46864686468647,6.47024702470247,6.471847184718472,6.473447344734474,6.475047504750476,6.476647664766476,6.478247824782478,6.4798479847984805,6.4814481448144825,6.483048304830483,6.484648464846485,6.486248624862487,6.487848784878489,6.489448944894489,6.491049104910491,6.492649264926493,6.494249424942495,6.495849584958496,6.497449744974498,6.4990499049905,6.500650065006502,6.502250225022502,6.503850385038504,6.505450545054506,6.507050705070508,6.5086508650865085,6.5102510251025105,6.511851185118513,6.513451345134515,6.515051505150515,6.516651665166517,6.518251825182519,6.519851985198521,6.521452145214521,6.523052305230523,6.524652465246525,6.5262526252625275,6.527852785278528,6.52945294529453,6.531053105310532,6.532653265326534,6.534253425342534,6.535853585358536,6.537453745374538,6.53905390539054,6.540654065406541,6.542254225422543,6.543854385438545,6.545454545454547,6.547054705470547,6.548654865486549,6.550255025502551,6.551855185518553,6.5534553455345534,6.5550555055505555,6.5566556655665575,6.55825582558256,6.55985598559856,6.561456145614562,6.563056305630564,6.564656465646566,6.566256625662566,6.567856785678568,6.56945694569457,6.571057105710571,6.572657265726573,6.574257425742575,6.575857585758577,6.577457745774577,6.579057905790579,6.580658065806581,6.582258225822583,6.5838583858385835,6.585458545854586,6.587058705870588,6.58865886588659,6.59025902590259,6.591859185918592,6.593459345934594,6.595059505950596,6.596659665966596,6.598259825982598,6.5998599859986005,6.6014601460146025,6.603060306030603,6.604660466046605,6.606260626062607,6.607860786078609,6.609460946094609,6.611061106110611,6.612661266126613,6.614261426142615,6.615861586158616,6.617461746174618,6.61906190619062,6.620662066206622,6.622262226222622,6.623862386238624,6.625462546254626,6.627062706270628,6.6286628662866285,6.6302630263026305,6.631863186318633,6.633463346334635,6.635063506350635,6.636663666366637,6.638263826382639,6.639863986398641,6.641464146414641,6.643064306430643,6.644664466446645,6.6462646264626475,6.647864786478648,6.64946494649465,6.651065106510652,6.652665266526654,6.654265426542654,6.655865586558656,6.657465746574658,6.65906590659066,6.660666066606661,6.662266226622663,6.663866386638665,6.665466546654667,6.667066706670667,6.668666866686669,6.670267026702671,6.671867186718673,6.6734673467346735,6.6750675067506755,6.6766676667666776,6.67826782678268,6.67986798679868,6.681468146814682,6.683068306830684,6.684668466846686,6.686268626862686,6.687868786878688,6.68946894689469,6.691069106910691,6.692669266926693,6.694269426942695,6.695869586958697,6.697469746974697,6.699069906990699,6.700670067006701,6.702270227022703,6.7038703870387035,6.705470547054706,6.707070707070708,6.70867086708671,6.71027102710271,6.711871187118712,6.713471347134714,6.715071507150716,6.716671667166716,6.718271827182718,6.7198719871987205,6.7214721472147225,6.723072307230723,6.724672467246725,6.726272627262727,6.727872787278729,6.729472947294729,6.731073107310731,6.732673267326733,6.734273427342735,6.735873587358736,6.737473747374738,6.73907390739074,6.740674067406742,6.742274227422742,6.743874387438744,6.745474547454746,6.747074707470748,6.7486748674867485,6.7502750275027505,6.751875187518753,6.753475347534755,6.755075507550755,6.756675667566757,6.758275827582759,6.759875987598761,6.761476147614761,6.763076307630763,6.7646764676467654,6.7662766276627675,6.767876787678768,6.76947694769477,6.771077107710772,6.772677267726774,6.774277427742774,6.775877587758776,6.777477747774778,6.77907790779078,6.780678067806781,6.782278227822783,6.783878387838785,6.785478547854787,6.787078707870787,6.788678867886789,6.790279027902791,6.791879187918793,6.7934793479347935,6.7950795079507955,6.796679667966798,6.7982798279828,6.7998799879988,6.801480148014802,6.803080308030804,6.804680468046806,6.806280628062806,6.807880788078808,6.80948094809481,6.811081108110811,6.812681268126813,6.814281428142815,6.815881588158817,6.817481748174817,6.819081908190819,6.820682068206821,6.822282228222823,6.8238823882388235,6.825482548254826,6.827082708270828,6.82868286828683,6.83028302830283,6.831883188318832,6.833483348334834,6.835083508350836,6.836683668366836,6.838283828382838,6.8398839883988405,6.8414841484148425,6.843084308430843,6.844684468446845,6.846284628462847,6.847884788478849,6.849484948494849,6.851085108510851,6.852685268526853,6.854285428542855,6.855885588558856,6.857485748574858,6.85908590859086,6.860686068606862,6.862286228622862,6.863886388638864,6.865486548654866,6.867086708670868,6.8686868686868685,6.870287028702871,6.871887188718873,6.873487348734875,6.875087508750875,6.876687668766877,6.878287828782879,6.879887988798881,6.881488148814881,6.883088308830883,6.8846884688468855,6.8862886288628875,6.887888788878888,6.88948894889489,6.891089108910892,6.892689268926894,6.894289428942894,6.895889588958896,6.897489748974898,6.8990899089909,6.900690069006901,6.902290229022903,6.903890389038905,6.905490549054907,6.907090709070907,6.908690869086909,6.910291029102911,6.911891189118913,6.9134913491349135,6.9150915091509155,6.916691669166918,6.91829182918292,6.91989198919892,6.921492149214922,6.923092309230924,6.924692469246926,6.926292629262926,6.927892789278928,6.92949294929493,6.931093109310931,6.932693269326933,6.934293429342935,6.935893589358937,6.937493749374937,6.939093909390939,6.940694069406941,6.942294229422943,6.9438943894389435,6.945494549454946,6.947094709470948,6.94869486948695,6.95029502950295,6.951895189518952,6.953495349534954,6.955095509550956,6.956695669566956,6.9582958295829584,6.9598959895989605,6.9614961496149625,6.963096309630963,6.964696469646965,6.966296629662967,6.967896789678969,6.969496949694969,6.971097109710971,6.972697269726973,6.974297429742975,6.975897589758976,6.977497749774978,6.97909790979098,6.980698069806982,6.982298229822982,6.983898389838984,6.985498549854986,6.987098709870988,6.9886988698869885,6.990299029902991,6.991899189918993,6.993499349934995,6.995099509950995,6.996699669966997,6.998299829982999,6.999899989999001,7.001500150015001,7.003100310031003,7.0047004700470055,7.0063006300630075,7.007900790079008,7.00950095009501,7.011101110111012,7.012701270127014,7.014301430143014,7.015901590159016,7.017501750175018,7.01910191019102,7.020702070207021,7.022302230223023,7.023902390239025,7.025502550255027,7.027102710271027,7.028702870287029,7.030303030303031,7.031903190319033,7.0335033503350335,7.0351035103510355,7.036703670367038,7.03830383038304,7.03990399039904,7.041504150415042,7.043104310431044,7.044704470447046,7.046304630463046,7.047904790479048,7.04950495049505,7.051105110511051,7.052705270527053,7.054305430543055,7.055905590559057,7.057505750575057,7.059105910591059,7.060706070607061,7.062306230623063,7.063906390639064,7.065506550655066,7.067106710671068,7.06870687068707,7.07030703070307,7.071907190719072,7.073507350735074,7.075107510751076,7.076707670767076,7.0783078307830785,7.0799079907990805,7.081508150815083,7.083108310831083,7.084708470847085,7.086308630863087,7.087908790879089,7.089508950895089,7.091109110911091,7.092709270927093,7.094309430943095,7.095909590959096,7.097509750975098,7.0991099109911,7.100710071007102,7.102310231023102,7.103910391039104,7.105510551055106,7.107110711071108,7.1087108710871085,7.110311031103111,7.111911191119113,7.113511351135115,7.115111511151115,7.116711671167117,7.118311831183119,7.119911991199121,7.121512151215121,7.123112311231123,7.1247124712471255,7.1263126312631275,7.127912791279128,7.12951295129513,7.131113111311132,7.132713271327134,7.134313431343134,7.135913591359136,7.137513751375138,7.13911391139114,7.140714071407141,7.142314231423143,7.143914391439145,7.145514551455147,7.147114711471147,7.148714871487149,7.150315031503151,7.151915191519153,7.1535153515351535,7.1551155115511555,7.156715671567158,7.15831583158316,7.15991599159916,7.161516151615162,7.163116311631164,7.164716471647166,7.166316631663166,7.167916791679168,7.1695169516951704,7.1711171117111725,7.172717271727173,7.174317431743175,7.175917591759177,7.177517751775177,7.179117911791179,7.180718071807181,7.182318231823183,7.183918391839184,7.185518551855186,7.187118711871188,7.18871887188719,7.19031903190319,7.191919191919192,7.193519351935194,7.195119511951196,7.196719671967196,7.1983198319831985,7.1999199919992005,7.201520152015203,7.203120312031203,7.204720472047205,7.206320632063207,7.207920792079209,7.209520952095209,7.211121112111211,7.212721272127213,7.214321432143215,7.215921592159216,7.217521752175218,7.21912191219122,7.220722072207222,7.222322232223222,7.223922392239224,7.225522552255226,7.227122712271228,7.2287228722872285,7.230323032303231,7.231923192319233,7.233523352335235,7.235123512351235,7.236723672367237,7.238323832383239,7.239923992399241,7.241524152415241,7.243124312431243,7.2447244724472455,7.2463246324632475,7.247924792479248,7.24952495249525,7.251125112511252,7.252725272527254,7.254325432543254,7.255925592559256,7.257525752575258,7.25912591259126,7.260726072607261,7.262326232623263,7.263926392639265,7.265526552655267,7.267126712671267,7.268726872687269,7.270327032703271,7.271927192719273,7.2735273527352735,7.275127512751276,7.276727672767278,7.27832783278328,7.27992799279928,7.281528152815282,7.283128312831284,7.284728472847286,7.286328632863286,7.287928792879288,7.2895289528952905,7.2911291129112925,7.292729272927293,7.294329432943295,7.295929592959297,7.297529752975297,7.299129912991299,7.300730073007301,7.302330233023303,7.303930393039304,7.305530553055306,7.307130713071308,7.30873087308731,7.31033103310331,7.311931193119312,7.313531353135314,7.315131513151316,7.316731673167316,7.3183318331833185,7.3199319931993205,7.321532153215323,7.323132313231323,7.324732473247325,7.326332633263327,7.327932793279329,7.329532953295329,7.331133113311331,7.332733273327333,7.334333433343335,7.335933593359336,7.337533753375338,7.33913391339134,7.340734073407342,7.342334233423342,7.343934393439344,7.345534553455346,7.347134713471348,7.3487348734873486,7.350335033503351,7.351935193519353,7.353535353535355,7.355135513551355,7.356735673567357,7.358335833583359,7.359935993599361,7.361536153615361,7.3631363136313634,7.3647364736473655,7.3663366336633676,7.367936793679368,7.36953695369537,7.371137113711372,7.372737273727374,7.374337433743374,7.375937593759376,7.377537753775378,7.37913791379138,7.380738073807381,7.382338233823383,7.383938393839385,7.385538553855387,7.387138713871387,7.388738873887389,7.390339033903391,7.391939193919393,7.3935393539353935,7.395139513951396,7.396739673967398,7.3983398339834,7.3999399939994,7.401540154015402,7.403140314031404,7.404740474047406,7.406340634063406,7.407940794079408,7.4095409540954105,7.4111411141114125,7.412741274127413,7.414341434143415,7.415941594159417,7.417541754175417,7.419141914191419,7.420742074207421,7.422342234223423,7.423942394239424,7.425542554255426,7.427142714271428,7.42874287428743,7.43034303430343,7.431943194319432,7.433543354335434,7.435143514351436,7.436743674367436,7.4383438343834385,7.4399439943994405,7.441544154415443,7.443144314431443,7.444744474447445,7.446344634463447,7.447944794479449,7.449544954495449,7.451145114511451,7.452745274527453,7.454345434543455,7.455945594559456,7.457545754575458,7.45914591459146,7.460746074607462,7.462346234623462,7.463946394639464,7.465546554655466,7.467146714671468,7.468746874687469,7.470347034703471,7.471947194719473,7.473547354735475,7.475147514751475,7.476747674767477,7.478347834783479,7.479947994799481,7.481548154815481,7.4831483148314835,7.4847484748474855,7.486348634863488,7.487948794879488,7.48954895489549,7.491149114911492,7.492749274927494,7.494349434943494,7.495949594959496,7.497549754975498,7.4991499149915,7.500750075007501,7.502350235023503,7.503950395039505,7.505550555055507,7.507150715071507,7.508750875087509,7.510351035103511,7.511951195119513,7.5135513551355135,7.515151515151516,7.516751675167518,7.51835183518352,7.51995199519952,7.521552155215522,7.523152315231524,7.524752475247526,7.526352635263526,7.527952795279528,7.5295529552955305,7.5311531153115325,7.532753275327533,7.534353435343535,7.535953595359537,7.537553755375537,7.539153915391539,7.540754075407541,7.542354235423543,7.543954395439544,7.545554555455546,7.547154715471548,7.54875487548755,7.55035503550355,7.551955195519552,7.553555355535554,7.555155515551556,7.5567556755675565,7.5583558355835585,7.5599559955995606,7.561556155615563,7.563156315631563,7.564756475647565,7.566356635663567,7.567956795679569,7.569556955695569,7.571157115711571,7.572757275727573,7.5743574357435755,7.575957595759576,7.577557755775578,7.57915791579158,7.580758075807582,7.582358235823582,7.583958395839584,7.585558555855586,7.587158715871588,7.588758875887589,7.590359035903591,7.591959195919593,7.593559355935595,7.595159515951595,7.596759675967597,7.598359835983599,7.599959995999601,7.601560156015601,7.6031603160316035,7.6047604760476055,7.606360636063608,7.607960796079608,7.60956095609561,7.611161116111612,7.612761276127614,7.614361436143614,7.615961596159616,7.617561756175618,7.61916191619162,7.620762076207621,7.622362236223623,7.623962396239625,7.625562556255627,7.627162716271627,7.628762876287629,7.630363036303631,7.631963196319633,7.6335633563356335,7.635163516351636,7.636763676367638,7.63836383638364,7.63996399639964,7.641564156415642,7.643164316431644,7.644764476447646,7.646364636463646,7.647964796479648,7.6495649564956505,7.6511651165116525,7.652765276527653,7.654365436543655,7.655965596559657,7.657565756575657,7.659165916591659,7.660766076607661,7.662366236623663,7.663966396639664,7.665566556655666,7.667166716671668,7.66876687668767,7.67036703670367,7.671967196719672,7.673567356735674,7.675167516751676,7.6767676767676765,7.6783678367836785,7.679967996799681,7.681568156815683,7.683168316831683,7.684768476847685,7.686368636863687,7.687968796879689,7.689568956895689,7.691169116911691,7.692769276927693,7.6943694369436955,7.695969596959696,7.697569756975698,7.6991699169917,7.700770077007702,7.702370237023702,7.703970397039704,7.705570557055706,7.707170717071708,7.708770877087709,7.710371037103711,7.711971197119713,7.713571357135715,7.715171517151715,7.716771677167717,7.718371837183719,7.719971997199721,7.721572157215721,7.7231723172317235,7.7247724772477255,7.726372637263728,7.727972797279728,7.72957295729573,7.731173117311732,7.732773277327734,7.734373437343734,7.735973597359736,7.737573757375738,7.73917391739174,7.740774077407741,7.742374237423743,7.743974397439745,7.745574557455747,7.747174717471747,7.748774877487749,7.750375037503751,7.751975197519753,7.7535753575357536,7.755175517551756,7.756775677567758,7.75837583758376,7.75997599759976,7.761576157615762,7.763176317631764,7.764776477647766,7.766376637663766,7.7679767976797685,7.7695769576957705,7.7711771177117726,7.772777277727773,7.774377437743775,7.775977597759777,7.777577757775779,7.779177917791779,7.780778077807781,7.782378237823783,7.783978397839784,7.785578557855786,7.787178717871788,7.78877887788779,7.79037903790379,7.791979197919792,7.793579357935794,7.795179517951796,7.7967796779677965,7.7983798379837985,7.799979997999801,7.801580158015803,7.803180318031803,7.804780478047805,7.806380638063807,7.807980798079809,7.809580958095809,7.811181118111811,7.812781278127813,7.8143814381438155,7.815981598159816,7.817581758175818,7.81918191819182,7.820782078207822,7.822382238223822,7.823982398239824,7.825582558255826,7.827182718271828,7.828782878287829,7.830383038303831,7.831983198319833,7.833583358335835,7.835183518351835,7.836783678367837,7.838383838383839,7.839983998399841,7.841584158415841,7.8431843184318435,7.8447844784478455,7.846384638463848,7.847984798479848,7.84958495849585,7.851185118511852,7.852785278527854,7.854385438543854,7.855985598559856,7.857585758575858,7.85918591859186,7.860786078607861,7.862386238623863,7.863986398639865,7.865586558655867,7.867186718671867,7.868786878687869,7.870387038703871,7.871987198719873,7.873587358735874,7.875187518751876,7.876787678767878,7.87838783878388,7.87998799879988,7.881588158815882,7.883188318831884,7.884788478847886,7.886388638863886,7.8879887988798885,7.8895889588958905,7.891189118911893,7.892789278927893,7.894389438943895,7.895989598959897,7.897589758975899,7.899189918991899,7.900790079007901,7.902390239023903,7.903990399039904,7.905590559055906,7.907190719071908,7.90879087908791,7.91039103910391,7.911991199119912,7.913591359135914,7.915191519151916,7.9167916791679165,7.9183918391839185,7.919991999199921,7.921592159215923,7.923192319231923,7.924792479247925,7.926392639263927,7.927992799279929,7.929592959295929,7.931193119311931,7.932793279327933,7.9343934393439355,7.935993599359936,7.937593759375938,7.93919391939194,7.940794079407942,7.942394239423942,7.943994399439944,7.945594559455946,7.947194719471948,7.948794879487949,7.950395039503951,7.951995199519953,7.953595359535955,7.955195519551955,7.956795679567957,7.958395839583959,7.959995999599961,7.9615961596159615,7.9631963196319635,7.9647964796479656,7.966396639663968,7.967996799679968,7.96959695969597,7.971197119711972,7.972797279727974,7.974397439743974,7.975997599759976,7.977597759775978,7.9791979197919805,7.980798079807981,7.982398239823983,7.983998399839985,7.985598559855987,7.987198719871987,7.988798879887989,7.990399039903991,7.991999199919993,7.993599359935994,7.995199519951996,7.996799679967998,7.998399839984,8];function pc(r,t){let i=0,s=r.length-1,l=-1;for(;i<=s;){const a=Math.floor((i+s)/2);r[a]<t?(l=a,i=a+1):s=a-1}return l}function gc(r){if(r<=t1[0])return X1[0];if(t1[t1.lenght-1]<=r)return X1[X1.lenght-1];{const t=pc(t1,r);if(t==t1.lenght-1)return X1[X1.lenght-1];{const i=t+1;return((r-t1[t])*X1[i]+(t1[i]-r)*X1[t])/(t1[i]-t1[t])}}}function c8(r=0,t=1,i=null){if(typeof r!="number"||typeof t!="number")throw new Error("loc and scale must be numbers");if(t<=0)throw new Error("standard deviation must be a positive number");return F0(()=>t*gc($0()())+r,i)}function mc(r,t,i=null){if(t<=0)throw new Error("Scale parameter gamma must be greater than 0");return F0(()=>r+t*Math.tan(Math.PI*($0()()-.5)),i)}function yc(r,t=null){if(r<=0)throw new Error("Rate parameter lambda must be greater than 0");return F0(()=>-Math.log(1-$0()())/r,t)}function vc(r,t=null){if(!Number.isInteger(r)||r<=0)throw new Error("Degrees of freedom (k) must be a positive integer.");return F0(()=>{let s=0;for(let l=0;l<r;l++){const a=c8();s+=a*a}return s},t)}function xc(r,t=null){if(r<=0)throw new Error("Lambda must be a positive number.");if(30<r)return Math.floor(c8(r,Math.sqrt(r),t));{const i=s=>{const l=Math.exp(-s);let a=0,c=1;do a++,c*=$0()();while(c>l);return a-1};return F0(()=>i(r),t)}}function _c(r,t,i,s=null){if(typeof r!="number"||typeof t!="number"||typeof t!="number"||r>i||i>t)throw new Error("a, b, c must be positive numbers satisfying a < c < b");return F0(()=>wc(r,t,i),s)}function wc(r,t,i){const s=$0()();return s<(i-r)/(t-r)?r+Math.sqrt(s*(t-r)*(i-r)):t-Math.sqrt((1-s)*(t-r)*(t-i))}function kc(r,t,i=null){if(typeof r!="number"||r<=0)throw new Error("alpha must be a positive number");if(typeof t!="number"||typeof t!="number")throw new Error("xm must be a positive number");return F0(()=>t/Math.pow($0()(),1/r),i)}function Sc(r,t=null){if(typeof r!="number"||r<0||r>1)throw new Error("p must be a number in (0,1)");return F0(()=>bc(r),t)}function bc(r){return Math.ceil(Math.log(1-$0()())/Math.log(1-r))}function Mc(r,t,i=null){return F0(()=>Cc(r,t),i)}function Cc(r,t){let i=0;for(let s=0;s<r;s++)$0()()<t&&i++;return i}function A4(r){let t=yr(3,10);const i=[],s=[];for(let f=0;f<t;f++)for(;1/(f+1)/(f+1)<P6();){const h=P6(0,Math.PI/2),g=P6(f,f+1)/t,y=g*Math.cos(h),v=1-g*Math.sin(h);i.push([r*y,r*v]);const x=P6(1/(f+2)/(f+2),1/(f+1)/(f+1));s.push(r*x)}const l=`<rect x="0" y="0" width="${r}" height="${r}" rx="${r/4}" ry="${r/4}" fill="yellow" />`,a=i.map(([f,h],g)=>{const y=s[g];return`<circle cx="${f}" cy="${h}" r="${y}" fill="black" />`}).join("");return`
      <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" className="randlib-logo" width="${r}" height="${r}" preserveAspectRatio="xMidYMid meet" viewBox="0 0 ${r} ${r}">
        <defs>
          <clipPath id="clip-rect">
            ${l}
          </clipPath>
        </defs>
        ${l}
        <g clip-path="url(#clip-rect)">
          <circle cx="0" cy="${r}" r="${r/4}" fill="black" />
          ${a}
        </g>
      </svg>
    `}const Ci=5e3,j4=0,Ec=64,Pc=100,c3=1e3,f3=1,i0=.05,C5=[{name:"chisquare",sampler:r=>vc(r.k,r.size),parameters:{k:6},increments:[f3]},{name:"randint",sampler:r=>yr(r.low,r.high,r.size),parameters:{low:0,high:6},increments:[f3,f3]},{name:"uniform",sampler:r=>P6(r.low,r.high,r.size),parameters:{low:0,high:1},increments:[i0,i0]},{name:"normal",sampler:r=>c8(r.loc,r.scale,r.size),parameters:{loc:0,scale:1},increments:[i0,i0]},{name:"cauchy",sampler:r=>mc(r.median,r.gamma,r.size),parameters:{median:0,gamma:1},increments:[i0,i0]},{name:"exponential",sampler:r=>yc(r.lambda,r.size),parameters:{lambda:1},increments:[i0]},{name:"poisson",sampler:r=>xc(r.lambda,r.size),parameters:{lambda:1},increments:[i0]},{name:"geometric",sampler:r=>Sc(r.p,r.size),parameters:{p:.5},increments:[i0]},{name:"pareto",sampler:r=>kc(r.alpha,r.xm,r.size),parameters:{alpha:1,xm:1},increments:[i0,i0]},{name:"binomial",sampler:r=>Mc(r.n,r.p,r.size),parameters:{n:10,p:.5},increments:[f3,i0]},{name:"triangular",sampler:r=>_c(r.a,r.b,r.c,r.size),parameters:{a:0,b:1,c:.5},increments:[i0,i0,i0]}];function Tc(r,t){r.sort((h,g)=>h-g);const i=r[0],a=(r[r.length-1]-i)/t,c=Array(t).fill(0);r.forEach(h=>{const g=Math.min(Math.floor((h-i)/a),t-1);c[g]++});const f=[];for(let h=0;h<t;h++){const g=i+h*a,y=g+a;f.push(`${g.toFixed(1)}-${y.toFixed(1)}`)}return{labels:f,values:c}}function Ei(r){return C5.find(t=>t.name===r).sampler}function Pi(r){const t=document.querySelector(r),i=document.createRange();i.selectNode(t),window.getSelection().removeAllRanges(),window.getSelection().addRange(i);try{document.execCommand("copy")}catch{}window.getSelection().removeAllRanges()}const Oc=()=>{const[r,t]=H9.useState(C5[j4].name),[i,s]=H9.useState(C5[j4].parameters),[l,a]=H9.useState(C5[j4].increments),[c,f]=H9.useState(()=>Ei(r)({...i,size:Ci})),[h,g]=H9.useState(A4(Ec));function y(L){const F=L.target.value;t(F);const A=C5.find(H=>H.name===F);s(A.parameters),a(A.increments),x(A.name,A.parameters)}function v(L,F){const A={...i,[L]:Number(F)};s(A),x(r,A)}function x(L,F){const A=Ei(L);try{const H=A({...F,size:Ci});f(H)}catch{f(null),console.log("Parámetro incorrecto.")}}let k=null;c&&(k=Tc(c,Pc));const T=q.jsx(fc,{data:k}),M=()=>{g(A4(64))},C=()=>{const L=new Blob([h],{type:"image/svg+xml"}),F=URL.createObjectURL(L);let A=document.querySelector('link[rel="icon"]');return A||(A=document.createElement("link"),A.rel="icon",document.head.appendChild(A)),A.href=F,()=>URL.revokeObjectURL(F)};return H9.useEffect(()=>{M();const L=setInterval(M,c3);return()=>clearInterval(L)},[c3]),H9.useEffect(()=>{C();const L=setInterval(C,c3);return()=>clearInterval(L)},[c3]),q.jsxs(q.Fragment,{children:[q.jsxs("div",{className:"App",children:[q.jsxs("div",{className:"main",children:[q.jsxs("h1",{children:[q.jsx("span",{id:"logo",dangerouslySetInnerHTML:{__html:A4(64)}}),q.jsx("a",{href:"https://www.npmjs.com/package/randlibjs",className:"library-link",children:"Randlibjs"})]}),q.jsx("h2",{children:"Powerful Lightweight Random Number Generators"}),q.jsx("p",{children:"Ranlibjs makes it easy to generate pseudo-random samples. Randlibjs is a powerful JavaScript library designed to provide a wide range of random number distributions efficiently."}),q.jsx("p",{children:"The library supports various statistical distributions, giving flexibility for simulations, games, data analysis, and more. While the showcase here focuses on random number generation and histogram visualization, Randlibjs also offers additional powerful methods such as seeding, shuffling, and permutation for even greater control over your random processes."}),q.jsx("h2",{children:"Installation"}),q.jsx("p",{children:"To get started with Randlibjs, you can install it via npm. Simply run the following command in your terminal:"}),q.jsx("div",{className:"code-box",children:q.jsx("code",{id:"npm-command",children:"npm install randlibjs"})}),q.jsx("button",{className:"copy-btn",onClick:()=>Pi("#npm-command"),children:"Copy"}),q.jsx("h2",{children:"Usage"}),q.jsx("p",{children:"After installing the library, you can import it into your project and start generating random numbers. Here's an example of how to generate random numbers using a standard normal distribution:"}),q.jsx("div",{className:"code-box",children:q.jsxs("code",{id:"example-code",children:["import normal from 'randlibjs';",q.jsx("br",{}),q.jsx("br",{}),"// Generate a sample from a standard normal distribution",q.jsx("br",{}),"const sample = normal(low=0.0, high=1.0, size=10);",q.jsx("br",{}),q.jsx("br",{}),"// Output result sample",q.jsx("br",{}),"console.log(sample);"]})}),q.jsx("button",{className:"copy-btn",onClick:()=>Pi("#example-code"),children:"Copy"}),q.jsxs("div",{children:[q.jsx("h2",{children:"Showcase"}),q.jsx("p",{children:"On this page, you can interactively generate random numbers and visualize the results with a dynamic histogram. Simply select a distribution and watch the sample data update in real time."}),q.jsx(dc,{distributions:C5,selectedDistribution:r,handleDistributionSelect:y,parameters:i,increments:l,handleParamChange:v,resample:()=>x(r,i)}),T]})]}),q.jsx("div",{children:q.jsxs("p",{children:["Visit official Randlibjs npm page in ",q.jsx("a",{href:"https://www.npmjs.com/package/randlibjs",className:"library-link",children:"this link"}),"."]})})]}),q.jsx("footer",{className:"footer",children:q.jsx("div",{className:"text-center",children:q.jsxs("small",{className:"copyright",children:["Designed by ",q.jsx("a",{href:"https://pereradrian.github.io",target:"_blank",children:"Adri Mu"})]})})})]})};Mo.createRoot(document.getElementById("root")).render(q.jsx(H9.StrictMode,{children:q.jsx(Oc,{})}));
//# sourceMappingURL=index-BybJ7vAJ.js.map
