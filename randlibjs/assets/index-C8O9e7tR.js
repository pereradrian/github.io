var jl=Object.defineProperty;var Hl=(t,e,n)=>e in t?jl(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n;var $l=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports);var j9=(t,e,n)=>Hl(t,typeof e!="symbol"?e+"":e,n);var zv=$l((Lv,ta)=>{(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))i(o);new MutationObserver(o=>{for(const u of o)if(u.type==="childList")for(const a of u.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function n(o){const u={};return o.integrity&&(u.integrity=o.integrity),o.referrerPolicy&&(u.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?u.credentials="include":o.crossOrigin==="anonymous"?u.credentials="omit":u.credentials="same-origin",u}function i(o){if(o.ep)return;o.ep=!0;const u=n(o);fetch(o.href,u)}})();function Vl(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}function Wl(t){if(t.__esModule)return t;var e=t.default;if(typeof e=="function"){var n=function i(){return this instanceof i?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};n.prototype=e.prototype}else n={};return Object.defineProperty(n,"__esModule",{value:!0}),Object.keys(t).forEach(function(i){var o=Object.getOwnPropertyDescriptor(t,i);Object.defineProperty(n,i,o.get?o:{enumerable:!0,get:function(){return t[i]}})}),n}var E8={exports:{}},e6={},C8={exports:{}},R9={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var wi;function Ul(){if(wi)return R9;wi=1;var t=Symbol.for("react.element"),e=Symbol.for("react.portal"),n=Symbol.for("react.fragment"),i=Symbol.for("react.strict_mode"),o=Symbol.for("react.profiler"),u=Symbol.for("react.provider"),a=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),h=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),p=Symbol.for("react.lazy"),m=Symbol.iterator;function D(O){return O===null||typeof O!="object"?null:(O=m&&O[m]||O["@@iterator"],typeof O=="function"?O:null)}var w={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},E=Object.assign,y={};function x(O,U,g9){this.props=O,this.context=U,this.refs=y,this.updater=g9||w}x.prototype.isReactComponent={},x.prototype.setState=function(O,U){if(typeof O!="object"&&typeof O!="function"&&O!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,O,U,"setState")},x.prototype.forceUpdate=function(O){this.updater.enqueueForceUpdate(this,O,"forceUpdate")};function C(){}C.prototype=x.prototype;function k(O,U,g9){this.props=O,this.context=U,this.refs=y,this.updater=g9||w}var A=k.prototype=new C;A.constructor=k,E(A,x.prototype),A.isPureReactComponent=!0;var B=Array.isArray,F=Object.prototype.hasOwnProperty,S={current:null},P={key:!0,ref:!0,__self:!0,__source:!0};function T(O,U,g9){var v9,E9={},_9=null,A9=null;if(U!=null)for(v9 in U.ref!==void 0&&(A9=U.ref),U.key!==void 0&&(_9=""+U.key),U)F.call(U,v9)&&!P.hasOwnProperty(v9)&&(E9[v9]=U[v9]);var O9=arguments.length-2;if(O9===1)E9.children=g9;else if(1<O9){for(var b9=Array(O9),z9=0;z9<O9;z9++)b9[z9]=arguments[z9+2];E9.children=b9}if(O&&O.defaultProps)for(v9 in O9=O.defaultProps,O9)E9[v9]===void 0&&(E9[v9]=O9[v9]);return{$$typeof:t,type:O,key:_9,ref:A9,props:E9,_owner:S.current}}function I(O,U){return{$$typeof:t,type:O.type,key:U,ref:O.ref,props:O.props,_owner:O._owner}}function H(O){return typeof O=="object"&&O!==null&&O.$$typeof===t}function W(O){var U={"=":"=0",":":"=2"};return"$"+O.replace(/[=:]/g,function(g9){return U[g9]})}var Z=/\/+/g;function f9(O,U){return typeof O=="object"&&O!==null&&O.key!=null?W(""+O.key):U.toString(36)}function o9(O,U,g9,v9,E9){var _9=typeof O;(_9==="undefined"||_9==="boolean")&&(O=null);var A9=!1;if(O===null)A9=!0;else switch(_9){case"string":case"number":A9=!0;break;case"object":switch(O.$$typeof){case t:case e:A9=!0}}if(A9)return A9=O,E9=E9(A9),O=v9===""?"."+f9(A9,0):v9,B(E9)?(g9="",O!=null&&(g9=O.replace(Z,"$&/")+"/"),o9(E9,U,g9,"",function(z9){return z9})):E9!=null&&(H(E9)&&(E9=I(E9,g9+(!E9.key||A9&&A9.key===E9.key?"":(""+E9.key).replace(Z,"$&/")+"/")+O)),U.push(E9)),1;if(A9=0,v9=v9===""?".":v9+":",B(O))for(var O9=0;O9<O.length;O9++){_9=O[O9];var b9=v9+f9(_9,O9);A9+=o9(_9,U,g9,b9,E9)}else if(b9=D(O),typeof b9=="function")for(O=b9.call(O),O9=0;!(_9=O.next()).done;)_9=_9.value,b9=v9+f9(_9,O9++),A9+=o9(_9,U,g9,b9,E9);else if(_9==="object")throw U=String(O),Error("Objects are not valid as a React child (found: "+(U==="[object Object]"?"object with keys {"+Object.keys(O).join(", ")+"}":U)+"). If you meant to render a collection of children, use an array instead.");return A9}function t9(O,U,g9){if(O==null)return O;var v9=[],E9=0;return o9(O,v9,"","",function(_9){return U.call(g9,_9,E9++)}),v9}function q(O){if(O._status===-1){var U=O._result;U=U(),U.then(function(g9){(O._status===0||O._status===-1)&&(O._status=1,O._result=g9)},function(g9){(O._status===0||O._status===-1)&&(O._status=2,O._result=g9)}),O._status===-1&&(O._status=0,O._result=U)}if(O._status===1)return O._result.default;throw O._result}var l9={current:null},Y={transition:null},G={ReactCurrentDispatcher:l9,ReactCurrentBatchConfig:Y,ReactCurrentOwner:S};function X(){throw Error("act(...) is not supported in production builds of React.")}return R9.Children={map:t9,forEach:function(O,U,g9){t9(O,function(){U.apply(this,arguments)},g9)},count:function(O){var U=0;return t9(O,function(){U++}),U},toArray:function(O){return t9(O,function(U){return U})||[]},only:function(O){if(!H(O))throw Error("React.Children.only expected to receive a single React element child.");return O}},R9.Component=x,R9.Fragment=n,R9.Profiler=o,R9.PureComponent=k,R9.StrictMode=i,R9.Suspense=h,R9.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=G,R9.act=X,R9.cloneElement=function(O,U,g9){if(O==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+O+".");var v9=E({},O.props),E9=O.key,_9=O.ref,A9=O._owner;if(U!=null){if(U.ref!==void 0&&(_9=U.ref,A9=S.current),U.key!==void 0&&(E9=""+U.key),O.type&&O.type.defaultProps)var O9=O.type.defaultProps;for(b9 in U)F.call(U,b9)&&!P.hasOwnProperty(b9)&&(v9[b9]=U[b9]===void 0&&O9!==void 0?O9[b9]:U[b9])}var b9=arguments.length-2;if(b9===1)v9.children=g9;else if(1<b9){O9=Array(b9);for(var z9=0;z9<b9;z9++)O9[z9]=arguments[z9+2];v9.children=O9}return{$$typeof:t,type:O.type,key:E9,ref:_9,props:v9,_owner:A9}},R9.createContext=function(O){return O={$$typeof:a,_currentValue:O,_currentValue2:O,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},O.Provider={$$typeof:u,_context:O},O.Consumer=O},R9.createElement=T,R9.createFactory=function(O){var U=T.bind(null,O);return U.type=O,U},R9.createRef=function(){return{current:null}},R9.forwardRef=function(O){return{$$typeof:c,render:O}},R9.isValidElement=H,R9.lazy=function(O){return{$$typeof:p,_payload:{_status:-1,_result:O},_init:q}},R9.memo=function(O,U){return{$$typeof:d,type:O,compare:U===void 0?null:U}},R9.startTransition=function(O){var U=Y.transition;Y.transition={};try{O()}finally{Y.transition=U}},R9.unstable_act=X,R9.useCallback=function(O,U){return l9.current.useCallback(O,U)},R9.useContext=function(O){return l9.current.useContext(O)},R9.useDebugValue=function(){},R9.useDeferredValue=function(O){return l9.current.useDeferredValue(O)},R9.useEffect=function(O,U){return l9.current.useEffect(O,U)},R9.useId=function(){return l9.current.useId()},R9.useImperativeHandle=function(O,U,g9){return l9.current.useImperativeHandle(O,U,g9)},R9.useInsertionEffect=function(O,U){return l9.current.useInsertionEffect(O,U)},R9.useLayoutEffect=function(O,U){return l9.current.useLayoutEffect(O,U)},R9.useMemo=function(O,U){return l9.current.useMemo(O,U)},R9.useReducer=function(O,U,g9){return l9.current.useReducer(O,U,g9)},R9.useRef=function(O){return l9.current.useRef(O)},R9.useState=function(O){return l9.current.useState(O)},R9.useSyncExternalStore=function(O,U,g9){return l9.current.useSyncExternalStore(O,U,g9)},R9.useTransition=function(){return l9.current.useTransition()},R9.version="18.3.1",R9}var _i;function Et(){return _i||(_i=1,C8.exports=Ul()),C8.exports}/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var xi;function ql(){if(xi)return e6;xi=1;var t=Et(),e=Symbol.for("react.element"),n=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,o=t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,u={key:!0,ref:!0,__self:!0,__source:!0};function a(c,h,d){var p,m={},D=null,w=null;d!==void 0&&(D=""+d),h.key!==void 0&&(D=""+h.key),h.ref!==void 0&&(w=h.ref);for(p in h)i.call(h,p)&&!u.hasOwnProperty(p)&&(m[p]=h[p]);if(c&&c.defaultProps)for(p in h=c.defaultProps,h)m[p]===void 0&&(m[p]=h[p]);return{$$typeof:e,type:c,key:D,ref:w,props:m,_owner:o.current}}return e6.Fragment=n,e6.jsx=a,e6.jsxs=a,e6}var Ei;function Yl(){return Ei||(Ei=1,E8.exports=ql()),E8.exports}var D9=Yl(),Z0=Et();const bo=Vl(Z0);var j7={},F8={exports:{}},r1={},S8={exports:{}},A8={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Ci;function Kl(){return Ci||(Ci=1,function(t){function e(Y,G){var X=Y.length;Y.push(G);e:for(;0<X;){var O=X-1>>>1,U=Y[O];if(0<o(U,G))Y[O]=G,Y[X]=U,X=O;else break e}}function n(Y){return Y.length===0?null:Y[0]}function i(Y){if(Y.length===0)return null;var G=Y[0],X=Y.pop();if(X!==G){Y[0]=X;e:for(var O=0,U=Y.length,g9=U>>>1;O<g9;){var v9=2*(O+1)-1,E9=Y[v9],_9=v9+1,A9=Y[_9];if(0>o(E9,X))_9<U&&0>o(A9,E9)?(Y[O]=A9,Y[_9]=X,O=_9):(Y[O]=E9,Y[v9]=X,O=v9);else if(_9<U&&0>o(A9,X))Y[O]=A9,Y[_9]=X,O=_9;else break e}}return G}function o(Y,G){var X=Y.sortIndex-G.sortIndex;return X!==0?X:Y.id-G.id}if(typeof performance=="object"&&typeof performance.now=="function"){var u=performance;t.unstable_now=function(){return u.now()}}else{var a=Date,c=a.now();t.unstable_now=function(){return a.now()-c}}var h=[],d=[],p=1,m=null,D=3,w=!1,E=!1,y=!1,x=typeof setTimeout=="function"?setTimeout:null,C=typeof clearTimeout=="function"?clearTimeout:null,k=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function A(Y){for(var G=n(d);G!==null;){if(G.callback===null)i(d);else if(G.startTime<=Y)i(d),G.sortIndex=G.expirationTime,e(h,G);else break;G=n(d)}}function B(Y){if(y=!1,A(Y),!E)if(n(h)!==null)E=!0,q(F);else{var G=n(d);G!==null&&l9(B,G.startTime-Y)}}function F(Y,G){E=!1,y&&(y=!1,C(T),T=-1),w=!0;var X=D;try{for(A(G),m=n(h);m!==null&&(!(m.expirationTime>G)||Y&&!W());){var O=m.callback;if(typeof O=="function"){m.callback=null,D=m.priorityLevel;var U=O(m.expirationTime<=G);G=t.unstable_now(),typeof U=="function"?m.callback=U:m===n(h)&&i(h),A(G)}else i(h);m=n(h)}if(m!==null)var g9=!0;else{var v9=n(d);v9!==null&&l9(B,v9.startTime-G),g9=!1}return g9}finally{m=null,D=X,w=!1}}var S=!1,P=null,T=-1,I=5,H=-1;function W(){return!(t.unstable_now()-H<I)}function Z(){if(P!==null){var Y=t.unstable_now();H=Y;var G=!0;try{G=P(!0,Y)}finally{G?f9():(S=!1,P=null)}}else S=!1}var f9;if(typeof k=="function")f9=function(){k(Z)};else if(typeof MessageChannel<"u"){var o9=new MessageChannel,t9=o9.port2;o9.port1.onmessage=Z,f9=function(){t9.postMessage(null)}}else f9=function(){x(Z,0)};function q(Y){P=Y,S||(S=!0,f9())}function l9(Y,G){T=x(function(){Y(t.unstable_now())},G)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(Y){Y.callback=null},t.unstable_continueExecution=function(){E||w||(E=!0,q(F))},t.unstable_forceFrameRate=function(Y){0>Y||125<Y?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):I=0<Y?Math.floor(1e3/Y):5},t.unstable_getCurrentPriorityLevel=function(){return D},t.unstable_getFirstCallbackNode=function(){return n(h)},t.unstable_next=function(Y){switch(D){case 1:case 2:case 3:var G=3;break;default:G=D}var X=D;D=G;try{return Y()}finally{D=X}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(Y,G){switch(Y){case 1:case 2:case 3:case 4:case 5:break;default:Y=3}var X=D;D=Y;try{return G()}finally{D=X}},t.unstable_scheduleCallback=function(Y,G,X){var O=t.unstable_now();switch(typeof X=="object"&&X!==null?(X=X.delay,X=typeof X=="number"&&0<X?O+X:O):X=O,Y){case 1:var U=-1;break;case 2:U=250;break;case 5:U=1073741823;break;case 4:U=1e4;break;default:U=5e3}return U=X+U,Y={id:p++,callback:G,priorityLevel:Y,startTime:X,expirationTime:U,sortIndex:-1},X>O?(Y.sortIndex=X,e(d,Y),n(h)===null&&Y===n(d)&&(y?(C(T),T=-1):y=!0,l9(B,X-O))):(Y.sortIndex=U,e(h,Y),E||w||(E=!0,q(F))),Y},t.unstable_shouldYield=W,t.unstable_wrapCallback=function(Y){var G=D;return function(){var X=D;D=G;try{return Y.apply(this,arguments)}finally{D=X}}}}(A8)),A8}var Fi;function Xl(){return Fi||(Fi=1,S8.exports=Kl()),S8.exports}/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Si;function Ql(){if(Si)return r1;Si=1;var t=Et(),e=Xl();function n(r){for(var s="https://reactjs.org/docs/error-decoder.html?invariant="+r,l=1;l<arguments.length;l++)s+="&args[]="+encodeURIComponent(arguments[l]);return"Minified React error #"+r+"; visit "+s+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var i=new Set,o={};function u(r,s){a(r,s),a(r+"Capture",s)}function a(r,s){for(o[r]=s,r=0;r<s.length;r++)i.add(s[r])}var c=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),h=Object.prototype.hasOwnProperty,d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},m={};function D(r){return h.call(m,r)?!0:h.call(p,r)?!1:d.test(r)?m[r]=!0:(p[r]=!0,!1)}function w(r,s,l,f){if(l!==null&&l.type===0)return!1;switch(typeof s){case"function":case"symbol":return!0;case"boolean":return f?!1:l!==null?!l.acceptsBooleans:(r=r.toLowerCase().slice(0,5),r!=="data-"&&r!=="aria-");default:return!1}}function E(r,s,l,f){if(s===null||typeof s>"u"||w(r,s,l,f))return!0;if(f)return!1;if(l!==null)switch(l.type){case 3:return!s;case 4:return s===!1;case 5:return isNaN(s);case 6:return isNaN(s)||1>s}return!1}function y(r,s,l,f,g,v,_){this.acceptsBooleans=s===2||s===3||s===4,this.attributeName=f,this.attributeNamespace=g,this.mustUseProperty=l,this.propertyName=r,this.type=s,this.sanitizeURL=v,this.removeEmptyString=_}var x={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(r){x[r]=new y(r,0,!1,r,null,!1,!1)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(r){var s=r[0];x[s]=new y(s,1,!1,r[1],null,!1,!1)}),["contentEditable","draggable","spellCheck","value"].forEach(function(r){x[r]=new y(r,2,!1,r.toLowerCase(),null,!1,!1)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(r){x[r]=new y(r,2,!1,r,null,!1,!1)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(r){x[r]=new y(r,3,!1,r.toLowerCase(),null,!1,!1)}),["checked","multiple","muted","selected"].forEach(function(r){x[r]=new y(r,3,!0,r,null,!1,!1)}),["capture","download"].forEach(function(r){x[r]=new y(r,4,!1,r,null,!1,!1)}),["cols","rows","size","span"].forEach(function(r){x[r]=new y(r,6,!1,r,null,!1,!1)}),["rowSpan","start"].forEach(function(r){x[r]=new y(r,5,!1,r.toLowerCase(),null,!1,!1)});var C=/[\-:]([a-z])/g;function k(r){return r[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(r){var s=r.replace(C,k);x[s]=new y(s,1,!1,r,null,!1,!1)}),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(r){var s=r.replace(C,k);x[s]=new y(s,1,!1,r,"http://www.w3.org/1999/xlink",!1,!1)}),["xml:base","xml:lang","xml:space"].forEach(function(r){var s=r.replace(C,k);x[s]=new y(s,1,!1,r,"http://www.w3.org/XML/1998/namespace",!1,!1)}),["tabIndex","crossOrigin"].forEach(function(r){x[r]=new y(r,1,!1,r.toLowerCase(),null,!1,!1)}),x.xlinkHref=new y("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach(function(r){x[r]=new y(r,1,!1,r.toLowerCase(),null,!0,!0)});function A(r,s,l,f){var g=x.hasOwnProperty(s)?x[s]:null;(g!==null?g.type!==0:f||!(2<s.length)||s[0]!=="o"&&s[0]!=="O"||s[1]!=="n"&&s[1]!=="N")&&(E(s,l,g,f)&&(l=null),f||g===null?D(s)&&(l===null?r.removeAttribute(s):r.setAttribute(s,""+l)):g.mustUseProperty?r[g.propertyName]=l===null?g.type===3?!1:"":l:(s=g.attributeName,f=g.attributeNamespace,l===null?r.removeAttribute(s):(g=g.type,l=g===3||g===4&&l===!0?"":""+l,f?r.setAttributeNS(f,s,l):r.setAttribute(s,l))))}var B=t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,F=Symbol.for("react.element"),S=Symbol.for("react.portal"),P=Symbol.for("react.fragment"),T=Symbol.for("react.strict_mode"),I=Symbol.for("react.profiler"),H=Symbol.for("react.provider"),W=Symbol.for("react.context"),Z=Symbol.for("react.forward_ref"),f9=Symbol.for("react.suspense"),o9=Symbol.for("react.suspense_list"),t9=Symbol.for("react.memo"),q=Symbol.for("react.lazy"),l9=Symbol.for("react.offscreen"),Y=Symbol.iterator;function G(r){return r===null||typeof r!="object"?null:(r=Y&&r[Y]||r["@@iterator"],typeof r=="function"?r:null)}var X=Object.assign,O;function U(r){if(O===void 0)try{throw Error()}catch(l){var s=l.stack.trim().match(/\n( *(at )?)/);O=s&&s[1]||""}return`
`+O+r}var g9=!1;function v9(r,s){if(!r||g9)return"";g9=!0;var l=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(s)if(s=function(){throw Error()},Object.defineProperty(s.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(s,[])}catch($){var f=$}Reflect.construct(r,[],s)}else{try{s.call()}catch($){f=$}r.call(s.prototype)}else{try{throw Error()}catch($){f=$}r()}}catch($){if($&&f&&typeof $.stack=="string"){for(var g=$.stack.split(`
`),v=f.stack.split(`
`),_=g.length-1,M=v.length-1;1<=_&&0<=M&&g[_]!==v[M];)M--;for(;1<=_&&0<=M;_--,M--)if(g[_]!==v[M]){if(_!==1||M!==1)do if(_--,M--,0>M||g[_]!==v[M]){var N=`
`+g[_].replace(" at new "," at ");return r.displayName&&N.includes("<anonymous>")&&(N=N.replace("<anonymous>",r.displayName)),N}while(1<=_&&0<=M);break}}}finally{g9=!1,Error.prepareStackTrace=l}return(r=r?r.displayName||r.name:"")?U(r):""}function E9(r){switch(r.tag){case 5:return U(r.type);case 16:return U("Lazy");case 13:return U("Suspense");case 19:return U("SuspenseList");case 0:case 2:case 15:return r=v9(r.type,!1),r;case 11:return r=v9(r.type.render,!1),r;case 1:return r=v9(r.type,!0),r;default:return""}}function _9(r){if(r==null)return null;if(typeof r=="function")return r.displayName||r.name||null;if(typeof r=="string")return r;switch(r){case P:return"Fragment";case S:return"Portal";case I:return"Profiler";case T:return"StrictMode";case f9:return"Suspense";case o9:return"SuspenseList"}if(typeof r=="object")switch(r.$$typeof){case W:return(r.displayName||"Context")+".Consumer";case H:return(r._context.displayName||"Context")+".Provider";case Z:var s=r.render;return r=r.displayName,r||(r=s.displayName||s.name||"",r=r!==""?"ForwardRef("+r+")":"ForwardRef"),r;case t9:return s=r.displayName||null,s!==null?s:_9(r.type)||"Memo";case q:s=r._payload,r=r._init;try{return _9(r(s))}catch{}}return null}function A9(r){var s=r.type;switch(r.tag){case 24:return"Cache";case 9:return(s.displayName||"Context")+".Consumer";case 10:return(s._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return r=s.render,r=r.displayName||r.name||"",s.displayName||(r!==""?"ForwardRef("+r+")":"ForwardRef");case 7:return"Fragment";case 5:return s;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return _9(s);case 8:return s===T?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof s=="function")return s.displayName||s.name||null;if(typeof s=="string")return s}return null}function O9(r){switch(typeof r){case"boolean":case"number":case"string":case"undefined":return r;case"object":return r;default:return""}}function b9(r){var s=r.type;return(r=r.nodeName)&&r.toLowerCase()==="input"&&(s==="checkbox"||s==="radio")}function z9(r){var s=b9(r)?"checked":"value",l=Object.getOwnPropertyDescriptor(r.constructor.prototype,s),f=""+r[s];if(!r.hasOwnProperty(s)&&typeof l<"u"&&typeof l.get=="function"&&typeof l.set=="function"){var g=l.get,v=l.set;return Object.defineProperty(r,s,{configurable:!0,get:function(){return g.call(this)},set:function(_){f=""+_,v.call(this,_)}}),Object.defineProperty(r,s,{enumerable:l.enumerable}),{getValue:function(){return f},setValue:function(_){f=""+_},stopTracking:function(){r._valueTracker=null,delete r[s]}}}}function k0(r){r._valueTracker||(r._valueTracker=z9(r))}function p0(r){if(!r)return!1;var s=r._valueTracker;if(!s)return!0;var l=s.getValue(),f="";return r&&(f=b9(r)?r.checked?"true":"false":r.value),r=f,r!==l?(s.setValue(r),!0):!1}function H9(r){if(r=r||(typeof document<"u"?document:void 0),typeof r>"u")return null;try{return r.activeElement||r.body}catch{return r.body}}function a0(r,s){var l=s.checked;return X({},s,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:l??r._wrapperState.initialChecked})}function q0(r,s){var l=s.defaultValue==null?"":s.defaultValue,f=s.checked!=null?s.checked:s.defaultChecked;l=O9(s.value!=null?s.value:l),r._wrapperState={initialChecked:f,initialValue:l,controlled:s.type==="checkbox"||s.type==="radio"?s.checked!=null:s.value!=null}}function g1(r,s){s=s.checked,s!=null&&A(r,"checked",s,!1)}function c1(r,s){g1(r,s);var l=O9(s.value),f=s.type;if(l!=null)f==="number"?(l===0&&r.value===""||r.value!=l)&&(r.value=""+l):r.value!==""+l&&(r.value=""+l);else if(f==="submit"||f==="reset"){r.removeAttribute("value");return}s.hasOwnProperty("value")?W1(r,s.type,l):s.hasOwnProperty("defaultValue")&&W1(r,s.type,O9(s.defaultValue)),s.checked==null&&s.defaultChecked!=null&&(r.defaultChecked=!!s.defaultChecked)}function n5(r,s,l){if(s.hasOwnProperty("value")||s.hasOwnProperty("defaultValue")){var f=s.type;if(!(f!=="submit"&&f!=="reset"||s.value!==void 0&&s.value!==null))return;s=""+r._wrapperState.initialValue,l||s===r.value||(r.value=s),r.defaultValue=s}l=r.name,l!==""&&(r.name=""),r.defaultChecked=!!r._wrapperState.initialChecked,l!==""&&(r.name=l)}function W1(r,s,l){(s!=="number"||H9(r.ownerDocument)!==r)&&(l==null?r.defaultValue=""+r._wrapperState.initialValue:r.defaultValue!==""+l&&(r.defaultValue=""+l))}var r5=Array.isArray;function w5(r,s,l,f){if(r=r.options,s){s={};for(var g=0;g<l.length;g++)s["$"+l[g]]=!0;for(l=0;l<r.length;l++)g=s.hasOwnProperty("$"+r[l].value),r[l].selected!==g&&(r[l].selected=g),g&&f&&(r[l].defaultSelected=!0)}else{for(l=""+O9(l),s=null,g=0;g<r.length;g++){if(r[g].value===l){r[g].selected=!0,f&&(r[g].defaultSelected=!0);return}s!==null||r[g].disabled||(s=r[g])}s!==null&&(s.selected=!0)}}function k2(r,s){if(s.dangerouslySetInnerHTML!=null)throw Error(n(91));return X({},s,{value:void 0,defaultValue:void 0,children:""+r._wrapperState.initialValue})}function b(r,s){var l=s.value;if(l==null){if(l=s.children,s=s.defaultValue,l!=null){if(s!=null)throw Error(n(92));if(r5(l)){if(1<l.length)throw Error(n(93));l=l[0]}s=l}s==null&&(s=""),l=s}r._wrapperState={initialValue:O9(l)}}function R(r,s){var l=O9(s.value),f=O9(s.defaultValue);l!=null&&(l=""+l,l!==r.value&&(r.value=l),s.defaultValue==null&&r.defaultValue!==l&&(r.defaultValue=l)),f!=null&&(r.defaultValue=""+f)}function V(r){var s=r.textContent;s===r._wrapperState.initialValue&&s!==""&&s!==null&&(r.value=s)}function Q(r){switch(r){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function n9(r,s){return r==null||r==="http://www.w3.org/1999/xhtml"?Q(s):r==="http://www.w3.org/2000/svg"&&s==="foreignObject"?"http://www.w3.org/1999/xhtml":r}var J,p9=function(r){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(s,l,f,g){MSApp.execUnsafeLocalFunction(function(){return r(s,l,f,g)})}:r}(function(r,s){if(r.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in r)r.innerHTML=s;else{for(J=J||document.createElement("div"),J.innerHTML="<svg>"+s.valueOf().toString()+"</svg>",s=J.firstChild;r.firstChild;)r.removeChild(r.firstChild);for(;s.firstChild;)r.appendChild(s.firstChild)}});function u9(r,s){if(s){var l=r.firstChild;if(l&&l===r.lastChild&&l.nodeType===3){l.nodeValue=s;return}}r.textContent=s}var h9={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},a9=["Webkit","ms","Moz","O"];Object.keys(h9).forEach(function(r){a9.forEach(function(s){s=s+r.charAt(0).toUpperCase()+r.substring(1),h9[s]=h9[r]})});function W9(r,s,l){return s==null||typeof s=="boolean"||s===""?"":l||typeof s!="number"||s===0||h9.hasOwnProperty(r)&&h9[r]?(""+s).trim():s+"px"}function U9(r,s){r=r.style;for(var l in s)if(s.hasOwnProperty(l)){var f=l.indexOf("--")===0,g=W9(l,s[l],f);l==="float"&&(l="cssFloat"),f?r.setProperty(l,g):r[l]=g}}var l0=X({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function x0(r,s){if(s){if(l0[r]&&(s.children!=null||s.dangerouslySetInnerHTML!=null))throw Error(n(137,r));if(s.dangerouslySetInnerHTML!=null){if(s.children!=null)throw Error(n(60));if(typeof s.dangerouslySetInnerHTML!="object"||!("__html"in s.dangerouslySetInnerHTML))throw Error(n(61))}if(s.style!=null&&typeof s.style!="object")throw Error(n(62))}}function v0(r,s){if(r.indexOf("-")===-1)return typeof s.is=="string";switch(r){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Y0=null;function K0(r){return r=r.target||r.srcElement||window,r.correspondingUseElement&&(r=r.correspondingUseElement),r.nodeType===3?r.parentNode:r}var U1=null,k1=null,_5=null;function C6(r){if(r=L3(r)){if(typeof U1!="function")throw Error(n(280));var s=r.stateNode;s&&(s=t7(s),U1(r.stateNode,r.type,s))}}function F6(r){k1?_5?_5.push(r):_5=[r]:k1=r}function S6(){if(k1){var r=k1,s=_5;if(_5=k1=null,C6(r),s)for(r=0;r<s.length;r++)C6(s[r])}}function A6(r,s){return r(s)}function b6(){}var v3=!1;function M6(r,s,l){if(v3)return r(s,l);v3=!0;try{return A6(r,s,l)}finally{v3=!1,(k1!==null||_5!==null)&&(b6(),S6())}}function t2(r,s){var l=r.stateNode;if(l===null)return null;var f=t7(l);if(f===null)return null;l=f[s];e:switch(s){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(f=!f.disabled)||(r=r.type,f=!(r==="button"||r==="input"||r==="select"||r==="textarea")),r=!f;break e;default:r=!1}if(r)return null;if(l&&typeof l!="function")throw Error(n(231,s,typeof l));return l}var y3=!1;if(c)try{var n2={};Object.defineProperty(n2,"passive",{get:function(){y3=!0}}),window.addEventListener("test",n2,n2),window.removeEventListener("test",n2,n2)}catch{y3=!1}function I4(r,s,l,f,g,v,_,M,N){var $=Array.prototype.slice.call(arguments,3);try{s.apply(l,$)}catch(i9){this.onError(i9)}}var r2=!1,B2=null,N2=!1,D3=null,R4={onError:function(r){r2=!0,B2=r}};function L4(r,s,l,f,g,v,_,M,N){r2=!1,B2=null,I4.apply(R4,arguments)}function j4(r,s,l,f,g,v,_,M,N){if(L4.apply(this,arguments),r2){if(r2){var $=B2;r2=!1,B2=null}else throw Error(n(198));N2||(N2=!0,D3=$)}}function i5(r){var s=r,l=r;if(r.alternate)for(;s.return;)s=s.return;else{r=s;do s=r,s.flags&4098&&(l=s.return),r=s.return;while(r)}return s.tag===3?l:null}function k6(r){if(r.tag===13){var s=r.memoizedState;if(s===null&&(r=r.alternate,r!==null&&(s=r.memoizedState)),s!==null)return s.dehydrated}return null}function B6(r){if(i5(r)!==r)throw Error(n(188))}function H4(r){var s=r.alternate;if(!s){if(s=i5(r),s===null)throw Error(n(188));return s!==r?null:r}for(var l=r,f=s;;){var g=l.return;if(g===null)break;var v=g.alternate;if(v===null){if(f=g.return,f!==null){l=f;continue}break}if(g.child===v.child){for(v=g.child;v;){if(v===l)return B6(g),r;if(v===f)return B6(g),s;v=v.sibling}throw Error(n(188))}if(l.return!==f.return)l=g,f=v;else{for(var _=!1,M=g.child;M;){if(M===l){_=!0,l=g,f=v;break}if(M===f){_=!0,f=g,l=v;break}M=M.sibling}if(!_){for(M=v.child;M;){if(M===l){_=!0,l=v,f=g;break}if(M===f){_=!0,f=v,l=g;break}M=M.sibling}if(!_)throw Error(n(189))}}if(l.alternate!==f)throw Error(n(190))}if(l.tag!==3)throw Error(n(188));return l.stateNode.current===l?r:s}function N6(r){return r=H4(r),r!==null?T6(r):null}function T6(r){if(r.tag===5||r.tag===6)return r;for(r=r.child;r!==null;){var s=T6(r);if(s!==null)return s;r=r.sibling}return null}var P6=e.unstable_scheduleCallback,O6=e.unstable_cancelCallback,$4=e.unstable_shouldYield,i2=e.unstable_requestPaint,B9=e.unstable_now,O0=e.unstable_getCurrentPriorityLevel,w3=e.unstable_ImmediatePriority,s2=e.unstable_UserBlockingPriority,q1=e.unstable_NormalPriority,V4=e.unstable_LowPriority,Xt=e.unstable_IdlePriority,z6=null,Y1=null;function na(r){if(Y1&&typeof Y1.onCommitFiberRoot=="function")try{Y1.onCommitFiberRoot(z6,r,void 0,(r.current.flags&128)===128)}catch{}}var B1=Math.clz32?Math.clz32:sa,ra=Math.log,ia=Math.LN2;function sa(r){return r>>>=0,r===0?32:31-(ra(r)/ia|0)|0}var I6=64,R6=4194304;function _3(r){switch(r&-r){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return r&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return r&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return r}}function L6(r,s){var l=r.pendingLanes;if(l===0)return 0;var f=0,g=r.suspendedLanes,v=r.pingedLanes,_=l&268435455;if(_!==0){var M=_&~g;M!==0?f=_3(M):(v&=_,v!==0&&(f=_3(v)))}else _=l&~g,_!==0?f=_3(_):v!==0&&(f=_3(v));if(f===0)return 0;if(s!==0&&s!==f&&!(s&g)&&(g=f&-f,v=s&-s,g>=v||g===16&&(v&4194240)!==0))return s;if(f&4&&(f|=l&16),s=r.entangledLanes,s!==0)for(r=r.entanglements,s&=f;0<s;)l=31-B1(s),g=1<<l,f|=r[l],s&=~g;return f}function oa(r,s){switch(r){case 1:case 2:case 4:return s+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return s+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function ua(r,s){for(var l=r.suspendedLanes,f=r.pingedLanes,g=r.expirationTimes,v=r.pendingLanes;0<v;){var _=31-B1(v),M=1<<_,N=g[_];N===-1?(!(M&l)||M&f)&&(g[_]=oa(M,s)):N<=s&&(r.expiredLanes|=M),v&=~M}}function W4(r){return r=r.pendingLanes&-1073741825,r!==0?r:r&1073741824?1073741824:0}function Qt(){var r=I6;return I6<<=1,!(I6&4194240)&&(I6=64),r}function U4(r){for(var s=[],l=0;31>l;l++)s.push(r);return s}function x3(r,s,l){r.pendingLanes|=s,s!==536870912&&(r.suspendedLanes=0,r.pingedLanes=0),r=r.eventTimes,s=31-B1(s),r[s]=l}function aa(r,s){var l=r.pendingLanes&~s;r.pendingLanes=s,r.suspendedLanes=0,r.pingedLanes=0,r.expiredLanes&=s,r.mutableReadLanes&=s,r.entangledLanes&=s,s=r.entanglements;var f=r.eventTimes;for(r=r.expirationTimes;0<l;){var g=31-B1(l),v=1<<g;s[g]=0,f[g]=-1,r[g]=-1,l&=~v}}function q4(r,s){var l=r.entangledLanes|=s;for(r=r.entanglements;l;){var f=31-B1(l),g=1<<f;g&s|r[f]&s&&(r[f]|=s),l&=~g}}var q9=0;function Zt(r){return r&=-r,1<r?4<r?r&268435455?16:536870912:4:1}var Gt,Y4,Jt,en,tn,K4=!1,j6=[],x5=null,E5=null,C5=null,E3=new Map,C3=new Map,F5=[],la="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function nn(r,s){switch(r){case"focusin":case"focusout":x5=null;break;case"dragenter":case"dragleave":E5=null;break;case"mouseover":case"mouseout":C5=null;break;case"pointerover":case"pointerout":E3.delete(s.pointerId);break;case"gotpointercapture":case"lostpointercapture":C3.delete(s.pointerId)}}function F3(r,s,l,f,g,v){return r===null||r.nativeEvent!==v?(r={blockedOn:s,domEventName:l,eventSystemFlags:f,nativeEvent:v,targetContainers:[g]},s!==null&&(s=L3(s),s!==null&&Y4(s)),r):(r.eventSystemFlags|=f,s=r.targetContainers,g!==null&&s.indexOf(g)===-1&&s.push(g),r)}function ca(r,s,l,f,g){switch(s){case"focusin":return x5=F3(x5,r,s,l,f,g),!0;case"dragenter":return E5=F3(E5,r,s,l,f,g),!0;case"mouseover":return C5=F3(C5,r,s,l,f,g),!0;case"pointerover":var v=g.pointerId;return E3.set(v,F3(E3.get(v)||null,r,s,l,f,g)),!0;case"gotpointercapture":return v=g.pointerId,C3.set(v,F3(C3.get(v)||null,r,s,l,f,g)),!0}return!1}function rn(r){var s=o2(r.target);if(s!==null){var l=i5(s);if(l!==null){if(s=l.tag,s===13){if(s=k6(l),s!==null){r.blockedOn=s,tn(r.priority,function(){Jt(l)});return}}else if(s===3&&l.stateNode.current.memoizedState.isDehydrated){r.blockedOn=l.tag===3?l.stateNode.containerInfo:null;return}}}r.blockedOn=null}function H6(r){if(r.blockedOn!==null)return!1;for(var s=r.targetContainers;0<s.length;){var l=Q4(r.domEventName,r.eventSystemFlags,s[0],r.nativeEvent);if(l===null){l=r.nativeEvent;var f=new l.constructor(l.type,l);Y0=f,l.target.dispatchEvent(f),Y0=null}else return s=L3(l),s!==null&&Y4(s),r.blockedOn=l,!1;s.shift()}return!0}function sn(r,s,l){H6(r)&&l.delete(s)}function fa(){K4=!1,x5!==null&&H6(x5)&&(x5=null),E5!==null&&H6(E5)&&(E5=null),C5!==null&&H6(C5)&&(C5=null),E3.forEach(sn),C3.forEach(sn)}function S3(r,s){r.blockedOn===s&&(r.blockedOn=null,K4||(K4=!0,e.unstable_scheduleCallback(e.unstable_NormalPriority,fa)))}function A3(r){function s(g){return S3(g,r)}if(0<j6.length){S3(j6[0],r);for(var l=1;l<j6.length;l++){var f=j6[l];f.blockedOn===r&&(f.blockedOn=null)}}for(x5!==null&&S3(x5,r),E5!==null&&S3(E5,r),C5!==null&&S3(C5,r),E3.forEach(s),C3.forEach(s),l=0;l<F5.length;l++)f=F5[l],f.blockedOn===r&&(f.blockedOn=null);for(;0<F5.length&&(l=F5[0],l.blockedOn===null);)rn(l),l.blockedOn===null&&F5.shift()}var T2=B.ReactCurrentBatchConfig,$6=!0;function ha(r,s,l,f){var g=q9,v=T2.transition;T2.transition=null;try{q9=1,X4(r,s,l,f)}finally{q9=g,T2.transition=v}}function da(r,s,l,f){var g=q9,v=T2.transition;T2.transition=null;try{q9=4,X4(r,s,l,f)}finally{q9=g,T2.transition=v}}function X4(r,s,l,f){if($6){var g=Q4(r,s,l,f);if(g===null)de(r,s,f,V6,l),nn(r,f);else if(ca(g,r,s,l,f))f.stopPropagation();else if(nn(r,f),s&4&&-1<la.indexOf(r)){for(;g!==null;){var v=L3(g);if(v!==null&&Gt(v),v=Q4(r,s,l,f),v===null&&de(r,s,f,V6,l),v===g)break;g=v}g!==null&&f.stopPropagation()}else de(r,s,f,null,l)}}var V6=null;function Q4(r,s,l,f){if(V6=null,r=K0(f),r=o2(r),r!==null)if(s=i5(r),s===null)r=null;else if(l=s.tag,l===13){if(r=k6(s),r!==null)return r;r=null}else if(l===3){if(s.stateNode.current.memoizedState.isDehydrated)return s.tag===3?s.stateNode.containerInfo:null;r=null}else s!==r&&(r=null);return V6=r,null}function on(r){switch(r){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(O0()){case w3:return 1;case s2:return 4;case q1:case V4:return 16;case Xt:return 536870912;default:return 16}default:return 16}}var S5=null,Z4=null,W6=null;function un(){if(W6)return W6;var r,s=Z4,l=s.length,f,g="value"in S5?S5.value:S5.textContent,v=g.length;for(r=0;r<l&&s[r]===g[r];r++);var _=l-r;for(f=1;f<=_&&s[l-f]===g[v-f];f++);return W6=g.slice(r,1<f?1-f:void 0)}function U6(r){var s=r.keyCode;return"charCode"in r?(r=r.charCode,r===0&&s===13&&(r=13)):r=s,r===10&&(r=13),32<=r||r===13?r:0}function q6(){return!0}function an(){return!1}function f1(r){function s(l,f,g,v,_){this._reactName=l,this._targetInst=g,this.type=f,this.nativeEvent=v,this.target=_,this.currentTarget=null;for(var M in r)r.hasOwnProperty(M)&&(l=r[M],this[M]=l?l(v):v[M]);return this.isDefaultPrevented=(v.defaultPrevented!=null?v.defaultPrevented:v.returnValue===!1)?q6:an,this.isPropagationStopped=an,this}return X(s.prototype,{preventDefault:function(){this.defaultPrevented=!0;var l=this.nativeEvent;l&&(l.preventDefault?l.preventDefault():typeof l.returnValue!="unknown"&&(l.returnValue=!1),this.isDefaultPrevented=q6)},stopPropagation:function(){var l=this.nativeEvent;l&&(l.stopPropagation?l.stopPropagation():typeof l.cancelBubble!="unknown"&&(l.cancelBubble=!0),this.isPropagationStopped=q6)},persist:function(){},isPersistent:q6}),s}var P2={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(r){return r.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},G4=f1(P2),b3=X({},P2,{view:0,detail:0}),pa=f1(b3),J4,ee,M3,Y6=X({},b3,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:ne,button:0,buttons:0,relatedTarget:function(r){return r.relatedTarget===void 0?r.fromElement===r.srcElement?r.toElement:r.fromElement:r.relatedTarget},movementX:function(r){return"movementX"in r?r.movementX:(r!==M3&&(M3&&r.type==="mousemove"?(J4=r.screenX-M3.screenX,ee=r.screenY-M3.screenY):ee=J4=0,M3=r),J4)},movementY:function(r){return"movementY"in r?r.movementY:ee}}),ln=f1(Y6),ga=X({},Y6,{dataTransfer:0}),ma=f1(ga),va=X({},b3,{relatedTarget:0}),te=f1(va),ya=X({},P2,{animationName:0,elapsedTime:0,pseudoElement:0}),Da=f1(ya),wa=X({},P2,{clipboardData:function(r){return"clipboardData"in r?r.clipboardData:window.clipboardData}}),_a=f1(wa),xa=X({},P2,{data:0}),cn=f1(xa),Ea={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Ca={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Fa={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Sa(r){var s=this.nativeEvent;return s.getModifierState?s.getModifierState(r):(r=Fa[r])?!!s[r]:!1}function ne(){return Sa}var Aa=X({},b3,{key:function(r){if(r.key){var s=Ea[r.key]||r.key;if(s!=="Unidentified")return s}return r.type==="keypress"?(r=U6(r),r===13?"Enter":String.fromCharCode(r)):r.type==="keydown"||r.type==="keyup"?Ca[r.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:ne,charCode:function(r){return r.type==="keypress"?U6(r):0},keyCode:function(r){return r.type==="keydown"||r.type==="keyup"?r.keyCode:0},which:function(r){return r.type==="keypress"?U6(r):r.type==="keydown"||r.type==="keyup"?r.keyCode:0}}),ba=f1(Aa),Ma=X({},Y6,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),fn=f1(Ma),ka=X({},b3,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:ne}),Ba=f1(ka),Na=X({},P2,{propertyName:0,elapsedTime:0,pseudoElement:0}),Ta=f1(Na),Pa=X({},Y6,{deltaX:function(r){return"deltaX"in r?r.deltaX:"wheelDeltaX"in r?-r.wheelDeltaX:0},deltaY:function(r){return"deltaY"in r?r.deltaY:"wheelDeltaY"in r?-r.wheelDeltaY:"wheelDelta"in r?-r.wheelDelta:0},deltaZ:0,deltaMode:0}),Oa=f1(Pa),za=[9,13,27,32],re=c&&"CompositionEvent"in window,k3=null;c&&"documentMode"in document&&(k3=document.documentMode);var Ia=c&&"TextEvent"in window&&!k3,hn=c&&(!re||k3&&8<k3&&11>=k3),dn=" ",pn=!1;function gn(r,s){switch(r){case"keyup":return za.indexOf(s.keyCode)!==-1;case"keydown":return s.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function mn(r){return r=r.detail,typeof r=="object"&&"data"in r?r.data:null}var O2=!1;function Ra(r,s){switch(r){case"compositionend":return mn(s);case"keypress":return s.which!==32?null:(pn=!0,dn);case"textInput":return r=s.data,r===dn&&pn?null:r;default:return null}}function La(r,s){if(O2)return r==="compositionend"||!re&&gn(r,s)?(r=un(),W6=Z4=S5=null,O2=!1,r):null;switch(r){case"paste":return null;case"keypress":if(!(s.ctrlKey||s.altKey||s.metaKey)||s.ctrlKey&&s.altKey){if(s.char&&1<s.char.length)return s.char;if(s.which)return String.fromCharCode(s.which)}return null;case"compositionend":return hn&&s.locale!=="ko"?null:s.data;default:return null}}var ja={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function vn(r){var s=r&&r.nodeName&&r.nodeName.toLowerCase();return s==="input"?!!ja[r.type]:s==="textarea"}function yn(r,s,l,f){F6(f),s=G6(s,"onChange"),0<s.length&&(l=new G4("onChange","change",null,l,f),r.push({event:l,listeners:s}))}var B3=null,N3=null;function Ha(r){zn(r,0)}function K6(r){var s=j2(r);if(p0(s))return r}function $a(r,s){if(r==="change")return s}var Dn=!1;if(c){var ie;if(c){var se="oninput"in document;if(!se){var wn=document.createElement("div");wn.setAttribute("oninput","return;"),se=typeof wn.oninput=="function"}ie=se}else ie=!1;Dn=ie&&(!document.documentMode||9<document.documentMode)}function _n(){B3&&(B3.detachEvent("onpropertychange",xn),N3=B3=null)}function xn(r){if(r.propertyName==="value"&&K6(N3)){var s=[];yn(s,N3,r,K0(r)),M6(Ha,s)}}function Va(r,s,l){r==="focusin"?(_n(),B3=s,N3=l,B3.attachEvent("onpropertychange",xn)):r==="focusout"&&_n()}function Wa(r){if(r==="selectionchange"||r==="keyup"||r==="keydown")return K6(N3)}function Ua(r,s){if(r==="click")return K6(s)}function qa(r,s){if(r==="input"||r==="change")return K6(s)}function Ya(r,s){return r===s&&(r!==0||1/r===1/s)||r!==r&&s!==s}var N1=typeof Object.is=="function"?Object.is:Ya;function T3(r,s){if(N1(r,s))return!0;if(typeof r!="object"||r===null||typeof s!="object"||s===null)return!1;var l=Object.keys(r),f=Object.keys(s);if(l.length!==f.length)return!1;for(f=0;f<l.length;f++){var g=l[f];if(!h.call(s,g)||!N1(r[g],s[g]))return!1}return!0}function En(r){for(;r&&r.firstChild;)r=r.firstChild;return r}function Cn(r,s){var l=En(r);r=0;for(var f;l;){if(l.nodeType===3){if(f=r+l.textContent.length,r<=s&&f>=s)return{node:l,offset:s-r};r=f}e:{for(;l;){if(l.nextSibling){l=l.nextSibling;break e}l=l.parentNode}l=void 0}l=En(l)}}function Fn(r,s){return r&&s?r===s?!0:r&&r.nodeType===3?!1:s&&s.nodeType===3?Fn(r,s.parentNode):"contains"in r?r.contains(s):r.compareDocumentPosition?!!(r.compareDocumentPosition(s)&16):!1:!1}function Sn(){for(var r=window,s=H9();s instanceof r.HTMLIFrameElement;){try{var l=typeof s.contentWindow.location.href=="string"}catch{l=!1}if(l)r=s.contentWindow;else break;s=H9(r.document)}return s}function oe(r){var s=r&&r.nodeName&&r.nodeName.toLowerCase();return s&&(s==="input"&&(r.type==="text"||r.type==="search"||r.type==="tel"||r.type==="url"||r.type==="password")||s==="textarea"||r.contentEditable==="true")}function Ka(r){var s=Sn(),l=r.focusedElem,f=r.selectionRange;if(s!==l&&l&&l.ownerDocument&&Fn(l.ownerDocument.documentElement,l)){if(f!==null&&oe(l)){if(s=f.start,r=f.end,r===void 0&&(r=s),"selectionStart"in l)l.selectionStart=s,l.selectionEnd=Math.min(r,l.value.length);else if(r=(s=l.ownerDocument||document)&&s.defaultView||window,r.getSelection){r=r.getSelection();var g=l.textContent.length,v=Math.min(f.start,g);f=f.end===void 0?v:Math.min(f.end,g),!r.extend&&v>f&&(g=f,f=v,v=g),g=Cn(l,v);var _=Cn(l,f);g&&_&&(r.rangeCount!==1||r.anchorNode!==g.node||r.anchorOffset!==g.offset||r.focusNode!==_.node||r.focusOffset!==_.offset)&&(s=s.createRange(),s.setStart(g.node,g.offset),r.removeAllRanges(),v>f?(r.addRange(s),r.extend(_.node,_.offset)):(s.setEnd(_.node,_.offset),r.addRange(s)))}}for(s=[],r=l;r=r.parentNode;)r.nodeType===1&&s.push({element:r,left:r.scrollLeft,top:r.scrollTop});for(typeof l.focus=="function"&&l.focus(),l=0;l<s.length;l++)r=s[l],r.element.scrollLeft=r.left,r.element.scrollTop=r.top}}var Xa=c&&"documentMode"in document&&11>=document.documentMode,z2=null,ue=null,P3=null,ae=!1;function An(r,s,l){var f=l.window===l?l.document:l.nodeType===9?l:l.ownerDocument;ae||z2==null||z2!==H9(f)||(f=z2,"selectionStart"in f&&oe(f)?f={start:f.selectionStart,end:f.selectionEnd}:(f=(f.ownerDocument&&f.ownerDocument.defaultView||window).getSelection(),f={anchorNode:f.anchorNode,anchorOffset:f.anchorOffset,focusNode:f.focusNode,focusOffset:f.focusOffset}),P3&&T3(P3,f)||(P3=f,f=G6(ue,"onSelect"),0<f.length&&(s=new G4("onSelect","select",null,s,l),r.push({event:s,listeners:f}),s.target=z2)))}function X6(r,s){var l={};return l[r.toLowerCase()]=s.toLowerCase(),l["Webkit"+r]="webkit"+s,l["Moz"+r]="moz"+s,l}var I2={animationend:X6("Animation","AnimationEnd"),animationiteration:X6("Animation","AnimationIteration"),animationstart:X6("Animation","AnimationStart"),transitionend:X6("Transition","TransitionEnd")},le={},bn={};c&&(bn=document.createElement("div").style,"AnimationEvent"in window||(delete I2.animationend.animation,delete I2.animationiteration.animation,delete I2.animationstart.animation),"TransitionEvent"in window||delete I2.transitionend.transition);function Q6(r){if(le[r])return le[r];if(!I2[r])return r;var s=I2[r],l;for(l in s)if(s.hasOwnProperty(l)&&l in bn)return le[r]=s[l];return r}var Mn=Q6("animationend"),kn=Q6("animationiteration"),Bn=Q6("animationstart"),Nn=Q6("transitionend"),Tn=new Map,Pn="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function A5(r,s){Tn.set(r,s),u(s,[r])}for(var ce=0;ce<Pn.length;ce++){var fe=Pn[ce],Qa=fe.toLowerCase(),Za=fe[0].toUpperCase()+fe.slice(1);A5(Qa,"on"+Za)}A5(Mn,"onAnimationEnd"),A5(kn,"onAnimationIteration"),A5(Bn,"onAnimationStart"),A5("dblclick","onDoubleClick"),A5("focusin","onFocus"),A5("focusout","onBlur"),A5(Nn,"onTransitionEnd"),a("onMouseEnter",["mouseout","mouseover"]),a("onMouseLeave",["mouseout","mouseover"]),a("onPointerEnter",["pointerout","pointerover"]),a("onPointerLeave",["pointerout","pointerover"]),u("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),u("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),u("onBeforeInput",["compositionend","keypress","textInput","paste"]),u("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var O3="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ga=new Set("cancel close invalid load scroll toggle".split(" ").concat(O3));function On(r,s,l){var f=r.type||"unknown-event";r.currentTarget=l,j4(f,s,void 0,r),r.currentTarget=null}function zn(r,s){s=(s&4)!==0;for(var l=0;l<r.length;l++){var f=r[l],g=f.event;f=f.listeners;e:{var v=void 0;if(s)for(var _=f.length-1;0<=_;_--){var M=f[_],N=M.instance,$=M.currentTarget;if(M=M.listener,N!==v&&g.isPropagationStopped())break e;On(g,M,$),v=N}else for(_=0;_<f.length;_++){if(M=f[_],N=M.instance,$=M.currentTarget,M=M.listener,N!==v&&g.isPropagationStopped())break e;On(g,M,$),v=N}}}if(N2)throw r=D3,N2=!1,D3=null,r}function e0(r,s){var l=s[De];l===void 0&&(l=s[De]=new Set);var f=r+"__bubble";l.has(f)||(In(s,r,2,!1),l.add(f))}function he(r,s,l){var f=0;s&&(f|=4),In(l,r,f,s)}var Z6="_reactListening"+Math.random().toString(36).slice(2);function z3(r){if(!r[Z6]){r[Z6]=!0,i.forEach(function(l){l!=="selectionchange"&&(Ga.has(l)||he(l,!1,r),he(l,!0,r))});var s=r.nodeType===9?r:r.ownerDocument;s===null||s[Z6]||(s[Z6]=!0,he("selectionchange",!1,s))}}function In(r,s,l,f){switch(on(s)){case 1:var g=ha;break;case 4:g=da;break;default:g=X4}l=g.bind(null,s,l,r),g=void 0,!y3||s!=="touchstart"&&s!=="touchmove"&&s!=="wheel"||(g=!0),f?g!==void 0?r.addEventListener(s,l,{capture:!0,passive:g}):r.addEventListener(s,l,!0):g!==void 0?r.addEventListener(s,l,{passive:g}):r.addEventListener(s,l,!1)}function de(r,s,l,f,g){var v=f;if(!(s&1)&&!(s&2)&&f!==null)e:for(;;){if(f===null)return;var _=f.tag;if(_===3||_===4){var M=f.stateNode.containerInfo;if(M===g||M.nodeType===8&&M.parentNode===g)break;if(_===4)for(_=f.return;_!==null;){var N=_.tag;if((N===3||N===4)&&(N=_.stateNode.containerInfo,N===g||N.nodeType===8&&N.parentNode===g))return;_=_.return}for(;M!==null;){if(_=o2(M),_===null)return;if(N=_.tag,N===5||N===6){f=v=_;continue e}M=M.parentNode}}f=f.return}M6(function(){var $=v,i9=K0(l),s9=[];e:{var r9=Tn.get(r);if(r9!==void 0){var m9=G4,w9=r;switch(r){case"keypress":if(U6(l)===0)break e;case"keydown":case"keyup":m9=ba;break;case"focusin":w9="focus",m9=te;break;case"focusout":w9="blur",m9=te;break;case"beforeblur":case"afterblur":m9=te;break;case"click":if(l.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":m9=ln;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":m9=ma;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":m9=Ba;break;case Mn:case kn:case Bn:m9=Da;break;case Nn:m9=Ta;break;case"scroll":m9=pa;break;case"wheel":m9=Oa;break;case"copy":case"cut":case"paste":m9=_a;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":m9=fn}var x9=(s&4)!==0,h0=!x9&&r==="scroll",L=x9?r9!==null?r9+"Capture":null:r9;x9=[];for(var z=$,j;z!==null;){j=z;var c9=j.stateNode;if(j.tag===5&&c9!==null&&(j=c9,L!==null&&(c9=t2(z,L),c9!=null&&x9.push(I3(z,c9,j)))),h0)break;z=z.return}0<x9.length&&(r9=new m9(r9,w9,null,l,i9),s9.push({event:r9,listeners:x9}))}}if(!(s&7)){e:{if(r9=r==="mouseover"||r==="pointerover",m9=r==="mouseout"||r==="pointerout",r9&&l!==Y0&&(w9=l.relatedTarget||l.fromElement)&&(o2(w9)||w9[s5]))break e;if((m9||r9)&&(r9=i9.window===i9?i9:(r9=i9.ownerDocument)?r9.defaultView||r9.parentWindow:window,m9?(w9=l.relatedTarget||l.toElement,m9=$,w9=w9?o2(w9):null,w9!==null&&(h0=i5(w9),w9!==h0||w9.tag!==5&&w9.tag!==6)&&(w9=null)):(m9=null,w9=$),m9!==w9)){if(x9=ln,c9="onMouseLeave",L="onMouseEnter",z="mouse",(r==="pointerout"||r==="pointerover")&&(x9=fn,c9="onPointerLeave",L="onPointerEnter",z="pointer"),h0=m9==null?r9:j2(m9),j=w9==null?r9:j2(w9),r9=new x9(c9,z+"leave",m9,l,i9),r9.target=h0,r9.relatedTarget=j,c9=null,o2(i9)===$&&(x9=new x9(L,z+"enter",w9,l,i9),x9.target=j,x9.relatedTarget=h0,c9=x9),h0=c9,m9&&w9)t:{for(x9=m9,L=w9,z=0,j=x9;j;j=R2(j))z++;for(j=0,c9=L;c9;c9=R2(c9))j++;for(;0<z-j;)x9=R2(x9),z--;for(;0<j-z;)L=R2(L),j--;for(;z--;){if(x9===L||L!==null&&x9===L.alternate)break t;x9=R2(x9),L=R2(L)}x9=null}else x9=null;m9!==null&&Rn(s9,r9,m9,x9,!1),w9!==null&&h0!==null&&Rn(s9,h0,w9,x9,!0)}}e:{if(r9=$?j2($):window,m9=r9.nodeName&&r9.nodeName.toLowerCase(),m9==="select"||m9==="input"&&r9.type==="file")var C9=$a;else if(vn(r9))if(Dn)C9=qa;else{C9=Wa;var M9=Va}else(m9=r9.nodeName)&&m9.toLowerCase()==="input"&&(r9.type==="checkbox"||r9.type==="radio")&&(C9=Ua);if(C9&&(C9=C9(r,$))){yn(s9,C9,l,i9);break e}M9&&M9(r,r9,$),r==="focusout"&&(M9=r9._wrapperState)&&M9.controlled&&r9.type==="number"&&W1(r9,"number",r9.value)}switch(M9=$?j2($):window,r){case"focusin":(vn(M9)||M9.contentEditable==="true")&&(z2=M9,ue=$,P3=null);break;case"focusout":P3=ue=z2=null;break;case"mousedown":ae=!0;break;case"contextmenu":case"mouseup":case"dragend":ae=!1,An(s9,l,i9);break;case"selectionchange":if(Xa)break;case"keydown":case"keyup":An(s9,l,i9)}var k9;if(re)e:{switch(r){case"compositionstart":var T9="onCompositionStart";break e;case"compositionend":T9="onCompositionEnd";break e;case"compositionupdate":T9="onCompositionUpdate";break e}T9=void 0}else O2?gn(r,l)&&(T9="onCompositionEnd"):r==="keydown"&&l.keyCode===229&&(T9="onCompositionStart");T9&&(hn&&l.locale!=="ko"&&(O2||T9!=="onCompositionStart"?T9==="onCompositionEnd"&&O2&&(k9=un()):(S5=i9,Z4="value"in S5?S5.value:S5.textContent,O2=!0)),M9=G6($,T9),0<M9.length&&(T9=new cn(T9,r,null,l,i9),s9.push({event:T9,listeners:M9}),k9?T9.data=k9:(k9=mn(l),k9!==null&&(T9.data=k9)))),(k9=Ia?Ra(r,l):La(r,l))&&($=G6($,"onBeforeInput"),0<$.length&&(i9=new cn("onBeforeInput","beforeinput",null,l,i9),s9.push({event:i9,listeners:$}),i9.data=k9))}zn(s9,s)})}function I3(r,s,l){return{instance:r,listener:s,currentTarget:l}}function G6(r,s){for(var l=s+"Capture",f=[];r!==null;){var g=r,v=g.stateNode;g.tag===5&&v!==null&&(g=v,v=t2(r,l),v!=null&&f.unshift(I3(r,v,g)),v=t2(r,s),v!=null&&f.push(I3(r,v,g))),r=r.return}return f}function R2(r){if(r===null)return null;do r=r.return;while(r&&r.tag!==5);return r||null}function Rn(r,s,l,f,g){for(var v=s._reactName,_=[];l!==null&&l!==f;){var M=l,N=M.alternate,$=M.stateNode;if(N!==null&&N===f)break;M.tag===5&&$!==null&&(M=$,g?(N=t2(l,v),N!=null&&_.unshift(I3(l,N,M))):g||(N=t2(l,v),N!=null&&_.push(I3(l,N,M)))),l=l.return}_.length!==0&&r.push({event:s,listeners:_})}var Ja=/\r\n?/g,el=/\u0000|\uFFFD/g;function Ln(r){return(typeof r=="string"?r:""+r).replace(Ja,`
`).replace(el,"")}function J6(r,s,l){if(s=Ln(s),Ln(r)!==s&&l)throw Error(n(425))}function e7(){}var pe=null,ge=null;function me(r,s){return r==="textarea"||r==="noscript"||typeof s.children=="string"||typeof s.children=="number"||typeof s.dangerouslySetInnerHTML=="object"&&s.dangerouslySetInnerHTML!==null&&s.dangerouslySetInnerHTML.__html!=null}var ve=typeof setTimeout=="function"?setTimeout:void 0,tl=typeof clearTimeout=="function"?clearTimeout:void 0,jn=typeof Promise=="function"?Promise:void 0,nl=typeof queueMicrotask=="function"?queueMicrotask:typeof jn<"u"?function(r){return jn.resolve(null).then(r).catch(rl)}:ve;function rl(r){setTimeout(function(){throw r})}function ye(r,s){var l=s,f=0;do{var g=l.nextSibling;if(r.removeChild(l),g&&g.nodeType===8)if(l=g.data,l==="/$"){if(f===0){r.removeChild(g),A3(s);return}f--}else l!=="$"&&l!=="$?"&&l!=="$!"||f++;l=g}while(l);A3(s)}function b5(r){for(;r!=null;r=r.nextSibling){var s=r.nodeType;if(s===1||s===3)break;if(s===8){if(s=r.data,s==="$"||s==="$!"||s==="$?")break;if(s==="/$")return null}}return r}function Hn(r){r=r.previousSibling;for(var s=0;r;){if(r.nodeType===8){var l=r.data;if(l==="$"||l==="$!"||l==="$?"){if(s===0)return r;s--}else l==="/$"&&s++}r=r.previousSibling}return null}var L2=Math.random().toString(36).slice(2),K1="__reactFiber$"+L2,R3="__reactProps$"+L2,s5="__reactContainer$"+L2,De="__reactEvents$"+L2,il="__reactListeners$"+L2,sl="__reactHandles$"+L2;function o2(r){var s=r[K1];if(s)return s;for(var l=r.parentNode;l;){if(s=l[s5]||l[K1]){if(l=s.alternate,s.child!==null||l!==null&&l.child!==null)for(r=Hn(r);r!==null;){if(l=r[K1])return l;r=Hn(r)}return s}r=l,l=r.parentNode}return null}function L3(r){return r=r[K1]||r[s5],!r||r.tag!==5&&r.tag!==6&&r.tag!==13&&r.tag!==3?null:r}function j2(r){if(r.tag===5||r.tag===6)return r.stateNode;throw Error(n(33))}function t7(r){return r[R3]||null}var we=[],H2=-1;function M5(r){return{current:r}}function t0(r){0>H2||(r.current=we[H2],we[H2]=null,H2--)}function G9(r,s){H2++,we[H2]=r.current,r.current=s}var k5={},z0=M5(k5),G0=M5(!1),u2=k5;function $2(r,s){var l=r.type.contextTypes;if(!l)return k5;var f=r.stateNode;if(f&&f.__reactInternalMemoizedUnmaskedChildContext===s)return f.__reactInternalMemoizedMaskedChildContext;var g={},v;for(v in l)g[v]=s[v];return f&&(r=r.stateNode,r.__reactInternalMemoizedUnmaskedChildContext=s,r.__reactInternalMemoizedMaskedChildContext=g),g}function J0(r){return r=r.childContextTypes,r!=null}function n7(){t0(G0),t0(z0)}function $n(r,s,l){if(z0.current!==k5)throw Error(n(168));G9(z0,s),G9(G0,l)}function Vn(r,s,l){var f=r.stateNode;if(s=s.childContextTypes,typeof f.getChildContext!="function")return l;f=f.getChildContext();for(var g in f)if(!(g in s))throw Error(n(108,A9(r)||"Unknown",g));return X({},l,f)}function r7(r){return r=(r=r.stateNode)&&r.__reactInternalMemoizedMergedChildContext||k5,u2=z0.current,G9(z0,r),G9(G0,G0.current),!0}function Wn(r,s,l){var f=r.stateNode;if(!f)throw Error(n(169));l?(r=Vn(r,s,u2),f.__reactInternalMemoizedMergedChildContext=r,t0(G0),t0(z0),G9(z0,r)):t0(G0),G9(G0,l)}var o5=null,i7=!1,_e=!1;function Un(r){o5===null?o5=[r]:o5.push(r)}function ol(r){i7=!0,Un(r)}function B5(){if(!_e&&o5!==null){_e=!0;var r=0,s=q9;try{var l=o5;for(q9=1;r<l.length;r++){var f=l[r];do f=f(!0);while(f!==null)}o5=null,i7=!1}catch(g){throw o5!==null&&(o5=o5.slice(r+1)),P6(w3,B5),g}finally{q9=s,_e=!1}}return null}var V2=[],W2=0,s7=null,o7=0,m1=[],v1=0,a2=null,u5=1,a5="";function l2(r,s){V2[W2++]=o7,V2[W2++]=s7,s7=r,o7=s}function qn(r,s,l){m1[v1++]=u5,m1[v1++]=a5,m1[v1++]=a2,a2=r;var f=u5;r=a5;var g=32-B1(f)-1;f&=~(1<<g),l+=1;var v=32-B1(s)+g;if(30<v){var _=g-g%5;v=(f&(1<<_)-1).toString(32),f>>=_,g-=_,u5=1<<32-B1(s)+g|l<<g|f,a5=v+r}else u5=1<<v|l<<g|f,a5=r}function xe(r){r.return!==null&&(l2(r,1),qn(r,1,0))}function Ee(r){for(;r===s7;)s7=V2[--W2],V2[W2]=null,o7=V2[--W2],V2[W2]=null;for(;r===a2;)a2=m1[--v1],m1[v1]=null,a5=m1[--v1],m1[v1]=null,u5=m1[--v1],m1[v1]=null}var h1=null,d1=null,i0=!1,T1=null;function Yn(r,s){var l=_1(5,null,null,0);l.elementType="DELETED",l.stateNode=s,l.return=r,s=r.deletions,s===null?(r.deletions=[l],r.flags|=16):s.push(l)}function Kn(r,s){switch(r.tag){case 5:var l=r.type;return s=s.nodeType!==1||l.toLowerCase()!==s.nodeName.toLowerCase()?null:s,s!==null?(r.stateNode=s,h1=r,d1=b5(s.firstChild),!0):!1;case 6:return s=r.pendingProps===""||s.nodeType!==3?null:s,s!==null?(r.stateNode=s,h1=r,d1=null,!0):!1;case 13:return s=s.nodeType!==8?null:s,s!==null?(l=a2!==null?{id:u5,overflow:a5}:null,r.memoizedState={dehydrated:s,treeContext:l,retryLane:1073741824},l=_1(18,null,null,0),l.stateNode=s,l.return=r,r.child=l,h1=r,d1=null,!0):!1;default:return!1}}function Ce(r){return(r.mode&1)!==0&&(r.flags&128)===0}function Fe(r){if(i0){var s=d1;if(s){var l=s;if(!Kn(r,s)){if(Ce(r))throw Error(n(418));s=b5(l.nextSibling);var f=h1;s&&Kn(r,s)?Yn(f,l):(r.flags=r.flags&-4097|2,i0=!1,h1=r)}}else{if(Ce(r))throw Error(n(418));r.flags=r.flags&-4097|2,i0=!1,h1=r}}}function Xn(r){for(r=r.return;r!==null&&r.tag!==5&&r.tag!==3&&r.tag!==13;)r=r.return;h1=r}function u7(r){if(r!==h1)return!1;if(!i0)return Xn(r),i0=!0,!1;var s;if((s=r.tag!==3)&&!(s=r.tag!==5)&&(s=r.type,s=s!=="head"&&s!=="body"&&!me(r.type,r.memoizedProps)),s&&(s=d1)){if(Ce(r))throw Qn(),Error(n(418));for(;s;)Yn(r,s),s=b5(s.nextSibling)}if(Xn(r),r.tag===13){if(r=r.memoizedState,r=r!==null?r.dehydrated:null,!r)throw Error(n(317));e:{for(r=r.nextSibling,s=0;r;){if(r.nodeType===8){var l=r.data;if(l==="/$"){if(s===0){d1=b5(r.nextSibling);break e}s--}else l!=="$"&&l!=="$!"&&l!=="$?"||s++}r=r.nextSibling}d1=null}}else d1=h1?b5(r.stateNode.nextSibling):null;return!0}function Qn(){for(var r=d1;r;)r=b5(r.nextSibling)}function U2(){d1=h1=null,i0=!1}function Se(r){T1===null?T1=[r]:T1.push(r)}var ul=B.ReactCurrentBatchConfig;function j3(r,s,l){if(r=l.ref,r!==null&&typeof r!="function"&&typeof r!="object"){if(l._owner){if(l=l._owner,l){if(l.tag!==1)throw Error(n(309));var f=l.stateNode}if(!f)throw Error(n(147,r));var g=f,v=""+r;return s!==null&&s.ref!==null&&typeof s.ref=="function"&&s.ref._stringRef===v?s.ref:(s=function(_){var M=g.refs;_===null?delete M[v]:M[v]=_},s._stringRef=v,s)}if(typeof r!="string")throw Error(n(284));if(!l._owner)throw Error(n(290,r))}return r}function a7(r,s){throw r=Object.prototype.toString.call(s),Error(n(31,r==="[object Object]"?"object with keys {"+Object.keys(s).join(", ")+"}":r))}function Zn(r){var s=r._init;return s(r._payload)}function Gn(r){function s(L,z){if(r){var j=L.deletions;j===null?(L.deletions=[z],L.flags|=16):j.push(z)}}function l(L,z){if(!r)return null;for(;z!==null;)s(L,z),z=z.sibling;return null}function f(L,z){for(L=new Map;z!==null;)z.key!==null?L.set(z.key,z):L.set(z.index,z),z=z.sibling;return L}function g(L,z){return L=L5(L,z),L.index=0,L.sibling=null,L}function v(L,z,j){return L.index=j,r?(j=L.alternate,j!==null?(j=j.index,j<z?(L.flags|=2,z):j):(L.flags|=2,z)):(L.flags|=1048576,z)}function _(L){return r&&L.alternate===null&&(L.flags|=2),L}function M(L,z,j,c9){return z===null||z.tag!==6?(z=v8(j,L.mode,c9),z.return=L,z):(z=g(z,j),z.return=L,z)}function N(L,z,j,c9){var C9=j.type;return C9===P?i9(L,z,j.props.children,c9,j.key):z!==null&&(z.elementType===C9||typeof C9=="object"&&C9!==null&&C9.$$typeof===q&&Zn(C9)===z.type)?(c9=g(z,j.props),c9.ref=j3(L,z,j),c9.return=L,c9):(c9=N7(j.type,j.key,j.props,null,L.mode,c9),c9.ref=j3(L,z,j),c9.return=L,c9)}function $(L,z,j,c9){return z===null||z.tag!==4||z.stateNode.containerInfo!==j.containerInfo||z.stateNode.implementation!==j.implementation?(z=y8(j,L.mode,c9),z.return=L,z):(z=g(z,j.children||[]),z.return=L,z)}function i9(L,z,j,c9,C9){return z===null||z.tag!==7?(z=v2(j,L.mode,c9,C9),z.return=L,z):(z=g(z,j),z.return=L,z)}function s9(L,z,j){if(typeof z=="string"&&z!==""||typeof z=="number")return z=v8(""+z,L.mode,j),z.return=L,z;if(typeof z=="object"&&z!==null){switch(z.$$typeof){case F:return j=N7(z.type,z.key,z.props,null,L.mode,j),j.ref=j3(L,null,z),j.return=L,j;case S:return z=y8(z,L.mode,j),z.return=L,z;case q:var c9=z._init;return s9(L,c9(z._payload),j)}if(r5(z)||G(z))return z=v2(z,L.mode,j,null),z.return=L,z;a7(L,z)}return null}function r9(L,z,j,c9){var C9=z!==null?z.key:null;if(typeof j=="string"&&j!==""||typeof j=="number")return C9!==null?null:M(L,z,""+j,c9);if(typeof j=="object"&&j!==null){switch(j.$$typeof){case F:return j.key===C9?N(L,z,j,c9):null;case S:return j.key===C9?$(L,z,j,c9):null;case q:return C9=j._init,r9(L,z,C9(j._payload),c9)}if(r5(j)||G(j))return C9!==null?null:i9(L,z,j,c9,null);a7(L,j)}return null}function m9(L,z,j,c9,C9){if(typeof c9=="string"&&c9!==""||typeof c9=="number")return L=L.get(j)||null,M(z,L,""+c9,C9);if(typeof c9=="object"&&c9!==null){switch(c9.$$typeof){case F:return L=L.get(c9.key===null?j:c9.key)||null,N(z,L,c9,C9);case S:return L=L.get(c9.key===null?j:c9.key)||null,$(z,L,c9,C9);case q:var M9=c9._init;return m9(L,z,j,M9(c9._payload),C9)}if(r5(c9)||G(c9))return L=L.get(j)||null,i9(z,L,c9,C9,null);a7(z,c9)}return null}function w9(L,z,j,c9){for(var C9=null,M9=null,k9=z,T9=z=0,F0=null;k9!==null&&T9<j.length;T9++){k9.index>T9?(F0=k9,k9=null):F0=k9.sibling;var $9=r9(L,k9,j[T9],c9);if($9===null){k9===null&&(k9=F0);break}r&&k9&&$9.alternate===null&&s(L,k9),z=v($9,z,T9),M9===null?C9=$9:M9.sibling=$9,M9=$9,k9=F0}if(T9===j.length)return l(L,k9),i0&&l2(L,T9),C9;if(k9===null){for(;T9<j.length;T9++)k9=s9(L,j[T9],c9),k9!==null&&(z=v(k9,z,T9),M9===null?C9=k9:M9.sibling=k9,M9=k9);return i0&&l2(L,T9),C9}for(k9=f(L,k9);T9<j.length;T9++)F0=m9(k9,L,T9,j[T9],c9),F0!==null&&(r&&F0.alternate!==null&&k9.delete(F0.key===null?T9:F0.key),z=v(F0,z,T9),M9===null?C9=F0:M9.sibling=F0,M9=F0);return r&&k9.forEach(function(j5){return s(L,j5)}),i0&&l2(L,T9),C9}function x9(L,z,j,c9){var C9=G(j);if(typeof C9!="function")throw Error(n(150));if(j=C9.call(j),j==null)throw Error(n(151));for(var M9=C9=null,k9=z,T9=z=0,F0=null,$9=j.next();k9!==null&&!$9.done;T9++,$9=j.next()){k9.index>T9?(F0=k9,k9=null):F0=k9.sibling;var j5=r9(L,k9,$9.value,c9);if(j5===null){k9===null&&(k9=F0);break}r&&k9&&j5.alternate===null&&s(L,k9),z=v(j5,z,T9),M9===null?C9=j5:M9.sibling=j5,M9=j5,k9=F0}if($9.done)return l(L,k9),i0&&l2(L,T9),C9;if(k9===null){for(;!$9.done;T9++,$9=j.next())$9=s9(L,$9.value,c9),$9!==null&&(z=v($9,z,T9),M9===null?C9=$9:M9.sibling=$9,M9=$9);return i0&&l2(L,T9),C9}for(k9=f(L,k9);!$9.done;T9++,$9=j.next())$9=m9(k9,L,T9,$9.value,c9),$9!==null&&(r&&$9.alternate!==null&&k9.delete($9.key===null?T9:$9.key),z=v($9,z,T9),M9===null?C9=$9:M9.sibling=$9,M9=$9);return r&&k9.forEach(function(Ll){return s(L,Ll)}),i0&&l2(L,T9),C9}function h0(L,z,j,c9){if(typeof j=="object"&&j!==null&&j.type===P&&j.key===null&&(j=j.props.children),typeof j=="object"&&j!==null){switch(j.$$typeof){case F:e:{for(var C9=j.key,M9=z;M9!==null;){if(M9.key===C9){if(C9=j.type,C9===P){if(M9.tag===7){l(L,M9.sibling),z=g(M9,j.props.children),z.return=L,L=z;break e}}else if(M9.elementType===C9||typeof C9=="object"&&C9!==null&&C9.$$typeof===q&&Zn(C9)===M9.type){l(L,M9.sibling),z=g(M9,j.props),z.ref=j3(L,M9,j),z.return=L,L=z;break e}l(L,M9);break}else s(L,M9);M9=M9.sibling}j.type===P?(z=v2(j.props.children,L.mode,c9,j.key),z.return=L,L=z):(c9=N7(j.type,j.key,j.props,null,L.mode,c9),c9.ref=j3(L,z,j),c9.return=L,L=c9)}return _(L);case S:e:{for(M9=j.key;z!==null;){if(z.key===M9)if(z.tag===4&&z.stateNode.containerInfo===j.containerInfo&&z.stateNode.implementation===j.implementation){l(L,z.sibling),z=g(z,j.children||[]),z.return=L,L=z;break e}else{l(L,z);break}else s(L,z);z=z.sibling}z=y8(j,L.mode,c9),z.return=L,L=z}return _(L);case q:return M9=j._init,h0(L,z,M9(j._payload),c9)}if(r5(j))return w9(L,z,j,c9);if(G(j))return x9(L,z,j,c9);a7(L,j)}return typeof j=="string"&&j!==""||typeof j=="number"?(j=""+j,z!==null&&z.tag===6?(l(L,z.sibling),z=g(z,j),z.return=L,L=z):(l(L,z),z=v8(j,L.mode,c9),z.return=L,L=z),_(L)):l(L,z)}return h0}var q2=Gn(!0),Jn=Gn(!1),l7=M5(null),c7=null,Y2=null,Ae=null;function be(){Ae=Y2=c7=null}function Me(r){var s=l7.current;t0(l7),r._currentValue=s}function ke(r,s,l){for(;r!==null;){var f=r.alternate;if((r.childLanes&s)!==s?(r.childLanes|=s,f!==null&&(f.childLanes|=s)):f!==null&&(f.childLanes&s)!==s&&(f.childLanes|=s),r===l)break;r=r.return}}function K2(r,s){c7=r,Ae=Y2=null,r=r.dependencies,r!==null&&r.firstContext!==null&&(r.lanes&s&&(e1=!0),r.firstContext=null)}function y1(r){var s=r._currentValue;if(Ae!==r)if(r={context:r,memoizedValue:s,next:null},Y2===null){if(c7===null)throw Error(n(308));Y2=r,c7.dependencies={lanes:0,firstContext:r}}else Y2=Y2.next=r;return s}var c2=null;function Be(r){c2===null?c2=[r]:c2.push(r)}function er(r,s,l,f){var g=s.interleaved;return g===null?(l.next=l,Be(s)):(l.next=g.next,g.next=l),s.interleaved=l,l5(r,f)}function l5(r,s){r.lanes|=s;var l=r.alternate;for(l!==null&&(l.lanes|=s),l=r,r=r.return;r!==null;)r.childLanes|=s,l=r.alternate,l!==null&&(l.childLanes|=s),l=r,r=r.return;return l.tag===3?l.stateNode:null}var N5=!1;function Ne(r){r.updateQueue={baseState:r.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function tr(r,s){r=r.updateQueue,s.updateQueue===r&&(s.updateQueue={baseState:r.baseState,firstBaseUpdate:r.firstBaseUpdate,lastBaseUpdate:r.lastBaseUpdate,shared:r.shared,effects:r.effects})}function c5(r,s){return{eventTime:r,lane:s,tag:0,payload:null,callback:null,next:null}}function T5(r,s,l){var f=r.updateQueue;if(f===null)return null;if(f=f.shared,L9&2){var g=f.pending;return g===null?s.next=s:(s.next=g.next,g.next=s),f.pending=s,l5(r,l)}return g=f.interleaved,g===null?(s.next=s,Be(f)):(s.next=g.next,g.next=s),f.interleaved=s,l5(r,l)}function f7(r,s,l){if(s=s.updateQueue,s!==null&&(s=s.shared,(l&4194240)!==0)){var f=s.lanes;f&=r.pendingLanes,l|=f,s.lanes=l,q4(r,l)}}function nr(r,s){var l=r.updateQueue,f=r.alternate;if(f!==null&&(f=f.updateQueue,l===f)){var g=null,v=null;if(l=l.firstBaseUpdate,l!==null){do{var _={eventTime:l.eventTime,lane:l.lane,tag:l.tag,payload:l.payload,callback:l.callback,next:null};v===null?g=v=_:v=v.next=_,l=l.next}while(l!==null);v===null?g=v=s:v=v.next=s}else g=v=s;l={baseState:f.baseState,firstBaseUpdate:g,lastBaseUpdate:v,shared:f.shared,effects:f.effects},r.updateQueue=l;return}r=l.lastBaseUpdate,r===null?l.firstBaseUpdate=s:r.next=s,l.lastBaseUpdate=s}function h7(r,s,l,f){var g=r.updateQueue;N5=!1;var v=g.firstBaseUpdate,_=g.lastBaseUpdate,M=g.shared.pending;if(M!==null){g.shared.pending=null;var N=M,$=N.next;N.next=null,_===null?v=$:_.next=$,_=N;var i9=r.alternate;i9!==null&&(i9=i9.updateQueue,M=i9.lastBaseUpdate,M!==_&&(M===null?i9.firstBaseUpdate=$:M.next=$,i9.lastBaseUpdate=N))}if(v!==null){var s9=g.baseState;_=0,i9=$=N=null,M=v;do{var r9=M.lane,m9=M.eventTime;if((f&r9)===r9){i9!==null&&(i9=i9.next={eventTime:m9,lane:0,tag:M.tag,payload:M.payload,callback:M.callback,next:null});e:{var w9=r,x9=M;switch(r9=s,m9=l,x9.tag){case 1:if(w9=x9.payload,typeof w9=="function"){s9=w9.call(m9,s9,r9);break e}s9=w9;break e;case 3:w9.flags=w9.flags&-65537|128;case 0:if(w9=x9.payload,r9=typeof w9=="function"?w9.call(m9,s9,r9):w9,r9==null)break e;s9=X({},s9,r9);break e;case 2:N5=!0}}M.callback!==null&&M.lane!==0&&(r.flags|=64,r9=g.effects,r9===null?g.effects=[M]:r9.push(M))}else m9={eventTime:m9,lane:r9,tag:M.tag,payload:M.payload,callback:M.callback,next:null},i9===null?($=i9=m9,N=s9):i9=i9.next=m9,_|=r9;if(M=M.next,M===null){if(M=g.shared.pending,M===null)break;r9=M,M=r9.next,r9.next=null,g.lastBaseUpdate=r9,g.shared.pending=null}}while(!0);if(i9===null&&(N=s9),g.baseState=N,g.firstBaseUpdate=$,g.lastBaseUpdate=i9,s=g.shared.interleaved,s!==null){g=s;do _|=g.lane,g=g.next;while(g!==s)}else v===null&&(g.shared.lanes=0);d2|=_,r.lanes=_,r.memoizedState=s9}}function rr(r,s,l){if(r=s.effects,s.effects=null,r!==null)for(s=0;s<r.length;s++){var f=r[s],g=f.callback;if(g!==null){if(f.callback=null,f=l,typeof g!="function")throw Error(n(191,g));g.call(f)}}}var H3={},X1=M5(H3),$3=M5(H3),V3=M5(H3);function f2(r){if(r===H3)throw Error(n(174));return r}function Te(r,s){switch(G9(V3,s),G9($3,r),G9(X1,H3),r=s.nodeType,r){case 9:case 11:s=(s=s.documentElement)?s.namespaceURI:n9(null,"");break;default:r=r===8?s.parentNode:s,s=r.namespaceURI||null,r=r.tagName,s=n9(s,r)}t0(X1),G9(X1,s)}function X2(){t0(X1),t0($3),t0(V3)}function ir(r){f2(V3.current);var s=f2(X1.current),l=n9(s,r.type);s!==l&&(G9($3,r),G9(X1,l))}function Pe(r){$3.current===r&&(t0(X1),t0($3))}var o0=M5(0);function d7(r){for(var s=r;s!==null;){if(s.tag===13){var l=s.memoizedState;if(l!==null&&(l=l.dehydrated,l===null||l.data==="$?"||l.data==="$!"))return s}else if(s.tag===19&&s.memoizedProps.revealOrder!==void 0){if(s.flags&128)return s}else if(s.child!==null){s.child.return=s,s=s.child;continue}if(s===r)break;for(;s.sibling===null;){if(s.return===null||s.return===r)return null;s=s.return}s.sibling.return=s.return,s=s.sibling}return null}var Oe=[];function ze(){for(var r=0;r<Oe.length;r++)Oe[r]._workInProgressVersionPrimary=null;Oe.length=0}var p7=B.ReactCurrentDispatcher,Ie=B.ReactCurrentBatchConfig,h2=0,u0=null,y0=null,E0=null,g7=!1,W3=!1,U3=0,al=0;function I0(){throw Error(n(321))}function Re(r,s){if(s===null)return!1;for(var l=0;l<s.length&&l<r.length;l++)if(!N1(r[l],s[l]))return!1;return!0}function Le(r,s,l,f,g,v){if(h2=v,u0=s,s.memoizedState=null,s.updateQueue=null,s.lanes=0,p7.current=r===null||r.memoizedState===null?hl:dl,r=l(f,g),W3){v=0;do{if(W3=!1,U3=0,25<=v)throw Error(n(301));v+=1,E0=y0=null,s.updateQueue=null,p7.current=pl,r=l(f,g)}while(W3)}if(p7.current=y7,s=y0!==null&&y0.next!==null,h2=0,E0=y0=u0=null,g7=!1,s)throw Error(n(300));return r}function je(){var r=U3!==0;return U3=0,r}function Q1(){var r={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return E0===null?u0.memoizedState=E0=r:E0=E0.next=r,E0}function D1(){if(y0===null){var r=u0.alternate;r=r!==null?r.memoizedState:null}else r=y0.next;var s=E0===null?u0.memoizedState:E0.next;if(s!==null)E0=s,y0=r;else{if(r===null)throw Error(n(310));y0=r,r={memoizedState:y0.memoizedState,baseState:y0.baseState,baseQueue:y0.baseQueue,queue:y0.queue,next:null},E0===null?u0.memoizedState=E0=r:E0=E0.next=r}return E0}function q3(r,s){return typeof s=="function"?s(r):s}function He(r){var s=D1(),l=s.queue;if(l===null)throw Error(n(311));l.lastRenderedReducer=r;var f=y0,g=f.baseQueue,v=l.pending;if(v!==null){if(g!==null){var _=g.next;g.next=v.next,v.next=_}f.baseQueue=g=v,l.pending=null}if(g!==null){v=g.next,f=f.baseState;var M=_=null,N=null,$=v;do{var i9=$.lane;if((h2&i9)===i9)N!==null&&(N=N.next={lane:0,action:$.action,hasEagerState:$.hasEagerState,eagerState:$.eagerState,next:null}),f=$.hasEagerState?$.eagerState:r(f,$.action);else{var s9={lane:i9,action:$.action,hasEagerState:$.hasEagerState,eagerState:$.eagerState,next:null};N===null?(M=N=s9,_=f):N=N.next=s9,u0.lanes|=i9,d2|=i9}$=$.next}while($!==null&&$!==v);N===null?_=f:N.next=M,N1(f,s.memoizedState)||(e1=!0),s.memoizedState=f,s.baseState=_,s.baseQueue=N,l.lastRenderedState=f}if(r=l.interleaved,r!==null){g=r;do v=g.lane,u0.lanes|=v,d2|=v,g=g.next;while(g!==r)}else g===null&&(l.lanes=0);return[s.memoizedState,l.dispatch]}function $e(r){var s=D1(),l=s.queue;if(l===null)throw Error(n(311));l.lastRenderedReducer=r;var f=l.dispatch,g=l.pending,v=s.memoizedState;if(g!==null){l.pending=null;var _=g=g.next;do v=r(v,_.action),_=_.next;while(_!==g);N1(v,s.memoizedState)||(e1=!0),s.memoizedState=v,s.baseQueue===null&&(s.baseState=v),l.lastRenderedState=v}return[v,f]}function sr(){}function or(r,s){var l=u0,f=D1(),g=s(),v=!N1(f.memoizedState,g);if(v&&(f.memoizedState=g,e1=!0),f=f.queue,Ve(lr.bind(null,l,f,r),[r]),f.getSnapshot!==s||v||E0!==null&&E0.memoizedState.tag&1){if(l.flags|=2048,Y3(9,ar.bind(null,l,f,g,s),void 0,null),C0===null)throw Error(n(349));h2&30||ur(l,s,g)}return g}function ur(r,s,l){r.flags|=16384,r={getSnapshot:s,value:l},s=u0.updateQueue,s===null?(s={lastEffect:null,stores:null},u0.updateQueue=s,s.stores=[r]):(l=s.stores,l===null?s.stores=[r]:l.push(r))}function ar(r,s,l,f){s.value=l,s.getSnapshot=f,cr(s)&&fr(r)}function lr(r,s,l){return l(function(){cr(s)&&fr(r)})}function cr(r){var s=r.getSnapshot;r=r.value;try{var l=s();return!N1(r,l)}catch{return!0}}function fr(r){var s=l5(r,1);s!==null&&I1(s,r,1,-1)}function hr(r){var s=Q1();return typeof r=="function"&&(r=r()),s.memoizedState=s.baseState=r,r={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:q3,lastRenderedState:r},s.queue=r,r=r.dispatch=fl.bind(null,u0,r),[s.memoizedState,r]}function Y3(r,s,l,f){return r={tag:r,create:s,destroy:l,deps:f,next:null},s=u0.updateQueue,s===null?(s={lastEffect:null,stores:null},u0.updateQueue=s,s.lastEffect=r.next=r):(l=s.lastEffect,l===null?s.lastEffect=r.next=r:(f=l.next,l.next=r,r.next=f,s.lastEffect=r)),r}function dr(){return D1().memoizedState}function m7(r,s,l,f){var g=Q1();u0.flags|=r,g.memoizedState=Y3(1|s,l,void 0,f===void 0?null:f)}function v7(r,s,l,f){var g=D1();f=f===void 0?null:f;var v=void 0;if(y0!==null){var _=y0.memoizedState;if(v=_.destroy,f!==null&&Re(f,_.deps)){g.memoizedState=Y3(s,l,v,f);return}}u0.flags|=r,g.memoizedState=Y3(1|s,l,v,f)}function pr(r,s){return m7(8390656,8,r,s)}function Ve(r,s){return v7(2048,8,r,s)}function gr(r,s){return v7(4,2,r,s)}function mr(r,s){return v7(4,4,r,s)}function vr(r,s){if(typeof s=="function")return r=r(),s(r),function(){s(null)};if(s!=null)return r=r(),s.current=r,function(){s.current=null}}function yr(r,s,l){return l=l!=null?l.concat([r]):null,v7(4,4,vr.bind(null,s,r),l)}function We(){}function Dr(r,s){var l=D1();s=s===void 0?null:s;var f=l.memoizedState;return f!==null&&s!==null&&Re(s,f[1])?f[0]:(l.memoizedState=[r,s],r)}function wr(r,s){var l=D1();s=s===void 0?null:s;var f=l.memoizedState;return f!==null&&s!==null&&Re(s,f[1])?f[0]:(r=r(),l.memoizedState=[r,s],r)}function _r(r,s,l){return h2&21?(N1(l,s)||(l=Qt(),u0.lanes|=l,d2|=l,r.baseState=!0),s):(r.baseState&&(r.baseState=!1,e1=!0),r.memoizedState=l)}function ll(r,s){var l=q9;q9=l!==0&&4>l?l:4,r(!0);var f=Ie.transition;Ie.transition={};try{r(!1),s()}finally{q9=l,Ie.transition=f}}function xr(){return D1().memoizedState}function cl(r,s,l){var f=I5(r);if(l={lane:f,action:l,hasEagerState:!1,eagerState:null,next:null},Er(r))Cr(s,l);else if(l=er(r,s,l,f),l!==null){var g=Q0();I1(l,r,f,g),Fr(l,s,f)}}function fl(r,s,l){var f=I5(r),g={lane:f,action:l,hasEagerState:!1,eagerState:null,next:null};if(Er(r))Cr(s,g);else{var v=r.alternate;if(r.lanes===0&&(v===null||v.lanes===0)&&(v=s.lastRenderedReducer,v!==null))try{var _=s.lastRenderedState,M=v(_,l);if(g.hasEagerState=!0,g.eagerState=M,N1(M,_)){var N=s.interleaved;N===null?(g.next=g,Be(s)):(g.next=N.next,N.next=g),s.interleaved=g;return}}catch{}finally{}l=er(r,s,g,f),l!==null&&(g=Q0(),I1(l,r,f,g),Fr(l,s,f))}}function Er(r){var s=r.alternate;return r===u0||s!==null&&s===u0}function Cr(r,s){W3=g7=!0;var l=r.pending;l===null?s.next=s:(s.next=l.next,l.next=s),r.pending=s}function Fr(r,s,l){if(l&4194240){var f=s.lanes;f&=r.pendingLanes,l|=f,s.lanes=l,q4(r,l)}}var y7={readContext:y1,useCallback:I0,useContext:I0,useEffect:I0,useImperativeHandle:I0,useInsertionEffect:I0,useLayoutEffect:I0,useMemo:I0,useReducer:I0,useRef:I0,useState:I0,useDebugValue:I0,useDeferredValue:I0,useTransition:I0,useMutableSource:I0,useSyncExternalStore:I0,useId:I0,unstable_isNewReconciler:!1},hl={readContext:y1,useCallback:function(r,s){return Q1().memoizedState=[r,s===void 0?null:s],r},useContext:y1,useEffect:pr,useImperativeHandle:function(r,s,l){return l=l!=null?l.concat([r]):null,m7(4194308,4,vr.bind(null,s,r),l)},useLayoutEffect:function(r,s){return m7(4194308,4,r,s)},useInsertionEffect:function(r,s){return m7(4,2,r,s)},useMemo:function(r,s){var l=Q1();return s=s===void 0?null:s,r=r(),l.memoizedState=[r,s],r},useReducer:function(r,s,l){var f=Q1();return s=l!==void 0?l(s):s,f.memoizedState=f.baseState=s,r={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:r,lastRenderedState:s},f.queue=r,r=r.dispatch=cl.bind(null,u0,r),[f.memoizedState,r]},useRef:function(r){var s=Q1();return r={current:r},s.memoizedState=r},useState:hr,useDebugValue:We,useDeferredValue:function(r){return Q1().memoizedState=r},useTransition:function(){var r=hr(!1),s=r[0];return r=ll.bind(null,r[1]),Q1().memoizedState=r,[s,r]},useMutableSource:function(){},useSyncExternalStore:function(r,s,l){var f=u0,g=Q1();if(i0){if(l===void 0)throw Error(n(407));l=l()}else{if(l=s(),C0===null)throw Error(n(349));h2&30||ur(f,s,l)}g.memoizedState=l;var v={value:l,getSnapshot:s};return g.queue=v,pr(lr.bind(null,f,v,r),[r]),f.flags|=2048,Y3(9,ar.bind(null,f,v,l,s),void 0,null),l},useId:function(){var r=Q1(),s=C0.identifierPrefix;if(i0){var l=a5,f=u5;l=(f&~(1<<32-B1(f)-1)).toString(32)+l,s=":"+s+"R"+l,l=U3++,0<l&&(s+="H"+l.toString(32)),s+=":"}else l=al++,s=":"+s+"r"+l.toString(32)+":";return r.memoizedState=s},unstable_isNewReconciler:!1},dl={readContext:y1,useCallback:Dr,useContext:y1,useEffect:Ve,useImperativeHandle:yr,useInsertionEffect:gr,useLayoutEffect:mr,useMemo:wr,useReducer:He,useRef:dr,useState:function(){return He(q3)},useDebugValue:We,useDeferredValue:function(r){var s=D1();return _r(s,y0.memoizedState,r)},useTransition:function(){var r=He(q3)[0],s=D1().memoizedState;return[r,s]},useMutableSource:sr,useSyncExternalStore:or,useId:xr,unstable_isNewReconciler:!1},pl={readContext:y1,useCallback:Dr,useContext:y1,useEffect:Ve,useImperativeHandle:yr,useInsertionEffect:gr,useLayoutEffect:mr,useMemo:wr,useReducer:$e,useRef:dr,useState:function(){return $e(q3)},useDebugValue:We,useDeferredValue:function(r){var s=D1();return y0===null?s.memoizedState=r:_r(s,y0.memoizedState,r)},useTransition:function(){var r=$e(q3)[0],s=D1().memoizedState;return[r,s]},useMutableSource:sr,useSyncExternalStore:or,useId:xr,unstable_isNewReconciler:!1};function P1(r,s){if(r&&r.defaultProps){s=X({},s),r=r.defaultProps;for(var l in r)s[l]===void 0&&(s[l]=r[l]);return s}return s}function Ue(r,s,l,f){s=r.memoizedState,l=l(f,s),l=l==null?s:X({},s,l),r.memoizedState=l,r.lanes===0&&(r.updateQueue.baseState=l)}var D7={isMounted:function(r){return(r=r._reactInternals)?i5(r)===r:!1},enqueueSetState:function(r,s,l){r=r._reactInternals;var f=Q0(),g=I5(r),v=c5(f,g);v.payload=s,l!=null&&(v.callback=l),s=T5(r,v,g),s!==null&&(I1(s,r,g,f),f7(s,r,g))},enqueueReplaceState:function(r,s,l){r=r._reactInternals;var f=Q0(),g=I5(r),v=c5(f,g);v.tag=1,v.payload=s,l!=null&&(v.callback=l),s=T5(r,v,g),s!==null&&(I1(s,r,g,f),f7(s,r,g))},enqueueForceUpdate:function(r,s){r=r._reactInternals;var l=Q0(),f=I5(r),g=c5(l,f);g.tag=2,s!=null&&(g.callback=s),s=T5(r,g,f),s!==null&&(I1(s,r,f,l),f7(s,r,f))}};function Sr(r,s,l,f,g,v,_){return r=r.stateNode,typeof r.shouldComponentUpdate=="function"?r.shouldComponentUpdate(f,v,_):s.prototype&&s.prototype.isPureReactComponent?!T3(l,f)||!T3(g,v):!0}function Ar(r,s,l){var f=!1,g=k5,v=s.contextType;return typeof v=="object"&&v!==null?v=y1(v):(g=J0(s)?u2:z0.current,f=s.contextTypes,v=(f=f!=null)?$2(r,g):k5),s=new s(l,v),r.memoizedState=s.state!==null&&s.state!==void 0?s.state:null,s.updater=D7,r.stateNode=s,s._reactInternals=r,f&&(r=r.stateNode,r.__reactInternalMemoizedUnmaskedChildContext=g,r.__reactInternalMemoizedMaskedChildContext=v),s}function br(r,s,l,f){r=s.state,typeof s.componentWillReceiveProps=="function"&&s.componentWillReceiveProps(l,f),typeof s.UNSAFE_componentWillReceiveProps=="function"&&s.UNSAFE_componentWillReceiveProps(l,f),s.state!==r&&D7.enqueueReplaceState(s,s.state,null)}function qe(r,s,l,f){var g=r.stateNode;g.props=l,g.state=r.memoizedState,g.refs={},Ne(r);var v=s.contextType;typeof v=="object"&&v!==null?g.context=y1(v):(v=J0(s)?u2:z0.current,g.context=$2(r,v)),g.state=r.memoizedState,v=s.getDerivedStateFromProps,typeof v=="function"&&(Ue(r,s,v,l),g.state=r.memoizedState),typeof s.getDerivedStateFromProps=="function"||typeof g.getSnapshotBeforeUpdate=="function"||typeof g.UNSAFE_componentWillMount!="function"&&typeof g.componentWillMount!="function"||(s=g.state,typeof g.componentWillMount=="function"&&g.componentWillMount(),typeof g.UNSAFE_componentWillMount=="function"&&g.UNSAFE_componentWillMount(),s!==g.state&&D7.enqueueReplaceState(g,g.state,null),h7(r,l,g,f),g.state=r.memoizedState),typeof g.componentDidMount=="function"&&(r.flags|=4194308)}function Q2(r,s){try{var l="",f=s;do l+=E9(f),f=f.return;while(f);var g=l}catch(v){g=`
Error generating stack: `+v.message+`
`+v.stack}return{value:r,source:s,stack:g,digest:null}}function Ye(r,s,l){return{value:r,source:null,stack:l??null,digest:s??null}}function Ke(r,s){try{console.error(s.value)}catch(l){setTimeout(function(){throw l})}}var gl=typeof WeakMap=="function"?WeakMap:Map;function Mr(r,s,l){l=c5(-1,l),l.tag=3,l.payload={element:null};var f=s.value;return l.callback=function(){S7||(S7=!0,l8=f),Ke(r,s)},l}function kr(r,s,l){l=c5(-1,l),l.tag=3;var f=r.type.getDerivedStateFromError;if(typeof f=="function"){var g=s.value;l.payload=function(){return f(g)},l.callback=function(){Ke(r,s)}}var v=r.stateNode;return v!==null&&typeof v.componentDidCatch=="function"&&(l.callback=function(){Ke(r,s),typeof f!="function"&&(O5===null?O5=new Set([this]):O5.add(this));var _=s.stack;this.componentDidCatch(s.value,{componentStack:_!==null?_:""})}),l}function Br(r,s,l){var f=r.pingCache;if(f===null){f=r.pingCache=new gl;var g=new Set;f.set(s,g)}else g=f.get(s),g===void 0&&(g=new Set,f.set(s,g));g.has(l)||(g.add(l),r=Ml.bind(null,r,s,l),s.then(r,r))}function Nr(r){do{var s;if((s=r.tag===13)&&(s=r.memoizedState,s=s!==null?s.dehydrated!==null:!0),s)return r;r=r.return}while(r!==null);return null}function Tr(r,s,l,f,g){return r.mode&1?(r.flags|=65536,r.lanes=g,r):(r===s?r.flags|=65536:(r.flags|=128,l.flags|=131072,l.flags&=-52805,l.tag===1&&(l.alternate===null?l.tag=17:(s=c5(-1,1),s.tag=2,T5(l,s,1))),l.lanes|=1),r)}var ml=B.ReactCurrentOwner,e1=!1;function X0(r,s,l,f){s.child=r===null?Jn(s,null,l,f):q2(s,r.child,l,f)}function Pr(r,s,l,f,g){l=l.render;var v=s.ref;return K2(s,g),f=Le(r,s,l,f,v,g),l=je(),r!==null&&!e1?(s.updateQueue=r.updateQueue,s.flags&=-2053,r.lanes&=~g,f5(r,s,g)):(i0&&l&&xe(s),s.flags|=1,X0(r,s,f,g),s.child)}function Or(r,s,l,f,g){if(r===null){var v=l.type;return typeof v=="function"&&!m8(v)&&v.defaultProps===void 0&&l.compare===null&&l.defaultProps===void 0?(s.tag=15,s.type=v,zr(r,s,v,f,g)):(r=N7(l.type,null,f,s,s.mode,g),r.ref=s.ref,r.return=s,s.child=r)}if(v=r.child,!(r.lanes&g)){var _=v.memoizedProps;if(l=l.compare,l=l!==null?l:T3,l(_,f)&&r.ref===s.ref)return f5(r,s,g)}return s.flags|=1,r=L5(v,f),r.ref=s.ref,r.return=s,s.child=r}function zr(r,s,l,f,g){if(r!==null){var v=r.memoizedProps;if(T3(v,f)&&r.ref===s.ref)if(e1=!1,s.pendingProps=f=v,(r.lanes&g)!==0)r.flags&131072&&(e1=!0);else return s.lanes=r.lanes,f5(r,s,g)}return Xe(r,s,l,f,g)}function Ir(r,s,l){var f=s.pendingProps,g=f.children,v=r!==null?r.memoizedState:null;if(f.mode==="hidden")if(!(s.mode&1))s.memoizedState={baseLanes:0,cachePool:null,transitions:null},G9(G2,p1),p1|=l;else{if(!(l&1073741824))return r=v!==null?v.baseLanes|l:l,s.lanes=s.childLanes=1073741824,s.memoizedState={baseLanes:r,cachePool:null,transitions:null},s.updateQueue=null,G9(G2,p1),p1|=r,null;s.memoizedState={baseLanes:0,cachePool:null,transitions:null},f=v!==null?v.baseLanes:l,G9(G2,p1),p1|=f}else v!==null?(f=v.baseLanes|l,s.memoizedState=null):f=l,G9(G2,p1),p1|=f;return X0(r,s,g,l),s.child}function Rr(r,s){var l=s.ref;(r===null&&l!==null||r!==null&&r.ref!==l)&&(s.flags|=512,s.flags|=2097152)}function Xe(r,s,l,f,g){var v=J0(l)?u2:z0.current;return v=$2(s,v),K2(s,g),l=Le(r,s,l,f,v,g),f=je(),r!==null&&!e1?(s.updateQueue=r.updateQueue,s.flags&=-2053,r.lanes&=~g,f5(r,s,g)):(i0&&f&&xe(s),s.flags|=1,X0(r,s,l,g),s.child)}function Lr(r,s,l,f,g){if(J0(l)){var v=!0;r7(s)}else v=!1;if(K2(s,g),s.stateNode===null)_7(r,s),Ar(s,l,f),qe(s,l,f,g),f=!0;else if(r===null){var _=s.stateNode,M=s.memoizedProps;_.props=M;var N=_.context,$=l.contextType;typeof $=="object"&&$!==null?$=y1($):($=J0(l)?u2:z0.current,$=$2(s,$));var i9=l.getDerivedStateFromProps,s9=typeof i9=="function"||typeof _.getSnapshotBeforeUpdate=="function";s9||typeof _.UNSAFE_componentWillReceiveProps!="function"&&typeof _.componentWillReceiveProps!="function"||(M!==f||N!==$)&&br(s,_,f,$),N5=!1;var r9=s.memoizedState;_.state=r9,h7(s,f,_,g),N=s.memoizedState,M!==f||r9!==N||G0.current||N5?(typeof i9=="function"&&(Ue(s,l,i9,f),N=s.memoizedState),(M=N5||Sr(s,l,M,f,r9,N,$))?(s9||typeof _.UNSAFE_componentWillMount!="function"&&typeof _.componentWillMount!="function"||(typeof _.componentWillMount=="function"&&_.componentWillMount(),typeof _.UNSAFE_componentWillMount=="function"&&_.UNSAFE_componentWillMount()),typeof _.componentDidMount=="function"&&(s.flags|=4194308)):(typeof _.componentDidMount=="function"&&(s.flags|=4194308),s.memoizedProps=f,s.memoizedState=N),_.props=f,_.state=N,_.context=$,f=M):(typeof _.componentDidMount=="function"&&(s.flags|=4194308),f=!1)}else{_=s.stateNode,tr(r,s),M=s.memoizedProps,$=s.type===s.elementType?M:P1(s.type,M),_.props=$,s9=s.pendingProps,r9=_.context,N=l.contextType,typeof N=="object"&&N!==null?N=y1(N):(N=J0(l)?u2:z0.current,N=$2(s,N));var m9=l.getDerivedStateFromProps;(i9=typeof m9=="function"||typeof _.getSnapshotBeforeUpdate=="function")||typeof _.UNSAFE_componentWillReceiveProps!="function"&&typeof _.componentWillReceiveProps!="function"||(M!==s9||r9!==N)&&br(s,_,f,N),N5=!1,r9=s.memoizedState,_.state=r9,h7(s,f,_,g);var w9=s.memoizedState;M!==s9||r9!==w9||G0.current||N5?(typeof m9=="function"&&(Ue(s,l,m9,f),w9=s.memoizedState),($=N5||Sr(s,l,$,f,r9,w9,N)||!1)?(i9||typeof _.UNSAFE_componentWillUpdate!="function"&&typeof _.componentWillUpdate!="function"||(typeof _.componentWillUpdate=="function"&&_.componentWillUpdate(f,w9,N),typeof _.UNSAFE_componentWillUpdate=="function"&&_.UNSAFE_componentWillUpdate(f,w9,N)),typeof _.componentDidUpdate=="function"&&(s.flags|=4),typeof _.getSnapshotBeforeUpdate=="function"&&(s.flags|=1024)):(typeof _.componentDidUpdate!="function"||M===r.memoizedProps&&r9===r.memoizedState||(s.flags|=4),typeof _.getSnapshotBeforeUpdate!="function"||M===r.memoizedProps&&r9===r.memoizedState||(s.flags|=1024),s.memoizedProps=f,s.memoizedState=w9),_.props=f,_.state=w9,_.context=N,f=$):(typeof _.componentDidUpdate!="function"||M===r.memoizedProps&&r9===r.memoizedState||(s.flags|=4),typeof _.getSnapshotBeforeUpdate!="function"||M===r.memoizedProps&&r9===r.memoizedState||(s.flags|=1024),f=!1)}return Qe(r,s,l,f,v,g)}function Qe(r,s,l,f,g,v){Rr(r,s);var _=(s.flags&128)!==0;if(!f&&!_)return g&&Wn(s,l,!1),f5(r,s,v);f=s.stateNode,ml.current=s;var M=_&&typeof l.getDerivedStateFromError!="function"?null:f.render();return s.flags|=1,r!==null&&_?(s.child=q2(s,r.child,null,v),s.child=q2(s,null,M,v)):X0(r,s,M,v),s.memoizedState=f.state,g&&Wn(s,l,!0),s.child}function jr(r){var s=r.stateNode;s.pendingContext?$n(r,s.pendingContext,s.pendingContext!==s.context):s.context&&$n(r,s.context,!1),Te(r,s.containerInfo)}function Hr(r,s,l,f,g){return U2(),Se(g),s.flags|=256,X0(r,s,l,f),s.child}var Ze={dehydrated:null,treeContext:null,retryLane:0};function Ge(r){return{baseLanes:r,cachePool:null,transitions:null}}function $r(r,s,l){var f=s.pendingProps,g=o0.current,v=!1,_=(s.flags&128)!==0,M;if((M=_)||(M=r!==null&&r.memoizedState===null?!1:(g&2)!==0),M?(v=!0,s.flags&=-129):(r===null||r.memoizedState!==null)&&(g|=1),G9(o0,g&1),r===null)return Fe(s),r=s.memoizedState,r!==null&&(r=r.dehydrated,r!==null)?(s.mode&1?r.data==="$!"?s.lanes=8:s.lanes=1073741824:s.lanes=1,null):(_=f.children,r=f.fallback,v?(f=s.mode,v=s.child,_={mode:"hidden",children:_},!(f&1)&&v!==null?(v.childLanes=0,v.pendingProps=_):v=T7(_,f,0,null),r=v2(r,f,l,null),v.return=s,r.return=s,v.sibling=r,s.child=v,s.child.memoizedState=Ge(l),s.memoizedState=Ze,r):Je(s,_));if(g=r.memoizedState,g!==null&&(M=g.dehydrated,M!==null))return vl(r,s,_,f,M,g,l);if(v){v=f.fallback,_=s.mode,g=r.child,M=g.sibling;var N={mode:"hidden",children:f.children};return!(_&1)&&s.child!==g?(f=s.child,f.childLanes=0,f.pendingProps=N,s.deletions=null):(f=L5(g,N),f.subtreeFlags=g.subtreeFlags&14680064),M!==null?v=L5(M,v):(v=v2(v,_,l,null),v.flags|=2),v.return=s,f.return=s,f.sibling=v,s.child=f,f=v,v=s.child,_=r.child.memoizedState,_=_===null?Ge(l):{baseLanes:_.baseLanes|l,cachePool:null,transitions:_.transitions},v.memoizedState=_,v.childLanes=r.childLanes&~l,s.memoizedState=Ze,f}return v=r.child,r=v.sibling,f=L5(v,{mode:"visible",children:f.children}),!(s.mode&1)&&(f.lanes=l),f.return=s,f.sibling=null,r!==null&&(l=s.deletions,l===null?(s.deletions=[r],s.flags|=16):l.push(r)),s.child=f,s.memoizedState=null,f}function Je(r,s){return s=T7({mode:"visible",children:s},r.mode,0,null),s.return=r,r.child=s}function w7(r,s,l,f){return f!==null&&Se(f),q2(s,r.child,null,l),r=Je(s,s.pendingProps.children),r.flags|=2,s.memoizedState=null,r}function vl(r,s,l,f,g,v,_){if(l)return s.flags&256?(s.flags&=-257,f=Ye(Error(n(422))),w7(r,s,_,f)):s.memoizedState!==null?(s.child=r.child,s.flags|=128,null):(v=f.fallback,g=s.mode,f=T7({mode:"visible",children:f.children},g,0,null),v=v2(v,g,_,null),v.flags|=2,f.return=s,v.return=s,f.sibling=v,s.child=f,s.mode&1&&q2(s,r.child,null,_),s.child.memoizedState=Ge(_),s.memoizedState=Ze,v);if(!(s.mode&1))return w7(r,s,_,null);if(g.data==="$!"){if(f=g.nextSibling&&g.nextSibling.dataset,f)var M=f.dgst;return f=M,v=Error(n(419)),f=Ye(v,f,void 0),w7(r,s,_,f)}if(M=(_&r.childLanes)!==0,e1||M){if(f=C0,f!==null){switch(_&-_){case 4:g=2;break;case 16:g=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:g=32;break;case 536870912:g=268435456;break;default:g=0}g=g&(f.suspendedLanes|_)?0:g,g!==0&&g!==v.retryLane&&(v.retryLane=g,l5(r,g),I1(f,r,g,-1))}return g8(),f=Ye(Error(n(421))),w7(r,s,_,f)}return g.data==="$?"?(s.flags|=128,s.child=r.child,s=kl.bind(null,r),g._reactRetry=s,null):(r=v.treeContext,d1=b5(g.nextSibling),h1=s,i0=!0,T1=null,r!==null&&(m1[v1++]=u5,m1[v1++]=a5,m1[v1++]=a2,u5=r.id,a5=r.overflow,a2=s),s=Je(s,f.children),s.flags|=4096,s)}function Vr(r,s,l){r.lanes|=s;var f=r.alternate;f!==null&&(f.lanes|=s),ke(r.return,s,l)}function e8(r,s,l,f,g){var v=r.memoizedState;v===null?r.memoizedState={isBackwards:s,rendering:null,renderingStartTime:0,last:f,tail:l,tailMode:g}:(v.isBackwards=s,v.rendering=null,v.renderingStartTime=0,v.last=f,v.tail=l,v.tailMode=g)}function Wr(r,s,l){var f=s.pendingProps,g=f.revealOrder,v=f.tail;if(X0(r,s,f.children,l),f=o0.current,f&2)f=f&1|2,s.flags|=128;else{if(r!==null&&r.flags&128)e:for(r=s.child;r!==null;){if(r.tag===13)r.memoizedState!==null&&Vr(r,l,s);else if(r.tag===19)Vr(r,l,s);else if(r.child!==null){r.child.return=r,r=r.child;continue}if(r===s)break e;for(;r.sibling===null;){if(r.return===null||r.return===s)break e;r=r.return}r.sibling.return=r.return,r=r.sibling}f&=1}if(G9(o0,f),!(s.mode&1))s.memoizedState=null;else switch(g){case"forwards":for(l=s.child,g=null;l!==null;)r=l.alternate,r!==null&&d7(r)===null&&(g=l),l=l.sibling;l=g,l===null?(g=s.child,s.child=null):(g=l.sibling,l.sibling=null),e8(s,!1,g,l,v);break;case"backwards":for(l=null,g=s.child,s.child=null;g!==null;){if(r=g.alternate,r!==null&&d7(r)===null){s.child=g;break}r=g.sibling,g.sibling=l,l=g,g=r}e8(s,!0,l,null,v);break;case"together":e8(s,!1,null,null,void 0);break;default:s.memoizedState=null}return s.child}function _7(r,s){!(s.mode&1)&&r!==null&&(r.alternate=null,s.alternate=null,s.flags|=2)}function f5(r,s,l){if(r!==null&&(s.dependencies=r.dependencies),d2|=s.lanes,!(l&s.childLanes))return null;if(r!==null&&s.child!==r.child)throw Error(n(153));if(s.child!==null){for(r=s.child,l=L5(r,r.pendingProps),s.child=l,l.return=s;r.sibling!==null;)r=r.sibling,l=l.sibling=L5(r,r.pendingProps),l.return=s;l.sibling=null}return s.child}function yl(r,s,l){switch(s.tag){case 3:jr(s),U2();break;case 5:ir(s);break;case 1:J0(s.type)&&r7(s);break;case 4:Te(s,s.stateNode.containerInfo);break;case 10:var f=s.type._context,g=s.memoizedProps.value;G9(l7,f._currentValue),f._currentValue=g;break;case 13:if(f=s.memoizedState,f!==null)return f.dehydrated!==null?(G9(o0,o0.current&1),s.flags|=128,null):l&s.child.childLanes?$r(r,s,l):(G9(o0,o0.current&1),r=f5(r,s,l),r!==null?r.sibling:null);G9(o0,o0.current&1);break;case 19:if(f=(l&s.childLanes)!==0,r.flags&128){if(f)return Wr(r,s,l);s.flags|=128}if(g=s.memoizedState,g!==null&&(g.rendering=null,g.tail=null,g.lastEffect=null),G9(o0,o0.current),f)break;return null;case 22:case 23:return s.lanes=0,Ir(r,s,l)}return f5(r,s,l)}var Ur,t8,qr,Yr;Ur=function(r,s){for(var l=s.child;l!==null;){if(l.tag===5||l.tag===6)r.appendChild(l.stateNode);else if(l.tag!==4&&l.child!==null){l.child.return=l,l=l.child;continue}if(l===s)break;for(;l.sibling===null;){if(l.return===null||l.return===s)return;l=l.return}l.sibling.return=l.return,l=l.sibling}},t8=function(){},qr=function(r,s,l,f){var g=r.memoizedProps;if(g!==f){r=s.stateNode,f2(X1.current);var v=null;switch(l){case"input":g=a0(r,g),f=a0(r,f),v=[];break;case"select":g=X({},g,{value:void 0}),f=X({},f,{value:void 0}),v=[];break;case"textarea":g=k2(r,g),f=k2(r,f),v=[];break;default:typeof g.onClick!="function"&&typeof f.onClick=="function"&&(r.onclick=e7)}x0(l,f);var _;l=null;for($ in g)if(!f.hasOwnProperty($)&&g.hasOwnProperty($)&&g[$]!=null)if($==="style"){var M=g[$];for(_ in M)M.hasOwnProperty(_)&&(l||(l={}),l[_]="")}else $!=="dangerouslySetInnerHTML"&&$!=="children"&&$!=="suppressContentEditableWarning"&&$!=="suppressHydrationWarning"&&$!=="autoFocus"&&(o.hasOwnProperty($)?v||(v=[]):(v=v||[]).push($,null));for($ in f){var N=f[$];if(M=g!=null?g[$]:void 0,f.hasOwnProperty($)&&N!==M&&(N!=null||M!=null))if($==="style")if(M){for(_ in M)!M.hasOwnProperty(_)||N&&N.hasOwnProperty(_)||(l||(l={}),l[_]="");for(_ in N)N.hasOwnProperty(_)&&M[_]!==N[_]&&(l||(l={}),l[_]=N[_])}else l||(v||(v=[]),v.push($,l)),l=N;else $==="dangerouslySetInnerHTML"?(N=N?N.__html:void 0,M=M?M.__html:void 0,N!=null&&M!==N&&(v=v||[]).push($,N)):$==="children"?typeof N!="string"&&typeof N!="number"||(v=v||[]).push($,""+N):$!=="suppressContentEditableWarning"&&$!=="suppressHydrationWarning"&&(o.hasOwnProperty($)?(N!=null&&$==="onScroll"&&e0("scroll",r),v||M===N||(v=[])):(v=v||[]).push($,N))}l&&(v=v||[]).push("style",l);var $=v;(s.updateQueue=$)&&(s.flags|=4)}},Yr=function(r,s,l,f){l!==f&&(s.flags|=4)};function K3(r,s){if(!i0)switch(r.tailMode){case"hidden":s=r.tail;for(var l=null;s!==null;)s.alternate!==null&&(l=s),s=s.sibling;l===null?r.tail=null:l.sibling=null;break;case"collapsed":l=r.tail;for(var f=null;l!==null;)l.alternate!==null&&(f=l),l=l.sibling;f===null?s||r.tail===null?r.tail=null:r.tail.sibling=null:f.sibling=null}}function R0(r){var s=r.alternate!==null&&r.alternate.child===r.child,l=0,f=0;if(s)for(var g=r.child;g!==null;)l|=g.lanes|g.childLanes,f|=g.subtreeFlags&14680064,f|=g.flags&14680064,g.return=r,g=g.sibling;else for(g=r.child;g!==null;)l|=g.lanes|g.childLanes,f|=g.subtreeFlags,f|=g.flags,g.return=r,g=g.sibling;return r.subtreeFlags|=f,r.childLanes=l,s}function Dl(r,s,l){var f=s.pendingProps;switch(Ee(s),s.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return R0(s),null;case 1:return J0(s.type)&&n7(),R0(s),null;case 3:return f=s.stateNode,X2(),t0(G0),t0(z0),ze(),f.pendingContext&&(f.context=f.pendingContext,f.pendingContext=null),(r===null||r.child===null)&&(u7(s)?s.flags|=4:r===null||r.memoizedState.isDehydrated&&!(s.flags&256)||(s.flags|=1024,T1!==null&&(h8(T1),T1=null))),t8(r,s),R0(s),null;case 5:Pe(s);var g=f2(V3.current);if(l=s.type,r!==null&&s.stateNode!=null)qr(r,s,l,f,g),r.ref!==s.ref&&(s.flags|=512,s.flags|=2097152);else{if(!f){if(s.stateNode===null)throw Error(n(166));return R0(s),null}if(r=f2(X1.current),u7(s)){f=s.stateNode,l=s.type;var v=s.memoizedProps;switch(f[K1]=s,f[R3]=v,r=(s.mode&1)!==0,l){case"dialog":e0("cancel",f),e0("close",f);break;case"iframe":case"object":case"embed":e0("load",f);break;case"video":case"audio":for(g=0;g<O3.length;g++)e0(O3[g],f);break;case"source":e0("error",f);break;case"img":case"image":case"link":e0("error",f),e0("load",f);break;case"details":e0("toggle",f);break;case"input":q0(f,v),e0("invalid",f);break;case"select":f._wrapperState={wasMultiple:!!v.multiple},e0("invalid",f);break;case"textarea":b(f,v),e0("invalid",f)}x0(l,v),g=null;for(var _ in v)if(v.hasOwnProperty(_)){var M=v[_];_==="children"?typeof M=="string"?f.textContent!==M&&(v.suppressHydrationWarning!==!0&&J6(f.textContent,M,r),g=["children",M]):typeof M=="number"&&f.textContent!==""+M&&(v.suppressHydrationWarning!==!0&&J6(f.textContent,M,r),g=["children",""+M]):o.hasOwnProperty(_)&&M!=null&&_==="onScroll"&&e0("scroll",f)}switch(l){case"input":k0(f),n5(f,v,!0);break;case"textarea":k0(f),V(f);break;case"select":case"option":break;default:typeof v.onClick=="function"&&(f.onclick=e7)}f=g,s.updateQueue=f,f!==null&&(s.flags|=4)}else{_=g.nodeType===9?g:g.ownerDocument,r==="http://www.w3.org/1999/xhtml"&&(r=Q(l)),r==="http://www.w3.org/1999/xhtml"?l==="script"?(r=_.createElement("div"),r.innerHTML="<script><\/script>",r=r.removeChild(r.firstChild)):typeof f.is=="string"?r=_.createElement(l,{is:f.is}):(r=_.createElement(l),l==="select"&&(_=r,f.multiple?_.multiple=!0:f.size&&(_.size=f.size))):r=_.createElementNS(r,l),r[K1]=s,r[R3]=f,Ur(r,s,!1,!1),s.stateNode=r;e:{switch(_=v0(l,f),l){case"dialog":e0("cancel",r),e0("close",r),g=f;break;case"iframe":case"object":case"embed":e0("load",r),g=f;break;case"video":case"audio":for(g=0;g<O3.length;g++)e0(O3[g],r);g=f;break;case"source":e0("error",r),g=f;break;case"img":case"image":case"link":e0("error",r),e0("load",r),g=f;break;case"details":e0("toggle",r),g=f;break;case"input":q0(r,f),g=a0(r,f),e0("invalid",r);break;case"option":g=f;break;case"select":r._wrapperState={wasMultiple:!!f.multiple},g=X({},f,{value:void 0}),e0("invalid",r);break;case"textarea":b(r,f),g=k2(r,f),e0("invalid",r);break;default:g=f}x0(l,g),M=g;for(v in M)if(M.hasOwnProperty(v)){var N=M[v];v==="style"?U9(r,N):v==="dangerouslySetInnerHTML"?(N=N?N.__html:void 0,N!=null&&p9(r,N)):v==="children"?typeof N=="string"?(l!=="textarea"||N!=="")&&u9(r,N):typeof N=="number"&&u9(r,""+N):v!=="suppressContentEditableWarning"&&v!=="suppressHydrationWarning"&&v!=="autoFocus"&&(o.hasOwnProperty(v)?N!=null&&v==="onScroll"&&e0("scroll",r):N!=null&&A(r,v,N,_))}switch(l){case"input":k0(r),n5(r,f,!1);break;case"textarea":k0(r),V(r);break;case"option":f.value!=null&&r.setAttribute("value",""+O9(f.value));break;case"select":r.multiple=!!f.multiple,v=f.value,v!=null?w5(r,!!f.multiple,v,!1):f.defaultValue!=null&&w5(r,!!f.multiple,f.defaultValue,!0);break;default:typeof g.onClick=="function"&&(r.onclick=e7)}switch(l){case"button":case"input":case"select":case"textarea":f=!!f.autoFocus;break e;case"img":f=!0;break e;default:f=!1}}f&&(s.flags|=4)}s.ref!==null&&(s.flags|=512,s.flags|=2097152)}return R0(s),null;case 6:if(r&&s.stateNode!=null)Yr(r,s,r.memoizedProps,f);else{if(typeof f!="string"&&s.stateNode===null)throw Error(n(166));if(l=f2(V3.current),f2(X1.current),u7(s)){if(f=s.stateNode,l=s.memoizedProps,f[K1]=s,(v=f.nodeValue!==l)&&(r=h1,r!==null))switch(r.tag){case 3:J6(f.nodeValue,l,(r.mode&1)!==0);break;case 5:r.memoizedProps.suppressHydrationWarning!==!0&&J6(f.nodeValue,l,(r.mode&1)!==0)}v&&(s.flags|=4)}else f=(l.nodeType===9?l:l.ownerDocument).createTextNode(f),f[K1]=s,s.stateNode=f}return R0(s),null;case 13:if(t0(o0),f=s.memoizedState,r===null||r.memoizedState!==null&&r.memoizedState.dehydrated!==null){if(i0&&d1!==null&&s.mode&1&&!(s.flags&128))Qn(),U2(),s.flags|=98560,v=!1;else if(v=u7(s),f!==null&&f.dehydrated!==null){if(r===null){if(!v)throw Error(n(318));if(v=s.memoizedState,v=v!==null?v.dehydrated:null,!v)throw Error(n(317));v[K1]=s}else U2(),!(s.flags&128)&&(s.memoizedState=null),s.flags|=4;R0(s),v=!1}else T1!==null&&(h8(T1),T1=null),v=!0;if(!v)return s.flags&65536?s:null}return s.flags&128?(s.lanes=l,s):(f=f!==null,f!==(r!==null&&r.memoizedState!==null)&&f&&(s.child.flags|=8192,s.mode&1&&(r===null||o0.current&1?D0===0&&(D0=3):g8())),s.updateQueue!==null&&(s.flags|=4),R0(s),null);case 4:return X2(),t8(r,s),r===null&&z3(s.stateNode.containerInfo),R0(s),null;case 10:return Me(s.type._context),R0(s),null;case 17:return J0(s.type)&&n7(),R0(s),null;case 19:if(t0(o0),v=s.memoizedState,v===null)return R0(s),null;if(f=(s.flags&128)!==0,_=v.rendering,_===null)if(f)K3(v,!1);else{if(D0!==0||r!==null&&r.flags&128)for(r=s.child;r!==null;){if(_=d7(r),_!==null){for(s.flags|=128,K3(v,!1),f=_.updateQueue,f!==null&&(s.updateQueue=f,s.flags|=4),s.subtreeFlags=0,f=l,l=s.child;l!==null;)v=l,r=f,v.flags&=14680066,_=v.alternate,_===null?(v.childLanes=0,v.lanes=r,v.child=null,v.subtreeFlags=0,v.memoizedProps=null,v.memoizedState=null,v.updateQueue=null,v.dependencies=null,v.stateNode=null):(v.childLanes=_.childLanes,v.lanes=_.lanes,v.child=_.child,v.subtreeFlags=0,v.deletions=null,v.memoizedProps=_.memoizedProps,v.memoizedState=_.memoizedState,v.updateQueue=_.updateQueue,v.type=_.type,r=_.dependencies,v.dependencies=r===null?null:{lanes:r.lanes,firstContext:r.firstContext}),l=l.sibling;return G9(o0,o0.current&1|2),s.child}r=r.sibling}v.tail!==null&&B9()>J2&&(s.flags|=128,f=!0,K3(v,!1),s.lanes=4194304)}else{if(!f)if(r=d7(_),r!==null){if(s.flags|=128,f=!0,l=r.updateQueue,l!==null&&(s.updateQueue=l,s.flags|=4),K3(v,!0),v.tail===null&&v.tailMode==="hidden"&&!_.alternate&&!i0)return R0(s),null}else 2*B9()-v.renderingStartTime>J2&&l!==1073741824&&(s.flags|=128,f=!0,K3(v,!1),s.lanes=4194304);v.isBackwards?(_.sibling=s.child,s.child=_):(l=v.last,l!==null?l.sibling=_:s.child=_,v.last=_)}return v.tail!==null?(s=v.tail,v.rendering=s,v.tail=s.sibling,v.renderingStartTime=B9(),s.sibling=null,l=o0.current,G9(o0,f?l&1|2:l&1),s):(R0(s),null);case 22:case 23:return p8(),f=s.memoizedState!==null,r!==null&&r.memoizedState!==null!==f&&(s.flags|=8192),f&&s.mode&1?p1&1073741824&&(R0(s),s.subtreeFlags&6&&(s.flags|=8192)):R0(s),null;case 24:return null;case 25:return null}throw Error(n(156,s.tag))}function wl(r,s){switch(Ee(s),s.tag){case 1:return J0(s.type)&&n7(),r=s.flags,r&65536?(s.flags=r&-65537|128,s):null;case 3:return X2(),t0(G0),t0(z0),ze(),r=s.flags,r&65536&&!(r&128)?(s.flags=r&-65537|128,s):null;case 5:return Pe(s),null;case 13:if(t0(o0),r=s.memoizedState,r!==null&&r.dehydrated!==null){if(s.alternate===null)throw Error(n(340));U2()}return r=s.flags,r&65536?(s.flags=r&-65537|128,s):null;case 19:return t0(o0),null;case 4:return X2(),null;case 10:return Me(s.type._context),null;case 22:case 23:return p8(),null;case 24:return null;default:return null}}var x7=!1,L0=!1,_l=typeof WeakSet=="function"?WeakSet:Set,y9=null;function Z2(r,s){var l=r.ref;if(l!==null)if(typeof l=="function")try{l(null)}catch(f){c0(r,s,f)}else l.current=null}function n8(r,s,l){try{l()}catch(f){c0(r,s,f)}}var Kr=!1;function xl(r,s){if(pe=$6,r=Sn(),oe(r)){if("selectionStart"in r)var l={start:r.selectionStart,end:r.selectionEnd};else e:{l=(l=r.ownerDocument)&&l.defaultView||window;var f=l.getSelection&&l.getSelection();if(f&&f.rangeCount!==0){l=f.anchorNode;var g=f.anchorOffset,v=f.focusNode;f=f.focusOffset;try{l.nodeType,v.nodeType}catch{l=null;break e}var _=0,M=-1,N=-1,$=0,i9=0,s9=r,r9=null;t:for(;;){for(var m9;s9!==l||g!==0&&s9.nodeType!==3||(M=_+g),s9!==v||f!==0&&s9.nodeType!==3||(N=_+f),s9.nodeType===3&&(_+=s9.nodeValue.length),(m9=s9.firstChild)!==null;)r9=s9,s9=m9;for(;;){if(s9===r)break t;if(r9===l&&++$===g&&(M=_),r9===v&&++i9===f&&(N=_),(m9=s9.nextSibling)!==null)break;s9=r9,r9=s9.parentNode}s9=m9}l=M===-1||N===-1?null:{start:M,end:N}}else l=null}l=l||{start:0,end:0}}else l=null;for(ge={focusedElem:r,selectionRange:l},$6=!1,y9=s;y9!==null;)if(s=y9,r=s.child,(s.subtreeFlags&1028)!==0&&r!==null)r.return=s,y9=r;else for(;y9!==null;){s=y9;try{var w9=s.alternate;if(s.flags&1024)switch(s.tag){case 0:case 11:case 15:break;case 1:if(w9!==null){var x9=w9.memoizedProps,h0=w9.memoizedState,L=s.stateNode,z=L.getSnapshotBeforeUpdate(s.elementType===s.type?x9:P1(s.type,x9),h0);L.__reactInternalSnapshotBeforeUpdate=z}break;case 3:var j=s.stateNode.containerInfo;j.nodeType===1?j.textContent="":j.nodeType===9&&j.documentElement&&j.removeChild(j.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(n(163))}}catch(c9){c0(s,s.return,c9)}if(r=s.sibling,r!==null){r.return=s.return,y9=r;break}y9=s.return}return w9=Kr,Kr=!1,w9}function X3(r,s,l){var f=s.updateQueue;if(f=f!==null?f.lastEffect:null,f!==null){var g=f=f.next;do{if((g.tag&r)===r){var v=g.destroy;g.destroy=void 0,v!==void 0&&n8(s,l,v)}g=g.next}while(g!==f)}}function E7(r,s){if(s=s.updateQueue,s=s!==null?s.lastEffect:null,s!==null){var l=s=s.next;do{if((l.tag&r)===r){var f=l.create;l.destroy=f()}l=l.next}while(l!==s)}}function r8(r){var s=r.ref;if(s!==null){var l=r.stateNode;switch(r.tag){case 5:r=l;break;default:r=l}typeof s=="function"?s(r):s.current=r}}function Xr(r){var s=r.alternate;s!==null&&(r.alternate=null,Xr(s)),r.child=null,r.deletions=null,r.sibling=null,r.tag===5&&(s=r.stateNode,s!==null&&(delete s[K1],delete s[R3],delete s[De],delete s[il],delete s[sl])),r.stateNode=null,r.return=null,r.dependencies=null,r.memoizedProps=null,r.memoizedState=null,r.pendingProps=null,r.stateNode=null,r.updateQueue=null}function Qr(r){return r.tag===5||r.tag===3||r.tag===4}function Zr(r){e:for(;;){for(;r.sibling===null;){if(r.return===null||Qr(r.return))return null;r=r.return}for(r.sibling.return=r.return,r=r.sibling;r.tag!==5&&r.tag!==6&&r.tag!==18;){if(r.flags&2||r.child===null||r.tag===4)continue e;r.child.return=r,r=r.child}if(!(r.flags&2))return r.stateNode}}function i8(r,s,l){var f=r.tag;if(f===5||f===6)r=r.stateNode,s?l.nodeType===8?l.parentNode.insertBefore(r,s):l.insertBefore(r,s):(l.nodeType===8?(s=l.parentNode,s.insertBefore(r,l)):(s=l,s.appendChild(r)),l=l._reactRootContainer,l!=null||s.onclick!==null||(s.onclick=e7));else if(f!==4&&(r=r.child,r!==null))for(i8(r,s,l),r=r.sibling;r!==null;)i8(r,s,l),r=r.sibling}function s8(r,s,l){var f=r.tag;if(f===5||f===6)r=r.stateNode,s?l.insertBefore(r,s):l.appendChild(r);else if(f!==4&&(r=r.child,r!==null))for(s8(r,s,l),r=r.sibling;r!==null;)s8(r,s,l),r=r.sibling}var B0=null,O1=!1;function P5(r,s,l){for(l=l.child;l!==null;)Gr(r,s,l),l=l.sibling}function Gr(r,s,l){if(Y1&&typeof Y1.onCommitFiberUnmount=="function")try{Y1.onCommitFiberUnmount(z6,l)}catch{}switch(l.tag){case 5:L0||Z2(l,s);case 6:var f=B0,g=O1;B0=null,P5(r,s,l),B0=f,O1=g,B0!==null&&(O1?(r=B0,l=l.stateNode,r.nodeType===8?r.parentNode.removeChild(l):r.removeChild(l)):B0.removeChild(l.stateNode));break;case 18:B0!==null&&(O1?(r=B0,l=l.stateNode,r.nodeType===8?ye(r.parentNode,l):r.nodeType===1&&ye(r,l),A3(r)):ye(B0,l.stateNode));break;case 4:f=B0,g=O1,B0=l.stateNode.containerInfo,O1=!0,P5(r,s,l),B0=f,O1=g;break;case 0:case 11:case 14:case 15:if(!L0&&(f=l.updateQueue,f!==null&&(f=f.lastEffect,f!==null))){g=f=f.next;do{var v=g,_=v.destroy;v=v.tag,_!==void 0&&(v&2||v&4)&&n8(l,s,_),g=g.next}while(g!==f)}P5(r,s,l);break;case 1:if(!L0&&(Z2(l,s),f=l.stateNode,typeof f.componentWillUnmount=="function"))try{f.props=l.memoizedProps,f.state=l.memoizedState,f.componentWillUnmount()}catch(M){c0(l,s,M)}P5(r,s,l);break;case 21:P5(r,s,l);break;case 22:l.mode&1?(L0=(f=L0)||l.memoizedState!==null,P5(r,s,l),L0=f):P5(r,s,l);break;default:P5(r,s,l)}}function Jr(r){var s=r.updateQueue;if(s!==null){r.updateQueue=null;var l=r.stateNode;l===null&&(l=r.stateNode=new _l),s.forEach(function(f){var g=Bl.bind(null,r,f);l.has(f)||(l.add(f),f.then(g,g))})}}function z1(r,s){var l=s.deletions;if(l!==null)for(var f=0;f<l.length;f++){var g=l[f];try{var v=r,_=s,M=_;e:for(;M!==null;){switch(M.tag){case 5:B0=M.stateNode,O1=!1;break e;case 3:B0=M.stateNode.containerInfo,O1=!0;break e;case 4:B0=M.stateNode.containerInfo,O1=!0;break e}M=M.return}if(B0===null)throw Error(n(160));Gr(v,_,g),B0=null,O1=!1;var N=g.alternate;N!==null&&(N.return=null),g.return=null}catch($){c0(g,s,$)}}if(s.subtreeFlags&12854)for(s=s.child;s!==null;)ei(s,r),s=s.sibling}function ei(r,s){var l=r.alternate,f=r.flags;switch(r.tag){case 0:case 11:case 14:case 15:if(z1(s,r),Z1(r),f&4){try{X3(3,r,r.return),E7(3,r)}catch(x9){c0(r,r.return,x9)}try{X3(5,r,r.return)}catch(x9){c0(r,r.return,x9)}}break;case 1:z1(s,r),Z1(r),f&512&&l!==null&&Z2(l,l.return);break;case 5:if(z1(s,r),Z1(r),f&512&&l!==null&&Z2(l,l.return),r.flags&32){var g=r.stateNode;try{u9(g,"")}catch(x9){c0(r,r.return,x9)}}if(f&4&&(g=r.stateNode,g!=null)){var v=r.memoizedProps,_=l!==null?l.memoizedProps:v,M=r.type,N=r.updateQueue;if(r.updateQueue=null,N!==null)try{M==="input"&&v.type==="radio"&&v.name!=null&&g1(g,v),v0(M,_);var $=v0(M,v);for(_=0;_<N.length;_+=2){var i9=N[_],s9=N[_+1];i9==="style"?U9(g,s9):i9==="dangerouslySetInnerHTML"?p9(g,s9):i9==="children"?u9(g,s9):A(g,i9,s9,$)}switch(M){case"input":c1(g,v);break;case"textarea":R(g,v);break;case"select":var r9=g._wrapperState.wasMultiple;g._wrapperState.wasMultiple=!!v.multiple;var m9=v.value;m9!=null?w5(g,!!v.multiple,m9,!1):r9!==!!v.multiple&&(v.defaultValue!=null?w5(g,!!v.multiple,v.defaultValue,!0):w5(g,!!v.multiple,v.multiple?[]:"",!1))}g[R3]=v}catch(x9){c0(r,r.return,x9)}}break;case 6:if(z1(s,r),Z1(r),f&4){if(r.stateNode===null)throw Error(n(162));g=r.stateNode,v=r.memoizedProps;try{g.nodeValue=v}catch(x9){c0(r,r.return,x9)}}break;case 3:if(z1(s,r),Z1(r),f&4&&l!==null&&l.memoizedState.isDehydrated)try{A3(s.containerInfo)}catch(x9){c0(r,r.return,x9)}break;case 4:z1(s,r),Z1(r);break;case 13:z1(s,r),Z1(r),g=r.child,g.flags&8192&&(v=g.memoizedState!==null,g.stateNode.isHidden=v,!v||g.alternate!==null&&g.alternate.memoizedState!==null||(a8=B9())),f&4&&Jr(r);break;case 22:if(i9=l!==null&&l.memoizedState!==null,r.mode&1?(L0=($=L0)||i9,z1(s,r),L0=$):z1(s,r),Z1(r),f&8192){if($=r.memoizedState!==null,(r.stateNode.isHidden=$)&&!i9&&r.mode&1)for(y9=r,i9=r.child;i9!==null;){for(s9=y9=i9;y9!==null;){switch(r9=y9,m9=r9.child,r9.tag){case 0:case 11:case 14:case 15:X3(4,r9,r9.return);break;case 1:Z2(r9,r9.return);var w9=r9.stateNode;if(typeof w9.componentWillUnmount=="function"){f=r9,l=r9.return;try{s=f,w9.props=s.memoizedProps,w9.state=s.memoizedState,w9.componentWillUnmount()}catch(x9){c0(f,l,x9)}}break;case 5:Z2(r9,r9.return);break;case 22:if(r9.memoizedState!==null){ri(s9);continue}}m9!==null?(m9.return=r9,y9=m9):ri(s9)}i9=i9.sibling}e:for(i9=null,s9=r;;){if(s9.tag===5){if(i9===null){i9=s9;try{g=s9.stateNode,$?(v=g.style,typeof v.setProperty=="function"?v.setProperty("display","none","important"):v.display="none"):(M=s9.stateNode,N=s9.memoizedProps.style,_=N!=null&&N.hasOwnProperty("display")?N.display:null,M.style.display=W9("display",_))}catch(x9){c0(r,r.return,x9)}}}else if(s9.tag===6){if(i9===null)try{s9.stateNode.nodeValue=$?"":s9.memoizedProps}catch(x9){c0(r,r.return,x9)}}else if((s9.tag!==22&&s9.tag!==23||s9.memoizedState===null||s9===r)&&s9.child!==null){s9.child.return=s9,s9=s9.child;continue}if(s9===r)break e;for(;s9.sibling===null;){if(s9.return===null||s9.return===r)break e;i9===s9&&(i9=null),s9=s9.return}i9===s9&&(i9=null),s9.sibling.return=s9.return,s9=s9.sibling}}break;case 19:z1(s,r),Z1(r),f&4&&Jr(r);break;case 21:break;default:z1(s,r),Z1(r)}}function Z1(r){var s=r.flags;if(s&2){try{e:{for(var l=r.return;l!==null;){if(Qr(l)){var f=l;break e}l=l.return}throw Error(n(160))}switch(f.tag){case 5:var g=f.stateNode;f.flags&32&&(u9(g,""),f.flags&=-33);var v=Zr(r);s8(r,v,g);break;case 3:case 4:var _=f.stateNode.containerInfo,M=Zr(r);i8(r,M,_);break;default:throw Error(n(161))}}catch(N){c0(r,r.return,N)}r.flags&=-3}s&4096&&(r.flags&=-4097)}function El(r,s,l){y9=r,ti(r)}function ti(r,s,l){for(var f=(r.mode&1)!==0;y9!==null;){var g=y9,v=g.child;if(g.tag===22&&f){var _=g.memoizedState!==null||x7;if(!_){var M=g.alternate,N=M!==null&&M.memoizedState!==null||L0;M=x7;var $=L0;if(x7=_,(L0=N)&&!$)for(y9=g;y9!==null;)_=y9,N=_.child,_.tag===22&&_.memoizedState!==null?ii(g):N!==null?(N.return=_,y9=N):ii(g);for(;v!==null;)y9=v,ti(v),v=v.sibling;y9=g,x7=M,L0=$}ni(r)}else g.subtreeFlags&8772&&v!==null?(v.return=g,y9=v):ni(r)}}function ni(r){for(;y9!==null;){var s=y9;if(s.flags&8772){var l=s.alternate;try{if(s.flags&8772)switch(s.tag){case 0:case 11:case 15:L0||E7(5,s);break;case 1:var f=s.stateNode;if(s.flags&4&&!L0)if(l===null)f.componentDidMount();else{var g=s.elementType===s.type?l.memoizedProps:P1(s.type,l.memoizedProps);f.componentDidUpdate(g,l.memoizedState,f.__reactInternalSnapshotBeforeUpdate)}var v=s.updateQueue;v!==null&&rr(s,v,f);break;case 3:var _=s.updateQueue;if(_!==null){if(l=null,s.child!==null)switch(s.child.tag){case 5:l=s.child.stateNode;break;case 1:l=s.child.stateNode}rr(s,_,l)}break;case 5:var M=s.stateNode;if(l===null&&s.flags&4){l=M;var N=s.memoizedProps;switch(s.type){case"button":case"input":case"select":case"textarea":N.autoFocus&&l.focus();break;case"img":N.src&&(l.src=N.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(s.memoizedState===null){var $=s.alternate;if($!==null){var i9=$.memoizedState;if(i9!==null){var s9=i9.dehydrated;s9!==null&&A3(s9)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(n(163))}L0||s.flags&512&&r8(s)}catch(r9){c0(s,s.return,r9)}}if(s===r){y9=null;break}if(l=s.sibling,l!==null){l.return=s.return,y9=l;break}y9=s.return}}function ri(r){for(;y9!==null;){var s=y9;if(s===r){y9=null;break}var l=s.sibling;if(l!==null){l.return=s.return,y9=l;break}y9=s.return}}function ii(r){for(;y9!==null;){var s=y9;try{switch(s.tag){case 0:case 11:case 15:var l=s.return;try{E7(4,s)}catch(N){c0(s,l,N)}break;case 1:var f=s.stateNode;if(typeof f.componentDidMount=="function"){var g=s.return;try{f.componentDidMount()}catch(N){c0(s,g,N)}}var v=s.return;try{r8(s)}catch(N){c0(s,v,N)}break;case 5:var _=s.return;try{r8(s)}catch(N){c0(s,_,N)}}}catch(N){c0(s,s.return,N)}if(s===r){y9=null;break}var M=s.sibling;if(M!==null){M.return=s.return,y9=M;break}y9=s.return}}var Cl=Math.ceil,C7=B.ReactCurrentDispatcher,o8=B.ReactCurrentOwner,w1=B.ReactCurrentBatchConfig,L9=0,C0=null,g0=null,N0=0,p1=0,G2=M5(0),D0=0,Q3=null,d2=0,F7=0,u8=0,Z3=null,t1=null,a8=0,J2=1/0,h5=null,S7=!1,l8=null,O5=null,A7=!1,z5=null,b7=0,G3=0,c8=null,M7=-1,k7=0;function Q0(){return L9&6?B9():M7!==-1?M7:M7=B9()}function I5(r){return r.mode&1?L9&2&&N0!==0?N0&-N0:ul.transition!==null?(k7===0&&(k7=Qt()),k7):(r=q9,r!==0||(r=window.event,r=r===void 0?16:on(r.type)),r):1}function I1(r,s,l,f){if(50<G3)throw G3=0,c8=null,Error(n(185));x3(r,l,f),(!(L9&2)||r!==C0)&&(r===C0&&(!(L9&2)&&(F7|=l),D0===4&&R5(r,N0)),n1(r,f),l===1&&L9===0&&!(s.mode&1)&&(J2=B9()+500,i7&&B5()))}function n1(r,s){var l=r.callbackNode;ua(r,s);var f=L6(r,r===C0?N0:0);if(f===0)l!==null&&O6(l),r.callbackNode=null,r.callbackPriority=0;else if(s=f&-f,r.callbackPriority!==s){if(l!=null&&O6(l),s===1)r.tag===0?ol(oi.bind(null,r)):Un(oi.bind(null,r)),nl(function(){!(L9&6)&&B5()}),l=null;else{switch(Zt(f)){case 1:l=w3;break;case 4:l=s2;break;case 16:l=q1;break;case 536870912:l=Xt;break;default:l=q1}l=pi(l,si.bind(null,r))}r.callbackPriority=s,r.callbackNode=l}}function si(r,s){if(M7=-1,k7=0,L9&6)throw Error(n(327));var l=r.callbackNode;if(e3()&&r.callbackNode!==l)return null;var f=L6(r,r===C0?N0:0);if(f===0)return null;if(f&30||f&r.expiredLanes||s)s=B7(r,f);else{s=f;var g=L9;L9|=2;var v=ai();(C0!==r||N0!==s)&&(h5=null,J2=B9()+500,g2(r,s));do try{Al();break}catch(M){ui(r,M)}while(!0);be(),C7.current=v,L9=g,g0!==null?s=0:(C0=null,N0=0,s=D0)}if(s!==0){if(s===2&&(g=W4(r),g!==0&&(f=g,s=f8(r,g))),s===1)throw l=Q3,g2(r,0),R5(r,f),n1(r,B9()),l;if(s===6)R5(r,f);else{if(g=r.current.alternate,!(f&30)&&!Fl(g)&&(s=B7(r,f),s===2&&(v=W4(r),v!==0&&(f=v,s=f8(r,v))),s===1))throw l=Q3,g2(r,0),R5(r,f),n1(r,B9()),l;switch(r.finishedWork=g,r.finishedLanes=f,s){case 0:case 1:throw Error(n(345));case 2:m2(r,t1,h5);break;case 3:if(R5(r,f),(f&130023424)===f&&(s=a8+500-B9(),10<s)){if(L6(r,0)!==0)break;if(g=r.suspendedLanes,(g&f)!==f){Q0(),r.pingedLanes|=r.suspendedLanes&g;break}r.timeoutHandle=ve(m2.bind(null,r,t1,h5),s);break}m2(r,t1,h5);break;case 4:if(R5(r,f),(f&4194240)===f)break;for(s=r.eventTimes,g=-1;0<f;){var _=31-B1(f);v=1<<_,_=s[_],_>g&&(g=_),f&=~v}if(f=g,f=B9()-f,f=(120>f?120:480>f?480:1080>f?1080:1920>f?1920:3e3>f?3e3:4320>f?4320:1960*Cl(f/1960))-f,10<f){r.timeoutHandle=ve(m2.bind(null,r,t1,h5),f);break}m2(r,t1,h5);break;case 5:m2(r,t1,h5);break;default:throw Error(n(329))}}}return n1(r,B9()),r.callbackNode===l?si.bind(null,r):null}function f8(r,s){var l=Z3;return r.current.memoizedState.isDehydrated&&(g2(r,s).flags|=256),r=B7(r,s),r!==2&&(s=t1,t1=l,s!==null&&h8(s)),r}function h8(r){t1===null?t1=r:t1.push.apply(t1,r)}function Fl(r){for(var s=r;;){if(s.flags&16384){var l=s.updateQueue;if(l!==null&&(l=l.stores,l!==null))for(var f=0;f<l.length;f++){var g=l[f],v=g.getSnapshot;g=g.value;try{if(!N1(v(),g))return!1}catch{return!1}}}if(l=s.child,s.subtreeFlags&16384&&l!==null)l.return=s,s=l;else{if(s===r)break;for(;s.sibling===null;){if(s.return===null||s.return===r)return!0;s=s.return}s.sibling.return=s.return,s=s.sibling}}return!0}function R5(r,s){for(s&=~u8,s&=~F7,r.suspendedLanes|=s,r.pingedLanes&=~s,r=r.expirationTimes;0<s;){var l=31-B1(s),f=1<<l;r[l]=-1,s&=~f}}function oi(r){if(L9&6)throw Error(n(327));e3();var s=L6(r,0);if(!(s&1))return n1(r,B9()),null;var l=B7(r,s);if(r.tag!==0&&l===2){var f=W4(r);f!==0&&(s=f,l=f8(r,f))}if(l===1)throw l=Q3,g2(r,0),R5(r,s),n1(r,B9()),l;if(l===6)throw Error(n(345));return r.finishedWork=r.current.alternate,r.finishedLanes=s,m2(r,t1,h5),n1(r,B9()),null}function d8(r,s){var l=L9;L9|=1;try{return r(s)}finally{L9=l,L9===0&&(J2=B9()+500,i7&&B5())}}function p2(r){z5!==null&&z5.tag===0&&!(L9&6)&&e3();var s=L9;L9|=1;var l=w1.transition,f=q9;try{if(w1.transition=null,q9=1,r)return r()}finally{q9=f,w1.transition=l,L9=s,!(L9&6)&&B5()}}function p8(){p1=G2.current,t0(G2)}function g2(r,s){r.finishedWork=null,r.finishedLanes=0;var l=r.timeoutHandle;if(l!==-1&&(r.timeoutHandle=-1,tl(l)),g0!==null)for(l=g0.return;l!==null;){var f=l;switch(Ee(f),f.tag){case 1:f=f.type.childContextTypes,f!=null&&n7();break;case 3:X2(),t0(G0),t0(z0),ze();break;case 5:Pe(f);break;case 4:X2();break;case 13:t0(o0);break;case 19:t0(o0);break;case 10:Me(f.type._context);break;case 22:case 23:p8()}l=l.return}if(C0=r,g0=r=L5(r.current,null),N0=p1=s,D0=0,Q3=null,u8=F7=d2=0,t1=Z3=null,c2!==null){for(s=0;s<c2.length;s++)if(l=c2[s],f=l.interleaved,f!==null){l.interleaved=null;var g=f.next,v=l.pending;if(v!==null){var _=v.next;v.next=g,f.next=_}l.pending=f}c2=null}return r}function ui(r,s){do{var l=g0;try{if(be(),p7.current=y7,g7){for(var f=u0.memoizedState;f!==null;){var g=f.queue;g!==null&&(g.pending=null),f=f.next}g7=!1}if(h2=0,E0=y0=u0=null,W3=!1,U3=0,o8.current=null,l===null||l.return===null){D0=1,Q3=s,g0=null;break}e:{var v=r,_=l.return,M=l,N=s;if(s=N0,M.flags|=32768,N!==null&&typeof N=="object"&&typeof N.then=="function"){var $=N,i9=M,s9=i9.tag;if(!(i9.mode&1)&&(s9===0||s9===11||s9===15)){var r9=i9.alternate;r9?(i9.updateQueue=r9.updateQueue,i9.memoizedState=r9.memoizedState,i9.lanes=r9.lanes):(i9.updateQueue=null,i9.memoizedState=null)}var m9=Nr(_);if(m9!==null){m9.flags&=-257,Tr(m9,_,M,v,s),m9.mode&1&&Br(v,$,s),s=m9,N=$;var w9=s.updateQueue;if(w9===null){var x9=new Set;x9.add(N),s.updateQueue=x9}else w9.add(N);break e}else{if(!(s&1)){Br(v,$,s),g8();break e}N=Error(n(426))}}else if(i0&&M.mode&1){var h0=Nr(_);if(h0!==null){!(h0.flags&65536)&&(h0.flags|=256),Tr(h0,_,M,v,s),Se(Q2(N,M));break e}}v=N=Q2(N,M),D0!==4&&(D0=2),Z3===null?Z3=[v]:Z3.push(v),v=_;do{switch(v.tag){case 3:v.flags|=65536,s&=-s,v.lanes|=s;var L=Mr(v,N,s);nr(v,L);break e;case 1:M=N;var z=v.type,j=v.stateNode;if(!(v.flags&128)&&(typeof z.getDerivedStateFromError=="function"||j!==null&&typeof j.componentDidCatch=="function"&&(O5===null||!O5.has(j)))){v.flags|=65536,s&=-s,v.lanes|=s;var c9=kr(v,M,s);nr(v,c9);break e}}v=v.return}while(v!==null)}ci(l)}catch(C9){s=C9,g0===l&&l!==null&&(g0=l=l.return);continue}break}while(!0)}function ai(){var r=C7.current;return C7.current=y7,r===null?y7:r}function g8(){(D0===0||D0===3||D0===2)&&(D0=4),C0===null||!(d2&268435455)&&!(F7&268435455)||R5(C0,N0)}function B7(r,s){var l=L9;L9|=2;var f=ai();(C0!==r||N0!==s)&&(h5=null,g2(r,s));do try{Sl();break}catch(g){ui(r,g)}while(!0);if(be(),L9=l,C7.current=f,g0!==null)throw Error(n(261));return C0=null,N0=0,D0}function Sl(){for(;g0!==null;)li(g0)}function Al(){for(;g0!==null&&!$4();)li(g0)}function li(r){var s=di(r.alternate,r,p1);r.memoizedProps=r.pendingProps,s===null?ci(r):g0=s,o8.current=null}function ci(r){var s=r;do{var l=s.alternate;if(r=s.return,s.flags&32768){if(l=wl(l,s),l!==null){l.flags&=32767,g0=l;return}if(r!==null)r.flags|=32768,r.subtreeFlags=0,r.deletions=null;else{D0=6,g0=null;return}}else if(l=Dl(l,s,p1),l!==null){g0=l;return}if(s=s.sibling,s!==null){g0=s;return}g0=s=r}while(s!==null);D0===0&&(D0=5)}function m2(r,s,l){var f=q9,g=w1.transition;try{w1.transition=null,q9=1,bl(r,s,l,f)}finally{w1.transition=g,q9=f}return null}function bl(r,s,l,f){do e3();while(z5!==null);if(L9&6)throw Error(n(327));l=r.finishedWork;var g=r.finishedLanes;if(l===null)return null;if(r.finishedWork=null,r.finishedLanes=0,l===r.current)throw Error(n(177));r.callbackNode=null,r.callbackPriority=0;var v=l.lanes|l.childLanes;if(aa(r,v),r===C0&&(g0=C0=null,N0=0),!(l.subtreeFlags&2064)&&!(l.flags&2064)||A7||(A7=!0,pi(q1,function(){return e3(),null})),v=(l.flags&15990)!==0,l.subtreeFlags&15990||v){v=w1.transition,w1.transition=null;var _=q9;q9=1;var M=L9;L9|=4,o8.current=null,xl(r,l),ei(l,r),Ka(ge),$6=!!pe,ge=pe=null,r.current=l,El(l),i2(),L9=M,q9=_,w1.transition=v}else r.current=l;if(A7&&(A7=!1,z5=r,b7=g),v=r.pendingLanes,v===0&&(O5=null),na(l.stateNode),n1(r,B9()),s!==null)for(f=r.onRecoverableError,l=0;l<s.length;l++)g=s[l],f(g.value,{componentStack:g.stack,digest:g.digest});if(S7)throw S7=!1,r=l8,l8=null,r;return b7&1&&r.tag!==0&&e3(),v=r.pendingLanes,v&1?r===c8?G3++:(G3=0,c8=r):G3=0,B5(),null}function e3(){if(z5!==null){var r=Zt(b7),s=w1.transition,l=q9;try{if(w1.transition=null,q9=16>r?16:r,z5===null)var f=!1;else{if(r=z5,z5=null,b7=0,L9&6)throw Error(n(331));var g=L9;for(L9|=4,y9=r.current;y9!==null;){var v=y9,_=v.child;if(y9.flags&16){var M=v.deletions;if(M!==null){for(var N=0;N<M.length;N++){var $=M[N];for(y9=$;y9!==null;){var i9=y9;switch(i9.tag){case 0:case 11:case 15:X3(8,i9,v)}var s9=i9.child;if(s9!==null)s9.return=i9,y9=s9;else for(;y9!==null;){i9=y9;var r9=i9.sibling,m9=i9.return;if(Xr(i9),i9===$){y9=null;break}if(r9!==null){r9.return=m9,y9=r9;break}y9=m9}}}var w9=v.alternate;if(w9!==null){var x9=w9.child;if(x9!==null){w9.child=null;do{var h0=x9.sibling;x9.sibling=null,x9=h0}while(x9!==null)}}y9=v}}if(v.subtreeFlags&2064&&_!==null)_.return=v,y9=_;else e:for(;y9!==null;){if(v=y9,v.flags&2048)switch(v.tag){case 0:case 11:case 15:X3(9,v,v.return)}var L=v.sibling;if(L!==null){L.return=v.return,y9=L;break e}y9=v.return}}var z=r.current;for(y9=z;y9!==null;){_=y9;var j=_.child;if(_.subtreeFlags&2064&&j!==null)j.return=_,y9=j;else e:for(_=z;y9!==null;){if(M=y9,M.flags&2048)try{switch(M.tag){case 0:case 11:case 15:E7(9,M)}}catch(C9){c0(M,M.return,C9)}if(M===_){y9=null;break e}var c9=M.sibling;if(c9!==null){c9.return=M.return,y9=c9;break e}y9=M.return}}if(L9=g,B5(),Y1&&typeof Y1.onPostCommitFiberRoot=="function")try{Y1.onPostCommitFiberRoot(z6,r)}catch{}f=!0}return f}finally{q9=l,w1.transition=s}}return!1}function fi(r,s,l){s=Q2(l,s),s=Mr(r,s,1),r=T5(r,s,1),s=Q0(),r!==null&&(x3(r,1,s),n1(r,s))}function c0(r,s,l){if(r.tag===3)fi(r,r,l);else for(;s!==null;){if(s.tag===3){fi(s,r,l);break}else if(s.tag===1){var f=s.stateNode;if(typeof s.type.getDerivedStateFromError=="function"||typeof f.componentDidCatch=="function"&&(O5===null||!O5.has(f))){r=Q2(l,r),r=kr(s,r,1),s=T5(s,r,1),r=Q0(),s!==null&&(x3(s,1,r),n1(s,r));break}}s=s.return}}function Ml(r,s,l){var f=r.pingCache;f!==null&&f.delete(s),s=Q0(),r.pingedLanes|=r.suspendedLanes&l,C0===r&&(N0&l)===l&&(D0===4||D0===3&&(N0&130023424)===N0&&500>B9()-a8?g2(r,0):u8|=l),n1(r,s)}function hi(r,s){s===0&&(r.mode&1?(s=R6,R6<<=1,!(R6&130023424)&&(R6=4194304)):s=1);var l=Q0();r=l5(r,s),r!==null&&(x3(r,s,l),n1(r,l))}function kl(r){var s=r.memoizedState,l=0;s!==null&&(l=s.retryLane),hi(r,l)}function Bl(r,s){var l=0;switch(r.tag){case 13:var f=r.stateNode,g=r.memoizedState;g!==null&&(l=g.retryLane);break;case 19:f=r.stateNode;break;default:throw Error(n(314))}f!==null&&f.delete(s),hi(r,l)}var di;di=function(r,s,l){if(r!==null)if(r.memoizedProps!==s.pendingProps||G0.current)e1=!0;else{if(!(r.lanes&l)&&!(s.flags&128))return e1=!1,yl(r,s,l);e1=!!(r.flags&131072)}else e1=!1,i0&&s.flags&1048576&&qn(s,o7,s.index);switch(s.lanes=0,s.tag){case 2:var f=s.type;_7(r,s),r=s.pendingProps;var g=$2(s,z0.current);K2(s,l),g=Le(null,s,f,r,g,l);var v=je();return s.flags|=1,typeof g=="object"&&g!==null&&typeof g.render=="function"&&g.$$typeof===void 0?(s.tag=1,s.memoizedState=null,s.updateQueue=null,J0(f)?(v=!0,r7(s)):v=!1,s.memoizedState=g.state!==null&&g.state!==void 0?g.state:null,Ne(s),g.updater=D7,s.stateNode=g,g._reactInternals=s,qe(s,f,r,l),s=Qe(null,s,f,!0,v,l)):(s.tag=0,i0&&v&&xe(s),X0(null,s,g,l),s=s.child),s;case 16:f=s.elementType;e:{switch(_7(r,s),r=s.pendingProps,g=f._init,f=g(f._payload),s.type=f,g=s.tag=Tl(f),r=P1(f,r),g){case 0:s=Xe(null,s,f,r,l);break e;case 1:s=Lr(null,s,f,r,l);break e;case 11:s=Pr(null,s,f,r,l);break e;case 14:s=Or(null,s,f,P1(f.type,r),l);break e}throw Error(n(306,f,""))}return s;case 0:return f=s.type,g=s.pendingProps,g=s.elementType===f?g:P1(f,g),Xe(r,s,f,g,l);case 1:return f=s.type,g=s.pendingProps,g=s.elementType===f?g:P1(f,g),Lr(r,s,f,g,l);case 3:e:{if(jr(s),r===null)throw Error(n(387));f=s.pendingProps,v=s.memoizedState,g=v.element,tr(r,s),h7(s,f,null,l);var _=s.memoizedState;if(f=_.element,v.isDehydrated)if(v={element:f,isDehydrated:!1,cache:_.cache,pendingSuspenseBoundaries:_.pendingSuspenseBoundaries,transitions:_.transitions},s.updateQueue.baseState=v,s.memoizedState=v,s.flags&256){g=Q2(Error(n(423)),s),s=Hr(r,s,f,l,g);break e}else if(f!==g){g=Q2(Error(n(424)),s),s=Hr(r,s,f,l,g);break e}else for(d1=b5(s.stateNode.containerInfo.firstChild),h1=s,i0=!0,T1=null,l=Jn(s,null,f,l),s.child=l;l;)l.flags=l.flags&-3|4096,l=l.sibling;else{if(U2(),f===g){s=f5(r,s,l);break e}X0(r,s,f,l)}s=s.child}return s;case 5:return ir(s),r===null&&Fe(s),f=s.type,g=s.pendingProps,v=r!==null?r.memoizedProps:null,_=g.children,me(f,g)?_=null:v!==null&&me(f,v)&&(s.flags|=32),Rr(r,s),X0(r,s,_,l),s.child;case 6:return r===null&&Fe(s),null;case 13:return $r(r,s,l);case 4:return Te(s,s.stateNode.containerInfo),f=s.pendingProps,r===null?s.child=q2(s,null,f,l):X0(r,s,f,l),s.child;case 11:return f=s.type,g=s.pendingProps,g=s.elementType===f?g:P1(f,g),Pr(r,s,f,g,l);case 7:return X0(r,s,s.pendingProps,l),s.child;case 8:return X0(r,s,s.pendingProps.children,l),s.child;case 12:return X0(r,s,s.pendingProps.children,l),s.child;case 10:e:{if(f=s.type._context,g=s.pendingProps,v=s.memoizedProps,_=g.value,G9(l7,f._currentValue),f._currentValue=_,v!==null)if(N1(v.value,_)){if(v.children===g.children&&!G0.current){s=f5(r,s,l);break e}}else for(v=s.child,v!==null&&(v.return=s);v!==null;){var M=v.dependencies;if(M!==null){_=v.child;for(var N=M.firstContext;N!==null;){if(N.context===f){if(v.tag===1){N=c5(-1,l&-l),N.tag=2;var $=v.updateQueue;if($!==null){$=$.shared;var i9=$.pending;i9===null?N.next=N:(N.next=i9.next,i9.next=N),$.pending=N}}v.lanes|=l,N=v.alternate,N!==null&&(N.lanes|=l),ke(v.return,l,s),M.lanes|=l;break}N=N.next}}else if(v.tag===10)_=v.type===s.type?null:v.child;else if(v.tag===18){if(_=v.return,_===null)throw Error(n(341));_.lanes|=l,M=_.alternate,M!==null&&(M.lanes|=l),ke(_,l,s),_=v.sibling}else _=v.child;if(_!==null)_.return=v;else for(_=v;_!==null;){if(_===s){_=null;break}if(v=_.sibling,v!==null){v.return=_.return,_=v;break}_=_.return}v=_}X0(r,s,g.children,l),s=s.child}return s;case 9:return g=s.type,f=s.pendingProps.children,K2(s,l),g=y1(g),f=f(g),s.flags|=1,X0(r,s,f,l),s.child;case 14:return f=s.type,g=P1(f,s.pendingProps),g=P1(f.type,g),Or(r,s,f,g,l);case 15:return zr(r,s,s.type,s.pendingProps,l);case 17:return f=s.type,g=s.pendingProps,g=s.elementType===f?g:P1(f,g),_7(r,s),s.tag=1,J0(f)?(r=!0,r7(s)):r=!1,K2(s,l),Ar(s,f,g),qe(s,f,g,l),Qe(null,s,f,!0,r,l);case 19:return Wr(r,s,l);case 22:return Ir(r,s,l)}throw Error(n(156,s.tag))};function pi(r,s){return P6(r,s)}function Nl(r,s,l,f){this.tag=r,this.key=l,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=s,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=f,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function _1(r,s,l,f){return new Nl(r,s,l,f)}function m8(r){return r=r.prototype,!(!r||!r.isReactComponent)}function Tl(r){if(typeof r=="function")return m8(r)?1:0;if(r!=null){if(r=r.$$typeof,r===Z)return 11;if(r===t9)return 14}return 2}function L5(r,s){var l=r.alternate;return l===null?(l=_1(r.tag,s,r.key,r.mode),l.elementType=r.elementType,l.type=r.type,l.stateNode=r.stateNode,l.alternate=r,r.alternate=l):(l.pendingProps=s,l.type=r.type,l.flags=0,l.subtreeFlags=0,l.deletions=null),l.flags=r.flags&14680064,l.childLanes=r.childLanes,l.lanes=r.lanes,l.child=r.child,l.memoizedProps=r.memoizedProps,l.memoizedState=r.memoizedState,l.updateQueue=r.updateQueue,s=r.dependencies,l.dependencies=s===null?null:{lanes:s.lanes,firstContext:s.firstContext},l.sibling=r.sibling,l.index=r.index,l.ref=r.ref,l}function N7(r,s,l,f,g,v){var _=2;if(f=r,typeof r=="function")m8(r)&&(_=1);else if(typeof r=="string")_=5;else e:switch(r){case P:return v2(l.children,g,v,s);case T:_=8,g|=8;break;case I:return r=_1(12,l,s,g|2),r.elementType=I,r.lanes=v,r;case f9:return r=_1(13,l,s,g),r.elementType=f9,r.lanes=v,r;case o9:return r=_1(19,l,s,g),r.elementType=o9,r.lanes=v,r;case l9:return T7(l,g,v,s);default:if(typeof r=="object"&&r!==null)switch(r.$$typeof){case H:_=10;break e;case W:_=9;break e;case Z:_=11;break e;case t9:_=14;break e;case q:_=16,f=null;break e}throw Error(n(130,r==null?r:typeof r,""))}return s=_1(_,l,s,g),s.elementType=r,s.type=f,s.lanes=v,s}function v2(r,s,l,f){return r=_1(7,r,f,s),r.lanes=l,r}function T7(r,s,l,f){return r=_1(22,r,f,s),r.elementType=l9,r.lanes=l,r.stateNode={isHidden:!1},r}function v8(r,s,l){return r=_1(6,r,null,s),r.lanes=l,r}function y8(r,s,l){return s=_1(4,r.children!==null?r.children:[],r.key,s),s.lanes=l,s.stateNode={containerInfo:r.containerInfo,pendingChildren:null,implementation:r.implementation},s}function Pl(r,s,l,f,g){this.tag=s,this.containerInfo=r,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=U4(0),this.expirationTimes=U4(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=U4(0),this.identifierPrefix=f,this.onRecoverableError=g,this.mutableSourceEagerHydrationData=null}function D8(r,s,l,f,g,v,_,M,N){return r=new Pl(r,s,l,M,N),s===1?(s=1,v===!0&&(s|=8)):s=0,v=_1(3,null,null,s),r.current=v,v.stateNode=r,v.memoizedState={element:f,isDehydrated:l,cache:null,transitions:null,pendingSuspenseBoundaries:null},Ne(v),r}function Ol(r,s,l){var f=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:S,key:f==null?null:""+f,children:r,containerInfo:s,implementation:l}}function gi(r){if(!r)return k5;r=r._reactInternals;e:{if(i5(r)!==r||r.tag!==1)throw Error(n(170));var s=r;do{switch(s.tag){case 3:s=s.stateNode.context;break e;case 1:if(J0(s.type)){s=s.stateNode.__reactInternalMemoizedMergedChildContext;break e}}s=s.return}while(s!==null);throw Error(n(171))}if(r.tag===1){var l=r.type;if(J0(l))return Vn(r,l,s)}return s}function mi(r,s,l,f,g,v,_,M,N){return r=D8(l,f,!0,r,g,v,_,M,N),r.context=gi(null),l=r.current,f=Q0(),g=I5(l),v=c5(f,g),v.callback=s??null,T5(l,v,g),r.current.lanes=g,x3(r,g,f),n1(r,f),r}function P7(r,s,l,f){var g=s.current,v=Q0(),_=I5(g);return l=gi(l),s.context===null?s.context=l:s.pendingContext=l,s=c5(v,_),s.payload={element:r},f=f===void 0?null:f,f!==null&&(s.callback=f),r=T5(g,s,_),r!==null&&(I1(r,g,_,v),f7(r,g,_)),_}function O7(r){if(r=r.current,!r.child)return null;switch(r.child.tag){case 5:return r.child.stateNode;default:return r.child.stateNode}}function vi(r,s){if(r=r.memoizedState,r!==null&&r.dehydrated!==null){var l=r.retryLane;r.retryLane=l!==0&&l<s?l:s}}function w8(r,s){vi(r,s),(r=r.alternate)&&vi(r,s)}var yi=typeof reportError=="function"?reportError:function(r){console.error(r)};function _8(r){this._internalRoot=r}z7.prototype.render=_8.prototype.render=function(r){var s=this._internalRoot;if(s===null)throw Error(n(409));P7(r,s,null,null)},z7.prototype.unmount=_8.prototype.unmount=function(){var r=this._internalRoot;if(r!==null){this._internalRoot=null;var s=r.containerInfo;p2(function(){P7(null,r,null,null)}),s[s5]=null}};function z7(r){this._internalRoot=r}z7.prototype.unstable_scheduleHydration=function(r){if(r){var s=en();r={blockedOn:null,target:r,priority:s};for(var l=0;l<F5.length&&s!==0&&s<F5[l].priority;l++);F5.splice(l,0,r),l===0&&rn(r)}};function x8(r){return!(!r||r.nodeType!==1&&r.nodeType!==9&&r.nodeType!==11)}function I7(r){return!(!r||r.nodeType!==1&&r.nodeType!==9&&r.nodeType!==11&&(r.nodeType!==8||r.nodeValue!==" react-mount-point-unstable "))}function Di(){}function zl(r,s,l,f,g){if(g){if(typeof f=="function"){var v=f;f=function(){var $=O7(_);v.call($)}}var _=mi(s,f,r,0,null,!1,!1,"",Di);return r._reactRootContainer=_,r[s5]=_.current,z3(r.nodeType===8?r.parentNode:r),p2(),_}for(;g=r.lastChild;)r.removeChild(g);if(typeof f=="function"){var M=f;f=function(){var $=O7(N);M.call($)}}var N=D8(r,0,!1,null,null,!1,!1,"",Di);return r._reactRootContainer=N,r[s5]=N.current,z3(r.nodeType===8?r.parentNode:r),p2(function(){P7(s,N,l,f)}),N}function R7(r,s,l,f,g){var v=l._reactRootContainer;if(v){var _=v;if(typeof g=="function"){var M=g;g=function(){var N=O7(_);M.call(N)}}P7(s,_,r,g)}else _=zl(l,s,r,g,f);return O7(_)}Gt=function(r){switch(r.tag){case 3:var s=r.stateNode;if(s.current.memoizedState.isDehydrated){var l=_3(s.pendingLanes);l!==0&&(q4(s,l|1),n1(s,B9()),!(L9&6)&&(J2=B9()+500,B5()))}break;case 13:p2(function(){var f=l5(r,1);if(f!==null){var g=Q0();I1(f,r,1,g)}}),w8(r,1)}},Y4=function(r){if(r.tag===13){var s=l5(r,134217728);if(s!==null){var l=Q0();I1(s,r,134217728,l)}w8(r,134217728)}},Jt=function(r){if(r.tag===13){var s=I5(r),l=l5(r,s);if(l!==null){var f=Q0();I1(l,r,s,f)}w8(r,s)}},en=function(){return q9},tn=function(r,s){var l=q9;try{return q9=r,s()}finally{q9=l}},U1=function(r,s,l){switch(s){case"input":if(c1(r,l),s=l.name,l.type==="radio"&&s!=null){for(l=r;l.parentNode;)l=l.parentNode;for(l=l.querySelectorAll("input[name="+JSON.stringify(""+s)+'][type="radio"]'),s=0;s<l.length;s++){var f=l[s];if(f!==r&&f.form===r.form){var g=t7(f);if(!g)throw Error(n(90));p0(f),c1(f,g)}}}break;case"textarea":R(r,l);break;case"select":s=l.value,s!=null&&w5(r,!!l.multiple,s,!1)}},A6=d8,b6=p2;var Il={usingClientEntryPoint:!1,Events:[L3,j2,t7,F6,S6,d8]},J3={findFiberByHostInstance:o2,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},Rl={bundleType:J3.bundleType,version:J3.version,rendererPackageName:J3.rendererPackageName,rendererConfig:J3.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:B.ReactCurrentDispatcher,findHostInstanceByFiber:function(r){return r=N6(r),r===null?null:r.stateNode},findFiberByHostInstance:J3.findFiberByHostInstance,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var L7=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!L7.isDisabled&&L7.supportsFiber)try{z6=L7.inject(Rl),Y1=L7}catch{}}return r1.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Il,r1.createPortal=function(r,s){var l=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!x8(s))throw Error(n(200));return Ol(r,s,null,l)},r1.createRoot=function(r,s){if(!x8(r))throw Error(n(299));var l=!1,f="",g=yi;return s!=null&&(s.unstable_strictMode===!0&&(l=!0),s.identifierPrefix!==void 0&&(f=s.identifierPrefix),s.onRecoverableError!==void 0&&(g=s.onRecoverableError)),s=D8(r,1,!1,null,null,l,!1,f,g),r[s5]=s.current,z3(r.nodeType===8?r.parentNode:r),new _8(s)},r1.findDOMNode=function(r){if(r==null)return null;if(r.nodeType===1)return r;var s=r._reactInternals;if(s===void 0)throw typeof r.render=="function"?Error(n(188)):(r=Object.keys(r).join(","),Error(n(268,r)));return r=N6(s),r=r===null?null:r.stateNode,r},r1.flushSync=function(r){return p2(r)},r1.hydrate=function(r,s,l){if(!I7(s))throw Error(n(200));return R7(null,r,s,!0,l)},r1.hydrateRoot=function(r,s,l){if(!x8(r))throw Error(n(405));var f=l!=null&&l.hydratedSources||null,g=!1,v="",_=yi;if(l!=null&&(l.unstable_strictMode===!0&&(g=!0),l.identifierPrefix!==void 0&&(v=l.identifierPrefix),l.onRecoverableError!==void 0&&(_=l.onRecoverableError)),s=mi(s,null,r,1,l??null,g,!1,v,_),r[s5]=s.current,z3(r),f)for(r=0;r<f.length;r++)l=f[r],g=l._getVersion,g=g(l._source),s.mutableSourceEagerHydrationData==null?s.mutableSourceEagerHydrationData=[l,g]:s.mutableSourceEagerHydrationData.push(l,g);return new z7(s)},r1.render=function(r,s,l){if(!I7(s))throw Error(n(200));return R7(null,r,s,!1,l)},r1.unmountComponentAtNode=function(r){if(!I7(r))throw Error(n(40));return r._reactRootContainer?(p2(function(){R7(null,null,r,!1,function(){r._reactRootContainer=null,r[s5]=null})}),!0):!1},r1.unstable_batchedUpdates=d8,r1.unstable_renderSubtreeIntoContainer=function(r,s,l,f){if(!I7(l))throw Error(n(200));if(r==null||r._reactInternals===void 0)throw Error(n(38));return R7(r,s,l,!1,f)},r1.version="18.3.1-next-f1338f8080-20240426",r1}var Ai;function Zl(){if(Ai)return F8.exports;Ai=1;function t(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(t)}catch(e){console.error(e)}}return t(),F8.exports=Ql(),F8.exports}var bi;function Gl(){if(bi)return j7;bi=1;var t=Zl();return j7.createRoot=t.createRoot,j7.hydrateRoot=t.hydrateRoot,j7}var Jl=Gl();/*!
 * @kurkle/color v0.3.4
 * https://github.com/kurkle/color#readme
 * (c) 2024 Jukka Kurkela
 * Released under the MIT License
 */function x6(t){return t+.5|0}const W5=(t,e,n)=>Math.max(Math.min(t,n),e);function o6(t){return W5(x6(t*2.55),0,255)}function Y5(t){return W5(x6(t*255),0,255)}function v5(t){return W5(x6(t/2.55)/100,0,1)}function Mi(t){return W5(x6(t*100),0,100)}const x1={0:0,1:1,2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,A:10,B:11,C:12,D:13,E:14,F:15,a:10,b:11,c:12,d:13,e:14,f:15},it=[..."0123456789ABCDEF"],ec=t=>it[t&15],tc=t=>it[(t&240)>>4]+it[t&15],H7=t=>(t&240)>>4===(t&15),nc=t=>H7(t.r)&&H7(t.g)&&H7(t.b)&&H7(t.a);function rc(t){var e=t.length,n;return t[0]==="#"&&(e===4||e===5?n={r:255&x1[t[1]]*17,g:255&x1[t[2]]*17,b:255&x1[t[3]]*17,a:e===5?x1[t[4]]*17:255}:(e===7||e===9)&&(n={r:x1[t[1]]<<4|x1[t[2]],g:x1[t[3]]<<4|x1[t[4]],b:x1[t[5]]<<4|x1[t[6]],a:e===9?x1[t[7]]<<4|x1[t[8]]:255})),n}const ic=(t,e)=>t<255?e(t):"";function sc(t){var e=nc(t)?ec:tc;return t?"#"+e(t.r)+e(t.g)+e(t.b)+ic(t.a,e):void 0}const oc=/^(hsla?|hwb|hsv)\(\s*([-+.e\d]+)(?:deg)?[\s,]+([-+.e\d]+)%[\s,]+([-+.e\d]+)%(?:[\s,]+([-+.e\d]+)(%)?)?\s*\)$/;function Mo(t,e,n){const i=e*Math.min(n,1-n),o=(u,a=(u+t/30)%12)=>n-i*Math.max(Math.min(a-3,9-a,1),-1);return[o(0),o(8),o(4)]}function uc(t,e,n){const i=(o,u=(o+t/60)%6)=>n-n*e*Math.max(Math.min(u,4-u,1),0);return[i(5),i(3),i(1)]}function ac(t,e,n){const i=Mo(t,1,.5);let o;for(e+n>1&&(o=1/(e+n),e*=o,n*=o),o=0;o<3;o++)i[o]*=1-e-n,i[o]+=e;return i}function lc(t,e,n,i,o){return t===o?(e-n)/i+(e<n?6:0):e===o?(n-t)/i+2:(t-e)/i+4}function Ct(t){const n=t.r/255,i=t.g/255,o=t.b/255,u=Math.max(n,i,o),a=Math.min(n,i,o),c=(u+a)/2;let h,d,p;return u!==a&&(p=u-a,d=c>.5?p/(2-u-a):p/(u+a),h=lc(n,i,o,p,u),h=h*60+.5),[h|0,d||0,c]}function Ft(t,e,n,i){return(Array.isArray(e)?t(e[0],e[1],e[2]):t(e,n,i)).map(Y5)}function St(t,e,n){return Ft(Mo,t,e,n)}function cc(t,e,n){return Ft(ac,t,e,n)}function fc(t,e,n){return Ft(uc,t,e,n)}function ko(t){return(t%360+360)%360}function hc(t){const e=oc.exec(t);let n=255,i;if(!e)return;e[5]!==i&&(n=e[6]?o6(+e[5]):Y5(+e[5]));const o=ko(+e[2]),u=+e[3]/100,a=+e[4]/100;return e[1]==="hwb"?i=cc(o,u,a):e[1]==="hsv"?i=fc(o,u,a):i=St(o,u,a),{r:i[0],g:i[1],b:i[2],a:n}}function dc(t,e){var n=Ct(t);n[0]=ko(n[0]+e),n=St(n),t.r=n[0],t.g=n[1],t.b=n[2]}function pc(t){if(!t)return;const e=Ct(t),n=e[0],i=Mi(e[1]),o=Mi(e[2]);return t.a<255?`hsla(${n}, ${i}%, ${o}%, ${v5(t.a)})`:`hsl(${n}, ${i}%, ${o}%)`}const ki={x:"dark",Z:"light",Y:"re",X:"blu",W:"gr",V:"medium",U:"slate",A:"ee",T:"ol",S:"or",B:"ra",C:"lateg",D:"ights",R:"in",Q:"turquois",E:"hi",P:"ro",O:"al",N:"le",M:"de",L:"yello",F:"en",K:"ch",G:"arks",H:"ea",I:"ightg",J:"wh"},Bi={OiceXe:"f0f8ff",antiquewEte:"faebd7",aqua:"ffff",aquamarRe:"7fffd4",azuY:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"0",blanKedOmond:"ffebcd",Xe:"ff",XeviTet:"8a2be2",bPwn:"a52a2a",burlywood:"deb887",caMtXe:"5f9ea0",KartYuse:"7fff00",KocTate:"d2691e",cSO:"ff7f50",cSnflowerXe:"6495ed",cSnsilk:"fff8dc",crimson:"dc143c",cyan:"ffff",xXe:"8b",xcyan:"8b8b",xgTMnPd:"b8860b",xWay:"a9a9a9",xgYF:"6400",xgYy:"a9a9a9",xkhaki:"bdb76b",xmagFta:"8b008b",xTivegYF:"556b2f",xSange:"ff8c00",xScEd:"9932cc",xYd:"8b0000",xsOmon:"e9967a",xsHgYF:"8fbc8f",xUXe:"483d8b",xUWay:"2f4f4f",xUgYy:"2f4f4f",xQe:"ced1",xviTet:"9400d3",dAppRk:"ff1493",dApskyXe:"bfff",dimWay:"696969",dimgYy:"696969",dodgerXe:"1e90ff",fiYbrick:"b22222",flSOwEte:"fffaf0",foYstWAn:"228b22",fuKsia:"ff00ff",gaRsbSo:"dcdcdc",ghostwEte:"f8f8ff",gTd:"ffd700",gTMnPd:"daa520",Way:"808080",gYF:"8000",gYFLw:"adff2f",gYy:"808080",honeyMw:"f0fff0",hotpRk:"ff69b4",RdianYd:"cd5c5c",Rdigo:"4b0082",ivSy:"fffff0",khaki:"f0e68c",lavFMr:"e6e6fa",lavFMrXsh:"fff0f5",lawngYF:"7cfc00",NmoncEffon:"fffacd",ZXe:"add8e6",ZcSO:"f08080",Zcyan:"e0ffff",ZgTMnPdLw:"fafad2",ZWay:"d3d3d3",ZgYF:"90ee90",ZgYy:"d3d3d3",ZpRk:"ffb6c1",ZsOmon:"ffa07a",ZsHgYF:"20b2aa",ZskyXe:"87cefa",ZUWay:"778899",ZUgYy:"778899",ZstAlXe:"b0c4de",ZLw:"ffffe0",lime:"ff00",limegYF:"32cd32",lRF:"faf0e6",magFta:"ff00ff",maPon:"800000",VaquamarRe:"66cdaa",VXe:"cd",VScEd:"ba55d3",VpurpN:"9370db",VsHgYF:"3cb371",VUXe:"7b68ee",VsprRggYF:"fa9a",VQe:"48d1cc",VviTetYd:"c71585",midnightXe:"191970",mRtcYam:"f5fffa",mistyPse:"ffe4e1",moccasR:"ffe4b5",navajowEte:"ffdead",navy:"80",Tdlace:"fdf5e6",Tive:"808000",TivedBb:"6b8e23",Sange:"ffa500",SangeYd:"ff4500",ScEd:"da70d6",pOegTMnPd:"eee8aa",pOegYF:"98fb98",pOeQe:"afeeee",pOeviTetYd:"db7093",papayawEp:"ffefd5",pHKpuff:"ffdab9",peru:"cd853f",pRk:"ffc0cb",plum:"dda0dd",powMrXe:"b0e0e6",purpN:"800080",YbeccapurpN:"663399",Yd:"ff0000",Psybrown:"bc8f8f",PyOXe:"4169e1",saddNbPwn:"8b4513",sOmon:"fa8072",sandybPwn:"f4a460",sHgYF:"2e8b57",sHshell:"fff5ee",siFna:"a0522d",silver:"c0c0c0",skyXe:"87ceeb",UXe:"6a5acd",UWay:"708090",UgYy:"708090",snow:"fffafa",sprRggYF:"ff7f",stAlXe:"4682b4",tan:"d2b48c",teO:"8080",tEstN:"d8bfd8",tomato:"ff6347",Qe:"40e0d0",viTet:"ee82ee",JHt:"f5deb3",wEte:"ffffff",wEtesmoke:"f5f5f5",Lw:"ffff00",LwgYF:"9acd32"};function gc(){const t={},e=Object.keys(Bi),n=Object.keys(ki);let i,o,u,a,c;for(i=0;i<e.length;i++){for(a=c=e[i],o=0;o<n.length;o++)u=n[o],c=c.replace(u,ki[u]);u=parseInt(Bi[a],16),t[c]=[u>>16&255,u>>8&255,u&255]}return t}let $7;function mc(t){$7||($7=gc(),$7.transparent=[0,0,0,0]);const e=$7[t.toLowerCase()];return e&&{r:e[0],g:e[1],b:e[2],a:e.length===4?e[3]:255}}const vc=/^rgba?\(\s*([-+.\d]+)(%)?[\s,]+([-+.e\d]+)(%)?[\s,]+([-+.e\d]+)(%)?(?:[\s,/]+([-+.e\d]+)(%)?)?\s*\)$/;function yc(t){const e=vc.exec(t);let n=255,i,o,u;if(e){if(e[7]!==i){const a=+e[7];n=e[8]?o6(a):W5(a*255,0,255)}return i=+e[1],o=+e[3],u=+e[5],i=255&(e[2]?o6(i):W5(i,0,255)),o=255&(e[4]?o6(o):W5(o,0,255)),u=255&(e[6]?o6(u):W5(u,0,255)),{r:i,g:o,b:u,a:n}}}function Dc(t){return t&&(t.a<255?`rgba(${t.r}, ${t.g}, ${t.b}, ${v5(t.a)})`:`rgb(${t.r}, ${t.g}, ${t.b})`)}const b8=t=>t<=.0031308?t*12.92:Math.pow(t,1/2.4)*1.055-.055,t3=t=>t<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4);function wc(t,e,n){const i=t3(v5(t.r)),o=t3(v5(t.g)),u=t3(v5(t.b));return{r:Y5(b8(i+n*(t3(v5(e.r))-i))),g:Y5(b8(o+n*(t3(v5(e.g))-o))),b:Y5(b8(u+n*(t3(v5(e.b))-u))),a:t.a+n*(e.a-t.a)}}function V7(t,e,n){if(t){let i=Ct(t);i[e]=Math.max(0,Math.min(i[e]+i[e]*n,e===0?360:1)),i=St(i),t.r=i[0],t.g=i[1],t.b=i[2]}}function Bo(t,e){return t&&Object.assign(e||{},t)}function Ni(t){var e={r:0,g:0,b:0,a:255};return Array.isArray(t)?t.length>=3&&(e={r:t[0],g:t[1],b:t[2],a:255},t.length>3&&(e.a=Y5(t[3]))):(e=Bo(t,{r:0,g:0,b:0,a:1}),e.a=Y5(e.a)),e}function _c(t){return t.charAt(0)==="r"?yc(t):hc(t)}class p6{constructor(e){if(e instanceof p6)return e;const n=typeof e;let i;n==="object"?i=Ni(e):n==="string"&&(i=rc(e)||mc(e)||_c(e)),this._rgb=i,this._valid=!!i}get valid(){return this._valid}get rgb(){var e=Bo(this._rgb);return e&&(e.a=v5(e.a)),e}set rgb(e){this._rgb=Ni(e)}rgbString(){return this._valid?Dc(this._rgb):void 0}hexString(){return this._valid?sc(this._rgb):void 0}hslString(){return this._valid?pc(this._rgb):void 0}mix(e,n){if(e){const i=this.rgb,o=e.rgb;let u;const a=n===u?.5:n,c=2*a-1,h=i.a-o.a,d=((c*h===-1?c:(c+h)/(1+c*h))+1)/2;u=1-d,i.r=255&d*i.r+u*o.r+.5,i.g=255&d*i.g+u*o.g+.5,i.b=255&d*i.b+u*o.b+.5,i.a=a*i.a+(1-a)*o.a,this.rgb=i}return this}interpolate(e,n){return e&&(this._rgb=wc(this._rgb,e._rgb,n)),this}clone(){return new p6(this.rgb)}alpha(e){return this._rgb.a=Y5(e),this}clearer(e){const n=this._rgb;return n.a*=1-e,this}greyscale(){const e=this._rgb,n=x6(e.r*.3+e.g*.59+e.b*.11);return e.r=e.g=e.b=n,this}opaquer(e){const n=this._rgb;return n.a*=1+e,this}negate(){const e=this._rgb;return e.r=255-e.r,e.g=255-e.g,e.b=255-e.b,this}lighten(e){return V7(this._rgb,2,e),this}darken(e){return V7(this._rgb,2,-e),this}saturate(e){return V7(this._rgb,1,e),this}desaturate(e){return V7(this._rgb,1,-e),this}rotate(e){return dc(this._rgb,e),this}}/*!
 * Chart.js v4.4.7
 * https://www.chartjs.org
 * (c) 2024 Chart.js Contributors
 * Released under the MIT License
 */function d5(){}const xc=(()=>{let t=0;return()=>t++})();function r0(t){return t==null}function _0(t){if(Array.isArray&&Array.isArray(t))return!0;const e=Object.prototype.toString.call(t);return e.slice(0,7)==="[object"&&e.slice(-6)==="Array]"}function V9(t){return t!==null&&Object.prototype.toString.call(t)==="[object Object]"}function A1(t){return(typeof t=="number"||t instanceof Number)&&isFinite(+t)}function G1(t,e){return A1(t)?t:e}function K9(t,e){return typeof t>"u"?e:t}const Ec=(t,e)=>typeof t=="string"&&t.endsWith("%")?parseFloat(t)/100*e:+t;function n0(t,e,n){if(t&&typeof t.call=="function")return t.apply(n,e)}function Y9(t,e,n,i){let o,u,a;if(_0(t))for(u=t.length,o=0;o<u;o++)e.call(n,t[o],o);else if(V9(t))for(a=Object.keys(t),u=a.length,o=0;o<u;o++)e.call(n,t[a[o]],a[o])}function l4(t,e){let n,i,o,u;if(!t||!e||t.length!==e.length)return!1;for(n=0,i=t.length;n<i;++n)if(o=t[n],u=e[n],o.datasetIndex!==u.datasetIndex||o.index!==u.index)return!1;return!0}function c4(t){if(_0(t))return t.map(c4);if(V9(t)){const e=Object.create(null),n=Object.keys(t),i=n.length;let o=0;for(;o<i;++o)e[n[o]]=c4(t[n[o]]);return e}return t}function No(t){return["__proto__","prototype","constructor"].indexOf(t)===-1}function Cc(t,e,n,i){if(!No(t))return;const o=e[t],u=n[t];V9(o)&&V9(u)?g6(o,u,i):e[t]=c4(u)}function g6(t,e,n){const i=_0(e)?e:[e],o=i.length;if(!V9(t))return t;n=n||{};const u=n.merger||Cc;let a;for(let c=0;c<o;++c){if(a=i[c],!V9(a))continue;const h=Object.keys(a);for(let d=0,p=h.length;d<p;++d)u(h[d],t,a,n)}return t}function c6(t,e){return g6(t,e,{merger:Fc})}function Fc(t,e,n){if(!No(t))return;const i=e[t],o=n[t];V9(i)&&V9(o)?c6(i,o):Object.prototype.hasOwnProperty.call(e,t)||(e[t]=c4(o))}const Ti={"":t=>t,x:t=>t.x,y:t=>t.y};function Sc(t){const e=t.split("."),n=[];let i="";for(const o of e)i+=o,i.endsWith("\\")?i=i.slice(0,-1)+".":(n.push(i),i="");return n}function Ac(t){const e=Sc(t);return n=>{for(const i of e){if(i==="")break;n=n&&n[i]}return n}}function l3(t,e){return(Ti[e]||(Ti[e]=Ac(e)))(t)}function At(t){return t.charAt(0).toUpperCase()+t.slice(1)}const m6=t=>typeof t<"u",Q5=t=>typeof t=="function",Pi=(t,e)=>{if(t.size!==e.size)return!1;for(const n of t)if(!e.has(n))return!1;return!0};function bc(t){return t.type==="mouseup"||t.type==="click"||t.type==="contextmenu"}const W0=Math.PI,K5=2*W0,f4=Number.POSITIVE_INFINITY,Mc=W0/180,j1=W0/2,y2=W0/4,Oi=W0*2/3,st=Math.log10,X5=Math.sign;function r4(t,e,n){return Math.abs(t-e)<n}function zi(t){const e=Math.round(t);t=r4(t,e,t/1e3)?e:t;const n=Math.pow(10,Math.floor(st(t))),i=t/n;return(i<=1?1:i<=2?2:i<=5?5:10)*n}function kc(t){const e=[],n=Math.sqrt(t);let i;for(i=1;i<n;i++)t%i===0&&(e.push(i),e.push(t/i));return n===(n|0)&&e.push(n),e.sort((o,u)=>o-u).pop(),e}function h4(t){return!isNaN(parseFloat(t))&&isFinite(t)}function Bc(t,e){const n=Math.round(t);return n-e<=t&&n+e>=t}function Nc(t,e,n){let i,o,u;for(i=0,o=t.length;i<o;i++)u=t[i][n],isNaN(u)||(e.min=Math.min(e.min,u),e.max=Math.max(e.max,u))}function F2(t){return t*(W0/180)}function Tc(t){return t*(180/W0)}function Ii(t){if(!A1(t))return;let e=1,n=0;for(;Math.round(t*e)/e!==t;)e*=10,n++;return n}function Pc(t,e){const n=e.x-t.x,i=e.y-t.y,o=Math.sqrt(n*n+i*i);let u=Math.atan2(i,n);return u<-.5*W0&&(u+=K5),{angle:u,distance:o}}function Oc(t,e){return Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2))}function D2(t){return(t%K5+K5)%K5}function zc(t,e,n,i){const o=D2(t),u=D2(e),a=D2(n),c=D2(u-o),h=D2(a-o),d=D2(o-u),p=D2(o-a);return o===u||o===a||i&&u===a||c>h&&d<p}function H1(t,e,n){return Math.max(e,Math.min(n,t))}function Ic(t){return H1(t,-32768,32767)}function s3(t,e,n,i=1e-6){return t>=Math.min(e,n)-i&&t<=Math.max(e,n)+i}function bt(t,e,n){n=n||(a=>t[a]<e);let i=t.length-1,o=0,u;for(;i-o>1;)u=o+i>>1,n(u)?o=u:i=u;return{lo:o,hi:i}}const ot=(t,e,n,i)=>bt(t,n,i?o=>{const u=t[o][e];return u<n||u===n&&t[o+1][e]===n}:o=>t[o][e]<n),Rc=(t,e,n)=>bt(t,n,i=>t[i][e]>=n);function Lc(t,e,n){let i=0,o=t.length;for(;i<o&&t[i]<e;)i++;for(;o>i&&t[o-1]>n;)o--;return i>0||o<t.length?t.slice(i,o):t}const To=["push","pop","shift","splice","unshift"];function jc(t,e){if(t._chartjs){t._chartjs.listeners.push(e);return}Object.defineProperty(t,"_chartjs",{configurable:!0,enumerable:!1,value:{listeners:[e]}}),To.forEach(n=>{const i="_onData"+At(n),o=t[n];Object.defineProperty(t,n,{configurable:!0,enumerable:!1,value(...u){const a=o.apply(this,u);return t._chartjs.listeners.forEach(c=>{typeof c[i]=="function"&&c[i](...u)}),a}})})}function Ri(t,e){const n=t._chartjs;if(!n)return;const i=n.listeners,o=i.indexOf(e);o!==-1&&i.splice(o,1),!(i.length>0)&&(To.forEach(u=>{delete t[u]}),delete t._chartjs)}function Po(t){const e=new Set(t);return e.size===t.length?t:Array.from(e)}const Oo=function(){return typeof window>"u"?function(t){return t()}:window.requestAnimationFrame}();function zo(t,e){let n=[],i=!1;return function(...o){n=o,i||(i=!0,Oo.call(window,()=>{i=!1,t.apply(e,n)}))}}function Hc(t,e){let n;return function(...i){return e?(clearTimeout(n),n=setTimeout(t,e,i)):t.apply(this,i),e}}const Mt=t=>t==="start"?"left":t==="end"?"right":"center",H0=(t,e,n)=>t==="start"?e:t==="end"?n:(e+n)/2,$c=(t,e,n,i)=>t===(i?"left":"right")?n:t==="center"?(e+n)/2:e,W7=t=>t===0||t===1,Li=(t,e,n)=>-(Math.pow(2,10*(t-=1))*Math.sin((t-e)*K5/n)),ji=(t,e,n)=>Math.pow(2,-10*t)*Math.sin((t-e)*K5/n)+1,f6={linear:t=>t,easeInQuad:t=>t*t,easeOutQuad:t=>-t*(t-2),easeInOutQuad:t=>(t/=.5)<1?.5*t*t:-.5*(--t*(t-2)-1),easeInCubic:t=>t*t*t,easeOutCubic:t=>(t-=1)*t*t+1,easeInOutCubic:t=>(t/=.5)<1?.5*t*t*t:.5*((t-=2)*t*t+2),easeInQuart:t=>t*t*t*t,easeOutQuart:t=>-((t-=1)*t*t*t-1),easeInOutQuart:t=>(t/=.5)<1?.5*t*t*t*t:-.5*((t-=2)*t*t*t-2),easeInQuint:t=>t*t*t*t*t,easeOutQuint:t=>(t-=1)*t*t*t*t+1,easeInOutQuint:t=>(t/=.5)<1?.5*t*t*t*t*t:.5*((t-=2)*t*t*t*t+2),easeInSine:t=>-Math.cos(t*j1)+1,easeOutSine:t=>Math.sin(t*j1),easeInOutSine:t=>-.5*(Math.cos(W0*t)-1),easeInExpo:t=>t===0?0:Math.pow(2,10*(t-1)),easeOutExpo:t=>t===1?1:-Math.pow(2,-10*t)+1,easeInOutExpo:t=>W7(t)?t:t<.5?.5*Math.pow(2,10*(t*2-1)):.5*(-Math.pow(2,-10*(t*2-1))+2),easeInCirc:t=>t>=1?t:-(Math.sqrt(1-t*t)-1),easeOutCirc:t=>Math.sqrt(1-(t-=1)*t),easeInOutCirc:t=>(t/=.5)<1?-.5*(Math.sqrt(1-t*t)-1):.5*(Math.sqrt(1-(t-=2)*t)+1),easeInElastic:t=>W7(t)?t:Li(t,.075,.3),easeOutElastic:t=>W7(t)?t:ji(t,.075,.3),easeInOutElastic(t){return W7(t)?t:t<.5?.5*Li(t*2,.1125,.45):.5+.5*ji(t*2-1,.1125,.45)},easeInBack(t){return t*t*((1.70158+1)*t-1.70158)},easeOutBack(t){return(t-=1)*t*((1.70158+1)*t+1.70158)+1},easeInOutBack(t){let e=1.70158;return(t/=.5)<1?.5*(t*t*(((e*=1.525)+1)*t-e)):.5*((t-=2)*t*(((e*=1.525)+1)*t+e)+2)},easeInBounce:t=>1-f6.easeOutBounce(1-t),easeOutBounce(t){return t<1/2.75?7.5625*t*t:t<2/2.75?7.5625*(t-=1.5/2.75)*t+.75:t<2.5/2.75?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375},easeInOutBounce:t=>t<.5?f6.easeInBounce(t*2)*.5:f6.easeOutBounce(t*2-1)*.5+.5};function Io(t){if(t&&typeof t=="object"){const e=t.toString();return e==="[object CanvasPattern]"||e==="[object CanvasGradient]"}return!1}function Hi(t){return Io(t)?t:new p6(t)}function M8(t){return Io(t)?t:new p6(t).saturate(.5).darken(.1).hexString()}const Vc=["x","y","borderWidth","radius","tension"],Wc=["color","borderColor","backgroundColor"];function Uc(t){t.set("animation",{delay:void 0,duration:1e3,easing:"easeOutQuart",fn:void 0,from:void 0,loop:void 0,to:void 0,type:void 0}),t.describe("animation",{_fallback:!1,_indexable:!1,_scriptable:e=>e!=="onProgress"&&e!=="onComplete"&&e!=="fn"}),t.set("animations",{colors:{type:"color",properties:Wc},numbers:{type:"number",properties:Vc}}),t.describe("animations",{_fallback:"animation"}),t.set("transitions",{active:{animation:{duration:400}},resize:{animation:{duration:0}},show:{animations:{colors:{from:"transparent"},visible:{type:"boolean",duration:0}}},hide:{animations:{colors:{to:"transparent"},visible:{type:"boolean",easing:"linear",fn:e=>e|0}}}})}function qc(t){t.set("layout",{autoPadding:!0,padding:{top:0,right:0,bottom:0,left:0}})}const $i=new Map;function Yc(t,e){e=e||{};const n=t+JSON.stringify(e);let i=$i.get(n);return i||(i=new Intl.NumberFormat(t,e),$i.set(n,i)),i}function Ro(t,e,n){return Yc(e,n).format(t)}const Lo={values(t){return _0(t)?t:""+t},numeric(t,e,n){if(t===0)return"0";const i=this.chart.options.locale;let o,u=t;if(n.length>1){const d=Math.max(Math.abs(n[0].value),Math.abs(n[n.length-1].value));(d<1e-4||d>1e15)&&(o="scientific"),u=Kc(t,n)}const a=st(Math.abs(u)),c=isNaN(a)?1:Math.max(Math.min(-1*Math.floor(a),20),0),h={notation:o,minimumFractionDigits:c,maximumFractionDigits:c};return Object.assign(h,this.options.ticks.format),Ro(t,i,h)},logarithmic(t,e,n){if(t===0)return"0";const i=n[e].significand||t/Math.pow(10,Math.floor(st(t)));return[1,2,3,5,10,15].includes(i)||e>.8*n.length?Lo.numeric.call(this,t,e,n):""}};function Kc(t,e){let n=e.length>3?e[2].value-e[1].value:e[1].value-e[0].value;return Math.abs(n)>=1&&t!==Math.floor(t)&&(n=t-Math.floor(t)),n}var jo={formatters:Lo};function Xc(t){t.set("scale",{display:!0,offset:!1,reverse:!1,beginAtZero:!1,bounds:"ticks",clip:!0,grace:0,grid:{display:!0,lineWidth:1,drawOnChartArea:!0,drawTicks:!0,tickLength:8,tickWidth:(e,n)=>n.lineWidth,tickColor:(e,n)=>n.color,offset:!1},border:{display:!0,dash:[],dashOffset:0,width:1},title:{display:!1,text:"",padding:{top:4,bottom:4}},ticks:{minRotation:0,maxRotation:50,mirror:!1,textStrokeWidth:0,textStrokeColor:"",padding:3,display:!0,autoSkip:!0,autoSkipPadding:3,labelOffset:0,callback:jo.formatters.values,minor:{},major:{},align:"center",crossAlign:"near",showLabelBackdrop:!1,backdropColor:"rgba(255, 255, 255, 0.75)",backdropPadding:2}}),t.route("scale.ticks","color","","color"),t.route("scale.grid","color","","borderColor"),t.route("scale.border","color","","borderColor"),t.route("scale.title","color","","color"),t.describe("scale",{_fallback:!1,_scriptable:e=>!e.startsWith("before")&&!e.startsWith("after")&&e!=="callback"&&e!=="parser",_indexable:e=>e!=="borderDash"&&e!=="tickBorderDash"&&e!=="dash"}),t.describe("scales",{_fallback:"scale"}),t.describe("scale.ticks",{_scriptable:e=>e!=="backdropPadding"&&e!=="callback",_indexable:e=>e!=="backdropPadding"})}const b2=Object.create(null),ut=Object.create(null);function h6(t,e){if(!e)return t;const n=e.split(".");for(let i=0,o=n.length;i<o;++i){const u=n[i];t=t[u]||(t[u]=Object.create(null))}return t}function k8(t,e,n){return typeof e=="string"?g6(h6(t,e),n):g6(h6(t,""),e)}class Qc{constructor(e,n){this.animation=void 0,this.backgroundColor="rgba(0,0,0,0.1)",this.borderColor="rgba(0,0,0,0.1)",this.color="#666",this.datasets={},this.devicePixelRatio=i=>i.chart.platform.getDevicePixelRatio(),this.elements={},this.events=["mousemove","mouseout","click","touchstart","touchmove"],this.font={family:"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",size:12,style:"normal",lineHeight:1.2,weight:null},this.hover={},this.hoverBackgroundColor=(i,o)=>M8(o.backgroundColor),this.hoverBorderColor=(i,o)=>M8(o.borderColor),this.hoverColor=(i,o)=>M8(o.color),this.indexAxis="x",this.interaction={mode:"nearest",intersect:!0,includeInvisible:!1},this.maintainAspectRatio=!0,this.onHover=null,this.onClick=null,this.parsing=!0,this.plugins={},this.responsive=!0,this.scale=void 0,this.scales={},this.showLine=!0,this.drawActiveElementsOnTop=!0,this.describe(e),this.apply(n)}set(e,n){return k8(this,e,n)}get(e){return h6(this,e)}describe(e,n){return k8(ut,e,n)}override(e,n){return k8(b2,e,n)}route(e,n,i,o){const u=h6(this,e),a=h6(this,i),c="_"+n;Object.defineProperties(u,{[c]:{value:u[n],writable:!0},[n]:{enumerable:!0,get(){const h=this[c],d=a[o];return V9(h)?Object.assign({},d,h):K9(h,d)},set(h){this[c]=h}}})}apply(e){e.forEach(n=>n(this))}}var d0=new Qc({_scriptable:t=>!t.startsWith("on"),_indexable:t=>t!=="events",hover:{_fallback:"interaction"},interaction:{_scriptable:!1,_indexable:!1}},[Uc,qc,Xc]);function Zc(t){return!t||r0(t.size)||r0(t.family)?null:(t.style?t.style+" ":"")+(t.weight?t.weight+" ":"")+t.size+"px "+t.family}function Vi(t,e,n,i,o){let u=e[o];return u||(u=e[o]=t.measureText(o).width,n.push(o)),u>i&&(i=u),i}function w2(t,e,n){const i=t.currentDevicePixelRatio,o=n!==0?Math.max(n/2,.5):0;return Math.round((e-o)*i)/i+o}function Wi(t,e){!e&&!t||(e=e||t.getContext("2d"),e.save(),e.resetTransform(),e.clearRect(0,0,t.width,t.height),e.restore())}function Ui(t,e,n,i){Ho(t,e,n,i,null)}function Ho(t,e,n,i,o){let u,a,c,h,d,p,m,D;const w=e.pointStyle,E=e.rotation,y=e.radius;let x=(E||0)*Mc;if(w&&typeof w=="object"&&(u=w.toString(),u==="[object HTMLImageElement]"||u==="[object HTMLCanvasElement]")){t.save(),t.translate(n,i),t.rotate(x),t.drawImage(w,-w.width/2,-w.height/2,w.width,w.height),t.restore();return}if(!(isNaN(y)||y<=0)){switch(t.beginPath(),w){default:o?t.ellipse(n,i,o/2,y,0,0,K5):t.arc(n,i,y,0,K5),t.closePath();break;case"triangle":p=o?o/2:y,t.moveTo(n+Math.sin(x)*p,i-Math.cos(x)*y),x+=Oi,t.lineTo(n+Math.sin(x)*p,i-Math.cos(x)*y),x+=Oi,t.lineTo(n+Math.sin(x)*p,i-Math.cos(x)*y),t.closePath();break;case"rectRounded":d=y*.516,h=y-d,a=Math.cos(x+y2)*h,m=Math.cos(x+y2)*(o?o/2-d:h),c=Math.sin(x+y2)*h,D=Math.sin(x+y2)*(o?o/2-d:h),t.arc(n-m,i-c,d,x-W0,x-j1),t.arc(n+D,i-a,d,x-j1,x),t.arc(n+m,i+c,d,x,x+j1),t.arc(n-D,i+a,d,x+j1,x+W0),t.closePath();break;case"rect":if(!E){h=Math.SQRT1_2*y,p=o?o/2:h,t.rect(n-p,i-h,2*p,2*h);break}x+=y2;case"rectRot":m=Math.cos(x)*(o?o/2:y),a=Math.cos(x)*y,c=Math.sin(x)*y,D=Math.sin(x)*(o?o/2:y),t.moveTo(n-m,i-c),t.lineTo(n+D,i-a),t.lineTo(n+m,i+c),t.lineTo(n-D,i+a),t.closePath();break;case"crossRot":x+=y2;case"cross":m=Math.cos(x)*(o?o/2:y),a=Math.cos(x)*y,c=Math.sin(x)*y,D=Math.sin(x)*(o?o/2:y),t.moveTo(n-m,i-c),t.lineTo(n+m,i+c),t.moveTo(n+D,i-a),t.lineTo(n-D,i+a);break;case"star":m=Math.cos(x)*(o?o/2:y),a=Math.cos(x)*y,c=Math.sin(x)*y,D=Math.sin(x)*(o?o/2:y),t.moveTo(n-m,i-c),t.lineTo(n+m,i+c),t.moveTo(n+D,i-a),t.lineTo(n-D,i+a),x+=y2,m=Math.cos(x)*(o?o/2:y),a=Math.cos(x)*y,c=Math.sin(x)*y,D=Math.sin(x)*(o?o/2:y),t.moveTo(n-m,i-c),t.lineTo(n+m,i+c),t.moveTo(n+D,i-a),t.lineTo(n-D,i+a);break;case"line":a=o?o/2:Math.cos(x)*y,c=Math.sin(x)*y,t.moveTo(n-a,i-c),t.lineTo(n+a,i+c);break;case"dash":t.moveTo(n,i),t.lineTo(n+Math.cos(x)*(o?o/2:y),i+Math.sin(x)*y);break;case!1:t.closePath();break}t.fill(),e.borderWidth>0&&t.stroke()}}function $o(t,e,n){return n=n||.5,!e||t&&t.x>e.left-n&&t.x<e.right+n&&t.y>e.top-n&&t.y<e.bottom+n}function kt(t,e){t.save(),t.beginPath(),t.rect(e.left,e.top,e.right-e.left,e.bottom-e.top),t.clip()}function Bt(t){t.restore()}function Gc(t,e){e.translation&&t.translate(e.translation[0],e.translation[1]),r0(e.rotation)||t.rotate(e.rotation),e.color&&(t.fillStyle=e.color),e.textAlign&&(t.textAlign=e.textAlign),e.textBaseline&&(t.textBaseline=e.textBaseline)}function Jc(t,e,n,i,o){if(o.strikethrough||o.underline){const u=t.measureText(i),a=e-u.actualBoundingBoxLeft,c=e+u.actualBoundingBoxRight,h=n-u.actualBoundingBoxAscent,d=n+u.actualBoundingBoxDescent,p=o.strikethrough?(h+d)/2:d;t.strokeStyle=t.fillStyle,t.beginPath(),t.lineWidth=o.decorationWidth||2,t.moveTo(a,p),t.lineTo(c,p),t.stroke()}}function ef(t,e){const n=t.fillStyle;t.fillStyle=e.color,t.fillRect(e.left,e.top,e.width,e.height),t.fillStyle=n}function v6(t,e,n,i,o,u={}){const a=_0(e)?e:[e],c=u.strokeWidth>0&&u.strokeColor!=="";let h,d;for(t.save(),t.font=o.string,Gc(t,u),h=0;h<a.length;++h)d=a[h],u.backdrop&&ef(t,u.backdrop),c&&(u.strokeColor&&(t.strokeStyle=u.strokeColor),r0(u.strokeWidth)||(t.lineWidth=u.strokeWidth),t.strokeText(d,n,i,u.maxWidth)),t.fillText(d,n,i,u.maxWidth),Jc(t,n,i,d,u),i+=Number(o.lineHeight);t.restore()}function d4(t,e){const{x:n,y:i,w:o,h:u,radius:a}=e;t.arc(n+a.topLeft,i+a.topLeft,a.topLeft,1.5*W0,W0,!0),t.lineTo(n,i+u-a.bottomLeft),t.arc(n+a.bottomLeft,i+u-a.bottomLeft,a.bottomLeft,W0,j1,!0),t.lineTo(n+o-a.bottomRight,i+u),t.arc(n+o-a.bottomRight,i+u-a.bottomRight,a.bottomRight,j1,0,!0),t.lineTo(n+o,i+a.topRight),t.arc(n+o-a.topRight,i+a.topRight,a.topRight,0,-j1,!0),t.lineTo(n+a.topLeft,i)}const tf=/^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/,nf=/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;function rf(t,e){const n=(""+t).match(tf);if(!n||n[1]==="normal")return e*1.2;switch(t=+n[2],n[3]){case"px":return t;case"%":t/=100;break}return e*t}const sf=t=>+t||0;function Vo(t,e){const n={},i=V9(e),o=i?Object.keys(e):e,u=V9(t)?i?a=>K9(t[a],t[e[a]]):a=>t[a]:()=>t;for(const a of o)n[a]=sf(u(a));return n}function Wo(t){return Vo(t,{top:"y",right:"x",bottom:"y",left:"x"})}function o3(t){return Vo(t,["topLeft","topRight","bottomLeft","bottomRight"])}function b1(t){const e=Wo(t);return e.width=e.left+e.right,e.height=e.top+e.bottom,e}function V0(t,e){t=t||{},e=e||d0.font;let n=K9(t.size,e.size);typeof n=="string"&&(n=parseInt(n,10));let i=K9(t.style,e.style);i&&!(""+i).match(nf)&&(console.warn('Invalid font style specified: "'+i+'"'),i=void 0);const o={family:K9(t.family,e.family),lineHeight:rf(K9(t.lineHeight,e.lineHeight),n),size:n,style:i,weight:K9(t.weight,e.weight),string:""};return o.string=Zc(o),o}function U7(t,e,n,i){let o,u,a;for(o=0,u=t.length;o<u;++o)if(a=t[o],a!==void 0&&a!==void 0)return a}function of(t,e,n){const{min:i,max:o}=t,u=Ec(e,(o-i)/2),a=(c,h)=>n&&c===0?0:c+h;return{min:a(i,-Math.abs(u)),max:a(o,u)}}function d3(t,e){return Object.assign(Object.create(t),e)}function Nt(t,e=[""],n,i,o=()=>t[0]){const u=n||t;typeof i>"u"&&(i=Ko("_fallback",t));const a={[Symbol.toStringTag]:"Object",_cacheable:!0,_scopes:t,_rootScopes:u,_fallback:i,_getTarget:o,override:c=>Nt([c,...t],e,u,i)};return new Proxy(a,{deleteProperty(c,h){return delete c[h],delete c._keys,delete t[0][h],!0},get(c,h){return qo(c,h,()=>pf(h,e,t,c))},getOwnPropertyDescriptor(c,h){return Reflect.getOwnPropertyDescriptor(c._scopes[0],h)},getPrototypeOf(){return Reflect.getPrototypeOf(t[0])},has(c,h){return Yi(c).includes(h)},ownKeys(c){return Yi(c)},set(c,h,d){const p=c._storage||(c._storage=o());return c[h]=p[h]=d,delete c._keys,!0}})}function c3(t,e,n,i){const o={_cacheable:!1,_proxy:t,_context:e,_subProxy:n,_stack:new Set,_descriptors:Uo(t,i),setContext:u=>c3(t,u,n,i),override:u=>c3(t.override(u),e,n,i)};return new Proxy(o,{deleteProperty(u,a){return delete u[a],delete t[a],!0},get(u,a,c){return qo(u,a,()=>af(u,a,c))},getOwnPropertyDescriptor(u,a){return u._descriptors.allKeys?Reflect.has(t,a)?{enumerable:!0,configurable:!0}:void 0:Reflect.getOwnPropertyDescriptor(t,a)},getPrototypeOf(){return Reflect.getPrototypeOf(t)},has(u,a){return Reflect.has(t,a)},ownKeys(){return Reflect.ownKeys(t)},set(u,a,c){return t[a]=c,delete u[a],!0}})}function Uo(t,e={scriptable:!0,indexable:!0}){const{_scriptable:n=e.scriptable,_indexable:i=e.indexable,_allKeys:o=e.allKeys}=t;return{allKeys:o,scriptable:n,indexable:i,isScriptable:Q5(n)?n:()=>n,isIndexable:Q5(i)?i:()=>i}}const uf=(t,e)=>t?t+At(e):e,Tt=(t,e)=>V9(e)&&t!=="adapters"&&(Object.getPrototypeOf(e)===null||e.constructor===Object);function qo(t,e,n){if(Object.prototype.hasOwnProperty.call(t,e)||e==="constructor")return t[e];const i=n();return t[e]=i,i}function af(t,e,n){const{_proxy:i,_context:o,_subProxy:u,_descriptors:a}=t;let c=i[e];return Q5(c)&&a.isScriptable(e)&&(c=lf(e,c,t,n)),_0(c)&&c.length&&(c=cf(e,c,t,a.isIndexable)),Tt(e,c)&&(c=c3(c,o,u&&u[e],a)),c}function lf(t,e,n,i){const{_proxy:o,_context:u,_subProxy:a,_stack:c}=n;if(c.has(t))throw new Error("Recursion detected: "+Array.from(c).join("->")+"->"+t);c.add(t);let h=e(u,a||i);return c.delete(t),Tt(t,h)&&(h=Pt(o._scopes,o,t,h)),h}function cf(t,e,n,i){const{_proxy:o,_context:u,_subProxy:a,_descriptors:c}=n;if(typeof u.index<"u"&&i(t))return e[u.index%e.length];if(V9(e[0])){const h=e,d=o._scopes.filter(p=>p!==h);e=[];for(const p of h){const m=Pt(d,o,t,p);e.push(c3(m,u,a&&a[t],c))}}return e}function Yo(t,e,n){return Q5(t)?t(e,n):t}const ff=(t,e)=>t===!0?e:typeof t=="string"?l3(e,t):void 0;function hf(t,e,n,i,o){for(const u of e){const a=ff(n,u);if(a){t.add(a);const c=Yo(a._fallback,n,o);if(typeof c<"u"&&c!==n&&c!==i)return c}else if(a===!1&&typeof i<"u"&&n!==i)return null}return!1}function Pt(t,e,n,i){const o=e._rootScopes,u=Yo(e._fallback,n,i),a=[...t,...o],c=new Set;c.add(i);let h=qi(c,a,n,u||n,i);return h===null||typeof u<"u"&&u!==n&&(h=qi(c,a,u,h,i),h===null)?!1:Nt(Array.from(c),[""],o,u,()=>df(e,n,i))}function qi(t,e,n,i,o){for(;n;)n=hf(t,e,n,i,o);return n}function df(t,e,n){const i=t._getTarget();e in i||(i[e]={});const o=i[e];return _0(o)&&V9(n)?n:o||{}}function pf(t,e,n,i){let o;for(const u of e)if(o=Ko(uf(u,t),n),typeof o<"u")return Tt(t,o)?Pt(n,i,t,o):o}function Ko(t,e){for(const n of e){if(!n)continue;const i=n[t];if(typeof i<"u")return i}}function Yi(t){let e=t._keys;return e||(e=t._keys=gf(t._scopes)),e}function gf(t){const e=new Set;for(const n of t)for(const i of Object.keys(n).filter(o=>!o.startsWith("_")))e.add(i);return Array.from(e)}function Ot(){return typeof window<"u"&&typeof document<"u"}function zt(t){let e=t.parentNode;return e&&e.toString()==="[object ShadowRoot]"&&(e=e.host),e}function p4(t,e,n){let i;return typeof t=="string"?(i=parseInt(t,10),t.indexOf("%")!==-1&&(i=i/100*e.parentNode[n])):i=t,i}const A4=t=>t.ownerDocument.defaultView.getComputedStyle(t,null);function mf(t,e){return A4(t).getPropertyValue(e)}const vf=["top","right","bottom","left"];function S2(t,e,n){const i={};n=n?"-"+n:"";for(let o=0;o<4;o++){const u=vf[o];i[u]=parseFloat(t[e+"-"+u+n])||0}return i.width=i.left+i.right,i.height=i.top+i.bottom,i}const yf=(t,e,n)=>(t>0||e>0)&&(!n||!n.shadowRoot);function Df(t,e){const n=t.touches,i=n&&n.length?n[0]:t,{offsetX:o,offsetY:u}=i;let a=!1,c,h;if(yf(o,u,t.target))c=o,h=u;else{const d=e.getBoundingClientRect();c=i.clientX-d.left,h=i.clientY-d.top,a=!0}return{x:c,y:h,box:a}}function x2(t,e){if("native"in t)return t;const{canvas:n,currentDevicePixelRatio:i}=e,o=A4(n),u=o.boxSizing==="border-box",a=S2(o,"padding"),c=S2(o,"border","width"),{x:h,y:d,box:p}=Df(t,n),m=a.left+(p&&c.left),D=a.top+(p&&c.top);let{width:w,height:E}=e;return u&&(w-=a.width+c.width,E-=a.height+c.height),{x:Math.round((h-m)/w*n.width/i),y:Math.round((d-D)/E*n.height/i)}}function wf(t,e,n){let i,o;if(e===void 0||n===void 0){const u=t&&zt(t);if(!u)e=t.clientWidth,n=t.clientHeight;else{const a=u.getBoundingClientRect(),c=A4(u),h=S2(c,"border","width"),d=S2(c,"padding");e=a.width-d.width-h.width,n=a.height-d.height-h.height,i=p4(c.maxWidth,u,"clientWidth"),o=p4(c.maxHeight,u,"clientHeight")}}return{width:e,height:n,maxWidth:i||f4,maxHeight:o||f4}}const q7=t=>Math.round(t*10)/10;function _f(t,e,n,i){const o=A4(t),u=S2(o,"margin"),a=p4(o.maxWidth,t,"clientWidth")||f4,c=p4(o.maxHeight,t,"clientHeight")||f4,h=wf(t,e,n);let{width:d,height:p}=h;if(o.boxSizing==="content-box"){const D=S2(o,"border","width"),w=S2(o,"padding");d-=w.width+D.width,p-=w.height+D.height}return d=Math.max(0,d-u.width),p=Math.max(0,i?d/i:p-u.height),d=q7(Math.min(d,a,h.maxWidth)),p=q7(Math.min(p,c,h.maxHeight)),d&&!p&&(p=q7(d/2)),(e!==void 0||n!==void 0)&&i&&h.height&&p>h.height&&(p=h.height,d=q7(Math.floor(p*i))),{width:d,height:p}}function Ki(t,e,n){const i=e||1,o=Math.floor(t.height*i),u=Math.floor(t.width*i);t.height=Math.floor(t.height),t.width=Math.floor(t.width);const a=t.canvas;return a.style&&(n||!a.style.height&&!a.style.width)&&(a.style.height=`${t.height}px`,a.style.width=`${t.width}px`),t.currentDevicePixelRatio!==i||a.height!==o||a.width!==u?(t.currentDevicePixelRatio=i,a.height=o,a.width=u,t.ctx.setTransform(i,0,0,i,0,0),!0):!1}const xf=function(){let t=!1;try{const e={get passive(){return t=!0,!1}};Ot()&&(window.addEventListener("test",null,e),window.removeEventListener("test",null,e))}catch{}return t}();function Xi(t,e){const n=mf(t,e),i=n&&n.match(/^(\d+)(\.\d+)?px$/);return i?+i[1]:void 0}const Ef=function(t,e){return{x(n){return t+t+e-n},setWidth(n){e=n},textAlign(n){return n==="center"?n:n==="right"?"left":"right"},xPlus(n,i){return n-i},leftForLtr(n,i){return n-i}}},Cf=function(){return{x(t){return t},setWidth(t){},textAlign(t){return t},xPlus(t,e){return t+e},leftForLtr(t,e){return t}}};function u3(t,e,n){return t?Ef(e,n):Cf()}function Xo(t,e){let n,i;(e==="ltr"||e==="rtl")&&(n=t.canvas.style,i=[n.getPropertyValue("direction"),n.getPropertyPriority("direction")],n.setProperty("direction",e,"important"),t.prevTextDirection=i)}function Qo(t,e){e!==void 0&&(delete t.prevTextDirection,t.canvas.style.setProperty("direction",e[0],e[1]))}/*!
 * Chart.js v4.4.7
 * https://www.chartjs.org
 * (c) 2024 Chart.js Contributors
 * Released under the MIT License
 */class Ff{constructor(){this._request=null,this._charts=new Map,this._running=!1,this._lastDate=void 0}_notify(e,n,i,o){const u=n.listeners[o],a=n.duration;u.forEach(c=>c({chart:e,initial:n.initial,numSteps:a,currentStep:Math.min(i-n.start,a)}))}_refresh(){this._request||(this._running=!0,this._request=Oo.call(window,()=>{this._update(),this._request=null,this._running&&this._refresh()}))}_update(e=Date.now()){let n=0;this._charts.forEach((i,o)=>{if(!i.running||!i.items.length)return;const u=i.items;let a=u.length-1,c=!1,h;for(;a>=0;--a)h=u[a],h._active?(h._total>i.duration&&(i.duration=h._total),h.tick(e),c=!0):(u[a]=u[u.length-1],u.pop());c&&(o.draw(),this._notify(o,i,e,"progress")),u.length||(i.running=!1,this._notify(o,i,e,"complete"),i.initial=!1),n+=u.length}),this._lastDate=e,n===0&&(this._running=!1)}_getAnims(e){const n=this._charts;let i=n.get(e);return i||(i={running:!1,initial:!0,items:[],listeners:{complete:[],progress:[]}},n.set(e,i)),i}listen(e,n,i){this._getAnims(e).listeners[n].push(i)}add(e,n){!n||!n.length||this._getAnims(e).items.push(...n)}has(e){return this._getAnims(e).items.length>0}start(e){const n=this._charts.get(e);n&&(n.running=!0,n.start=Date.now(),n.duration=n.items.reduce((i,o)=>Math.max(i,o._duration),0),this._refresh())}running(e){if(!this._running)return!1;const n=this._charts.get(e);return!(!n||!n.running||!n.items.length)}stop(e){const n=this._charts.get(e);if(!n||!n.items.length)return;const i=n.items;let o=i.length-1;for(;o>=0;--o)i[o].cancel();n.items=[],this._notify(e,n,Date.now(),"complete")}remove(e){return this._charts.delete(e)}}var g5=new Ff;const Qi="transparent",Sf={boolean(t,e,n){return n>.5?e:t},color(t,e,n){const i=Hi(t||Qi),o=i.valid&&Hi(e||Qi);return o&&o.valid?o.mix(i,n).hexString():e},number(t,e,n){return t+(e-t)*n}};class Af{constructor(e,n,i,o){const u=n[i];o=U7([e.to,o,u,e.from]);const a=U7([e.from,u,o]);this._active=!0,this._fn=e.fn||Sf[e.type||typeof a],this._easing=f6[e.easing]||f6.linear,this._start=Math.floor(Date.now()+(e.delay||0)),this._duration=this._total=Math.floor(e.duration),this._loop=!!e.loop,this._target=n,this._prop=i,this._from=a,this._to=o,this._promises=void 0}active(){return this._active}update(e,n,i){if(this._active){this._notify(!1);const o=this._target[this._prop],u=i-this._start,a=this._duration-u;this._start=i,this._duration=Math.floor(Math.max(a,e.duration)),this._total+=u,this._loop=!!e.loop,this._to=U7([e.to,n,o,e.from]),this._from=U7([e.from,o,n])}}cancel(){this._active&&(this.tick(Date.now()),this._active=!1,this._notify(!1))}tick(e){const n=e-this._start,i=this._duration,o=this._prop,u=this._from,a=this._loop,c=this._to;let h;if(this._active=u!==c&&(a||n<i),!this._active){this._target[o]=c,this._notify(!0);return}if(n<0){this._target[o]=u;return}h=n/i%2,h=a&&h>1?2-h:h,h=this._easing(Math.min(1,Math.max(0,h))),this._target[o]=this._fn(u,c,h)}wait(){const e=this._promises||(this._promises=[]);return new Promise((n,i)=>{e.push({res:n,rej:i})})}_notify(e){const n=e?"res":"rej",i=this._promises||[];for(let o=0;o<i.length;o++)i[o][n]()}}class Zo{constructor(e,n){this._chart=e,this._properties=new Map,this.configure(n)}configure(e){if(!V9(e))return;const n=Object.keys(d0.animation),i=this._properties;Object.getOwnPropertyNames(e).forEach(o=>{const u=e[o];if(!V9(u))return;const a={};for(const c of n)a[c]=u[c];(_0(u.properties)&&u.properties||[o]).forEach(c=>{(c===o||!i.has(c))&&i.set(c,a)})})}_animateOptions(e,n){const i=n.options,o=Mf(e,i);if(!o)return[];const u=this._createAnimations(o,i);return i.$shared&&bf(e.options.$animations,i).then(()=>{e.options=i},()=>{}),u}_createAnimations(e,n){const i=this._properties,o=[],u=e.$animations||(e.$animations={}),a=Object.keys(n),c=Date.now();let h;for(h=a.length-1;h>=0;--h){const d=a[h];if(d.charAt(0)==="$")continue;if(d==="options"){o.push(...this._animateOptions(e,n));continue}const p=n[d];let m=u[d];const D=i.get(d);if(m)if(D&&m.active()){m.update(D,p,c);continue}else m.cancel();if(!D||!D.duration){e[d]=p;continue}u[d]=m=new Af(D,e,d,p),o.push(m)}return o}update(e,n){if(this._properties.size===0){Object.assign(e,n);return}const i=this._createAnimations(e,n);if(i.length)return g5.add(this._chart,i),!0}}function bf(t,e){const n=[],i=Object.keys(e);for(let o=0;o<i.length;o++){const u=t[i[o]];u&&u.active()&&n.push(u.wait())}return Promise.all(n)}function Mf(t,e){if(!e)return;let n=t.options;if(!n){t.options=e;return}return n.$shared&&(t.options=n=Object.assign({},n,{$shared:!1,$animations:{}})),n}function Zi(t,e){const n=t&&t.options||{},i=n.reverse,o=n.min===void 0?e:0,u=n.max===void 0?e:0;return{start:i?u:o,end:i?o:u}}function kf(t,e,n){if(n===!1)return!1;const i=Zi(t,n),o=Zi(e,n);return{top:o.end,right:i.end,bottom:o.start,left:i.start}}function Bf(t){let e,n,i,o;return V9(t)?(e=t.top,n=t.right,i=t.bottom,o=t.left):e=n=i=o=t,{top:e,right:n,bottom:i,left:o,disabled:t===!1}}function Go(t,e){const n=[],i=t._getSortedDatasetMetas(e);let o,u;for(o=0,u=i.length;o<u;++o)n.push(i[o].index);return n}function Gi(t,e,n,i={}){const o=t.keys,u=i.mode==="single";let a,c,h,d;if(e===null)return;let p=!1;for(a=0,c=o.length;a<c;++a){if(h=+o[a],h===n){if(p=!0,i.all)continue;break}d=t.values[h],A1(d)&&(u||e===0||X5(e)===X5(d))&&(e+=d)}return!p&&!i.all?0:e}function Nf(t,e){const{iScale:n,vScale:i}=e,o=n.axis==="x"?"x":"y",u=i.axis==="x"?"x":"y",a=Object.keys(t),c=new Array(a.length);let h,d,p;for(h=0,d=a.length;h<d;++h)p=a[h],c[h]={[o]:p,[u]:t[p]};return c}function B8(t,e){const n=t&&t.options.stacked;return n||n===void 0&&e.stack!==void 0}function Tf(t,e,n){return`${t.id}.${e.id}.${n.stack||n.type}`}function Pf(t){const{min:e,max:n,minDefined:i,maxDefined:o}=t.getUserBounds();return{min:i?e:Number.NEGATIVE_INFINITY,max:o?n:Number.POSITIVE_INFINITY}}function Of(t,e,n){const i=t[e]||(t[e]={});return i[n]||(i[n]={})}function Ji(t,e,n,i){for(const o of e.getMatchingVisibleMetas(i).reverse()){const u=t[o.index];if(n&&u>0||!n&&u<0)return o.index}return null}function es(t,e){const{chart:n,_cachedMeta:i}=t,o=n._stacks||(n._stacks={}),{iScale:u,vScale:a,index:c}=i,h=u.axis,d=a.axis,p=Tf(u,a,i),m=e.length;let D;for(let w=0;w<m;++w){const E=e[w],{[h]:y,[d]:x}=E,C=E._stacks||(E._stacks={});D=C[d]=Of(o,p,y),D[c]=x,D._top=Ji(D,a,!0,i.type),D._bottom=Ji(D,a,!1,i.type);const k=D._visualValues||(D._visualValues={});k[c]=x}}function N8(t,e){const n=t.scales;return Object.keys(n).filter(i=>n[i].axis===e).shift()}function zf(t,e){return d3(t,{active:!1,dataset:void 0,datasetIndex:e,index:e,mode:"default",type:"dataset"})}function If(t,e,n){return d3(t,{active:!1,dataIndex:e,parsed:void 0,raw:void 0,element:n,index:e,mode:"default",type:"data"})}function t6(t,e){const n=t.controller.index,i=t.vScale&&t.vScale.axis;if(i){e=e||t._parsed;for(const o of e){const u=o._stacks;if(!u||u[i]===void 0||u[i][n]===void 0)return;delete u[i][n],u[i]._visualValues!==void 0&&u[i]._visualValues[n]!==void 0&&delete u[i]._visualValues[n]}}}const T8=t=>t==="reset"||t==="none",ts=(t,e)=>e?t:Object.assign({},t),Rf=(t,e,n)=>t&&!e.hidden&&e._stacked&&{keys:Go(n,!0),values:null};class d6{constructor(e,n){this.chart=e,this._ctx=e.ctx,this.index=n,this._cachedDataOpts={},this._cachedMeta=this.getMeta(),this._type=this._cachedMeta.type,this.options=void 0,this._parsing=!1,this._data=void 0,this._objectData=void 0,this._sharedOptions=void 0,this._drawStart=void 0,this._drawCount=void 0,this.enableOptionSharing=!1,this.supportsDecimation=!1,this.$context=void 0,this._syncList=[],this.datasetElementType=new.target.datasetElementType,this.dataElementType=new.target.dataElementType,this.initialize()}initialize(){const e=this._cachedMeta;this.configure(),this.linkScales(),e._stacked=B8(e.vScale,e),this.addElements(),this.options.fill&&!this.chart.isPluginEnabled("filler")&&console.warn("Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options")}updateIndex(e){this.index!==e&&t6(this._cachedMeta),this.index=e}linkScales(){const e=this.chart,n=this._cachedMeta,i=this.getDataset(),o=(m,D,w,E)=>m==="x"?D:m==="r"?E:w,u=n.xAxisID=K9(i.xAxisID,N8(e,"x")),a=n.yAxisID=K9(i.yAxisID,N8(e,"y")),c=n.rAxisID=K9(i.rAxisID,N8(e,"r")),h=n.indexAxis,d=n.iAxisID=o(h,u,a,c),p=n.vAxisID=o(h,a,u,c);n.xScale=this.getScaleForId(u),n.yScale=this.getScaleForId(a),n.rScale=this.getScaleForId(c),n.iScale=this.getScaleForId(d),n.vScale=this.getScaleForId(p)}getDataset(){return this.chart.data.datasets[this.index]}getMeta(){return this.chart.getDatasetMeta(this.index)}getScaleForId(e){return this.chart.scales[e]}_getOtherScale(e){const n=this._cachedMeta;return e===n.iScale?n.vScale:n.iScale}reset(){this._update("reset")}_destroy(){const e=this._cachedMeta;this._data&&Ri(this._data,this),e._stacked&&t6(e)}_dataCheck(){const e=this.getDataset(),n=e.data||(e.data=[]),i=this._data;if(V9(n)){const o=this._cachedMeta;this._data=Nf(n,o)}else if(i!==n){if(i){Ri(i,this);const o=this._cachedMeta;t6(o),o._parsed=[]}n&&Object.isExtensible(n)&&jc(n,this),this._syncList=[],this._data=n}}addElements(){const e=this._cachedMeta;this._dataCheck(),this.datasetElementType&&(e.dataset=new this.datasetElementType)}buildOrUpdateElements(e){const n=this._cachedMeta,i=this.getDataset();let o=!1;this._dataCheck();const u=n._stacked;n._stacked=B8(n.vScale,n),n.stack!==i.stack&&(o=!0,t6(n),n.stack=i.stack),this._resyncElements(e),(o||u!==n._stacked)&&(es(this,n._parsed),n._stacked=B8(n.vScale,n))}configure(){const e=this.chart.config,n=e.datasetScopeKeys(this._type),i=e.getOptionScopes(this.getDataset(),n,!0);this.options=e.createResolver(i,this.getContext()),this._parsing=this.options.parsing,this._cachedDataOpts={}}parse(e,n){const{_cachedMeta:i,_data:o}=this,{iScale:u,_stacked:a}=i,c=u.axis;let h=e===0&&n===o.length?!0:i._sorted,d=e>0&&i._parsed[e-1],p,m,D;if(this._parsing===!1)i._parsed=o,i._sorted=!0,D=o;else{_0(o[e])?D=this.parseArrayData(i,o,e,n):V9(o[e])?D=this.parseObjectData(i,o,e,n):D=this.parsePrimitiveData(i,o,e,n);const w=()=>m[c]===null||d&&m[c]<d[c];for(p=0;p<n;++p)i._parsed[p+e]=m=D[p],h&&(w()&&(h=!1),d=m);i._sorted=h}a&&es(this,D)}parsePrimitiveData(e,n,i,o){const{iScale:u,vScale:a}=e,c=u.axis,h=a.axis,d=u.getLabels(),p=u===a,m=new Array(o);let D,w,E;for(D=0,w=o;D<w;++D)E=D+i,m[D]={[c]:p||u.parse(d[E],E),[h]:a.parse(n[E],E)};return m}parseArrayData(e,n,i,o){const{xScale:u,yScale:a}=e,c=new Array(o);let h,d,p,m;for(h=0,d=o;h<d;++h)p=h+i,m=n[p],c[h]={x:u.parse(m[0],p),y:a.parse(m[1],p)};return c}parseObjectData(e,n,i,o){const{xScale:u,yScale:a}=e,{xAxisKey:c="x",yAxisKey:h="y"}=this._parsing,d=new Array(o);let p,m,D,w;for(p=0,m=o;p<m;++p)D=p+i,w=n[D],d[p]={x:u.parse(l3(w,c),D),y:a.parse(l3(w,h),D)};return d}getParsed(e){return this._cachedMeta._parsed[e]}getDataElement(e){return this._cachedMeta.data[e]}applyStack(e,n,i){const o=this.chart,u=this._cachedMeta,a=n[e.axis],c={keys:Go(o,!0),values:n._stacks[e.axis]._visualValues};return Gi(c,a,u.index,{mode:i})}updateRangeFromParsed(e,n,i,o){const u=i[n.axis];let a=u===null?NaN:u;const c=o&&i._stacks[n.axis];o&&c&&(o.values=c,a=Gi(o,u,this._cachedMeta.index)),e.min=Math.min(e.min,a),e.max=Math.max(e.max,a)}getMinMax(e,n){const i=this._cachedMeta,o=i._parsed,u=i._sorted&&e===i.iScale,a=o.length,c=this._getOtherScale(e),h=Rf(n,i,this.chart),d={min:Number.POSITIVE_INFINITY,max:Number.NEGATIVE_INFINITY},{min:p,max:m}=Pf(c);let D,w;function E(){w=o[D];const y=w[c.axis];return!A1(w[e.axis])||p>y||m<y}for(D=0;D<a&&!(!E()&&(this.updateRangeFromParsed(d,e,w,h),u));++D);if(u){for(D=a-1;D>=0;--D)if(!E()){this.updateRangeFromParsed(d,e,w,h);break}}return d}getAllParsedValues(e){const n=this._cachedMeta._parsed,i=[];let o,u,a;for(o=0,u=n.length;o<u;++o)a=n[o][e.axis],A1(a)&&i.push(a);return i}getMaxOverflow(){return!1}getLabelAndValue(e){const n=this._cachedMeta,i=n.iScale,o=n.vScale,u=this.getParsed(e);return{label:i?""+i.getLabelForValue(u[i.axis]):"",value:o?""+o.getLabelForValue(u[o.axis]):""}}_update(e){const n=this._cachedMeta;this.update(e||"default"),n._clip=Bf(K9(this.options.clip,kf(n.xScale,n.yScale,this.getMaxOverflow())))}update(e){}draw(){const e=this._ctx,n=this.chart,i=this._cachedMeta,o=i.data||[],u=n.chartArea,a=[],c=this._drawStart||0,h=this._drawCount||o.length-c,d=this.options.drawActiveElementsOnTop;let p;for(i.dataset&&i.dataset.draw(e,u,c,h),p=c;p<c+h;++p){const m=o[p];m.hidden||(m.active&&d?a.push(m):m.draw(e,u))}for(p=0;p<a.length;++p)a[p].draw(e,u)}getStyle(e,n){const i=n?"active":"default";return e===void 0&&this._cachedMeta.dataset?this.resolveDatasetElementOptions(i):this.resolveDataElementOptions(e||0,i)}getContext(e,n,i){const o=this.getDataset();let u;if(e>=0&&e<this._cachedMeta.data.length){const a=this._cachedMeta.data[e];u=a.$context||(a.$context=If(this.getContext(),e,a)),u.parsed=this.getParsed(e),u.raw=o.data[e],u.index=u.dataIndex=e}else u=this.$context||(this.$context=zf(this.chart.getContext(),this.index)),u.dataset=o,u.index=u.datasetIndex=this.index;return u.active=!!n,u.mode=i,u}resolveDatasetElementOptions(e){return this._resolveElementOptions(this.datasetElementType.id,e)}resolveDataElementOptions(e,n){return this._resolveElementOptions(this.dataElementType.id,n,e)}_resolveElementOptions(e,n="default",i){const o=n==="active",u=this._cachedDataOpts,a=e+"-"+n,c=u[a],h=this.enableOptionSharing&&m6(i);if(c)return ts(c,h);const d=this.chart.config,p=d.datasetElementScopeKeys(this._type,e),m=o?[`${e}Hover`,"hover",e,""]:[e,""],D=d.getOptionScopes(this.getDataset(),p),w=Object.keys(d0.elements[e]),E=()=>this.getContext(i,o,n),y=d.resolveNamedOptions(D,w,E,m);return y.$shared&&(y.$shared=h,u[a]=Object.freeze(ts(y,h))),y}_resolveAnimations(e,n,i){const o=this.chart,u=this._cachedDataOpts,a=`animation-${n}`,c=u[a];if(c)return c;let h;if(o.options.animation!==!1){const p=this.chart.config,m=p.datasetAnimationScopeKeys(this._type,n),D=p.getOptionScopes(this.getDataset(),m);h=p.createResolver(D,this.getContext(e,i,n))}const d=new Zo(o,h&&h.animations);return h&&h._cacheable&&(u[a]=Object.freeze(d)),d}getSharedOptions(e){if(e.$shared)return this._sharedOptions||(this._sharedOptions=Object.assign({},e))}includeOptions(e,n){return!n||T8(e)||this.chart._animationsDisabled}_getSharedOptions(e,n){const i=this.resolveDataElementOptions(e,n),o=this._sharedOptions,u=this.getSharedOptions(i),a=this.includeOptions(n,u)||u!==o;return this.updateSharedOptions(u,n,i),{sharedOptions:u,includeOptions:a}}updateElement(e,n,i,o){T8(o)?Object.assign(e,i):this._resolveAnimations(n,o).update(e,i)}updateSharedOptions(e,n,i){e&&!T8(n)&&this._resolveAnimations(void 0,n).update(e,i)}_setStyle(e,n,i,o){e.active=o;const u=this.getStyle(n,o);this._resolveAnimations(n,i,o).update(e,{options:!o&&this.getSharedOptions(u)||u})}removeHoverStyle(e,n,i){this._setStyle(e,i,"active",!1)}setHoverStyle(e,n,i){this._setStyle(e,i,"active",!0)}_removeDatasetHoverStyle(){const e=this._cachedMeta.dataset;e&&this._setStyle(e,void 0,"active",!1)}_setDatasetHoverStyle(){const e=this._cachedMeta.dataset;e&&this._setStyle(e,void 0,"active",!0)}_resyncElements(e){const n=this._data,i=this._cachedMeta.data;for(const[c,h,d]of this._syncList)this[c](h,d);this._syncList=[];const o=i.length,u=n.length,a=Math.min(u,o);a&&this.parse(0,a),u>o?this._insertElements(o,u-o,e):u<o&&this._removeElements(u,o-u)}_insertElements(e,n,i=!0){const o=this._cachedMeta,u=o.data,a=e+n;let c;const h=d=>{for(d.length+=n,c=d.length-1;c>=a;c--)d[c]=d[c-n]};for(h(u),c=e;c<a;++c)u[c]=new this.dataElementType;this._parsing&&h(o._parsed),this.parse(e,n),i&&this.updateElements(u,e,n,"reset")}updateElements(e,n,i,o){}_removeElements(e,n){const i=this._cachedMeta;if(this._parsing){const o=i._parsed.splice(e,n);i._stacked&&t6(i,o)}i.data.splice(e,n)}_sync(e){if(this._parsing)this._syncList.push(e);else{const[n,i,o]=e;this[n](i,o)}this.chart._dataChanges.push([this.index,...e])}_onDataPush(){const e=arguments.length;this._sync(["_insertElements",this.getDataset().data.length-e,e])}_onDataPop(){this._sync(["_removeElements",this._cachedMeta.data.length-1,1])}_onDataShift(){this._sync(["_removeElements",0,1])}_onDataSplice(e,n){n&&this._sync(["_removeElements",e,n]);const i=arguments.length-2;i&&this._sync(["_insertElements",e,i])}_onDataUnshift(){this._sync(["_insertElements",0,arguments.length])}}j9(d6,"defaults",{}),j9(d6,"datasetElementType",null),j9(d6,"dataElementType",null);function Lf(t,e){if(!t._cache.$bar){const n=t.getMatchingVisibleMetas(e);let i=[];for(let o=0,u=n.length;o<u;o++)i=i.concat(n[o].controller.getAllParsedValues(t));t._cache.$bar=Po(i.sort((o,u)=>o-u))}return t._cache.$bar}function jf(t){const e=t.iScale,n=Lf(e,t.type);let i=e._length,o,u,a,c;const h=()=>{a===32767||a===-32768||(m6(c)&&(i=Math.min(i,Math.abs(a-c)||i)),c=a)};for(o=0,u=n.length;o<u;++o)a=e.getPixelForValue(n[o]),h();for(c=void 0,o=0,u=e.ticks.length;o<u;++o)a=e.getPixelForTick(o),h();return i}function Hf(t,e,n,i){const o=n.barThickness;let u,a;return r0(o)?(u=e.min*n.categoryPercentage,a=n.barPercentage):(u=o*i,a=1),{chunk:u/i,ratio:a,start:e.pixels[t]-u/2}}function $f(t,e,n,i){const o=e.pixels,u=o[t];let a=t>0?o[t-1]:null,c=t<o.length-1?o[t+1]:null;const h=n.categoryPercentage;a===null&&(a=u-(c===null?e.end-e.start:c-u)),c===null&&(c=u+u-a);const d=u-(u-Math.min(a,c))/2*h;return{chunk:Math.abs(c-a)/2*h/i,ratio:n.barPercentage,start:d}}function Vf(t,e,n,i){const o=n.parse(t[0],i),u=n.parse(t[1],i),a=Math.min(o,u),c=Math.max(o,u);let h=a,d=c;Math.abs(a)>Math.abs(c)&&(h=c,d=a),e[n.axis]=d,e._custom={barStart:h,barEnd:d,start:o,end:u,min:a,max:c}}function Jo(t,e,n,i){return _0(t)?Vf(t,e,n,i):e[n.axis]=n.parse(t,i),e}function ns(t,e,n,i){const o=t.iScale,u=t.vScale,a=o.getLabels(),c=o===u,h=[];let d,p,m,D;for(d=n,p=n+i;d<p;++d)D=e[d],m={},m[o.axis]=c||o.parse(a[d],d),h.push(Jo(D,m,u,d));return h}function P8(t){return t&&t.barStart!==void 0&&t.barEnd!==void 0}function Wf(t,e,n){return t!==0?X5(t):(e.isHorizontal()?1:-1)*(e.min>=n?1:-1)}function Uf(t){let e,n,i,o,u;return t.horizontal?(e=t.base>t.x,n="left",i="right"):(e=t.base<t.y,n="bottom",i="top"),e?(o="end",u="start"):(o="start",u="end"),{start:n,end:i,reverse:e,top:o,bottom:u}}function qf(t,e,n,i){let o=e.borderSkipped;const u={};if(!o){t.borderSkipped=u;return}if(o===!0){t.borderSkipped={top:!0,right:!0,bottom:!0,left:!0};return}const{start:a,end:c,reverse:h,top:d,bottom:p}=Uf(t);o==="middle"&&n&&(t.enableBorderRadius=!0,(n._top||0)===i?o=d:(n._bottom||0)===i?o=p:(u[rs(p,a,c,h)]=!0,o=d)),u[rs(o,a,c,h)]=!0,t.borderSkipped=u}function rs(t,e,n,i){return i?(t=Yf(t,e,n),t=is(t,n,e)):t=is(t,e,n),t}function Yf(t,e,n){return t===e?n:t===n?e:t}function is(t,e,n){return t==="start"?e:t==="end"?n:t}function Kf(t,{inflateAmount:e},n){t.inflateAmount=e==="auto"?n===1?.33:0:e}class i4 extends d6{parsePrimitiveData(e,n,i,o){return ns(e,n,i,o)}parseArrayData(e,n,i,o){return ns(e,n,i,o)}parseObjectData(e,n,i,o){const{iScale:u,vScale:a}=e,{xAxisKey:c="x",yAxisKey:h="y"}=this._parsing,d=u.axis==="x"?c:h,p=a.axis==="x"?c:h,m=[];let D,w,E,y;for(D=i,w=i+o;D<w;++D)y=n[D],E={},E[u.axis]=u.parse(l3(y,d),D),m.push(Jo(l3(y,p),E,a,D));return m}updateRangeFromParsed(e,n,i,o){super.updateRangeFromParsed(e,n,i,o);const u=i._custom;u&&n===this._cachedMeta.vScale&&(e.min=Math.min(e.min,u.min),e.max=Math.max(e.max,u.max))}getMaxOverflow(){return 0}getLabelAndValue(e){const n=this._cachedMeta,{iScale:i,vScale:o}=n,u=this.getParsed(e),a=u._custom,c=P8(a)?"["+a.start+", "+a.end+"]":""+o.getLabelForValue(u[o.axis]);return{label:""+i.getLabelForValue(u[i.axis]),value:c}}initialize(){this.enableOptionSharing=!0,super.initialize();const e=this._cachedMeta;e.stack=this.getDataset().stack}update(e){const n=this._cachedMeta;this.updateElements(n.data,0,n.data.length,e)}updateElements(e,n,i,o){const u=o==="reset",{index:a,_cachedMeta:{vScale:c}}=this,h=c.getBasePixel(),d=c.isHorizontal(),p=this._getRuler(),{sharedOptions:m,includeOptions:D}=this._getSharedOptions(n,o);for(let w=n;w<n+i;w++){const E=this.getParsed(w),y=u||r0(E[c.axis])?{base:h,head:h}:this._calculateBarValuePixels(w),x=this._calculateBarIndexPixels(w,p),C=(E._stacks||{})[c.axis],k={horizontal:d,base:y.base,enableBorderRadius:!C||P8(E._custom)||a===C._top||a===C._bottom,x:d?y.head:x.center,y:d?x.center:y.head,height:d?x.size:Math.abs(y.size),width:d?Math.abs(y.size):x.size};D&&(k.options=m||this.resolveDataElementOptions(w,e[w].active?"active":o));const A=k.options||e[w].options;qf(k,A,C,a),Kf(k,A,p.ratio),this.updateElement(e[w],w,k,o)}}_getStacks(e,n){const{iScale:i}=this._cachedMeta,o=i.getMatchingVisibleMetas(this._type).filter(p=>p.controller.options.grouped),u=i.options.stacked,a=[],c=this._cachedMeta.controller.getParsed(n),h=c&&c[i.axis],d=p=>{const m=p._parsed.find(w=>w[i.axis]===h),D=m&&m[p.vScale.axis];if(r0(D)||isNaN(D))return!0};for(const p of o)if(!(n!==void 0&&d(p))&&((u===!1||a.indexOf(p.stack)===-1||u===void 0&&p.stack===void 0)&&a.push(p.stack),p.index===e))break;return a.length||a.push(void 0),a}_getStackCount(e){return this._getStacks(void 0,e).length}_getStackIndex(e,n,i){const o=this._getStacks(e,i),u=n!==void 0?o.indexOf(n):-1;return u===-1?o.length-1:u}_getRuler(){const e=this.options,n=this._cachedMeta,i=n.iScale,o=[];let u,a;for(u=0,a=n.data.length;u<a;++u)o.push(i.getPixelForValue(this.getParsed(u)[i.axis],u));const c=e.barThickness;return{min:c||jf(n),pixels:o,start:i._startPixel,end:i._endPixel,stackCount:this._getStackCount(),scale:i,grouped:e.grouped,ratio:c?1:e.categoryPercentage*e.barPercentage}}_calculateBarValuePixels(e){const{_cachedMeta:{vScale:n,_stacked:i,index:o},options:{base:u,minBarLength:a}}=this,c=u||0,h=this.getParsed(e),d=h._custom,p=P8(d);let m=h[n.axis],D=0,w=i?this.applyStack(n,h,i):m,E,y;w!==m&&(D=w-m,w=m),p&&(m=d.barStart,w=d.barEnd-d.barStart,m!==0&&X5(m)!==X5(d.barEnd)&&(D=0),D+=m);const x=!r0(u)&&!p?u:D;let C=n.getPixelForValue(x);if(this.chart.getDataVisibility(e)?E=n.getPixelForValue(D+w):E=C,y=E-C,Math.abs(y)<a){y=Wf(y,n,c)*a,m===c&&(C-=y/2);const k=n.getPixelForDecimal(0),A=n.getPixelForDecimal(1),B=Math.min(k,A),F=Math.max(k,A);C=Math.max(Math.min(C,F),B),E=C+y,i&&!p&&(h._stacks[n.axis]._visualValues[o]=n.getValueForPixel(E)-n.getValueForPixel(C))}if(C===n.getPixelForValue(c)){const k=X5(y)*n.getLineWidthForValue(c)/2;C+=k,y-=k}return{size:y,base:C,head:E,center:E+y/2}}_calculateBarIndexPixels(e,n){const i=n.scale,o=this.options,u=o.skipNull,a=K9(o.maxBarThickness,1/0);let c,h;if(n.grouped){const d=u?this._getStackCount(e):n.stackCount,p=o.barThickness==="flex"?$f(e,n,o,d):Hf(e,n,o,d),m=this._getStackIndex(this.index,this._cachedMeta.stack,u?e:void 0);c=p.start+p.chunk*m+p.chunk/2,h=Math.min(a,p.chunk*p.ratio)}else c=i.getPixelForValue(this.getParsed(e)[i.axis],e),h=Math.min(a,n.min*n.ratio);return{base:c-h/2,head:c+h/2,center:c,size:h}}draw(){const e=this._cachedMeta,n=e.vScale,i=e.data,o=i.length;let u=0;for(;u<o;++u)this.getParsed(u)[n.axis]!==null&&!i[u].hidden&&i[u].draw(this._ctx)}}j9(i4,"id","bar"),j9(i4,"defaults",{datasetElementType:!1,dataElementType:"bar",categoryPercentage:.8,barPercentage:.9,grouped:!0,animations:{numbers:{type:"number",properties:["x","y","base","width","height"]}}}),j9(i4,"overrides",{scales:{_index_:{type:"category",offset:!0,grid:{offset:!0}},_value_:{type:"linear",beginAtZero:!0}}});function _2(){throw new Error("This method is not implemented: Check that a complete date adapter is provided.")}class It{constructor(e){j9(this,"options");this.options=e||{}}static override(e){Object.assign(It.prototype,e)}init(){}formats(){return _2()}parse(){return _2()}format(){return _2()}add(){return _2()}diff(){return _2()}startOf(){return _2()}endOf(){return _2()}}var Xf={_date:It};function Qf(t,e,n,i){const{controller:o,data:u,_sorted:a}=t,c=o._cachedMeta.iScale;if(c&&e===c.axis&&e!=="r"&&a&&u.length){const h=c._reversePixels?Rc:ot;if(i){if(o._sharedOptions){const d=u[0],p=typeof d.getRange=="function"&&d.getRange(e);if(p){const m=h(u,e,n-p),D=h(u,e,n+p);return{lo:m.lo,hi:D.hi}}}}else return h(u,e,n)}return{lo:0,hi:u.length-1}}function E6(t,e,n,i,o){const u=t.getSortedVisibleDatasetMetas(),a=n[e];for(let c=0,h=u.length;c<h;++c){const{index:d,data:p}=u[c],{lo:m,hi:D}=Qf(u[c],e,a,o);for(let w=m;w<=D;++w){const E=p[w];E.skip||i(E,d,w)}}}function Zf(t){const e=t.indexOf("x")!==-1,n=t.indexOf("y")!==-1;return function(i,o){const u=e?Math.abs(i.x-o.x):0,a=n?Math.abs(i.y-o.y):0;return Math.sqrt(Math.pow(u,2)+Math.pow(a,2))}}function O8(t,e,n,i,o){const u=[];return!o&&!t.isPointInArea(e)||E6(t,n,e,function(c,h,d){!o&&!$o(c,t.chartArea,0)||c.inRange(e.x,e.y,i)&&u.push({element:c,datasetIndex:h,index:d})},!0),u}function Gf(t,e,n,i){let o=[];function u(a,c,h){const{startAngle:d,endAngle:p}=a.getProps(["startAngle","endAngle"],i),{angle:m}=Pc(a,{x:e.x,y:e.y});zc(m,d,p)&&o.push({element:a,datasetIndex:c,index:h})}return E6(t,n,e,u),o}function Jf(t,e,n,i,o,u){let a=[];const c=Zf(n);let h=Number.POSITIVE_INFINITY;function d(p,m,D){const w=p.inRange(e.x,e.y,o);if(i&&!w)return;const E=p.getCenterPoint(o);if(!(!!u||t.isPointInArea(E))&&!w)return;const x=c(e,E);x<h?(a=[{element:p,datasetIndex:m,index:D}],h=x):x===h&&a.push({element:p,datasetIndex:m,index:D})}return E6(t,n,e,d),a}function z8(t,e,n,i,o,u){return!u&&!t.isPointInArea(e)?[]:n==="r"&&!i?Gf(t,e,n,o):Jf(t,e,n,i,o,u)}function ss(t,e,n,i,o){const u=[],a=n==="x"?"inXRange":"inYRange";let c=!1;return E6(t,n,e,(h,d,p)=>{h[a]&&h[a](e[n],o)&&(u.push({element:h,datasetIndex:d,index:p}),c=c||h.inRange(e.x,e.y,o))}),i&&!c?[]:u}var eh={evaluateInteractionItems:E6,modes:{index(t,e,n,i){const o=x2(e,t),u=n.axis||"x",a=n.includeInvisible||!1,c=n.intersect?O8(t,o,u,i,a):z8(t,o,u,!1,i,a),h=[];return c.length?(t.getSortedVisibleDatasetMetas().forEach(d=>{const p=c[0].index,m=d.data[p];m&&!m.skip&&h.push({element:m,datasetIndex:d.index,index:p})}),h):[]},dataset(t,e,n,i){const o=x2(e,t),u=n.axis||"xy",a=n.includeInvisible||!1;let c=n.intersect?O8(t,o,u,i,a):z8(t,o,u,!1,i,a);if(c.length>0){const h=c[0].datasetIndex,d=t.getDatasetMeta(h).data;c=[];for(let p=0;p<d.length;++p)c.push({element:d[p],datasetIndex:h,index:p})}return c},point(t,e,n,i){const o=x2(e,t),u=n.axis||"xy",a=n.includeInvisible||!1;return O8(t,o,u,i,a)},nearest(t,e,n,i){const o=x2(e,t),u=n.axis||"xy",a=n.includeInvisible||!1;return z8(t,o,u,n.intersect,i,a)},x(t,e,n,i){const o=x2(e,t);return ss(t,o,"x",n.intersect,i)},y(t,e,n,i){const o=x2(e,t);return ss(t,o,"y",n.intersect,i)}}};const eu=["left","top","right","bottom"];function n6(t,e){return t.filter(n=>n.pos===e)}function os(t,e){return t.filter(n=>eu.indexOf(n.pos)===-1&&n.box.axis===e)}function r6(t,e){return t.sort((n,i)=>{const o=e?i:n,u=e?n:i;return o.weight===u.weight?o.index-u.index:o.weight-u.weight})}function th(t){const e=[];let n,i,o,u,a,c;for(n=0,i=(t||[]).length;n<i;++n)o=t[n],{position:u,options:{stack:a,stackWeight:c=1}}=o,e.push({index:n,box:o,pos:u,horizontal:o.isHorizontal(),weight:o.weight,stack:a&&u+a,stackWeight:c});return e}function nh(t){const e={};for(const n of t){const{stack:i,pos:o,stackWeight:u}=n;if(!i||!eu.includes(o))continue;const a=e[i]||(e[i]={count:0,placed:0,weight:0,size:0});a.count++,a.weight+=u}return e}function rh(t,e){const n=nh(t),{vBoxMaxWidth:i,hBoxMaxHeight:o}=e;let u,a,c;for(u=0,a=t.length;u<a;++u){c=t[u];const{fullSize:h}=c.box,d=n[c.stack],p=d&&c.stackWeight/d.weight;c.horizontal?(c.width=p?p*i:h&&e.availableWidth,c.height=o):(c.width=i,c.height=p?p*o:h&&e.availableHeight)}return n}function ih(t){const e=th(t),n=r6(e.filter(d=>d.box.fullSize),!0),i=r6(n6(e,"left"),!0),o=r6(n6(e,"right")),u=r6(n6(e,"top"),!0),a=r6(n6(e,"bottom")),c=os(e,"x"),h=os(e,"y");return{fullSize:n,leftAndTop:i.concat(u),rightAndBottom:o.concat(h).concat(a).concat(c),chartArea:n6(e,"chartArea"),vertical:i.concat(o).concat(h),horizontal:u.concat(a).concat(c)}}function us(t,e,n,i){return Math.max(t[n],e[n])+Math.max(t[i],e[i])}function tu(t,e){t.top=Math.max(t.top,e.top),t.left=Math.max(t.left,e.left),t.bottom=Math.max(t.bottom,e.bottom),t.right=Math.max(t.right,e.right)}function sh(t,e,n,i){const{pos:o,box:u}=n,a=t.maxPadding;if(!V9(o)){n.size&&(t[o]-=n.size);const m=i[n.stack]||{size:0,count:1};m.size=Math.max(m.size,n.horizontal?u.height:u.width),n.size=m.size/m.count,t[o]+=n.size}u.getPadding&&tu(a,u.getPadding());const c=Math.max(0,e.outerWidth-us(a,t,"left","right")),h=Math.max(0,e.outerHeight-us(a,t,"top","bottom")),d=c!==t.w,p=h!==t.h;return t.w=c,t.h=h,n.horizontal?{same:d,other:p}:{same:p,other:d}}function oh(t){const e=t.maxPadding;function n(i){const o=Math.max(e[i]-t[i],0);return t[i]+=o,o}t.y+=n("top"),t.x+=n("left"),n("right"),n("bottom")}function uh(t,e){const n=e.maxPadding;function i(o){const u={left:0,top:0,right:0,bottom:0};return o.forEach(a=>{u[a]=Math.max(e[a],n[a])}),u}return i(t?["left","right"]:["top","bottom"])}function u6(t,e,n,i){const o=[];let u,a,c,h,d,p;for(u=0,a=t.length,d=0;u<a;++u){c=t[u],h=c.box,h.update(c.width||e.w,c.height||e.h,uh(c.horizontal,e));const{same:m,other:D}=sh(e,n,c,i);d|=m&&o.length,p=p||D,h.fullSize||o.push(c)}return d&&u6(o,e,n,i)||p}function Y7(t,e,n,i,o){t.top=n,t.left=e,t.right=e+i,t.bottom=n+o,t.width=i,t.height=o}function as(t,e,n,i){const o=n.padding;let{x:u,y:a}=e;for(const c of t){const h=c.box,d=i[c.stack]||{count:1,placed:0,weight:1},p=c.stackWeight/d.weight||1;if(c.horizontal){const m=e.w*p,D=d.size||h.height;m6(d.start)&&(a=d.start),h.fullSize?Y7(h,o.left,a,n.outerWidth-o.right-o.left,D):Y7(h,e.left+d.placed,a,m,D),d.start=a,d.placed+=m,a=h.bottom}else{const m=e.h*p,D=d.size||h.width;m6(d.start)&&(u=d.start),h.fullSize?Y7(h,u,o.top,D,n.outerHeight-o.bottom-o.top):Y7(h,u,e.top+d.placed,D,m),d.start=u,d.placed+=m,u=h.right}}e.x=u,e.y=a}var S1={addBox(t,e){t.boxes||(t.boxes=[]),e.fullSize=e.fullSize||!1,e.position=e.position||"top",e.weight=e.weight||0,e._layers=e._layers||function(){return[{z:0,draw(n){e.draw(n)}}]},t.boxes.push(e)},removeBox(t,e){const n=t.boxes?t.boxes.indexOf(e):-1;n!==-1&&t.boxes.splice(n,1)},configure(t,e,n){e.fullSize=n.fullSize,e.position=n.position,e.weight=n.weight},update(t,e,n,i){if(!t)return;const o=b1(t.options.layout.padding),u=Math.max(e-o.width,0),a=Math.max(n-o.height,0),c=ih(t.boxes),h=c.vertical,d=c.horizontal;Y9(t.boxes,y=>{typeof y.beforeLayout=="function"&&y.beforeLayout()});const p=h.reduce((y,x)=>x.box.options&&x.box.options.display===!1?y:y+1,0)||1,m=Object.freeze({outerWidth:e,outerHeight:n,padding:o,availableWidth:u,availableHeight:a,vBoxMaxWidth:u/2/p,hBoxMaxHeight:a/2}),D=Object.assign({},o);tu(D,b1(i));const w=Object.assign({maxPadding:D,w:u,h:a,x:o.left,y:o.top},o),E=rh(h.concat(d),m);u6(c.fullSize,w,m,E),u6(h,w,m,E),u6(d,w,m,E)&&u6(h,w,m,E),oh(w),as(c.leftAndTop,w,m,E),w.x+=w.w,w.y+=w.h,as(c.rightAndBottom,w,m,E),t.chartArea={left:w.left,top:w.top,right:w.left+w.w,bottom:w.top+w.h,height:w.h,width:w.w},Y9(c.chartArea,y=>{const x=y.box;Object.assign(x,t.chartArea),x.update(w.w,w.h,{left:0,top:0,right:0,bottom:0})})}};class nu{acquireContext(e,n){}releaseContext(e){return!1}addEventListener(e,n,i){}removeEventListener(e,n,i){}getDevicePixelRatio(){return 1}getMaximumSize(e,n,i,o){return n=Math.max(0,n||e.width),i=i||e.height,{width:n,height:Math.max(0,o?Math.floor(n/o):i)}}isAttached(e){return!0}updateConfig(e){}}class ah extends nu{acquireContext(e){return e&&e.getContext&&e.getContext("2d")||null}updateConfig(e){e.options.animation=!1}}const s4="$chartjs",lh={touchstart:"mousedown",touchmove:"mousemove",touchend:"mouseup",pointerenter:"mouseenter",pointerdown:"mousedown",pointermove:"mousemove",pointerup:"mouseup",pointerleave:"mouseout",pointerout:"mouseout"},ls=t=>t===null||t==="";function ch(t,e){const n=t.style,i=t.getAttribute("height"),o=t.getAttribute("width");if(t[s4]={initial:{height:i,width:o,style:{display:n.display,height:n.height,width:n.width}}},n.display=n.display||"block",n.boxSizing=n.boxSizing||"border-box",ls(o)){const u=Xi(t,"width");u!==void 0&&(t.width=u)}if(ls(i))if(t.style.height==="")t.height=t.width/(e||2);else{const u=Xi(t,"height");u!==void 0&&(t.height=u)}return t}const ru=xf?{passive:!0}:!1;function fh(t,e,n){t&&t.addEventListener(e,n,ru)}function hh(t,e,n){t&&t.canvas&&t.canvas.removeEventListener(e,n,ru)}function dh(t,e){const n=lh[t.type]||t.type,{x:i,y:o}=x2(t,e);return{type:n,chart:e,native:t,x:i!==void 0?i:null,y:o!==void 0?o:null}}function g4(t,e){for(const n of t)if(n===e||n.contains(e))return!0}function ph(t,e,n){const i=t.canvas,o=new MutationObserver(u=>{let a=!1;for(const c of u)a=a||g4(c.addedNodes,i),a=a&&!g4(c.removedNodes,i);a&&n()});return o.observe(document,{childList:!0,subtree:!0}),o}function gh(t,e,n){const i=t.canvas,o=new MutationObserver(u=>{let a=!1;for(const c of u)a=a||g4(c.removedNodes,i),a=a&&!g4(c.addedNodes,i);a&&n()});return o.observe(document,{childList:!0,subtree:!0}),o}const y6=new Map;let cs=0;function iu(){const t=window.devicePixelRatio;t!==cs&&(cs=t,y6.forEach((e,n)=>{n.currentDevicePixelRatio!==t&&e()}))}function mh(t,e){y6.size||window.addEventListener("resize",iu),y6.set(t,e)}function vh(t){y6.delete(t),y6.size||window.removeEventListener("resize",iu)}function yh(t,e,n){const i=t.canvas,o=i&&zt(i);if(!o)return;const u=zo((c,h)=>{const d=o.clientWidth;n(c,h),d<o.clientWidth&&n()},window),a=new ResizeObserver(c=>{const h=c[0],d=h.contentRect.width,p=h.contentRect.height;d===0&&p===0||u(d,p)});return a.observe(o),mh(t,u),a}function I8(t,e,n){n&&n.disconnect(),e==="resize"&&vh(t)}function Dh(t,e,n){const i=t.canvas,o=zo(u=>{t.ctx!==null&&n(dh(u,t))},t);return fh(i,e,o),o}class wh extends nu{acquireContext(e,n){const i=e&&e.getContext&&e.getContext("2d");return i&&i.canvas===e?(ch(e,n),i):null}releaseContext(e){const n=e.canvas;if(!n[s4])return!1;const i=n[s4].initial;["height","width"].forEach(u=>{const a=i[u];r0(a)?n.removeAttribute(u):n.setAttribute(u,a)});const o=i.style||{};return Object.keys(o).forEach(u=>{n.style[u]=o[u]}),n.width=n.width,delete n[s4],!0}addEventListener(e,n,i){this.removeEventListener(e,n);const o=e.$proxies||(e.$proxies={}),a={attach:ph,detach:gh,resize:yh}[n]||Dh;o[n]=a(e,n,i)}removeEventListener(e,n){const i=e.$proxies||(e.$proxies={}),o=i[n];if(!o)return;({attach:I8,detach:I8,resize:I8}[n]||hh)(e,n,o),i[n]=void 0}getDevicePixelRatio(){return window.devicePixelRatio}getMaximumSize(e,n,i,o){return _f(e,n,i,o)}isAttached(e){const n=e&&zt(e);return!!(n&&n.isConnected)}}function _h(t){return!Ot()||typeof OffscreenCanvas<"u"&&t instanceof OffscreenCanvas?ah:wh}class Z5{constructor(){j9(this,"x");j9(this,"y");j9(this,"active",!1);j9(this,"options");j9(this,"$animations")}tooltipPosition(e){const{x:n,y:i}=this.getProps(["x","y"],e);return{x:n,y:i}}hasValue(){return h4(this.x)&&h4(this.y)}getProps(e,n){const i=this.$animations;if(!n||!i)return this;const o={};return e.forEach(u=>{o[u]=i[u]&&i[u].active()?i[u]._to:this[u]}),o}}j9(Z5,"defaults",{}),j9(Z5,"defaultRoutes");function xh(t,e){const n=t.options.ticks,i=Eh(t),o=Math.min(n.maxTicksLimit||i,i),u=n.major.enabled?Fh(e):[],a=u.length,c=u[0],h=u[a-1],d=[];if(a>o)return Sh(e,d,u,a/o),d;const p=Ch(u,e,o);if(a>0){let m,D;const w=a>1?Math.round((h-c)/(a-1)):null;for(K7(e,d,p,r0(w)?0:c-w,c),m=0,D=a-1;m<D;m++)K7(e,d,p,u[m],u[m+1]);return K7(e,d,p,h,r0(w)?e.length:h+w),d}return K7(e,d,p),d}function Eh(t){const e=t.options.offset,n=t._tickSize(),i=t._length/n+(e?0:1),o=t._maxLength/n;return Math.floor(Math.min(i,o))}function Ch(t,e,n){const i=Ah(t),o=e.length/n;if(!i)return Math.max(o,1);const u=kc(i);for(let a=0,c=u.length-1;a<c;a++){const h=u[a];if(h>o)return h}return Math.max(o,1)}function Fh(t){const e=[];let n,i;for(n=0,i=t.length;n<i;n++)t[n].major&&e.push(n);return e}function Sh(t,e,n,i){let o=0,u=n[0],a;for(i=Math.ceil(i),a=0;a<t.length;a++)a===u&&(e.push(t[a]),o++,u=n[o*i])}function K7(t,e,n,i,o){const u=K9(i,0),a=Math.min(K9(o,t.length),t.length);let c=0,h,d,p;for(n=Math.ceil(n),o&&(h=o-i,n=h/Math.floor(h/n)),p=u;p<0;)c++,p=Math.round(u+c*n);for(d=Math.max(u,0);d<a;d++)d===p&&(e.push(t[d]),c++,p=Math.round(u+c*n))}function Ah(t){const e=t.length;let n,i;if(e<2)return!1;for(i=t[0],n=1;n<e;++n)if(t[n]-t[n-1]!==i)return!1;return i}const bh=t=>t==="left"?"right":t==="right"?"left":t,fs=(t,e,n)=>e==="top"||e==="left"?t[e]+n:t[e]-n,hs=(t,e)=>Math.min(e||t,t);function ds(t,e){const n=[],i=t.length/e,o=t.length;let u=0;for(;u<o;u+=i)n.push(t[Math.floor(u)]);return n}function Mh(t,e,n){const i=t.ticks.length,o=Math.min(e,i-1),u=t._startPixel,a=t._endPixel,c=1e-6;let h=t.getPixelForTick(o),d;if(!(n&&(i===1?d=Math.max(h-u,a-h):e===0?d=(t.getPixelForTick(1)-h)/2:d=(h-t.getPixelForTick(o-1))/2,h+=o<e?d:-d,h<u-c||h>a+c)))return h}function kh(t,e){Y9(t,n=>{const i=n.gc,o=i.length/2;let u;if(o>e){for(u=0;u<o;++u)delete n.data[i[u]];i.splice(0,o)}})}function i6(t){return t.drawTicks?t.tickLength:0}function ps(t,e){if(!t.display)return 0;const n=V0(t.font,e),i=b1(t.padding);return(_0(t.text)?t.text.length:1)*n.lineHeight+i.height}function Bh(t,e){return d3(t,{scale:e,type:"scale"})}function Nh(t,e,n){return d3(t,{tick:n,index:e,type:"tick"})}function Th(t,e,n){let i=Mt(t);return(n&&e!=="right"||!n&&e==="right")&&(i=bh(i)),i}function Ph(t,e,n,i){const{top:o,left:u,bottom:a,right:c,chart:h}=t,{chartArea:d,scales:p}=h;let m=0,D,w,E;const y=a-o,x=c-u;if(t.isHorizontal()){if(w=H0(i,u,c),V9(n)){const C=Object.keys(n)[0],k=n[C];E=p[C].getPixelForValue(k)+y-e}else n==="center"?E=(d.bottom+d.top)/2+y-e:E=fs(t,n,e);D=c-u}else{if(V9(n)){const C=Object.keys(n)[0],k=n[C];w=p[C].getPixelForValue(k)-x+e}else n==="center"?w=(d.left+d.right)/2-x+e:w=fs(t,n,e);E=H0(i,a,o),m=n==="left"?-j1:j1}return{titleX:w,titleY:E,maxWidth:D,rotation:m}}class p3 extends Z5{constructor(e){super(),this.id=e.id,this.type=e.type,this.options=void 0,this.ctx=e.ctx,this.chart=e.chart,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.width=void 0,this.height=void 0,this._margins={left:0,right:0,top:0,bottom:0},this.maxWidth=void 0,this.maxHeight=void 0,this.paddingTop=void 0,this.paddingBottom=void 0,this.paddingLeft=void 0,this.paddingRight=void 0,this.axis=void 0,this.labelRotation=void 0,this.min=void 0,this.max=void 0,this._range=void 0,this.ticks=[],this._gridLineItems=null,this._labelItems=null,this._labelSizes=null,this._length=0,this._maxLength=0,this._longestTextCache={},this._startPixel=void 0,this._endPixel=void 0,this._reversePixels=!1,this._userMax=void 0,this._userMin=void 0,this._suggestedMax=void 0,this._suggestedMin=void 0,this._ticksLength=0,this._borderValue=0,this._cache={},this._dataLimitsCached=!1,this.$context=void 0}init(e){this.options=e.setContext(this.getContext()),this.axis=e.axis,this._userMin=this.parse(e.min),this._userMax=this.parse(e.max),this._suggestedMin=this.parse(e.suggestedMin),this._suggestedMax=this.parse(e.suggestedMax)}parse(e,n){return e}getUserBounds(){let{_userMin:e,_userMax:n,_suggestedMin:i,_suggestedMax:o}=this;return e=G1(e,Number.POSITIVE_INFINITY),n=G1(n,Number.NEGATIVE_INFINITY),i=G1(i,Number.POSITIVE_INFINITY),o=G1(o,Number.NEGATIVE_INFINITY),{min:G1(e,i),max:G1(n,o),minDefined:A1(e),maxDefined:A1(n)}}getMinMax(e){let{min:n,max:i,minDefined:o,maxDefined:u}=this.getUserBounds(),a;if(o&&u)return{min:n,max:i};const c=this.getMatchingVisibleMetas();for(let h=0,d=c.length;h<d;++h)a=c[h].controller.getMinMax(this,e),o||(n=Math.min(n,a.min)),u||(i=Math.max(i,a.max));return n=u&&n>i?i:n,i=o&&n>i?n:i,{min:G1(n,G1(i,n)),max:G1(i,G1(n,i))}}getPadding(){return{left:this.paddingLeft||0,top:this.paddingTop||0,right:this.paddingRight||0,bottom:this.paddingBottom||0}}getTicks(){return this.ticks}getLabels(){const e=this.chart.data;return this.options.labels||(this.isHorizontal()?e.xLabels:e.yLabels)||e.labels||[]}getLabelItems(e=this.chart.chartArea){return this._labelItems||(this._labelItems=this._computeLabelItems(e))}beforeLayout(){this._cache={},this._dataLimitsCached=!1}beforeUpdate(){n0(this.options.beforeUpdate,[this])}update(e,n,i){const{beginAtZero:o,grace:u,ticks:a}=this.options,c=a.sampleSize;this.beforeUpdate(),this.maxWidth=e,this.maxHeight=n,this._margins=i=Object.assign({left:0,right:0,top:0,bottom:0},i),this.ticks=null,this._labelSizes=null,this._gridLineItems=null,this._labelItems=null,this.beforeSetDimensions(),this.setDimensions(),this.afterSetDimensions(),this._maxLength=this.isHorizontal()?this.width+i.left+i.right:this.height+i.top+i.bottom,this._dataLimitsCached||(this.beforeDataLimits(),this.determineDataLimits(),this.afterDataLimits(),this._range=of(this,u,o),this._dataLimitsCached=!0),this.beforeBuildTicks(),this.ticks=this.buildTicks()||[],this.afterBuildTicks();const h=c<this.ticks.length;this._convertTicksToLabels(h?ds(this.ticks,c):this.ticks),this.configure(),this.beforeCalculateLabelRotation(),this.calculateLabelRotation(),this.afterCalculateLabelRotation(),a.display&&(a.autoSkip||a.source==="auto")&&(this.ticks=xh(this,this.ticks),this._labelSizes=null,this.afterAutoSkip()),h&&this._convertTicksToLabels(this.ticks),this.beforeFit(),this.fit(),this.afterFit(),this.afterUpdate()}configure(){let e=this.options.reverse,n,i;this.isHorizontal()?(n=this.left,i=this.right):(n=this.top,i=this.bottom,e=!e),this._startPixel=n,this._endPixel=i,this._reversePixels=e,this._length=i-n,this._alignToPixels=this.options.alignToPixels}afterUpdate(){n0(this.options.afterUpdate,[this])}beforeSetDimensions(){n0(this.options.beforeSetDimensions,[this])}setDimensions(){this.isHorizontal()?(this.width=this.maxWidth,this.left=0,this.right=this.width):(this.height=this.maxHeight,this.top=0,this.bottom=this.height),this.paddingLeft=0,this.paddingTop=0,this.paddingRight=0,this.paddingBottom=0}afterSetDimensions(){n0(this.options.afterSetDimensions,[this])}_callHooks(e){this.chart.notifyPlugins(e,this.getContext()),n0(this.options[e],[this])}beforeDataLimits(){this._callHooks("beforeDataLimits")}determineDataLimits(){}afterDataLimits(){this._callHooks("afterDataLimits")}beforeBuildTicks(){this._callHooks("beforeBuildTicks")}buildTicks(){return[]}afterBuildTicks(){this._callHooks("afterBuildTicks")}beforeTickToLabelConversion(){n0(this.options.beforeTickToLabelConversion,[this])}generateTickLabels(e){const n=this.options.ticks;let i,o,u;for(i=0,o=e.length;i<o;i++)u=e[i],u.label=n0(n.callback,[u.value,i,e],this)}afterTickToLabelConversion(){n0(this.options.afterTickToLabelConversion,[this])}beforeCalculateLabelRotation(){n0(this.options.beforeCalculateLabelRotation,[this])}calculateLabelRotation(){const e=this.options,n=e.ticks,i=hs(this.ticks.length,e.ticks.maxTicksLimit),o=n.minRotation||0,u=n.maxRotation;let a=o,c,h,d;if(!this._isVisible()||!n.display||o>=u||i<=1||!this.isHorizontal()){this.labelRotation=o;return}const p=this._getLabelSizes(),m=p.widest.width,D=p.highest.height,w=H1(this.chart.width-m,0,this.maxWidth);c=e.offset?this.maxWidth/i:w/(i-1),m+6>c&&(c=w/(i-(e.offset?.5:1)),h=this.maxHeight-i6(e.grid)-n.padding-ps(e.title,this.chart.options.font),d=Math.sqrt(m*m+D*D),a=Tc(Math.min(Math.asin(H1((p.highest.height+6)/c,-1,1)),Math.asin(H1(h/d,-1,1))-Math.asin(H1(D/d,-1,1)))),a=Math.max(o,Math.min(u,a))),this.labelRotation=a}afterCalculateLabelRotation(){n0(this.options.afterCalculateLabelRotation,[this])}afterAutoSkip(){}beforeFit(){n0(this.options.beforeFit,[this])}fit(){const e={width:0,height:0},{chart:n,options:{ticks:i,title:o,grid:u}}=this,a=this._isVisible(),c=this.isHorizontal();if(a){const h=ps(o,n.options.font);if(c?(e.width=this.maxWidth,e.height=i6(u)+h):(e.height=this.maxHeight,e.width=i6(u)+h),i.display&&this.ticks.length){const{first:d,last:p,widest:m,highest:D}=this._getLabelSizes(),w=i.padding*2,E=F2(this.labelRotation),y=Math.cos(E),x=Math.sin(E);if(c){const C=i.mirror?0:x*m.width+y*D.height;e.height=Math.min(this.maxHeight,e.height+C+w)}else{const C=i.mirror?0:y*m.width+x*D.height;e.width=Math.min(this.maxWidth,e.width+C+w)}this._calculatePadding(d,p,x,y)}}this._handleMargins(),c?(this.width=this._length=n.width-this._margins.left-this._margins.right,this.height=e.height):(this.width=e.width,this.height=this._length=n.height-this._margins.top-this._margins.bottom)}_calculatePadding(e,n,i,o){const{ticks:{align:u,padding:a},position:c}=this.options,h=this.labelRotation!==0,d=c!=="top"&&this.axis==="x";if(this.isHorizontal()){const p=this.getPixelForTick(0)-this.left,m=this.right-this.getPixelForTick(this.ticks.length-1);let D=0,w=0;h?d?(D=o*e.width,w=i*n.height):(D=i*e.height,w=o*n.width):u==="start"?w=n.width:u==="end"?D=e.width:u!=="inner"&&(D=e.width/2,w=n.width/2),this.paddingLeft=Math.max((D-p+a)*this.width/(this.width-p),0),this.paddingRight=Math.max((w-m+a)*this.width/(this.width-m),0)}else{let p=n.height/2,m=e.height/2;u==="start"?(p=0,m=e.height):u==="end"&&(p=n.height,m=0),this.paddingTop=p+a,this.paddingBottom=m+a}}_handleMargins(){this._margins&&(this._margins.left=Math.max(this.paddingLeft,this._margins.left),this._margins.top=Math.max(this.paddingTop,this._margins.top),this._margins.right=Math.max(this.paddingRight,this._margins.right),this._margins.bottom=Math.max(this.paddingBottom,this._margins.bottom))}afterFit(){n0(this.options.afterFit,[this])}isHorizontal(){const{axis:e,position:n}=this.options;return n==="top"||n==="bottom"||e==="x"}isFullSize(){return this.options.fullSize}_convertTicksToLabels(e){this.beforeTickToLabelConversion(),this.generateTickLabels(e);let n,i;for(n=0,i=e.length;n<i;n++)r0(e[n].label)&&(e.splice(n,1),i--,n--);this.afterTickToLabelConversion()}_getLabelSizes(){let e=this._labelSizes;if(!e){const n=this.options.ticks.sampleSize;let i=this.ticks;n<i.length&&(i=ds(i,n)),this._labelSizes=e=this._computeLabelSizes(i,i.length,this.options.ticks.maxTicksLimit)}return e}_computeLabelSizes(e,n,i){const{ctx:o,_longestTextCache:u}=this,a=[],c=[],h=Math.floor(n/hs(n,i));let d=0,p=0,m,D,w,E,y,x,C,k,A,B,F;for(m=0;m<n;m+=h){if(E=e[m].label,y=this._resolveTickFontOptions(m),o.font=x=y.string,C=u[x]=u[x]||{data:{},gc:[]},k=y.lineHeight,A=B=0,!r0(E)&&!_0(E))A=Vi(o,C.data,C.gc,A,E),B=k;else if(_0(E))for(D=0,w=E.length;D<w;++D)F=E[D],!r0(F)&&!_0(F)&&(A=Vi(o,C.data,C.gc,A,F),B+=k);a.push(A),c.push(B),d=Math.max(A,d),p=Math.max(B,p)}kh(u,n);const S=a.indexOf(d),P=c.indexOf(p),T=I=>({width:a[I]||0,height:c[I]||0});return{first:T(0),last:T(n-1),widest:T(S),highest:T(P),widths:a,heights:c}}getLabelForValue(e){return e}getPixelForValue(e,n){return NaN}getValueForPixel(e){}getPixelForTick(e){const n=this.ticks;return e<0||e>n.length-1?null:this.getPixelForValue(n[e].value)}getPixelForDecimal(e){this._reversePixels&&(e=1-e);const n=this._startPixel+e*this._length;return Ic(this._alignToPixels?w2(this.chart,n,0):n)}getDecimalForPixel(e){const n=(e-this._startPixel)/this._length;return this._reversePixels?1-n:n}getBasePixel(){return this.getPixelForValue(this.getBaseValue())}getBaseValue(){const{min:e,max:n}=this;return e<0&&n<0?n:e>0&&n>0?e:0}getContext(e){const n=this.ticks||[];if(e>=0&&e<n.length){const i=n[e];return i.$context||(i.$context=Nh(this.getContext(),e,i))}return this.$context||(this.$context=Bh(this.chart.getContext(),this))}_tickSize(){const e=this.options.ticks,n=F2(this.labelRotation),i=Math.abs(Math.cos(n)),o=Math.abs(Math.sin(n)),u=this._getLabelSizes(),a=e.autoSkipPadding||0,c=u?u.widest.width+a:0,h=u?u.highest.height+a:0;return this.isHorizontal()?h*i>c*o?c/i:h/o:h*o<c*i?h/i:c/o}_isVisible(){const e=this.options.display;return e!=="auto"?!!e:this.getMatchingVisibleMetas().length>0}_computeGridLineItems(e){const n=this.axis,i=this.chart,o=this.options,{grid:u,position:a,border:c}=o,h=u.offset,d=this.isHorizontal(),m=this.ticks.length+(h?1:0),D=i6(u),w=[],E=c.setContext(this.getContext()),y=E.display?E.width:0,x=y/2,C=function(q){return w2(i,q,y)};let k,A,B,F,S,P,T,I,H,W,Z,f9;if(a==="top")k=C(this.bottom),P=this.bottom-D,I=k-x,W=C(e.top)+x,f9=e.bottom;else if(a==="bottom")k=C(this.top),W=e.top,f9=C(e.bottom)-x,P=k+x,I=this.top+D;else if(a==="left")k=C(this.right),S=this.right-D,T=k-x,H=C(e.left)+x,Z=e.right;else if(a==="right")k=C(this.left),H=e.left,Z=C(e.right)-x,S=k+x,T=this.left+D;else if(n==="x"){if(a==="center")k=C((e.top+e.bottom)/2+.5);else if(V9(a)){const q=Object.keys(a)[0],l9=a[q];k=C(this.chart.scales[q].getPixelForValue(l9))}W=e.top,f9=e.bottom,P=k+x,I=P+D}else if(n==="y"){if(a==="center")k=C((e.left+e.right)/2);else if(V9(a)){const q=Object.keys(a)[0],l9=a[q];k=C(this.chart.scales[q].getPixelForValue(l9))}S=k-x,T=S-D,H=e.left,Z=e.right}const o9=K9(o.ticks.maxTicksLimit,m),t9=Math.max(1,Math.ceil(m/o9));for(A=0;A<m;A+=t9){const q=this.getContext(A),l9=u.setContext(q),Y=c.setContext(q),G=l9.lineWidth,X=l9.color,O=Y.dash||[],U=Y.dashOffset,g9=l9.tickWidth,v9=l9.tickColor,E9=l9.tickBorderDash||[],_9=l9.tickBorderDashOffset;B=Mh(this,A,h),B!==void 0&&(F=w2(i,B,G),d?S=T=H=Z=F:P=I=W=f9=F,w.push({tx1:S,ty1:P,tx2:T,ty2:I,x1:H,y1:W,x2:Z,y2:f9,width:G,color:X,borderDash:O,borderDashOffset:U,tickWidth:g9,tickColor:v9,tickBorderDash:E9,tickBorderDashOffset:_9}))}return this._ticksLength=m,this._borderValue=k,w}_computeLabelItems(e){const n=this.axis,i=this.options,{position:o,ticks:u}=i,a=this.isHorizontal(),c=this.ticks,{align:h,crossAlign:d,padding:p,mirror:m}=u,D=i6(i.grid),w=D+p,E=m?-p:w,y=-F2(this.labelRotation),x=[];let C,k,A,B,F,S,P,T,I,H,W,Z,f9="middle";if(o==="top")S=this.bottom-E,P=this._getXAxisLabelAlignment();else if(o==="bottom")S=this.top+E,P=this._getXAxisLabelAlignment();else if(o==="left"){const t9=this._getYAxisLabelAlignment(D);P=t9.textAlign,F=t9.x}else if(o==="right"){const t9=this._getYAxisLabelAlignment(D);P=t9.textAlign,F=t9.x}else if(n==="x"){if(o==="center")S=(e.top+e.bottom)/2+w;else if(V9(o)){const t9=Object.keys(o)[0],q=o[t9];S=this.chart.scales[t9].getPixelForValue(q)+w}P=this._getXAxisLabelAlignment()}else if(n==="y"){if(o==="center")F=(e.left+e.right)/2-w;else if(V9(o)){const t9=Object.keys(o)[0],q=o[t9];F=this.chart.scales[t9].getPixelForValue(q)}P=this._getYAxisLabelAlignment(D).textAlign}n==="y"&&(h==="start"?f9="top":h==="end"&&(f9="bottom"));const o9=this._getLabelSizes();for(C=0,k=c.length;C<k;++C){A=c[C],B=A.label;const t9=u.setContext(this.getContext(C));T=this.getPixelForTick(C)+u.labelOffset,I=this._resolveTickFontOptions(C),H=I.lineHeight,W=_0(B)?B.length:1;const q=W/2,l9=t9.color,Y=t9.textStrokeColor,G=t9.textStrokeWidth;let X=P;a?(F=T,P==="inner"&&(C===k-1?X=this.options.reverse?"left":"right":C===0?X=this.options.reverse?"right":"left":X="center"),o==="top"?d==="near"||y!==0?Z=-W*H+H/2:d==="center"?Z=-o9.highest.height/2-q*H+H:Z=-o9.highest.height+H/2:d==="near"||y!==0?Z=H/2:d==="center"?Z=o9.highest.height/2-q*H:Z=o9.highest.height-W*H,m&&(Z*=-1),y!==0&&!t9.showLabelBackdrop&&(F+=H/2*Math.sin(y))):(S=T,Z=(1-W)*H/2);let O;if(t9.showLabelBackdrop){const U=b1(t9.backdropPadding),g9=o9.heights[C],v9=o9.widths[C];let E9=Z-U.top,_9=0-U.left;switch(f9){case"middle":E9-=g9/2;break;case"bottom":E9-=g9;break}switch(P){case"center":_9-=v9/2;break;case"right":_9-=v9;break;case"inner":C===k-1?_9-=v9:C>0&&(_9-=v9/2);break}O={left:_9,top:E9,width:v9+U.width,height:g9+U.height,color:t9.backdropColor}}x.push({label:B,font:I,textOffset:Z,options:{rotation:y,color:l9,strokeColor:Y,strokeWidth:G,textAlign:X,textBaseline:f9,translation:[F,S],backdrop:O}})}return x}_getXAxisLabelAlignment(){const{position:e,ticks:n}=this.options;if(-F2(this.labelRotation))return e==="top"?"left":"right";let o="center";return n.align==="start"?o="left":n.align==="end"?o="right":n.align==="inner"&&(o="inner"),o}_getYAxisLabelAlignment(e){const{position:n,ticks:{crossAlign:i,mirror:o,padding:u}}=this.options,a=this._getLabelSizes(),c=e+u,h=a.widest.width;let d,p;return n==="left"?o?(p=this.right+u,i==="near"?d="left":i==="center"?(d="center",p+=h/2):(d="right",p+=h)):(p=this.right-c,i==="near"?d="right":i==="center"?(d="center",p-=h/2):(d="left",p=this.left)):n==="right"?o?(p=this.left+u,i==="near"?d="right":i==="center"?(d="center",p-=h/2):(d="left",p-=h)):(p=this.left+c,i==="near"?d="left":i==="center"?(d="center",p+=h/2):(d="right",p=this.right)):d="right",{textAlign:d,x:p}}_computeLabelArea(){if(this.options.ticks.mirror)return;const e=this.chart,n=this.options.position;if(n==="left"||n==="right")return{top:0,left:this.left,bottom:e.height,right:this.right};if(n==="top"||n==="bottom")return{top:this.top,left:0,bottom:this.bottom,right:e.width}}drawBackground(){const{ctx:e,options:{backgroundColor:n},left:i,top:o,width:u,height:a}=this;n&&(e.save(),e.fillStyle=n,e.fillRect(i,o,u,a),e.restore())}getLineWidthForValue(e){const n=this.options.grid;if(!this._isVisible()||!n.display)return 0;const o=this.ticks.findIndex(u=>u.value===e);return o>=0?n.setContext(this.getContext(o)).lineWidth:0}drawGrid(e){const n=this.options.grid,i=this.ctx,o=this._gridLineItems||(this._gridLineItems=this._computeGridLineItems(e));let u,a;const c=(h,d,p)=>{!p.width||!p.color||(i.save(),i.lineWidth=p.width,i.strokeStyle=p.color,i.setLineDash(p.borderDash||[]),i.lineDashOffset=p.borderDashOffset,i.beginPath(),i.moveTo(h.x,h.y),i.lineTo(d.x,d.y),i.stroke(),i.restore())};if(n.display)for(u=0,a=o.length;u<a;++u){const h=o[u];n.drawOnChartArea&&c({x:h.x1,y:h.y1},{x:h.x2,y:h.y2},h),n.drawTicks&&c({x:h.tx1,y:h.ty1},{x:h.tx2,y:h.ty2},{color:h.tickColor,width:h.tickWidth,borderDash:h.tickBorderDash,borderDashOffset:h.tickBorderDashOffset})}}drawBorder(){const{chart:e,ctx:n,options:{border:i,grid:o}}=this,u=i.setContext(this.getContext()),a=i.display?u.width:0;if(!a)return;const c=o.setContext(this.getContext(0)).lineWidth,h=this._borderValue;let d,p,m,D;this.isHorizontal()?(d=w2(e,this.left,a)-a/2,p=w2(e,this.right,c)+c/2,m=D=h):(m=w2(e,this.top,a)-a/2,D=w2(e,this.bottom,c)+c/2,d=p=h),n.save(),n.lineWidth=u.width,n.strokeStyle=u.color,n.beginPath(),n.moveTo(d,m),n.lineTo(p,D),n.stroke(),n.restore()}drawLabels(e){if(!this.options.ticks.display)return;const i=this.ctx,o=this._computeLabelArea();o&&kt(i,o);const u=this.getLabelItems(e);for(const a of u){const c=a.options,h=a.font,d=a.label,p=a.textOffset;v6(i,d,0,p,h,c)}o&&Bt(i)}drawTitle(){const{ctx:e,options:{position:n,title:i,reverse:o}}=this;if(!i.display)return;const u=V0(i.font),a=b1(i.padding),c=i.align;let h=u.lineHeight/2;n==="bottom"||n==="center"||V9(n)?(h+=a.bottom,_0(i.text)&&(h+=u.lineHeight*(i.text.length-1))):h+=a.top;const{titleX:d,titleY:p,maxWidth:m,rotation:D}=Ph(this,h,n,c);v6(e,i.text,0,0,u,{color:i.color,maxWidth:m,rotation:D,textAlign:Th(c,n,o),textBaseline:"middle",translation:[d,p]})}draw(e){this._isVisible()&&(this.drawBackground(),this.drawGrid(e),this.drawBorder(),this.drawTitle(),this.drawLabels(e))}_layers(){const e=this.options,n=e.ticks&&e.ticks.z||0,i=K9(e.grid&&e.grid.z,-1),o=K9(e.border&&e.border.z,0);return!this._isVisible()||this.draw!==p3.prototype.draw?[{z:n,draw:u=>{this.draw(u)}}]:[{z:i,draw:u=>{this.drawBackground(),this.drawGrid(u),this.drawTitle()}},{z:o,draw:()=>{this.drawBorder()}},{z:n,draw:u=>{this.drawLabels(u)}}]}getMatchingVisibleMetas(e){const n=this.chart.getSortedVisibleDatasetMetas(),i=this.axis+"AxisID",o=[];let u,a;for(u=0,a=n.length;u<a;++u){const c=n[u];c[i]===this.id&&(!e||c.type===e)&&o.push(c)}return o}_resolveTickFontOptions(e){const n=this.options.ticks.setContext(this.getContext(e));return V0(n.font)}_maxDigits(){const e=this._resolveTickFontOptions(0).lineHeight;return(this.isHorizontal()?this.width:this.height)/e}}class X7{constructor(e,n,i){this.type=e,this.scope=n,this.override=i,this.items=Object.create(null)}isForType(e){return Object.prototype.isPrototypeOf.call(this.type.prototype,e.prototype)}register(e){const n=Object.getPrototypeOf(e);let i;Ih(n)&&(i=this.register(n));const o=this.items,u=e.id,a=this.scope+"."+u;if(!u)throw new Error("class does not have id: "+e);return u in o||(o[u]=e,Oh(e,a,i),this.override&&d0.override(e.id,e.overrides)),a}get(e){return this.items[e]}unregister(e){const n=this.items,i=e.id,o=this.scope;i in n&&delete n[i],o&&i in d0[o]&&(delete d0[o][i],this.override&&delete b2[i])}}function Oh(t,e,n){const i=g6(Object.create(null),[n?d0.get(n):{},d0.get(e),t.defaults]);d0.set(e,i),t.defaultRoutes&&zh(e,t.defaultRoutes),t.descriptors&&d0.describe(e,t.descriptors)}function zh(t,e){Object.keys(e).forEach(n=>{const i=n.split("."),o=i.pop(),u=[t].concat(i).join("."),a=e[n].split("."),c=a.pop(),h=a.join(".");d0.route(u,o,h,c)})}function Ih(t){return"id"in t&&"defaults"in t}class Rh{constructor(){this.controllers=new X7(d6,"datasets",!0),this.elements=new X7(Z5,"elements"),this.plugins=new X7(Object,"plugins"),this.scales=new X7(p3,"scales"),this._typedRegistries=[this.controllers,this.scales,this.elements]}add(...e){this._each("register",e)}remove(...e){this._each("unregister",e)}addControllers(...e){this._each("register",e,this.controllers)}addElements(...e){this._each("register",e,this.elements)}addPlugins(...e){this._each("register",e,this.plugins)}addScales(...e){this._each("register",e,this.scales)}getController(e){return this._get(e,this.controllers,"controller")}getElement(e){return this._get(e,this.elements,"element")}getPlugin(e){return this._get(e,this.plugins,"plugin")}getScale(e){return this._get(e,this.scales,"scale")}removeControllers(...e){this._each("unregister",e,this.controllers)}removeElements(...e){this._each("unregister",e,this.elements)}removePlugins(...e){this._each("unregister",e,this.plugins)}removeScales(...e){this._each("unregister",e,this.scales)}_each(e,n,i){[...n].forEach(o=>{const u=i||this._getRegistryForType(o);i||u.isForType(o)||u===this.plugins&&o.id?this._exec(e,u,o):Y9(o,a=>{const c=i||this._getRegistryForType(a);this._exec(e,c,a)})})}_exec(e,n,i){const o=At(e);n0(i["before"+o],[],i),n[e](i),n0(i["after"+o],[],i)}_getRegistryForType(e){for(let n=0;n<this._typedRegistries.length;n++){const i=this._typedRegistries[n];if(i.isForType(e))return i}return this.plugins}_get(e,n,i){const o=n.get(e);if(o===void 0)throw new Error('"'+e+'" is not a registered '+i+".");return o}}var e5=new Rh;class Lh{constructor(){this._init=[]}notify(e,n,i,o){n==="beforeInit"&&(this._init=this._createDescriptors(e,!0),this._notify(this._init,e,"install"));const u=o?this._descriptors(e).filter(o):this._descriptors(e),a=this._notify(u,e,n,i);return n==="afterDestroy"&&(this._notify(u,e,"stop"),this._notify(this._init,e,"uninstall")),a}_notify(e,n,i,o){o=o||{};for(const u of e){const a=u.plugin,c=a[i],h=[n,o,u.options];if(n0(c,h,a)===!1&&o.cancelable)return!1}return!0}invalidate(){r0(this._cache)||(this._oldCache=this._cache,this._cache=void 0)}_descriptors(e){if(this._cache)return this._cache;const n=this._cache=this._createDescriptors(e);return this._notifyStateChanges(e),n}_createDescriptors(e,n){const i=e&&e.config,o=K9(i.options&&i.options.plugins,{}),u=jh(i);return o===!1&&!n?[]:$h(e,u,o,n)}_notifyStateChanges(e){const n=this._oldCache||[],i=this._cache,o=(u,a)=>u.filter(c=>!a.some(h=>c.plugin.id===h.plugin.id));this._notify(o(n,i),e,"stop"),this._notify(o(i,n),e,"start")}}function jh(t){const e={},n=[],i=Object.keys(e5.plugins.items);for(let u=0;u<i.length;u++)n.push(e5.getPlugin(i[u]));const o=t.plugins||[];for(let u=0;u<o.length;u++){const a=o[u];n.indexOf(a)===-1&&(n.push(a),e[a.id]=!0)}return{plugins:n,localIds:e}}function Hh(t,e){return!e&&t===!1?null:t===!0?{}:t}function $h(t,{plugins:e,localIds:n},i,o){const u=[],a=t.getContext();for(const c of e){const h=c.id,d=Hh(i[h],o);d!==null&&u.push({plugin:c,options:Vh(t.config,{plugin:c,local:n[h]},d,a)})}return u}function Vh(t,{plugin:e,local:n},i,o){const u=t.pluginScopeKeys(e),a=t.getOptionScopes(i,u);return n&&e.defaults&&a.push(e.defaults),t.createResolver(a,o,[""],{scriptable:!1,indexable:!1,allKeys:!0})}function at(t,e){const n=d0.datasets[t]||{};return((e.datasets||{})[t]||{}).indexAxis||e.indexAxis||n.indexAxis||"x"}function Wh(t,e){let n=t;return t==="_index_"?n=e:t==="_value_"&&(n=e==="x"?"y":"x"),n}function Uh(t,e){return t===e?"_index_":"_value_"}function gs(t){if(t==="x"||t==="y"||t==="r")return t}function qh(t){if(t==="top"||t==="bottom")return"x";if(t==="left"||t==="right")return"y"}function lt(t,...e){if(gs(t))return t;for(const n of e){const i=n.axis||qh(n.position)||t.length>1&&gs(t[0].toLowerCase());if(i)return i}throw new Error(`Cannot determine type of '${t}' axis. Please provide 'axis' or 'position' option.`)}function ms(t,e,n){if(n[e+"AxisID"]===t)return{axis:e}}function Yh(t,e){if(e.data&&e.data.datasets){const n=e.data.datasets.filter(i=>i.xAxisID===t||i.yAxisID===t);if(n.length)return ms(t,"x",n[0])||ms(t,"y",n[0])}return{}}function Kh(t,e){const n=b2[t.type]||{scales:{}},i=e.scales||{},o=at(t.type,e),u=Object.create(null);return Object.keys(i).forEach(a=>{const c=i[a];if(!V9(c))return console.error(`Invalid scale configuration for scale: ${a}`);if(c._proxy)return console.warn(`Ignoring resolver passed as options for scale: ${a}`);const h=lt(a,c,Yh(a,t),d0.scales[c.type]),d=Uh(h,o),p=n.scales||{};u[a]=c6(Object.create(null),[{axis:h},c,p[h],p[d]])}),t.data.datasets.forEach(a=>{const c=a.type||t.type,h=a.indexAxis||at(c,e),p=(b2[c]||{}).scales||{};Object.keys(p).forEach(m=>{const D=Wh(m,h),w=a[D+"AxisID"]||D;u[w]=u[w]||Object.create(null),c6(u[w],[{axis:D},i[w],p[m]])})}),Object.keys(u).forEach(a=>{const c=u[a];c6(c,[d0.scales[c.type],d0.scale])}),u}function su(t){const e=t.options||(t.options={});e.plugins=K9(e.plugins,{}),e.scales=Kh(t,e)}function ou(t){return t=t||{},t.datasets=t.datasets||[],t.labels=t.labels||[],t}function Xh(t){return t=t||{},t.data=ou(t.data),su(t),t}const vs=new Map,uu=new Set;function Q7(t,e){let n=vs.get(t);return n||(n=e(),vs.set(t,n),uu.add(n)),n}const s6=(t,e,n)=>{const i=l3(e,n);i!==void 0&&t.add(i)};class Qh{constructor(e){this._config=Xh(e),this._scopeCache=new Map,this._resolverCache=new Map}get platform(){return this._config.platform}get type(){return this._config.type}set type(e){this._config.type=e}get data(){return this._config.data}set data(e){this._config.data=ou(e)}get options(){return this._config.options}set options(e){this._config.options=e}get plugins(){return this._config.plugins}update(){const e=this._config;this.clearCache(),su(e)}clearCache(){this._scopeCache.clear(),this._resolverCache.clear()}datasetScopeKeys(e){return Q7(e,()=>[[`datasets.${e}`,""]])}datasetAnimationScopeKeys(e,n){return Q7(`${e}.transition.${n}`,()=>[[`datasets.${e}.transitions.${n}`,`transitions.${n}`],[`datasets.${e}`,""]])}datasetElementScopeKeys(e,n){return Q7(`${e}-${n}`,()=>[[`datasets.${e}.elements.${n}`,`datasets.${e}`,`elements.${n}`,""]])}pluginScopeKeys(e){const n=e.id,i=this.type;return Q7(`${i}-plugin-${n}`,()=>[[`plugins.${n}`,...e.additionalOptionScopes||[]]])}_cachedScopes(e,n){const i=this._scopeCache;let o=i.get(e);return(!o||n)&&(o=new Map,i.set(e,o)),o}getOptionScopes(e,n,i){const{options:o,type:u}=this,a=this._cachedScopes(e,i),c=a.get(n);if(c)return c;const h=new Set;n.forEach(p=>{e&&(h.add(e),p.forEach(m=>s6(h,e,m))),p.forEach(m=>s6(h,o,m)),p.forEach(m=>s6(h,b2[u]||{},m)),p.forEach(m=>s6(h,d0,m)),p.forEach(m=>s6(h,ut,m))});const d=Array.from(h);return d.length===0&&d.push(Object.create(null)),uu.has(n)&&a.set(n,d),d}chartOptionScopes(){const{options:e,type:n}=this;return[e,b2[n]||{},d0.datasets[n]||{},{type:n},d0,ut]}resolveNamedOptions(e,n,i,o=[""]){const u={$shared:!0},{resolver:a,subPrefixes:c}=ys(this._resolverCache,e,o);let h=a;if(Gh(a,n)){u.$shared=!1,i=Q5(i)?i():i;const d=this.createResolver(e,i,c);h=c3(a,i,d)}for(const d of n)u[d]=h[d];return u}createResolver(e,n,i=[""],o){const{resolver:u}=ys(this._resolverCache,e,i);return V9(n)?c3(u,n,void 0,o):u}}function ys(t,e,n){let i=t.get(e);i||(i=new Map,t.set(e,i));const o=n.join();let u=i.get(o);return u||(u={resolver:Nt(e,n),subPrefixes:n.filter(c=>!c.toLowerCase().includes("hover"))},i.set(o,u)),u}const Zh=t=>V9(t)&&Object.getOwnPropertyNames(t).some(e=>Q5(t[e]));function Gh(t,e){const{isScriptable:n,isIndexable:i}=Uo(t);for(const o of e){const u=n(o),a=i(o),c=(a||u)&&t[o];if(u&&(Q5(c)||Zh(c))||a&&_0(c))return!0}return!1}var Jh="4.4.7";const ed=["top","bottom","left","right","chartArea"];function Ds(t,e){return t==="top"||t==="bottom"||ed.indexOf(t)===-1&&e==="x"}function ws(t,e){return function(n,i){return n[t]===i[t]?n[e]-i[e]:n[t]-i[t]}}function _s(t){const e=t.chart,n=e.options.animation;e.notifyPlugins("afterRender"),n0(n&&n.onComplete,[t],e)}function td(t){const e=t.chart,n=e.options.animation;n0(n&&n.onProgress,[t],e)}function au(t){return Ot()&&typeof t=="string"?t=document.getElementById(t):t&&t.length&&(t=t[0]),t&&t.canvas&&(t=t.canvas),t}const o4={},xs=t=>{const e=au(t);return Object.values(o4).filter(n=>n.canvas===e).pop()};function nd(t,e,n){const i=Object.keys(t);for(const o of i){const u=+o;if(u>=e){const a=t[o];delete t[o],(n>0||u>e)&&(t[u+n]=a)}}}function rd(t,e,n,i){return!n||t.type==="mouseout"?null:i?e:t}function Z7(t,e,n){return t.options.clip?t[n]:e[n]}function id(t,e){const{xScale:n,yScale:i}=t;return n&&i?{left:Z7(n,e,"left"),right:Z7(n,e,"right"),top:Z7(i,e,"top"),bottom:Z7(i,e,"bottom")}:e}var H5;let b4=(H5=class{static register(...e){e5.add(...e),Es()}static unregister(...e){e5.remove(...e),Es()}constructor(e,n){const i=this.config=new Qh(n),o=au(e),u=xs(o);if(u)throw new Error("Canvas is already in use. Chart with ID '"+u.id+"' must be destroyed before the canvas with ID '"+u.canvas.id+"' can be reused.");const a=i.createResolver(i.chartOptionScopes(),this.getContext());this.platform=new(i.platform||_h(o)),this.platform.updateConfig(i);const c=this.platform.acquireContext(o,a.aspectRatio),h=c&&c.canvas,d=h&&h.height,p=h&&h.width;if(this.id=xc(),this.ctx=c,this.canvas=h,this.width=p,this.height=d,this._options=a,this._aspectRatio=this.aspectRatio,this._layers=[],this._metasets=[],this._stacks=void 0,this.boxes=[],this.currentDevicePixelRatio=void 0,this.chartArea=void 0,this._active=[],this._lastEvent=void 0,this._listeners={},this._responsiveListeners=void 0,this._sortedMetasets=[],this.scales={},this._plugins=new Lh,this.$proxies={},this._hiddenIndices={},this.attached=!1,this._animationsDisabled=void 0,this.$context=void 0,this._doResize=Hc(m=>this.update(m),a.resizeDelay||0),this._dataChanges=[],o4[this.id]=this,!c||!h){console.error("Failed to create chart: can't acquire context from the given item");return}g5.listen(this,"complete",_s),g5.listen(this,"progress",td),this._initialize(),this.attached&&this.update()}get aspectRatio(){const{options:{aspectRatio:e,maintainAspectRatio:n},width:i,height:o,_aspectRatio:u}=this;return r0(e)?n&&u?u:o?i/o:null:e}get data(){return this.config.data}set data(e){this.config.data=e}get options(){return this._options}set options(e){this.config.options=e}get registry(){return e5}_initialize(){return this.notifyPlugins("beforeInit"),this.options.responsive?this.resize():Ki(this,this.options.devicePixelRatio),this.bindEvents(),this.notifyPlugins("afterInit"),this}clear(){return Wi(this.canvas,this.ctx),this}stop(){return g5.stop(this),this}resize(e,n){g5.running(this)?this._resizeBeforeDraw={width:e,height:n}:this._resize(e,n)}_resize(e,n){const i=this.options,o=this.canvas,u=i.maintainAspectRatio&&this.aspectRatio,a=this.platform.getMaximumSize(o,e,n,u),c=i.devicePixelRatio||this.platform.getDevicePixelRatio(),h=this.width?"resize":"attach";this.width=a.width,this.height=a.height,this._aspectRatio=this.aspectRatio,Ki(this,c,!0)&&(this.notifyPlugins("resize",{size:a}),n0(i.onResize,[this,a],this),this.attached&&this._doResize(h)&&this.render())}ensureScalesHaveIDs(){const n=this.options.scales||{};Y9(n,(i,o)=>{i.id=o})}buildOrUpdateScales(){const e=this.options,n=e.scales,i=this.scales,o=Object.keys(i).reduce((a,c)=>(a[c]=!1,a),{});let u=[];n&&(u=u.concat(Object.keys(n).map(a=>{const c=n[a],h=lt(a,c),d=h==="r",p=h==="x";return{options:c,dposition:d?"chartArea":p?"bottom":"left",dtype:d?"radialLinear":p?"category":"linear"}}))),Y9(u,a=>{const c=a.options,h=c.id,d=lt(h,c),p=K9(c.type,a.dtype);(c.position===void 0||Ds(c.position,d)!==Ds(a.dposition))&&(c.position=a.dposition),o[h]=!0;let m=null;if(h in i&&i[h].type===p)m=i[h];else{const D=e5.getScale(p);m=new D({id:h,type:p,ctx:this.ctx,chart:this}),i[m.id]=m}m.init(c,e)}),Y9(o,(a,c)=>{a||delete i[c]}),Y9(i,a=>{S1.configure(this,a,a.options),S1.addBox(this,a)})}_updateMetasets(){const e=this._metasets,n=this.data.datasets.length,i=e.length;if(e.sort((o,u)=>o.index-u.index),i>n){for(let o=n;o<i;++o)this._destroyDatasetMeta(o);e.splice(n,i-n)}this._sortedMetasets=e.slice(0).sort(ws("order","index"))}_removeUnreferencedMetasets(){const{_metasets:e,data:{datasets:n}}=this;e.length>n.length&&delete this._stacks,e.forEach((i,o)=>{n.filter(u=>u===i._dataset).length===0&&this._destroyDatasetMeta(o)})}buildOrUpdateControllers(){const e=[],n=this.data.datasets;let i,o;for(this._removeUnreferencedMetasets(),i=0,o=n.length;i<o;i++){const u=n[i];let a=this.getDatasetMeta(i);const c=u.type||this.config.type;if(a.type&&a.type!==c&&(this._destroyDatasetMeta(i),a=this.getDatasetMeta(i)),a.type=c,a.indexAxis=u.indexAxis||at(c,this.options),a.order=u.order||0,a.index=i,a.label=""+u.label,a.visible=this.isDatasetVisible(i),a.controller)a.controller.updateIndex(i),a.controller.linkScales();else{const h=e5.getController(c),{datasetElementType:d,dataElementType:p}=d0.datasets[c];Object.assign(h,{dataElementType:e5.getElement(p),datasetElementType:d&&e5.getElement(d)}),a.controller=new h(this,i),e.push(a.controller)}}return this._updateMetasets(),e}_resetElements(){Y9(this.data.datasets,(e,n)=>{this.getDatasetMeta(n).controller.reset()},this)}reset(){this._resetElements(),this.notifyPlugins("reset")}update(e){const n=this.config;n.update();const i=this._options=n.createResolver(n.chartOptionScopes(),this.getContext()),o=this._animationsDisabled=!i.animation;if(this._updateScales(),this._checkEventBindings(),this._updateHiddenIndices(),this._plugins.invalidate(),this.notifyPlugins("beforeUpdate",{mode:e,cancelable:!0})===!1)return;const u=this.buildOrUpdateControllers();this.notifyPlugins("beforeElementsUpdate");let a=0;for(let d=0,p=this.data.datasets.length;d<p;d++){const{controller:m}=this.getDatasetMeta(d),D=!o&&u.indexOf(m)===-1;m.buildOrUpdateElements(D),a=Math.max(+m.getMaxOverflow(),a)}a=this._minPadding=i.layout.autoPadding?a:0,this._updateLayout(a),o||Y9(u,d=>{d.reset()}),this._updateDatasets(e),this.notifyPlugins("afterUpdate",{mode:e}),this._layers.sort(ws("z","_idx"));const{_active:c,_lastEvent:h}=this;h?this._eventHandler(h,!0):c.length&&this._updateHoverStyles(c,c,!0),this.render()}_updateScales(){Y9(this.scales,e=>{S1.removeBox(this,e)}),this.ensureScalesHaveIDs(),this.buildOrUpdateScales()}_checkEventBindings(){const e=this.options,n=new Set(Object.keys(this._listeners)),i=new Set(e.events);(!Pi(n,i)||!!this._responsiveListeners!==e.responsive)&&(this.unbindEvents(),this.bindEvents())}_updateHiddenIndices(){const{_hiddenIndices:e}=this,n=this._getUniformDataChanges()||[];for(const{method:i,start:o,count:u}of n){const a=i==="_removeElements"?-u:u;nd(e,o,a)}}_getUniformDataChanges(){const e=this._dataChanges;if(!e||!e.length)return;this._dataChanges=[];const n=this.data.datasets.length,i=u=>new Set(e.filter(a=>a[0]===u).map((a,c)=>c+","+a.splice(1).join(","))),o=i(0);for(let u=1;u<n;u++)if(!Pi(o,i(u)))return;return Array.from(o).map(u=>u.split(",")).map(u=>({method:u[1],start:+u[2],count:+u[3]}))}_updateLayout(e){if(this.notifyPlugins("beforeLayout",{cancelable:!0})===!1)return;S1.update(this,this.width,this.height,e);const n=this.chartArea,i=n.width<=0||n.height<=0;this._layers=[],Y9(this.boxes,o=>{i&&o.position==="chartArea"||(o.configure&&o.configure(),this._layers.push(...o._layers()))},this),this._layers.forEach((o,u)=>{o._idx=u}),this.notifyPlugins("afterLayout")}_updateDatasets(e){if(this.notifyPlugins("beforeDatasetsUpdate",{mode:e,cancelable:!0})!==!1){for(let n=0,i=this.data.datasets.length;n<i;++n)this.getDatasetMeta(n).controller.configure();for(let n=0,i=this.data.datasets.length;n<i;++n)this._updateDataset(n,Q5(e)?e({datasetIndex:n}):e);this.notifyPlugins("afterDatasetsUpdate",{mode:e})}}_updateDataset(e,n){const i=this.getDatasetMeta(e),o={meta:i,index:e,mode:n,cancelable:!0};this.notifyPlugins("beforeDatasetUpdate",o)!==!1&&(i.controller._update(n),o.cancelable=!1,this.notifyPlugins("afterDatasetUpdate",o))}render(){this.notifyPlugins("beforeRender",{cancelable:!0})!==!1&&(g5.has(this)?this.attached&&!g5.running(this)&&g5.start(this):(this.draw(),_s({chart:this})))}draw(){let e;if(this._resizeBeforeDraw){const{width:i,height:o}=this._resizeBeforeDraw;this._resizeBeforeDraw=null,this._resize(i,o)}if(this.clear(),this.width<=0||this.height<=0||this.notifyPlugins("beforeDraw",{cancelable:!0})===!1)return;const n=this._layers;for(e=0;e<n.length&&n[e].z<=0;++e)n[e].draw(this.chartArea);for(this._drawDatasets();e<n.length;++e)n[e].draw(this.chartArea);this.notifyPlugins("afterDraw")}_getSortedDatasetMetas(e){const n=this._sortedMetasets,i=[];let o,u;for(o=0,u=n.length;o<u;++o){const a=n[o];(!e||a.visible)&&i.push(a)}return i}getSortedVisibleDatasetMetas(){return this._getSortedDatasetMetas(!0)}_drawDatasets(){if(this.notifyPlugins("beforeDatasetsDraw",{cancelable:!0})===!1)return;const e=this.getSortedVisibleDatasetMetas();for(let n=e.length-1;n>=0;--n)this._drawDataset(e[n]);this.notifyPlugins("afterDatasetsDraw")}_drawDataset(e){const n=this.ctx,i=e._clip,o=!i.disabled,u=id(e,this.chartArea),a={meta:e,index:e.index,cancelable:!0};this.notifyPlugins("beforeDatasetDraw",a)!==!1&&(o&&kt(n,{left:i.left===!1?0:u.left-i.left,right:i.right===!1?this.width:u.right+i.right,top:i.top===!1?0:u.top-i.top,bottom:i.bottom===!1?this.height:u.bottom+i.bottom}),e.controller.draw(),o&&Bt(n),a.cancelable=!1,this.notifyPlugins("afterDatasetDraw",a))}isPointInArea(e){return $o(e,this.chartArea,this._minPadding)}getElementsAtEventForMode(e,n,i,o){const u=eh.modes[n];return typeof u=="function"?u(this,e,i,o):[]}getDatasetMeta(e){const n=this.data.datasets[e],i=this._metasets;let o=i.filter(u=>u&&u._dataset===n).pop();return o||(o={type:null,data:[],dataset:null,controller:null,hidden:null,xAxisID:null,yAxisID:null,order:n&&n.order||0,index:e,_dataset:n,_parsed:[],_sorted:!1},i.push(o)),o}getContext(){return this.$context||(this.$context=d3(null,{chart:this,type:"chart"}))}getVisibleDatasetCount(){return this.getSortedVisibleDatasetMetas().length}isDatasetVisible(e){const n=this.data.datasets[e];if(!n)return!1;const i=this.getDatasetMeta(e);return typeof i.hidden=="boolean"?!i.hidden:!n.hidden}setDatasetVisibility(e,n){const i=this.getDatasetMeta(e);i.hidden=!n}toggleDataVisibility(e){this._hiddenIndices[e]=!this._hiddenIndices[e]}getDataVisibility(e){return!this._hiddenIndices[e]}_updateVisibility(e,n,i){const o=i?"show":"hide",u=this.getDatasetMeta(e),a=u.controller._resolveAnimations(void 0,o);m6(n)?(u.data[n].hidden=!i,this.update()):(this.setDatasetVisibility(e,i),a.update(u,{visible:i}),this.update(c=>c.datasetIndex===e?o:void 0))}hide(e,n){this._updateVisibility(e,n,!1)}show(e,n){this._updateVisibility(e,n,!0)}_destroyDatasetMeta(e){const n=this._metasets[e];n&&n.controller&&n.controller._destroy(),delete this._metasets[e]}_stop(){let e,n;for(this.stop(),g5.remove(this),e=0,n=this.data.datasets.length;e<n;++e)this._destroyDatasetMeta(e)}destroy(){this.notifyPlugins("beforeDestroy");const{canvas:e,ctx:n}=this;this._stop(),this.config.clearCache(),e&&(this.unbindEvents(),Wi(e,n),this.platform.releaseContext(n),this.canvas=null,this.ctx=null),delete o4[this.id],this.notifyPlugins("afterDestroy")}toBase64Image(...e){return this.canvas.toDataURL(...e)}bindEvents(){this.bindUserEvents(),this.options.responsive?this.bindResponsiveEvents():this.attached=!0}bindUserEvents(){const e=this._listeners,n=this.platform,i=(u,a)=>{n.addEventListener(this,u,a),e[u]=a},o=(u,a,c)=>{u.offsetX=a,u.offsetY=c,this._eventHandler(u)};Y9(this.options.events,u=>i(u,o))}bindResponsiveEvents(){this._responsiveListeners||(this._responsiveListeners={});const e=this._responsiveListeners,n=this.platform,i=(h,d)=>{n.addEventListener(this,h,d),e[h]=d},o=(h,d)=>{e[h]&&(n.removeEventListener(this,h,d),delete e[h])},u=(h,d)=>{this.canvas&&this.resize(h,d)};let a;const c=()=>{o("attach",c),this.attached=!0,this.resize(),i("resize",u),i("detach",a)};a=()=>{this.attached=!1,o("resize",u),this._stop(),this._resize(0,0),i("attach",c)},n.isAttached(this.canvas)?c():a()}unbindEvents(){Y9(this._listeners,(e,n)=>{this.platform.removeEventListener(this,n,e)}),this._listeners={},Y9(this._responsiveListeners,(e,n)=>{this.platform.removeEventListener(this,n,e)}),this._responsiveListeners=void 0}updateHoverStyle(e,n,i){const o=i?"set":"remove";let u,a,c,h;for(n==="dataset"&&(u=this.getDatasetMeta(e[0].datasetIndex),u.controller["_"+o+"DatasetHoverStyle"]()),c=0,h=e.length;c<h;++c){a=e[c];const d=a&&this.getDatasetMeta(a.datasetIndex).controller;d&&d[o+"HoverStyle"](a.element,a.datasetIndex,a.index)}}getActiveElements(){return this._active||[]}setActiveElements(e){const n=this._active||[],i=e.map(({datasetIndex:u,index:a})=>{const c=this.getDatasetMeta(u);if(!c)throw new Error("No dataset found at index "+u);return{datasetIndex:u,element:c.data[a],index:a}});!l4(i,n)&&(this._active=i,this._lastEvent=null,this._updateHoverStyles(i,n))}notifyPlugins(e,n,i){return this._plugins.notify(this,e,n,i)}isPluginEnabled(e){return this._plugins._cache.filter(n=>n.plugin.id===e).length===1}_updateHoverStyles(e,n,i){const o=this.options.hover,u=(h,d)=>h.filter(p=>!d.some(m=>p.datasetIndex===m.datasetIndex&&p.index===m.index)),a=u(n,e),c=i?e:u(e,n);a.length&&this.updateHoverStyle(a,o.mode,!1),c.length&&o.mode&&this.updateHoverStyle(c,o.mode,!0)}_eventHandler(e,n){const i={event:e,replay:n,cancelable:!0,inChartArea:this.isPointInArea(e)},o=a=>(a.options.events||this.options.events).includes(e.native.type);if(this.notifyPlugins("beforeEvent",i,o)===!1)return;const u=this._handleEvent(e,n,i.inChartArea);return i.cancelable=!1,this.notifyPlugins("afterEvent",i,o),(u||i.changed)&&this.render(),this}_handleEvent(e,n,i){const{_active:o=[],options:u}=this,a=n,c=this._getActiveElements(e,o,i,a),h=bc(e),d=rd(e,this._lastEvent,i,h);i&&(this._lastEvent=null,n0(u.onHover,[e,c,this],this),h&&n0(u.onClick,[e,c,this],this));const p=!l4(c,o);return(p||n)&&(this._active=c,this._updateHoverStyles(c,o,n)),this._lastEvent=d,p}_getActiveElements(e,n,i,o){if(e.type==="mouseout")return[];if(!i)return n;const u=this.options.hover;return this.getElementsAtEventForMode(e,u.mode,u,o)}},j9(H5,"defaults",d0),j9(H5,"instances",o4),j9(H5,"overrides",b2),j9(H5,"registry",e5),j9(H5,"version",Jh),j9(H5,"getChart",xs),H5);function Es(){return Y9(b4.instances,t=>t._plugins.invalidate())}function lu(t,e){const{x:n,y:i,base:o,width:u,height:a}=t.getProps(["x","y","base","width","height"],e);let c,h,d,p,m;return t.horizontal?(m=a/2,c=Math.min(n,o),h=Math.max(n,o),d=i-m,p=i+m):(m=u/2,c=n-m,h=n+m,d=Math.min(i,o),p=Math.max(i,o)),{left:c,top:d,right:h,bottom:p}}function U5(t,e,n,i){return t?0:H1(e,n,i)}function sd(t,e,n){const i=t.options.borderWidth,o=t.borderSkipped,u=Wo(i);return{t:U5(o.top,u.top,0,n),r:U5(o.right,u.right,0,e),b:U5(o.bottom,u.bottom,0,n),l:U5(o.left,u.left,0,e)}}function od(t,e,n){const{enableBorderRadius:i}=t.getProps(["enableBorderRadius"]),o=t.options.borderRadius,u=o3(o),a=Math.min(e,n),c=t.borderSkipped,h=i||V9(o);return{topLeft:U5(!h||c.top||c.left,u.topLeft,0,a),topRight:U5(!h||c.top||c.right,u.topRight,0,a),bottomLeft:U5(!h||c.bottom||c.left,u.bottomLeft,0,a),bottomRight:U5(!h||c.bottom||c.right,u.bottomRight,0,a)}}function ud(t){const e=lu(t),n=e.right-e.left,i=e.bottom-e.top,o=sd(t,n/2,i/2),u=od(t,n/2,i/2);return{outer:{x:e.left,y:e.top,w:n,h:i,radius:u},inner:{x:e.left+o.l,y:e.top+o.t,w:n-o.l-o.r,h:i-o.t-o.b,radius:{topLeft:Math.max(0,u.topLeft-Math.max(o.t,o.l)),topRight:Math.max(0,u.topRight-Math.max(o.t,o.r)),bottomLeft:Math.max(0,u.bottomLeft-Math.max(o.b,o.l)),bottomRight:Math.max(0,u.bottomRight-Math.max(o.b,o.r))}}}}function R8(t,e,n,i){const o=e===null,u=n===null,c=t&&!(o&&u)&&lu(t,i);return c&&(o||s3(e,c.left,c.right))&&(u||s3(n,c.top,c.bottom))}function ad(t){return t.topLeft||t.topRight||t.bottomLeft||t.bottomRight}function ld(t,e){t.rect(e.x,e.y,e.w,e.h)}function L8(t,e,n={}){const i=t.x!==n.x?-e:0,o=t.y!==n.y?-e:0,u=(t.x+t.w!==n.x+n.w?e:0)-i,a=(t.y+t.h!==n.y+n.h?e:0)-o;return{x:t.x+i,y:t.y+o,w:t.w+u,h:t.h+a,radius:t.radius}}class u4 extends Z5{constructor(e){super(),this.options=void 0,this.horizontal=void 0,this.base=void 0,this.width=void 0,this.height=void 0,this.inflateAmount=void 0,e&&Object.assign(this,e)}draw(e){const{inflateAmount:n,options:{borderColor:i,backgroundColor:o}}=this,{inner:u,outer:a}=ud(this),c=ad(a.radius)?d4:ld;e.save(),(a.w!==u.w||a.h!==u.h)&&(e.beginPath(),c(e,L8(a,n,u)),e.clip(),c(e,L8(u,-n,a)),e.fillStyle=i,e.fill("evenodd")),e.beginPath(),c(e,L8(u,n)),e.fillStyle=o,e.fill(),e.restore()}inRange(e,n,i){return R8(this,e,n,i)}inXRange(e,n){return R8(this,e,null,n)}inYRange(e,n){return R8(this,null,e,n)}getCenterPoint(e){const{x:n,y:i,base:o,horizontal:u}=this.getProps(["x","y","base","horizontal"],e);return{x:u?(n+o)/2:n,y:u?i:(i+o)/2}}getRange(e){return e==="x"?this.width/2:this.height/2}}j9(u4,"id","bar"),j9(u4,"defaults",{borderSkipped:"start",borderWidth:0,borderRadius:0,inflateAmount:"auto",pointStyle:void 0}),j9(u4,"defaultRoutes",{backgroundColor:"backgroundColor",borderColor:"borderColor"});const Cs=(t,e)=>{let{boxHeight:n=e,boxWidth:i=e}=t;return t.usePointStyle&&(n=Math.min(n,e),i=t.pointStyleWidth||Math.min(i,e)),{boxWidth:i,boxHeight:n,itemHeight:Math.max(e,n)}},cd=(t,e)=>t!==null&&e!==null&&t.datasetIndex===e.datasetIndex&&t.index===e.index;class Fs extends Z5{constructor(e){super(),this._added=!1,this.legendHitBoxes=[],this._hoveredItem=null,this.doughnutMode=!1,this.chart=e.chart,this.options=e.options,this.ctx=e.ctx,this.legendItems=void 0,this.columnSizes=void 0,this.lineWidths=void 0,this.maxHeight=void 0,this.maxWidth=void 0,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.height=void 0,this.width=void 0,this._margins=void 0,this.position=void 0,this.weight=void 0,this.fullSize=void 0}update(e,n,i){this.maxWidth=e,this.maxHeight=n,this._margins=i,this.setDimensions(),this.buildLabels(),this.fit()}setDimensions(){this.isHorizontal()?(this.width=this.maxWidth,this.left=this._margins.left,this.right=this.width):(this.height=this.maxHeight,this.top=this._margins.top,this.bottom=this.height)}buildLabels(){const e=this.options.labels||{};let n=n0(e.generateLabels,[this.chart],this)||[];e.filter&&(n=n.filter(i=>e.filter(i,this.chart.data))),e.sort&&(n=n.sort((i,o)=>e.sort(i,o,this.chart.data))),this.options.reverse&&n.reverse(),this.legendItems=n}fit(){const{options:e,ctx:n}=this;if(!e.display){this.width=this.height=0;return}const i=e.labels,o=V0(i.font),u=o.size,a=this._computeTitleHeight(),{boxWidth:c,itemHeight:h}=Cs(i,u);let d,p;n.font=o.string,this.isHorizontal()?(d=this.maxWidth,p=this._fitRows(a,u,c,h)+10):(p=this.maxHeight,d=this._fitCols(a,o,c,h)+10),this.width=Math.min(d,e.maxWidth||this.maxWidth),this.height=Math.min(p,e.maxHeight||this.maxHeight)}_fitRows(e,n,i,o){const{ctx:u,maxWidth:a,options:{labels:{padding:c}}}=this,h=this.legendHitBoxes=[],d=this.lineWidths=[0],p=o+c;let m=e;u.textAlign="left",u.textBaseline="middle";let D=-1,w=-p;return this.legendItems.forEach((E,y)=>{const x=i+n/2+u.measureText(E.text).width;(y===0||d[d.length-1]+x+2*c>a)&&(m+=p,d[d.length-(y>0?0:1)]=0,w+=p,D++),h[y]={left:0,top:w,row:D,width:x,height:o},d[d.length-1]+=x+c}),m}_fitCols(e,n,i,o){const{ctx:u,maxHeight:a,options:{labels:{padding:c}}}=this,h=this.legendHitBoxes=[],d=this.columnSizes=[],p=a-e;let m=c,D=0,w=0,E=0,y=0;return this.legendItems.forEach((x,C)=>{const{itemWidth:k,itemHeight:A}=fd(i,n,u,x,o);C>0&&w+A+2*c>p&&(m+=D+c,d.push({width:D,height:w}),E+=D+c,y++,D=w=0),h[C]={left:E,top:w,col:y,width:k,height:A},D=Math.max(D,k),w+=A+c}),m+=D,d.push({width:D,height:w}),m}adjustHitBoxes(){if(!this.options.display)return;const e=this._computeTitleHeight(),{legendHitBoxes:n,options:{align:i,labels:{padding:o},rtl:u}}=this,a=u3(u,this.left,this.width);if(this.isHorizontal()){let c=0,h=H0(i,this.left+o,this.right-this.lineWidths[c]);for(const d of n)c!==d.row&&(c=d.row,h=H0(i,this.left+o,this.right-this.lineWidths[c])),d.top+=this.top+e+o,d.left=a.leftForLtr(a.x(h),d.width),h+=d.width+o}else{let c=0,h=H0(i,this.top+e+o,this.bottom-this.columnSizes[c].height);for(const d of n)d.col!==c&&(c=d.col,h=H0(i,this.top+e+o,this.bottom-this.columnSizes[c].height)),d.top=h,d.left+=this.left+o,d.left=a.leftForLtr(a.x(d.left),d.width),h+=d.height+o}}isHorizontal(){return this.options.position==="top"||this.options.position==="bottom"}draw(){if(this.options.display){const e=this.ctx;kt(e,this),this._draw(),Bt(e)}}_draw(){const{options:e,columnSizes:n,lineWidths:i,ctx:o}=this,{align:u,labels:a}=e,c=d0.color,h=u3(e.rtl,this.left,this.width),d=V0(a.font),{padding:p}=a,m=d.size,D=m/2;let w;this.drawTitle(),o.textAlign=h.textAlign("left"),o.textBaseline="middle",o.lineWidth=.5,o.font=d.string;const{boxWidth:E,boxHeight:y,itemHeight:x}=Cs(a,m),C=function(S,P,T){if(isNaN(E)||E<=0||isNaN(y)||y<0)return;o.save();const I=K9(T.lineWidth,1);if(o.fillStyle=K9(T.fillStyle,c),o.lineCap=K9(T.lineCap,"butt"),o.lineDashOffset=K9(T.lineDashOffset,0),o.lineJoin=K9(T.lineJoin,"miter"),o.lineWidth=I,o.strokeStyle=K9(T.strokeStyle,c),o.setLineDash(K9(T.lineDash,[])),a.usePointStyle){const H={radius:y*Math.SQRT2/2,pointStyle:T.pointStyle,rotation:T.rotation,borderWidth:I},W=h.xPlus(S,E/2),Z=P+D;Ho(o,H,W,Z,a.pointStyleWidth&&E)}else{const H=P+Math.max((m-y)/2,0),W=h.leftForLtr(S,E),Z=o3(T.borderRadius);o.beginPath(),Object.values(Z).some(f9=>f9!==0)?d4(o,{x:W,y:H,w:E,h:y,radius:Z}):o.rect(W,H,E,y),o.fill(),I!==0&&o.stroke()}o.restore()},k=function(S,P,T){v6(o,T.text,S,P+x/2,d,{strikethrough:T.hidden,textAlign:h.textAlign(T.textAlign)})},A=this.isHorizontal(),B=this._computeTitleHeight();A?w={x:H0(u,this.left+p,this.right-i[0]),y:this.top+p+B,line:0}:w={x:this.left+p,y:H0(u,this.top+B+p,this.bottom-n[0].height),line:0},Xo(this.ctx,e.textDirection);const F=x+p;this.legendItems.forEach((S,P)=>{o.strokeStyle=S.fontColor,o.fillStyle=S.fontColor;const T=o.measureText(S.text).width,I=h.textAlign(S.textAlign||(S.textAlign=a.textAlign)),H=E+D+T;let W=w.x,Z=w.y;h.setWidth(this.width),A?P>0&&W+H+p>this.right&&(Z=w.y+=F,w.line++,W=w.x=H0(u,this.left+p,this.right-i[w.line])):P>0&&Z+F>this.bottom&&(W=w.x=W+n[w.line].width+p,w.line++,Z=w.y=H0(u,this.top+B+p,this.bottom-n[w.line].height));const f9=h.x(W);if(C(f9,Z,S),W=$c(I,W+E+D,A?W+H:this.right,e.rtl),k(h.x(W),Z,S),A)w.x+=H+p;else if(typeof S.text!="string"){const o9=d.lineHeight;w.y+=cu(S,o9)+p}else w.y+=F}),Qo(this.ctx,e.textDirection)}drawTitle(){const e=this.options,n=e.title,i=V0(n.font),o=b1(n.padding);if(!n.display)return;const u=u3(e.rtl,this.left,this.width),a=this.ctx,c=n.position,h=i.size/2,d=o.top+h;let p,m=this.left,D=this.width;if(this.isHorizontal())D=Math.max(...this.lineWidths),p=this.top+d,m=H0(e.align,m,this.right-D);else{const E=this.columnSizes.reduce((y,x)=>Math.max(y,x.height),0);p=d+H0(e.align,this.top,this.bottom-E-e.labels.padding-this._computeTitleHeight())}const w=H0(c,m,m+D);a.textAlign=u.textAlign(Mt(c)),a.textBaseline="middle",a.strokeStyle=n.color,a.fillStyle=n.color,a.font=i.string,v6(a,n.text,w,p,i)}_computeTitleHeight(){const e=this.options.title,n=V0(e.font),i=b1(e.padding);return e.display?n.lineHeight+i.height:0}_getLegendItemAt(e,n){let i,o,u;if(s3(e,this.left,this.right)&&s3(n,this.top,this.bottom)){for(u=this.legendHitBoxes,i=0;i<u.length;++i)if(o=u[i],s3(e,o.left,o.left+o.width)&&s3(n,o.top,o.top+o.height))return this.legendItems[i]}return null}handleEvent(e){const n=this.options;if(!pd(e.type,n))return;const i=this._getLegendItemAt(e.x,e.y);if(e.type==="mousemove"||e.type==="mouseout"){const o=this._hoveredItem,u=cd(o,i);o&&!u&&n0(n.onLeave,[e,o,this],this),this._hoveredItem=i,i&&!u&&n0(n.onHover,[e,i,this],this)}else i&&n0(n.onClick,[e,i,this],this)}}function fd(t,e,n,i,o){const u=hd(i,t,e,n),a=dd(o,i,e.lineHeight);return{itemWidth:u,itemHeight:a}}function hd(t,e,n,i){let o=t.text;return o&&typeof o!="string"&&(o=o.reduce((u,a)=>u.length>a.length?u:a)),e+n.size/2+i.measureText(o).width}function dd(t,e,n){let i=t;return typeof e.text!="string"&&(i=cu(e,n)),i}function cu(t,e){const n=t.text?t.text.length:0;return e*n}function pd(t,e){return!!((t==="mousemove"||t==="mouseout")&&(e.onHover||e.onLeave)||e.onClick&&(t==="click"||t==="mouseup"))}var gd={id:"legend",_element:Fs,start(t,e,n){const i=t.legend=new Fs({ctx:t.ctx,options:n,chart:t});S1.configure(t,i,n),S1.addBox(t,i)},stop(t){S1.removeBox(t,t.legend),delete t.legend},beforeUpdate(t,e,n){const i=t.legend;S1.configure(t,i,n),i.options=n},afterUpdate(t){const e=t.legend;e.buildLabels(),e.adjustHitBoxes()},afterEvent(t,e){e.replay||t.legend.handleEvent(e.event)},defaults:{display:!0,position:"top",align:"center",fullSize:!0,reverse:!1,weight:1e3,onClick(t,e,n){const i=e.datasetIndex,o=n.chart;o.isDatasetVisible(i)?(o.hide(i),e.hidden=!0):(o.show(i),e.hidden=!1)},onHover:null,onLeave:null,labels:{color:t=>t.chart.options.color,boxWidth:40,padding:10,generateLabels(t){const e=t.data.datasets,{labels:{usePointStyle:n,pointStyle:i,textAlign:o,color:u,useBorderRadius:a,borderRadius:c}}=t.legend.options;return t._getSortedDatasetMetas().map(h=>{const d=h.controller.getStyle(n?0:void 0),p=b1(d.borderWidth);return{text:e[h.index].label,fillStyle:d.backgroundColor,fontColor:u,hidden:!h.visible,lineCap:d.borderCapStyle,lineDash:d.borderDash,lineDashOffset:d.borderDashOffset,lineJoin:d.borderJoinStyle,lineWidth:(p.width+p.height)/4,strokeStyle:d.borderColor,pointStyle:i||d.pointStyle,rotation:d.rotation,textAlign:o||d.textAlign,borderRadius:a&&(c||d.borderRadius),datasetIndex:h.index}},this)}},title:{color:t=>t.chart.options.color,display:!1,position:"center",text:""}},descriptors:{_scriptable:t=>!t.startsWith("on"),labels:{_scriptable:t=>!["generateLabels","filter","sort"].includes(t)}}};class fu extends Z5{constructor(e){super(),this.chart=e.chart,this.options=e.options,this.ctx=e.ctx,this._padding=void 0,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.width=void 0,this.height=void 0,this.position=void 0,this.weight=void 0,this.fullSize=void 0}update(e,n){const i=this.options;if(this.left=0,this.top=0,!i.display){this.width=this.height=this.right=this.bottom=0;return}this.width=this.right=e,this.height=this.bottom=n;const o=_0(i.text)?i.text.length:1;this._padding=b1(i.padding);const u=o*V0(i.font).lineHeight+this._padding.height;this.isHorizontal()?this.height=u:this.width=u}isHorizontal(){const e=this.options.position;return e==="top"||e==="bottom"}_drawArgs(e){const{top:n,left:i,bottom:o,right:u,options:a}=this,c=a.align;let h=0,d,p,m;return this.isHorizontal()?(p=H0(c,i,u),m=n+e,d=u-i):(a.position==="left"?(p=i+e,m=H0(c,o,n),h=W0*-.5):(p=u-e,m=H0(c,n,o),h=W0*.5),d=o-n),{titleX:p,titleY:m,maxWidth:d,rotation:h}}draw(){const e=this.ctx,n=this.options;if(!n.display)return;const i=V0(n.font),u=i.lineHeight/2+this._padding.top,{titleX:a,titleY:c,maxWidth:h,rotation:d}=this._drawArgs(u);v6(e,n.text,0,0,i,{color:n.color,maxWidth:h,rotation:d,textAlign:Mt(n.align),textBaseline:"middle",translation:[a,c]})}}function md(t,e){const n=new fu({ctx:t.ctx,options:e,chart:t});S1.configure(t,n,e),S1.addBox(t,n),t.titleBlock=n}var vd={id:"title",_element:fu,start(t,e,n){md(t,n)},stop(t){const e=t.titleBlock;S1.removeBox(t,e),delete t.titleBlock},beforeUpdate(t,e,n){const i=t.titleBlock;S1.configure(t,i,n),i.options=n},defaults:{align:"center",display:!1,font:{weight:"bold"},fullSize:!0,padding:10,position:"top",text:"",weight:2e3},defaultRoutes:{color:"color"},descriptors:{_scriptable:!0,_indexable:!1}};const a6={average(t){if(!t.length)return!1;let e,n,i=new Set,o=0,u=0;for(e=0,n=t.length;e<n;++e){const c=t[e].element;if(c&&c.hasValue()){const h=c.tooltipPosition();i.add(h.x),o+=h.y,++u}}return u===0||i.size===0?!1:{x:[...i].reduce((c,h)=>c+h)/i.size,y:o/u}},nearest(t,e){if(!t.length)return!1;let n=e.x,i=e.y,o=Number.POSITIVE_INFINITY,u,a,c;for(u=0,a=t.length;u<a;++u){const h=t[u].element;if(h&&h.hasValue()){const d=h.getCenterPoint(),p=Oc(e,d);p<o&&(o=p,c=h)}}if(c){const h=c.tooltipPosition();n=h.x,i=h.y}return{x:n,y:i}}};function J1(t,e){return e&&(_0(e)?Array.prototype.push.apply(t,e):t.push(e)),t}function m5(t){return(typeof t=="string"||t instanceof String)&&t.indexOf(`
`)>-1?t.split(`
`):t}function yd(t,e){const{element:n,datasetIndex:i,index:o}=e,u=t.getDatasetMeta(i).controller,{label:a,value:c}=u.getLabelAndValue(o);return{chart:t,label:a,parsed:u.getParsed(o),raw:t.data.datasets[i].data[o],formattedValue:c,dataset:u.getDataset(),dataIndex:o,datasetIndex:i,element:n}}function Ss(t,e){const n=t.chart.ctx,{body:i,footer:o,title:u}=t,{boxWidth:a,boxHeight:c}=e,h=V0(e.bodyFont),d=V0(e.titleFont),p=V0(e.footerFont),m=u.length,D=o.length,w=i.length,E=b1(e.padding);let y=E.height,x=0,C=i.reduce((B,F)=>B+F.before.length+F.lines.length+F.after.length,0);if(C+=t.beforeBody.length+t.afterBody.length,m&&(y+=m*d.lineHeight+(m-1)*e.titleSpacing+e.titleMarginBottom),C){const B=e.displayColors?Math.max(c,h.lineHeight):h.lineHeight;y+=w*B+(C-w)*h.lineHeight+(C-1)*e.bodySpacing}D&&(y+=e.footerMarginTop+D*p.lineHeight+(D-1)*e.footerSpacing);let k=0;const A=function(B){x=Math.max(x,n.measureText(B).width+k)};return n.save(),n.font=d.string,Y9(t.title,A),n.font=h.string,Y9(t.beforeBody.concat(t.afterBody),A),k=e.displayColors?a+2+e.boxPadding:0,Y9(i,B=>{Y9(B.before,A),Y9(B.lines,A),Y9(B.after,A)}),k=0,n.font=p.string,Y9(t.footer,A),n.restore(),x+=E.width,{width:x,height:y}}function Dd(t,e){const{y:n,height:i}=e;return n<i/2?"top":n>t.height-i/2?"bottom":"center"}function wd(t,e,n,i){const{x:o,width:u}=i,a=n.caretSize+n.caretPadding;if(t==="left"&&o+u+a>e.width||t==="right"&&o-u-a<0)return!0}function _d(t,e,n,i){const{x:o,width:u}=n,{width:a,chartArea:{left:c,right:h}}=t;let d="center";return i==="center"?d=o<=(c+h)/2?"left":"right":o<=u/2?d="left":o>=a-u/2&&(d="right"),wd(d,t,e,n)&&(d="center"),d}function As(t,e,n){const i=n.yAlign||e.yAlign||Dd(t,n);return{xAlign:n.xAlign||e.xAlign||_d(t,e,n,i),yAlign:i}}function xd(t,e){let{x:n,width:i}=t;return e==="right"?n-=i:e==="center"&&(n-=i/2),n}function Ed(t,e,n){let{y:i,height:o}=t;return e==="top"?i+=n:e==="bottom"?i-=o+n:i-=o/2,i}function bs(t,e,n,i){const{caretSize:o,caretPadding:u,cornerRadius:a}=t,{xAlign:c,yAlign:h}=n,d=o+u,{topLeft:p,topRight:m,bottomLeft:D,bottomRight:w}=o3(a);let E=xd(e,c);const y=Ed(e,h,d);return h==="center"?c==="left"?E+=d:c==="right"&&(E-=d):c==="left"?E-=Math.max(p,D)+o:c==="right"&&(E+=Math.max(m,w)+o),{x:H1(E,0,i.width-e.width),y:H1(y,0,i.height-e.height)}}function G7(t,e,n){const i=b1(n.padding);return e==="center"?t.x+t.width/2:e==="right"?t.x+t.width-i.right:t.x+i.left}function Ms(t){return J1([],m5(t))}function Cd(t,e,n){return d3(t,{tooltip:e,tooltipItems:n,type:"tooltip"})}function ks(t,e){const n=e&&e.dataset&&e.dataset.tooltip&&e.dataset.tooltip.callbacks;return n?t.override(n):t}const hu={beforeTitle:d5,title(t){if(t.length>0){const e=t[0],n=e.chart.data.labels,i=n?n.length:0;if(this&&this.options&&this.options.mode==="dataset")return e.dataset.label||"";if(e.label)return e.label;if(i>0&&e.dataIndex<i)return n[e.dataIndex]}return""},afterTitle:d5,beforeBody:d5,beforeLabel:d5,label(t){if(this&&this.options&&this.options.mode==="dataset")return t.label+": "+t.formattedValue||t.formattedValue;let e=t.dataset.label||"";e&&(e+=": ");const n=t.formattedValue;return r0(n)||(e+=n),e},labelColor(t){const n=t.chart.getDatasetMeta(t.datasetIndex).controller.getStyle(t.dataIndex);return{borderColor:n.borderColor,backgroundColor:n.backgroundColor,borderWidth:n.borderWidth,borderDash:n.borderDash,borderDashOffset:n.borderDashOffset,borderRadius:0}},labelTextColor(){return this.options.bodyColor},labelPointStyle(t){const n=t.chart.getDatasetMeta(t.datasetIndex).controller.getStyle(t.dataIndex);return{pointStyle:n.pointStyle,rotation:n.rotation}},afterLabel:d5,afterBody:d5,beforeFooter:d5,footer:d5,afterFooter:d5};function i1(t,e,n,i){const o=t[e].call(n,i);return typeof o>"u"?hu[e].call(n,i):o}class ct extends Z5{constructor(e){super(),this.opacity=0,this._active=[],this._eventPosition=void 0,this._size=void 0,this._cachedAnimations=void 0,this._tooltipItems=[],this.$animations=void 0,this.$context=void 0,this.chart=e.chart,this.options=e.options,this.dataPoints=void 0,this.title=void 0,this.beforeBody=void 0,this.body=void 0,this.afterBody=void 0,this.footer=void 0,this.xAlign=void 0,this.yAlign=void 0,this.x=void 0,this.y=void 0,this.height=void 0,this.width=void 0,this.caretX=void 0,this.caretY=void 0,this.labelColors=void 0,this.labelPointStyles=void 0,this.labelTextColors=void 0}initialize(e){this.options=e,this._cachedAnimations=void 0,this.$context=void 0}_resolveAnimations(){const e=this._cachedAnimations;if(e)return e;const n=this.chart,i=this.options.setContext(this.getContext()),o=i.enabled&&n.options.animation&&i.animations,u=new Zo(this.chart,o);return o._cacheable&&(this._cachedAnimations=Object.freeze(u)),u}getContext(){return this.$context||(this.$context=Cd(this.chart.getContext(),this,this._tooltipItems))}getTitle(e,n){const{callbacks:i}=n,o=i1(i,"beforeTitle",this,e),u=i1(i,"title",this,e),a=i1(i,"afterTitle",this,e);let c=[];return c=J1(c,m5(o)),c=J1(c,m5(u)),c=J1(c,m5(a)),c}getBeforeBody(e,n){return Ms(i1(n.callbacks,"beforeBody",this,e))}getBody(e,n){const{callbacks:i}=n,o=[];return Y9(e,u=>{const a={before:[],lines:[],after:[]},c=ks(i,u);J1(a.before,m5(i1(c,"beforeLabel",this,u))),J1(a.lines,i1(c,"label",this,u)),J1(a.after,m5(i1(c,"afterLabel",this,u))),o.push(a)}),o}getAfterBody(e,n){return Ms(i1(n.callbacks,"afterBody",this,e))}getFooter(e,n){const{callbacks:i}=n,o=i1(i,"beforeFooter",this,e),u=i1(i,"footer",this,e),a=i1(i,"afterFooter",this,e);let c=[];return c=J1(c,m5(o)),c=J1(c,m5(u)),c=J1(c,m5(a)),c}_createItems(e){const n=this._active,i=this.chart.data,o=[],u=[],a=[];let c=[],h,d;for(h=0,d=n.length;h<d;++h)c.push(yd(this.chart,n[h]));return e.filter&&(c=c.filter((p,m,D)=>e.filter(p,m,D,i))),e.itemSort&&(c=c.sort((p,m)=>e.itemSort(p,m,i))),Y9(c,p=>{const m=ks(e.callbacks,p);o.push(i1(m,"labelColor",this,p)),u.push(i1(m,"labelPointStyle",this,p)),a.push(i1(m,"labelTextColor",this,p))}),this.labelColors=o,this.labelPointStyles=u,this.labelTextColors=a,this.dataPoints=c,c}update(e,n){const i=this.options.setContext(this.getContext()),o=this._active;let u,a=[];if(!o.length)this.opacity!==0&&(u={opacity:0});else{const c=a6[i.position].call(this,o,this._eventPosition);a=this._createItems(i),this.title=this.getTitle(a,i),this.beforeBody=this.getBeforeBody(a,i),this.body=this.getBody(a,i),this.afterBody=this.getAfterBody(a,i),this.footer=this.getFooter(a,i);const h=this._size=Ss(this,i),d=Object.assign({},c,h),p=As(this.chart,i,d),m=bs(i,d,p,this.chart);this.xAlign=p.xAlign,this.yAlign=p.yAlign,u={opacity:1,x:m.x,y:m.y,width:h.width,height:h.height,caretX:c.x,caretY:c.y}}this._tooltipItems=a,this.$context=void 0,u&&this._resolveAnimations().update(this,u),e&&i.external&&i.external.call(this,{chart:this.chart,tooltip:this,replay:n})}drawCaret(e,n,i,o){const u=this.getCaretPosition(e,i,o);n.lineTo(u.x1,u.y1),n.lineTo(u.x2,u.y2),n.lineTo(u.x3,u.y3)}getCaretPosition(e,n,i){const{xAlign:o,yAlign:u}=this,{caretSize:a,cornerRadius:c}=i,{topLeft:h,topRight:d,bottomLeft:p,bottomRight:m}=o3(c),{x:D,y:w}=e,{width:E,height:y}=n;let x,C,k,A,B,F;return u==="center"?(B=w+y/2,o==="left"?(x=D,C=x-a,A=B+a,F=B-a):(x=D+E,C=x+a,A=B-a,F=B+a),k=x):(o==="left"?C=D+Math.max(h,p)+a:o==="right"?C=D+E-Math.max(d,m)-a:C=this.caretX,u==="top"?(A=w,B=A-a,x=C-a,k=C+a):(A=w+y,B=A+a,x=C+a,k=C-a),F=A),{x1:x,x2:C,x3:k,y1:A,y2:B,y3:F}}drawTitle(e,n,i){const o=this.title,u=o.length;let a,c,h;if(u){const d=u3(i.rtl,this.x,this.width);for(e.x=G7(this,i.titleAlign,i),n.textAlign=d.textAlign(i.titleAlign),n.textBaseline="middle",a=V0(i.titleFont),c=i.titleSpacing,n.fillStyle=i.titleColor,n.font=a.string,h=0;h<u;++h)n.fillText(o[h],d.x(e.x),e.y+a.lineHeight/2),e.y+=a.lineHeight+c,h+1===u&&(e.y+=i.titleMarginBottom-c)}}_drawColorBox(e,n,i,o,u){const a=this.labelColors[i],c=this.labelPointStyles[i],{boxHeight:h,boxWidth:d}=u,p=V0(u.bodyFont),m=G7(this,"left",u),D=o.x(m),w=h<p.lineHeight?(p.lineHeight-h)/2:0,E=n.y+w;if(u.usePointStyle){const y={radius:Math.min(d,h)/2,pointStyle:c.pointStyle,rotation:c.rotation,borderWidth:1},x=o.leftForLtr(D,d)+d/2,C=E+h/2;e.strokeStyle=u.multiKeyBackground,e.fillStyle=u.multiKeyBackground,Ui(e,y,x,C),e.strokeStyle=a.borderColor,e.fillStyle=a.backgroundColor,Ui(e,y,x,C)}else{e.lineWidth=V9(a.borderWidth)?Math.max(...Object.values(a.borderWidth)):a.borderWidth||1,e.strokeStyle=a.borderColor,e.setLineDash(a.borderDash||[]),e.lineDashOffset=a.borderDashOffset||0;const y=o.leftForLtr(D,d),x=o.leftForLtr(o.xPlus(D,1),d-2),C=o3(a.borderRadius);Object.values(C).some(k=>k!==0)?(e.beginPath(),e.fillStyle=u.multiKeyBackground,d4(e,{x:y,y:E,w:d,h,radius:C}),e.fill(),e.stroke(),e.fillStyle=a.backgroundColor,e.beginPath(),d4(e,{x,y:E+1,w:d-2,h:h-2,radius:C}),e.fill()):(e.fillStyle=u.multiKeyBackground,e.fillRect(y,E,d,h),e.strokeRect(y,E,d,h),e.fillStyle=a.backgroundColor,e.fillRect(x,E+1,d-2,h-2))}e.fillStyle=this.labelTextColors[i]}drawBody(e,n,i){const{body:o}=this,{bodySpacing:u,bodyAlign:a,displayColors:c,boxHeight:h,boxWidth:d,boxPadding:p}=i,m=V0(i.bodyFont);let D=m.lineHeight,w=0;const E=u3(i.rtl,this.x,this.width),y=function(T){n.fillText(T,E.x(e.x+w),e.y+D/2),e.y+=D+u},x=E.textAlign(a);let C,k,A,B,F,S,P;for(n.textAlign=a,n.textBaseline="middle",n.font=m.string,e.x=G7(this,x,i),n.fillStyle=i.bodyColor,Y9(this.beforeBody,y),w=c&&x!=="right"?a==="center"?d/2+p:d+2+p:0,B=0,S=o.length;B<S;++B){for(C=o[B],k=this.labelTextColors[B],n.fillStyle=k,Y9(C.before,y),A=C.lines,c&&A.length&&(this._drawColorBox(n,e,B,E,i),D=Math.max(m.lineHeight,h)),F=0,P=A.length;F<P;++F)y(A[F]),D=m.lineHeight;Y9(C.after,y)}w=0,D=m.lineHeight,Y9(this.afterBody,y),e.y-=u}drawFooter(e,n,i){const o=this.footer,u=o.length;let a,c;if(u){const h=u3(i.rtl,this.x,this.width);for(e.x=G7(this,i.footerAlign,i),e.y+=i.footerMarginTop,n.textAlign=h.textAlign(i.footerAlign),n.textBaseline="middle",a=V0(i.footerFont),n.fillStyle=i.footerColor,n.font=a.string,c=0;c<u;++c)n.fillText(o[c],h.x(e.x),e.y+a.lineHeight/2),e.y+=a.lineHeight+i.footerSpacing}}drawBackground(e,n,i,o){const{xAlign:u,yAlign:a}=this,{x:c,y:h}=e,{width:d,height:p}=i,{topLeft:m,topRight:D,bottomLeft:w,bottomRight:E}=o3(o.cornerRadius);n.fillStyle=o.backgroundColor,n.strokeStyle=o.borderColor,n.lineWidth=o.borderWidth,n.beginPath(),n.moveTo(c+m,h),a==="top"&&this.drawCaret(e,n,i,o),n.lineTo(c+d-D,h),n.quadraticCurveTo(c+d,h,c+d,h+D),a==="center"&&u==="right"&&this.drawCaret(e,n,i,o),n.lineTo(c+d,h+p-E),n.quadraticCurveTo(c+d,h+p,c+d-E,h+p),a==="bottom"&&this.drawCaret(e,n,i,o),n.lineTo(c+w,h+p),n.quadraticCurveTo(c,h+p,c,h+p-w),a==="center"&&u==="left"&&this.drawCaret(e,n,i,o),n.lineTo(c,h+m),n.quadraticCurveTo(c,h,c+m,h),n.closePath(),n.fill(),o.borderWidth>0&&n.stroke()}_updateAnimationTarget(e){const n=this.chart,i=this.$animations,o=i&&i.x,u=i&&i.y;if(o||u){const a=a6[e.position].call(this,this._active,this._eventPosition);if(!a)return;const c=this._size=Ss(this,e),h=Object.assign({},a,this._size),d=As(n,e,h),p=bs(e,h,d,n);(o._to!==p.x||u._to!==p.y)&&(this.xAlign=d.xAlign,this.yAlign=d.yAlign,this.width=c.width,this.height=c.height,this.caretX=a.x,this.caretY=a.y,this._resolveAnimations().update(this,p))}}_willRender(){return!!this.opacity}draw(e){const n=this.options.setContext(this.getContext());let i=this.opacity;if(!i)return;this._updateAnimationTarget(n);const o={width:this.width,height:this.height},u={x:this.x,y:this.y};i=Math.abs(i)<.001?0:i;const a=b1(n.padding),c=this.title.length||this.beforeBody.length||this.body.length||this.afterBody.length||this.footer.length;n.enabled&&c&&(e.save(),e.globalAlpha=i,this.drawBackground(u,e,o,n),Xo(e,n.textDirection),u.y+=a.top,this.drawTitle(u,e,n),this.drawBody(u,e,n),this.drawFooter(u,e,n),Qo(e,n.textDirection),e.restore())}getActiveElements(){return this._active||[]}setActiveElements(e,n){const i=this._active,o=e.map(({datasetIndex:c,index:h})=>{const d=this.chart.getDatasetMeta(c);if(!d)throw new Error("Cannot find a dataset at index "+c);return{datasetIndex:c,element:d.data[h],index:h}}),u=!l4(i,o),a=this._positionChanged(o,n);(u||a)&&(this._active=o,this._eventPosition=n,this._ignoreReplayEvents=!0,this.update(!0))}handleEvent(e,n,i=!0){if(n&&this._ignoreReplayEvents)return!1;this._ignoreReplayEvents=!1;const o=this.options,u=this._active||[],a=this._getActiveElements(e,u,n,i),c=this._positionChanged(a,e),h=n||!l4(a,u)||c;return h&&(this._active=a,(o.enabled||o.external)&&(this._eventPosition={x:e.x,y:e.y},this.update(!0,n))),h}_getActiveElements(e,n,i,o){const u=this.options;if(e.type==="mouseout")return[];if(!o)return n.filter(c=>this.chart.data.datasets[c.datasetIndex]&&this.chart.getDatasetMeta(c.datasetIndex).controller.getParsed(c.index)!==void 0);const a=this.chart.getElementsAtEventForMode(e,u.mode,u,i);return u.reverse&&a.reverse(),a}_positionChanged(e,n){const{caretX:i,caretY:o,options:u}=this,a=a6[u.position].call(this,e,n);return a!==!1&&(i!==a.x||o!==a.y)}}j9(ct,"positioners",a6);var Fd={id:"tooltip",_element:ct,positioners:a6,afterInit(t,e,n){n&&(t.tooltip=new ct({chart:t,options:n}))},beforeUpdate(t,e,n){t.tooltip&&t.tooltip.initialize(n)},reset(t,e,n){t.tooltip&&t.tooltip.initialize(n)},afterDraw(t){const e=t.tooltip;if(e&&e._willRender()){const n={tooltip:e};if(t.notifyPlugins("beforeTooltipDraw",{...n,cancelable:!0})===!1)return;e.draw(t.ctx),t.notifyPlugins("afterTooltipDraw",n)}},afterEvent(t,e){if(t.tooltip){const n=e.replay;t.tooltip.handleEvent(e.event,n,e.inChartArea)&&(e.changed=!0)}},defaults:{enabled:!0,external:null,position:"average",backgroundColor:"rgba(0,0,0,0.8)",titleColor:"#fff",titleFont:{weight:"bold"},titleSpacing:2,titleMarginBottom:6,titleAlign:"left",bodyColor:"#fff",bodySpacing:2,bodyFont:{},bodyAlign:"left",footerColor:"#fff",footerSpacing:2,footerMarginTop:6,footerFont:{weight:"bold"},footerAlign:"left",padding:6,caretPadding:2,caretSize:5,cornerRadius:6,boxHeight:(t,e)=>e.bodyFont.size,boxWidth:(t,e)=>e.bodyFont.size,multiKeyBackground:"#fff",displayColors:!0,boxPadding:0,borderColor:"rgba(0,0,0,0)",borderWidth:0,animation:{duration:400,easing:"easeOutQuart"},animations:{numbers:{type:"number",properties:["x","y","width","height","caretX","caretY"]},opacity:{easing:"linear",duration:200}},callbacks:hu},defaultRoutes:{bodyFont:"font",footerFont:"font",titleFont:"font"},descriptors:{_scriptable:t=>t!=="filter"&&t!=="itemSort"&&t!=="external",_indexable:!1,callbacks:{_scriptable:!1,_indexable:!1},animation:{_fallback:!1},animations:{_fallback:"animation"}},additionalOptionScopes:["interaction"]};const Sd=(t,e,n,i)=>(typeof e=="string"?(n=t.push(e)-1,i.unshift({index:n,label:e})):isNaN(e)&&(n=null),n);function Ad(t,e,n,i){const o=t.indexOf(e);if(o===-1)return Sd(t,e,n,i);const u=t.lastIndexOf(e);return o!==u?n:o}const bd=(t,e)=>t===null?null:H1(Math.round(t),0,e);function Bs(t){const e=this.getLabels();return t>=0&&t<e.length?e[t]:t}class ft extends p3{constructor(e){super(e),this._startValue=void 0,this._valueRange=0,this._addedLabels=[]}init(e){const n=this._addedLabels;if(n.length){const i=this.getLabels();for(const{index:o,label:u}of n)i[o]===u&&i.splice(o,1);this._addedLabels=[]}super.init(e)}parse(e,n){if(r0(e))return null;const i=this.getLabels();return n=isFinite(n)&&i[n]===e?n:Ad(i,e,K9(n,e),this._addedLabels),bd(n,i.length-1)}determineDataLimits(){const{minDefined:e,maxDefined:n}=this.getUserBounds();let{min:i,max:o}=this.getMinMax(!0);this.options.bounds==="ticks"&&(e||(i=0),n||(o=this.getLabels().length-1)),this.min=i,this.max=o}buildTicks(){const e=this.min,n=this.max,i=this.options.offset,o=[];let u=this.getLabels();u=e===0&&n===u.length-1?u:u.slice(e,n+1),this._valueRange=Math.max(u.length-(i?0:1),1),this._startValue=this.min-(i?.5:0);for(let a=e;a<=n;a++)o.push({value:a});return o}getLabelForValue(e){return Bs.call(this,e)}configure(){super.configure(),this.isHorizontal()||(this._reversePixels=!this._reversePixels)}getPixelForValue(e){return typeof e!="number"&&(e=this.parse(e)),e===null?NaN:this.getPixelForDecimal((e-this._startValue)/this._valueRange)}getPixelForTick(e){const n=this.ticks;return e<0||e>n.length-1?null:this.getPixelForValue(n[e].value)}getValueForPixel(e){return Math.round(this._startValue+this.getDecimalForPixel(e)*this._valueRange)}getBasePixel(){return this.bottom}}j9(ft,"id","category"),j9(ft,"defaults",{ticks:{callback:Bs}});function Md(t,e){const n=[],{bounds:o,step:u,min:a,max:c,precision:h,count:d,maxTicks:p,maxDigits:m,includeBounds:D}=t,w=u||1,E=p-1,{min:y,max:x}=e,C=!r0(a),k=!r0(c),A=!r0(d),B=(x-y)/(m+1);let F=zi((x-y)/E/w)*w,S,P,T,I;if(F<1e-14&&!C&&!k)return[{value:y},{value:x}];I=Math.ceil(x/F)-Math.floor(y/F),I>E&&(F=zi(I*F/E/w)*w),r0(h)||(S=Math.pow(10,h),F=Math.ceil(F*S)/S),o==="ticks"?(P=Math.floor(y/F)*F,T=Math.ceil(x/F)*F):(P=y,T=x),C&&k&&u&&Bc((c-a)/u,F/1e3)?(I=Math.round(Math.min((c-a)/F,p)),F=(c-a)/I,P=a,T=c):A?(P=C?a:P,T=k?c:T,I=d-1,F=(T-P)/I):(I=(T-P)/F,r4(I,Math.round(I),F/1e3)?I=Math.round(I):I=Math.ceil(I));const H=Math.max(Ii(F),Ii(P));S=Math.pow(10,r0(h)?H:h),P=Math.round(P*S)/S,T=Math.round(T*S)/S;let W=0;for(C&&(D&&P!==a?(n.push({value:a}),P<a&&W++,r4(Math.round((P+W*F)*S)/S,a,Ns(a,B,t))&&W++):P<a&&W++);W<I;++W){const Z=Math.round((P+W*F)*S)/S;if(k&&Z>c)break;n.push({value:Z})}return k&&D&&T!==c?n.length&&r4(n[n.length-1].value,c,Ns(c,B,t))?n[n.length-1].value=c:n.push({value:c}):(!k||T===c)&&n.push({value:T}),n}function Ns(t,e,{horizontal:n,minRotation:i}){const o=F2(i),u=(n?Math.sin(o):Math.cos(o))||.001,a=.75*e*(""+t).length;return Math.min(e/u,a)}class kd extends p3{constructor(e){super(e),this.start=void 0,this.end=void 0,this._startValue=void 0,this._endValue=void 0,this._valueRange=0}parse(e,n){return r0(e)||(typeof e=="number"||e instanceof Number)&&!isFinite(+e)?null:+e}handleTickRangeOptions(){const{beginAtZero:e}=this.options,{minDefined:n,maxDefined:i}=this.getUserBounds();let{min:o,max:u}=this;const a=h=>o=n?o:h,c=h=>u=i?u:h;if(e){const h=X5(o),d=X5(u);h<0&&d<0?c(0):h>0&&d>0&&a(0)}if(o===u){let h=u===0?1:Math.abs(u*.05);c(u+h),e||a(o-h)}this.min=o,this.max=u}getTickLimit(){const e=this.options.ticks;let{maxTicksLimit:n,stepSize:i}=e,o;return i?(o=Math.ceil(this.max/i)-Math.floor(this.min/i)+1,o>1e3&&(console.warn(`scales.${this.id}.ticks.stepSize: ${i} would result generating up to ${o} ticks. Limiting to 1000.`),o=1e3)):(o=this.computeTickLimit(),n=n||11),n&&(o=Math.min(n,o)),o}computeTickLimit(){return Number.POSITIVE_INFINITY}buildTicks(){const e=this.options,n=e.ticks;let i=this.getTickLimit();i=Math.max(2,i);const o={maxTicks:i,bounds:e.bounds,min:e.min,max:e.max,precision:n.precision,step:n.stepSize,count:n.count,maxDigits:this._maxDigits(),horizontal:this.isHorizontal(),minRotation:n.minRotation||0,includeBounds:n.includeBounds!==!1},u=this._range||this,a=Md(o,u);return e.bounds==="ticks"&&Nc(a,this,"value"),e.reverse?(a.reverse(),this.start=this.max,this.end=this.min):(this.start=this.min,this.end=this.max),a}configure(){const e=this.ticks;let n=this.min,i=this.max;if(super.configure(),this.options.offset&&e.length){const o=(i-n)/Math.max(e.length-1,1)/2;n-=o,i+=o}this._startValue=n,this._endValue=i,this._valueRange=i-n}getLabelForValue(e){return Ro(e,this.chart.options.locale,this.options.ticks.format)}}class ht extends kd{determineDataLimits(){const{min:e,max:n}=this.getMinMax(!0);this.min=A1(e)?e:0,this.max=A1(n)?n:1,this.handleTickRangeOptions()}computeTickLimit(){const e=this.isHorizontal(),n=e?this.width:this.height,i=F2(this.options.ticks.minRotation),o=(e?Math.sin(i):Math.cos(i))||.001,u=this._resolveTickFontOptions(0);return Math.ceil(n/Math.min(40,u.lineHeight/o))}getPixelForValue(e){return e===null?NaN:this.getPixelForDecimal((e-this._startValue)/this._valueRange)}getValueForPixel(e){return this._startValue+this.getDecimalForPixel(e)*this._valueRange}}j9(ht,"id","linear"),j9(ht,"defaults",{ticks:{callback:jo.formatters.numeric}});const M4={millisecond:{common:!0,size:1,steps:1e3},second:{common:!0,size:1e3,steps:60},minute:{common:!0,size:6e4,steps:60},hour:{common:!0,size:36e5,steps:24},day:{common:!0,size:864e5,steps:30},week:{common:!1,size:6048e5,steps:4},month:{common:!0,size:2628e6,steps:12},quarter:{common:!1,size:7884e6,steps:4},year:{common:!0,size:3154e7}},u1=Object.keys(M4);function Ts(t,e){return t-e}function Ps(t,e){if(r0(e))return null;const n=t._adapter,{parser:i,round:o,isoWeekday:u}=t._parseOpts;let a=e;return typeof i=="function"&&(a=i(a)),A1(a)||(a=typeof i=="string"?n.parse(a,i):n.parse(a)),a===null?null:(o&&(a=o==="week"&&(h4(u)||u===!0)?n.startOf(a,"isoWeek",u):n.startOf(a,o)),+a)}function Os(t,e,n,i){const o=u1.length;for(let u=u1.indexOf(t);u<o-1;++u){const a=M4[u1[u]],c=a.steps?a.steps:Number.MAX_SAFE_INTEGER;if(a.common&&Math.ceil((n-e)/(c*a.size))<=i)return u1[u]}return u1[o-1]}function Bd(t,e,n,i,o){for(let u=u1.length-1;u>=u1.indexOf(n);u--){const a=u1[u];if(M4[a].common&&t._adapter.diff(o,i,a)>=e-1)return a}return u1[n?u1.indexOf(n):0]}function Nd(t){for(let e=u1.indexOf(t)+1,n=u1.length;e<n;++e)if(M4[u1[e]].common)return u1[e]}function zs(t,e,n){if(!n)t[e]=!0;else if(n.length){const{lo:i,hi:o}=bt(n,e),u=n[i]>=e?n[i]:n[o];t[u]=!0}}function Td(t,e,n,i){const o=t._adapter,u=+o.startOf(e[0].value,i),a=e[e.length-1].value;let c,h;for(c=u;c<=a;c=+o.add(c,1,i))h=n[c],h>=0&&(e[h].major=!0);return e}function Is(t,e,n){const i=[],o={},u=e.length;let a,c;for(a=0;a<u;++a)c=e[a],o[c]=a,i.push({value:c,major:!1});return u===0||!n?i:Td(t,i,o,n)}class m4 extends p3{constructor(e){super(e),this._cache={data:[],labels:[],all:[]},this._unit="day",this._majorUnit=void 0,this._offsets={},this._normalized=!1,this._parseOpts=void 0}init(e,n={}){const i=e.time||(e.time={}),o=this._adapter=new Xf._date(e.adapters.date);o.init(n),c6(i.displayFormats,o.formats()),this._parseOpts={parser:i.parser,round:i.round,isoWeekday:i.isoWeekday},super.init(e),this._normalized=n.normalized}parse(e,n){return e===void 0?null:Ps(this,e)}beforeLayout(){super.beforeLayout(),this._cache={data:[],labels:[],all:[]}}determineDataLimits(){const e=this.options,n=this._adapter,i=e.time.unit||"day";let{min:o,max:u,minDefined:a,maxDefined:c}=this.getUserBounds();function h(d){!a&&!isNaN(d.min)&&(o=Math.min(o,d.min)),!c&&!isNaN(d.max)&&(u=Math.max(u,d.max))}(!a||!c)&&(h(this._getLabelBounds()),(e.bounds!=="ticks"||e.ticks.source!=="labels")&&h(this.getMinMax(!1))),o=A1(o)&&!isNaN(o)?o:+n.startOf(Date.now(),i),u=A1(u)&&!isNaN(u)?u:+n.endOf(Date.now(),i)+1,this.min=Math.min(o,u-1),this.max=Math.max(o+1,u)}_getLabelBounds(){const e=this.getLabelTimestamps();let n=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY;return e.length&&(n=e[0],i=e[e.length-1]),{min:n,max:i}}buildTicks(){const e=this.options,n=e.time,i=e.ticks,o=i.source==="labels"?this.getLabelTimestamps():this._generate();e.bounds==="ticks"&&o.length&&(this.min=this._userMin||o[0],this.max=this._userMax||o[o.length-1]);const u=this.min,a=this.max,c=Lc(o,u,a);return this._unit=n.unit||(i.autoSkip?Os(n.minUnit,this.min,this.max,this._getLabelCapacity(u)):Bd(this,c.length,n.minUnit,this.min,this.max)),this._majorUnit=!i.major.enabled||this._unit==="year"?void 0:Nd(this._unit),this.initOffsets(o),e.reverse&&c.reverse(),Is(this,c,this._majorUnit)}afterAutoSkip(){this.options.offsetAfterAutoskip&&this.initOffsets(this.ticks.map(e=>+e.value))}initOffsets(e=[]){let n=0,i=0,o,u;this.options.offset&&e.length&&(o=this.getDecimalForValue(e[0]),e.length===1?n=1-o:n=(this.getDecimalForValue(e[1])-o)/2,u=this.getDecimalForValue(e[e.length-1]),e.length===1?i=u:i=(u-this.getDecimalForValue(e[e.length-2]))/2);const a=e.length<3?.5:.25;n=H1(n,0,a),i=H1(i,0,a),this._offsets={start:n,end:i,factor:1/(n+1+i)}}_generate(){const e=this._adapter,n=this.min,i=this.max,o=this.options,u=o.time,a=u.unit||Os(u.minUnit,n,i,this._getLabelCapacity(n)),c=K9(o.ticks.stepSize,1),h=a==="week"?u.isoWeekday:!1,d=h4(h)||h===!0,p={};let m=n,D,w;if(d&&(m=+e.startOf(m,"isoWeek",h)),m=+e.startOf(m,d?"day":a),e.diff(i,n,a)>1e5*c)throw new Error(n+" and "+i+" are too far apart with stepSize of "+c+" "+a);const E=o.ticks.source==="data"&&this.getDataTimestamps();for(D=m,w=0;D<i;D=+e.add(D,c,a),w++)zs(p,D,E);return(D===i||o.bounds==="ticks"||w===1)&&zs(p,D,E),Object.keys(p).sort(Ts).map(y=>+y)}getLabelForValue(e){const n=this._adapter,i=this.options.time;return i.tooltipFormat?n.format(e,i.tooltipFormat):n.format(e,i.displayFormats.datetime)}format(e,n){const o=this.options.time.displayFormats,u=this._unit,a=n||o[u];return this._adapter.format(e,a)}_tickFormatFunction(e,n,i,o){const u=this.options,a=u.ticks.callback;if(a)return n0(a,[e,n,i],this);const c=u.time.displayFormats,h=this._unit,d=this._majorUnit,p=h&&c[h],m=d&&c[d],D=i[n],w=d&&m&&D&&D.major;return this._adapter.format(e,o||(w?m:p))}generateTickLabels(e){let n,i,o;for(n=0,i=e.length;n<i;++n)o=e[n],o.label=this._tickFormatFunction(o.value,n,e)}getDecimalForValue(e){return e===null?NaN:(e-this.min)/(this.max-this.min)}getPixelForValue(e){const n=this._offsets,i=this.getDecimalForValue(e);return this.getPixelForDecimal((n.start+i)*n.factor)}getValueForPixel(e){const n=this._offsets,i=this.getDecimalForPixel(e)/n.factor-n.end;return this.min+i*(this.max-this.min)}_getLabelSize(e){const n=this.options.ticks,i=this.ctx.measureText(e).width,o=F2(this.isHorizontal()?n.maxRotation:n.minRotation),u=Math.cos(o),a=Math.sin(o),c=this._resolveTickFontOptions(0).size;return{w:i*u+c*a,h:i*a+c*u}}_getLabelCapacity(e){const n=this.options.time,i=n.displayFormats,o=i[n.unit]||i.millisecond,u=this._tickFormatFunction(e,0,Is(this,[e],this._majorUnit),o),a=this._getLabelSize(u),c=Math.floor(this.isHorizontal()?this.width/a.w:this.height/a.h)-1;return c>0?c:1}getDataTimestamps(){let e=this._cache.data||[],n,i;if(e.length)return e;const o=this.getMatchingVisibleMetas();if(this._normalized&&o.length)return this._cache.data=o[0].controller.getAllParsedValues(this);for(n=0,i=o.length;n<i;++n)e=e.concat(o[n].controller.getAllParsedValues(this));return this._cache.data=this.normalize(e)}getLabelTimestamps(){const e=this._cache.labels||[];let n,i;if(e.length)return e;const o=this.getLabels();for(n=0,i=o.length;n<i;++n)e.push(Ps(this,o[n]));return this._cache.labels=this._normalized?e:this.normalize(e)}normalize(e){return Po(e.sort(Ts))}}j9(m4,"id","time"),j9(m4,"defaults",{bounds:"data",adapters:{},time:{parser:!1,unit:!1,round:!1,isoWeekday:!1,minUnit:"millisecond",displayFormats:{}},ticks:{source:"auto",callback:!1,major:{enabled:!1}}});function J7(t,e,n){let i=0,o=t.length-1,u,a,c,h;n?(e>=t[i].pos&&e<=t[o].pos&&({lo:i,hi:o}=ot(t,"pos",e)),{pos:u,time:c}=t[i],{pos:a,time:h}=t[o]):(e>=t[i].time&&e<=t[o].time&&({lo:i,hi:o}=ot(t,"time",e)),{time:u,pos:c}=t[i],{time:a,pos:h}=t[o]);const d=a-u;return d?c+(h-c)*(e-u)/d:c}class Rs extends m4{constructor(e){super(e),this._table=[],this._minPos=void 0,this._tableRange=void 0}initOffsets(){const e=this._getTimestampsForTable(),n=this._table=this.buildLookupTable(e);this._minPos=J7(n,this.min),this._tableRange=J7(n,this.max)-this._minPos,super.initOffsets(e)}buildLookupTable(e){const{min:n,max:i}=this,o=[],u=[];let a,c,h,d,p;for(a=0,c=e.length;a<c;++a)d=e[a],d>=n&&d<=i&&o.push(d);if(o.length<2)return[{time:n,pos:0},{time:i,pos:1}];for(a=0,c=o.length;a<c;++a)p=o[a+1],h=o[a-1],d=o[a],Math.round((p+h)/2)!==d&&u.push({time:d,pos:a/(c-1)});return u}_generate(){const e=this.min,n=this.max;let i=super.getDataTimestamps();return(!i.includes(e)||!i.length)&&i.splice(0,0,e),(!i.includes(n)||i.length===1)&&i.push(n),i.sort((o,u)=>o-u)}_getTimestampsForTable(){let e=this._cache.all||[];if(e.length)return e;const n=this.getDataTimestamps(),i=this.getLabelTimestamps();return n.length&&i.length?e=this.normalize(n.concat(i)):e=n.length?n:i,e=this._cache.all=e,e}getDecimalForValue(e){return(J7(this._table,e)-this._minPos)/this._tableRange}getValueForPixel(e){const n=this._offsets,i=this.getDecimalForPixel(e)/n.factor-n.end;return J7(this._table,i*this._tableRange+this._minPos,!0)}}j9(Rs,"id","timeseries"),j9(Rs,"defaults",m4.defaults);const du="label";function Ls(t,e){typeof t=="function"?t(e):t&&(t.current=e)}function Pd(t,e){const n=t.options;n&&e&&Object.assign(n,e)}function pu(t,e){t.labels=e}function gu(t,e){let n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:du;const i=[];t.datasets=e.map(o=>{const u=t.datasets.find(a=>a[n]===o[n]);return!u||!o.data||i.includes(u)?{...o}:(i.push(u),Object.assign(u,o),u)})}function Od(t){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:du;const n={labels:[],datasets:[]};return pu(n,t.labels),gu(n,t.datasets,e),n}function zd(t,e){const{height:n=150,width:i=300,redraw:o=!1,datasetIdKey:u,type:a,data:c,options:h,plugins:d=[],fallbackContent:p,updateMode:m,...D}=t,w=Z0.useRef(null),E=Z0.useRef(null),y=()=>{w.current&&(E.current=new b4(w.current,{type:a,data:Od(c,u),options:h&&{...h},plugins:d}),Ls(e,E.current))},x=()=>{Ls(e,null),E.current&&(E.current.destroy(),E.current=null)};return Z0.useEffect(()=>{!o&&E.current&&h&&Pd(E.current,h)},[o,h]),Z0.useEffect(()=>{!o&&E.current&&pu(E.current.config.data,c.labels)},[o,c.labels]),Z0.useEffect(()=>{!o&&E.current&&c.datasets&&gu(E.current.config.data,c.datasets,u)},[o,c.datasets]),Z0.useEffect(()=>{E.current&&(o?(x(),setTimeout(y)):E.current.update(m))},[o,h,c.labels,c.datasets,m]),Z0.useEffect(()=>{E.current&&(x(),setTimeout(y))},[a]),Z0.useEffect(()=>(y(),()=>x()),[]),bo.createElement("canvas",{ref:w,role:"img",height:n,width:i,...D},p)}const Id=Z0.forwardRef(zd);function Rd(t,e){return b4.register(e),Z0.forwardRef((n,i)=>bo.createElement(Id,{...n,ref:i,type:t}))}const Ld=Rd("bar",i4);b4.register(ft,ht,u4,vd,Fd,gd);const jd=({data:t,xmin:e,xmax:n})=>{const i={labels:t.labels,datasets:[{label:"Frecuency",data:t.values,backgroundColor:"rgba(75, 192, 192, 0.2)",borderColor:"yellow",borderWidth:1,categoryPercentage:1}]},o={responsive:!0,scales:{x:{min:e,max:n,ticks:{color:"yellow"}},y:{beginAtZero:!0,title:{display:!0,text:"Frequency",color:"yellow"},ticks:{color:"yellow"}}},plugins:{title:{display:!1,text:"Histogram"},legend:{display:!1}}};return D9.jsx(Ld,{data:i,options:o})},Hd=({distributions:t,selectedDistribution:e,handleDistributionSelect:n,parameters:i,handleParamChange:o,resample:u})=>D9.jsxs("div",{className:"distributionSelector",children:[D9.jsx("div",{className:"selectorItem",children:D9.jsx("table",{children:D9.jsxs("tbody",{children:[D9.jsxs("tr",{children:[D9.jsx("td",{children:"Distribution"}),D9.jsx("td",{children:D9.jsx("select",{value:e,onChange:n,children:t.map(a=>D9.jsx("option",{value:a.name,children:a.name},a.name))})})]},"distribution"),Object.keys(i).map(a=>D9.jsxs("tr",{children:[D9.jsx("td",{children:a}),D9.jsx("td",{children:D9.jsx("input",{type:"number",value:i[a]??defaultValue,onChange:c=>o(a,c.target.value)})})]},a))]})})}),D9.jsx("div",{className:"selectorItem",children:D9.jsx("button",{id:"resampleButton",onClick:u,children:D9.jsx("b",{children:"Sample"})})})]});var j8,js;function g3(){if(js)return j8;js=1;let t=Math.random;function e(o){let u=BigInt(o);const a=6364136223846793005n,c=1442695040888963407n;return function(){u=u*a+c&0xFFFFFFFFFFFFFFFFn;const h=Number(u>>32n)/4294967295;return h>=0?h:h+1}}function n(o){const u=typeof o=="bigint"||typeof o=="number"?BigInt(o):hashSeed(o);t=e(u)}function i(){return t}return j8={seed:n,getRandomGenerator:i},j8}var H8,Hs;function m3(){if(Hs)return H8;Hs=1;function t(e,n){if(n===null)return e();if(typeof n=="number")return Array.from({length:n},()=>e());if(Array.isArray(n)){const i=o=>{const[u,...a]=o;return Array.from({length:u},()=>a.length>0?i(a):e())};return i(n)}else throw new Error("size must be a number, an array, or null")}return H8=t,H8}var $8,$s;function mu(){if($s)return $8;$s=1;const{getRandomGenerator:t}=g3(),e=m3();function n(i,o=null,u=null){if(o===null&&(o=i,i=0),i>=o)throw new Error("low must be less than high");return e(()=>Math.floor(t()()*(o-i)+i),u)}return $8=n,$8}var V8,Vs;function $d(){if(Vs)return V8;Vs=1;const{getRandomGenerator:t}=g3(),e=m3();function n(i=0,o=1,u=null){if(i>=o)throw new Error("low must be less than high");return e(()=>t()()*(o-i)+i,u)}return V8=n,V8}var W8,Ws;function Vd(){return Ws||(Ws=1,W8={X:[622096057427174e-30,630232463237987e-30,6384736738561162e-31,6468210178957527e-31,6552758405344601e-31,663839503716088e-30,6725133863560783e-31,6812988845492691e-31,6901974117801946e-31,6992103991358987e-31,7083392955213121e-31,7175855678772167e-31,726950701400833e-30,7364361997690278e-31,7460435853642744e-31,7557743995031796e-31,7656302026679585e-31,7756125747404577e-31,7857231152392053e-31,7959634435590867e-31,8063351992141211e-31,8168400420828962e-31,8274796526572087e-31,8382557322934205e-31,849170003467074e-30,8602242100303102e-31,8714201174726226e-31,8827595131844686e-31,894244206724291e-30,905876030088484e-30,9176568379848355e-31,9295885081089926e-31,9416729414244787e-31,953912062445788e-30,9663078195251577e-31,9788621851424571e-31,9915771561988532e-31,10044547543136464e-31,10174970261250164e-31,10307060435939614e-31,1044083904312255e-30,10576327318137562e-31,10713546758896157e-31,10852519129071793e-31,10993266461326927e-31,11135811060578712e-31,11280175507303345e-31,11426382660879915e-31,1157445566297407e-30,11724417940961863e-31,11876293211394562e-31,1203010548350442e-30,12185879062752297e-31,12343638554417474e-31,12503408867230134e-31,12665215217046937e-31,12829083130570544e-31,12995038449112991e-31,13163107332403988e-31,13333316262444326e-31,13505692047405337e-31,13680261825574024e-31,13857053069345783e-31,140360935892639e-29,1421741153810718e-30,14401035415026276e-31,14586994069728484e-31,1477531670671285e-30,1496603288955494e-30,15159172545242631e-31,15354765968563093e-31,15552843826542037e-31,15753437162935217e-31,15956577402772919e-31,1616229635695915e-30,16370626226924002e-31,16581599609331902e-31,16795249500845409e-31,17011609302944935e-31,172307128268064e-29,17452594298234446e-31,17677288362657469e-31,17904830090177105e-31,18135254980682285e-31,18368598969018577e-31,1860489843022393e-30,18844190184820554e-31,19086511504174898e-31,1933190011591521e-30,19580394209418674e-31,19832032441358236e-31,2008685394131789e-30,203448983174731e-29,2060620566233834e-30,2087081655858217e-30,21138772084910882e-31,21410113822021433e-31,2168488385862441e-30,2196312479753803e-30,2224487976185363e-30,2253019240117364e-30,2281910689792321e-30,231116679737356e-29,2340792089591339e-30,23707911483964357e-31,24011686116215586e-31,2431929173650418e-30,2463077586094694e-30,24946186584789864e-31,2526557258933702e-30,25588983148962105e-31,25916468138201102e-31,26248078038928595e-31,2658386394761855e-30,26923877582689307e-31,2726817129193579e-30,27616798060047883e-31,27969811516217285e-31,2832726594183377e-30,28689216278270517e-31,29055718134761953e-31,29426827796372764e-31,2980260223206055e-30,30183099102832767e-31,30568376769998983e-31,30958494303519914e-31,3135351149045364e-30,31753488843500757e-31,3215848760964932e-30,32568569778920757e-31,3298379809321827e-30,3340423605527786e-30,3382994793772442e-30,3426099879223322e-30,3469745445879841e-30,35139381575109506e-31,3558684758603772e-30,3603992075323197e-30,3649867016482758e-30,3696316574526758e-30,3743347826523878e-30,3790967935172457e-30,383918414981702e-29,3888003807477534e-30,39374343338894524e-31,3987483244557224e-30,4038158145818566e-30,4089466735922685e-30,4141416806119487e-30,4194016241762926e-30,4247273023425719e-30,4301195228028547e-30,4355791029980784e-30,4411068702335943e-30,4467036617959417e-30,4523703250710466e-30,45810771766375376e-31,463916707518773e-29,46979817304300234e-31,4757530032292938e-30,4817820977816426e-30,48788636724181875e-31,4940667331174895e-30,5003241280118e-27,50665949575447896e-31,5130737915344422e-30,5195679820339508e-30,5261430455642994e-30,53279997220309885e-31,5395397639331309e-30,5463634347828129e-30,5532720109682902e-30,5602665310371667e-30,5673480460139036e-30,5745176195468891e-30,5817763280572145e-30,589125260889164e-29,5965655204624441e-30,6040982224261762e-30,6117244958146554e-30,6194454832049133e-30,62726234087609834e-31,6351762389706915e-30,64318836165759035e-31,65129990729705134e-31,6595120886075625e-30,66782613283461235e-31,6762432819214263e-30,6847647926816407e-30,6933919369740014e-30,7021260018790318e-30,7109682898777697e-30,7199201190325679e-30,7289828231698849e-30,738157752065344e-29,7474462716307113e-30,7568497641032562e-30,7663696282370348e-30,7760072794966314e-30,785764150252871e-29,7956416899810287e-30,8056413654610611e-30,8157646609803855e-30,8260130785387577e-30,8363881380557116e-30,8468913775801577e-30,8575243535026331e-30,8682886407697078e-30,8791858331011417e-30,8902175432092283e-30,9013854030209647e-30,9126910639024427e-30,9241361968861176e-30,9357224929004044e-30,9474516630021532e-30,9593254386115301e-30,9713455717498508e-30,9835138352798544e-30,9958320231490157e-30,10083019506353707e-30,10209254545963416e-30,10337043937202962e-30,1046640648781046e-29,10597361228952056e-30,10729927417825103e-30,10864124540291155e-30,10999972313538602e-30,11137490688776213e-30,11276699853956987e-30,11417620236533234e-30,11560272506242992e-30,11704677577928362e-30,11850856614385764e-30,11998831029248577e-30,12148622489902992e-30,12300252920436821e-30,12453744504621603e-30,12609119688929245e-30,12766401185582477e-30,12925611975640207e-30,13086775312117827e-30,13249914723143729e-30,13415054015149736e-30,13582217276100877e-30,13751428878758158e-30,1392271348398241e-29,14096096044071427e-30,1427160180613921e-29,14449256315529338e-30,1462908541927153e-29,14811115269572578e-30,1499537232735192e-29,1518188336581235e-29,1537067547405587e-29,15561776060735964e-30,1575521285775606e-29,15951013924004606e-30,16149207649137982e-30,1634982275740078e-29,16552888311494685e-30,16758433716485613e-30,16966488723760756e-30,17177083435024576e-30,17390248306345977e-30,1760601415224509e-29,17824412149832054e-30,18045473842987445e-30,18269231146594278e-30,18495716350814502e-30,1872496212541568e-29,1895700152414556e-29,19191867989156684e-30,19429595355480593e-30,19670217855552186e-30,199137701237856e-28,20160287201201556e-30,2040980454010668e-29,2066235800882558e-29,2091798389648658e-29,2117671891786058e-29,21438600218255407e-30,21703665378464417e-30,21971952419771175e-30,22243499809010422e-30,22518346463685763e-30,2279653175714535e-29,2307809552381522e-29,23363078064491716e-30,23651520151693424e-30,23943463035073025e-30,24238948446890333e-30,24538018607546334e-30,24840716231179458e-30,25147084531324874e-30,25457167226636975e-30,25771008546676595e-30,26088653237762123e-30,2641014656888742e-29,2673553433770519e-29,27064862876577362e-30,27398179058695286e-30,27735530304263765e-30,28076964586759928e-30,2842253043925833e-29,2877227696082959e-29,29126253823006274e-30,29484511276326956e-30,2984710015694828e-29,30214071893335666e-30,3058547851302225e-29,30961372649452365e-30,3134180754889155e-29,3172683707742324e-29,3211651572801485e-29,3251089862767081e-29,32910041544657615e-30,3331400089581773e-29,33722833753955964e-30,3413659785531798e-29,3455535160714336e-29,34979154095308553e-30,3540806509205275e-29,3584214506379068e-29,3628145517901122e-29,3672605731626546e-29,3717601407224305e-29,37631388769937725e-30,38092245466904655e-30,3855864896360975e-29,3903066481187093e-29,3950835932339388e-29,3999179957840246e-29,404810534343656e-28,4097618953481976e-29,41477277318291215e-30,41984387027315975e-30,4249758971756035e-29,4301695726704339e-29,4354256238545987e-29,4407447862360909e-29,4461278038292625e-29,45157542925120554e-30,4570884238191963e-29,4626675576492269e-29,4683136097556207e-29,4740273681517468e-29,4798096299518736e-29,4856612014741174e-29,49158289834455154e-30,4975755456024683e-29,503639977806791e-28,509777039143676e-28,5159875835352986e-29,52227247474984005e-30,5286325865127003e-29,5350688026189258e-29,5415820170468801e-29,54817313407319094e-30,55484306838893444e-30,56159274521712247e-30,5684231004314865e-29,5753350806765616e-29,5823296434890996e-29,5894077574208219e-29,5965704021625315e-29,603818568669572e-28,6111532592886978e-29,618575487886312e-28,6260862799781639e-29,6336866728603775e-29,6413777157420662e-29,6491604698792659e-29,6570360087104365e-29,665005417993379e-28,6730697959437675e-29,6812302533750746e-29,6894879138401159e-29,697843913774117e-28,7062994026393997e-29,7148555430715835e-29,723513511027446e-28,7322744959343646e-29,7411397008414807e-29,7501103425724036e-29,7591876518796954e-29,7683728736009416e-29,7776672668166962e-29,7870721050099549e-29,7965886762275421e-29,8062182832431504e-29,8159622437222867e-29,8258218903888749e-29,8357985711938104e-29,8458936494852895e-29,8561085041810249e-29,8664445299423364e-29,8769031373501627e-29,8874857530829595e-29,8981938200965909e-29,9090287978061455e-29,9199921622697539e-29,9310854063744249e-29,9423100400238794e-29,9536675903284708e-29,9651596017971497e-29,9767876365315356e-29,9885532744220995e-29,10004581133464993e-29,10125037693700428e-29,10246918769483812e-29,10370240891323724e-29,10495020777752033e-29,10621275337417331e-29,107490216712016e-27,10878277074359533e-29,11009059038681311e-29,11141385254678888e-29,1127527361379595e-28,1141074221064205e-28,1154780934525127e-28,11686493525364049e-29,11826813468736485e-29,11968788105471326e-29,1211243658037773e-28,12257778255353206e-29,1240483271179503e-28,12553619753033852e-29,12704159406797915e-29,12856471927699782e-29,13010577799754022e-29,1316649773891834e-28,13324252695666188e-29,13483863857582993e-29,1364535265199492e-28,13808740748621747e-29,13974050062262752e-29,141413027555072e-27,14310521241478823e-29,14481728186605125e-29,14654946513421725e-29,14830199403401797e-29,15007510299821024e-29,15186902910649148e-29,15368401211476585e-29,1555202944846898e-28,15737812141357358e-29,15925774086457277e-29,16115940359722527e-29,16308336319831302e-29,16502987611305245e-29,16699920167662582e-29,16899160214605198e-29,171007342732398e-27,17304669163333878e-29,1751099200660706e-28,1771973023005718e-28,17930911569323017e-29,18144564072082543e-29,18360716101488076e-29,18579396339638232e-29,18800633791087244e-29,19024457786392175e-29,19250897985697993e-29,19479984382361206e-29,19711747306612605e-29,19946217429259105e-29,20183425765425652e-29,20423403678336908e-29,20666182883139684e-29,20911795450766281e-29,2116027381184029e-28,2141165076062124e-28,21665959458996506e-29,21923233440509927e-29,22183506614440194e-29,22446813269916061e-29,22713188080082312e-29,22982666106303933e-29,232552828024215e-27,2353107401904611e-28,23810076007905823e-29,24092325426233235e-29,2437785934120561e-28,24666715234426067e-29,2495893100645985e-28,2525454498141155e-28,2555359591155821e-28,2585612298202546e-28,26162165815520435e-29,26471764477107163e-29,2678495947904171e-28,27101791785649903e-29,27422302818266005e-29,2774653446021525e-28,28074529061858223e-29,2840632944567986e-28,2874197891144196e-28,29081521241382406e-29,29425000705475236e-29,2977246206674401e-28,3012395058663269e-28,30479512030433264e-29,3083919267277128e-28,31203039303149565e-29,31571099231551275e-29,31943420294101723e-29,32320050858791015e-29,3270103983125698e-28,3308643666063034e-28,3347629134544037e-28,33870654439585095e-29,3426957705836334e-28,34673110884571433e-29,3508130817466479e-28,3549422176498366e-28,35911905078046545e-29,3633441212890882e-28,36761797531589297e-29,3719411650556535e-28,37631424882335357e-29,3807377911205232e-28,3852123627022641e-28,38973854064499004e-29,39431690841488086e-29,39894805593705595e-29,4036325796655106e-28,40837108265371603e-29,41316417462605965e-29,41801247204996765e-29,4229165982088412e-28,42787718327569457e-29,4328948643876548e-28,43797028572118007e-29,44310409856811663e-29,4482969614125025e-28,4535495400082557e-28,4588625074576073e-28,4642365442904347e-28,4696723385443298e-28,4751705858456312e-28,4807319894912081e-28,4863572605311775e-28,4920471178524166e-28,4978022882630504e-28,5036235065777136e-28,5095115157038332e-28,5154670667286977e-28,5214909190075309e-28,5275838402524441e-28,5337466066223378e-28,5399800028137431e-28,5462848221526231e-28,5526618666871293e-28,559111947281326e-27,5656358837099244e-28,5722345047539741e-28,5789086482975794e-28,5856591614256305e-28,5924869005225452e-28,5993927313720541e-28,6063775292580278e-28,6134421790663581e-28,6205875753879129e-28,6278146226225564e-28,6351242350842639e-28,6425173371073373e-28,6499948631537216e-28,6575577579214638e-28,6652069764542709e-28,6729434842522488e-28,6807682573837715e-28,6886822825985279e-28,6966865574417526e-28,7047820903696403e-28,7129699008659583e-28,7212510195598972e-28,7296264883451352e-28,7380973605001308e-28,746664700809702e-27,7553295856878322e-28,7640931033017926e-28,7729563536975274e-28,7819204489263677e-28,7909865131730339e-28,8001556828850058e-28,8094291069032092e-28,8188079465940744e-28,8282933759829603e-28,8378865818889816e-28,8475887640612037e-28,8574011353162914e-28,8673249216775568e-28,8773613625154582e-28,8875117106895751e-28,8977772326920163e-28,9081592087923608e-28,9186589331840598e-28,9292777141324265e-28,9400168741239984e-28,9508777500176986e-28,9618616931973158e-28,972970069725719e-27,9842042605005742e-28,9955656614117854e-28,1007055683500435e-27,10186757531194494e-28,10304273120958834e-28,10423118178949625e-28,10543307437856882e-28,10664855790082837e-28,10787778289432414e-28,10912090152822902e-28,11037806762009307e-28,1116494366532895e-27,11293516579463002e-28,11423541391217694e-28,11555034159322012e-28,11688011116245245e-28,11822488670032834e-28,1195848340616113e-27,12096012089411234e-28,12235091665762372e-28,1237573926430436e-27,12517972199170087e-28,12661807971487686e-28,12807264271352857e-28,12954358979821567e-28,13103110170923015e-28,13253536113693443e-28,13405655274230782e-28,135594863177704e-26,13715048110782342e-28,13872359723089627e-28,14031440430008934e-28,14192309714512618e-28,14354987269413523e-28,1451949299957146e-27,14685847024123138e-28,14854069678734063e-28,15024181517874512e-28,15196203317117818e-28,1537015607546277e-27,1554606101767989e-27,15723939596681076e-28,15903813495914258e-28,16085704631782075e-28,16269635156085683e-28,1645562745849213e-27,16643704169030242e-28,16833888160607147e-28,1702620255155585e-27,17220670708203843e-28,17417316247472511e-28,17616163039498375e-28,17817235210286316e-28,18020557144384017e-28,18226153487589826e-28,18434049149682238e-28,1864426930718277e-27,18856839406141617e-28,19071785164957257e-28,19289132577218756e-28,1950890791458332e-27,19731137729676867e-28,19955848859030017e-28,2018306842603855e-27,20412823843958732e-28,20645142818929236e-28,20880053353026596e-28,2111758374734911e-27,21357762605135495e-28,21600618834911345e-28,21846181653670752e-28,22094480590087042e-28,2234554548776051e-27,2259940650849423e-27,22856094135606342e-28,23115639177274565e-28,23378072769915405e-28,2364342638159644e-27,23911731815484497e-28,241830212133278e-26,2445732705897368e-27,24734682181921886e-28,2501511976091415e-27,25298673327559092e-28,2558537676999515e-27,25875264336589347e-28,2616837063967403e-27,26464730659321487e-28,26764379747155927e-28,27067353630204965e-28,27373688414789235e-28,27683420590451552e-28,27996587033925535e-28,2831322501314475e-27,28633372191291666e-28,2895706663088726e-27,29284346797923102e-28,29615251566034222e-28,2994982022071223e-27,30288092463565055e-28,3063010841661542e-27,30975908626645803e-28,31325534069582934e-28,31679026154932925e-28,320364267302526e-26,32397778085674853e-28,3276312295847061e-27,33132504537664854e-28,33505966468691112e-28,33883552858100943e-28,3426530827831156e-27,34651277772411264e-28,3504150685900187e-27,35436041537101546e-28,3583492829108515e-27,36238214095684984e-28,36645946421031205e-28,3705817323775346e-27,3747494302212263e-27,3789630476125421e-27,3832230795835512e-27,387530026380306e-26,3918843935163769e-27,3962866918269641e-27,400737437523534e-26,4052371522490106e-27,4097863631335016e-27,4143856028506042e-27,4190354096742521e-27,4237363275361478e-27,4284889060837479e-27,4332937007388498e-27,4381512727567447e-27,4430621892859689e-27,44802702342864865e-28,4530463543014451e-27,45812076709711525e-28,4632508531466663e-27,4684372099821513e-27,473680441400081e-26,478981157525456e-26,484339974876452e-26,4897575164297437e-27,4952344116864737e-27,500771296738879e-26,5063688143375812e-27,5120276139595494e-27,51774835187671705e-28,52353169122533566e-28,5293783020759139e-27,5352888615039706e-27,5412640536614071e-27,547304569848635e-26,55341110858735145e-28,5595843756941341e-27,5658250843546785e-27,57213395519884025e-28,5785117163763294e-27,5849591036332664e-27,5914768603894059e-27,59806573781618605e-28,604726494915477e-26,6114598985992041e-27,6182667237696669e-27,6251477534007333e-27,6321037786197414e-27,63913559879030935e-28,6462440215958956e-27,6534298631242298e-27,66069394795249835e-28,6680371092334864e-27,6754601887824663e-27,6829640371650217e-27,6905495137856578e-27,69821748697733825e-28,7059688340919289e-27,7138044415914474e-27,7217252051402825e-27,7297320296983032e-27,7378258296148635e-27,7460075287237614e-27,7542780604391117e-27,7626383678521646e-27,7710894038290902e-27,7796321311096944e-27,7882675224071409e-27,7969965605086216e-27,8058202383770321e-27,8147395592536378e-27,8237555367617556e-27,8328691950114424e-27,8420815687052141e-27,8513937032448046e-27,860806654838963e-26,8703214906123131e-27,8799392887152862e-27,889661138435109e-26,8994881403078982e-27,9094214062318405e-27,919462059581482e-26,9296112353231463e-27,9398700801314625e-27,9502397525070435e-27,9607214228953107e-27,9713162738064798e-27,9820254999367299e-27,9928503082905224e-27,1003791918304159e-26,10148515619705038e-27,10260304839649588e-27,10373299417726238e-27,10487512058167474e-27,10602955595883857e-27,10719642997773482e-27,10837587364043997e-27,10956801929548194e-27,11077300065130924e-27,11199095278991338e-27,11322201218056587e-27,11446631669370136e-27,11572400561492115e-27,11699521965914874e-27,11828010098491823e-27,11957879320878887e-27,120891441419921e-25,1222181921947701e-26,1235591936119506e-26,12491459526721649e-27,12628454828860657e-27,1276692053517216e-26,12906872069517166e-27,13048325013614472e-27,13191295108615023e-27,1333579825668953e-26,13481850522633987e-27,1362946813548773e-26,13778667490169488e-27,1392946514912767e-26,1408187784400855e-26,1423592247733816e-26,14391616124222355e-27,14548976034061911e-27,14708019632286056e-27,1486876452210044e-26,15031228486253587e-27,15195429488819463e-27,15361385676998832e-27,15529115382935403e-27,15698637125552e-24,15869969612402262e-27,16043131741542734e-27,16218142603420386e-27,1639502148277975e-26,16573787860588188e-27,16754461415979728e-27,1693706202821733e-26,1712160977867424e-26,17308124952834316e-27,17496628042311852e-27,17687139746890118e-27,1787968097658043e-26,18074272853700213e-27,1827093671497131e-26,18469694113638767e-27,1867056682160906e-26,18873576831609888e-27,19078746359369936e-27,19286097845819746e-27,19495653959314e-24,19707437597874297e-27,19921471891454472e-27,20137780204226705e-27,20356386136889812e-27,2057731352900036e-26,20800586461323957e-27,2102622925821261e-26,2125426649e-20,21484722975425232e-27,21717623784073974e-27,2195299423884865e-26,22190859918456392e-27,22431246659926614e-27,22674180561146965e-27,22919687983428814e-27,23167795554091928e-27,2341853016907933e-26,23671918995591338e-27,23927989474750368e-27,2418676932428556e-26,24448286541248573e-27,24712569404749508e-27,24979646478724866e-27,25249546614725624e-27,25522298954737784e-27,2579793293402479e-26,260764782840006e-25,2635796503512676e-26,26642423519841314e-27,2692988437551081e-26,2722037854741344e-26,27513937291749774e-27,27810592178681237e-27,2811037509539874e-26,2841331824921926e-26,28719454170712433e-27,29028815716856536e-27,2934143607422427e-26,2965734876219928e-26,29976587636222314e-27,3029918689106866e-26,3062518106415631e-26,3095460503888602e-26,312874940480117e-25,31623883677044264e-27,31963809867686355e-27,3230730892130018e-26,326544175024078e-25,33005172642224904e-27,3335961174222749e-26,33717772577751835e-27,3407969330163017e-26,344454124478578e-25,3481496893529882e-26,35188402071420815e-27,3556575155607175e-26,3594705748528685e-26,36332360355135247e-27,36721701065598185e-27,3711512092448973e-26,3751266165140911e-26,37914365381734205e-27,38320274670647635e-27,3873043249720778e-26,39144882268449965e-27,39563667823534576e-27,3998683343792456e-26,40414423827613506e-27,4084648415338112e-26,4128306002510008e-26,4172419750607355e-26,42169943117422166e-27,4262034384250301e-26,4307544713137974e-26,4353530090532446e-26,4399995356137252e-26,4446945397690803e-26,44943851514305487e-27,4542319602560105e-26,4590753785722053e-26,4639692785473988e-26,46891417367701004e-27,4739105825446344e-26,47895902887106614e-27,4840600415637704e-26,4892141547667987e-26,4944219079111954e-26,4996838457658549e-26,50500051848886294e-27,5103724816793128e-26,51580029642960597e-27,5212845293782434e-26,5268257527631001e-26,53242454447520424e-27,538081488113011e-25,54379717303718434e-27,5495721944258945e-26,5554071533306097e-26,56130265673243576e-27,5672593175989528e-26,573277754941595e-25,5793585938735629e-26,585502465668267e-25,5917100078183047e-26,5979818640950386e-26,604318684608623e-25,6107211258686998e-26,6171898508455872e-26,6237255290320775e-26,6303288365057341e-26,6370004559918727e-26,6437410769270426e-26,6505513955231472e-26,6574321148320794e-26,6643839448110733e-26,6714076023885541e-26,6785038115306808e-26,6856733033083979e-26,6929168159652305e-26,7002350949856154e-26,7076288931639315e-26,7150989706740536e-26,7226460951397101e-26,7302710417053435e-26,7379745931077362e-26,7457575397481824e-26,7536206797654412e-26,7615648191092878e-26,7695907716147764e-26,7776993590771387e-26,785891411327444e-25,7941677663089167e-26,802529270153927e-25,8109767772617596e-26,8195111503770014e-26,8281332606687876e-26,8368439878106189e-26,8456442200610323e-26,8545348543449412e-26,8635167963357713e-26,8725909605383039e-26,8817582703723241e-26,8910196582569993e-26,9003760656960603e-26,9098284433637296e-26,9193777511914758e-26,929024958455534e-25,9387710438652366e-26,9486169956521507e-26,9585638116600464e-26,9686124994356502e-26,9787640763202799e-26,9890195695422702e-26,9993800163102673e-26,10098464639073853e-26,10204199697861783e-26,10311016016645413e-26,10418924376224354e-26,10527935661995155e-26,10638060864936643e-26,10749311082603784e-26,10861697520131188e-26,10975231491245303e-26,11089924419286043e-26,11205787838237614e-26,1132283339376895e-25,11441072844283167e-26,11560518061977113e-26,11681181033910143e-26,11803073863082733e-26,11926208769525084e-26,12050598091395182e-26,1217625428608735e-25,12303189931350492e-26,1243141772641647e-25,12560950493139533e-26,12691801177144152e-26,12823982848985775e-26,129575087053201e-24,1309239207008429e-25,13228646395687382e-26,1336628526421316e-25,13505322388633224e-26,13645771614030305e-26,1378764691883387e-25,13930962416065667e-26,14075732354598403e-26,14221971120423254e-26,1436969323793115e-25,14518913371203756e-26,1466964632531815e-25,14821907047661258e-26,14975710629257262e-26,15131072306106565e-26,152880074605378e-24,1544653162257028e-25,15606660471290317e-26,1576840983623861e-25,1593179569881215e-25,16096834193676088e-26,16263541610190458e-26,16431934393848135e-26,16602029147727988e-26,16773842633958033e-26,16947391775194457e-26,17122693656111913e-26,17299765524909329e-26,17478624794826839e-26,1765928904567821e-25,17841776025396186e-26,1802610365159154e-25,18212290013127044e-26,18400353371704327e-26,18590312163465764e-26,18782185000610645e-26,18975990673025517e-26,1917174814992932e-25,19369476581533209e-26,19569195300715204e-26,19770923824710038e-26,19974681856813744e-26,20180489288103712e-26,203883661991741e-24,2059833286188661e-25,20810409741137387e-26,21024617496638735e-26,2124097698471784e-25,21459509260130703e-26,21680235577892898e-26,21903177395125794e-26,22128356372920182e-26,22355794378216548e-26,22585513485699963e-26,22817535979715949e-26,2305188435619827e-25,2328858132461943e-25,23527649809952856e-26,2376911295465803e-25,24012994120677914e-26,242593168914594e-24,2450810507398668e-25,24759382700837674e-26,25013174032252976e-26,2526950355823004e-25,2552839600062854e-25,25789876315301306e-26,26053969694238153e-26,26320701567734347e-26,26590097606572366e-26,26862183724229045e-26,27136986079097007e-26,274145310767295e-24,2769484537210222e-25,2797795587189851e-25,2826388973681097e-25,2855267438386641e-25,2884433748876878e-25,2913890698826675e-25,2943641108253714e-25,2973687823759304e-25,30040337187712224e-26,30346816937886124e-26,30656346766291846e-26,3096895622678475e-25,3128467515141367e-25,31603533652958106e-26,319255621274876e-24,32250791256944224e-26,32579252011747e-23,3291097565341976e-25,33245993737242046e-26,33584338114923063e-26,3392604093729988e-25,3427113465705789e-25,34619652031477e-23,34971626125200377e-26,3532709031302872e-25,3568607828273767e-25,36048624037921673e-26,3641476190086071e-25,36784526515414813e-26,37157952849940674e-26,37535076200237656e-26,3791593219251501e-25,3830055678638948e-25,38688986277906355e-26,3908125730258951e-25,3947740683851253e-25,39877472209406e-23,4028149108778079e-25,40689501498090064e-26,4110154181990786e-25,4151765079114622e-25,4193786751128919e-25,4236223144466685e-25,4279078242374567e-25,432235606524604e-24,4366060670956182e-25,4410196155200584e-25,44547666518361825e-26,44997763332260075e-26,4545229410585857e-25,4591130134335287e-25,4637482794450232e-25,4684291720820092e-25,4731561283606579e-25,4779295893606996e-25,4827500002619399e-25,487617810381215e-24,4925334732095582e-25,4974974464497697e-25,5025101920542651e-25,507572176263278e-24,5126838696433849e-25,5178457471263523e-25,5230582880483475e-25,5283219761894565e-25,5336372998135718e-25,5390047517086168e-25,5444248292271025e-25,5498980343270568e-25,5554248736133013e-25,5610058583790768e-25,5666415046480378e-25,5723323332166016e-25,5780788696966756e-25,5838816445587411e-25,5897411931753061e-25,5956580558647511e-25,6016327779355415e-25,6076659097308099e-25,6137580066733489e-25,6199096293109568e-25,626121343362231e-24,632393719762661e-24,6387273347112334e-25,6451227697173351e-25,6515806116481489e-25,6581014527763555e-25,6646858908283517e-25,671334529032801e-24,6780479761696737e-25,6848268466195998e-25,6916717604137797e-25,6985833432842151e-25,7055622267144536e-25,7126090479906581e-25,7197244502532545e-25,7269090825488987e-25,7341635998829865e-25,7414886632725035e-25,7488849397994544e-25,7563531026646345e-25,7638938312419629e-25,7715078111331628e-25,7791957342230332e-25,7869582987350982e-25,7947962092878133e-25,8027101769511289e-25,8107009193036855e-25,8187691604904061e-25,8269156312805816e-25,8351410691264751e-25,8434462182224329e-25,8518318295644646e-25,8602986610103706e-25,8688474773403473e-25,8774790503181394e-25,8861941587526724e-25,8949935885602556e-25,9038781328272805e-25,912848591873462e-24,9219057733156174e-25,931050492131999e-24,940283570727139e-24,9496058389972893e-25,959018134396381e-24,9685213020025553e-25,978116194585275e-24,9878036726729629e-25,9975846046212662e-25,10074598666818564e-25,10174303430718286e-25,10274969260436933e-25,10376605159559681e-25,10479220213443002e-25,10582823589933048e-25,10687424540089066e-25,10793032398913767e-25,10899656586088801e-25,11007306606717598e-25,1111599205207376e-24,11225722600356287e-25,11336508017450036e-25,11448358157694389e-25,1156128296465662e-24,11675292471913384e-25,11790396803836953e-25,11906606176389939e-25,1202393089792551e-24,12142381369994953e-25,1226196808816112e-24,12382701642820115e-25,12504592720028622e-25,1262765210233917e-24,12751890669641229e-25,12877319400010634e-25,13003949370565367e-25,13131791758328976e-25,13260857841100542e-25,13391158998332443e-25,13522706712015957e-25,1365551256757308e-24,13789588254756915e-25,13924945568558477e-25,14061596410123008e-25,14199552787671357e-25,14338826817431363e-25,1447943072457524e-24,14621376844166772e-25,14764677622114114e-25,14909345616132636e-25,15055393496713797e-25,15202834048104702e-25,15351680169292988e-25,15501944875001919e-25,1565364129669263e-24,15806782683576026e-25,1596138240363142e-24,16117453944635089e-25,16275010915196053e-25,16434067045802672e-25,16594636189874933e-25,16756732324828167e-25,16920369553143572e-25,17085562103449852e-25,1725232433161124e-24,17420670721826742e-25,17590615887737107e-25,17762174573541898e-25,1793536165512521e-24,18110192141190952e-25,18286681174407772e-25,18464844032562777e-25,1864469612972576e-24,18826253017422242e-25,19009530385816595e-25,1919454406490511e-24,1938131002571834e-24,19569844381534172e-25,1976016338910029e-24,1995228344986699e-24,2014622111123013e-24,20341993067784635e-25,2053961616258754e-24,2073910738843254e-24,20940483889134163e-25,21143762960822898e-25,2134896205325106e-24,21556098771109473e-25,2176519087535451e-24,21976256284545935e-25,22189313076197644e-25,22404379488136807e-25,2262147391987576e-24,22840614933994566e-25,23061821257536466e-25,2328511178341199e-24,23510505571817143e-25,23738021851661487e-25,23967680022009865e-25,24199499653533644e-25,2443350048997569e-24,2466970244962564e-24,2490812562681032e-24,2514879029339203e-24,2539171690028299e-24,2563692607896918e-24,25884438643049887e-25,2613427558978646e-24,26386458101665817e-25,26641007547975633e-25,2689794548639449e-24,2715729366459163e-24,27419074021842694e-25,27683308690656636e-25,27950019998418313e-25,28219230469041465e-25,284909628246374e-23,2876523998719634e-24,2904208508028301e-24,29321521430745026e-25,29603572570436603e-25,29888262237955034e-25,30175614380391848e-25,3046565315509858e-24,30758402931465713e-25,3105388829271753e-24,3135213403772041e-24,3165316518280639e-24,3195700696361114e-24,32263684836927648e-25,32573224482573398e-25,32885651805274612e-25,3320099293656418e-24,33519274236695644e-25,33840522296573027e-25,34164763939695083e-25,3449202622411684e-24,34822336444425744e-25,35155722133734016e-25,35492211065689103e-25,35831831256495185e-25,36174610966957873e-25,3652057870454001e-24,36869763225437563e-25,37222193536668087e-25,3757789889818187e-24,37936908824984214e-25,3829925308928025e-24,3866496172263082e-24,3903406501813209e-24,3940659353260857e-24,3978257808882574e-24,4016204977771789e-24,40545039960638044e-25,4093158027162175e-24,4132170261967349e-24,4171543919106474e-24,4211282245165876e-24,4251388514924748e-24,4291866031591157e-24,43327181270394185e-25,4373948162050035e-24,4415559526551097e-24,4457555639861711e-24,4499939950937307e-24,4542715938617315e-24,4585887111874246e-24,46294570100650945e-25,467342920318476e-23,4717807292121384e-24,4762594908913739e-24,48077957170108e-22,48534134115331526e-25,4899451719536763e-24,4945914400278616e-24,4992805245484627e-24,50401280796195835e-25,5087886760159368e-24,5136085177865146e-24,5184727257059979e-24,5233816955907444e-24,5283358266692551e-24,53333552161049505e-25,5383811865524214e-24,5434732311307602e-24,548612068507997e-23,5537981154025996e-24,559031792118483e-23,56431352257468714e-25,5696437343353127e-24,5750228586396966e-24,5804513304327762e-24,585929588395771e-23,5914580749770535e-24,5970372364232888e-24,602667522810785e-23,60834938807715126e-25,6140832900531498e-24,619869690494855e-23,6257090551159763e-24,6316018536205547e-24,6375485597358224e-24,6435496512453817e-24,649605610022587e-23,6557169220642509e-24,6618840775245792e-24,6681075707494017e-24,6743879003106079e-24,6807255690409452e-24,6871210840690289e-24,6935749568546531e-24,7000877032243415e-24,7066598434072452e-24,7132919020712545e-24,7199844083594595e-24,7267378959268191e-24,7335529029771718e-24,7404299723005647e-24,7473696513107799e-24,7543724920832581e-24,7614390513932177e-24,768569890754204e-23,7757655764567993e-24,7830266796077215e-24,7903537761692152e-24,7977474469987353e-24,8052082778889654e-24,8127368596080971e-24,8203337879404959e-24,8279996637276316e-24,8357350929093586e-24,8435406865654766e-24,8514170609576739e-24,859364837571751e-23,8673846431602086e-24,875477109785124e-23,8836428748613917e-24,8918825812003245e-24,9001968770535279e-24,9085864161571726e-24,9170518577765812e-24,925593866751195e-23,9342131135398325e-24,9429102742663603e-24,9516860307656817e-24,9605410706301067e-24,9694760872560515e-24,9784917798911113e-24,9875888536815367e-24,9967680197200105e-24,10060299950938556e-24,10153755029335551e-24,10248052724617294e-24,10343200390424105e-24,1043920544230747e-23,10536075358230618e-24,10633817679073438e-24,10732440009140856e-24,10831950016675152e-24,1093235543437236e-23,11033664059902981e-24,11135883756436171e-24,11239022453167995e-24,11343088145854123e-24,11448088897346581e-24,115540328381344e-22,11660928166888362e-24,11768783151010175e-24,1187760612718607e-23,11987405501944227e-24,12098189752216411e-24,12209967425904323e-24,1232274714245045e-23,12436537593412586e-24,12551347543043171e-24,12667185828873254e-24,12784061362300713e-24,12901983129183001e-24,13020960190434257e-24,13141001682627442e-24,13262116818600702e-24,13384314888068602e-24,1350760525823764e-23,1363199737442706e-23,13757500760694086e-24,13884125020463691e-24,14011879837163752e-24,1414077497486433e-23,1427082027892286e-23,14402025676633055e-24,1453440117787962e-23,14667956875797508e-24,14802702947436735e-24,1493864965443144e-23,1507580734367485e-23,15214186447998604e-24,1535379748685826e-23,15494651067023092e-24,15636757883271176e-24,15780128719090418e-24,159247744473846e-22,1607070603118455e-23,16217934524364685e-24,163664710723653e-22,16516326912920575e-24,16667513376791414e-24,16820041888503913e-24,16973923967093964e-24,1712917122685742e-23,17285795378105414e-24,17443808227925577e-24,17603221680949185e-24,17764047740124526e-24,1792629850749519e-23,1808998618498436e-23,1825512307518615e-23,18421721582161693e-24,1858979421224132e-23,1875935357483348e-23,1893041238323958e-23,19102983455474597e-24,1927707971509369e-23,19452714192025642e-24,19629900023412718e-24,19808650454456082e-24,19988978839267572e-24,20170898641728936e-24,20354423436356346e-24,20539566909172367e-24,2072634285858322e-23,20914765196264066e-24,2110484794804999e-23,21296605254834235e-24,214900513734721e-22,21685200677693203e-24,2188206765901949e-23,22080666927690174e-24,2228101321359403e-23,22483121367207952e-24,22687006360543967e-24,2289268328810133e-23,2310016736782738e-23,23309473942084462e-24,23520618478625287e-24,23733616571574087e-24,23948483942416337e-24,24165236440994718e-24,2438389004651408e-23,24604460868552412e-24,24826965148079508e-24,25051419258483984e-24,2527783970660777e-23,25506243133787972e-24,25736646316905814e-24,25969066169444736e-24,26203519742556035e-24,2644002422613175e-23,26678596949885435e-24,2691925538444184e-23,2716201714243455e-23,27406899979611076e-24,27653921795945987e-24,27903100636763553e-24,28154454693867524e-24,2840800230668008e-23,28663761963388005e-24,28921752302098757e-24,29181992112004358e-24,29444500334554075e-24,29709296064634947e-24,29976398551762606e-24,302458272012795e-22,3051760157556287e-23,3079174139524089e-23,3106826654041752e-23,3134719705190865e-23,3162855313248387e-23,3191235514812026e-23,3219862362926341e-23,3248737927209992e-23,3277864293983657e-23,33072435663991195e-24,3336877864569121e-23,33667693256983654e-24,3396920104215321e-23,34273323719049835e-24,3458008318042754e-23,34889501495292073e-24,35201600910258535e-24,35516403850918206e-24,3583393292321724e-23,361542109148438e-22,3647726079662578e-23,3680310572393859e-23,37131769038124596e-24,37463274267920595e-24,37797645130897515e-24,3813490553490947e-23,3847507957955498e-23,388181915576471e-22,3916426595669455e-23,3951332746039454e-23,39865400950136585e-24,4022051150651595e-23,4057868441085838e-23,4093994514675692e-23,4130431940161994e-23,4167183306822908e-23,4204251224630867e-23,4241638324410791e-23,4279347257999424e-23,4317380698405692e-23,43557413399722643e-24,4394431898538453e-23,4433455111604081e-23,44728137384947155e-24,451251056052783e-22,4552548381180537e-23,45929300262582474e-24,4633658344064691e-23,46747362055730266e-24,4716166504598366e-23,47579521579714335e-24,4800096105713534e-23,4842601311212669e-23,4885470761401049e-23,4928707466933911e-23,4972314462369416e-23,5016294806350134e-23,50606515817854865e-24,51053878960359546e-24,51505068810981086e-24,5196011693791391e-23,5241905515945899e-23,52881915545918716e-24,5334873042150232e-23,53819532366245987e-24,5429435421794667e-23,547732290741116e-22,55256190293918814e-24,55743271500192684e-24,5623450658139442e-23,567299296936272e-22,5722957526265433e-23,5773347798593118e-23,5824167283465353e-23,5875419505582098e-23,5927108017431285e-23,597923639949792e-22,6031808260474845e-23,6084827237474965e-23,6138296996244903e-23,6192221231380067e-23,6246603666541577e-23,630144805467446e-22,6356758178227593e-23,6412537849374901e-23,6468790910238552e-23,6525521233113365e-23,6582732720693147e-23,6640429306298207e-23,6698614954104922e-23,6757293659376782e-23,6816469448696847e-23,6876146380202212e-23,6936328543819865e-23,6997020061504449e-23,7058225087477343e-23,71199478084679e-21,7182192443955992e-23,7244963246416641e-23,7308264501565841e-23,737210052860875e-22,7436475680489272e-23,7501394344141307e-23,7566860940742139e-23,7632879925967142e-23,7699455790246866e-23,776659305902535e-22,7834296293020619e-23,7902570088486801e-23,797141907747843e-22,8040847928116096e-23,8110861344854459e-23,8181464068751658e-23,8252660877741273e-23,8324456586905489e-23,8396856048750574e-23,8469864153484121e-23,8543485829294595e-23,8617726042632368e-23,8692589798492814e-23,8768082140701618e-23,884420815220209e-22,892097295534415e-22,8998381712175566e-23,9076439624735137e-23,915515193534827e-22,923452392692411e-22,93145609232549e-21,939526828931762e-22,9476651431577688e-23,9558715798294598e-23,9641466879829697e-23,9724910208956365e-23,9809051361172069e-23,9893895955012934e-23,9979449652369804e-23,10065718158807502e-23,10152707223885367e-23,10240422641480798e-23,10328870250114204e-23,10418055933277108e-23,10507985619761917e-23,10598665283994151e-23,10690100946366964e-23,10782298673577987e-23,10875264578968697e-23,10969004822865702e-23,11063525612924802e-23,11158833204477065e-23,11254933900877869e-23,11351834053857538e-23,114495400638752e-21,11548058380474345e-23,11647395502641669e-23,1174755797916772e-22,11848552409010047e-23,11950385441659305e-23,120530637775077e-21,12156594168219765e-23,12260983417105694e-23,12366238379497488e-23,12472365963127728e-23,1257937312851071e-22,12687266889325965e-23,12796054312805042e-23,1290574252012069e-22,13016338686778499e-23,1312785004301122e-22,13240283874176122e-23,1335364752115516e-22,13467948380756967e-23,1358319390612257e-22,1369939160713381e-22,13816549050824004e-23,13934673861791513e-23,14053773722616588e-23,14173856374280906e-23,14294929616589694e-23,14417001308596664e-23,14540079369032466e-23,1466417177673544e-22,14789286571085795e-23,14915431852441914e-23,150426157825808e-21,15170846585140564e-23,1530013254606652e-22,15430482014059592e-23,1556190340102881e-22,1569440518254578e-22,1582799589830328e-22,15962684152575926e-23,1609847861468462e-22,16235388019464342e-23,16373421167734374e-23,16512586926772172e-23,16652894230790378e-23,167943520814173e-21,16936969548180054e-23,17080755768991462e-23,17225719950639903e-23,1737187136928307e-22,17519219370944328e-23,17667773372012663e-23,17817542859746047e-23,1796853739277862e-22,1812076660163061e-22,1827424018922178e-22,1842896793138853e-22,18584959677404923e-23,18742225350506443e-23,18900774948417265e-23,1906061854388161e-22,1922176628519871e-22,19384228396760882e-23,1954801517959509e-22,19713137011908657e-23,19879604349638812e-23,2004742772700512e-22,20216617757065856e-23,20387185132278724e-23,20559140625064602e-23,2073249508837549e-22,20907259456265724e-23,21083444744467803e-23,2126106205097127e-22,21440122556606228e-23,21620637525629608e-23,2180261830631679e-22,21986076331555956e-23,22171023119447276e-23,22357470273905262e-23,22545429485265538e-23,2273491253089625e-22,22925931275812214e-23,23118497673294357e-23,23312623765512237e-23,23508321684152126e-23,23705603651047515e-23,23904481978815083e-23,24104969071494053e-23,243070774251909e-21,2451081962872711e-22,24716208364291445e-23,2492325640809727e-22,2513197663104373e-22,2534238199938138e-22,25554485575381253e-23,25768300518010727e-23,25983840083611146e-23,2620111762658166e-22,2642014660006664e-22,266409405566487e-21,2686351314904524e-22,27087878130809455e-23,27314049357036823e-23,2754204078507633e-22,277718664752454e-21,28003540591549483e-23,2823707740240772e-22,28472491281382396e-23,28709796707913215e-23,28949008268056023e-23,2919014065522739e-22,29433208670953537e-23,2967822722562415e-22,2992521133925053e-22,30174176142229657e-23,3042513687611337e-22,3067810889438162e-22,3093310766322071e-22,3119014876230825e-22,3144924788560115e-22,3171042084213062e-22,3197368355680039e-22,3223905207119211e-22,32506542544374517e-23,32776171253719034e-23,3304795459571896e-22,3332190908681629e-22,3359805136423221e-22,3387639818680318e-22,3415696643582334e-22,34439773115890943e-23,3472483535576236e-22,35012170409209144e-23,3530179565588266e-22,3559372860218293e-22,35887986882134497e-23,36184588258266535e-23,36483550622499464e-23,36784891997036677e-23,37088630535263527e-23,3739478452265026e-22,377033723776614e-21,38014412652671214e-23,3832792403488593e-22,3864392534727022e-22,3896243554947994e-22,3928347373880202e-22,39607059151099984e-23,39933211161765187e-23,4026194928667327e-22,4059329318314846e-22,40927262650934104e-23,41263877633167997e-23,41603158217363717e-23,41945124636400874e-23,4228979726951905e-22,4263719664331962e-22,429873434327724e-21,4334025846223091e-22,43695962706452415e-23,44054477291625677e-23,44415823496403337e-23,4478002275294363e-22,4514709664795639e-22,4551706692375759e-22,4588995547932813e-22,4626578437138259e-22,4664457581544234e-22,4702635218691597e-22,47411136022187563e-23,4779895001971031e-22,4818981704110934e-22,4858376011228845e-22,4898080242454686e-22,4938096733570142e-22,4978427837121665e-22,5019075922534025e-22,5060043376224888e-22,5101332601719855e-22,5142946019768344e-22,518488606846015e-21,5227155203342755e-22,5269755897539556e-22,5312690641868453e-22,5355961944961583e-22,5399572333385508e-22,5443524351762484e-22,5487820562892092e-22,5532463547873971e-22,557745590623114e-21,5622800256034235e-22,5668499234026397e-22,571455549574896e-21,5760971715667959e-22,5807750587301582e-22,585489482334817e-21,5902407155815069e-22,5950290336148403e-22,599854713536371e-21,6047180344177179e-22,6096192773137809e-22,6145587252760427e-22,6195366633659607e-22,6245533786684283e-22,629609160305315e-21,6347042994491192e-22,639839089336676e-21,64501382528298e-20,6502288046950516e-22,6554843270859382e-22,6607806940887702e-22,6661182094709256e-22,6714971791482483e-22,6769179111994036e-22,6823807158802789e-22,6878859056385107e-22,6934337951280654e-22,699024701223932e-21,7046589430369167e-22,7103368419284974e-22,7160587215258025e-22,7218249077366482e-22,727635728764717e-21,733491515124776e-21,7393925996580292e-22,7453393175475362e-22,7513320063337637e-22,7573710059301909e-22,7634566586390285e-22,7695893091670427e-22,7757693046414772e-22,7819969946260569e-22,7882727311370912e-22,7945968686596948e-22,8009697641641051e-22,8073917771220841e-22,8138632695234204e-22,8203846058925484e-22,8269561533052768e-22,8335782814055921e-22,8402513624225746e-22,8469757711874204e-22,8537518851505937e-22,8605800843990398e-22,8674607516735115e-22,8743942723860376e-22,8813810346374749e-22,8884214292351358e-22,8955158497105734e-22,9026646923374683e-22,9098683561495994e-22,9171272429589202e-22,9244417573737798e-22,9318123068172449e-22,9392393015455113e-22,9467231546664296e-22,954264282158179e-21,9618631028880107e-22,9695200386311508e-22,9772355140897487e-22,985009956912026e-21,992843797711472e-21,10007374700862049e-22,10086914106383947e-22,10167060589938681e-22,10247818578217847e-22,10329192528544562e-22,10411186929072673e-22,1049380629898721e-21,10577055188706423e-22,10660938180084297e-22,10745459886615052e-22,1083062495363816e-21,10916438058545493e-22,1100290391098864e-21,11090027253088427e-22,11177812859644962e-22,11266265538349587e-22,11355390129997672e-22,11445191508702607e-22,11535674582111456e-22,11626844291621819e-22,1171870561259973e-21,1181126355459898e-21,11904523161581833e-22,11998489512141178e-22,1209316771972376e-21,12188562932854711e-22,12284680335363573e-22,123815251466119e-20,12479102621721824e-22,12577418051805861e-22,1267647676419861e-21,12776284122689696e-22,12876845527757774e-22,12978166416805956e-22,1308025226439918e-21,13183108582502298e-22,13286740920720276e-22,1339115486653883e-21,13496356045567708e-22,13602350121784407e-22,1370914279778004e-21,13816739815005912e-22,13925146954022365e-22,1403437003474869e-21,1414441491671432e-21,14255287499311945e-22,14366993722051645e-22,14479539564817242e-22,14592931048123227e-22,1470717423337401e-21,14822275223123973e-22,1493824016134014e-21,15055075233664905e-22,15172786667681718e-22,15291380733181227e-22,1541086374242991e-21,15531242050439695e-22,15652522055238954e-22,15774710198146123e-22,158978129640437e-20,16021836881654569e-22,1614678852381971e-21,16272674507777844e-22,16399501495446133e-22,16527276193703008e-22,1665600535467239e-21,16785695776009826e-22,16916354301190126e-22,17047987819796462e-22,17180603267811397e-22,17314207627909964e-22,17448807929753845e-22,17584411250287243e-22,17721024714034898e-22,17858655493401964e-22,17997310808975028e-22,18136997929824957e-22,18277724173811997e-22,18419496907892508e-22,18562323548427067e-22,18706211561490535e-22,18851168463184068e-22,18997201819949154e-22,19144319248882945e-22,19292528418055303e-22,19441837046828556e-22,19592252906178227e-22,19743783819016305e-22,1989643766051524e-21,2005022235843542e-21,20205145893453174e-22,20361216299491532e-22,20518441664052052e-22,20676830128549416e-22,20836389888647544e-22,2099712919459745e-21,21159056351577397e-22,21322179720034547e-22,2148650771602954e-21,21652048811581714e-22,2181881153501716e-21,21986804471318467e-22,2215603626247702e-21,2232651560784622e-21,22498251264497897e-22,2267125204757959e-21,2284552683067514e-21,2302108454616661e-21,231979341855977e-20,2337608480004027e-21,2355554550046301e-21,2373632545810118e-21,23918433904828932e-22,24101880133533998e-22,2428667349849472e-21,24472823415758465e-22,24660339363522218e-22,2484923088251612e-21,25039507576388886e-22,25231179112094872e-22,2542425522028357e-21,2561874569569189e-21,25814660397537784e-22,26012009249917046e-22,26210802242200846e-22,2641104942943762e-21,26612760932755087e-22,2681594693976643e-21,27020617704976873e-22,27226783550194192e-22,2743445486494059e-21,2764364210686746e-21,27854355802171762e-22,2806660654601498e-21,282804050029458e-20,28495761907322117e-22,2871268806373865e-21,28931194347454913e-22,2915129170482668e-21,29372991153738516e-22,2959630378404048e-21,29821240757985805e-22,30047813310672054e-22,30276032750483835e-22,30505910459538363e-22,3073745789413423e-21,3097068658520123e-21,3120560813875398e-21,31442234236346884e-22,3168057663553339e-21,31920647170325453e-22,32162457751657647e-22,32406020367852285e-22,3265134708508854e-21,32898450047873243e-22,3314734147951381e-21,3339803368259495e-21,3365053903945795e-21,3390487001268162e-21,34161039145566347e-22,3441905906262078e-21,34678942470052404e-22,34940702156258656e-22,3520435099232194e-21,35469901932507522e-22,3573736801476396e-21,36006762361226507e-22,36278098178721828e-22,365513887592776e-20,36826647480634076e-22,3710388780675812e-21,37383123288359653e-22,37664367563412285e-22,37947634357675958e-22,3823293748522266e-21,3852029084896394e-21,3880970844118372e-21,3910120434407124e-21,3939479273025953e-21,39690487863363985e-22,3998830409852672e-21,4028825588296174e-21,4059035775650463e-21,4089462435216382e-21,4120107039667557e-21,415097107110627e-20,4182056021119465e-21,4213363390835225e-21,4244894690979381e-21,4276651441932677e-21,4308635173787967e-21,4340847426407912e-21,43732897494828445e-22,4405963702589184e-21,44388708552478925e-22,4472012786983349e-21,4505391087382592e-21,4539007356154908e-21,4572863203191607e-21,4606960248626172e-21,4641300122894776e-21,46758844667971425e-22,47107149315576786e-22,4745793178886853e-21,4781120881043064e-21,4816699720894837e-21,485253139198323e-20,48886175985845575e-22,4924960055773623e-21,4961560489487208e-21,4998420636587855e-21,503554224492793e-20,5072927073414269e-21,5110576892072964e-21,51484934821144585e-22,5186678635999181e-21,52251341575034055e-22,5263861861785529e-21,53028635754525e-19,53421411366268656e-22,538169639501413e-20,5421531211970292e-21,5461647460569827e-21,5502047025674169e-21,5542731804000365e-21,558370370419022e-20,5624964646879661e-21,5666516564768643e-21,5708361402691322e-21,5750501117686668e-21,5792937679069253e-21,5835673068500703e-21,5878709280061384e-21,5922048320322332e-21,59656922084178625e-22,6009642976118203e-21,60539026679029145e-22,6098473341034294e-21,6143357065631469e-21,618855592474462e-20,6234072014429948e-21,6279907443824612e-21,6326064335222368e-21,6372544824149419e-21,6419351059440866e-21,6466485203317378e-21,6513949431462211e-21,6561745933098854e-21,6609876911068948e-21,6658344581910668e-21,6707151175937273e-21,6756298937316405e-21,68057901241497346e-22,6855627008552791e-21,6905811876735345e-21,6956347029082279e-21,7007234780234882e-21,7058477459172399e-21,711007740929406e-20,7162036988501672e-21,7214358569282491e-21,7267044538792657e-21,73200972989407755e-22,7373519266472318e-21,7427312873054163e-21,748148056535977e-20,7536024805154531e-21,75909480693819215e-22,764625285024971e-20,7701941655317028e-21,7758017007581371e-21,7814481445566556e-21,7871337523410869e-21,792858781095561e-20,7986234893834263e-21,8044281373561935e-21,8102729867625552e-21,8161583009574119e-21,822084344910977e-20,8280513852179035e-21,8340596901064845e-21,8401095294478724e-21,846201174765365e-20,8523348992437184e-21,8585109777385456e-21,8647296867857171e-21,870991304610822e-20,8772961111387178e-21,8836443880030596e-21,890036418555937e-20,8964724878775173e-21,9029528827857806e-21,909477891846256e-20,9160478053818447e-21,922662915482664e-20,9293235160159771e-21,936029902636142e-20,9427823727946037e-21,9495812257499694e-21,956426762578123e-20,9633192861823755e-21,9702591013036682e-21,9772465145308403e-21,9842818343109592e-21,9913653709596701e-21,998497436671603e-20,10056783455308519e-21,10129084135215092e-21,10201879585382304e-21,10275173003968421e-21,10348967608450458e-21,10423266635731396e-21,10498073342248194e-21,10573391004079866e-21,10649222917056732e-21,10725572396869764e-21,10802442779180685e-21,10879837419732339e-21,1095775969446005e-20,1103621299960315e-20,11115200751817245e-21,11194726388286977e-21,11274793366839261e-21,11355405166057418e-21,11436565285395364e-21,11518277245292796e-21,11600544587290605e-21,11683370874147272e-21,11766759689955409e-21,11850714640259152e-21,11935239352171809e-21,12020337474494696e-21,12106012677835956e-21,12192268654730067e-21,12279109119758133e-21,12366537809668871e-21,12454558483499833e-21,1254317492269918e-20,12632390931248512e-21,1272221033578608e-20,12812636985730434e-21,12903674753404687e-21,12995327534161605e-21,13087599246509316e-21,13180493832237441e-21,13274015256543631e-21,13368167508161294e-21,13462954599487637e-21,13558380566712251e-21,13654449469946224e-21,13751165393352364e-21,13848532445275519e-21,13946554758373899e-21,14045236489750704e-21,14144581821086708e-21,1424459495877321e-20,1434528013404607e-20,14446641603119478e-21,14548683647321534e-21,14651410573229661e-21,14754826712806923e-21,14858936423538975e-21,14963744088571668e-21,15069254116849561e-21,15175470943254369e-21,15282399028745047e-21,15390042860497832e-21,1549840695204733e-20,15607495843427828e-21,15717314101315953e-21,15827866319173356e-21,15939157117390625e-21,16051191143431367e-21,1616397307197721e-20,16277507605073873e-21,1639179947227715e-20,16506853430800233e-21,1662267426566124e-20,1673926678983224e-20,16856635844387836e-21,1697478629865545e-20,17093723050365624e-21,17213451025803727e-21,17333975179961788e-21,17455300496691042e-21,17577431988855536e-21,17700374698486556e-21,17824133696937325e-21,17948714085038504e-21,18074120993254675e-21,18200359581841677e-21,18327435041004214e-21,184553525910543e-19,1858411748257071e-20,18713734996559307e-21,1884421044461362e-20,18975549169076144e-21,19107756543200982e-21,1924083797131701e-20,19374798888991633e-21,19509644763194904e-21,1964538109246558e-20,1978201340707679e-20,1991954726920333e-20,2005798827308876e-20,20197342045214384e-21,2033761424446811e-20,2047881056231493e-20,20620936722967025e-21,20763998483555955e-21,20908001634304797e-21,21052951998701307e-21,2119885543367199e-20,21345717829756465e-21,2149354511128383e-20,2164234323654827e-20,2179211819798676e-20,21942876022356507e-21,22094622770914603e-21,22247364539596814e-21,2240110745919863e-20,22555857695556064e-21,22711621449728313e-21,22868404958180394e-21,23026214492966753e-21,23185056361916022e-21,2334493690881682e-20,23505862513603785e-21,23667839592544298e-21,2383087459842706e-20,23994974020750866e-21,2416014438591432e-20,24326392257405977e-21,24493724235996052e-21,24662146959928996e-21,2483166710511644e-20,2500229138533089e-20,25174026552400974e-21,25346879396407725e-21,2552085674588004e-20,256959654679931e-19,25872212468766806e-21,26049604693265045e-21,2622814912579548e-20,2640785279011092e-20,26588722749611885e-21,26770766107548934e-21,2695399000722644e-20,27138401632207713e-21,27324008206520493e-21,2751081699486371e-20,27698835302814467e-21,2788807047703715e-20,2807852990549223e-20,28270221017647098e-21,284631512846866e-19,28657328219725707e-21,28852759378022412e-21,2904945235719214e-20,29247414797421837e-21,29446654381686884e-21,2964717883596754e-20,29848995929466778e-21,30052113474829284e-21,30256539328360746e-21,30462281390249454e-21,3066934760478717e-20,3087774596059245e-20,3108748449083353e-20,3129857127345408e-20,3151101443139781e-20,3172482213283566e-20,31940002591393065e-21,3215656406637918e-20,32374514863015386e-21,3259386333266714e-20,3281461787307498e-20,3303678692858664e-20,3326037899039187e-20,3348540259675589e-20,3371186633325606e-20,3393977883301759e-20,341691487769524e-19,34399984893996525e-21,3463229596135137e-20,3486609080472296e-20,351013782985654e-19,3533816736632217e-20,35576466980671694e-21,35816286163770744e-21,3605763398750199e-20,3630051957371971e-20,3654495209449929e-20,3679094077238512e-20,3703849488064242e-20,3728762374350691e-20,3753833673643902e-20,3779064328637575e-20,38044552871986755e-21,3830007502392905e-20,3855721932510415e-20,3881599541091606e-20,39076412969530124e-21,39338481742133125e-21,3960221152319455e-20,3986761216072874e-20,4013469355655859e-20,4040346566657975e-20,4067393850102644e-20,40946122124738176e-21,412200266574281e-19,414956622739508e-19,41773039204574294e-21,4205216773524931e-20,4233305820788373e-20,4261572102061435e-20,4290016662808323e-20,431864055417121e-19,4347444832998096e-20,4376430561870452e-20,4405598809131363e-20,443495064891336e-19,4464487161166808e-20,44942094316879953e-21,4524118552147732e-20,4554215620119686e-20,45845017391092105e-21,4614978018581928e-20,46456455739927876e-21,46765055268148975e-21,4707559004568824e-20,4738807140851637e-20,4770251075366487e-20,48018919539518815e-21,48337309286114895e-21,4865769157543676e-20,4898007805171532e-20,4930448042172731e-20,4963091045509667e-20,4995937998459677e-20,5028990090645382e-20,5062248518065154e-20,50957144831237207e-21,512938919466288e-19,51632738679923174e-21,5197369724920642e-20,52316779937864196e-21,52661999094894296e-21,53009367135220113e-21,5335889654000526e-20,53710599856970186e-21,5406448970070875e-20,54420578753007315e-21,5477887976316472e-20,5513940554831326e-20,5550216899374138e-20,55867183053217494e-21,5623446074931492e-20,5660401517373863e-20,5697585948765273e-20,5735000692200963e-20,5772647077788087e-20,5810526442678758e-20,584864013110354e-19,58869894944046755e-21,5925575891069883e-20,5964400686765816e-20,600346525437217e-19,60427709740154014e-21,6082319233103068e-20,6122111426357861e-20,6162148955852216e-20,620243323104258e-19,624296566880434e-19,6283747693466333e-20,6324780736846071e-20,6366066238284525e-20,6407605644681595e-20,6449400410531217e-20,6491451997957094e-20,6533761876748063e-20,6576331524394124e-20,6619162426122093e-20,6662256074931912e-20,6705613971632558e-20,6749237624878661e-20,6793128551206708e-20,6837288275071904e-20,688171832888473e-19,6926420253047977e-20,6971395595993728e-20,7016645914220575e-20,7062172772330951e-20,7107977743068592e-20,7154062407356203e-20,720042835433318e-19,7247077181393559e-20,7294010494224088e-20,7341229906842383e-20,7388737041635428e-20,7436533529397833e-20,748462100937079e-19,7533001129280592e-20,758167554537785e-19,7630645922476318e-20,7679913933992462e-20,7729481261984511e-20,7779349597192367e-20,7829520639076976e-20,7879996095860489e-20,7930777684565972e-20,798186713105788e-19,8033266170082028e-20,808497654530643e-19,813700000936153e-19,8189338323881356e-20,8241993259544084e-20,829496659611347e-19,8348260122479757e-20,8401875636701377e-20,8455814946046188e-20,8510079867033548e-20,8564672225475749e-20,8619593856520473e-20,8674846604692572e-20,8730432323936735e-20,8786352877659767e-20,884261013877329e-19,8899205989736694e-20,895614232259982e-19,9013421039046442e-20,907104405043722e-19,9129013277853471e-20,918733065214047e-19,9245998113951568e-20,9305017613791744e-20,9364391112062109e-20,9424120579103842e-20,9484207995242803e-20,9544655350834062e-20,9605464646306648e-20,9666637892208509e-20,972817710925155e-19,9790084328356923e-20,9852361590700436e-20,9915010947758092e-20,9978034461351918e-20,.00010041434203695821,.0001010521225744167,.00010169370715725574,.00010233911682214381,.00010298837271151997,.00010364149607406565,.00010429850826516899,.00010495943074740089,.0001056242850909831,.00010629309297426646,.00010696587618420343,.00010764265661682989,.00010832345627773993,.00010900829728257247,.00010969720185748852,.00011039019233966156,.00011108729117775896,.0001117885209324344,.00011249390427681404,.000113203463996992,.00011391722299251951,.00011463520427690499,.00011535743097810604,.00011608392633903245,.00011681471371804304,.00011754981658945169,.00011828925854402695,.00011903306328950273,.00011978125465108095,.00012053385657194551,.00012129089311377009,.00012205238845723272,.00012281836690252997,.00012358885286989414,.0001243638709001111,.0001251434456550404,.00012592760191813785,.00012671636459497904,.0001275097587137846,.00012830780942594858,.00012911054200656668,.00012991798185496925,.00013073015449525076,.00013154708557680975,.00013236880087487982,.00013319532629107344,.00013402668785391777,.00013486291171940128,.00013570402417151342,.000136550051622795,.00013740102061488154,.0001382569578190579,.00013911789003680447,.00013998384420035675,.0001408548473732542,.00014173092675090303,.0001426121096611333,.00014349842356475756,.00014438989605613893,.00014528655486375052,.00014618842785074708,.00014709554301552927,.00014800792849231897,.0001489256125517263,.00014984862360133009,.00015077699018624835,.00015171074098972227,.000152649904833691,.00015359451067937946,.00015454458762787632,.0001555001649207266,.00015646127194051353,.00015742793821145427,.00015840019339998608,.00015937806731536626,.0001603615899102623,.00016135079128135526,.00016234570166993384,.0001633463514625018,.00016435277119137748,.00016536499153530176,.00016638304332004545,.00016740695751901868,.00016843676525388283,.00016947249779516457,.00017051418656287122,.00017156186312710858,.0001726155592087011,.00017367530667981325,.00017474113756457338,.00017581308403969998,.00017689117843512858,.00017797545323464358,.00017906594107650682,.0001801626747540962,.00018126568721653577,.0001823750115693409,.00018349068107505054,.00018461272915387726,.00018574118938434364,.00018687609550393637,.00018801748140974671,.00018916538115912833,.00019031982897034275,.00019148085922322054,.0001926485064598113,.0001938228053850491,.00019500379086740628,.00019619149793956325,.00019738596179906634,.000198587217809002,.00019979530149865865,.00020101024856420484,.0002022320948693561,.00020346087644605704,.00020469662949515067,.00020593939038706762,.00020718919566249826,.00020844608203308482,.00020971008638210166,.00021098124576514576,.00021225959741082685,.00021354517872145958,.00021483802727375752,.0002161381808195303,.00021744567728638258,.00021876055477841404,.00022008285157692367,.0002214126061411141,.00022274985710879803,.00022409464329711177,.00022544700370322,.0002268069775050376,.0002281746040619386,.00022954992291547905,.0002309329737901149,.00023232379659392558,.0002337224314193381,.00023512891854385456,.00023654329843078047,.00023796561172995584,.0002393958992784911,.0002408342021014969,.00024228056141283017,.00024373501861582443,.00024519761530404286,.00024666839326201135,.00024814739446597523,.00024963466108463966,.0002511302354799286,.00025263416020772914,.00025414647801865685,.0002556672318588034,.00025719646487050587,.00025873422039309976,.00026028054196369283,.00026183547331792124,.00026339905839072904,.0002649713413171298,.0002665523664329873,.0002681421782757841,.00026974082158540705,.00027134834130491866,.00027296478258134873,.0002745901907664681,.0002762246114175873,.0002778680902983336,.0002795206733794522,.00028118240683959353,.00028285333706611136,.00028453351065586065,.0002862229744159971,.00028792177536478085,.00028962996073238017,.0002913475779616789,.00029307467470908666,.0002948112988453491,.0002965574984563622,.00029831332184398975,.0003000788175268801,.00030185403424128667,.00030363902094189505,.0003054338268026412,.00030723850121754684,.00030905309380154167,.0003108776543913044,.0003127122330460868,.0003145568800485622,.00031641164590565183,.0003182765813493798,.0003201517373377039,.0003220371650553722,.00032393291591476263,.0003258390415567429,.00032775559385151207,.00032968262489946863,.0003316201870320555,.0003335683328126316,.0003355271150373222,.0003374965867358965,.00033947680117262045,.00034146781184714027,.0003434696724953399,.0003454824370902277,.00034750615984280086,.0003495408952029356,.00035158669786025535,.000353643622745026,.00035571172502903457,.0003577910601264747,.0003598816836948463,.00036198365163583526,.00036409702009622234,.00036622184546876544,.000368358184393114,.00037050609375669636,.0003726656306956389,.0003748368525956564,.0003770198170929762,.00037921458207523865,.00038142120568241495,.0003836397463077231,.0003858702625985456,.00038811281345734903,.0003903674580426086,.0003926342557697333,.00039491326631199176,.0003972045496014442,.00039950816582987405,.0004018241754497217,.0004041526391750263,.00040649361798235476,.00040884717311175713,.00041121336606769727,.0004135922586200124,.0004159839128048484,.00041838839092562483,.0004208057555539743,.0004232360695307132,.0004256793959667845,.0004281357982442351,.00043060534001716024,.00043308808521268834,.00043558409803193,.0004380934429509646,.00044061618472179847,.0004431523883733531,.00044570211921242836,.00044826544282469677,.0004508424250756692,.0004534331321116967,.0004560376303609393,.00045865598653437235,.00046128826762676045,.0004639345409176684,.00046659487397244023,.0004692693346432132,.00047195799106990714,.00047466091168123367,.0004773781651956987,.0004801098206226116,.00048285594726309584,.0004856166147110997,.0004883918928544127,.0004911818518756826,.0004939865622534346,.000496806094763094,.0004996405204780083,.0005024899107704797,.0005053543373127836,.0005082338720782142,.0005111285873421019,.0005140385556828663,.0005169638499830389,.0005199045434303176,.0005228607095185964,.000525832422049027,.0005288197551310468,.0005318227831834506,.0005348415809354225,.0005378762234276089,.0005409267860131596,.0005439933443588036,.0005470759744458927,.0005501747525714831,.0005532897553493938,.0005564210597112685,.0005595687429076648,.0005627328825091073,.0005659135564071822,.0005691108428155971,.0005723248202712819,.0005755555676354494,.0005788031640947029,.0005820676891621024,.000585349222678274,.0005886478448124836,.0005919636360637503,.000595296677261922,.0005986470495687976,.0006020148344792055,.0006054001138221282,.0006088029697617883,.0006122234847987781,.0006156617417711467,.0006191178238555368,.0006225918145682784,.0006260837977665235,.0006295938576493541,.0006331220787589106,.0006366685459815131,.0006402333445487898,.000643816560038804,.0006474182783771886,.0006510385858382744,.0006546775690462318,.0006583353149762051,.0006620119109554509,.0006657074446644857,.0006694220041382312,.0006731556777671494,.0006769085542984124,.0006806807228370314,.0006844722728470308,.000688283294152586,.0006921138769392013,.0006959641117548477,.0006998340895111499,.0007037239014845273,.000707633639317385,.0007115633950192593,.0007155132609680129,.0007194833299109854,.0007234736949661937,.0007274844496234864,.0007315156877457454,.0007355675035700491,.0007396399917088792,.0007437332471512818,.000747847365264085,.0007519824417930625,.0007561385728641534,.0007603158549846332,.000764514385044336,.0007687342603168309,.0007729755784606465,.00077723843752046,.0007815229359283086,.0007858291725047999,.0007901572464603223,.0007945072573962547,.0007988793053061875,.0008032734905771351,.0008076899139907581,.000812128676724583,.0008165898803532268,.0008210736268496233,.0008255800185862561,.000830109158336371,.0008346611492752331,.000839236094981341,.0008438340994376727,.0008484552670329229,.0008530997025627398,.0008577675112309725,.0008624587986509136,.0008671736708465424,.0008719122342537825,.0008766745957217418,.0008814608625139729,.0008862711423097292,.0008911055432052069,.0008959641737148328,.0009008471427724886,.00090575455973281,.0009106865343724202,.0009156431768912236,.0009206245979136505,.0009256309084899543,.0009306622200974545,.0009357186446418415,.0009408002944584262,.0009459072823134445,.0009510397214053111,.0009561977253659342,.0009613814082619633,.0009665908845961132,.0009718262693084173,.0009770876777775517,.0009823752258220947,.0009876890297018542,.0009930292061191299,.0009983958722200451,.0010037891455958144,.0010092091442840752,.0010146559867701653,.0010201297919884519,.0010256306793236202,.0010311587686119925,.0010367141801428366,.0010422970346596792,.0010479074533616217,.0010535455579046562,.001059211470402981,.0010649053134303248,.0010706272100212669,.0010763772836725636,.0010821556583444642,.0010879624584620594,.0010937978089165786,.0010996618350667556,.0011055546627401292,.0011114764182344088,.001117427228318776,.0011234072202352598,.0011294165217000372,.0011354552609048139,.0011415235665181273,.001147621567686733,.0011537493940369052,.0011599071756758321,.0011660950431929208,.0011723131276611867,.001178561560638574,.0011848404741693418,.0011911500007853848,.0011974902735076298,.0012038614258473542,.0012102635918075904,.0012166969058844412,.0012231615030684922,.0012296575188461313,.0012361850892009566,.0012427443506151082,.001249335440070673,.0012559584950510363,.0012626136535422454,.0012693010540344182,.0012760208355230757,.001282773137510568,.0012895581000074029,.0012963758635336756,.001303226569120404,.001310110358310957,.0013170273731623972,.0013239777562469043,.001330961650653138,.0013379791999876367,.0013450305483762044,.0013521158404653083,.0013592352214234673,.0013663888369426465,.0013735768332396561,.0013807993570575461,.0013880565556670032,.0013953485768677589,.0014026755689899818,.0014100376808956789,.0014174350619801084,.0014248678621731855,.0014323362319408656,.0014398403222865895,.0014473802847526514,.0014549562714216498,.0014625684349178541,.0014702169284086667,.0014779019056059797,.0014856235207676522,.001493381928698861,.0015011772847535814,.0015090097448359427,.0015168794654017068,.0015247866034596342,.0015327313165729526,.0015407137628607364,.0015487341009993729,.0015567924902239393,.0015648890903296794,.0015730240616733805,.001581197565174845,.0015894097623182764,.0015976608151537534,.00160595088629861,.0016142801389389249,.0016226487368308912,.001631056844302306,.0016395046262539642,.001647992248161114,.0016565198760748866,.0016650876766237284,.0016736958170148514,.001682344465035657,.0016910337890551823,.001699763958025541,.0017085351414833627,.0017173475095512306,.001726201232939125,.001735096482945884,.0017440334314606026,.001753012250964139,.001762033114530495,.0017710961958283236,.001780201669122314,.0017893497092747001,.0017985404917466525,.0018077741925997732,.0018170509884975023,.0018263710567066134,.001835734575098612,.0018451417221512433,.0018545926769498826,.0018640876191890398,.001873626729173789,.0018832101878212045,.0018928381766618527,.0019025108778412017,.0019122284741211262,.0019219911488813038,.0019317990861207283,.0019416524704591067,.0019515514871383817,.00196149632202411,.001971487161607001,.001981524193004292,.0019916076039612823,.0020017375828527213,.0020119143186843316,.0020221380010941974,.002032408820354294,.002042726967371879,.0020530926336910127,.002063506011493959,.002073967293602699,.002084476673480337,.0020950343452326046,.002105640503609295,.002116295344005729,.002126999062464209,.00213775185567549,.0021485539209802284,.0021594054563704476,.002170306660490993,.002181257732640996,.002192258872775332,.002203310281506075,.002214412160103963,.0022255647104998657,.00223676813528621,.0022480226377184914,.002259328421716674,.002270685691866706,.0022820946534219265,.0022935555123045786,.0023050684751071966,.002316633749094147,.0023282515422030077,.0023399220630460943,.002351645520911846,.0023634221257663626,.0023752520882547768,.0023871356197027868,.002399072932118044,.002411064238191676,.002423109751299667,.0024352096855043887,.0024473642555559853,.002459573676893879,.0024718381656481853,.002484157938641198,.002496533213388805,.002508964208101976,.0025214511416881817,.002533994233752871,.0025465937046008913,.002559249775237969,.0025719626673721178,.0025847326034151422,.002597559806484012,.0026104445004023844,.002623386909701973,.0026363872596240684,.002649445776120905,.0026625626858571808,.0026757382162114172,.002688972595277485,.002702266051865965,.0027156188155056434,.0027290311164449407,.002742503185653298,.002756035254822702,.002769627556369023,.0027832803234335403,.0027969937898842914,.002810768190317583,.00282460376005934,.002838500735166619,.0028524593524289605,.0028664798493698795,.0028805624642482368,.0028947074360597094,.0029089150045381804,.00292318541015719,.0029375188941313185,.002951915698417659,.0029663760657171754,.0029809002394761766,.0029954884638876745,.0030101409838928714,.0030248580451824798,.0030396398941982287,.003054486778134189,.003069398944938259,.003084376643313489,.0030994201227195813,.0031145296333741955,.003129705426254432,.003144947753098174,.0031602568664055265,.0031756330194401814,.003191076466230847,.0032065874615725964,.0032221662610283125,.0032378131209300225,.0032535282983803433,.003269312051253807,.0032851646381983047,.00330108631863641,.0033170773527668295,.003333138001565693,.00334926852678803,.00336546919096904,.003381740257425571,.003398081990257386,.00341449465434863,.00343097851536911,.0034475338397757216,.0034641608948137725,.0034808599485183726,.0034976312697157534,.0035144751280246724,.003531391793857711,.003548381538422685,.0035654446337239297,.00358258135256371,.0035997919685435004,.003617076756065394,.0036344359903333627,.0036518699473546867,.0036693789039411793,.0036869631377106425,.0037046229270880655,.0037223585513070823,.0037401702904111597,.003758058425255052,.0037760232375060095,.0037940650096451706,.003812184024968818,.00383038056758974,.0038486549224384884,.0038670073752647377,.003885438212638524,.00390394772195161,.003922536191418718,.003941203910078875,.003959951167796684,.003978778255263587,.003997685463999197,.004016673086352524,.0040357414155033165,.004054890745463272,.0040741213710773685,.004093433588025073,.004112827692821674,.004132303982819469,.004151862756209107,.004171504312020758,.004191228950125454,.00421103697123624,.0042309286769095355,.004250904369546244,.004270964352393136,.00429110892954394,.004311338405940715,.004331653087374946,.004352053280488889,.0043725392927766935,.0043931114325857,.004413770009117587,.004434515332429639,.00445534771343591,.00447626746390846,.00449727489647852,.004518370324637734,.004539554062739287,.004560826425999174,.004582187730497291,.004603638293178721,.004625178431854795,.00464680846520438,.004668528712774931,.0046903394949837805,.004712241133119166,.004734233949341519,.004756318266684489,.004778494409056211,.004800762701240342,.004823123468897289,.004845577038565277,.0048681237376615345,.004890763894483364,.004913497838209328,.004936325898900296,.004959248407500637,.004982265695839237,.005005378096630702,.005028585943476361,.005051889570865462,.005075289314176147,.005098785509676666,.005122378494526329,.005146068606776712,.005169856185372595,.005193741570153166,.005217725101852958,.005241807122103009,.005265987973431835,.005290267999266543,.005314647543933818,.00533912695266101,.005363706571577122,.005388386747713887,.005413167829006735,.00543805016429587,.005463034103327218,.00548811999675352,.005513308196135219,.005538599053941597,.005563992923551607,.005589490159255026,.0056150911162533195,.0056407961506606385,.005666605619504837,.005692519880728371,.005718539293189331,.005744664216662314,.005770895011839469,.005797232040331323,.005823675664667851,.005850226248299261,.005876884155597088,.0059036497518549355,.005930523403289558,.005957505477041618,.005984596341176728,.006011796364686238,.0060391059174882,.006066525370428195,.006094055095280276,.0061216954647477645,.006149446852464216,.006177309632994168,.006205284181834112,.006233370875413228,.00626157009109433,.006289882207174621,.0063183076028866065,.006346846658398807,.006375499754816714,.006404267274183449,.006433149599480739,.006462147114629527,.006491260204490958,.0065204892548669825,.006549834652501297,.006579296785079985,.006608876041232387,.0066385728105317725,.006668387483496171,.006698320451589051,.006728372107220125,.006758542843745993,.006788833055470998,.0068192431376477925,.006849773486478195,.006880424499113768,.00691119657365665,.00694209010916008,.006973105505629279,.00700424316402193,.0070355034862490205,.007066886875175351,.007098393734620348,.007130024469358556,.007161779485120417,.007193659188592785,.007225663987419669,.007257794290202729,.007290050506502019,.00732243304683646,.0073549423226845516,.0073875787464848805,.007420342731636759,.007453234692500734,.007486255044399267,.007519404203617118,.00755268258740211,.00758609061396545,.0076196287024824895,.0076532972730930324,.007687096746902061,.007721027545980056,.00775509009336369,.007789284813056146,.00782361213002776,.007858072470216368,.007892666260527868,.007927393928836712,.007962255903986198,.007997252615789131,.008032384495028072,.008067651973455957,.008103055483796313,.008138595459743882,.008174272335964837,.00821008654809735,.008246038532751835,.00828212872751145,.008318357570932366,.008354725502544234,.00839123296285043,.008427880393328518,.008464668236430477,.00850159693558313,.00853866693518837,.00857587868062359,.008613232618241822,.00865072919537224,.008688368860320208,.00872615206236781,.008764079251773855,.008802150879774403,.008840367398582757,.008878729261389934,.008917236922364707,.008955890836653976,.008994691460382856,.00903363925065499,.009072734665552645,.009111978164137008,.00915137020644823,.009190911253505728,.009230601767308225,.009270442210833984,.009310433048040877,.00935057474386662,.0093908677642287,.009431312576024744,.009471909647132353,.009512659446409426,.009553562443694043,.00959461910980471,.00963582991654025,.009677195336680024,.009718715843983814,.009760391913192003,.009802224020025441,.009844212641185618,.009886358254354508,.009928661338194719,.009971122372349305,.010013741837441907,.010056520215076558,.010099457987837781,.010142555639290365,.010185813653979497,.010229232517430454,.010272812716148745,.010316554737619768,.01036045907030896,.010404526203661411,.01044875662810198,.010493150835034928,.010537709316843955,.010582432566891876,.010627321079520597,.01067237535005078,.010717595874781782,.010762983150991338,.010808537676935433,.010854259951847982,.010900150475940685,.010946209750402754,.010992438277400558,.011038836560077479,.011085405102553538,.011132144409925174,.011179054988264854,.011226137344620862,.011273391987016839,.011320819424451588,.011368420166898588,.011416194725305777,.01146414361159499,.01151226733866181,.011560566420374918,.01160904137157596,.01165769270807882,.011706520946669512,.011755526605105437,.01180471020211521,.011854072257397914,.011903613291622915,.01195333382642911,.012003234384424626,.01205331548918614,.012103577665258557,.012154021438154238,.01220464733435269,.012255455881299783,.0123064476074074,.012357623042052642,.012408982715577412,.012460527159287658,.012512256905452934,.012564172487305517,.012616274439040079,.012668563295812669,.012721039593740432,.01277370386990056,.012826556662329945,.012879598510024135,.012932829952936941,.012986251531979427,.013039863789019395,.013093667266880457,.013147662509341396,.013201850061135284,.013256230467948807,.013310804276421312,.013365572034144154,.013420534289659707,.013475691592460677,.013531044492989074,.013586593542635576,.013642339293738348,.013698282299582473,.013754423114398716,.013810762293362972,.01386730039259493,.013924037969157504,.013980975581055592,.014038113787235284,.014095453147582765,.01415299422292341,.014210737575020659,.01426868376657516,.014326833361223522,.014385186923537482,.014443745019022637,.014502508214117558,.014561477076192526,.014620652173548587,.014680034075416272,.01473962335195467,.01479942057425002,.014859426314314823,.014919641145086532,.014980065640426296,.015040700375117972,.01510154592486669,.015162602866297807,.015223871776955522,.01528535323530176,.015347047820714759,.015408956113487991,.015471078694828558,.01553341614685629,.015595969052601997,.015658737996006512,.015721723561919015,.015784926336095982,.0158483469051995,.015911985856796148,.01597584377935535,.016039921262248194,.01610421889574575,.01616873727101787,.01623347698013149,.016298438616049356,.016363622772628376,.01642903004461825,.016494661027659792,.016560516318283598,.016626596513908253,.01669290221283906,.016759434014266134,.01682619251826314,.016893178325785373,.016960392038668455,.017027834259626354,.01709550559225011,.017163406641005803,.017231538011233203,.017299900309143766,.017368494141819228,.01743732011720961,.017506378844131722,.017575670932267175,.017645196992160862,.0177149576352189,.01778495347370713,.017855185120749014,.017925653190324093,.017996358297265827,.018067301057260125,.018138482086843013,.01820990200339925,.018281561425159937,.018353460971201045,.01842560126144107,.01849798291663947,.01857060655839438,.01864347280914088,.018716582292148804,.018789935631520926,.018863533452190724,.018937376379920576,.019011465041299455,.01908580006374114,.019160382075481815,.01923521170557829,.019310289583905592,.019385616341155137,.019461192608832216,.019537019019254278,.019613096205548266,.019689424801648914,.01976600544229606,.019842838763032875,.01991992540020326,.019997265990949847,.020074861173211507,.020152711585721253,.020230817868003955,.02030918066037369,.02038780060393193,.02046667834056465,.02054581451294049,.020625209764507855,.020704864739493022,.02078478008289725,.020864956440494815,.02094539445883013,.021026094785215662,.021107058067729122,.021188284955211335,.021269776097263316,.021351532144244192,.02143355374726821,.02151584155820264,.02159839622966475,.021681218415019656,.021764308768377295,.021847667944590237,.02193129659925057,.022015195388687812,.022099364969965608,.022183806000879693,.02226851913995458,.02235350504644139,.022438764380314696,.02252429780227007,.022610105973721043,.02269618955679665,.02278254921433831,.022869185609897282,.02295609940773159,.023043291272803412,.023130761870775996,.02321851186801102,.023306541931565408,.023394852729188773,.02348344492932005,.023572319201085067,.023661476214293015,.023750916639434058,.02384064114767579,.023930650410860718,.02402094510150274,.024111525892784622,.02420239345855447,.02429354847332301,.024384991612260213,.024476723551192445,.024568744966599092,.024661056535609654,.024753658936000348,.02484655284619119,.024939738945242537,.025033217912852117,.025126990429351573,.025221057175703533,.02531541883349791,.025410076084949124,.025505029612892326,.02560028010078059,.02569582823268101,.025791674693272,.025887820167839293,.025984265342273168,.026081010903064503,.026178057537301846,.026275405932667587,.026373056777434883,.026471010760463824,.026569268571198346,.026667830899662348,.026766698436456505,.026865871872754635,.026965351900299958,.027065139211401926,.027165234498932243,.027265638456321597,.027366351777555777,.02746737515717234,.02756870929025661,.027670354872438414,.02777231259988802,.027874583169312774,.02797716727795309,.028080065623579016,.028183278904486186,.02828680781949242,.028390653067933452,.02849481534965977,.028599295365032053,.02870409381491813,.028809211400688404,.02891464882421265,.029020406787855477,.029126485994473074,.02923288714740875,.029339610950489422,.029446658108021308,.02955402932478633,.02966172530603774,.029769746757496524,.029878094385347005,.029986768896233154,.03009577099725419,.030205101395960898,.03031476080035115,.03042474991886625,.030535069460386272,.030645720134226517,.03075670265013279,.030868017718277813,.03097966604925639,.03109164835408192,.03120396534418151,.03131661773139227,.03142960622795664,.0315429315465185,.031656594400118504,.03177059550219019,.03188493556655524,.03199961530741953,.03211463543936841,.032229996677362704,.03234569973673394,.032461745333180414,.032578134182762154,.0326948670018972,.032811944507356416,.03292936741625975,.033047136446070983,.03316525231459403,.033283715739967634,.033402527440661516,.033521688135471274,.033641198543514245,.03376105938422448,.033881271377348685,.03400183524294097,.03412275170135879,.03424402147325786,.03436564527958781,.03448762384158717,.03460995788077902,.03473264811896588,.0348556952782255,.034979100080905344,.03510286324961874,.035226985507239156,.0353514675768962,.03547631018197034,.03560151404608808,.03572707989311737,.03585300844716237,.035979300432558994,.03610595657386953,.036232977595878256,.03636036422358584,.03648811718220519,.036616237197155586,.03674472499405863,.03687358129873237,.03700280683718701,.03713240233561925,.03726236852040788,.03739270611810802,.03752341585544667,.03765449845931711,.03778595465677417,.037917785175028786,.03804999074144314,.038182572083525136,.03831552992892371,.038448865005423036,.038582578040937926,.038716669763508,.038851140901293116,.038985992182567306,.03912122433571436,.03925683808922163,.039392834171675675,.03952921331175603,.039665976238230594,.0398031236799497,.039940656365841265,.04007857502490487,.04021688038620686,.04035557317887446,.04049465413209077,.040634123975088914,.040773983437146936,.04091423324758193,.04105487413574501,.04119590683101524,.04133733206279467,.04147915056050226,.041621363053568845,.041763970271430945,.04190697294352587,.04205037179928537,.0421941675681308,.04233836097946661,.04248295276267559,.042627943647112386,.04277333436209846,.04291912563691585,.04306531820080198,.04321191278294338,.04335891011247049,.043506310918451335,.04365411592988634,.04380232587570191,.04395094148474522,.04409996348577789,.04424939260747059,.04439922957839667,.04454947512702694,.04470012998172302,.0448511948707323,.0450026705221811,.04515455766406969,.04530685702426543,.04545956933049767,.04561269531035101,.04576623569125982,.04592019120050225,.04607456256519364,.04622935051228133,.046384555768537734,.04654017906055523,.04669622111473902,.04685268265730213,.04700956441425832,.04716686711141675,.04732459147437529,.04748273822851479,.04764130809899249,.047800301810736336,.047959720088438296,.04811956365654867,.04827983323926925,.048440529560547764,.04860165334407106,.04876320531325927,.04892518619125908,.04908759670093819,.049250437564877965,.049413709505368206,.049577413244399814,.04974154950365945,.049906119004522145,.05007112246804603,.050236560614964704,.05040243416568217,.05056874384026525,.05073549035843803,.0509026744395748,.05107029680269407,.05123835816645171,.051406859249134886,.05157580076865512,.051745183442542274,.05191500798793744,.05208527512158713,.05225598555983597,.05242714001862096,.05259873921346394,.0527707838594661,.052943274671300264,.05311621236320538,.05328959764897886,.05346343124197091,.05363771385507705,.05381244620073213,.0539876289909031,.05416326293708285,.054339348750282984,.05451588714102766,.054692878819346355,.05487032449476759,.055048224876311724,.05522658067248476,.05540539259127091,.05558466134012654,.055764387625972585,.0559445721551887,.056125215633605306,.05630631876649796,.05648788225857938,.05666990681399371,.05685239313630846,.05703534192850884,.05721875389298992,.05740262973155033,.05758697014538494,.057771775835078344,.05795704750059752,.0581427858412853,.05832899155585297,.05851566534237381,.058702807898275554,.05889041992033392,.05907850210466549,.05926705514672029,.059456079741275376,.05964557658242735,.05983554636358566,.06002598977746516,.06021690751607957,.060408300270733774,.06060016873201745,.06079251358979722,.06098533553321031,.06117863525065668,.06137241342979277,.061566670757523284,.06176140791999527,.061956625602589785,.062152324489915894,.06234850526580221,.06254516861329111,.0627423152146302,.06293994575126632,.06313806090383738,.06333666135216574,.06353574777525066,.06373532085126127,.06393538125752912,.06413592967054126,.06433696676593242,.06453849321847846,.06474050970208829,.06494301688979735,.06514601545375964,.06534950606524105,.06555348939461131,.06575796611133759,.06596293688397596,.06616840238016547,.06637436326661939,.06658082020911907,.06678777387250547,.06699522492067295,.06720317401656077,.0674116218221465,.06762056899843806,.06783001620546691,.06803996410227996,.06825041334693277,.06846136459648154,.06867281850697633,.06888477573345286,.06909723692992582,.06931020274938067,.06952367384376704,.0697376508639901,.06995213445990449,.07016712528030532,.07038262397292212,.07059863118441007,.07081514756034361,.07103217374520795,.07124971038239235,.0714677581141818,.0716863175817505,.07190538942515312,.07212497428331832,.07234507279404055,.07256568559397274,.07278681331861861,.07300845660232538,.0732306160782756,.07345329237848044,.07367648613377115,.07390019797379238,.07412442852699362,.07434917842062258,.07457444828071694,.07480023873209674,.07502655039835718,.07525338390186048,.0754807398637288,.07570861890383594,.07593702164080052,.0761659486919774,.07639540067345106,.07662537820002681,.0768558818852243,.07708691234126872,.0773184701790843,.0775505560082854,.07778317043717009,.07801631407271133,.07824998752055021,.0784841913849875,.0787189262689767,.07895419277411558,.07918999150063916,.07942632304741154,.07966318801191868,.07990058699025981,.08013852057714099,.08037698936586607,.08061599394833002,.08085553491501063,.08109561285496097,.08133622835580157,.08157738200371312,.08181907438342784,.08206130607822276,.0823040776699111,.08254738973883552,.08279124286385903,.08303563762235894,.08328057459021726,.08352605434181481,.08377207745002174,.08401864448619129,.0842657560201508,.0845134126201949,.0847616148530771,.08501036328400263,.08525965847661982,.08550950099301347,.085759891393696,.08601083023760059,.08626231808207252,.08651435548286274,.0867669429941183,.08702008116837617,.08727377055655478,.08752801170794622,.08778280517020864,.08803815148935867,.08829405120976291,.08855050487413135,.08880751302350842,.08906507619726622,.08932319493309582,.08958186976700033,.08984110123328665,.09010088986455794,.0903612361917055,.09062214074390162,.09088360404859114,.0911456266314844,.09140820901654889,.09167135172600177,.09193505528030183,.09219932019814253,.09246414699644301,.09272953619034152,.09299548829318727,.09326200381653199,.09352908327012344,.09379672716189652,.0940649359979665,.09433371028262028,.09460305051830986,.0948729572056432,.09514343084337806,.09541447192841251,.09568608095577907,.0959582584186352,.09623100480825736,.09650432061403147,.09677820632344686,.09705266242208732,.0973276893936243,.09760328771980836,.09787945788046226,.09815620035347283,.09843351561478325,.09871140413838558,.0989898663963133,.0992689028586326,.09954851399343623,.09982870026683444,.1001094621429483,.10039080008390122,.10067271454981225,.1009552059987876,.10123827488691334,.10152192166824764,.10180614679481348,.10209095071659047,.10237633388150785,.10266229673543603,.10294883972218016,.10323596328347107,.10352366785895945,.10381195388620601,.10410082180067654,.1043902720357317,.10468030502262143,.10497092119047619,.10526212096630017,.10555390477496307,.1058462730391933,.10613922617956945,.10643276461451384,.10672688876028386,.10702159903096597,.10731689583846621,.10761277959250454,.10790925070060609,.10820630956809463,.1085039565980837,.10880219219147114,.10910101674692946,.10940043066090027,.1097004343275852,.11000102813894003,.1103022124846656,.1106039877522021,.1109063543267198,.11120931259111377,.11151286292599427,.11181700570968134,.11212174131819547,.11242707012525238,.11273299250225366,.11303950881828079,.1133466194400869,.1136543247320902,.1139626250563659,.11427152077263969,.11458101223827954,.11489109980828927,.11520178383530072,.11551306466956629,.11582494265895277,.11613741814893247,.11645049148257752,.11676416300055115,.11707843304110238,.11739330194005643,.11770877003080965,.11802483764432109,.11834150510910585,.11865877275122749,.11897664089429133,.11929510985943692,.11961417996533158,.119933851528162,.12025412486162851,.1205750002769373,.1208964780827933,.12121855858539315,.12154124208841866,.12186452889302862,.12218841929785329,.12251291359898575,.12283801208997647,.12316371506182483,.12349002280297361,.1238169355993004,.12414445373411243,.12447257748813773,.12480130713952031,.12513064296381088,.1254605852339623,.12579113422032068,.12612229019062005,.1264540534099743,.12678642414087138,.12711940264316562,.1274529891740716,.12778718398815647,.1281219873373345,.12845739947085855,.12879342063531524,.12913005107461645,.12946729102999416,.12980514073999183,.1301436004404603,.13048267036454836,.13082235074269832,.1311626418026376,.13150354376937362,.13184505686518588,.1321871813096206,.13252991731948266,.13287326510883068,.1332172248889691,.1335617968684425,.1339069812530283,.1342527782457315,.13459918804677645,.13494621085360242,.135293846860855,.13564209626038176,.13599095924122379,.13634043598961126,.13669052668895548,.1370412315198436,.13739255066003114,.13774448428443742,.138097032565137,.13845019567135547,.13880397376946152,.13915836702296225,.13951337559249521,.13986899963582372,.14022523930783004,.14058209476050865,.14093956614296121,.14129765360138924,.14165635727908926,.1420156773164452,.14237561385092395,.1427361670170676,.14309733694648907,.14345912376786457,.14382152760692885,.14418454858646818,.14454818682631515,.14491244244334223,.14527731555145634,.14564280626159204,.14600891468170696,.14637564091677463,.14674298506877964,.14711094723671092,.14747952751655696,.14784872600129895,.14821854278090613,.14858897794232867,.14896003156949367,.14933170374329757,.14970399454160233,.15007690403922813,.15045043230794913,.15082457941648664,.15119934543050473,.15157473041260333,.15195073442231422,.15232735751609366,.15270459974731904,.15308246116628127,.15346094182018127,.15384004175312266,.15421976100610824,.15460009961703264,.15498105762067893,.15536263504871156,.1557448319296726,.15612764828897452,.15651108414889747,.15689513952858125,.1572798144440225,.15766510890806762,.1580510229304093,.15843755651757946,.1588247096729462,.15921248239670688,.15960087468588452,.159989886534321,.1603795179326743,.16076976886841132,.16116063932580443,.1615521292859255,.16194423872664182,.16233696762261046,.16273031594527387,.16312428366285464,.16351887074035149,.16391407713953282,.16430990281893432,.1647063477338514,.16510341183633748,.16550109507519617,.1658993973959796,.16629831874098133,.1666978590492334,.1670980182565005,.1674987962952766,.16790019309477894,.16830220858094547,.168704842676428,.1691080953005899,.16951196636950067,.1699164557959309,.17032156348934935,.1707272893559173,.17113363329848513,.17154059521658716,.17194817500643872,.17235637256092984,.1727651877696234,.1731746205187487,.17358467069119937,.17399533816652724,.1744066228209401,.17481852452729618,.1752310431551009,.1756441785705023,.17605793063628805,.17647229921187974,.17688728415333094,.17730288531332167,.1777191025411557,.1781359356827556,.17855338458066033,.17897144907401957,.17939012899859202,.17980942418673979,.1802293344674264,.18064985966621122,.18107099960524808,.18149275410327914,.18191512297563384,.182338106034223,.18276170308753725,.18318591394064188,.18361073839517517,.18403617624934276,.18446222729791645,.18488889133222902,.18531616814017238,.18574405750619272,.18617255921128895,.18660167303300756,.18703139874544134,.18746173611922434,.18789268492153027,.18832424491606808,.18875641586308017,.18918919751933772,.18962258963813955,.1900565919693069,.19049120425918292,.19092642625062745,.1913622576830158,.19179869829223462,.19223574781068026,.19267340596725446,.19311167248736355,.19355054709291325,.19399002950230843,.19443011943044824,.19487081658872552,.1953121206850219,.19575403142370762,.19619654850563673,.1966396716281465,.19708340048505324,.19752773476665136,.19797267415970932,.19841821834746914,.198864367009642,.1993111198224079,.19975847645841138,.20020643658676124,.20065499987302637,.2011041659792352,.20155393456387277,.20200430528187818,.20245527778464378,.20290685172001116,.20335902673227157,.20381180246216146,.20426517854686266,.2047191546199984,.2051737303116336,.20562890524827082,.20608467905285055,.20654105134474726,.20699802173976972,.20745558985015744,.20791375528458061,.20837251764813708,.2088318765423517,.20929183156517372,.20975238231097704,.21021352837055612,.2106752693311273,.21113760477632443,.21160053428620051,.21206405743722329,.2125281738022769,.2129928829506577,.21345818444807535,.21392407785664985,.21439056273491164,.21485763863779933,.2153253051166596,.21579356171924502,.2162624079897142,.21673184346862928,.2172018676929569,.21767248019606483,.21814368050772354,.2186154681541031,.2190878426577743,.21956080353770585,.22003435030926566,.220508482484218,.2209831995707251,.22145850107334403,.2219343864930282,.22241085532712518,.2228879070693775,.22336554120992058,.22384375723528405,.22432255462838924,.22480193286855116,.22528189143147542,.22576242978926064,.22624354741039554,.22672524375976116,.22720751829862823,.22769037048465918,.228173799771906,.22865780561081195,.22914238744820958,.22962754472732289,.23011327688776484,.23059958336553982,.2310864635930414,.23157391699905477,.23206194300875443,.23255054104370682,.23303971052186812,.23352945085758697,.2340197614616022,.23451064174104552,.23500209109943987,.2354941089367018,.23598669464913952,.23647984762945606,.2369735672667473,.23746785294650424,.2379627040506132,.23845811995735522,.23895410004140916,.23945064367384944,.2399477502221496,.24044541905018058,.24094364951821406,.24144244098292056,.24194179279737305,.24244170431104528,.24294217486981534,.24344320381596402,.2439447904881784,.24444693422155062,.24494963434758116,.24545289019417765,.24595670108565865,.24646106634275222,.24696598528259972,.2474714572187549,.24797748146118725,.24848405731628115,.24899118408683985,.24949886107208435,.2500070875676574,.2505158628656224,.2510251862544677,.2515350570191056,.25204547444087666,.25255643779754844,.2530679463633202,.25357999940882203,.2540925962011189,.2546057360037106,.25511941807653526,.2556336416759697,.256148406054833,.25666371046238684,.25717955414433924,.2576959363428448,.25821285629650886,.2587303132403874,.2592483064059916,.2597668350212877,.2602858983107015,.26080549549511833,.2613256257918882,.26184628841482516,.2623674825742124,.26288920747680233,.2634114623258216,.2639342463209708,.26445755865842996,.26498139853085845,.2655057651274002,.2660306576336836,.2665560752318274,.2670820171004401,.26760848241462604,.26813547034598534,.2686629800626193,.269191010729131,.26971956150663046,.27024863155273554,.27077822002157725,.2713083260638001,.2718389488265684,.27237008745356606,.2729017410850031,.27343390885761554,.273966589904672,.2744997833559739,.2750334883378619,.27556770397321595,.2761024293814617,.2766376636785725,.2771734059770725,.2777096553860418,.27824641101111786,.2787836719545016,.27932143731495834,.27985970618782446,.28039847766500814,.28093775083499584,.2814775247828537,.2820177985902338,.28255857133537543,.28309984209311184,.28364160993487136,.28418387392868405,.28472663313918345,.2852698866276127,.2858136334518267,.28635787266629825,.28690260332212014,.28744782446701156,.2879935351453205,.28853973439802955,.28908642126275874,.28963359477377193,.2901812539619785,.29072939785494123,.2912780254768772,.29182713584866565,.2923767279878496,.29292680090864315,.2934773536219338,.29402838513528917,.29457989445295973,.29513188057588585,.29568434250170006,.29623727922473464,.29679068973602357,.29734457302331047,.2978989280710507,.29845375386041895,.29900904936931183,.2995648135723556,.30012104544090823,.3006777439430678,.3012349080436746,.3017925367043191,.3023506288833448,.3029091835358557,.30346819961371974,.3040276760655758,.30458761183683747,.3051480058697006,.3057088571031463,.3062701644729489,.3068319269116793,.3073941433487128,.30795681271023223,.3085199339192366,.3090835058955434,.30964752755579783,.3102119978134755,.310776915578891,.3113422797592008,.31190808925841257,.31247434297738774,.3130410398138504,.3136081786623906,.31417575841447315,.314743777958441,.315312236179524,.31588113195984213,.3164504641784152,.3170202317111653,.3175904334309262,.31816106820744827,.31873213490740426,.31930363239439713,.31987555952896496,.320447915168589,.3210206981676982,.3215939073776781,.3221675416468748,.3227415998206041,.3233160807411556,.323890983247802,.3244663061768032,.3250420483614154,.32561820863189567,.326194785815511,.32677177873654273,.32734918621629605,.3279270070731042,.32850524012233795,.32908388417641043,.3296629380447862,.3302424005339859,.33082227044759616,.3314025465862737,.33198322774775557,.3325643127268634,.3331458003155132,.33372768930272056,.33430997847460975,.33489266661441897,.3354757525025104,.33605923491637446,.33664311263064056,.33722738441708133,.33781204904462336,.3383971052793514,.3389825518845191,.33956838762055386,.34015461124506713,.34074122151285924,.3413282171759301,.34191559698348384,.3425033596819399,.3430915040149374,.3436800287233463,.3442689325452723,.3448582142160675,.3454478724683355,.3460379060319425,.3466283136340221,.34721909399898626,.34781024584853093,.3484017679016465,.3489936588746233,.3495859174810627,.35017854243188234,.3507715324353273,.3513648861969756,.35195860241974897,.35255267980391913,.3531471170471181,.3537419128443442,.35433706588797353,.3549325748677652,.35552843847087284,.35612465538185045,.3567212242826634,.35731814385269467,.35791541276875594,.3585130297050936,.35911099333340013,.35970930232282017,.36030795533996196,.3609069510489035,.3615062881112039,.3621059651859094,.3627059809295652,.3633063339962226,.3639070230374475,.3645080467023315,.36510940363749816,.36571109248711475,.3663131118928987,.3669154604941294,.36751813692765434,.3681211398279013,.3687244678268846,.3693281195542174,.36993209363711743,.37053638870041994,.37114100336658357,.3717459362557026,.3723511859855138,.37295675117140825,.37356263042643806,.37416882236132876,.3747753255844857,.3753821387020067,.3759892603176885,.37659668903303906,.3772044234472847,.37781246215738223,.3784208037580258,.37902944684165935,.37963838999848376,.3802476318164691,.38085717088136173,.3814670057766966,.38207713508380486,.3826875573818258,.38329827124771443,.3839092752562537,.3845205679800622,.38513214798960627,.3857440138532078,.3863561641370564,.3869685974052172,.3875813122196432,.38819430714018294,.38880758072459304,.3894211315285459,.39003495810564237,.3906490590074193,.3912634327833624,.39187807798091384,.392492993145485,.3931081768204645,.3937236275472306,.3943393438651594,.3949553243116375,.39557156742206984,.39618807172989284,.3968048357665821,.3974218580616654,.3980391371427307,.3986566715354394,.3992744597635337,.39989250034885054,.4005107918113288,.4011293326690232,.40174812143811156,.402367156632909,.402986436765875,.4036059603476275,.40422572588695044,.40484573189080764,.4054659768643503,.4060864593109312,.40670717773211196,.4073281306276775,.40794931649564325,.4085707338322693,.4091923811320694,.4098142568878216,.4104363595905812,.411058687729689,.4116812397927851,.4123040142658171,.4129270096330539,.41355022437709404,.4141736569788794,.41479730591770386,.41542116967122655,.4160452467154809,.41666953552488806,.41729403457226555,.41791874232884124,.41854365726426157,.4191687778466059,.41979410254239446,.4204196298166031,.4210453581326711,.4216712859525158,.42229741173654084,.42292373394365035,.42355025103125765,.42417696145529926,.42480386367024364,.4254309561291053,.4260582372834536,.42668570558342683,.42731335947774096,.427941197413704,.4285692178372246,.4291974191928266,.4298257999236573,.4304543584715025,.4310830932767946,.43171200277862765,.4323410854147656,.43297033962165715,.4335997638344443,.4342293564869771,.43485911601182214,.43548904084027756,.43611912940238157,.43674938012692716,.43737979144147093,.43801036177234787,.43864108954468,.43927197318239136,.4399030111082167,.4405342017437162,.4411655435092847,.441797034824166,.4424286741064623,.4430604597731485,.4436923902400818,.44432446392201574,.44495667923261006,.4455890345844448,.44622152838903,.44685415905682,.447486924997223,.44811982461861544,.4487528563283517,.4493860185327786,.4500193096372446,.4506527280461149,.4512862721627804,.4519199403896729,.4525537311282741,.45318764277913054,.4538216737418631,.4544558224151818,.45509008719689487,.4557244664839243,.4563589586723146,.4569935621572476,.45762827533305395,.45826309659322356,.4588980243304209,.4595330569364939,.46016819280248933,.4608034303186621,.46143876787449034,.46207420385868464,.46270973665920334,.46334536466326204,.46398108625734846,.46461689982723203,.46525280375797906,.4658887964339621,.4665248762388751,.4671610415557432,.46779729076693727,.4684336222541841,.4690700343985811,.469706525580606,.4703430941801321,.47097973857643766,.4716164571482213,.4722532482736114,.47289011033018136,.4735270416949591,.4741640407444426,.47480110585460916,.47543823540093066,.47607542775838335,.47671268130146305,.4773499944041947,.4779873654401476,.4786247927824452,.4792622748037802,.4798998098764244,.48053739637224363,.4811750326627079,.48181271711890633,.4824504481115568,.4830882240110216,.4837260431873166,.4843639040101272,.4850018048488174,.48563974407244537,.48627772004977327,.4869157311492825,.4875537757391833,.48819185218743005,.48882995886173125,.48946809412956466,.49010625635818694,.4907444439146492,.4913826551658067,.49202088847833386,.4926591422187346,.4932974147533571,.49393570444840385,.49457400966994697,.49521232878393784,.4958506601562227,.4964890021525521,.49712735313859635,.4977657114799554,.4984040755421741,.4990424436907518,.4996808142911581,.5003191857088426,.5009575563092482,.5015959244578263,.5022342885200449,.5028726468614043,.5035109978474479,.5041493398437776,.5047876712160625,.5054259903300531,.5060642955515962,.5067025852466432,.5073408577812658,.5079791115216661,.5086173448341933,.5092555560853511,.5098937436418134,.5105319058704354,.5111700411382687,.5118081478125703,.5124462242608171,.5130842688507175,.5137222799502267,.514360255927555,.514998195151183,.5156360959898728,.5162739568126834,.5169117759889788,.5175495518884435,.5181872828810937,.5188249673372921,.5194626036277568,.520100190123576,.5207377251962197,.5213752072175548,.5220126345598528,.5226500055958057,.523287318698537,.5239245722416166,.5245617645990697,.5251988941453912,.5258359592555574,.5264729583050408,.527109889669819,.527746751726389,.5283835428517787,.5290202614235623,.5296569058198682,.5302934744193943,.5309299656014189,.5315663777458159,.5322027092330631,.5328389584442572,.5334751237611248,.5341112035660379,.5347471962420213,.5353831001727684,.5360189137426515,.536654635336738,.537290263340797,.5379257961413157,.5385612321255097,.5391965696813379,.539831807197511,.5404669430635065,.5411019756695791,.5417369034067764,.5423717246669464,.5430064378427527,.5436410413276854,.544275533516076,.5449099128031055,.545544177584819,.5461783262581369,.5468123572208698,.5474462688717263,.5480800596103278,.5487137278372196,.5493472719538854,.5499806903627558,.5506139814672221,.5512471436716483,.5518801753813849,.5525130750027774,.55314584094318,.5537784716109699,.5544109654155556,.5550433207673903,.5556755360779843,.5563076097599182,.5569395402268518,.5575713258935381,.558202965175834,.5588344564907153,.5594657982562842,.5600969888917837,.5607280268176087,.5613589104553199,.5619896382276525,.5626202085585293,.5632506198730729,.5638808705976184,.5645109591597228,.5651408839881782,.565770643513023,.5664002361655557,.5670296603783432,.5676589145852348,.5682879972213724,.5689169067232054,.5695456415284978,.570174200076343,.5708025808071734,.5714307821627753,.5720588025862963,.5726866405222594,.5733142944165731,.5739417627165464,.574569043870895,.5751961363297567,.5758230385447007,.5764497489687423,.57707626605635,.5777025882634595,.5783287140474842,.5789546418673289,.5795803701833973,.5802058974576059,.5808312221533941,.5814563427357384,.5820812576711591,.5827059654277348,.5833304644751119,.5839547532845191,.5845788303287738,.5852026940822965,.5858263430211206,.586449775622906,.5870729903669465,.5876959857341832,.5883187602072149,.588941312270311,.5895636404094191,.5901857431121788,.5908076188679307,.5914292661677307,.5920506835043571,.5926718693723232,.593292822267888,.5939135406890692,.5945340231356501,.595154268109193,.5957742741130495,.5963940396523728,.5970135632341254,.5976328433670917,.5982518785618884,.5988706673309772,.5994892081886716,.6001074996511495,.6007255402364663,.601343328464561,.6019608628572696,.6025781419383346,.6031951642334179,.6038119282701075,.6044284325779306,.6050446756883625,.6056606561348405,.6062763724527698,.6068918231795358,.607507006854515,.6081219220190862,.6087365672166379,.609350940992581,.6099650418943576,.6105788684714542,.6111924192754074,.6118056928598175,.6124186877803568,.6130314025947827,.6136438358629439,.6142559861467926,.6148678520103937,.6154794320199378,.6160907247437466,.6167017287522859,.6173124426181742,.6179228649161951,.6185329942233037,.6191428291186386,.6197523681835309,.6203616100015162,.620970553158341,.6215791962419746,.6221875378426177,.6227955765527153,.6234033109669612,.6240107396823119,.6246178612979933,.6252246744155143,.6258311776386716,.6264373695735622,.6270432488285917,.6276488140144862,.6282540637442977,.6288589966334168,.6294636112995801,.6300679063628826,.6306718804457829,.6312755321731157,.6318788601720987,.6324818630723457,.633084539505871,.6336868881071016,.6342889075128852,.6348905963625018,.6354919532976688,.6360929769625528,.6366936660037774,.6372940190704348,.6378940348140909,.6384937118887968,.6390930489510964,.6396920446600384,.6402906976771802,.6408890066666006,.6414869702949064,.6420845872312444,.6426818561473056,.6432787757173373,.6438753446181495,.6444715615291274,.6450674251322351,.6456629341120271,.6462580871556558,.6468528829528822,.6474473201960812,.648041397580251,.6486351138030244,.649228467564673,.6498214575681179,.6504140825189373,.6510063411253767,.6515982320983538,.6521897541514694,.6527809060010137,.653371686365978,.6539620939680578,.6545521275316648,.6551417857839326,.6557310674547276,.656319971276654,.656908495985063,.6574966403180601,.6580844030165162,.6586717828240702,.6592587784871411,.6598453887549329,.6604316123794461,.6610174481154811,.6616028947206489,.6621879509553766,.6627726155829187,.6633568873693597,.6639407650836259,.6645242474974896,.665107333385581,.6656900215253906,.6662723106972798,.6668541996844868,.6674356872731366,.6680167722522448,.6685974534137267,.6691777295524038,.6697575994660141,.6703370619552141,.6709161158235899,.671494759877662,.6720729929268958,.6726508137837043,.6732282212634576,.673805214184489,.6743817913681043,.6749579516385849,.6755336938231971,.6761090167521979,.6766839192588444,.6772584001793962,.6778324583531256,.6784060926223219,.6789793018323018,.6795520848314114,.6801244404710354,.6806963676056028,.6812678650925957,.681838931792552,.6824095665690741,.6829797682888348,.6835495358215852,.6841188680401582,.6846877638204767,.685256222041559,.6858242415855271,.6863918213376097,.6869589601861503,.6875256570226123,.6880919107415877,.6886577202407995,.6892230844211098,.6897880021865245,.6903524724442025,.690916494104457,.6914800660807634,.6920431872897678,.6926058566512876,.6931680730883211,.6937298355270511,.6942911428968537,.6948519941302997,.6954123881631629,.6959723239344242,.6965318003862803,.6970908164641446,.6976493711166555,.698207463295681,.6987650919563254,.6993222560569325,.699878954559092,.7004351864276444,.7009909506306882,.7015462461395814,.7021010719289495,.7026554269766896,.7032093102639765,.7037627207752657,.7043156574983003,.7048681194241142,.7054201055470403,.7059716148647112,.7065226463780665,.7070731990913568,.7076232720121505,.7081728641513347,.708721974523123,.7092706021450588,.7098187460380214,.7103664052262285,.7109135787372416,.7114602656019704,.7120064648546796,.7125521755329887,.7130973966778802,.7136421273337017,.7141863665481734,.7147301133723876,.7152733668608169,.715816126071316,.7163583900651287,.7169001579068885,.7174414286646249,.7179822014097662,.7185224752171463,.7190622491650045,.7196015223349922,.7201402938121755,.7206785626850416,.7212163280454988,.7217535889888824,.7222903446139581,.7228265940229275,.7233623363214278,.7238975706185387,.724432296026784,.7249665116621384,.7255002166440263,.7260334100953286,.7265660911423845,.7270982589149972,.7276299125464343,.7281610511734322,.7286916739361999,.7292217799784231,.7297513684472647,.7302804384933701,.730808989270869,.731337019937381,.7318645296540149,.7323915175853739,.7329179828995599,.7334439247681729,.7339693423663167,.7344942348725998,.7350186014691416,.7355424413415703,.7360657536790295,.7365885376741784,.7371107925231977,.737632517425788,.7381537115851752,.7386743742081118,.7391945045048817,.7397141016892989,.7402331649787126,.7407516935940084,.7412696867596126,.7417871437034914,.7423040636571554,.7428204458556608,.7433362895376132,.7438515939451673,.7443663583240305,.7448805819234647,.7453942639962894,.7459074037988813,.7464200005911783,.7469320536366798,.7474435622024516,.7479545255591237,.7484649429808946,.7489748137455323,.7494841371343777,.7499929124323429,.7505011389279159,.7510088159131602,.7515159426837188,.7520225185388131,.7525285427812454,.7530340147174003,.7535389336572478,.7540432989143417,.7545471098058225,.7550503656524188,.7555530657784494,.7560552095118218,.7565567961840363,.7570578251301847,.7575582956889547,.7580582072026273,.7585575590170797,.759056350481786,.7595545809498194,.7600522497778507,.7605493563261508,.7610458999585908,.7615418800426448,.7620372959493871,.762532147053496,.7630264327332528,.7635201523705442,.7640133053508608,.7645058910632988,.7649979089005601,.7654893582589548,.765980238538398,.7664705491424135,.7669602894781319,.7674494589562935,.767938056991246,.7684260830009458,.7689135364069586,.7694004166344605,.7698867231122355,.7703724552726772,.7708576125517904,.7713421943891883,.7718262002280942,.7723096295153409,.7727924817013718,.7732747562402391,.7737564525896047,.7742375702107394,.7747181085685246,.7751980671314491,.7756774453716111,.776156242764716,.7766344587900794,.7771120929306228,.7775891446728751,.7780656135069718,.7785414989266559,.7790168004292751,.7794915175157822,.7799656496907343,.7804391964622941,.780912157342226,.7813845318458972,.7818563194922765,.7823275198039352,.7827981323070434,.783268156531371,.7837375920102858,.784206438280755,.7846746948833406,.785142361362201,.7856094372650884,.7860759221433502,.7865418155519248,.7870071170493426,.7874718261977232,.7879359425627768,.7883994657137998,.7888623952236758,.7893247306688727,.7897864716294438,.7902476176890232,.7907081684348265,.7911681234576483,.791627482351863,.7920862447154196,.7925444101498429,.7930019782602302,.7934589486552528,.7939153209471497,.7943710947517294,.7948262696883663,.7952808453800015,.7957348214531377,.7961881975378389,.7966409732677284,.7970931482799888,.7975447222153564,.7979956947181219,.7984460654361272,.7988958340207648,.7993450001269738,.7997935634132393,.8002415235415886,.8006888801775924,.8011356329903583,.8015817816525314,.8020273258402907,.8024722652333489,.802916599514947,.8033603283718539,.8038034514943633,.8042459685762926,.8046878793149783,.805129183411275,.8055698805695517,.8060099704976917,.806449452907087,.8068883275126364,.8073265940327455,.80776425218932,.8082013017077656,.8086377423169842,.8090735737493726,.8095087957408174,.8099434080306933,.8103774103618604,.8108108024806623,.8112435841369201,.8116757550839321,.8121073150784697,.8125382638807757,.8129686012545588,.8133983269669927,.813827440788711,.8142559424938073,.8146838318598278,.8151111086677713,.8155377727020836,.8159638237506572,.816389261604825,.8168140860593583,.8172382969124627,.8176618939657769,.8180848770243664,.8185072458967211,.8189290003947519,.8193501403337888,.8197706655325738,.8201905758132604,.820609871001408,.8210285509259805,.8214466154193398,.8218640643172446,.8222808974588443,.8226971146866784,.8231127158466693,.8235277007881205,.823942069363712,.8243558214294977,.8247689568448993,.825181475472704,.8255933771790599,.8260046618334728,.826415329308801,.8268253794812516,.8272348122303765,.8276436274390702,.8280518249935616,.828459404783413,.8288663667015148,.8292727106440827,.8296784365106509,.8300835442040693,.8304880336304994,.8308919046994101,.8312951573235723,.831697791419055,.832099806905221,.8325012037047237,.8329019817434997,.833302140950767,.8337016812590187,.8341006026040205,.834498904924804,.8348965881636631,.8352936522661486,.8356900971810659,.8360859228604673,.836481129259649,.8368757163371454,.8372696840547262,.8376630323773898,.8380557612733581,.8384478707140746,.8388393606741957,.8392302311315889,.8396204820673256,.840010113465679,.8403991253141158,.8407875176032933,.8411752903270537,.8415624434824205,.8419489770695909,.8423348910919326,.8427201855559775,.8431048604714187,.8434889158511027,.8438723517110256,.8442551680703274,.8446373649512884,.8450189423793213,.8453999003829675,.8457802389938918,.8461599582468773,.8465390581798189,.8469175388337189,.8472954002526809,.8476726424839063,.848049265577686,.8484252695873968,.8488006545694953,.8491754205835134,.849549567692051,.8499230959607722,.8502960054583977,.8506682962567025,.8510399684305066,.8514110220576715,.8517814572190938,.852151273998701,.8525204724834432,.8528890527632893,.8532570149312204,.8536243590832253,.8539910853182933,.8543571937384082,.8547226844485436,.8550875575566578,.855451813173685,.8558154514135321,.8561784723930712,.8565408762321354,.856902663053511,.8572638329829326,.857624386149076,.8579843226835548,.858343642720911,.858702346398611,.8590604338570388,.8594179052394914,.8597747606921702,.8601310003641764,.8604866244075048,.860841632977038,.8611960262305387,.8615498043286449,.861902967434863,.8622555157155628,.862607449339969,.8629587684801567,.8633094733110445,.8636595640103888,.8640090407587764,.8643579037396187,.864706153139145,.8650537891463979,.8654008119532237,.8657472217542685,.8660930187469718,.8664382031315576,.8667827751110311,.8671267348911693,.8674700826805173,.8678128186903795,.8681549431348143,.8684964562306263,.8688373581973624,.8691776492573018,.8695173296354518,.8698563995595396,.8701948592600082,.8705327089700061,.8708699489253837,.8712065793646848,.8715426005291415,.8718780126626657,.8722128160118436,.8725470108259283,.8728805973568343,.8732135758591288,.8735459465900259,.87387770980938,.8742088657796794,.8745394147660379,.8748693570361893,.8751986928604797,.8755274225118623,.8758555462658877,.8761830644006998,.8765099771970264,.8768362849381752,.8771619879100236,.8774870864010145,.8778115807021467,.8781354711069713,.8784587579115815,.8787814414146069,.8791035219172068,.8794249997230628,.8797458751383715,.8800661484718382,.8803858200346684,.8807048901405631,.8810233591057088,.8813412272487728,.8816584948908941,.8819751623556789,.8822912299691905,.8826066980599439,.8829215669588977,.8832358369994489,.8835495085174228,.8838625818510677,.8841750573410472,.8844869353304337,.8847982161646994,.885108900191711,.8854189877617205,.8857284792273604,.8860373749436343,.8863456752679102,.886653380559913,.8869604911817194,.8872670074977466,.8875729298747479,.8878782586818046,.888182994290319,.888487137074006,.8887906874088866,.8890936456732802,.8893960122477981,.8896977875153345,.8899989718610599,.8902995656724149,.8905995693390999,.8908989832530707,.8911978078085289,.8914960434019163,.8917936904319057,.8920907492993941,.8923872204074954,.8926831041615337,.8929784009690342,.8932731112397163,.8935672353854862,.8938607738204305,.8941537269608069,.894446095225037,.8947378790336998,.8950290788095239,.8953196949773787,.8956097279642685,.8958991781993235,.896188046113794,.8964763321410407,.896764036716529,.8970511602778198,.897337703264564,.8976236661184922,.8979090492834096,.8981938532051865,.8984780783317523,.8987617251130868,.8990447940012125,.8993272854501877,.8996091999160988,.8998905378570519,.9001712997331657,.9004514860065638,.9007310971413673,.9010101336036869,.9012885958616146,.9015664843852167,.9018437996465272,.9021205421195377,.9023967122801918,.9026723106063756,.9029473375779127,.9032217936765532,.9034956793859686,.9037689951917427,.9040417415813649,.9043139190442211,.9045855280715877,.9048565691566219,.9051270427943567,.9053969494816902,.90566628971738,.9059350640020335,.9062032728381035,.9064709167298768,.9067379961834682,.9070045117068127,.9072704638096585,.9075358530035572,.9078006798018577,.9080649447196982,.9083286482739984,.9085917909834513,.9088543733685157,.9091163959514088,.9093778592560985,.9096387638082947,.9098991101354423,.9101588987667133,.9104181302329998,.9106768050669044,.9109349238027338,.9111924869764916,.9114494951258688,.9117059487902373,.9119618485106413,.9122171948297914,.9124719882920539,.9127262294434454,.9129799188316239,.9132330570058818,.9134856445171373,.9137376819179275,.9139891697623994,.914240108606304,.9144904990069866,.9147403415233804,.9149896367159973,.9152383851469229,.9154865873798053,.9157342439798494,.9159813555138088,.9162279225499783,.9164739456581854,.9167194254097829,.9169643623776411,.9172087571361409,.9174526102611646,.917695922330089,.9179386939217773,.9181809256165722,.9184226179962869,.9186637716441985,.9189043871450391,.9191444650849894,.9193840060516701,.9196230106341341,.919861479422859,.9200994130097402,.9203368119880815,.9205736769525885,.9208100084993609,.9210458072258845,.9212810737310235,.9215158086150126,.9217500124794498,.9219836859272886,.92221682956283,.9224494439917148,.9226815298209157,.9229130876587313,.9231441181147758,.9233746217999733,.9236045993265489,.9238340513080225,.9240629783591996,.9242913810961642,.9245192601362712,.9247466160981395,.924973449601643,.9251997612679034,.9254255517192831,.9256508215793774,.9258755714730065,.9260998020262079,.9263235138662289,.9265467076215197,.9267693839217245,.9269915433976749,.9272131866813814,.9274343144060273,.9276549272059595,.9278750257166819,.9280946105748469,.9283136824182496,.9285322418858183,.9287502896176079,.928967826254792,.9291848524396564,.92940136881559,.9296173760270778,.9298328747196947,.9300478655400957,.93026234913601,.930476326156233,.9306897972506193,.9309027630700742,.9311152242665472,.9313271814930236,.9315386354035184,.9317495866530674,.9319600358977201,.9321699837945331,.932379431001562,.9325883781778537,.9327968259834394,.9330047750793271,.9332122261274945,.9334191797908811,.9336256367333807,.9338315976198346,.9340370631160241,.9342420338886626,.9344465106053887,.934650493934759,.9348539845462404,.9350569831102028,.9352594902979118,.9354615067815215,.9356630332340676,.9358640703294588,.9360646187424709,.9362646791487388,.9364642522247494,.9366633386478344,.9368619390961628,.9370600542487337,.9372576847853697,.937454831386709,.9376514947341978,.9378476755100841,.9380433743974103,.9382385920800048,.9384333292424768,.9386275865702072,.9388213647493433,.9390146644667898,.9392074864102029,.9393998312679825,.9395916997292663,.9397830924839206,.9399740102225349,.9401644536364143,.9403544234175727,.9405439202587247,.9407329448532799,.9409214978953345,.941109580079666,.9412971921017246,.9414843346576264,.9416710084441471,.9418572141587148,.9420429524994026,.9422282241649218,.9424130298546151,.9425973702684497,.9427812461070102,.9429646580714913,.9431476068636916,.9433300931860064,.9435121177414207,.9436936812335023,.9438747843663947,.9440554278448114,.9442356123740274,.9444153386598735,.9445946074087291,.9447734193275154,.9449517751236883,.9451296755052324,.9453071211806536,.9454841128589724,.9456606512497171,.9458367370629172,.9460123710090969,.9461875537992679,.946362286144923,.946536568758029,.9467104023510211,.9468837876367947,.9470567253286999,.9472292161405339,.9474012607865361,.9475728599813792,.9477440144401641,.9479147248784129,.9480849920120625,.9482548165574578,.948424199231345,.9485931407508651,.9487616418335483,.9489297031973061,.9490973255604254,.949264509641562,.9494312561597348,.9495975658343179,.9497634393850354,.949928877531954,.9500938809954779,.9502584504963406,.9504225867556003,.9505862904946318,.950749562435122,.9509124032990619,.951074813808741,.9512367946867407,.9513983466559289,.9515594704394523,.9517201667607309,.9518804363434513,.9520402799115617,.9521996981892638,.9523586919010076,.9525172617714852,.9526754085256247,.9528331328885833,.9529904355857418,.9531473173426979,.953303778885261,.9534598209394449,.9536154442314624,.9537706494877187,.9539254374348064,.9540798087994978,.9542337643087402,.9543873046896489,.9545404306695023,.9546931429757346,.9548454423359305,.9549973294778189,.9551488051292678,.9552998700182771,.9554505248729732,.9556007704216033,.9557506073925295,.9559000365142222,.9560490585152549,.9561976741242981,.9563458840701138,.9564936890815487,.9566410898875295,.9567880872170567,.9569346817991982,.9570808743630842,.9572266656379016,.9573720563528876,.9575170472373244,.9576616390205335,.9578058324318692,.9579496282007146,.9580930270564743,.9582360297285691,.9583786369464311,.9585208494394978,.9586626679372054,.9588040931689849,.958945125864255,.9590857667524181,.9592260165628531,.9593658760249112,.9595053458679093,.9596444268211255,.9597831196137933,.9599214249750951,.9600593436341587,.9601968763200504,.9603340237617695,.960470786688244,.9606071658283243,.9607431619107784,.9608787756642857,.9610140078174327,.9611488590987068,.961283330236492,.9614174219590622,.961551134994577,.9616844700710763,.9618174279164748,.9619500092585569,.9620822148249712,.9622140453432259,.9623455015406829,.9624765841445534,.962607293881892,.9627376314795921,.9628675976643808,.9629971931628131,.9631264187012677,.9632552750059413,.9633837628028444,.9635118828177949,.9636396357764142,.9637670224041217,.9638940434261305,.9640206995674411,.9641469915528377,.9642729201068826,.9643984859539119,.9645236898180297,.9646485324231039,.9647730144927609,.9648971367503814,.9650208999190947,.9651443047217747,.9652673518810341,.9653900421192211,.9655123761584129,.9656343547204124,.9657559785267421,.9658772482986413,.9659981647570591,.9661187286226515,.9662389406157755,.9663588014564858,.9664783118645288,.9665974725593385,.9667162842600323,.966834747685406,.9669528635539291,.9670706325837403,.9671880554926435,.9673051329981028,.9674218658172379,.9675382546668196,.967654300263266,.9677700033226374,.9678853645606317,.9680003846925804,.9681150644334447,.9682294044978099,.9683434055998815,.9684570684534815,.9685703937720433,.9686833822686077,.9687960346558185,.968908351645918,.9690203339507436,.9691319822817223,.9692432973498672,.9693542798657735,.9694649305396137,.9695752500811339,.9696852391996489,.9697948986040391,.9699042290027458,.9700132311037669,.9701219056146531,.9702302532425034,.9703382746939623,.9704459706752138,.9705533418919787,.9706603890495106,.9707671128525912,.9708735140055269,.9709795932121446,.9710853511757873,.9711907885993116,.9712959061850819,.971400704634968,.9715051846503402,.9716093469320666,.9717131921805077,.9718167210955139,.971919934376421,.9720228327220469,.9721254168306873,.972227687400112,.9723296451275616,.9724312907097434,.9725326248428278,.9726336482224442,.9727343615436784,.9728347655010677,.9729348607885981,.9730346480997001,.9731341281272453,.9732333015635435,.9733321691003377,.9734307314288018,.9735289892395361,.9736269432225652,.9737245940673325,.9738219424626983,.9739189890969355,.9740157346577268,.9741121798321608,.9742083253067281,.974304171767319,.9743997198992195,.9744949703871078,.9745899239150508,.9746845811665021,.9747789428242966,.9748730095706485,.9749667820871479,.9750602610547575,.9751534471538088,.9752463410639997,.9753389434643903,.9754312550334009,.9755232764488077,.9756150083877398,.975706451526677,.9757976065414455,.9758884741072155,.9759790548984973,.9760693495891393,.9761593588523242,.976249083360566,.9763385237857071,.976427680798915,.9765165550706799,.9766051472708113,.9766934580684347,.976781488131989,.976869238129224,.9769567087271966,.9770439005922684,.9771308143901027,.9772174507856617,.9773038104432034,.977389894026279,.97747570219773,.9775612356196853,.9776464949535586,.9777314808600455,.9778161939991203,.9779006350300344,.9779848046113122,.9780687034007495,.9781523320554097,.9782356912316227,.9783187815849804,.9784016037703352,.9784841584417974,.9785664462527318,.9786484678557559,.9787302239027367,.9788117150447887,.9788929419322708,.9789739052147843,.97905460554117,.9791350435595052,.9792152199171027,.979295135260507,.9793747902354922,.9794541854870595,.9795333216594353,.9796121993960681,.9796908193396263,.979769182131996,.9798472884142787,.9799251388267886,.9800027340090502,.9800800745997967,.9801571612369672,.980233994557704,.9803105751983512,.9803869037944517,.9804629809807458,.9805388073911678,.9806143836588449,.9806897104160944,.9807647882944217,.9808396179245182,.980914199936259,.9809885349587005,.9810626236200795,.9811364665478093,.9812100643684791,.9812834177078512,.9813565271908592,.9814293934416056,.9815020170833605,.9815743987385589,.981646539028799,.9817184385748401,.9817900979966008,.981861517913157,.9819326989427399,.9820036417027342,.9820743468096759,.982144814879251,.9822150465262929,.9822850423647811,.9823548030078392,.9824243290677328,.9824936211558684,.9825626798827904,.9826315058581808,.9827000996908563,.9827684619887669,.9828365933589942,.9829044944077499,.9829721657403736,.9830396079613316,.9831068216742147,.9831738074817369,.9832405659857338,.983307097787161,.9833734034860918,.9834394836817164,.9835053389723402,.9835709699553818,.9836363772273716,.9837015613839506,.9837665230198686,.9838312627289821,.9838957811042542,.9839600787377518,.9840241562206447,.9840880141432039,.9841516530948006,.984215073663904,.984278276438081,.9843412620039935,.984404030947398,.9844665838531437,.9845289213051714,.9845910438865121,.9846529521792853,.9847146467646982,.9847761282230445,.9848373971337022,.9848984540751333,.984959299624882,.9850199343595737,.9850803588549135,.9851405736856852,.98520057942575,.9852603766480453,.9853199659245837,.9853793478264515,.9854385229238075,.9854974917858825,.9855562549809774,.9856148130764626,.9856731666387765,.9857313162334249,.9857892624249793,.9858470057770766,.9859045468524172,.9859618862127647,.9860190244189444,.9860759620308425,.986132699607405,.986189237706637,.9862455768856013,.9863017177004175,.9863576607062616,.9864134064573644,.986468955507011,.9865243084075394,.9865794657103403,.9866344279658559,.9866891957235787,.9867437695320512,.9867981499388647,.9868523374906586,.9869063327331196,.9869601362109806,.9870137484680206,.9870671700470631,.9871204014899759,.9871734433376701,.9872262961300995,.9872789604062596,.9873314367041873,.9873837255609599,.9874358275126944,.9874877430945471,.9875394728407123,.9875910172844226,.9876423769579473,.9876935523925926,.9877445441187003,.9877953526656473,.9878459785618458,.9878964223347415,.9879466845108139,.9879967656155754,.9880466661735708,.9880963867083771,.9881459277426021,.9881952897978847,.9882444733948945,.9882934790533305,.9883423072919212,.9883909586284241,.988439433579625,.9884877326613383,.988535856388405,.9885838052746942,.9886315798331015,.9886791805755485,.9887266080129832,.9887738626553791,.9888209450117351,.9888678555900748,.9889145948974465,.9889611634399226,.9890075617225994,.9890537902495973,.9890998495240594,.989145740048152,.9891914623230645,.9892370168490087,.9892824041252183,.9893276246499492,.9893726789204794,.9894175674331082,.989462290683156,.9895068491649651,.989551243371898,.9895954737963386,.9896395409296911,.9896834452623803,.9897271872838512,.9897707674825695,.9898141863460205,.9898574443607097,.9899005420121623,.9899434797849235,.9899862581625581,.9900288776276507,.9900713386618053,.9901136417456455,.9901557873588144,.9901977759799746,.990239608086808,.9902812841560162,.99032280466332,.9903641700834598,.9904053808901954,.990446437556306,.9904873405535906,.9905280903528676,.9905686874239753,.9906091322357713,.9906494252561334,.9906895669519591,.990729557789166,.9907693982326918,.9908090887464943,.9908486297935518,.990888021835863,.9909272653344474,.990966360749345,.9910053085396171,.9910441091633461,.9910827630776353,.9911212707386101,.9911596326014173,.9911978491202256,.9912359207482262,.9912738479376322,.9913116311396798,.9913492708046278,.9913867673817582,.9914241213193764,.9914613330648117,.9914984030644169,.9915353317635696,.9915721196066715,.9916087670371496,.9916452744974558,.9916816424290676,.9917178712724886,.9917539614672481,.9917899134519027,.9918257276640352,.9918614045402561,.9918969445162037,.9919323480265441,.9919676155049719,.9920027473842109,.9920377440960138,.9920726060711633,.9921073337394721,.9921419275297836,.9921763878699723,.9922107151869439,.9922449099066364,.99227897245402,.992312903253098,.992346702726907,.9923803712975175,.9924139093860346,.992447317412598,.9924805957963829,.9925137449556007,.9925467653074993,.9925796572683633,.9926124212535151,.9926450576773155,.9926775669531636,.992709949493498,.9927422057097973,.9927743360125804,.9928063408114072,.9928382205148796,.9928699755306415,.9929016062653796,.9929331131248247,.992964496513751,.9929957568359781,.9930268944943708,.99305790989084,.9930888034263433,.9931195755008863,.9931502265135218,.9931807568623522,.993211166944529,.993241457156254,.9932716278927799,.993301679548411,.9933316125165038,.9933614271894683,.9933911239587676,.99342070321492,.9934501653474987,.9934795107451331,.993508739795509,.9935378528853704,.9935668504005193,.9935957327258166,.9936245002451833,.9936531533416012,.9936816923971135,.9937101177928254,.9937384299089057,.9937666291245868,.9937947158181659,.9938226903670059,.9938505531475358,.9938783045352523,.9939059449047197,.9939334746295718,.9939608940825118,.9939882036353138,.9940154036588232,.9940424945229585,.9940694765967104,.994096350248145,.9941231158444029,.9941497737517008,.9941763243353321,.9942027679596687,.9942291049881605,.9942553357833377,.9942814607068107,.9943074801192716,.9943333943804952,.9943592038493394,.9943849088837466,.994410509840745,.9944360070764484,.9944614009460584,.9944866918038647,.9945118800032465,.9945369658966728,.9945619498357041,.9945868321709933,.9946116132522861,.9946362934284229,.994660873047339,.9946853524560662,.9947097320007334,.9947340120265682,.994758192877897,.9947822748981471,.9948062584298468,.9948301438146274,.9948539313932233,.9948776215054737,.9949012144903233,.9949247106858239,.9949481104291346,.9949714140565237,.9949946219033693,.9950177343041607,.9950407515924994,.9950636741010997,.9950865021617907,.9951092361055166,.9951318762623385,.9951544229614347,.9951768765311028,.9951992372987597,.9952215055909438,.9952436817333155,.9952657660506585,.9952877588668808,.9953096605050162,.9953314712872251,.9953531915347956,.9953748215681452,.9953963617068213,.9954178122695027,.9954391735740008,.9954604459372607,.9954816296753622,.9955027251035214,.9955237325360915,.9955446522865641,.9955654846675703,.9955862299908824,.9956068885674143,.9956274607072233,.9956479467195111,.9956683469126251,.9956886615940593,.9957088910704561,.9957290356476068,.9957490956304538,.9957690713230904,.9957889630287637,.9958087710498745,.9958284956879793,.995848137243791,.9958676960171805,.9958871723071784,.995906566411975,.9959258786289227,.9959451092545367,.9959642585844967,.9959833269136474,.9960023145360009,.9960212217447364,.9960400488322033,.9960587960899211,.9960774638085813,.9960960522780484,.9961145617873615,.9961329926247353,.9961513450775615,.9961696194324102,.9961878159750311,.9962059349903548,.996223976762494,.996241941574745,.9962598297095888,.9962776414486929,.9962953770729119,.9963130368622893,.9963306210960589,.9963481300526453,.9963655640096667,.9963829232439346,.9964002080314565,.9964174186474363,.9964345553662761,.9964516184615773,.9964686082061422,.9964855248719754,.9965023687302843,.9965191400514817,.9965358391051862,.9965524661602243,.9965690214846309,.9965855053456514,.9966019180097426,.9966182597425745,.996634530809031,.9966507314732119,.9966668619984344,.9966829226472331,.9966989136813635,.9967148353618017,.9967306879487462,.9967464717016197,.99676218687907,.9967778337389717,.9967934125384275,.9968089235337692,.9968243669805599,.9968397431335945,.9968550522469019,.9968702945737455,.9968854703666258,.9969005798772804,.9969156233566865,.9969306010550617,.9969455132218659,.9969603601058018,.9969751419548175,.9969898590161071,.9970045115361124,.9970190997605238,.9970336239342829,.9970480843015823,.9970624811058687,.9970768145898428,.9970910849954618,.9971052925639403,.9971194375357517,.9971335201506302,.997147540647571,.9971614992648334,.9971753962399407,.9971892318096824,.9972030062101157,.9972167196765664,.997230372443631,.9972439647451773,.9972574968143467,.997270968883555,.9972843811844944,.997297733948134,.9973110274047225,.9973242617837886,.9973374373141428,.9973505542238791,.997363612740376,.997376613090298,.9973895554995976,.997402440193516,.9974152673965848,.9974280373326279,.9974407502247621,.9974534062953991,.9974660057662471,.9974785488583118,.997491035791898,.9975034667866112,.9975158420613588,.9975281618343518,.9975404263231061,.997552635744444,.9975647903144956,.9975768902487003,.9975889357618083,.997600927067882,.9976128643802972,.9976247479117453,.9976365778742337,.9976483544790882,.9976600779369539,.997671748457797,.9976833662509058,.9976949315248929,.9977064444876954,.9977179053465781,.9977293143081333,.9977406715782833,.9977519773622815,.9977632318647138,.9977744352895002,.997785587839896,.9977966897184939,.9978077411272247,.997818742267359,.997829693339509,.9978405945436296,.9978514460790198,.9978622481443246,.9978730009375358,.9978837046559943,.9978943594963907,.9979049656547674,.9979155233265197,.9979260327063973,.997936493988506,.997946907366309,.9979572730326282,.9979675911796457,.9979778619989058,.9979880856813157,.9979982624171473,.9980083923960388,.9980184758069958,.998028512838393,.9980385036779759,.9980484485128617,.9980583475295409,.9980682009138793,.9980780088511187,.9980877715258789,.9980974891221588,.9981071618233381,.9981167898121788,.9981263732708262,.998135912380811,.9981454073230501,.9981548582778488,.9981642654249014,.9981736289432934,.9981829490115025,.9981922258074002,.9982014595082533,.9982106502907253,.9982197983308777,.9982289038041717,.9982379668854695,.9982469877490359,.9982559665685394,.9982649035170541,.9982737987670609,.9982826524904488,.9982914648585166,.9983002360419745,.9983089662109448,.9983176555349643,.9983263041829852,.9983349123233762,.9983434801239252,.9983520077518389,.998360495373746,.9983689431556977,.9983773512631691,.9983857198610611,.9983940491137014,.9984023391848462,.9984105902376817,.9984188024348252,.9984269759383266,.9984351109096703,.9984432075097761,.9984512658990006,.9984592862371393,.9984672686834271,.9984752133965403,.9984831205345983,.9984909902551641,.9984988227152464,.9985066180713011,.9985143764792324,.9985220980943941,.9985297830715913,.9985374315650821,.9985450437285783,.9985526197152473,.9985601596777134,.9985676637680592,.9985751321378268,.9985825649380199,.9985899623191044,.99859732443101,.9986046514231323,.998611943444333,.9986192006429424,.9986264231667603,.9986336111630574,.9986407647785766,.9986478841595346,.9986549694516238,.9986620208000123,.9986690383493468,.9986760222437531,.9986829726268376,.998689889641689,.9986967734308796,.9987036241364663,.9987104418999926,.9987172268624894,.998723979164477,.9987306989459656,.9987373863464578,.998744041504949,.9987506645599293,.9987572556493849,.998763814910799,.9987703424811538,.9987768384969316,.9987833030941156,.9987897364081925,.9987961385741526,.9988025097264924,.9988088499992146,.9988151595258307,.9988214384393614,.9988276868723388,.9988339049568071,.9988400928243242,.9988462506059631,.9988523784323132,.9988584764334819,.9988645447390951,.9988705834782999,.9988765927797647,.9988825727716812,.9988885235817656,.9988944453372599,.9989003381649333,.9989062021910834,.9989120375415379,.9989178443416555,.9989236227163274,.9989293727899787,.9989350946865697,.998940788529597,.9989464544420954,.9989520925466384,.9989577029653404,.9989632858198572,.998968841231388,.9989743693206764,.9989798702080116,.9989853440132298,.998990790855716,.9989962108544042,.9990016041277799,.9990069707938809,.9990123109702982,.9990176247741779,.9990229123222224,.9990281737306916,.9990334091154038,.999038618591738,.9990438022746341,.9990489602785947,.9990540927176865,.9990591997055416,.9990642813553582,.9990693377799026,.99907436909151,.9990793754020864,.9990843568231088,.9990893134656276,.9990942454402671,.9990991528572275,.9991040358262852,.9991088944567947,.9991137288576902,.999118539137486,.9991233254042783,.9991280877657462,.9991328263291535,.9991375412013491,.999142232488769,.9991469002974372,.9991515447329671,.9991561659005623,.9991607639050186,.9991653388507248,.9991698908416636,.9991744199814138,.9991789263731504,.9991834101196467,.9991878713232755,.9991923100860093,.9991967265094228,.9992011206946938,.9992054927426037,.9992098427535396,.9992141708274952,.9992184770640717,.9992227615624796,.9992270244215393,.9992312657396831,.9992354856149557,.9992396841450154,.9992438614271358,.9992480175582069,.9992521526347359,.9992562667528487,.9992603600082911,.9992644324964299,.9992684843122542,.9992725155503765,.9992765263050338,.999280516670089,.999284486739032,.9992884366049808,.9992923663606826,.9992962760985155,.9993001659104889,.9993040358882451,.9993078861230608,.9993117167058474,.9993155277271529,.999319319277163,.9993230914457016,.9993268443222328,.9993305779958618,.9993342925553356,.9993379880890445,.9993416646850238,.9993453224309538,.9993489614141617,.9993525817216228,.9993561834399612,.9993597666554512,.9993633314540185,.9993668779212411,.9993704061423506,.9993739162022335,.9993774081854317,.9993808821761445,.9993843382582288,.9993877765152013,.9993911970302383,.9993945998861778,.9993979851655208,.9994013529504312,.9994047033227381,.9994080363639363,.9994113521551875,.9994146507773217,.9994179323108379,.9994211968359052,.9994244444323646,.9994276751797287,.9994308891571844,.9994340864435928,.9994372671174909,.9994404312570924,.9994435789402887,.9994467102446506,.9994498252474285,.9994529240255541,.9994560066556412,.9994590732139869,.9994621237765724,.9994651584190646,.9994681772168166,.9994711802448689,.9994741675779509,.9994771392904814,.9994800954565697,.999483036150017,.9994859614443171,.9994888714126579,.9994917661279218,.9994946456626872,.9994975100892295,.999500359479522,.9995031939052369,.9995060134377466,.9995088181481243,.9995116081071456,.9995143833852889,.999517144052737,.9995198901793774,.9995226218348043,.9995253390883188,.9995280420089301,.9995307306653568,.9995334051260275,.9995360654590824,.9995387117323732,.9995413440134656,.999543962369639,.9995465668678883,.9995491575749244,.9995517345571753,.9995542978807875,.9995568476116267,.9995593838152782,.999561906557049,.9995644159019681,.9995669119147873,.9995693946599828,.9995718642017558,.9995743206040332,.9995767639304692,.9995791942444461,.9995816116090743,.9995840160871952,.99958640774138,.9995887866339324,.9995911528268883,.9995935063820176,.999595847360825,.9995981758245502,.9996004918341701,.9996027954503985,.999605086733688,.9996073657442303,.9996096325419573,.9996118871865427,.9996141297374015,.9996163602536923,.9996185787943176,.9996207854179248,.9996229801829071,.9996251631474043,.9996273343693044,.9996294939062433,.9996316418156069,.9996337781545312,.9996359029799038,.9996380163483641,.9996401183163052,.9996422089398735,.999644288274971,.999646356377255,.9996484133021397,.9996504591047971,.9996524938401572,.9996545175629098,.9996565303275047,.9996585321881528,.9996605231988274,.9996625034132641,.9996644728849626,.9996664316671874,.999668379812968,.9996703173751005,.9996722444061484,.9996741609584433,.9996760670840852,.9996779628349446,.9996798482626623,.9996817234186506,.9996835883540943,.9996854431199514,.9996872877669539,.9996891223456087,.9996909469061984,.9996927614987825,.9996945661731974,.9996963609790581,.9996981459657587,.9996999211824731,.9997016866781561,.9997034425015436,.9997051887011547,.9997069253252909,.9997086524220383,.9997103700392677,.9997120782246353,.999713777025584,.9997154664893442,.9997171466629339,.9997188175931604,.9997204793266206,.9997221319097017,.9997237753885824,.9997254098092335,.9997270352174187,.9997286516586951,.9997302591784146,.9997318578217242,.999733447633567,.9997350286586829,.9997366009416093,.9997381645266821,.9997397194580363,.9997412657796069,.9997428035351295,.9997443327681412,.9997458535219813,.9997473658397923,.99974886976452,.9997503653389154,.999751852605534,.999753331606738,.9997548023846959,.9997562649813841,.9997577194385872,.9997591657978985,.9997606041007215,.99976203438827,.9997634567015692,.9997648710814562,.9997662775685806,.9997676762034061,.9997690670262099,.9997704500770845,.999771825395938,.999773193022495,.9997745529962968,.9997759053567029,.9997772501428912,.9997785873938589,.9997799171484231,.9997812394452216,.9997825543227136,.9997838618191804,.9997851619727263,.9997864548212786,.9997877404025892,.9997890187542349,.9997902899136178,.9997915539179669,.9997928108043375,.999794060609613,.9997953033705048,.9997965391235539,.9997977679051306,.9997989897514358,.9998002046985014,.999801412782191,.9998026140382009,.9998038085020604,.9998049962091325,.999806177194615,.9998073514935402,.9998085191407767,.9998096801710297,.9998108346188409,.9998119825185903,.9998131239044961,.9998142588106157,.9998153872708462,.999816509318925,.9998176249884306,.9998187343127835,.9998198373252459,.9998209340589235,.9998220245467654,.9998231088215649,.9998241869159603,.9998252588624355,.9998263246933202,.9998273844407913,.9998284381368729,.9998294858134371,.9998305275022048,.9998315632347461,.999832593042481,.9998336169566799,.9998346350084647,.9998356472288086,.9998366536485375,.99983765429833,.9998386492087187,.9998396384100897,.9998406219326846,.9998415998066,.9998425720617885,.9998435387280595,.9998444998350793,.9998454554123721,.9998464054893206,.9998473500951663,.9998482892590103,.9998492230098137,.9998501513763987,.9998510743874482,.9998519920715077,.9998529044569845,.9998538115721493,.9998547134451362,.9998556101039439,.9998565015764352,.9998573878903388,.9998582690732492,.9998591451526267,.9998600161557997,.9998608821099632,.9998617430421809,.9998625989793851,.9998634499483772,.9998642959758285,.9998651370882806,.9998659733121461,.9998668046737089,.9998676311991251,.9998684529144232,.9998692698455047,.999870082018145,.9998708894579934,.999871692190574,.9998724902412862,.9998732836354051,.9998740723980819,.9998748565543449,.9998756361290999,.9998764111471301,.9998771816330975,.9998779476115428,.9998787091068863,.999879466143428,.9998802187453489,.9998809669367105,.9998817107414559,.9998824501834106,.999883185286282,.999883916073661,.9998846425690219,.9998853647957231,.9998860827770075,.999886796536003,.9998875060957232,.9998882114790676,.9998889127088222,.9998896098076603,.9998903027981425,.9998909917027174,.9998916765437222,.9998923573433832,.9998930341238158,.9998937069070257,.999894375714909,.9998950405692526,.9998957014917348,.9998963585039259,.9998970116272885,.9998976608831779,.9998983062928427,.9998989478774256,.999899585657963,.9999002196553864,.9999008498905224,.999901476384093,.9999020991567165,.9999027182289075,.9999033336210779,.9999039453535369,.9999045534464917,.9999051579200475,.999905758794209,.9999063560888793,.9999069498238621,.9999075400188605,.9999081266934786,.9999087098672215,.9999092895594957,.9999098657896095,.999910438576774,.9999110079401027,.9999115738986123,.9999121364712235,.9999126956767607,.999913251533953,.9999138040614348,.9999143532777452,.9999148992013297,.9999154418505395,.999915981243633,.9999165173987752,.9999170503340389,.9999175800674046,.9999181066167612,.9999186299999064,.9999191502345469,.9999196673382992,.9999201813286894,.9999206922231544,.9999212000390414,.9999217047936092,.9999222065040281,.9999227051873801,.9999232008606601,.9999236935407753,.9999241832445462,.9999246699887072,.9999251537899063,.9999256346647061,.9999261126295836,.9999265877009316,.9999270598950578,.9999275292281861,.9999279957164566,.9999284593759264,.9999289202225693,.9999293782722767,.9999298335408578,.9999302860440401,.9999307357974695,.9999311828167111,.9999316271172493,.9999320687144879,.9999325076237512,.9999329438602836,.9999333774392507,.9999338083757388,.999934236684756,.9999346623812325,.9999350854800204,.9999355059958946,.9999359239435531,.9999363393376172,.9999367521926316,.9999371625230653,.999937570343312,.9999379756676896,.9999383785104414,.9999387788857365,.999939176807669,.9999395722902599,.9999399653474563,.9999403559931324,.9999407442410893,.9999411301050559,.999941513598689,.9999418947355733,.9999422735292222,.999942649993078,.9999430241405124,.9999433959848263,.9999437655392507,.9999441328169468,.9999444978310063,.9999448605944516,.9999452211202369,.999945579421247,.9999459355102993,.9999462894001431,.99994664110346,.9999469906328647,.9999473380009051,.9999476832200621,.9999480263027508,.9999483672613201,.9999487061080534,.9999490428551687,.9999493775148194,.9999497100990935,.9999500406200154,.9999503690895449,.9999506955195783,.9999510199219482,.9999513423084245,.9999516626907139,.9999519810804605,.9999522974892463,.9999526119285915,.9999529244099543,.9999532349447319,.99995354354426,.9999538502198142,.9999541549826089,.9999544578437988,.9999547588144785,.9999550579056832,.9999553551283883,.9999556504935109,.9999559440119087,.9999562356943813,.99995652555167,.9999568135944583,.9999570998333719,.9999573842789794,.9999576669417921,.9999579478322648,.9999582269607954,.999958504337726,.9999587799733426,.9999590538778753,.999959326061499,.9999595965343334,.9999598653064434,.9999601323878393,.9999603977884768,.9999606615182579,.9999609235870305,.9999611840045891,.9999614427806749,.9999616999249761,.999961955447128,.9999622093567136,.9999624616632635,.9999627123762564,.9999629615051193,.9999632090592276,.9999634550479055,.9999636994804263,.9999639423660125,.9999641837138362,.9999644235330193,.9999646618326337,.9999648986217015,.9999651339091953,.9999653677040387,.999965600015106,.999965830851223,.999966060221167,.9999662881336667,.9999665145974033,.9999667396210096,.9999669632130714,.9999671853821269,.9999674061366673,.999967625485137,.9999678434359336,.9999680599974086,.9999682751778671,.9999684889855686,.9999687014287265,.9999689125155091,.9999691222540394,.9999693306523952,.9999695377186097,.9999697434606717,.9999699478865252,.9999701510040705,.9999703528211641,.9999705533456184,.9999707525852026,.9999709505476428,.999971147240622,.9999713426717802,.9999715368487153,.9999717297789823,.9999719214700945,.999972111929523,.9999723011646972,.9999724891830052,.9999726759917935,.9999728615983678,.9999730460099928,.9999732292338924,.9999734112772504,.9999735921472099,.9999737718508742,.9999739503953068,.9999741277875313,.999974304034532,.9999744791432541,.9999746531206036,.9999748259734476,.9999749977086146,.9999751683328949,.99997533785304,.999975506275764,.9999756736077426,.9999758398556141,.9999760050259793,.9999761691254015,.9999763321604075,.9999764941374863,.9999766550630912,.9999768149436381,.999976973785507,.9999771315950419,.9999772883785503,.9999774441423045,.9999775988925408,.9999777526354604,.9999779053772291,.9999780571239777,.999978207881802,.9999783576567635,.9999785064548887,.9999786542821703,.9999788011445663,.9999789470480013,.9999790919983657,.9999792360015164,.999979379063277,.9999795211894377,.9999796623857555,.9999798026579548,.9999799420117269,.9999800804527308,.999980217986593,.9999803546189076,.9999804903552368,.999980625201111,.9999807591620287,.9999808922434568,.9999810244508309,.9999811557895554,.9999812862650035,.9999814158825174,.999981544647409,.999981672564959,.9999817996404181,.9999819258790067,.999982051285915,.9999821758663031,.9999822996253015,.9999824225680112,.9999825446995033,.99998266602482,.9999827865489742,.9999829062769496,.9999830252137013,.9999831433641556,.9999832607332102,.9999833773257344,.9999834931465692,.9999836082005277,.999983722492395,.999983836026928,.9999839488088565,.9999840608428826,.9999841721336808,.9999842826858987,.9999843925041566,.999984501593048,.9999846099571394,.9999847176009713,.9999848245290568,.9999849307458831,.9999850362559114,.9999851410635765,.9999852451732872,.9999853485894268,.9999854513163526,.9999855533583969,.999985654719866,.9999857554050412,.9999858554181789,.9999859547635103,.9999860534452416,.9999861514675548,.9999862488346066,.99998634555053,.9999864416194333,.9999865370454005,.9999866318324918,.9999867259847435,.9999868195061677,.9999869124007534,.9999870046724658,.9999870963252466,.9999871873630143,.9999872777896642,.9999873676090687,.9999874568250773,.9999875454415165,.9999876334621903,.9999877208908803,.9999878077313453,.9999878939873221,.9999879796625255,.9999880647606478,.9999881492853597,.99998823324031,.9999883166291259,.9999883994554127,.9999884817227547,.9999885634347147,.9999886445948339,.9999887252066332,.9999888052736117,.9999888847992482,.9999889637870004,.9999890422403055,.9999891201625802,.9999891975572208,.9999892744276031,.999989350777083,.9999894266089959,.9999895019266577,.9999895767333643,.9999896510323916,.999989724826996,.9999897981204147,.9999898709158648,.9999899432165447,.9999900150256333,.9999900863462904,.9999901571816568,.9999902275348547,.9999902974089869,.9999903668071382,.9999904357323742,.9999905041877425,.9999905721762721,.9999906397009737,.9999907067648398,.9999907733708452,.9999908395219462,.9999909052210816,.9999909704711721,.9999910352751212,.9999910996358145,.9999911635561199,.9999912270388887,.9999912900869539,.9999913527031321,.9999914148902226,.9999914766510075,.9999915379882524,.9999915989047056,.999991659403099,.9999917194861478,.9999917791565509,.9999918384169905,.9999918972701324,.9999919557186264,.9999920137651062,.999992071412189,.9999921286624766,.9999921855185544,.9999922419829924,.9999922980583447,.9999923537471498,.9999924090519307,.9999924639751948,.9999925185194346,.9999925726871269,.9999926264807335,.999992679902701,.9999927329554612,.9999927856414307,.9999928379630115,.9999928899225907,.9999929415225408,.9999929927652198,.9999930436529709,.9999930941881232,.9999931443729915,.9999931942098759,.9999932437010627,.9999932928488241,.9999933416554181,.999993390123089,.999993438254067,.9999934860505686,.9999935335147967,.9999935806489405,.9999936274551758,.9999936739356647,.9999937200925562,.9999937659279856,.9999938114440753,.9999938566429344,.999993901526659,.999993946097332,.9999939903570239,.9999940343077915,.9999940779516797,.99999412129072,.9999941643269314,.9999942070623209,.9999942494988823,.9999942916385973,.9999943334834352,.9999943750353532,.9999944162962958,.999994457268196,.9999944979529743,.9999945383525394,.999994578468788,.999994618303605,.9999946578588633,.9999946971364245,.9999947361381382,.9999947748658425,.999994813321364,.9999948515065179,.9999948894231079,.9999949270729266,.999994964457755,.9999950015793634,.9999950384395105,.9999950750399442,.9999951113824014,.9999951474686081,.9999951833002791,.9999952188791189,.9999952542068211,.9999952892850684,.9999953241155332,.9999953586998771,.9999953930397514,.9999954271367968,.9999954609926438,.9999954946089126,.999995527987213,.9999955611291448,.9999955940362975,.9999956267102506,.9999956591525736,.9999956913648262,.999995723348558,.999995755105309,.9999957866366092,.9999958179439788,.9999958490289289,.9999958798929603,.9999959105375648,.9999959409642244,.9999959711744117,.9999960011695902,.9999960309512137,.999996060520727,.9999960898795656,.9999961190291559,.9999961479709151,.9999961767062515,.9999962052365642,.9999962335632436,.9999962616876712,.9999962896112193,.999996317335252,.9999963448611241,.9999963721901821,.9999963993237638,.9999964262631985,.9999964530098068,.9999964795649008,.9999965059297844,.999996532105753,.9999965580940937,.9999965838960855,.9999966095129987,.999996634946096,.9999966601966317,.9999966852658521,.9999967101549952,.9999967348652915,.9999967593979632,.9999967837542248,.999996807935283,.9999968319423365,.9999968557765764,.9999968794391861,.9999969029313415,.9999969262542105,.999996949408954,.9999969723967249,.9999969952186689,.9999970178759242,.9999970403696216,.9999970627008846,.9999970848708295,.9999971068805652,.9999971287311936,.9999971504238093,.9999971719594997,.9999971933393454,.9999972145644198,.9999972356357893,.9999972565545135,.999997277321645,.9999972979382296,.999997318405306,.9999973387239067,.999997358895057,.9999973789197758,.999997398799075,.9999974185339603,.9999974381254304,.999997457574478,.9999974768820888,.9999974960492424,.9999975150769117,.9999975339660636,.9999975527176584,.9999975713326501,.9999975898119866,.9999976081566095,.9999976263674542,.9999976444454499,.99999766239152,.9999976802065814,.9999976978915454,.999997715447317,.9999977328747952,.9999977501748736,.9999977673484393,.9999977843963738,.9999978013195528,.9999978181188465,.9999978347951188,.9999978513492284,.999997867782028,.9999978840943649,.9999979002870806,.9999979163610111,.9999979323169872,.9999979481558336,.99999796387837,.9999979794854107,.9999979949777642,.9999980103562339,.9999980256216181,.9999980407747093,.9999980558162953,.9999980707471582,.9999980855680751,.9999981002798181,.9999981148831537,.9999981293788438,.9999981437676452,.9999981580503092,.9999981722275826,.999998186300207,.9999982002689191,.9999982141344507,.9999982278975286,.999998241558875,.999998255119207,.9999982685792372,.9999982819396732,.999998295201218,.9999983083645699,.9999983214304224,.9999983343994645,.9999983472723807,.9999983600498504,.9999983727325492,.9999983853211476,.9999983978163118,.9999984102187036,.9999984225289802,.9999984347477945,.999998446875795,.9999984589136257,.9999984708619267,.9999984827213332,.9999984944924767,.9999985061759838,.9999985177724777,.9999985292825767,.9999985407068952,.9999985520460435,.9999985633006278,.9999985744712501,.9999985855585083,.9999985965629965,.9999986074853046,.9999986183260186,.9999986290857202,.9999986397649878,.9999986503643954,.9999986608845134,.9999986713259079,.9999986816891417,.9999986919747735,.9999987021833583,.9999987123154472,.9999987223715877,.9999987323523236,.9999987422581949,.9999987520897379,.9999987618474854,.9999987715319665,.9999987811437067,.9999987906832281,.9999988001510488,.9999988095476838,.9999988188736445,.9999988281294387,.9999988373155708,.9999988464325418,.9999988554808491,.999998864460987,.9999988733734462,.999998882218714,.9999988909972747,.9999988997096089,.9999989083561941,.9999989169375046,.9999989254540114,.999998933906182,.9999989422944812,.99999895061937,.9999989588813071,.9999989670807471,.9999989752181422,.999998983293941,.9999989913085894,.9999989992625299,.9999990071562023,.9999990149900431,.9999990227644859,.9999990304799614,.9999990381368972,.9999990457357179,.9999990532768454,.9999990607606984,.9999990681876931,.9999990755582426,.9999990828727571,.9999990901316439,.9999990973353077,.9999991044841503,.9999991115785708,.9999991186189654,.9999991256057276,.9999991325392483,.9999991394199156,.9999991462481148,.9999991530242288,.9999991597486376,.9999991664217186,.9999991730438467,.9999991796153941,.9999991861367304,.9999991926082229,.9999991990302358,.9999992054031314,.9999992117272689,.9999992180030054,.9999992242306953,.9999992304106908,.9999992365433413,.9999992426289941,.9999992486679936,.9999992546606824,.9999992606074003,.9999992665084849,.9999992723642712,.9999992781750923,.9999992839412785,.9999992896631581,.9999992953410569,.9999993009752988,.9999993065662048,.9999993121140943,.9999993176192841,.9999993230820888,.9999993285028208,.9999993338817905,.999999339219306,.999999344515673,.9999993497711953,.9999993549861748,.9999993601609106,.9999993652957005,.9999993703908397,.9999993754466213,.9999993804633366,.9999993854412748,.9999993903807227,.9999993952819656,.9999994001452864,.9999994049709664,.9999994097592844,.9999994145105177,.9999994192249413,.9999994239028285,.9999994285444505,.9999994331500766,.9999994377199743,.9999994422544094,.9999994467536452,.9999994512179438,.9999994556475649,.9999994600427666,.9999994644038055,.9999994687309358,.9999994730244103,.9999994772844797,.9999994815113932,.999999485705398,.9999994898667398,.9999994939956623,.9999994980924077,.9999995021572163,.9999995061903266,.9999995101919757,.9999995141623989,.9999995181018296,.9999995220104998,.9999995258886398,.9999995297364781,.9999995335542419,.9999995373421563,.9999995411004452,.9999995448293307,.9999995485290335,.9999995521997724,.999999555841765,.9999995594552271,.999999563040373,.9999995665974154,.9999995701265657,.9999995736280336,.9999995771020274,.9999995805487536,.9999995839684178,.9999995873612236,.9999995907273735,.9999995940670682,.9999995973805071,.9999996006678884,.9999996039294085,.9999996071652626,.9999996103756446,.9999996135607465,.9999996167207597,.9999996198558735,.9999996229662762,.9999996260521548,.9999996291136947,.99999963215108,.9999996351644937,.9999996381541174,.9999996411201312,.999999644062714,.9999996469820435,.9999996498782959,.9999996527516465,.9999996556022689,.9999996584303357,.9999996612360181,.9999996640194864,.9999996667809091,.999999669520454,.9999996722382875,.9999996749345745,.9999996776094793,.9999996802631644,.9999996828957916,.9999996855075212,.9999996880985124,.9999996906689234,.999999693218911,.9999996957486312,.9999996982582385,.9999997007478866,.9999997032177278,.9999997056679133,.9999997080985934,.9999997105099173,.9999997129020329,.9999997152750871,.999999717629226,.9999997199645941,.9999997222813353,.9999997245795922,.9999997268595064,.9999997291212187,.9999997313648685,.9999997335905945,.999999735798534,.9999997379888237,.9999997401615992,.9999997423169948,.9999997444551443,.99999974657618,.9999997486802337,.999999750767436,.9999997528379163,.9999997548918037,.9999997569292257,.9999997589503092,.9999997609551802,.9999997629439635,.9999997649167831,.9999997668737624,.9999997688150233,.9999997707406872,.9999997726508747,.9999997745457051,.9999997764252972,.9999997782897688,.9999997801392367,.9999997819738169,.9999997837936248,.9999997855987744,.9999997873893794,.9999997891655525,.9999997909274054,.9999997926750491,.9999997944085938,.9999997961281487,.9999997978338224,.9999997995257227,.9999998012039565,.9999998028686299,.9999998045198482,.999999806157716,.9999998077823371,.9999998093938146,.9999998109922505,.9999998125777465,.9999998141504032,.9999998157103207,.9999998172575981,.999999818792334,.9999998203146261,.9999998218245714,.9999998233222663,.9999998248078062,.9999998262812863,.9999998277428005,.9999998291924423,.9999998306303045,.9999998320564791,.9999998334710577,.9999998348741307,.9999998362657884,.9999998376461198,.9999998390152138,.9999998403731585,.999999841720041,.9999998430559481,.999999844380966,.9999998456951799,.9999998469986745,.9999998482915341,.9999998495738421,.9999998508456814,.9999998521071343,.9999998533582822,.9999998545992063,.999999855829987,.9999998570507038,.9999998582614362,.9999998594622628,.9999998606532614,.9999998618345095,.9999998630060839,.999999864168061,.9999998653205162,.9999998664635248,.9999998675971613,.9999998687214996,.9999998698366132,.9999998709425748,.9999998720394568,.9999998731273311,.9999998742062687,.9999998752763404,.9999998763376162,.9999998773901658,.9999998784340584,.9999998794693622,.9999998804961456,.9999998815144759,.9999998825244202,.999999883526045,.9999998845194162,.9999998855045994,.9999998864816595,.999999887450661,.999999888411668,.9999998893647438,.9999998903099517,.9999998912473542,.9999998921770132,.9999998930989905,.9999998940133472,.9999998949201439,.9999998958194407,.9999998967112975,.9999998975957736,.9999998984729278,.9999998993428184,.9999999002055034,.9999999010610404,.9999999019094864,.9999999027508979,.9999999035853312,.999999904412842,.9999999052334857,.9999999060473171,.9999999068543908,.9999999076547608,.9999999084484806,.9999999092356038,.9999999100161828,.9999999107902704,.9999999115579185,.9999999123191786,.999999913074102,.9999999138227396,.9999999145651417,.9999999153013585,.9999999160314396,.9999999167554341,.9999999174733912,.9999999181853593,.9999999188913865,.9999999195915207,.9999999202858092,.9999999209742991,.9999999216570371,.9999999223340694,.999999923005442,.9999999236712007,.9999999243313906,.9999999249860566,.9999999256352432,.9999999262789947,.999999926917355,.9999999275503675,.9999999281780756,.9999999288005219,.9999999294177492,.9999999300297994,.9999999306367146,.9999999312385361,.9999999318353056,.9999999324270634,.9999999330138505,.9999999335957069,.9999999341726727,.9999999347447877,.9999999353120909,.9999999358746215,.9999999364324182,.9999999369855195,.9999999375339633,.9999999380777876,.9999999386170301,.9999999391517276,.9999999396819174,.999999940207636,.9999999407289198,.9999999412458049,.9999999417583272,.999999942266522,.9999999427704247,.9999999432700704,.9999999437654934,.9999999442567284,.9999999447438097,.9999999452267709,.9999999457056458,.9999999461804676,.9999999466512696,.9999999471180845,.9999999475809448,.999999948039883,.9999999484949312,.999999948946121,.9999999493934841,.999999949837052,.9999999502768554,.9999999507129254,.9999999511452924,.9999999515739869,.9999999519990389,.9999999524204785,.999999952838335,.9999999532526379,.9999999536634165,.9999999540706997,.9999999544745162,.9999999548748943,.9999999552718626,.9999999556654489,.999999956055681,.9999999564425865,.999999956826193,.9999999572065275,.9999999575836167,.9999999579574878,.9999999583281669,.9999999586956806,.9999999590600549,.9999999594213156,.9999999597794885,.999999960134599,.9999999604866725,.9999999608357341,.9999999611818084,.9999999615249204,.9999999618650944,.9999999622023549,.9999999625367257,.999999962868231,.9999999631968943,.9999999635227392,.999999963845789,.9999999641660671,.9999999644835962,.9999999647983991,.9999999651104985,.9999999654199169,.9999999657266763,.999999966030799,.9999999663323067,.9999999666312214,.9999999669275643,.9999999672213571,.9999999675126208,.9999999678013763,.9999999680876448,.9999999683714469,.9999999686528029,.9999999689317335,.9999999692082586,.9999999694823984,.9999999697541728,.9999999700236014,.999999970290704,.9999999705554997,.9999999708180078,.9999999710782477,.9999999713362381,.9999999715919977,.9999999718455453,.9999999720968994,.9999999723460782,.9999999725931,.9999999728379828,.9999999730807446,.999999973321403,.9999999735599757,.9999999737964803,.9999999740309339,.9999999742633536,.9999999744937569,.9999999747221603,.9999999749485807,.9999999751730348,.9999999753955391,.99999997561611,.9999999758347635,.999999976051516,.9999999762663835,.9999999764793815,.9999999766905261,.9999999768998327,.9999999771073167,.9999999773129936,.9999999775168786,.9999999777189867,.999999977919333,.9999999781179323,.9999999783147994,.9999999785099486,.9999999787033947,.999999978895152,.9999999790852349,.9999999792736571,.9999999794604331,.9999999796455765,.9999999798291014,.9999999800110212,.9999999801913495,.9999999803701,.9999999805472858,.9999999807229203,.9999999808970166,.9999999810695877,.9999999812406464,.9999999814102057,.9999999815782784,.9999999817448769,.9999999819100138,.9999999820737014,.9999999822359522,.9999999823967783,.9999999825561918,.9999999827142046,.9999999828708288,.9999999830260761,.9999999831799581,.9999999833324866,.9999999834836731,.9999999836335289,.9999999837820654,.999999983929294,.9999999840752255,.9999999842198712,.9999999843632421,.9999999845053489,.9999999846462025,.9999999847858135,.9999999849241926,.9999999850613503,.999999985197297,.9999999853320432,.9999999854655989,.9999999855979743,.9999999857291797,.999999985859225,.9999999859881201,.9999999861158749,.9999999862424992,.9999999863680026,.9999999864923947,.9999999866156851,.9999999867378832,.9999999868589983,.9999999869790398,.9999999870980169,.9999999872159386,.9999999873328141,.9999999874486525,.9999999875634624,.9999999876772528,.9999999877900326,.9999999879018102,.9999999880125945,.9999999881223939,.9999999882312168,.9999999883390719,.9999999884459672,.9999999885519111,.9999999886569119,.9999999887609775,.9999999888641162,.9999999889663359,.9999999890676445,.99999998916805,.99999998926756,.9999999893661823,.9999999894639247,.9999999895607946,.9999999896567996,.9999999897519473,.9999999898462449,.9999999899397001,.9999999900323198,.9999999901241114,.9999999902150822,.9999999903052391,.9999999903945893,.9999999904831397,.9999999905708973,.9999999906578688,.9999999907440613,.9999999908294814,.9999999909141358,.9999999909980313,.9999999910811742,.9999999911635713,.9999999912452289,.9999999913261536,.9999999914063517,.9999999914858294,.9999999915645932,.9999999916426491,.9999999917200033,.9999999917966621,.9999999918726314,.9999999919479172,.9999999920225255,.9999999920964623,.9999999921697332,.9999999922423443,.9999999923143011,.9999999923856094,.9999999924562751,.9999999925263034,.9999999925957003,.9999999926644709,.9999999927326211,.999999992800156,.999999992867081,.9999999929334016,.999999992999123,.9999999930642505,.9999999931287892,.9999999931927444,.999999993256121,.9999999933189243,.9999999933811592,.9999999934428307,.9999999935039439,.9999999935645035,.9999999936245144,.9999999936839815,.9999999937429095,.9999999938013031,.999999993859167,.9999999939165061,.9999999939733247,.9999999940296276,.9999999940854193,.9999999941407041,.9999999941954867,.9999999942497714,.9999999943035627,.9999999943568648,.9999999944096821,.9999999944620188,.9999999945138793,.9999999945652677,.9999999946161882,.9999999946666448,.9999999947166417,.9999999947661831,.9999999948152728,.9999999948639148,.9999999949121132,.9999999949598719,.9999999950071947,.9999999950540855,.9999999951005483,.9999999951465866,.9999999951922043,.9999999952374051,.9999999952821927,.9999999953265708,.999999995370543,.9999999954141129,.999999995457284,.99999999550006,.9999999955424443,.9999999955844405,.9999999956260518,.9999999956672819,.9999999957081339,.9999999957486115,.9999999957887178,.9999999958284561,.9999999958678297,.999999995906842,.999999995945496,.9999999959837951,.9999999960217422,.9999999960593406,.9999999960965935,.9999999961335039,.9999999961700747,.9999999962063091,.9999999962422101,.9999999962777807,.9999999963130237,.9999999963479421,.9999999963825389,.9999999964168169,.9999999964507789,.9999999964844278,.9999999965177664,.9999999965507974,.9999999965835236,.9999999966159477,.9999999966480726,.9999999966799007,.9999999967114348,.9999999967426776,.9999999967736315,.9999999968042993,.9999999968346834,.9999999968647866,.9999999968946112,.9999999969241598,.9999999969534347,.9999999969824386,.9999999970111738,.9999999970396427,.9999999970678478,.9999999970957915,.999999997123476,.9999999971509037,.999999997178077,.999999997204998,.9999999972316691,.9999999972580926,.9999999972842706,.9999999973102055,.9999999973358993,.9999999973613541,.9999999973865724,.9999999974115561,.9999999974363074,.9999999974608283,.9999999974851209,.9999999975091874,.9999999975330297,.9999999975566499,.99999999758005,.999999997603232,.9999999976261978,.9999999976489494,.9999999976714888,.9999999976938179,.9999999977159385,.9999999977378526,.999999997759562,.9999999977810687,.9999999978023744,.9999999978234809,.9999999978443901,.9999999978651037,.9999999978856237,.9999999979059516,.9999999979260893,.9999999979460383,.9999999979658007,.9999999979853779,.9999999980047717,.9999999980239836,.9999999980430155,.999999998061869,.9999999980805456,.9999999980990469,.9999999981173747,.9999999981355304,.9999999981535156,.9999999981713319,.9999999981889808,.9999999982064638,.9999999982237825,.9999999982409384,.999999998257933,.9999999982747676,.9999999982914438,.999999998307963,.9999999983243267,.9999999983405364,.9999999983565933,.9999999983724989,.9999999983882546,.9999999984038618,.9999999984193217,.9999999984346358,.9999999984498055,.999999998464832,.9999999984797165,.9999999984944606,.9999999985090654,.9999999985235323,.9999999985378624,.9999999985520569,.9999999985661173,.9999999985800447,.9999999985938404,.9999999986075054,.9999999986210412,.9999999986344488,.9999999986477294,.9999999986608841,.9999999986739142,.9999999986868209,.9999999986996051,.9999999987122681,.9999999987248109,.9999999987372348,.9999999987495407,.9999999987617298,.9999999987738032,.9999999987857618,.9999999987976069,.9999999988093394,.9999999988209604,.9999999988324707,.9999999988438717,.9999999988551642,.9999999988663492,.9999999988774277,.9999999988884007,.9999999988992694,.9999999989100343,.9999999989206968,.9999999989312576,.9999999989417176,.999999998952078,.9999999989623395,.999999998972503,.9999999989825696,.9999999989925401,.9999999990024154,.9999999990121963,.9999999990218839,.9999999990314787,.9999999990409819,.9999999990503942,.9999999990597165,.9999999990689495,.9999999990780942,.9999999990871514,.9999999990961219,.9999999991050064,.9999999991138059,.9999999991225209,.9999999991311526,.9999999991397014,.9999999991481682,.9999999991565538,.9999999991648589,.9999999991730844,.9999999991812308,.999999999189299,.9999999991972898,.9999999992052038,.9999999992130417,.9999999992208043,.9999999992284921,.9999999992361062,.9999999992436469,.999999999251115,.9999999992585114,.9999999992658364,.9999999992730909,.9999999992802755,.9999999992873909,.9999999992944377,.9999999993014167,.9999999993083283,.9999999993151731,.999999999321952,.9999999993286655,.9999999993353141,.9999999993418985,.9999999993484194,.9999999993548773,.9999999993612727,.9999999993676063,.9999999993738786,.9999999993800903,.999999999386242,.9999999993923341,.9999999993983673,.9999999994043419,.9999999994102589,.9999999994161184,.9999999994219211,.9999999994276677,.9999999994333585,.9999999994389941,.9999999994445751,.999999999450102,.9999999994555752,.9999999994609953,.9999999994663628,.9999999994716781,.9999999994769417,.9999999994821542,.9999999994873161,.9999999994924278,.9999999994974899,.9999999995025025,.9999999995074665,.9999999995123822,.99999999951725,.9999999995220704,.9999999995268438,.9999999995315708,.9999999995362517,.999999999540887,.999999999545477,.9999999995500224,.9999999995545233,.9999999995589803,.9999999995633939,.9999999995677644,.9999999995720922,.9999999995763776,.9999999995806214,.9999999995848234,.9999999995889846,.999999999593105,.9999999995971851,.9999999996012253,.9999999996052259,.9999999996091874,.9999999996131101,.9999999996169945,.9999999996208406,.9999999996246492,.9999999996284205,.9999999996321547,.9999999996358524,.9999999996395138,.9999999996431392,.9999999996467291,.9999999996502837,.9999999996538035,.9999999996572887,.9999999996607396,.9999999996641566,.99999999966754,.9999999996708903,.9999999996742075,.9999999996774921,.9999999996807444,.9999999996839647,.9999999996871533,.9999999996903104,.9999999996934366,.9999999996965319,.9999999996995966,.9999999997026312,.9999999997056359,.999999999708611,.9999999997115566,.9999999997144733,.9999999997173611,.9999999997202205,.9999999997230515,.9999999997258547,.9999999997286302,.9999999997313782,.999999999734099,.999999999736793,.9999999997394603,.9999999997421012,.9999999997447161,.9999999997473049,.9999999997498683,.9999999997524062,.9999999997549189,.9999999997574068,.9999999997598701,.9999999997623089,.9999999997647235,.9999999997671142,.9999999997694812,.9999999997718246,.9999999997741449,.999999999776442,.9999999997787165,.9999999997809682,.9999999997831976,.9999999997854049,.9999999997875902,.9999999997897538,.9999999997918959,.9999999997940167,.9999999997961163,.9999999997981951,.9999999998002532,.9999999998022907,.9999999998043081,.9999999998063053,.9999999998082825,.9999999998102401,.9999999998121781,.9999999998140969,.9999999998159965,.9999999998178771,.999999999819739,.9999999998215823,.9999999998234071,.9999999998252137,.9999999998270024,.9999999998287731,.9999999998305261,.9999999998322616,.9999999998339797,.9999999998356807,.9999999998373645,.9999999998390317,.999999999840682,.9999999998423159,.9999999998439334,.9999999998455347,.99999999984712,.9999999998486893,.9999999998502429,.9999999998517809,.9999999998533036,.9999999998548109,.9999999998563031,.9999999998577803,.9999999998592427,.9999999998606903,.9999999998621235,.9999999998635423,.9999999998649468,.9999999998663371,.9999999998677135,.9999999998690761,.9999999998704249,.9999999998717601,.999999999873082,.9999999998743905,.9999999998756858,.9999999998769681,.9999999998782375,.9999999998794941,.999999999880738,.9999999998819693,.9999999998831882,.9999999998843948,.9999999998855893,.9999999998867717,.9999999998879421,.9999999998891007,.9999999998902477,.999999999891383,.9999999998925069,.9999999998936194,.9999999998947207,.9999999998958108,.9999999998968898,.999999999897958,.9999999998990153,.999999999900062,.999999999901098,.9999999999021236,.9999999999031387,.9999999999041436,.9999999999051383,.9999999999061229,.9999999999070975,.9999999999080622,.9999999999090171,.9999999999099624,.999999999910898,.9999999999118242,.9999999999127409,.9999999999136483,.9999999999145465,.9999999999154355,.9999999999163156,.9999999999171867,.9999999999180489,.9999999999189023,.9999999999197471,.9999999999205832,.9999999999214109,.9999999999222301,.9999999999230409,.9999999999238435,.999999999924638,.9999999999254242,.9999999999262026,.9999999999269729,.9999999999277354,.9999999999284901,.9999999999292372,.9999999999299765,.9999999999307083,.9999999999314326,.9999999999321496,.9999999999328593,.9999999999335616,.9999999999342568,.9999999999349448,.9999999999356259,.9999999999363,.9999999999369671,.9999999999376274,.999999999938281,.9999999999389279,.9999999999395681,.9999999999402018,.999999999940829,.9999999999414497,.9999999999420641,.9999999999426722,.999999999943274,.9999999999438698,.9999999999444593,.9999999999450427,.9999999999456203,.9999999999461918,.9999999999467576,.9999999999473175,.9999999999478716,.9999999999484199,.9999999999489627,.9999999999495,.9999999999500316,.9999999999505578,.9999999999510786,.9999999999515939,.9999999999521041,.9999999999526089,.9999999999531086,.9999999999536031,.9999999999540925,.9999999999545768,.9999999999550562,.9999999999555306,.9999999999560001,.9999999999564647,.9999999999569246,.9999999999573796,.9999999999578301,.9999999999582758,.9999999999587169,.9999999999591536,.9999999999595856,.9999999999600132,.9999999999604363,.9999999999608551,.9999999999612695,.9999999999616798,.9999999999620857,.9999999999624873,.9999999999628849,.9999999999632783,.9999999999636676,.999999999964053,.9999999999644342,.9999999999648116,.9999999999651851,.9999999999655546,.9999999999659203,.9999999999662822,.9999999999666404,.9999999999669948,.9999999999673456,.9999999999676927,.9999999999680362,.9999999999683761,.9999999999687125,.9999999999690454,.9999999999693748,.9999999999697008,.9999999999700234,.9999999999703426,.9999999999706586,.9999999999709712,.9999999999712805,.9999999999715867,.9999999999718896,.9999999999721894,.999999999972486,.9999999999727797,.9999999999730701,.9999999999733575,.9999999999736421,.9999999999739235,.9999999999742021,.9999999999744777,.9999999999747504,.9999999999750203,.9999999999752874,.9999999999755517,.9999999999758132,.999999999976072,.999999999976328,.9999999999765815,.9999999999768322,.9999999999770803,.9999999999773258,.9999999999775687,.9999999999778092,.999999999978047,.9999999999782824,.9999999999785153,.9999999999787458,.9999999999789738,.9999999999791994,.9999999999794227,.9999999999796436,.9999999999798622,.9999999999800785,.9999999999802925,.9999999999805044,.9999999999807139,.9999999999809213,.9999999999811264,.9999999999813294,.9999999999815303,.9999999999817291,.9999999999819257,.9999999999821203,.9999999999823128,.9999999999825033,.9999999999826918,.9999999999828784,.999999999983063,.9999999999832455,.9999999999834263,.999999999983605,.9999999999837819,.9999999999839568,.99999999998413,.9999999999843013,.9999999999844709,.9999999999846386,.9999999999848046,.9999999999849688,.9999999999851312,.999999999985292,.999999999985451,.9999999999856084,.999999999985764,.9999999999859182,.9999999999860706,.9999999999862214,.9999999999863706,.9999999999865181,.9999999999866642,.9999999999868087,.9999999999869517,.9999999999870931,.9999999999872331,.9999999999873715,.9999999999875085,.9999999999876441,.9999999999877782,.9999999999879109,.9999999999880421,.999999999988172,.9999999999883005,.9999999999884276,.9999999999885534,.9999999999886778,.999999999988801,.9999999999889227,.9999999999890432,.9999999999891624,.9999999999892804,.999999999989397,.9999999999895125,.9999999999896267,.9999999999897397,.9999999999898515,.999999999989962,.9999999999900715,.9999999999901797,.9999999999902869,.9999999999903928,.9999999999904976,.9999999999906013,.9999999999907039,.9999999999908054,.9999999999909058,.9999999999910051,.9999999999911033,.9999999999912006,.9999999999912967,.9999999999913919,.999999999991486,.9999999999915792,.9999999999916713,.9999999999917625,.9999999999918526,.9999999999919418,.99999999999203,.9999999999921173,.9999999999922037,.9999999999922891,.9999999999923737,.9999999999924573,.99999999999254,.9999999999926218,.9999999999927027,.9999999999927828,.9999999999928619,.9999999999929403,.9999999999930178,.9999999999930945,.9999999999931704,.9999999999932454,.9999999999933197,.9999999999933931,.9999999999934657,.9999999999935376,.9999999999936087,.999999999993679,.9999999999937486,.9999999999938173,.9999999999938854,.9999999999939527,.9999999999940193,.9999999999940853,.9999999999941505,.9999999999942148,.9999999999942787,.9999999999943417,.9999999999944041,.9999999999944659,.9999999999945269,.9999999999945873,.9999999999946471,.9999999999947062,.9999999999947646,.9999999999948225,.9999999999948798,.9999999999949363,.9999999999949923,.9999999999950476,.9999999999951025,.9999999999951567,.9999999999952102,.9999999999952632,.9999999999953156,.9999999999953675,.9999999999954188,.9999999999954695,.9999999999955197,.9999999999955694,.9999999999956185,.999999999995667,.9999999999957151,.9999999999957626,.9999999999958097,.9999999999958561,.9999999999959022,.9999999999959476,.9999999999959926,.9999999999960372,.9999999999960811,.9999999999961247,.9999999999961677,.9999999999962104,.9999999999962526,.9999999999962942,.9999999999963354,.9999999999963762,.9999999999964165,.9999999999964564,.9999999999964958,.9999999999965349,.9999999999965735,.9999999999966116,.9999999999966495,.9999999999966868,.9999999999967237,.9999999999967603,.9999999999967963,.9999999999968321,.9999999999968674,.9999999999969024,.999999999996937,.9999999999969712,.9999999999970051,.9999999999970385,.9999999999970716,.9999999999971043,.9999999999971366,.9999999999971687,.9999999999972004,.9999999999972317,.9999999999972626,.9999999999972933,.9999999999973236,.9999999999973536,.9999999999973832,.9999999999974125,.9999999999974415,.9999999999974701,.9999999999974984,.9999999999975265,.9999999999975543,.9999999999975817,.9999999999976088,.9999999999976357,.9999999999976622,.9999999999976884,.9999999999977144,.99999999999774,.9999999999977655,.9999999999977905,.9999999999978154,.99999999999784,.9999999999978643,.9999999999978882,.999999999997912,.9999999999979355,.9999999999979587,.9999999999979817,.9999999999980044,.9999999999980269,.9999999999980491,.9999999999980711,.9999999999980929,.9999999999981143,.9999999999981356,.9999999999981566,.9999999999981773,.999999999998198,.9999999999982183,.9999999999982384,.9999999999982583,.9999999999982779,.9999999999982974,.9999999999983166,.9999999999983357,.9999999999983544,.9999999999983731,.9999999999983914,.9999999999984096,.9999999999984276,.9999999999984454,.999999999998463,.9999999999984803,.9999999999984975,.9999999999985146,.9999999999985314,.999999999998548,.9999999999985645,.9999999999985808,.9999999999985969,.9999999999986128,.9999999999986285,.9999999999986441,.9999999999986594,.9999999999986746,.9999999999986897,.9999999999987046,.9999999999987192,.9999999999987338,.9999999999987482,.9999999999987624,.9999999999987765,.9999999999987904,.9999999999988042,.9999999999988177,.9999999999988312,.9999999999988445,.9999999999988577,.9999999999988707,.9999999999988836,.9999999999988962,.9999999999989088,.9999999999989212,.9999999999989335,.9999999999989456,.9999999999989577,.9999999999989696,.9999999999989814,.9999999999989929,.9999999999990045,.9999999999990158,.999999999999027,.9999999999990381,.9999999999990491,.99999999999906,.9999999999990707,.9999999999990813,.9999999999990918,.9999999999991023,.9999999999991125,.9999999999991226,.9999999999991327,.9999999999991426,.9999999999991525,.9999999999991621,.9999999999991717,.9999999999991812,.9999999999991905,.9999999999991999,.999999999999209,.9999999999992181,.9999999999992271,.999999999999236,.9999999999992447,.9999999999992534,.9999999999992619,.9999999999992704,.9999999999992788,.999999999999287,.9999999999992952,.9999999999993033,.9999999999993113,.9999999999993192,.9999999999993271,.9999999999993348,.9999999999993424,.99999999999935,.9999999999993575,.9999999999993648,.9999999999993722,.9999999999993794,.9999999999993866,.9999999999993936,.9999999999994006,.9999999999994075,.9999999999994144,.9999999999994211,.9999999999994278,.9999999999994343,.9999999999994409,.9999999999994473,.9999999999994538,.99999999999946,.9999999999994662,.9999999999994724,.9999999999994785,.9999999999994845,.9999999999994905,.9999999999994964,.9999999999995022,.999999999999508,.9999999999995136,.9999999999995193,.9999999999995248,.9999999999995304,.9999999999995358,.9999999999995411,.9999999999995465,.9999999999995517,.9999999999995569,.999999999999562,.9999999999995671,.9999999999995721,.9999999999995771,.999999999999582,.9999999999995869,.9999999999995917,.9999999999995963,.9999999999996011,.9999999999996056,.9999999999996103,.9999999999996148,.9999999999996193,.9999999999996236,.9999999999996281,.9999999999996324,.9999999999996366,.9999999999996408,.9999999999996451,.9999999999996492,.9999999999996533,.9999999999996573,.9999999999996613,.9999999999996653,.9999999999996692,.999999999999673,.9999999999996768,.9999999999996806,.9999999999996843,.9999999999996879,.9999999999996916,.9999999999996952,.9999999999996988,.9999999999997022,.9999999999997058,.9999999999997092,.9999999999997126,.9999999999997159,.9999999999997192,.9999999999997226,.9999999999997258,.999999999999729,.9999999999997321,.9999999999997353,.9999999999997384,.9999999999997414,.9999999999997444,.9999999999997474,.9999999999997504,.9999999999997533,.9999999999997562,.9999999999997591,.9999999999997619,.9999999999997647,.9999999999997674,.9999999999997702,.9999999999997728,.9999999999997755,.9999999999997782,.9999999999997807,.9999999999997834,.9999999999997858,.9999999999997884,.9999999999997908,.9999999999997934,.9999999999997957,.9999999999997982,.9999999999998005,.9999999999998029,.9999999999998052,.9999999999998075,.9999999999998097,.999999999999812,.9999999999998143,.9999999999998164,.9999999999998186,.9999999999998207,.9999999999998228,.9999999999998249,.9999999999998269,.999999999999829,.999999999999831,.999999999999833,.999999999999835,.9999999999998369,.9999999999998388,.9999999999998408,.9999999999998426,.9999999999998445,.9999999999998463,.9999999999998481,.9999999999998499,.9999999999998517,.9999999999998535,.9999999999998552,.9999999999998569,.9999999999998586,.9999999999998602,.9999999999998619,.9999999999998636,.9999999999998651,.9999999999998668,.9999999999998683,.9999999999998699,.9999999999998714,.999999999999873,.9999999999998744,.999999999999876,.9999999999998774,.9999999999998789,.9999999999998803,.9999999999998818,.9999999999998831,.9999999999998845,.9999999999998859,.9999999999998872,.9999999999998885,.9999999999998899,.9999999999998912,.9999999999998925,.9999999999998938,.9999999999998951,.9999999999998963,.9999999999998975,.9999999999998987,.9999999999999,.9999999999999012,.9999999999999023,.9999999999999035,.9999999999999046,.9999999999999057,.9999999999999069,.999999999999908,.9999999999999091,.9999999999999102,.9999999999999113,.9999999999999123,.9999999999999134,.9999999999999144,.9999999999999154,.9999999999999164,.9999999999999174,.9999999999999184,.9999999999999194,.9999999999999203,.9999999999999213,.9999999999999223,.9999999999999232,.9999999999999241,.999999999999925,.9999999999999258,.9999999999999267,.9999999999999276,.9999999999999285,.9999999999999294,.9999999999999302,.999999999999931,.9999999999999318,.9999999999999327,.9999999999999335,.9999999999999343,.999999999999935,.9999999999999358,.9999999999999366,.9999999999999374,.9999999999999382,.9999999999999389,.9999999999999396,.9999999999999404,.999999999999941,.9999999999999417,.9999999999999425,.9999999999999432,.9999999999999438,.9999999999999445,.9999999999999452,.9999999999999458,.9999999999999465,.9999999999999472,.9999999999999478,.9999999999999484,.999999999999949,.9999999999999496,.9999999999999503,.9999999999999508,.9999999999999515,.999999999999952,.9999999999999526,.9999999999999531,.9999999999999537,.9999999999999543,.9999999999999548,.9999999999999554,.9999999999999559,.9999999999999565,.999999999999957,.9999999999999575,.999999999999958,.9999999999999585,.999999999999959,.9999999999999595,.99999999999996,.9999999999999605,.9999999999999609,.9999999999999615,.9999999999999619,.9999999999999624,.9999999999999628,.9999999999999633,.9999999999999637,.9999999999999641,.9999999999999646,.999999999999965,.9999999999999655,.9999999999999659,.9999999999999662,.9999999999999667,.9999999999999671,.9999999999999675,.9999999999999679,.9999999999999682,.9999999999999687,.999999999999969,.9999999999999695,.9999999999999698,.9999999999999701,.9999999999999705,.9999999999999709,.9999999999999712,.9999999999999716,.9999999999999719,.9999999999999722,.9999999999999726,.9999999999999729,.9999999999999732,.9999999999999736,.9999999999999739,.9999999999999742,.9999999999999746,.9999999999999748,.9999999999999751,.9999999999999755,.9999999999999758,.999999999999976,.9999999999999764,.9999999999999767,.9999999999999769,.9999999999999772,.9999999999999775,.9999999999999778,.999999999999978,.9999999999999784,.9999999999999786,.9999999999999788,.9999999999999791,.9999999999999793,.9999999999999796,.9999999999999798,.9999999999999801,.9999999999999803,.9999999999999806,.9999999999999808,.999999999999981,.9999999999999812,.9999999999999815,.9999999999999817,.9999999999999819,.9999999999999821,.9999999999999823,.9999999999999826,.9999999999999828,.999999999999983,.9999999999999832,.9999999999999835,.9999999999999837,.9999999999999839,.999999999999984,.9999999999999842,.9999999999999845,.9999999999999847,.9999999999999848,.999999999999985,.9999999999999852,.9999999999999853,.9999999999999856,.9999999999999857,.9999999999999859,.9999999999999861,.9999999999999862,.9999999999999865,.9999999999999866,.9999999999999868,.9999999999999869,.9999999999999871,.9999999999999872,.9999999999999873,.9999999999999876,.9999999999999877,.9999999999999879,.999999999999988,.9999999999999881,.9999999999999883,.9999999999999885,.9999999999999886,.9999999999999887,.9999999999999889,.999999999999989,.9999999999999891,.9999999999999892,.9999999999999895,.9999999999999896,.9999999999999897,.9999999999999898,.9999999999999899,.99999999999999,.9999999999999901,.9999999999999903,.9999999999999905,.9999999999999906,.9999999999999907,.9999999999999908,.9999999999999909,.999999999999991,.9999999999999911,.9999999999999912,.9999999999999913,.9999999999999915,.9999999999999916,.9999999999999917,.9999999999999918,.9999999999999919,.9999999999999919,.999999999999992,.9999999999999921,.9999999999999922,.9999999999999923,.9999999999999925,.9999999999999926,.9999999999999927,.9999999999999927,.9999999999999928,.9999999999999929,.999999999999993,.9999999999999931,.9999999999999931,.9999999999999932,.9999999999999933,.9999999999999934,.9999999999999934,.9999999999999936,.9999999999999937,.9999999999999938,.9999999999999938,.9999999999999939,.999999999999994,.999999999999994,.9999999999999941,.9999999999999942,.9999999999999942,.9999999999999943,.9999999999999944,.9999999999999944,.9999999999999946,.9999999999999946,.9999999999999947,.9999999999999948,.9999999999999948,.9999999999999949,.9999999999999949,.999999999999995,.999999999999995,.9999999999999951,.9999999999999952,.9999999999999952,.9999999999999953,.9999999999999953,.9999999999999954,.9999999999999954,.9999999999999956,.9999999999999956,.9999999999999957,.9999999999999957,.9999999999999958,.9999999999999958,.9999999999999959,.9999999999999959,.999999999999996,.999999999999996,.9999999999999961,.9999999999999961,.9999999999999961,.9999999999999962,.9999999999999962,.9999999999999963,.9999999999999963,.9999999999999964,.9999999999999964,.9999999999999964,.9999999999999966,.9999999999999966,.9999999999999967,.9999999999999967,.9999999999999967,.9999999999999968,.9999999999999968,.9999999999999968,.9999999999999969,.9999999999999969,.9999999999999969,.999999999999997,.999999999999997,.999999999999997,.9999999999999971,.9999999999999971,.9999999999999971,.9999999999999972,.9999999999999972,.9999999999999972,.9999999999999973,.9999999999999973,.9999999999999973,.9999999999999974,.9999999999999974,.9999999999999974,.9999999999999976,.9999999999999976,.9999999999999976,.9999999999999976,.9999999999999977,.9999999999999977,.9999999999999977,.9999999999999977,.9999999999999978,.9999999999999978,.9999999999999978,.9999999999999978,.9999999999999979,.9999999999999979,.9999999999999979,.9999999999999979,.999999999999998,.999999999999998,.999999999999998,.999999999999998,.9999999999999981,.9999999999999981,.9999999999999981,.9999999999999981,.9999999999999981,.9999999999999982,.9999999999999982,.9999999999999982,.9999999999999982,.9999999999999982,.9999999999999983,.9999999999999983,.9999999999999983,.9999999999999983,.9999999999999983,.9999999999999984,.9999999999999984,.9999999999999984,.9999999999999984,.9999999999999984,.9999999999999986,.9999999999999986,.9999999999999986,.9999999999999986,.9999999999999986,.9999999999999986,.9999999999999987,.9999999999999987,.9999999999999987,.9999999999999987,.9999999999999987,.9999999999999987,.9999999999999987,.9999999999999988,.9999999999999988,.9999999999999988,.9999999999999988,.9999999999999988,.9999999999999988,.9999999999999988,.9999999999999989,.9999999999999989,.9999999999999989,.9999999999999989,.9999999999999989,.9999999999999989,.9999999999999989,.9999999999999989,.999999999999999,.999999999999999,.999999999999999,.999999999999999,.999999999999999,.999999999999999,.999999999999999,.999999999999999,.9999999999999991,.9999999999999991,.9999999999999991,.9999999999999991,.9999999999999991,.9999999999999991,.9999999999999991,.9999999999999991,.9999999999999991,.9999999999999991,.9999999999999992,.9999999999999992,.9999999999999992,.9999999999999992,.9999999999999992,.9999999999999992,.9999999999999992,.9999999999999992,.9999999999999992,.9999999999999992,.9999999999999992,.9999999999999993,.9999999999999993,.9999999999999993,.9999999999999993,.9999999999999993,.9999999999999993,.9999999999999993,.9999999999999993,.9999999999999993,.9999999999999993,.9999999999999993,.9999999999999993],Y:[-8,-7.998399839983999,-7.996799679967997,-7.995199519951996,-7.993599359935994,-7.991999199919992,-7.99039903990399,-7.988798879887989,-7.987198719871987,-7.985598559855986,-7.983998399839984,-7.982398239823983,-7.980798079807981,-7.97919791979198,-7.9775977597759775,-7.975997599759976,-7.974397439743974,-7.972797279727973,-7.971197119711971,-7.96959695969597,-7.967996799679968,-7.966396639663967,-7.964796479647965,-7.9631963196319635,-7.9615961596159615,-7.95999599959996,-7.958395839583958,-7.956795679567957,-7.955195519551955,-7.953595359535954,-7.951995199519952,-7.950395039503951,-7.948794879487949,-7.947194719471947,-7.945594559455945,-7.943994399439944,-7.942394239423942,-7.940794079407941,-7.939193919391939,-7.937593759375938,-7.935993599359936,-7.934393439343935,-7.9327932793279325,-7.931193119311931,-7.929592959295929,-7.927992799279928,-7.926392639263926,-7.924792479247925,-7.923192319231923,-7.921592159215922,-7.91999199919992,-7.9183918391839185,-7.9167916791679165,-7.915191519151915,-7.913591359135913,-7.911991199119912,-7.91039103910391,-7.908790879087909,-7.907190719071907,-7.905590559055906,-7.903990399039904,-7.9023902390239025,-7.9007900790079,-7.899189918991899,-7.897589758975897,-7.895989598959896,-7.894389438943894,-7.892789278927893,-7.891189118911891,-7.88958895889589,-7.887988798879888,-7.886388638863886,-7.884788478847884,-7.883188318831883,-7.881588158815881,-7.87998799879988,-7.878387838783878,-7.876787678767877,-7.875187518751876,-7.873587358735874,-7.871987198719872,-7.87038703870387,-7.868786878687869,-7.867186718671867,-7.865586558655866,-7.863986398639864,-7.862386238623863,-7.860786078607861,-7.8591859185918596,-7.8575857585758575,-7.855985598559856,-7.854385438543854,-7.852785278527853,-7.851185118511851,-7.84958495849585,-7.847984798479848,-7.846384638463847,-7.844784478447845,-7.8431843184318435,-7.841584158415841,-7.83998399839984,-7.838383838383838,-7.836783678367837,-7.835183518351835,-7.833583358335834,-7.831983198319832,-7.830383038303831,-7.828782878287829,-7.827182718271827,-7.825582558255825,-7.823982398239824,-7.822382238223822,-7.820782078207821,-7.819181918191819,-7.817581758175818,-7.815981598159816,-7.814381438143815,-7.8127812781278125,-7.811181118111811,-7.809580958095809,-7.807980798079808,-7.806380638063806,-7.804780478047805,-7.803180318031803,-7.801580158015802,-7.7999799979998,-7.7983798379837985,-7.7967796779677965,-7.795179517951795,-7.793579357935793,-7.791979197919792,-7.79037903790379,-7.788778877887789,-7.787178717871787,-7.785578557855786,-7.783978397839784,-7.7823782378237825,-7.78077807780778,-7.779177917791779,-7.777577757775777,-7.775977597759776,-7.774377437743774,-7.772777277727773,-7.771177117711771,-7.76957695769577,-7.767976797679768,-7.766376637663766,-7.764776477647764,-7.763176317631763,-7.761576157615761,-7.75997599759976,-7.758375837583758,-7.756775677567757,-7.755175517551756,-7.7535753575357536,-7.751975197519752,-7.75037503750375,-7.748774877487749,-7.747174717471747,-7.745574557455746,-7.743974397439744,-7.742374237423743,-7.740774077407741,-7.7391739173917395,-7.7375737573757375,-7.735973597359736,-7.734373437343734,-7.732773277327733,-7.731173117311731,-7.72957295729573,-7.727972797279728,-7.726372637263727,-7.724772477247725,-7.7231723172317235,-7.721572157215721,-7.71997199719972,-7.718371837183718,-7.716771677167717,-7.715171517151715,-7.713571357135714,-7.711971197119712,-7.710371037103711,-7.708770877087709,-7.707170717071707,-7.705570557055705,-7.703970397039704,-7.702370237023702,-7.700770077007701,-7.699169916991699,-7.697569756975698,-7.695969596959696,-7.694369436943695,-7.6927692769276925,-7.691169116911691,-7.689568956895689,-7.687968796879688,-7.686368636863686,-7.684768476847685,-7.683168316831683,-7.681568156815682,-7.67996799679968,-7.6783678367836785,-7.6767676767676765,-7.675167516751675,-7.673567356735673,-7.671967196719672,-7.67036703670367,-7.668766876687669,-7.667166716671667,-7.665566556655666,-7.663966396639664,-7.6623662366236625,-7.66076607660766,-7.659165916591659,-7.657565756575657,-7.655965596559656,-7.654365436543654,-7.652765276527653,-7.651165116511651,-7.64956495649565,-7.6479647964796476,-7.646364636463646,-7.644764476447644,-7.643164316431643,-7.641564156415642,-7.63996399639964,-7.638363836383638,-7.636763676367637,-7.635163516351636,-7.6335633563356335,-7.6319631963196315,-7.63036303630363,-7.628762876287629,-7.627162716271627,-7.625562556255626,-7.623962396239624,-7.622362236223623,-7.620762076207621,-7.6191619161916195,-7.6175617561756175,-7.615961596159616,-7.614361436143614,-7.612761276127613,-7.611161116111611,-7.60956095609561,-7.607960796079608,-7.606360636063607,-7.604760476047605,-7.6031603160316035,-7.601560156015601,-7.5999599959996,-7.598359835983598,-7.596759675967597,-7.595159515951595,-7.593559355935594,-7.591959195919592,-7.590359035903591,-7.588758875887589,-7.587158715871587,-7.585558555855585,-7.583958395839584,-7.582358235823582,-7.580758075807581,-7.579157915791579,-7.577557755775578,-7.575957595759576,-7.574357435743575,-7.5727572757275725,-7.571157115711571,-7.569556955695569,-7.567956795679568,-7.566356635663566,-7.564756475647565,-7.563156315631563,-7.561556155615562,-7.55995599559956,-7.5583558355835585,-7.5567556755675565,-7.555155515551555,-7.553555355535553,-7.551955195519552,-7.55035503550355,-7.548754875487549,-7.547154715471547,-7.545554555455546,-7.543954395439544,-7.542354235423542,-7.54075407540754,-7.539153915391539,-7.537553755375537,-7.535953595359536,-7.534353435343534,-7.532753275327533,-7.531153115311531,-7.52955295529553,-7.5279527952795275,-7.526352635263526,-7.524752475247524,-7.523152315231523,-7.521552155215522,-7.51995199519952,-7.518351835183518,-7.516751675167517,-7.515151515151516,-7.5135513551355135,-7.5119511951195115,-7.51035103510351,-7.508750875087509,-7.507150715071507,-7.505550555055506,-7.503950395039504,-7.502350235023503,-7.500750075007501,-7.4991499149914995,-7.4975497549754975,-7.495949594959496,-7.494349434943494,-7.492749274927493,-7.491149114911491,-7.48954895489549,-7.487948794879488,-7.486348634863487,-7.484748474847485,-7.4831483148314835,-7.481548154815481,-7.47994799479948,-7.478347834783478,-7.476747674767477,-7.475147514751475,-7.473547354735474,-7.471947194719472,-7.470347034703471,-7.468746874687469,-7.467146714671467,-7.465546554655465,-7.463946394639464,-7.462346234623462,-7.460746074607461,-7.459145914591459,-7.457545754575458,-7.455945594559456,-7.4543454345434546,-7.4527452745274525,-7.451145114511451,-7.449544954495449,-7.447944794479448,-7.446344634463446,-7.444744474447445,-7.443144314431443,-7.441544154415442,-7.43994399439944,-7.4383438343834385,-7.436743674367436,-7.435143514351435,-7.433543354335433,-7.431943194319432,-7.43034303430343,-7.428742874287429,-7.427142714271427,-7.425542554255426,-7.423942394239424,-7.422342234223422,-7.42074207420742,-7.419141914191419,-7.417541754175417,-7.415941594159416,-7.414341434143414,-7.412741274127413,-7.411141114111411,-7.40954095409541,-7.407940794079408,-7.406340634063406,-7.404740474047404,-7.403140314031403,-7.401540154015402,-7.3999399939994,-7.398339833983398,-7.396739673967397,-7.395139513951396,-7.3935393539353935,-7.3919391939193915,-7.39033903390339,-7.388738873887389,-7.387138713871387,-7.385538553855385,-7.383938393839384,-7.382338233823383,-7.380738073807381,-7.379137913791379,-7.3775377537753775,-7.375937593759376,-7.374337433743374,-7.372737273727373,-7.371137113711371,-7.36953695369537,-7.367936793679368,-7.366336633663367,-7.364736473647365,-7.3631363136313634,-7.361536153615361,-7.35993599359936,-7.358335833583358,-7.356735673567357,-7.355135513551355,-7.353535353535354,-7.351935193519352,-7.350335033503351,-7.3487348734873486,-7.347134713471347,-7.345534553455345,-7.343934393439344,-7.342334233423342,-7.340734073407341,-7.339133913391339,-7.337533753375338,-7.335933593359336,-7.3343334333433345,-7.3327332733273325,-7.331133113311331,-7.329532953295329,-7.327932793279328,-7.326332633263326,-7.324732473247325,-7.323132313231323,-7.321532153215322,-7.31993199319932,-7.3183318331833185,-7.316731673167316,-7.315131513151315,-7.313531353135313,-7.311931193119312,-7.31033103310331,-7.308730873087309,-7.307130713071307,-7.305530553055306,-7.303930393039304,-7.302330233023302,-7.3007300730073,-7.299129912991299,-7.297529752975297,-7.295929592959296,-7.294329432943294,-7.292729272927293,-7.291129112911291,-7.28952895289529,-7.2879287928792875,-7.286328632863286,-7.284728472847284,-7.283128312831283,-7.281528152815282,-7.27992799279928,-7.278327832783278,-7.276727672767277,-7.275127512751276,-7.2735273527352735,-7.2719271927192715,-7.27032703270327,-7.268726872687269,-7.267126712671267,-7.265526552655265,-7.263926392639264,-7.262326232623263,-7.260726072607261,-7.259125912591259,-7.2575257525752574,-7.255925592559256,-7.254325432543254,-7.252725272527253,-7.251125112511251,-7.24952495249525,-7.247924792479248,-7.246324632463247,-7.244724472447245,-7.243124312431243,-7.241524152415241,-7.23992399239924,-7.238323832383238,-7.236723672367237,-7.235123512351235,-7.233523352335234,-7.231923192319232,-7.230323032303231,-7.2287228722872285,-7.227122712271227,-7.225522552255225,-7.223922392239224,-7.222322232223222,-7.220722072207221,-7.219121912191219,-7.217521752175218,-7.215921592159216,-7.2143214321432145,-7.2127212721272125,-7.211121112111211,-7.209520952095209,-7.207920792079208,-7.206320632063206,-7.204720472047205,-7.203120312031203,-7.201520152015202,-7.1999199919992,-7.1983198319831985,-7.196719671967196,-7.195119511951195,-7.193519351935193,-7.191919191919192,-7.19031903190319,-7.188718871887189,-7.187118711871187,-7.185518551855186,-7.183918391839184,-7.182318231823182,-7.18071807180718,-7.179117911791179,-7.177517751775177,-7.175917591759176,-7.174317431743174,-7.172717271727173,-7.171117111711171,-7.16951695169517,-7.1679167916791675,-7.166316631663166,-7.164716471647164,-7.163116311631163,-7.161516151615162,-7.15991599159916,-7.158315831583158,-7.156715671567157,-7.1551155115511555,-7.1535153515351535,-7.1519151915191514,-7.15031503150315,-7.148714871487149,-7.147114711471147,-7.145514551455145,-7.143914391439144,-7.142314231423143,-7.140714071407141,-7.139113911391139,-7.137513751375137,-7.135913591359136,-7.134313431343134,-7.132713271327133,-7.131113111311131,-7.12951295129513,-7.127912791279128,-7.126312631263127,-7.124712471247125,-7.123112311231123,-7.121512151215121,-7.11991199119912,-7.118311831183118,-7.116711671167117,-7.115111511151115,-7.113511351135114,-7.111911191119112,-7.110311031103111,-7.1087108710871085,-7.107110711071107,-7.105510551055105,-7.103910391039104,-7.102310231023102,-7.100710071007101,-7.099109910991099,-7.097509750975098,-7.095909590959096,-7.0943094309430945,-7.0927092709270925,-7.091109110911091,-7.089508950895089,-7.087908790879088,-7.086308630863086,-7.084708470847085,-7.083108310831083,-7.081508150815082,-7.07990799079908,-7.0783078307830785,-7.076707670767076,-7.075107510751075,-7.073507350735073,-7.071907190719072,-7.07030703070307,-7.068706870687069,-7.067106710671067,-7.065506550655066,-7.063906390639064,-7.062306230623062,-7.06070607060706,-7.059105910591059,-7.057505750575057,-7.055905590559056,-7.054305430543054,-7.052705270527053,-7.051105110511051,-7.0495049504950495,-7.0479047904790475,-7.046304630463046,-7.044704470447044,-7.043104310431043,-7.041504150415042,-7.03990399039904,-7.038303830383038,-7.036703670367037,-7.0351035103510355,-7.0335033503350335,-7.031903190319031,-7.03030303030303,-7.028702870287029,-7.027102710271027,-7.025502550255025,-7.023902390239024,-7.022302230223023,-7.020702070207021,-7.019101910191019,-7.017501750175017,-7.015901590159016,-7.014301430143014,-7.012701270127013,-7.011101110111011,-7.00950095009501,-7.007900790079008,-7.006300630063007,-7.004700470047005,-7.003100310031003,-7.001500150015001,-6.999899989998999,-6.998299829982998,-6.996699669966997,-6.995099509950995,-6.993499349934994,-6.991899189918992,-6.990299029902991,-6.9886988698869885,-6.987098709870987,-6.985498549854985,-6.983898389838984,-6.982298229822982,-6.980698069806981,-6.979097909790979,-6.977497749774978,-6.975897589758976,-6.9742974297429745,-6.9726972697269725,-6.971097109710971,-6.969496949694969,-6.967896789678968,-6.966296629662966,-6.964696469646965,-6.963096309630963,-6.961496149614962,-6.95989598959896,-6.9582958295829584,-6.956695669566956,-6.955095509550955,-6.953495349534953,-6.951895189518952,-6.95029502950295,-6.948694869486949,-6.947094709470947,-6.945494549454946,-6.9438943894389435,-6.942294229422942,-6.94069406940694,-6.939093909390939,-6.937493749374937,-6.935893589358936,-6.934293429342935,-6.932693269326933,-6.931093109310931,-6.9294929492949295,-6.927892789278928,-6.926292629262926,-6.924692469246924,-6.923092309230923,-6.921492149214922,-6.91989198919892,-6.918291829182918,-6.916691669166917,-6.9150915091509155,-6.9134913491349135,-6.911891189118911,-6.91029102910291,-6.908690869086909,-6.907090709070907,-6.905490549054905,-6.903890389038904,-6.902290229022903,-6.900690069006901,-6.899089908990899,-6.897489748974897,-6.895889588958896,-6.894289428942894,-6.892689268926892,-6.891089108910891,-6.88948894889489,-6.887888788878888,-6.886288628862886,-6.884688468846885,-6.883088308830883,-6.881488148814881,-6.879887988798879,-6.878287828782878,-6.876687668766877,-6.875087508750875,-6.873487348734874,-6.871887188718872,-6.870287028702871,-6.8686868686868685,-6.867086708670867,-6.865486548654865,-6.863886388638864,-6.862286228622862,-6.860686068606861,-6.859085908590859,-6.857485748574858,-6.855885588558856,-6.8542854285428545,-6.8526852685268524,-6.851085108510851,-6.849484948494849,-6.847884788478848,-6.846284628462846,-6.844684468446845,-6.843084308430843,-6.841484148414842,-6.83988398839884,-6.838283828382838,-6.836683668366836,-6.835083508350835,-6.833483348334833,-6.831883188318832,-6.83028302830283,-6.828682868286829,-6.827082708270827,-6.825482548254826,-6.8238823882388235,-6.822282228222822,-6.82068206820682,-6.819081908190819,-6.817481748174817,-6.815881588158816,-6.814281428142815,-6.812681268126813,-6.811081108110811,-6.8094809480948095,-6.807880788078808,-6.806280628062806,-6.804680468046804,-6.803080308030803,-6.801480148014802,-6.7998799879988,-6.798279827982798,-6.796679667966797,-6.7950795079507955,-6.7934793479347935,-6.791879187918791,-6.79027902790279,-6.788678867886789,-6.787078707870787,-6.785478547854785,-6.783878387838784,-6.782278227822783,-6.780678067806781,-6.779077907790779,-6.777477747774777,-6.775877587758776,-6.774277427742774,-6.772677267726772,-6.771077107710771,-6.76947694769477,-6.767876787678768,-6.766276627662766,-6.764676467646765,-6.763076307630763,-6.761476147614761,-6.759875987598759,-6.758275827582758,-6.756675667566757,-6.755075507550755,-6.753475347534754,-6.751875187518752,-6.7502750275027505,-6.7486748674867485,-6.747074707470747,-6.745474547454745,-6.743874387438744,-6.742274227422742,-6.740674067406741,-6.739073907390739,-6.737473747374738,-6.735873587358736,-6.7342734273427345,-6.732673267326732,-6.731073107310731,-6.729472947294729,-6.727872787278728,-6.726272627262726,-6.724672467246725,-6.723072307230723,-6.721472147214722,-6.71987198719872,-6.718271827182718,-6.716671667166716,-6.715071507150715,-6.713471347134713,-6.711871187118712,-6.71027102710271,-6.708670867086709,-6.707070707070707,-6.705470547054706,-6.7038703870387035,-6.702270227022702,-6.7006700670067,-6.699069906990699,-6.697469746974697,-6.695869586958696,-6.694269426942695,-6.692669266926693,-6.691069106910691,-6.6894689468946895,-6.687868786878688,-6.686268626862686,-6.684668466846684,-6.683068306830683,-6.681468146814682,-6.67986798679868,-6.678267826782678,-6.676667666766677,-6.6750675067506755,-6.6734673467346735,-6.671867186718671,-6.67026702670267,-6.668666866686669,-6.667066706670667,-6.665466546654665,-6.663866386638664,-6.662266226622663,-6.660666066606661,-6.659065906590659,-6.657465746574657,-6.655865586558656,-6.654265426542654,-6.652665266526652,-6.651065106510651,-6.64946494649465,-6.647864786478648,-6.646264626462646,-6.6446644664466445,-6.643064306430643,-6.641464146414641,-6.639863986398639,-6.638263826382638,-6.636663666366637,-6.635063506350635,-6.633463346334634,-6.631863186318632,-6.6302630263026305,-6.6286628662866285,-6.627062706270627,-6.625462546254625,-6.623862386238624,-6.622262226222622,-6.620662066206621,-6.619061906190619,-6.617461746174618,-6.615861586158616,-6.6142614261426145,-6.612661266126612,-6.611061106110611,-6.609460946094609,-6.607860786078608,-6.606260626062606,-6.604660466046605,-6.603060306030603,-6.601460146014602,-6.5998599859986,-6.598259825982598,-6.596659665966596,-6.595059505950595,-6.593459345934593,-6.591859185918592,-6.59025902590259,-6.588658865886589,-6.587058705870587,-6.585458545854586,-6.5838583858385835,-6.582258225822582,-6.58065806580658,-6.579057905790579,-6.577457745774577,-6.575857585758576,-6.574257425742574,-6.572657265726573,-6.571057105710571,-6.5694569456945695,-6.567856785678568,-6.566256625662566,-6.564656465646564,-6.563056305630563,-6.561456145614562,-6.55985598559856,-6.558255825582558,-6.556655665566557,-6.5550555055505555,-6.5534553455345534,-6.551855185518551,-6.55025502550255,-6.548654865486549,-6.547054705470547,-6.545454545454545,-6.543854385438544,-6.542254225422543,-6.540654065406541,-6.5390539053905385,-6.537453745374537,-6.535853585358536,-6.534253425342534,-6.532653265326532,-6.531053105310531,-6.52945294529453,-6.527852785278528,-6.526252625262526,-6.5246524652465245,-6.523052305230523,-6.521452145214521,-6.519851985198519,-6.518251825182518,-6.516651665166517,-6.515051505150515,-6.513451345134513,-6.511851185118512,-6.5102510251025105,-6.5086508650865085,-6.507050705070507,-6.505450545054505,-6.503850385038504,-6.502250225022502,-6.500650065006501,-6.499049904990499,-6.497449744974498,-6.495849584958496,-6.4942494249424945,-6.492649264926492,-6.491049104910491,-6.489448944894489,-6.487848784878488,-6.486248624862486,-6.484648464846485,-6.483048304830483,-6.481448144814482,-6.47984798479848,-6.478247824782478,-6.476647664766476,-6.475047504750475,-6.473447344734473,-6.471847184718472,-6.47024702470247,-6.468646864686469,-6.467046704670467,-6.4654465446544656,-6.4638463846384635,-6.462246224622462,-6.46064606460646,-6.459045904590459,-6.457445744574457,-6.455845584558456,-6.454245424542454,-6.452645264526453,-6.451045104510451,-6.4494449444944495,-6.447844784478448,-6.446244624462446,-6.444644464446444,-6.443044304430443,-6.441444144414442,-6.43984398439844,-6.438243824382438,-6.436643664366437,-6.4350435043504355,-6.433443344334433,-6.431843184318431,-6.43024302430243,-6.428642864286429,-6.427042704270427,-6.425442544254425,-6.423842384238424,-6.422242224222423,-6.420642064206421,-6.4190419041904185,-6.417441744174417,-6.415841584158416,-6.414241424142414,-6.412641264126412,-6.411041104110411,-6.40944094409441,-6.407840784078408,-6.406240624062406,-6.4046404640464045,-6.403040304030403,-6.401440144014401,-6.399839983998399,-6.398239823982398,-6.396639663966397,-6.395039503950395,-6.393439343934393,-6.391839183918392,-6.3902390239023905,-6.3886388638863885,-6.387038703870387,-6.385438543854385,-6.383838383838384,-6.382238223822382,-6.380638063806381,-6.379037903790379,-6.377437743774378,-6.375837583758376,-6.3742374237423745,-6.372637263726372,-6.371037103710371,-6.369436943694369,-6.367836783678368,-6.366236623662366,-6.364636463646365,-6.363036303630363,-6.361436143614362,-6.3598359835983596,-6.358235823582358,-6.356635663566356,-6.355035503550355,-6.353435343534353,-6.351835183518352,-6.35023502350235,-6.348634863486349,-6.347034703470347,-6.3454345434543455,-6.3438343834383435,-6.342234223422342,-6.34063406340634,-6.339033903390339,-6.337433743374337,-6.335833583358336,-6.334233423342334,-6.332633263326333,-6.331033103310331,-6.3294329432943295,-6.327832783278328,-6.326232623262326,-6.324632463246324,-6.323032303230323,-6.321432143214322,-6.31983198319832,-6.318231823182318,-6.316631663166317,-6.3150315031503155,-6.313431343134313,-6.311831183118311,-6.31023102310231,-6.308630863086309,-6.307030703070307,-6.305430543054305,-6.303830383038304,-6.302230223022303,-6.300630063006301,-6.2990299029902985,-6.297429742974297,-6.295829582958296,-6.294229422942294,-6.292629262926292,-6.291029102910291,-6.28942894289429,-6.287828782878288,-6.286228622862286,-6.2846284628462845,-6.283028302830283,-6.281428142814281,-6.279827982798279,-6.278227822782278,-6.276627662766277,-6.275027502750275,-6.273427342734273,-6.271827182718272,-6.2702270227022705,-6.2686268626862685,-6.267026702670267,-6.265426542654265,-6.263826382638264,-6.262226222622262,-6.260626062606261,-6.259025902590259,-6.257425742574258,-6.255825582558256,-6.254225422542254,-6.252625262526252,-6.251025102510251,-6.249424942494249,-6.247824782478248,-6.246224622462246,-6.244624462446245,-6.243024302430243,-6.241424142414242,-6.2398239823982395,-6.238223822382238,-6.236623662366236,-6.235023502350235,-6.233423342334233,-6.231823182318232,-6.23022302230223,-6.228622862286229,-6.227022702270227,-6.2254225422542255,-6.2238223822382235,-6.222222222222222,-6.22062206220622,-6.219021902190219,-6.217421742174217,-6.215821582158216,-6.214221422142214,-6.212621262126213,-6.211021102110211,-6.2094209420942095,-6.207820782078208,-6.206220622062206,-6.204620462046204,-6.203020302030203,-6.201420142014202,-6.1998199819982,-6.198219821982198,-6.196619661966197,-6.1950195019501955,-6.193419341934193,-6.191819181918191,-6.19021902190219,-6.188618861886189,-6.187018701870187,-6.185418541854185,-6.183818381838184,-6.182218221822183,-6.180618061806181,-6.1790179017901785,-6.177417741774177,-6.175817581758176,-6.174217421742174,-6.172617261726172,-6.171017101710171,-6.16941694169417,-6.167816781678168,-6.166216621662166,-6.1646164616461645,-6.163016301630163,-6.161416141614161,-6.159815981598159,-6.158215821582158,-6.156615661566157,-6.155015501550155,-6.153415341534153,-6.151815181518152,-6.1502150215021505,-6.148614861486148,-6.147014701470147,-6.145414541454145,-6.143814381438144,-6.142214221422142,-6.140614061406141,-6.139013901390139,-6.137413741374138,-6.135813581358136,-6.134213421342134,-6.132613261326132,-6.131013101310131,-6.129412941294129,-6.127812781278128,-6.126212621262126,-6.124612461246125,-6.123012301230123,-6.121412141214122,-6.1198119811981195,-6.118211821182118,-6.116611661166116,-6.115011501150115,-6.113411341134113,-6.111811181118112,-6.11021102110211,-6.108610861086109,-6.107010701070107,-6.1054105410541055,-6.1038103810381035,-6.102210221022102,-6.1006100610061,-6.099009900990099,-6.097409740974097,-6.095809580958096,-6.094209420942094,-6.092609260926093,-6.091009100910091,-6.0894089408940895,-6.087808780878088,-6.086208620862086,-6.084608460846084,-6.083008300830083,-6.081408140814082,-6.07980798079808,-6.078207820782078,-6.076607660766077,-6.0750075007500755,-6.073407340734073,-6.071807180718071,-6.07020702070207,-6.068606860686069,-6.067006700670067,-6.065406540654065,-6.063806380638064,-6.062206220622063,-6.0606060606060606,-6.0590059005900585,-6.057405740574057,-6.055805580558056,-6.054205420542054,-6.052605260526052,-6.051005100510051,-6.04940494049405,-6.047804780478048,-6.046204620462046,-6.0446044604460445,-6.043004300430043,-6.041404140414041,-6.039803980398039,-6.038203820382038,-6.036603660366037,-6.035003500350035,-6.033403340334033,-6.031803180318032,-6.0302030203020305,-6.028602860286028,-6.027002700270027,-6.025402540254025,-6.023802380238024,-6.022202220222022,-6.020602060206021,-6.019001900190019,-6.017401740174018,-6.015801580158016,-6.014201420142014,-6.012601260126012,-6.011001100110011,-6.009400940094009,-6.007800780078008,-6.006200620062006,-6.004600460046005,-6.003000300030003,-6.001400140014002,-5.9997999799979995,-5.998199819981998,-5.996599659965996,-5.994999499949995,-5.993399339933994,-5.991799179917992,-5.99019901990199,-5.988598859885989,-5.986998699869988,-5.9853985398539855,-5.9837983798379835,-5.982198219821982,-5.980598059805981,-5.978997899789979,-5.977397739773977,-5.975797579757976,-5.974197419741975,-5.972597259725973,-5.970997099709971,-5.9693969396939695,-5.967796779677968,-5.966196619661966,-5.964596459645964,-5.962996299629963,-5.961396139613962,-5.95979597959796,-5.958195819581958,-5.956595659565957,-5.954995499549955,-5.953395339533953,-5.951795179517951,-5.95019501950195,-5.948594859485949,-5.946994699469947,-5.945394539453945,-5.943794379437944,-5.942194219421943,-5.9405940594059405,-5.9389938993899385,-5.937393739373937,-5.935793579357936,-5.934193419341934,-5.932593259325932,-5.930993099309931,-5.92939293929393,-5.927792779277928,-5.926192619261926,-5.9245924592459245,-5.922992299229923,-5.921392139213921,-5.919791979197919,-5.918191819181918,-5.916591659165917,-5.914991499149915,-5.913391339133913,-5.911791179117912,-5.9101910191019105,-5.908590859085908,-5.906990699069906,-5.905390539053905,-5.903790379037904,-5.902190219021902,-5.9005900590059,-5.898989898989899,-5.897389738973898,-5.895789578957896,-5.8941894189418935,-5.892589258925892,-5.890989098909891,-5.889388938893889,-5.887788778877887,-5.886188618861886,-5.884588458845885,-5.882988298829883,-5.881388138813881,-5.8797879787978795,-5.878187818781878,-5.876587658765876,-5.874987498749875,-5.873387338733874,-5.871787178717872,-5.87018701870187,-5.868586858685869,-5.8669866986698676,-5.8653865386538655,-5.8637863786378635,-5.862186218621862,-5.860586058605861,-5.858985898589859,-5.857385738573857,-5.855785578557856,-5.854185418541855,-5.852585258525853,-5.850985098509851,-5.849384938493849,-5.847784778477848,-5.846184618461846,-5.844584458445844,-5.842984298429843,-5.841384138413842,-5.83978397839784,-5.838183818381838,-5.836583658365837,-5.834983498349835,-5.833383338333833,-5.831783178317831,-5.83018301830183,-5.828582858285829,-5.826982698269827,-5.825382538253825,-5.823782378237824,-5.822182218221823,-5.8205820582058205,-5.8189818981898185,-5.817381738173817,-5.815781578157816,-5.814181418141814,-5.812581258125812,-5.810981098109811,-5.80938093809381,-5.807780778077808,-5.806180618061806,-5.8045804580458045,-5.802980298029803,-5.801380138013801,-5.799779977997799,-5.798179817981798,-5.796579657965797,-5.794979497949795,-5.793379337933793,-5.791779177917792,-5.7901790179017905,-5.788578857885788,-5.786978697869786,-5.785378537853785,-5.783778377837784,-5.782178217821782,-5.78057805780578,-5.778977897789779,-5.777377737773778,-5.775777577757776,-5.7741774177417735,-5.772577257725772,-5.770977097709771,-5.769376937693769,-5.767776777677767,-5.766176617661766,-5.764576457645765,-5.762976297629763,-5.761376137613761,-5.7597759775977595,-5.758175817581758,-5.756575657565756,-5.754975497549754,-5.753375337533754,-5.751775177517752,-5.75017501750175,-5.748574857485749,-5.7469746974697475,-5.7453745374537455,-5.743774377437743,-5.742174217421742,-5.740574057405741,-5.738973897389739,-5.737373737373737,-5.735773577357736,-5.734173417341735,-5.732573257325733,-5.730973097309731,-5.729372937293729,-5.727772777277728,-5.726172617261726,-5.724572457245724,-5.722972297229723,-5.721372137213722,-5.71977197719772,-5.718171817181718,-5.716571657165717,-5.714971497149715,-5.713371337133713,-5.711771177117711,-5.71017101710171,-5.708570857085709,-5.706970697069707,-5.705370537053705,-5.703770377037704,-5.702170217021703,-5.7005700570057005,-5.6989698969896985,-5.697369736973697,-5.695769576957696,-5.694169416941694,-5.692569256925692,-5.690969096909691,-5.68936893689369,-5.687768776877688,-5.686168616861686,-5.6845684568456845,-5.682968296829683,-5.681368136813681,-5.679767976797679,-5.678167816781678,-5.676567656765677,-5.674967496749675,-5.673367336733673,-5.671767176717672,-5.6701670167016704,-5.668566856685668,-5.666966696669666,-5.665366536653665,-5.663766376637664,-5.662166216621662,-5.66056605660566,-5.658965896589659,-5.657365736573658,-5.6557655765576555,-5.6541654165416535,-5.652565256525652,-5.650965096509651,-5.649364936493649,-5.647764776477647,-5.646164616461646,-5.644564456445645,-5.642964296429643,-5.641364136413641,-5.6397639763976395,-5.638163816381638,-5.636563656365636,-5.634963496349634,-5.633363336333633,-5.631763176317632,-5.63016301630163,-5.628562856285629,-5.6269626962696275,-5.6253625362536255,-5.623762376237623,-5.622162216221622,-5.620562056205621,-5.618961896189619,-5.617361736173617,-5.615761576157616,-5.614161416141615,-5.612561256125613,-5.610961096109611,-5.609360936093609,-5.607760776077608,-5.606160616061606,-5.604560456045604,-5.602960296029603,-5.601360136013602,-5.5997599759976,-5.598159815981598,-5.596559655965597,-5.594959495949595,-5.593359335933593,-5.591759175917591,-5.59015901590159,-5.588558855885589,-5.586958695869587,-5.585358535853585,-5.583758375837584,-5.582158215821583,-5.5805580558055805,-5.5789578957895785,-5.577357735773577,-5.575757575757576,-5.574157415741574,-5.572557255725572,-5.570957095709571,-5.56935693569357,-5.567756775677568,-5.566156615661566,-5.5645564556455644,-5.562956295629563,-5.561356135613561,-5.559755975597559,-5.558155815581558,-5.556555655565557,-5.554955495549555,-5.553355335533553,-5.551755175517552,-5.55015501550155,-5.548554855485548,-5.546954695469546,-5.545354535453545,-5.543754375437544,-5.542154215421542,-5.54055405540554,-5.538953895389539,-5.537353735373538,-5.5357535753575355,-5.5341534153415335,-5.532553255325532,-5.530953095309531,-5.529352935293529,-5.527752775277527,-5.526152615261526,-5.524552455245525,-5.522952295229523,-5.521352135213521,-5.5197519751975195,-5.518151815181518,-5.516551655165516,-5.514951495149514,-5.513351335133513,-5.511751175117512,-5.51015101510151,-5.508550855085509,-5.5069506950695075,-5.5053505350535055,-5.503750375037503,-5.502150215021502,-5.500550055005501,-5.498949894989499,-5.497349734973497,-5.495749574957496,-5.494149414941495,-5.492549254925493,-5.490949094909491,-5.489348934893489,-5.487748774877488,-5.486148614861486,-5.484548454845484,-5.482948294829483,-5.481348134813482,-5.47974797479748,-5.478147814781478,-5.476547654765477,-5.474947494749475,-5.473347334733473,-5.471747174717471,-5.47014701470147,-5.468546854685469,-5.466946694669467,-5.465346534653465,-5.463746374637464,-5.4621462146214625,-5.4605460546054605,-5.4589458945894584,-5.457345734573457,-5.455745574557456,-5.454145414541454,-5.452545254525452,-5.450945094509451,-5.44934493449345,-5.447744774477448,-5.446144614461446,-5.444544454445444,-5.442944294429443,-5.441344134413441,-5.439743974397439,-5.438143814381438,-5.436543654365437,-5.434943494349435,-5.433343334333433,-5.431743174317432,-5.43014301430143,-5.428542854285428,-5.426942694269426,-5.425342534253425,-5.423742374237424,-5.422142214221422,-5.42054205420542,-5.418941894189419,-5.417341734173418,-5.4157415741574155,-5.4141414141414135,-5.412541254125412,-5.410941094109411,-5.409340934093409,-5.407740774077407,-5.406140614061406,-5.404540454045405,-5.402940294029403,-5.401340134013401,-5.3997399739973995,-5.398139813981398,-5.396539653965396,-5.394939493949394,-5.393339333933393,-5.391739173917392,-5.39013901390139,-5.388538853885389,-5.3869386938693875,-5.3853385338533855,-5.383738373837383,-5.382138213821382,-5.380538053805381,-5.378937893789379,-5.377337733773377,-5.375737573757376,-5.374137413741375,-5.372537253725373,-5.370937093709371,-5.369336933693369,-5.367736773677368,-5.366136613661366,-5.364536453645364,-5.362936293629363,-5.361336133613362,-5.35973597359736,-5.358135813581358,-5.3565356535653565,-5.354935493549355,-5.353335333533353,-5.351735173517351,-5.35013501350135,-5.348534853485349,-5.346934693469347,-5.345334533453345,-5.343734373437344,-5.3421342134213425,-5.3405340534053405,-5.338933893389338,-5.337333733373337,-5.335733573357336,-5.334133413341334,-5.332533253325332,-5.330933093309331,-5.32933293329333,-5.327732773277328,-5.326132613261326,-5.324532453245324,-5.322932293229323,-5.321332133213321,-5.319731973197319,-5.318131813181318,-5.316531653165317,-5.314931493149315,-5.313331333133313,-5.311731173117312,-5.31013101310131,-5.308530853085308,-5.306930693069306,-5.305330533053305,-5.303730373037304,-5.302130213021302,-5.3005300530053,-5.298929892989299,-5.297329732973298,-5.2957295729572955,-5.2941294129412935,-5.292529252925292,-5.290929092909291,-5.289328932893289,-5.287728772877287,-5.286128612861286,-5.284528452845285,-5.282928292829283,-5.281328132813281,-5.2797279727972795,-5.278127812781278,-5.276527652765276,-5.274927492749274,-5.273327332733273,-5.271727172717272,-5.27012701270127,-5.268526852685269,-5.2669266926692675,-5.2653265326532654,-5.263726372637263,-5.262126212621262,-5.260526052605261,-5.258925892589259,-5.257325732573257,-5.255725572557256,-5.254125412541255,-5.252525252525253,-5.2509250925092505,-5.249324932493249,-5.247724772477248,-5.246124612461246,-5.244524452445244,-5.242924292429243,-5.241324132413242,-5.23972397239724,-5.238123812381238,-5.2365236523652365,-5.234923492349235,-5.233323332333233,-5.231723172317231,-5.23012301230123,-5.228522852285229,-5.226922692269227,-5.225322532253225,-5.223722372237224,-5.2221222122212225,-5.2205220522052205,-5.218921892189218,-5.217321732173217,-5.215721572157216,-5.214121412141214,-5.212521252125212,-5.210921092109211,-5.20932093209321,-5.207720772077208,-5.206120612061206,-5.204520452045204,-5.202920292029203,-5.201320132013201,-5.199719971997199,-5.198119811981198,-5.196519651965197,-5.194919491949195,-5.193319331933193,-5.191719171917192,-5.19011901190119,-5.188518851885188,-5.186918691869186,-5.185318531853185,-5.183718371837184,-5.182118211821182,-5.18051805180518,-5.178917891789179,-5.177317731773178,-5.1757175717571755,-5.1741174117411735,-5.172517251725172,-5.170917091709171,-5.169316931693169,-5.167716771677167,-5.166116611661166,-5.164516451645165,-5.162916291629163,-5.161316131613161,-5.1597159715971594,-5.158115811581158,-5.156515651565156,-5.154915491549154,-5.153315331533153,-5.151715171517152,-5.15011501150115,-5.148514851485148,-5.1469146914691475,-5.145314531453145,-5.143714371437143,-5.142114211421142,-5.140514051405141,-5.138913891389139,-5.137313731373137,-5.135713571357136,-5.134113411341135,-5.132513251325133,-5.1309130913091305,-5.129312931293129,-5.127712771277128,-5.126112611261126,-5.124512451245124,-5.122912291229123,-5.121312131213122,-5.11971197119712,-5.118111811181118,-5.1165116511651165,-5.114911491149115,-5.113311331133113,-5.111711171117111,-5.11011101110111,-5.108510851085109,-5.106910691069107,-5.105310531053105,-5.103710371037104,-5.1021102110211025,-5.1005100510051005,-5.098909890989098,-5.097309730973097,-5.095709570957096,-5.094109410941094,-5.092509250925092,-5.090909090909091,-5.08930893089309,-5.087708770877088,-5.086108610861086,-5.084508450845084,-5.082908290829083,-5.081308130813081,-5.079707970797079,-5.078107810781078,-5.076507650765077,-5.074907490749075,-5.073307330733073,-5.0717071707170716,-5.07010701070107,-5.068506850685068,-5.066906690669066,-5.065306530653065,-5.063706370637064,-5.062106210621062,-5.06050605060506,-5.058905890589059,-5.0573057305730575,-5.0557055705570555,-5.0541054105410534,-5.052505250525052,-5.050905090509051,-5.049304930493049,-5.047704770477047,-5.046104610461046,-5.044504450445045,-5.042904290429043,-5.041304130413041,-5.039703970397039,-5.038103810381038,-5.036503650365036,-5.034903490349034,-5.033303330333033,-5.031703170317032,-5.03010301030103,-5.028502850285028,-5.026902690269027,-5.025302530253025,-5.023702370237023,-5.022102210221022,-5.020502050205021,-5.018901890189019,-5.017301730173017,-5.015701570157016,-5.014101410141015,-5.012501250125013,-5.0109010901090105,-5.009300930093009,-5.007700770077008,-5.006100610061006,-5.004500450045004,-5.002900290029003,-5.001300130013002,-4.999699969997,-4.998099809980998,-4.9964996499649965,-4.994899489948995,-4.993299329932993,-4.991699169916991,-4.99009900990099,-4.988498849884989,-4.986898689868987,-4.985298529852985,-4.983698369836984,-4.9820982098209825,-4.9804980498049805,-4.978897889788978,-4.977297729772977,-4.975697569756976,-4.974097409740974,-4.972497249724972,-4.970897089708971,-4.96929692969297,-4.967696769676968,-4.9660966096609656,-4.964496449644964,-4.962896289628963,-4.961296129612961,-4.959695969596959,-4.958095809580958,-4.956495649564957,-4.954895489548955,-4.953295329532953,-4.9516951695169515,-4.95009500950095,-4.948494849484948,-4.946894689468946,-4.945294529452945,-4.943694369436944,-4.942094209420942,-4.94049404940494,-4.938893889388939,-4.9372937293729375,-4.9356935693569355,-4.934093409340933,-4.932493249324932,-4.930893089308931,-4.929292929292929,-4.927692769276927,-4.926092609260926,-4.924492449244925,-4.922892289228923,-4.921292129212921,-4.919691969196919,-4.918091809180918,-4.916491649164916,-4.914891489148914,-4.913291329132913,-4.911691169116912,-4.91009100910091,-4.908490849084908,-4.906890689068907,-4.905290529052905,-4.903690369036903,-4.902090209020902,-4.900490049004901,-4.898889888988899,-4.897289728972897,-4.895689568956896,-4.894089408940895,-4.892489248924893,-4.8908890889088905,-4.889288928892889,-4.887688768876888,-4.886088608860886,-4.884488448844884,-4.882888288828883,-4.881288128812882,-4.87968796879688,-4.878087808780878,-4.8764876487648765,-4.874887488748875,-4.873287328732873,-4.871687168716871,-4.87008700870087,-4.868486848684869,-4.866886688668867,-4.865286528652865,-4.863686368636864,-4.8620862086208625,-4.86048604860486,-4.858885888588858,-4.857285728572857,-4.855685568556856,-4.854085408540854,-4.852485248524852,-4.850885088508851,-4.84928492849285,-4.847684768476848,-4.8460846084608455,-4.844484448444844,-4.842884288428843,-4.841284128412841,-4.839683968396839,-4.838083808380838,-4.836483648364837,-4.834883488348835,-4.833283328332833,-4.8316831683168315,-4.83008300830083,-4.828482848284828,-4.826882688268826,-4.825282528252825,-4.823682368236824,-4.822082208220822,-4.82048204820482,-4.818881888188819,-4.8172817281728175,-4.8156815681568155,-4.814081408140813,-4.812481248124812,-4.810881088108811,-4.809280928092809,-4.807680768076807,-4.806080608060806,-4.804480448044805,-4.802880288028803,-4.801280128012801,-4.799679967996799,-4.798079807980798,-4.796479647964796,-4.794879487948794,-4.793279327932793,-4.791679167916792,-4.79007900790079,-4.788478847884788,-4.786878687868787,-4.785278527852785,-4.783678367836783,-4.782078207820782,-4.780478047804781,-4.778877887788779,-4.777277727772777,-4.775677567756776,-4.774077407740775,-4.7724772477247726,-4.7708770877087705,-4.769276927692769,-4.767676767676768,-4.766076607660766,-4.764476447644764,-4.762876287628763,-4.761276127612762,-4.75967596759676,-4.758075807580758,-4.7564756475647565,-4.754875487548755,-4.753275327532753,-4.751675167516751,-4.75007500750075,-4.748474847484749,-4.746874687468747,-4.745274527452745,-4.743674367436744,-4.7420742074207425,-4.74047404740474,-4.738873887388738,-4.737273727372737,-4.735673567356736,-4.734073407340734,-4.732473247324732,-4.730873087308731,-4.72927292729273,-4.727672767276728,-4.7260726072607255,-4.724472447244724,-4.722872287228723,-4.721272127212721,-4.719671967196719,-4.718071807180718,-4.716471647164717,-4.714871487148715,-4.713271327132713,-4.7116711671167115,-4.71007100710071,-4.708470847084708,-4.706870687068706,-4.705270527052705,-4.703670367036704,-4.702070207020702,-4.7004700470047,-4.698869886988699,-4.6972697269726975,-4.6956695669566955,-4.694069406940693,-4.692469246924692,-4.690869086908691,-4.689268926892689,-4.687668766876687,-4.686068606860686,-4.684468446844685,-4.682868286828683,-4.681268126812681,-4.679667966796679,-4.678067806780678,-4.676467646764676,-4.674867486748674,-4.673267326732673,-4.671667166716672,-4.67006700670067,-4.668466846684668,-4.6668666866686666,-4.665266526652665,-4.663666366636663,-4.662066206620662,-4.660466046604661,-4.658865886588659,-4.657265726572657,-4.655665566556656,-4.654065406540655,-4.6524652465246525,-4.6508650865086505,-4.649264926492649,-4.647664766476648,-4.646064606460646,-4.644464446444644,-4.642864286428643,-4.641264126412642,-4.63966396639664,-4.638063806380638,-4.6364636463646365,-4.634863486348635,-4.633263326332633,-4.631663166316631,-4.63006300630063,-4.628462846284629,-4.626862686268627,-4.625262526252625,-4.623662366236624,-4.6220622062206225,-4.62046204620462,-4.618861886188618,-4.617261726172617,-4.615661566156616,-4.614061406140614,-4.612461246124612,-4.610861086108611,-4.60926092609261,-4.607660766076608,-4.6060606060606055,-4.604460446044604,-4.602860286028603,-4.601260126012601,-4.599659965996599,-4.598059805980598,-4.596459645964597,-4.594859485948595,-4.593259325932593,-4.5916591659165915,-4.59005900590059,-4.588458845884588,-4.586858685868586,-4.585258525852585,-4.583658365836584,-4.582058205820582,-4.58045804580458,-4.578857885788579,-4.5772577257725775,-4.5756575657565755,-4.574057405740573,-4.572457245724572,-4.570857085708571,-4.569256925692569,-4.567656765676567,-4.566056605660566,-4.564456445644565,-4.562856285628563,-4.5612561256125606,-4.559655965596559,-4.558055805580558,-4.556455645564556,-4.554855485548554,-4.553255325532553,-4.551655165516552,-4.55005500550055,-4.548454845484548,-4.5468546854685465,-4.545254525452545,-4.543654365436543,-4.542054205420541,-4.540454045404541,-4.538853885388539,-4.537253725372537,-4.535653565356536,-4.534053405340535,-4.5324532453245325,-4.5308530853085305,-4.529252925292529,-4.527652765276528,-4.526052605260526,-4.524452445244524,-4.522852285228523,-4.521252125212522,-4.51965196519652,-4.518051805180518,-4.5164516451645165,-4.514851485148515,-4.513251325132513,-4.511651165116511,-4.51005100510051,-4.508450845084509,-4.506850685068507,-4.505250525052505,-4.503650365036504,-4.5020502050205025,-4.5004500450045,-4.498849884988498,-4.497249724972497,-4.495649564956496,-4.494049404940494,-4.492449244924492,-4.490849084908491,-4.48924892489249,-4.487648764876488,-4.4860486048604855,-4.484448444844484,-4.482848284828483,-4.481248124812481,-4.479647964796479,-4.478047804780478,-4.476447644764477,-4.474847484748475,-4.473247324732473,-4.4716471647164715,-4.47004700470047,-4.468446844684468,-4.466846684668466,-4.465246524652465,-4.463646364636464,-4.462046204620462,-4.46044604460446,-4.458845884588459,-4.4572457245724575,-4.455645564556455,-4.454045404540453,-4.452445244524452,-4.450845084508451,-4.449244924492449,-4.447644764476447,-4.446044604460446,-4.444444444444445,-4.442844284428443,-4.4412441244124405,-4.439643964396439,-4.438043804380438,-4.436443644364436,-4.434843484348434,-4.433243324332433,-4.431643164316432,-4.43004300430043,-4.428442844284428,-4.4268426842684265,-4.425242524252425,-4.423642364236423,-4.422042204220421,-4.42044204420442,-4.418841884188419,-4.417241724172417,-4.415641564156416,-4.414041404140415,-4.4124412441244125,-4.4108410841084105,-4.409240924092409,-4.407640764076408,-4.406040604060406,-4.404440444044404,-4.402840284028403,-4.401240124012402,-4.3996399639964,-4.398039803980398,-4.3964396439643965,-4.394839483948395,-4.393239323932393,-4.391639163916391,-4.39003900390039,-4.388438843884389,-4.386838683868387,-4.385238523852385,-4.383638363836384,-4.3820382038203824,-4.38043804380438,-4.378837883788378,-4.377237723772377,-4.375637563756376,-4.374037403740374,-4.372437243724372,-4.370837083708371,-4.36923692369237,-4.3676367636763676,-4.3660366036603655,-4.364436443644364,-4.362836283628363,-4.361236123612361,-4.359635963596359,-4.358035803580358,-4.356435643564357,-4.354835483548355,-4.353235323532353,-4.3516351635163515,-4.35003500350035,-4.348434843484348,-4.346834683468346,-4.345234523452345,-4.343634363436344,-4.342034203420342,-4.34043404340434,-4.338833883388339,-4.3372337233723375,-4.335633563356335,-4.334033403340333,-4.332433243324332,-4.330833083308331,-4.329232923292329,-4.327632763276327,-4.326032603260326,-4.324432443244325,-4.322832283228323,-4.3212321232123205,-4.319631963196319,-4.318031803180318,-4.316431643164316,-4.314831483148314,-4.313231323132313,-4.311631163116312,-4.31003100310031,-4.308430843084308,-4.3068306830683065,-4.305230523052305,-4.303630363036303,-4.302030203020301,-4.3004300430043,-4.298829882988299,-4.297229722972297,-4.295629562956296,-4.294029402940295,-4.2924292429242925,-4.2908290829082905,-4.289228922892289,-4.287628762876288,-4.286028602860286,-4.284428442844284,-4.282828282828283,-4.281228122812282,-4.27962796279628,-4.278027802780278,-4.2764276427642764,-4.274827482748275,-4.273227322732273,-4.271627162716271,-4.27002700270027,-4.268426842684269,-4.266826682668267,-4.265226522652265,-4.263626362636264,-4.262026202620262,-4.26042604260426,-4.258825882588258,-4.257225722572257,-4.255625562556256,-4.254025402540254,-4.252425242524252,-4.250825082508251,-4.24922492249225,-4.2476247624762475,-4.2460246024602455,-4.244424442444244,-4.242824282428243,-4.241224122412241,-4.239623962396239,-4.238023802380238,-4.236423642364237,-4.234823482348235,-4.233223322332233,-4.2316231623162315,-4.23002300230023,-4.228422842284228,-4.226822682268226,-4.225222522252225,-4.223622362236224,-4.222022202220222,-4.22042204220422,-4.218821882188219,-4.2172217221722175,-4.215621562156215,-4.214021402140213,-4.212421242124212,-4.210821082108211,-4.209220922092209,-4.207620762076207,-4.206020602060206,-4.204420442044205,-4.202820282028203,-4.2012201220122005,-4.199619961996199,-4.198019801980198,-4.196419641964196,-4.194819481948194,-4.193219321932193,-4.191619161916192,-4.19001900190019,-4.188418841884188,-4.1868186818681865,-4.185218521852185,-4.183618361836183,-4.182018201820181,-4.18041804180418,-4.178817881788179,-4.177217721772177,-4.175617561756176,-4.1740174017401745,-4.1724172417241725,-4.1708170817081704,-4.169216921692169,-4.167616761676168,-4.166016601660166,-4.164416441644164,-4.162816281628163,-4.161216121612162,-4.15961596159616,-4.158015801580158,-4.156415641564156,-4.154815481548155,-4.153215321532153,-4.151615161516151,-4.15001500150015,-4.148414841484149,-4.146814681468147,-4.145214521452145,-4.143614361436144,-4.142014201420142,-4.14041404140414,-4.138813881388138,-4.137213721372137,-4.135613561356136,-4.134013401340134,-4.132413241324132,-4.130813081308131,-4.12921292129213,-4.1276127612761275,-4.1260126012601255,-4.124412441244124,-4.122812281228123,-4.121212121212121,-4.119611961196119,-4.118011801180118,-4.116411641164117,-4.114811481148115,-4.113211321132113,-4.1116111611161115,-4.11001100110011,-4.108410841084108,-4.106810681068106,-4.105210521052105,-4.103610361036104,-4.102010201020102,-4.1004100410041,-4.098809880988099,-4.0972097209720975,-4.095609560956095,-4.094009400940093,-4.092409240924092,-4.090809080908091,-4.089208920892089,-4.087608760876087,-4.086008600860086,-4.084408440844085,-4.082808280828083,-4.0812081208120805,-4.079607960796079,-4.078007800780078,-4.076407640764076,-4.074807480748074,-4.073207320732073,-4.071607160716072,-4.07000700070007,-4.068406840684068,-4.0668066806680665,-4.065206520652065,-4.063606360636063,-4.062006200620061,-4.06040604060406,-4.058805880588059,-4.057205720572057,-4.055605560556055,-4.0540054005400545,-4.0524052405240525,-4.05080508050805,-4.049204920492049,-4.047604760476048,-4.046004600460046,-4.044404440444044,-4.042804280428043,-4.041204120412042,-4.03960396039604,-4.038003800380038,-4.036403640364036,-4.034803480348035,-4.033203320332033,-4.031603160316031,-4.03000300030003,-4.028402840284029,-4.026802680268027,-4.025202520252025,-4.023602360236024,-4.022002200220022,-4.02040204020402,-4.018801880188018,-4.017201720172017,-4.015601560156016,-4.014001400140014,-4.012401240124012,-4.010801080108011,-4.00920092009201,-4.0076007600760075,-4.0060006000600055,-4.004400440044004,-4.002800280028003,-4.001200120012001,-3.999599959995999,-3.997999799979998,-3.996399639963996,-3.9947994799479947,-3.9931993199319935,-3.9915991599159915,-3.9899989998999903,-3.9883988398839882,-3.986798679867987,-3.985198519851985,-3.983598359835984,-3.981998199819982,-3.9803980398039807,-3.9787978797879786,-3.9771977197719774,-3.9755975597559754,-3.9739973997399742,-3.972397239723972,-3.970797079707971,-3.969196919691969,-3.967596759675968,-3.9659965996599658,-3.9643964396439646,-3.9627962796279625,-3.9611961196119614,-3.9595959595959593,-3.957995799579958,-3.956395639563956,-3.954795479547955,-3.953195319531953,-3.9515951595159517,-3.9499949994999497,-3.9483948394839485,-3.9467946794679465,-3.9451945194519453,-3.9435943594359433,-3.941994199419942,-3.94039403940394,-3.938793879387939,-3.937193719371937,-3.9355935593559357,-3.9339933993399336,-3.9323932393239325,-3.9307930793079304,-3.9291929192919293,-3.927592759275927,-3.925992599259926,-3.924392439243924,-3.922792279227923,-3.921192119211921,-3.9195919591959196,-3.9179917991799176,-3.9163916391639164,-3.9147914791479144,-3.913191319131913,-3.911591159115911,-3.90999099909991,-3.908390839083908,-3.906790679067907,-3.9051905190519047,-3.9035903590359036,-3.9019901990199015,-3.9003900390039004,-3.8987898789878983,-3.897189718971897,-3.895589558955895,-3.893989398939894,-3.892389238923892,-3.8907890789078907,-3.8891889188918887,-3.8875887588758875,-3.8859885988598855,-3.8843884388438843,-3.8827882788278822,-3.881188118811881,-3.879587958795879,-3.877987798779878,-3.876387638763876,-3.8747874787478747,-3.8731873187318735,-3.8715871587158714,-3.8699869986998703,-3.8683868386838682,-3.866786678667867,-3.865186518651865,-3.863586358635864,-3.861986198619862,-3.8603860386038606,-3.8587858785878586,-3.8571857185718574,-3.8555855585558554,-3.8539853985398542,-3.852385238523852,-3.850785078507851,-3.849184918491849,-3.847584758475848,-3.8459845984598457,-3.8443844384438446,-3.8427842784278425,-3.8411841184118414,-3.8395839583958393,-3.837983798379838,-3.836383638363836,-3.834783478347835,-3.833183318331833,-3.8315831583158317,-3.8299829982998297,-3.8283828382838285,-3.8267826782678265,-3.8251825182518253,-3.8235823582358233,-3.821982198219822,-3.82038203820382,-3.818781878187819,-3.817181718171817,-3.8155815581558157,-3.8139813981398136,-3.8123812381238125,-3.8107810781078104,-3.8091809180918093,-3.807580758075807,-3.805980598059806,-3.804380438043804,-3.802780278027803,-3.801180118011801,-3.7995799579957996,-3.7979797979797976,-3.7963796379637964,-3.7947794779477944,-3.793179317931793,-3.791579157915791,-3.78997899789979,-3.788378837883788,-3.7867786778677868,-3.7851785178517847,-3.7835783578357836,-3.7819781978197815,-3.7803780378037803,-3.7787778777877783,-3.777177717771777,-3.775577557755775,-3.773977397739774,-3.772377237723772,-3.7707770777077707,-3.7691769176917687,-3.7675767576757675,-3.7659765976597654,-3.7643764376437643,-3.7627762776277622,-3.761176117611761,-3.759575957595759,-3.757975797579758,-3.756375637563756,-3.7547754775477546,-3.7531753175317526,-3.7515751575157514,-3.7499749974997503,-3.7483748374837482,-3.746774677467747,-3.745174517451745,-3.743574357435744,-3.741974197419742,-3.7403740374037406,-3.7387738773877386,-3.7371737173717374,-3.7355735573557354,-3.733973397339734,-3.732373237323732,-3.730773077307731,-3.729172917291729,-3.727572757275728,-3.7259725972597257,-3.7243724372437246,-3.7227722772277225,-3.7211721172117214,-3.7195719571957193,-3.717971797179718,-3.716371637163716,-3.714771477147715,-3.713171317131713,-3.7115711571157117,-3.7099709970997097,-3.7083708370837085,-3.7067706770677065,-3.7051705170517053,-3.7035703570357033,-3.701970197019702,-3.7003700370037,-3.698769876987699,-3.697169716971697,-3.6955695569556957,-3.6939693969396936,-3.6923692369236925,-3.6907690769076904,-3.6891689168916892,-3.687568756875687,-3.685968596859686,-3.684368436843684,-3.682768276827683,-3.6811681168116808,-3.6795679567956796,-3.6779677967796776,-3.6763676367636764,-3.6747674767476743,-3.673167316731673,-3.671567156715671,-3.66996699669967,-3.668366836683668,-3.6667666766676668,-3.6651665166516647,-3.6635663566356635,-3.6619661966196615,-3.6603660366036603,-3.6587658765876583,-3.657165716571657,-3.655565556555655,-3.653965396539654,-3.652365236523652,-3.6507650765076507,-3.6491649164916486,-3.6475647564756475,-3.6459645964596454,-3.6443644364436443,-3.6427642764276422,-3.641164116411641,-3.639563956395639,-3.637963796379638,-3.636363636363636,-3.6347634763476346,-3.6331633163316326,-3.6315631563156314,-3.6299629962996303,-3.628362836283628,-3.626762676267627,-3.625162516251625,-3.623562356235624,-3.621962196219622,-3.6203620362036206,-3.6187618761876186,-3.6171617161716174,-3.6155615561556154,-3.613961396139614,-3.612361236123612,-3.610761076107611,-3.609160916091609,-3.6075607560756078,-3.6059605960596057,-3.6043604360436046,-3.6027602760276025,-3.6011601160116014,-3.5995599559955993,-3.597959795979598,-3.596359635963596,-3.594759475947595,-3.593159315931593,-3.5915591559155917,-3.5899589958995897,-3.5883588358835885,-3.5867586758675865,-3.5851585158515853,-3.5835583558355832,-3.581958195819582,-3.58035803580358,-3.578757875787579,-3.577157715771577,-3.5755575557555757,-3.5739573957395736,-3.5723572357235724,-3.5707570757075704,-3.5691569156915692,-3.567556755675567,-3.565956595659566,-3.564356435643564,-3.562756275627563,-3.5611561156115608,-3.5595559555955596,-3.5579557955795575,-3.5563556355635564,-3.5547554755475543,-3.553155315531553,-3.551555155515551,-3.54995499549955,-3.548354835483548,-3.5467546754675467,-3.5451545154515447,-3.5435543554355435,-3.5419541954195415,-3.5403540354035403,-3.5387538753875383,-3.537153715371537,-3.535553555355535,-3.533953395339534,-3.532353235323532,-3.5307530753075307,-3.5291529152915286,-3.5275527552755275,-3.5259525952595254,-3.5243524352435243,-3.522752275227522,-3.521152115211521,-3.519551955195519,-3.517951795179518,-3.516351635163516,-3.5147514751475146,-3.5131513151315126,-3.5115511551155114,-3.5099509950995094,-3.508350835083508,-3.506750675067507,-3.505150515051505,-3.503550355035504,-3.5019501950195018,-3.5003500350035006,-3.4987498749874986,-3.4971497149714974,-3.4955495549554954,-3.493949394939494,-3.492349234923492,-3.490749074907491,-3.489148914891489,-3.4875487548754878,-3.4859485948594857,-3.4843484348434846,-3.4827482748274825,-3.4811481148114813,-3.4795479547954793,-3.477947794779478,-3.476347634763476,-3.474747474747475,-3.473147314731473,-3.4715471547154717,-3.4699469946994697,-3.4683468346834685,-3.4667466746674664,-3.4651465146514653,-3.4635463546354632,-3.461946194619462,-3.46034603460346,-3.458745874587459,-3.457145714571457,-3.4555455545554556,-3.4539453945394536,-3.4523452345234524,-3.4507450745074504,-3.449144914491449,-3.447544754475447,-3.445944594459446,-3.444344434443444,-3.442744274427443,-3.4411441144114407,-3.4395439543954396,-3.4379437943794375,-3.4363436343634364,-3.4347434743474343,-3.433143314331433,-3.431543154315431,-3.42994299429943,-3.428342834283428,-3.4267426742674267,-3.4251425142514247,-3.4235423542354235,-3.4219421942194215,-3.4203420342034203,-3.4187418741874183,-3.417141714171417,-3.415541554155415,-3.413941394139414,-3.412341234123412,-3.4107410741074107,-3.4091409140914086,-3.4075407540754075,-3.4059405940594054,-3.4043404340434043,-3.402740274027402,-3.401140114011401,-3.399539953995399,-3.397939793979398,-3.3963396339633958,-3.3947394739473946,-3.3931393139313926,-3.3915391539153914,-3.3899389938993894,-3.388338833883388,-3.386738673867387,-3.385138513851385,-3.383538353835384,-3.3819381938193818,-3.3803380338033806,-3.3787378737873786,-3.3771377137713774,-3.3755375537553753,-3.373937393739374,-3.372337233723372,-3.370737073707371,-3.369136913691369,-3.3675367536753678,-3.3659365936593657,-3.3643364336433645,-3.3627362736273625,-3.3611361136113613,-3.3595359535953593,-3.357935793579358,-3.356335633563356,-3.354735473547355,-3.353135313531353,-3.3515351535153517,-3.3499349934993496,-3.3483348334833485,-3.3467346734673464,-3.3451345134513453,-3.343534353435343,-3.341934193419342,-3.34033403340334,-3.338733873387339,-3.337133713371337,-3.3355335533553356,-3.3339333933393336,-3.3323332333233324,-3.3307330733073304,-3.329132913291329,-3.327532753275327,-3.325932593259326,-3.324332433243324,-3.322732273227323,-3.3211321132113207,-3.3195319531953196,-3.3179317931793175,-3.3163316331633164,-3.3147314731473143,-3.313131313131313,-3.311531153115311,-3.30993099309931,-3.308330833083308,-3.3067306730673067,-3.3051305130513047,-3.3035303530353035,-3.3019301930193015,-3.3003300330033003,-3.2987298729872983,-3.297129712971297,-3.295529552955295,-3.293929392939294,-3.292329232923292,-3.2907290729072907,-3.2891289128912886,-3.2875287528752875,-3.2859285928592854,-3.2843284328432842,-3.282728272827282,-3.281128112811281,-3.279527952795279,-3.277927792779278,-3.2763276327632758,-3.2747274727472746,-3.2731273127312726,-3.2715271527152714,-3.2699269926992693,-3.268326832683268,-3.266726672667266,-3.265126512651265,-3.263526352635264,-3.2619261926192618,-3.2603260326032606,-3.2587258725872585,-3.2571257125712574,-3.2555255525552553,-3.253925392539254,-3.252325232523252,-3.250725072507251,-3.249124912491249,-3.2475247524752477,-3.2459245924592457,-3.2443244324432445,-3.2427242724272425,-3.2411241124112413,-3.2395239523952393,-3.237923792379238,-3.236323632363236,-3.234723472347235,-3.233123312331233,-3.2315231523152317,-3.2299229922992296,-3.2283228322832285,-3.2267226722672264,-3.2251225122512253,-3.223522352235223,-3.221922192219222,-3.22032203220322,-3.218721872187219,-3.217121712171217,-3.2155215521552156,-3.2139213921392136,-3.2123212321232124,-3.2107210721072104,-3.209120912091209,-3.207520752075207,-3.205920592059206,-3.204320432043204,-3.2027202720272028,-3.2011201120112007,-3.1995199519951996,-3.1979197919791975,-3.1963196319631964,-3.1947194719471943,-3.193119311931193,-3.191519151915191,-3.18991899189919,-3.188318831883188,-3.1867186718671867,-3.1851185118511847,-3.1835183518351835,-3.1819181918191815,-3.1803180318031803,-3.1787178717871782,-3.177117711771177,-3.175517551755175,-3.173917391739174,-3.172317231723172,-3.1707170717071707,-3.1691169116911686,-3.1675167516751674,-3.1659165916591654,-3.1643164316431642,-3.162716271627162,-3.161116111611161,-3.159515951595159,-3.157915791579158,-3.1563156315631558,-3.1547154715471546,-3.1531153115311525,-3.1515151515151514,-3.1499149914991493,-3.148314831483148,-3.146714671467146,-3.145114511451145,-3.143514351435144,-3.1419141914191417,-3.1403140314031406,-3.1387138713871385,-3.1371137113711374,-3.1355135513551353,-3.133913391339134,-3.132313231323132,-3.130713071307131,-3.129112911291129,-3.1275127512751277,-3.1259125912591257,-3.1243124312431245,-3.1227122712271225,-3.1211121112111213,-3.1195119511951193,-3.117911791179118,-3.116311631163116,-3.114711471147115,-3.113111311131113,-3.1115111511151117,-3.1099109910991096,-3.1083108310831085,-3.1067106710671064,-3.1051105110511052,-3.103510351035103,-3.101910191019102,-3.1003100310031,-3.098709870987099,-3.0971097109710968,-3.0955095509550956,-3.0939093909390936,-3.0923092309230924,-3.0907090709070904,-3.089108910891089,-3.087508750875087,-3.085908590859086,-3.084308430843084,-3.0827082708270828,-3.0811081108110807,-3.0795079507950796,-3.0779077907790775,-3.0763076307630763,-3.0747074707470743,-3.073107310731073,-3.071507150715071,-3.06990699069907,-3.068306830683068,-3.0667066706670667,-3.0651065106510647,-3.0635063506350635,-3.0619061906190614,-3.0603060306030603,-3.0587058705870582,-3.057105710571057,-3.055505550555055,-3.053905390539054,-3.052305230523052,-3.0507050705070506,-3.0491049104910486,-3.0475047504750474,-3.0459045904590454,-3.044304430443044,-3.042704270427042,-3.041104110411041,-3.039503950395039,-3.037903790379038,-3.0363036303630357,-3.0347034703470346,-3.0331033103310325,-3.0315031503150314,-3.0299029902990293,-3.028302830283028,-3.026702670267026,-3.025102510251025,-3.023502350235024,-3.0219021902190217,-3.0203020302030206,-3.0187018701870185,-3.0171017101710174,-3.0155015501550153,-3.013901390139014,-3.012301230123012,-3.010701070107011,-3.009100910091009,-3.0075007500750077,-3.0059005900590057,-3.0043004300430045,-3.0027002700270025,-3.0011001100110013,-2.9994999499949992,-2.997899789978998,-2.996299629962996,-2.994699469946995,-2.993099309930993,-2.9914991499149917,-2.9898989898989896,-2.9882988298829884,-2.9866986698669864,-2.9850985098509852,-2.983498349834983,-2.981898189818982,-2.98029802980298,-2.978697869786979,-2.9770977097709768,-2.9754975497549756,-2.9738973897389736,-2.9722972297229724,-2.9706970697069703,-2.969096909690969,-2.967496749674967,-2.965896589658966,-2.964296429642964,-2.9626962696269628,-2.9610961096109607,-2.9594959495949595,-2.9578957895789575,-2.9562956295629563,-2.9546954695469543,-2.953095309530953,-2.951495149514951,-2.94989498949895,-2.948294829482948,-2.9466946694669467,-2.9450945094509446,-2.9434943494349435,-2.9418941894189414,-2.9402940294029403,-2.938693869386938,-2.937093709370937,-2.935493549354935,-2.933893389338934,-2.932293229322932,-2.9306930693069306,-2.9290929092909286,-2.9274927492749274,-2.9258925892589254,-2.924292429242924,-2.922692269226922,-2.921092109210921,-2.919491949194919,-2.917891789178918,-2.9162916291629157,-2.9146914691469146,-2.9130913091309125,-2.9114911491149114,-2.9098909890989093,-2.908290829082908,-2.906690669066906,-2.905090509050905,-2.903490349034903,-2.9018901890189017,-2.9002900290029006,-2.8986898689868985,-2.8970897089708973,-2.8954895489548953,-2.893889388938894,-2.892289228922892,-2.890689068906891,-2.889088908890889,-2.8874887488748877,-2.8858885888588857,-2.8842884288428845,-2.8826882688268824,-2.8810881088108813,-2.8794879487948792,-2.877887788778878,-2.876287628762876,-2.874687468746875,-2.873087308730873,-2.8714871487148717,-2.8698869886988696,-2.8682868286828684,-2.8666866686668664,-2.8650865086508652,-2.863486348634863,-2.861886188618862,-2.86028602860286,-2.858685868586859,-2.8570857085708568,-2.8554855485548556,-2.8538853885388535,-2.8522852285228524,-2.8506850685068503,-2.849084908490849,-2.847484748474847,-2.845884588458846,-2.844284428442844,-2.8426842684268427,-2.8410841084108407,-2.8394839483948395,-2.8378837883788375,-2.8362836283628363,-2.8346834683468343,-2.833083308330833,-2.831483148314831,-2.82988298829883,-2.828282828282828,-2.8266826682668267,-2.8250825082508246,-2.8234823482348235,-2.8218821882188214,-2.8202820282028203,-2.818681868186818,-2.817081708170817,-2.815481548154815,-2.813881388138814,-2.812281228122812,-2.8106810681068106,-2.8090809080908086,-2.8074807480748074,-2.8058805880588054,-2.804280428042804,-2.802680268026802,-2.801080108010801,-2.799479947994799,-2.7978797879787978,-2.7962796279627957,-2.7946794679467946,-2.7930793079307925,-2.7914791479147913,-2.7898789878987893,-2.788278827882788,-2.786678667866786,-2.785078507850785,-2.783478347834783,-2.7818781878187817,-2.7802780278027805,-2.7786778677867785,-2.7770777077707773,-2.7754775477547753,-2.773877387738774,-2.772277227722772,-2.770677067706771,-2.769076907690769,-2.7674767476747677,-2.7658765876587657,-2.7642764276427645,-2.7626762676267624,-2.7610761076107613,-2.7594759475947592,-2.757875787578758,-2.756275627562756,-2.754675467546755,-2.753075307530753,-2.7514751475147516,-2.7498749874987496,-2.7482748274827484,-2.7466746674667464,-2.745074507450745,-2.743474347434743,-2.741874187418742,-2.74027402740274,-2.738673867386739,-2.7370737073707367,-2.7354735473547356,-2.7338733873387335,-2.7322732273227324,-2.7306730673067303,-2.729072907290729,-2.727472747274727,-2.725872587258726,-2.724272427242724,-2.7226722672267227,-2.7210721072107207,-2.7194719471947195,-2.7178717871787175,-2.7162716271627163,-2.7146714671467143,-2.713071307130713,-2.711471147114711,-2.70987098709871,-2.708270827082708,-2.7066706670667067,-2.7050705070507046,-2.7034703470347035,-2.7018701870187014,-2.7002700270027002,-2.698669866986698,-2.697069706970697,-2.695469546954695,-2.693869386938694,-2.6922692269226918,-2.6906690669066906,-2.6890689068906886,-2.6874687468746874,-2.6858685868586853,-2.684268426842684,-2.682668266826682,-2.681068106810681,-2.679467946794679,-2.6778677867786778,-2.6762676267626757,-2.6746674667466745,-2.6730673067306725,-2.6714671467146713,-2.6698669866986693,-2.668266826682668,-2.666666666666666,-2.665066506650665,-2.663466346634663,-2.6618661866186617,-2.6602660266026597,-2.6586658665866585,-2.6570657065706573,-2.6554655465546553,-2.653865386538654,-2.652265226522652,-2.650665066506651,-2.649064906490649,-2.6474647464746477,-2.6458645864586456,-2.6442644264426445,-2.6426642664266424,-2.6410641064106413,-2.639463946394639,-2.637863786378638,-2.636263626362636,-2.634663466346635,-2.633063306330633,-2.6314631463146316,-2.6298629862986296,-2.6282628262826284,-2.6266626662666264,-2.625062506250625,-2.623462346234623,-2.621862186218622,-2.62026202620262,-2.618661866186619,-2.6170617061706167,-2.6154615461546156,-2.6138613861386135,-2.6122612261226124,-2.6106610661066103,-2.609060906090609,-2.607460746074607,-2.605860586058606,-2.604260426042604,-2.6026602660266027,-2.6010601060106007,-2.5994599459945995,-2.5978597859785975,-2.5962596259625963,-2.5946594659465942,-2.593059305930593,-2.591459145914591,-2.58985898589859,-2.588258825882588,-2.5866586658665867,-2.5850585058505846,-2.5834583458345834,-2.5818581858185814,-2.5802580258025802,-2.578657865786578,-2.577057705770577,-2.575457545754575,-2.573857385738574,-2.5722572257225718,-2.5706570657065706,-2.5690569056905685,-2.5674567456745674,-2.5658565856585653,-2.564256425642564,-2.562656265626562,-2.561056105610561,-2.559455945594559,-2.5578557855785578,-2.5562556255625557,-2.5546554655465545,-2.5530553055305525,-2.5514551455145513,-2.5498549854985493,-2.548254825482548,-2.546654665466546,-2.545054505450545,-2.543454345434543,-2.5418541854185417,-2.5402540254025396,-2.5386538653865385,-2.5370537053705373,-2.5354535453545353,-2.533853385338534,-2.532253225322532,-2.530653065306531,-2.529052905290529,-2.5274527452745277,-2.5258525852585256,-2.5242524252425245,-2.5226522652265224,-2.5210521052105213,-2.519451945194519,-2.517851785178518,-2.516251625162516,-2.514651465146515,-2.513051305130513,-2.5114511451145116,-2.5098509850985096,-2.5082508250825084,-2.5066506650665064,-2.505050505050505,-2.503450345034503,-2.501850185018502,-2.5002500250025,-2.4986498649864988,-2.4970497049704967,-2.4954495449544956,-2.4938493849384935,-2.4922492249224923,-2.4906490649064903,-2.489048904890489,-2.487448744874487,-2.485848584858486,-2.484248424842484,-2.4826482648264827,-2.4810481048104807,-2.4794479447944795,-2.4778477847784774,-2.4762476247624763,-2.4746474647464742,-2.473047304730473,-2.471447144714471,-2.46984698469847,-2.468246824682468,-2.4666466646664666,-2.4650465046504646,-2.4634463446344634,-2.4618461846184614,-2.4602460246024602,-2.458645864586458,-2.457045704570457,-2.455445544554455,-2.453845384538454,-2.4522452245224517,-2.4506450645064506,-2.4490449044904485,-2.4474447444744474,-2.4458445844584453,-2.444244424442444,-2.442644264426442,-2.441044104410441,-2.439443944394439,-2.4378437843784377,-2.4362436243624357,-2.4346434643464345,-2.4330433043304325,-2.4314431443144313,-2.4298429842984293,-2.428242824282428,-2.426642664266426,-2.425042504250425,-2.423442344234423,-2.4218421842184217,-2.4202420242024196,-2.4186418641864185,-2.4170417041704164,-2.4154415441544153,-2.413841384138414,-2.412241224122412,-2.410641064106411,-2.409040904090409,-2.4074407440744077,-2.4058405840584056,-2.4042404240424045,-2.4026402640264024,-2.4010401040104012,-2.399439943994399,-2.397839783978398,-2.396239623962396,-2.394639463946395,-2.3930393039303928,-2.3914391439143916,-2.3898389838983896,-2.3882388238823884,-2.3866386638663863,-2.385038503850385,-2.383438343834383,-2.381838183818382,-2.38023802380238,-2.3786378637863788,-2.3770377037703767,-2.3754375437543755,-2.3738373837383735,-2.3722372237223723,-2.3706370637063703,-2.369036903690369,-2.367436743674367,-2.365836583658366,-2.364236423642364,-2.3626362636263627,-2.3610361036103606,-2.3594359435943595,-2.3578357835783574,-2.3562356235623563,-2.3546354635463542,-2.353035303530353,-2.351435143514351,-2.34983498349835,-2.348234823482348,-2.3466346634663466,-2.3450345034503446,-2.3434343434343434,-2.3418341834183414,-2.34023402340234,-2.338633863386338,-2.337033703370337,-2.335433543354335,-2.333833383338334,-2.3322332233223317,-2.3306330633063306,-2.3290329032903285,-2.3274327432743274,-2.3258325832583253,-2.324232423242324,-2.322632263226322,-2.321032103210321,-2.319431943194319,-2.3178317831783177,-2.3162316231623157,-2.3146314631463145,-2.3130313031303125,-2.3114311431143113,-2.3098309830983093,-2.308230823082308,-2.306630663066306,-2.305030503050305,-2.303430343034303,-2.3018301830183017,-2.3002300230022996,-2.2986298629862985,-2.2970297029702964,-2.2954295429542952,-2.293829382938294,-2.292229222922292,-2.290629062906291,-2.289028902890289,-2.2874287428742877,-2.2858285828582856,-2.2842284228422844,-2.2826282628262824,-2.2810281028102812,-2.279427942794279,-2.277827782778278,-2.276227622762276,-2.274627462746275,-2.2730273027302728,-2.2714271427142716,-2.2698269826982695,-2.2682268226822684,-2.2666266626662663,-2.265026502650265,-2.263426342634263,-2.261826182618262,-2.26022602260226,-2.2586258625862587,-2.2570257025702567,-2.2554255425542555,-2.2538253825382535,-2.2522252225222523,-2.2506250625062503,-2.249024902490249,-2.247424742474247,-2.245824582458246,-2.244224422442244,-2.2426242624262427,-2.2410241024102406,-2.2394239423942395,-2.2378237823782374,-2.2362236223622363,-2.234623462346234,-2.233023302330233,-2.231423142314231,-2.22982298229823,-2.228222822282228,-2.2266226622662266,-2.2250225022502246,-2.2234223422342234,-2.2218221822182214,-2.22022202220222,-2.218621862186218,-2.217021702170217,-2.215421542154215,-2.213821382138214,-2.2122212221222117,-2.2106210621062106,-2.2090209020902085,-2.2074207420742074,-2.2058205820582053,-2.204220422042204,-2.202620262026202,-2.201020102010201,-2.199419941994199,-2.1978197819781977,-2.1962196219621957,-2.1946194619461945,-2.1930193019301925,-2.1914191419141913,-2.1898189818981892,-2.188218821882188,-2.186618661866186,-2.185018501850185,-2.183418341834183,-2.1818181818181817,-2.1802180218021796,-2.1786178617861784,-2.1770177017701764,-2.1754175417541752,-2.173817381738174,-2.172217221722172,-2.170617061706171,-2.169016901690169,-2.1674167416741676,-2.1658165816581656,-2.1642164216421644,-2.1626162616261624,-2.161016101610161,-2.159415941594159,-2.157815781578158,-2.156215621562156,-2.154615461546155,-2.1530153015301527,-2.1514151415141516,-2.1498149814981495,-2.1482148214821484,-2.1466146614661463,-2.145014501450145,-2.143414341434143,-2.141814181418142,-2.14021402140214,-2.1386138613861387,-2.1370137013701367,-2.1354135413541355,-2.1338133813381335,-2.1322132213221323,-2.1306130613061303,-2.129012901290129,-2.127412741274127,-2.125812581258126,-2.124212421242124,-2.1226122612261227,-2.1210121012101206,-2.1194119411941195,-2.1178117811781174,-2.1162116211621163,-2.114611461146114,-2.113011301130113,-2.111411141114111,-2.10981098109811,-2.1082108210821078,-2.1066106610661066,-2.1050105010501046,-2.1034103410341034,-2.1018101810181014,-2.1002100210021,-2.098609860986098,-2.097009700970097,-2.095409540954095,-2.0938093809380938,-2.0922092209220917,-2.0906090609060906,-2.0890089008900885,-2.0874087408740873,-2.0858085808580853,-2.084208420842084,-2.082608260826082,-2.081008100810081,-2.079407940794079,-2.0778077807780777,-2.0762076207620757,-2.0746074607460745,-2.0730073007300724,-2.0714071407140713,-2.0698069806980692,-2.068206820682068,-2.066606660666066,-2.065006500650065,-2.063406340634063,-2.0618061806180616,-2.0602060206020596,-2.0586058605860584,-2.0570057005700564,-2.055405540554055,-2.053805380538053,-2.052205220522052,-2.050605060506051,-2.049004900490049,-2.0474047404740476,-2.0458045804580456,-2.0442044204420444,-2.0426042604260424,-2.041004100410041,-2.039403940394039,-2.037803780378038,-2.036203620362036,-2.034603460346035,-2.0330033003300327,-2.0314031403140316,-2.0298029802980295,-2.0282028202820284,-2.0266026602660263,-2.025002500250025,-2.023402340234023,-2.021802180218022,-2.02020202020202,-2.0186018601860187,-2.0170017001700167,-2.0154015401540155,-2.0138013801380135,-2.0122012201220123,-2.0106010601060103,-2.009000900090009,-2.007400740074007,-2.005800580058006,-2.004200420042004,-2.0026002600260027,-2.0010001000100006,-1.9993999399939995,-1.9977997799779974,-1.9961996199619962,-1.9945994599459942,-1.992999299929993,-1.991399139913991,-1.9897989798979898,-1.9881988198819878,-1.9865986598659866,-1.9849984998499846,-1.9833983398339834,-1.9817981798179813,-1.9801980198019802,-1.9785978597859781,-1.976997699769977,-1.975397539753975,-1.9737973797379738,-1.9721972197219717,-1.9705970597059705,-1.9689968996899685,-1.9673967396739673,-1.9657965796579653,-1.9641964196419641,-1.962596259625962,-1.960996099609961,-1.9593959395939589,-1.9577957795779577,-1.9561956195619556,-1.9545954595459545,-1.9529952995299524,-1.9513951395139513,-1.9497949794979492,-1.948194819481948,-1.946594659465946,-1.9449944994499448,-1.9433943394339428,-1.9417941794179416,-1.9401940194019396,-1.9385938593859384,-1.9369936993699364,-1.9353935393539352,-1.9337933793379332,-1.932193219321932,-1.9305930593059308,-1.9289928992899288,-1.9273927392739276,-1.9257925792579256,-1.9241924192419244,-1.9225922592259224,-1.9209920992099212,-1.9193919391939191,-1.917791779177918,-1.916191619161916,-1.9145914591459148,-1.9129912991299127,-1.9113911391139116,-1.9097909790979095,-1.9081908190819084,-1.9065906590659063,-1.9049904990499051,-1.903390339033903,-1.901790179017902,-1.9001900190018999,-1.8985898589858987,-1.8969896989698967,-1.8953895389538955,-1.8937893789378935,-1.8921892189218923,-1.8905890589058902,-1.888988898889889,-1.887388738873887,-1.8857885788578859,-1.8841884188418838,-1.8825882588258827,-1.8809880988098806,-1.8793879387938794,-1.8777877787778774,-1.8761876187618762,-1.8745874587458742,-1.872987298729873,-1.871387138713871,-1.8697869786978698,-1.8681868186818678,-1.8665866586658666,-1.8649864986498645,-1.8633863386338634,-1.8617861786178613,-1.8601860186018602,-1.8585858585858581,-1.856985698569857,-1.855385538553855,-1.8537853785378537,-1.8521852185218517,-1.8505850585058505,-1.8489848984898485,-1.8473847384738473,-1.8457845784578453,-1.844184418441844,-1.842584258425842,-1.840984098409841,-1.8393839383938388,-1.8377837783778377,-1.8361836183618356,-1.8345834583458345,-1.8329832983298324,-1.8313831383138313,-1.8297829782978292,-1.828182818281828,-1.826582658265826,-1.8249824982498248,-1.8233823382338228,-1.8217821782178216,-1.8201820182018196,-1.8185818581858184,-1.8169816981698164,-1.8153815381538152,-1.8137813781378131,-1.812181218121812,-1.81058105810581,-1.8089808980898088,-1.8073807380738076,-1.8057805780578056,-1.8041804180418044,-1.8025802580258024,-1.8009800980098012,-1.7993799379937991,-1.797779777977798,-1.796179617961796,-1.7945794579457948,-1.7929792979297927,-1.7913791379137916,-1.7897789778977895,-1.7881788178817883,-1.7865786578657863,-1.7849784978497851,-1.783378337833783,-1.781778177817782,-1.7801780178017799,-1.7785778577857787,-1.7769776977697767,-1.7753775377537755,-1.7737773777377734,-1.7721772177217723,-1.7705770577057702,-1.768976897689769,-1.767376737673767,-1.7657765776577659,-1.7641764176417638,-1.7625762576257626,-1.7609760976097606,-1.7593759375937594,-1.7577757775777574,-1.7561756175617562,-1.7545754575457542,-1.752975297529753,-1.751375137513751,-1.7497749774977498,-1.7481748174817477,-1.7465746574657466,-1.7449744974497445,-1.7433743374337434,-1.7417741774177413,-1.7401740174017402,-1.738573857385738,-1.736973697369737,-1.735373537353735,-1.7337733773377337,-1.7321732173217317,-1.7305730573057305,-1.7289728972897285,-1.7273727372737273,-1.7257725772577253,-1.724172417241724,-1.722572257225722,-1.7209720972097209,-1.7193719371937188,-1.7177717771777177,-1.7161716171617156,-1.7145714571457145,-1.7129712971297124,-1.7113711371137112,-1.7097709770977092,-1.708170817081708,-1.706570657065706,-1.7049704970497048,-1.7033703370337028,-1.7017701770177016,-1.7001700170016996,-1.6985698569856984,-1.6969696969696964,-1.6953695369536952,-1.6937693769376931,-1.692169216921692,-1.69056905690569,-1.6889688968896888,-1.6873687368736876,-1.6857685768576856,-1.6841684168416844,-1.6825682568256823,-1.6809680968096812,-1.6793679367936791,-1.677767776777678,-1.676167616761676,-1.6745674567456748,-1.6729672967296727,-1.6713671367136715,-1.6697669766976695,-1.6681668166816683,-1.6665666566656663,-1.6649664966496651,-1.663366336633663,-1.661766176617662,-1.6601660166016599,-1.6585658565856587,-1.6569656965696566,-1.6553655365536555,-1.6537653765376534,-1.6521652165216523,-1.6505650565056502,-1.648964896489649,-1.647364736473647,-1.6457645764576458,-1.6441644164416438,-1.6425642564256426,-1.6409640964096406,-1.6393639363936394,-1.6377637763776374,-1.6361636163616362,-1.6345634563456342,-1.632963296329633,-1.631363136313631,-1.6297629762976298,-1.6281628162816277,-1.6265626562656266,-1.6249624962496245,-1.6233623362336234,-1.6217621762176213,-1.6201620162016201,-1.618561856185618,-1.616961696169617,-1.6153615361536149,-1.6137613761376137,-1.6121612161216117,-1.6105610561056105,-1.6089608960896085,-1.6073607360736073,-1.6057605760576052,-1.604160416041604,-1.602560256025602,-1.6009600960096009,-1.5993599359935988,-1.5977597759775977,-1.5961596159615956,-1.5945594559455945,-1.5929592959295924,-1.5913591359135912,-1.5897589758975892,-1.588158815881588,-1.586558655865586,-1.5849584958495848,-1.5833583358335828,-1.5817581758175816,-1.5801580158015796,-1.5785578557855784,-1.5769576957695763,-1.5753575357535752,-1.5737573757375731,-1.572157215721572,-1.57055705570557,-1.5689568956895688,-1.5673567356735667,-1.5657565756575655,-1.5641564156415644,-1.5625562556255623,-1.5609560956095612,-1.5593559355935591,-1.557755775577558,-1.556155615561556,-1.5545554555455547,-1.5529552955295527,-1.5513551355135515,-1.5497549754975495,-1.5481548154815483,-1.5465546554655463,-1.544954495449545,-1.543354335433543,-1.541754175417542,-1.5401540154015398,-1.5385538553855387,-1.5369536953695366,-1.5353535353535355,-1.5337533753375334,-1.5321532153215323,-1.5305530553055302,-1.528952895289529,-1.527352735273527,-1.5257525752575258,-1.5241524152415238,-1.5225522552255226,-1.5209520952095206,-1.5193519351935194,-1.5177517751775174,-1.5161516151615162,-1.5145514551455141,-1.512951295129513,-1.511351135113511,-1.5097509750975098,-1.5081508150815077,-1.5065506550655066,-1.5049504950495045,-1.5033503350335033,-1.5017501750175013,-1.5001500150015001,-1.498549854985498,-1.496949694969497,-1.4953495349534949,-1.4937493749374937,-1.4921492149214917,-1.4905490549054905,-1.4889488948894885,-1.4873487348734873,-1.4857485748574852,-1.484148414841484,-1.482548254825482,-1.4809480948094809,-1.4793479347934788,-1.4777477747774777,-1.4761476147614756,-1.4745474547454744,-1.4729472947294724,-1.4713471347134712,-1.4697469746974692,-1.468146814681468,-1.466546654665466,-1.4649464946494648,-1.4633463346334628,-1.4617461746174616,-1.4601460146014595,-1.4585458545854584,-1.4569456945694563,-1.4553455345534552,-1.4537453745374531,-1.452145214521452,-1.45054505450545,-1.4489448944894487,-1.4473447344734467,-1.4457445744574455,-1.4441444144414444,-1.4425442544254423,-1.4409440944094412,-1.439343934393439,-1.437743774377438,-1.436143614361436,-1.4345434543454347,-1.4329432943294327,-1.4313431343134315,-1.4297429742974295,-1.4281428142814283,-1.4265426542654263,-1.424942494249425,-1.423342334233423,-1.4217421742174219,-1.4201420142014198,-1.4185418541854187,-1.4169416941694166,-1.4153415341534155,-1.4137413741374134,-1.4121412141214122,-1.4105410541054102,-1.408940894089409,-1.407340734073407,-1.4057405740574058,-1.4041404140414038,-1.4025402540254026,-1.4009400940094006,-1.3993399339933994,-1.3977397739773973,-1.3961396139613962,-1.3945394539453941,-1.392939293929393,-1.391339133913391,-1.3897389738973898,-1.3881388138813877,-1.3865386538653866,-1.3849384938493845,-1.3833383338333833,-1.3817381738173813,-1.3801380138013801,-1.378537853785378,-1.376937693769377,-1.3753375337533749,-1.3737373737373737,-1.3721372137213717,-1.3705370537053705,-1.3689368936893684,-1.3673367336733673,-1.3657365736573652,-1.364136413641364,-1.362536253625362,-1.3609360936093609,-1.3593359335933588,-1.3577357735773576,-1.3561356135613556,-1.3545354535453544,-1.3529352935293524,-1.3513351335133512,-1.3497349734973492,-1.348134813481348,-1.346534653465346,-1.3449344934493448,-1.3433343334333427,-1.3417341734173416,-1.3401340134013395,-1.3385338533853384,-1.3369336933693363,-1.3353335333533352,-1.333733373337333,-1.332133213321332,-1.33053305330533,-1.3289328932893287,-1.3273327332733267,-1.3257325732573255,-1.3241324132413244,-1.3225322532253223,-1.3209320932093211,-1.319331933193319,-1.317731773177318,-1.3161316131613159,-1.3145314531453147,-1.3129312931293127,-1.3113311331133115,-1.3097309730973095,-1.3081308130813083,-1.3065306530653062,-1.304930493049305,-1.303330333033303,-1.3017301730173019,-1.3001300130012998,-1.2985298529852987,-1.2969296929692966,-1.2953295329532954,-1.2937293729372934,-1.2921292129212922,-1.2905290529052902,-1.288928892889289,-1.287328732873287,-1.2857285728572858,-1.2841284128412838,-1.2825282528252826,-1.2809280928092805,-1.2793279327932794,-1.2777277727772773,-1.2761276127612762,-1.2745274527452741,-1.272927292729273,-1.271327132713271,-1.2697269726972698,-1.2681268126812677,-1.2665266526652665,-1.2649264926492645,-1.2633263326332633,-1.2617261726172613,-1.2601260126012601,-1.258525852585258,-1.256925692569257,-1.2553255325532549,-1.2537253725372537,-1.2521252125212516,-1.2505250525052505,-1.2489248924892484,-1.2473247324732473,-1.2457245724572452,-1.244124412441244,-1.242524252425242,-1.2409240924092408,-1.2393239323932388,-1.2377237723772376,-1.2361236123612356,-1.2345234523452344,-1.2329232923292324,-1.2313231323132312,-1.2297229722972292,-1.228122812281228,-1.226522652265226,-1.2249224922492248,-1.2233223322332227,-1.2217221722172216,-1.2201220122012195,-1.2185218521852184,-1.2169216921692163,-1.2153215321532151,-1.213721372137213,-1.212121212121212,-1.2105210521052099,-1.2089208920892087,-1.2073207320732067,-1.2057205720572055,-1.2041204120412035,-1.2025202520252023,-1.2009200920092011,-1.199319931993199,-1.197719771977198,-1.1961196119611959,-1.1945194519451947,-1.1929192919291927,-1.1913191319131915,-1.1897189718971894,-1.1881188118811883,-1.1865186518651862,-1.184918491849185,-1.183318331833183,-1.1817181718171819,-1.1801180118011798,-1.1785178517851786,-1.1769176917691766,-1.1753175317531754,-1.1737173717371734,-1.1721172117211722,-1.1705170517051702,-1.168916891689169,-1.167316731673167,-1.1657165716571658,-1.1641164116411638,-1.1625162516251626,-1.1609160916091605,-1.1593159315931594,-1.1577157715771573,-1.1561156115611562,-1.1545154515451541,-1.152915291529153,-1.151315131513151,-1.1497149714971497,-1.1481148114811477,-1.1465146514651465,-1.1449144914491445,-1.1433143314331433,-1.1417141714171413,-1.14011401140114,-1.138513851385138,-1.136913691369137,-1.1353135313531348,-1.1337133713371337,-1.1321132113211316,-1.1305130513051305,-1.1289128912891284,-1.1273127312731273,-1.1257125712571252,-1.124112411241124,-1.122512251225122,-1.1209120912091208,-1.1193119311931188,-1.1177117711771176,-1.1161116111611156,-1.1145114511451144,-1.1129112911291124,-1.1113111311131112,-1.1097109710971091,-1.108110811081108,-1.106510651065106,-1.1049104910491048,-1.1033103310331027,-1.1017101710171016,-1.1001100110010995,-1.0985098509850983,-1.0969096909690963,-1.0953095309530951,-1.093709370937093,-1.092109210921092,-1.0905090509050899,-1.0889088908890887,-1.0873087308730867,-1.0857085708570855,-1.0841084108410834,-1.0825082508250823,-1.0809080908090811,-1.079307930793079,-1.077707770777078,-1.0761076107610759,-1.0745074507450747,-1.0729072907290726,-1.0713071307130715,-1.0697069706970694,-1.0681068106810683,-1.0665066506650662,-1.064906490649065,-1.063306330633063,-1.0617061706170619,-1.0601060106010598,-1.0585058505850586,-1.0569056905690566,-1.0553055305530554,-1.0537053705370534,-1.0521052105210522,-1.0505050505050502,-1.048904890489049,-1.047304730473047,-1.0457045704570458,-1.0441044104410437,-1.0425042504250426,-1.0409040904090405,-1.0393039303930394,-1.0377037703770373,-1.0361036103610362,-1.034503450345034,-1.032903290329033,-1.031303130313031,-1.0297029702970297,-1.0281028102810277,-1.0265026502650265,-1.0249024902490245,-1.0233023302330233,-1.0217021702170213,-1.02010201020102,-1.018501850185018,-1.0169016901690169,-1.0153015301530148,-1.0137013701370137,-1.0121012101210116,-1.0105010501050105,-1.0089008900890084,-1.0073007300730072,-1.0057005700570052,-1.004100410041004,-1.002500250025002,-1.0009000900090008,-.9992999299929988,-.9976997699769976,-.9960996099609956,-.9944994499449944,-.9928992899289923,-.9912991299129912,-.9896989698969891,-.988098809880988,-.9864986498649859,-.9848984898489848,-.9832983298329827,-.9816981698169815,-.9800980098009795,-.9784978497849783,-.9768976897689763,-.9752975297529751,-.9736973697369731,-.9720972097209719,-.9704970497049699,-.9688968896889687,-.9672967296729666,-.9656965696569655,-.9640964096409634,-.9624962496249623,-.9608960896089602,-.9592959295929591,-.9576957695769579,-.9560956095609559,-.9544954495449547,-.9528952895289526,-.9512951295129515,-.9496949694969494,-.9480948094809483,-.9464946494649462,-.944894489448945,-.943294329432943,-.9416941694169418,-.9400940094009398,-.9384938493849386,-.9368936893689366,-.9352935293529354,-.9336933693369334,-.9320932093209322,-.9304930493049302,-.928892889288929,-.9272927292729269,-.9256925692569258,-.9240924092409237,-.9224922492249226,-.9208920892089205,-.9192919291929194,-.9176917691769173,-.9160916091609161,-.9144914491449141,-.9128912891289129,-.9112911291129109,-.9096909690969097,-.9080908090809077,-.9064906490649065,-.9048904890489045,-.9032903290329033,-.9016901690169012,-.9000900090009001,-.898489848984898,-.8968896889688969,-.8952895289528948,-.8936893689368937,-.8920892089208916,-.8904890489048904,-.8888888888888884,-.8872887288728872,-.8856885688568852,-.884088408840884,-.882488248824882,-.8808880888088808,-.8792879287928788,-.8776877687768776,-.8760876087608755,-.8744874487448744,-.8728872887288723,-.8712871287128712,-.8696869686968691,-.868086808680868,-.8664866486648659,-.8648864886488647,-.8632863286328627,-.8616861686168615,-.8600860086008595,-.8584858485848583,-.8568856885688563,-.8552855285528551,-.8536853685368531,-.8520852085208519,-.8504850485048498,-.8488848884888487,-.8472847284728466,-.8456845684568455,-.8440844084408434,-.8424842484248423,-.8408840884088402,-.839283928392839,-.8376837683768379,-.8360836083608358,-.8344834483448347,-.8328832883288326,-.8312831283128315,-.8296829682968294,-.8280828082808283,-.8264826482648262,-.824882488248825,-.823282328232823,-.8216821682168218,-.8200820082008198,-.8184818481848186,-.8168816881688166,-.8152815281528154,-.8136813681368134,-.8120812081208122,-.8104810481048101,-.808880888088809,-.8072807280728069,-.8056805680568058,-.8040804080408037,-.8024802480248026,-.8008800880088005,-.7992799279927993,-.7976797679767973,-.7960796079607961,-.7944794479447941,-.7928792879287929,-.7912791279127909,-.7896789678967897,-.7880788078807877,-.7864786478647865,-.7848784878487844,-.7832783278327833,-.7816781678167812,-.7800780078007801,-.778477847784778,-.7768776877687769,-.7752775277527748,-.7736773677367736,-.7720772077207716,-.7704770477047704,-.7688768876887684,-.7672767276727672,-.7656765676567652,-.764076407640764,-.762476247624762,-.7608760876087608,-.7592759275927587,-.7576757675767576,-.7560756075607555,-.7544754475447544,-.7528752875287523,-.7512751275127512,-.7496749674967491,-.748074807480748,-.7464746474647459,-.7448744874487447,-.7432743274327427,-.7416741674167415,-.7400740074007395,-.7384738473847383,-.7368736873687363,-.7352735273527351,-.733673367336733,-.7320732073207319,-.7304730473047298,-.7288728872887287,-.7272727272727266,-.7256725672567255,-.7240724072407234,-.7224722472247223,-.7208720872087202,-.719271927192719,-.717671767176717,-.7160716071607158,-.7144714471447147,-.7128712871287126,-.7112711271127115,-.7096709670967094,-.7080708070807082,-.7064706470647062,-.704870487048705,-.703270327032703,-.7016701670167018,-.7000700070006998,-.6984698469846986,-.6968696869686966,-.6952695269526954,-.6936693669366933,-.6920692069206922,-.6904690469046901,-.688868886888689,-.6872687268726869,-.6856685668566858,-.6840684068406837,-.6824682468246825,-.6808680868086805,-.6792679267926793,-.6776677667766773,-.6760676067606761,-.6744674467446741,-.6728672867286729,-.6712671267126709,-.6696669666966697,-.6680668066806676,-.6664666466646665,-.6648664866486644,-.6632663266326633,-.6616661666166612,-.6600660066006601,-.658465846584658,-.6568656865686568,-.6552655265526548,-.6536653665366536,-.6520652065206516,-.6504650465046504,-.6488648864886484,-.6472647264726472,-.6456645664566452,-.644064406440644,-.642464246424642,-.6408640864086408,-.6392639263926387,-.6376637663766376,-.6360636063606355,-.6344634463446344,-.6328632863286323,-.6312631263126312,-.6296629662966291,-.6280628062806279,-.6264626462646259,-.6248624862486247,-.6232623262326227,-.6216621662166215,-.6200620062006195,-.6184618461846183,-.6168616861686163,-.6152615261526151,-.613661366136613,-.6120612061206119,-.6104610461046098,-.6088608860886087,-.6072607260726066,-.6056605660566055,-.6040604060406034,-.6024602460246022,-.6008600860086002,-.599259925992599,-.597659765976597,-.5960596059605958,-.5944594459445947,-.5928592859285926,-.5912591259125914,-.5896589658965894,-.5880588058805882,-.5864586458645862,-.584858485848585,-.583258325832583,-.5816581658165818,-.5800580058005798,-.5784578457845786,-.5768576857685765,-.5752575257525754,-.5736573657365733,-.5720572057205722,-.5704570457045701,-.568856885688569,-.5672567256725669,-.5656565656565657,-.5640564056405637,-.5624562456245625,-.5608560856085605,-.5592559255925593,-.5576557655765573,-.5560556055605561,-.5544554455445541,-.5528552855285529,-.5512551255125508,-.5496549654965497,-.5480548054805476,-.5464546454645465,-.5448544854485444,-.5432543254325433,-.5416541654165412,-.54005400540054,-.538453845384538,-.5368536853685368,-.5352535253525348,-.5336533653365336,-.5320532053205316,-.5304530453045304,-.5288528852885284,-.5272527252725272,-.5256525652565252,-.524052405240524,-.5224522452245219,-.5208520852085208,-.5192519251925187,-.5176517651765176,-.5160516051605155,-.5144514451445144,-.5128512851285123,-.5112511251125111,-.5096509650965091,-.5080508050805079,-.5064506450645059,-.5048504850485047,-.5032503250325027,-.5016501650165015,-.5000500050004995,-.4984498449844983,-.49684968496849624,-.4952495249524951,-.49364936493649303,-.49204920492049187,-.4904490449044898,-.48884888488848866,-.4872487248724866,-.48564856485648544,-.4840484048404834,-.48244824482448223,-.4808480848084802,-.479247924792479,-.47764776477647697,-.4760476047604758,-.47444744474447464,-.4728472847284726,-.47124712471247143,-.4696469646964694,-.4680468046804682,-.46644664466446617,-.464846484648465,-.46324632463246296,-.4616461646164618,-.46004600460045975,-.4584458445844586,-.45684568456845653,-.45524552455245537,-.4536453645364533,-.45204520452045216,-.4504450445044501,-.44884488448844895,-.4472447244724469,-.44564456445644574,-.4440444044404437,-.4424442444244425,-.4408440844084405,-.4392439243924393,-.43764376437643726,-.4360436043604361,-.43444344434443405,-.4328432843284329,-.43124312431243084,-.4296429642964297,-.4280428042804276,-.42644264426442646,-.4248424842484244,-.42324232423242325,-.4216421642164212,-.42004200420042004,-.418441844184418,-.4168416841684168,-.4152415241524148,-.4136413641364136,-.41204120412041156,-.4104410441044104,-.40884088408840835,-.4072407240724072,-.40564056405640514,-.404040404040404,-.4024402440244019,-.40084008400840077,-.3992399239923987,-.39763976397639755,-.3960396039603955,-.39443944394439434,-.3928392839283923,-.39123912391239113,-.3896389638963891,-.3880388038803879,-.38643864386438587,-.3848384838483847,-.38323832383238265,-.3816381638163815,-.38003800380037944,-.3784378437843783,-.37683768376837623,-.37523752375237507,-.373637363736373,-.37203720372037186,-.3704370437043698,-.36883688368836864,-.3672367236723666,-.36563656365636543,-.3640364036403634,-.3624362436243622,-.36083608360836017,-.359235923592359,-.35763576357635696,-.3560356035603558,-.35443544354435375,-.3528352835283526,-.3512351235123514,-.34963496349634937,-.3480348034803482,-.34643464346434616,-.344834483448345,-.34323432343234295,-.3416341634163418,-.34003400340033973,-.3384338433843386,-.3368336833683365,-.33523352335233536,-.3336333633363333,-.33203320332033215,-.3304330433043301,-.32883288328832894,-.3272327232723269,-.3256325632563257,-.3240324032403237,-.3224322432243225,-.32083208320832046,-.3192319231923193,-.31763176317631725,-.3160316031603161,-.31443144314431404,-.3128312831283129,-.3112311231123108,-.30963096309630966,-.3080308030803076,-.30643064306430645,-.3048304830483044,-.30323032303230324,-.3016301630163012,-.3000300030003,-.298429842984298,-.2968296829682968,-.29522952295229477,-.2936293629362936,-.29202920292029155,-.2904290429042904,-.28882888288828834,-.2872287228722872,-.28562856285628513,-.28402840284028397,-.2824282428242819,-.28082808280828075,-.2792279227922787,-.27762776277627754,-.2760276027602755,-.27442744274427433,-.2728272827282723,-.2712271227122711,-.26962696269626907,-.2680268026802679,-.26642664266426586,-.2648264826482647,-.26322632263226264,-.2616261626162615,-.26002600260025943,-.25842584258425827,-.2568256825682562,-.25522552255225506,-.253625362536253,-.25202520252025185,-.2504250425042498,-.24882488248824863,-.24722472247224658,-.24562456245624542,-.24402440244024337,-.2424242424242422,-.24082408240824016,-.239223922392239,-.23762376237623695,-.23602360236023578,-.23442344234423373,-.23282328232823257,-.2312231223122314,-.22962296229622936,-.2280228022802282,-.22642264226422615,-.224822482248225,-.22322232223222294,-.22162216221622177,-.22002200220021972,-.21842184218421856,-.2168216821682165,-.21522152215221535,-.2136213621362133,-.21202120212021214,-.2104210421042101,-.20882088208820893,-.20722072207220688,-.2056205620562057,-.20402040204020366,-.2024202420242025,-.20082008200820045,-.1992199219921993,-.19761976197619724,-.19601960196019608,-.19441944194419403,-.19281928192819286,-.19121912191219081,-.18961896189618965,-.1880188018801876,-.18641864186418644,-.1848184818481844,-.18321832183218323,-.18161816181618118,-.18001800180018002,-.17841784178417797,-.1768176817681768,-.17521752175217475,-.1736173617361736,-.17201720172017154,-.17041704170417038,-.16881688168816833,-.16721672167216717,-.16561656165616512,-.16401640164016396,-.1624162416241619,-.16081608160816074,-.1592159215921587,-.15761576157615753,-.15601560156015548,-.15441544154415432,-.15281528152815227,-.1512151215121511,-.14961496149614906,-.1480148014801479,-.14641464146414584,-.14481448144814468,-.14321432143214263,-.14161416141614147,-.14001400140013942,-.13841384138413826,-.1368136813681362,-.13521352135213505,-.133613361336133,-.13201320132013183,-.13041304130412978,-.12881288128812862,-.12721272127212657,-.1256125612561254,-.12401240124012336,-.1224122412241222,-.12081208120812015,-.11921192119211899,-.11761176117611694,-.11601160116011577,-.11441144114411372,-.11281128112811256,-.11121112111211051,-.10961096109610935,-.10801080108010819,-.10641064106410614,-.10481048104810498,-.10321032103210293,-.10161016101610176,-.10001000100009971,-.09840984098409855,-.0968096809680965,-.09520952095209534,-.09360936093609329,-.09200920092009213,-.09040904090409008,-.08880888088808891,-.08720872087208686,-.0856085608560857,-.08400840084008365,-.08240824082408249,-.08080808080808044,-.07920792079207928,-.07760776077607723,-.07600760076007607,-.07440744074407402,-.07280728072807285,-.0712071207120708,-.06960696069606964,-.06800680068006759,-.06640664066406643,-.06480648064806438,-.06320632063206322,-.06160616061606117,-.060006000600060005,-.058405840584057955,-.05680568056805679,-.05520552055205474,-.05360536053605358,-.05200520052005153,-.05040504050405037,-.04880488048804832,-.04720472047204716,-.04560456045604511,-.044004400440043945,-.042404240424041895,-.04080408040804073,-.03920392039203868,-.03760376037603752,-.03600360036003547,-.03440344034403431,-.03280328032803226,-.031203120312031096,-.029602960296029046,-.028002800280027884,-.026402640264025834,-.024802480248024672,-.023202320232022622,-.02160216021602146,-.02000200020001941,-.018401840184018248,-.016801680168016198,-.015201520152015036,-.013601360136012985,-.012001200120011823,-.010401040104009773,-.008800880088008611,-.007200720072006561,-.005600560056005399,-.004000400040003349,-.002400240024002187,-.0008000800080001369,.0008000800080019133,.002400240024002187,.004000400040004237,.005600560056006287,.0072007200720083375,.008800880088008611,.010401040104010661,.012001200120012712,.013601360136012985,.015201520152015036,.016801680168017086,.018401840184019136,.02000200020001941,.02160216021602146,.02320232023202351,.02480248024802556,.026402640264025834,.028002800280027884,.029602960296029934,.031203120312031984,.03280328032803226,.03440344034403431,.03600360036003636,.03760376037603841,.03920392039203868,.04080408040804073,.04240424042404278,.04400440044004483,.04560456045604511,.04720472047204716,.04880488048804921,.05040504050405126,.05200520052005153,.05360536053605358,.05520552055205563,.05680568056805768,.058405840584057955,.060006000600060005,.061606160616062056,.0632063206320641,.06480648064806438,.06640664066406643,.06800680068006848,.06960696069607053,.0712071207120708,.07280728072807285,.0744074407440749,.07600760076007695,.07760776077607723,.07920792079207928,.08080808080808133,.08240824082408338,.08400840084008365,.0856085608560857,.08720872087208775,.0888088808880898,.09040904090409008,.09200920092009213,.09360936093609418,.09520952095209623,.0968096809680965,.09840984098409855,.1000100010001006,.10161016101610265,.10321032103210293,.10481048104810498,.10641064106410703,.10801080108010908,.10961096109610935,.1112111211121114,.11281128112811345,.1144114411441155,.11601160116011577,.11761176117611782,.11921192119211987,.12081208120812192,.1224122412241222,.12401240124012425,.1256125612561263,.12721272127212835,.12881288128812862,.13041304130413067,.13201320132013272,.133613361336133,.13521352135213505,.1368136813681371,.13841384138413915,.14001400140013942,.14161416141614147,.14321432143214352,.14481448144814557,.14641464146414584,.1480148014801479,.14961496149614995,.151215121512152,.15281528152815227,.15441544154415432,.15601560156015637,.15761576157615842,.1592159215921587,.16081608160816074,.1624162416241628,.16401640164016484,.16561656165616512,.16721672167216717,.16881688168816922,.17041704170417127,.17201720172017154,.1736173617361736,.17521752175217564,.1768176817681777,.17841784178417797,.18001800180018002,.18161816181618207,.18321832183218412,.1848184818481844,.18641864186418644,.1880188018801885,.18961896189619054,.19121912191219081,.19281928192819286,.19441944194419492,.19601960196019697,.19761976197619724,.1992199219921993,.20082008200820134,.2024202420242034,.20402040204020366,.2056205620562057,.20722072207220776,.2088208820882098,.2104210421042101,.21202120212021214,.2136213621362142,.21522152215221624,.2168216821682165,.21842184218421856,.2200220022002206,.22162216221622266,.22322232223222294,.224822482248225,.22642264226422704,.2280228022802291,.22962296229622936,.2312231223122314,.23282328232823346,.2344234423442355,.23602360236023578,.23762376237623783,.23922392239223988,.24082408240824194,.2424242424242422,.24402440244024426,.2456245624562463,.24722472247224836,.24882488248824863,.2504250425042507,.25202520252025273,.253625362536253,.25522552255225506,.2568256825682571,.25842584258425916,.26002600260025943,.2616261626162615,.26322632263226353,.2648264826482656,.26642664266426586,.2680268026802679,.26962696269626996,.271227122712272,.2728272827282723,.27442744274427433,.2760276027602764,.27762776277627843,.2792279227922787,.28082808280828075,.2824282428242828,.28402840284028485,.28562856285628513,.2872287228722872,.28882888288828923,.2904290429042913,.29202920292029155,.2936293629362936,.29522952295229565,.2968296829682977,.298429842984298,.3000300030003,.3016301630163021,.3032303230323041,.3048304830483044,.30643064306430645,.3080308030803085,.30963096309631055,.3112311231123108,.3128312831283129,.3144314431443149,.316031603160317,.31763176317631725,.3192319231923193,.32083208320832135,.3224322432243234,.3240324032403237,.3256325632563257,.3272327232723278,.3288328832883298,.3304330433043301,.33203320332033215,.3336333633363342,.33523352335233625,.3368336833683365,.3384338433843386,.3400340034003406,.3416341634163427,.34323432343234295,.344834483448345,.34643464346434705,.3480348034803491,.34963496349634937,.3512351235123514,.35283528352835347,.3544354435443555,.3560356035603558,.35763576357635785,.3592359235923599,.36083608360836195,.3624362436243622,.36403640364036427,.3656365636563663,.36723672367236837,.36883688368836864,.3704370437043707,.37203720372037274,.3736373637363748,.37523752375237507,.3768376837683771,.37843784378437917,.38003800380037944,.3816381638163815,.38323832383238354,.3848384838483856,.38643864386438587,.3880388038803879,.38963896389638997,.391239123912392,.3928392839283923,.39443944394439434,.3960396039603964,.39763976397639844,.3992399239923987,.40084008400840077,.4024402440244028,.40404040404040487,.40564056405640514,.4072407240724072,.40884088408840924,.4104410441044113,.41204120412041156,.4136413641364136,.41524152415241566,.4168416841684177,.418441844184418,.42004200420042004,.4216421642164221,.42324232423242414,.4248424842484244,.42644264426442646,.4280428042804285,.42964296429643056,.43124312431243084,.4328432843284329,.43444344434443494,.436043604360437,.43764376437643726,.4392439243924393,.44084408440844136,.4424442444244434,.4440444044404437,.44564456445644574,.4472447244724478,.44884488448844984,.4504450445044501,.45204520452045216,.4536453645364542,.45524552455245626,.45684568456845653,.4584458445844586,.46004600460046063,.4616461646164627,.46324632463246296,.464846484648465,.46644664466446706,.4680468046804691,.4696469646964694,.47124712471247143,.4728472847284735,.47444744474447553,.4760476047604758,.47764776477647786,.4792479247924799,.48084808480848196,.48244824482448223,.4840484048404843,.48564856485648633,.4872487248724884,.48884888488848866,.4904490449044907,.49204920492049276,.4936493649364948,.4952495249524951,.49684968496849713,.4984498449844992,.5000500050004995,.5016501650165015,.5032503250325036,.5048504850485056,.5064506450645059,.5080508050805079,.50965096509651,.511251125112512,.5128512851285123,.5144514451445144,.5160516051605164,.5176517651765185,.5192519251925187,.5208520852085208,.5224522452245228,.5240524052405249,.5256525652565252,.5272527252725272,.5288528852885293,.5304530453045313,.5320532053205316,.5336533653365336,.5352535253525357,.5368536853685377,.538453845384538,.54005400540054,.5416541654165421,.5432543254325441,.5448544854485444,.5464546454645465,.5480548054805485,.5496549654965506,.5512551255125508,.5528552855285529,.554455445544555,.556055605560557,.5576557655765573,.5592559255925593,.5608560856085614,.5624562456245634,.5640564056405637,.5656565656565657,.5672567256725678,.5688568856885698,.5704570457045701,.5720572057205722,.5736573657365742,.5752575257525763,.5768576857685765,.5784578457845786,.5800580058005806,.5816581658165827,.583258325832583,.584858485848585,.5864586458645871,.5880588058805891,.5896589658965894,.5912591259125914,.5928592859285935,.5944594459445955,.5960596059605958,.5976597659765979,.5992599259925999,.600860086008602,.6024602460246022,.6040604060406043,.6056605660566063,.6072607260726084,.6088608860886087,.6104610461046107,.6120612061206128,.6136613661366148,.6152615261526151,.6168616861686171,.6184618461846192,.6200620062006195,.6216621662166215,.6232623262326236,.6248624862486256,.6264626462646259,.6280628062806279,.62966296629663,.631263126312632,.6328632863286323,.6344634463446344,.6360636063606364,.6376637663766385,.6392639263926387,.6408640864086408,.6424642464246428,.6440644064406449,.6456645664566452,.6472647264726472,.6488648864886493,.6504650465046513,.6520652065206516,.6536653665366536,.6552655265526557,.6568656865686577,.658465846584658,.6600660066006601,.6616661666166621,.6632663266326642,.6648664866486644,.6664666466646665,.6680668066806685,.6696669666966706,.6712671267126709,.6728672867286729,.674467446744675,.676067606760677,.6776677667766773,.6792679267926793,.6808680868086814,.6824682468246834,.6840684068406837,.6856685668566858,.6872687268726878,.6888688868886899,.6904690469046901,.6920692069206922,.6936693669366942,.6952695269526963,.6968696869686966,.6984698469846986,.7000700070007007,.7016701670167027,.703270327032703,.704870487048705,.7064706470647071,.7080708070807091,.7096709670967094,.7112711271127115,.7128712871287135,.7144714471447156,.7160716071607158,.7176717671767179,.7192719271927199,.720872087208722,.7224722472247223,.7240724072407243,.7256725672567264,.7272727272727284,.7288728872887287,.7304730473047307,.7320732073207328,.7336733673367348,.7352735273527351,.7368736873687372,.7384738473847392,.7400740074007395,.7416741674167415,.7432743274327436,.7448744874487456,.7464746474647459,.748074807480748,.74967496749675,.751275127512752,.7528752875287523,.7544754475447544,.7560756075607564,.7576757675767585,.7592759275927587,.7608760876087608,.7624762476247628,.7640764076407649,.7656765676567652,.7672767276727672,.7688768876887693,.7704770477047713,.7720772077207716,.7736773677367736,.7752775277527757,.7768776877687777,.778477847784778,.7800780078007801,.7816781678167821,.7832783278327842,.7848784878487844,.7864786478647865,.7880788078807885,.7896789678967906,.7912791279127909,.7928792879287929,.794479447944795,.796079607960797,.7976797679767973,.7992799279927993,.8008800880088014,.8024802480248034,.8040804080408037,.8056805680568058,.8072807280728078,.8088808880888099,.8104810481048101,.8120812081208122,.8136813681368142,.8152815281528163,.8168816881688166,.8184818481848186,.8200820082008207,.8216821682168227,.823282328232823,.824882488248825,.8264826482648271,.8280828082808291,.8296829682968294,.8312831283128315,.8328832883288335,.8344834483448356,.8360836083608358,.8376837683768379,.8392839283928399,.840884088408842,.8424842484248423,.8440844084408443,.8456845684568464,.8472847284728484,.8488848884888487,.8504850485048507,.8520852085208528,.8536853685368548,.8552855285528551,.8568856885688572,.8584858485848592,.8600860086008613,.8616861686168615,.8632863286328636,.8648864886488656,.8664866486648659,.868086808680868,.86968696869687,.8712871287128721,.8728872887288723,.8744874487448744,.8760876087608764,.8776877687768785,.8792879287928788,.8808880888088808,.8824882488248829,.8840884088408849,.8856885688568852,.8872887288728872,.8888888888888893,.8904890489048913,.8920892089208916,.8936893689368937,.8952895289528957,.8968896889688978,.898489848984898,.9000900090009001,.9016901690169021,.9032903290329042,.9048904890489045,.9064906490649065,.9080908090809086,.9096909690969106,.9112911291129109,.9128912891289129,.914491449144915,.916091609160917,.9176917691769173,.9192919291929194,.9208920892089214,.9224922492249235,.9240924092409237,.9256925692569258,.9272927292729278,.9288928892889299,.9304930493049302,.9320932093209322,.9336933693369343,.9352935293529363,.9368936893689366,.9384938493849386,.9400940094009407,.9416941694169427,.943294329432943,.944894489448945,.9464946494649471,.9480948094809492,.9496949694969494,.9512951295129515,.9528952895289535,.9544954495449556,.9560956095609559,.9576957695769579,.95929592959296,.960896089608962,.9624962496249623,.9640964096409643,.9656965696569664,.9672967296729684,.9688968896889687,.9704970497049707,.9720972097209728,.9736973697369748,.9752975297529751,.9768976897689772,.9784978497849792,.9800980098009813,.9816981698169815,.9832983298329836,.9848984898489856,.9864986498649859,.988098809880988,.98969896989699,.9912991299129921,.9928992899289923,.9944994499449944,.9960996099609964,.9976997699769985,.9992999299929988,1.0009000900090008,1.0025002500250029,1.004100410041005,1.0057005700570052,1.0073007300730072,1.0089008900890093,1.0105010501050113,1.0121012101210116,1.0137013701370137,1.0153015301530157,1.0169016901690178,1.018501850185018,1.02010201020102,1.0217021702170221,1.0233023302330242,1.0249024902490245,1.0265026502650265,1.0281028102810286,1.0297029702970306,1.031303130313031,1.032903290329033,1.034503450345035,1.036103610361037,1.0377037703770373,1.0393039303930394,1.0409040904090414,1.0425042504250435,1.0441044104410437,1.0457045704570458,1.0473047304730478,1.04890489048905,1.0505050505050502,1.0521052105210522,1.0537053705370543,1.0553055305530563,1.0569056905690566,1.0585058505850586,1.0601060106010607,1.0617061706170627,1.063306330633063,1.064906490649065,1.0665066506650671,1.0681068106810692,1.0697069706970694,1.0713071307130715,1.0729072907290735,1.0745074507450756,1.0761076107610759,1.077707770777078,1.07930793079308,1.080908090809082,1.0825082508250823,1.0841084108410843,1.0857085708570864,1.0873087308730884,1.0889088908890887,1.0905090509050908,1.0921092109210928,1.0937093709370949,1.0953095309530951,1.0969096909690972,1.0985098509850992,1.1001100110011013,1.1017101710171016,1.1033103310331036,1.1049104910491057,1.106510651065106,1.108110811081108,1.10971097109711,1.111311131113112,1.1129112911291124,1.1145114511451144,1.1161116111611165,1.1177117711771185,1.1193119311931188,1.1209120912091208,1.1225122512251229,1.124112411241125,1.1257125712571252,1.1273127312731273,1.1289128912891293,1.1305130513051314,1.1321132113211316,1.1337133713371337,1.1353135313531357,1.1369136913691378,1.138513851385138,1.14011401140114,1.1417141714171422,1.1433143314331442,1.1449144914491445,1.1465146514651465,1.1481148114811486,1.1497149714971506,1.151315131513151,1.152915291529153,1.154515451545155,1.156115611561157,1.1577157715771573,1.1593159315931594,1.1609160916091614,1.1625162516251635,1.1641164116411638,1.1657165716571658,1.1673167316731679,1.16891689168917,1.1705170517051702,1.1721172117211722,1.1737173717371743,1.1753175317531763,1.1769176917691766,1.1785178517851786,1.1801180118011807,1.1817181718171827,1.183318331833183,1.184918491849185,1.1865186518651871,1.1881188118811892,1.1897189718971894,1.1913191319131915,1.1929192919291935,1.1945194519451956,1.1961196119611959,1.197719771977198,1.1993199319932,1.200920092009202,1.2025202520252023,1.2041204120412043,1.2057205720572064,1.2073207320732084,1.2089208920892087,1.2105210521052108,1.2121212121212128,1.2137213721372149,1.2153215321532151,1.2169216921692172,1.2185218521852192,1.2201220122012213,1.2217221722172216,1.2233223322332236,1.2249224922492257,1.226522652265226,1.228122812281228,1.22972297229723,1.231323132313232,1.2329232923292324,1.2345234523452344,1.2361236123612365,1.2377237723772385,1.2393239323932388,1.2409240924092408,1.242524252425243,1.244124412441245,1.2457245724572452,1.2473247324732473,1.2489248924892493,1.2505250525052514,1.2521252125212516,1.2537253725372537,1.2553255325532557,1.2569256925692578,1.258525852585258,1.2601260126012601,1.2617261726172622,1.2633263326332642,1.2649264926492645,1.2665266526652665,1.2681268126812686,1.2697269726972706,1.271327132713271,1.272927292729273,1.274527452745275,1.276127612761277,1.2777277727772773,1.2793279327932794,1.2809280928092814,1.2825282528252835,1.2841284128412838,1.2857285728572858,1.2873287328732879,1.28892889288929,1.2905290529052902,1.2921292129212922,1.2937293729372943,1.2953295329532963,1.2969296929692966,1.2985298529852987,1.3001300130013007,1.3017301730173028,1.303330333033303,1.304930493049305,1.3065306530653071,1.3081308130813092,1.3097309730973095,1.3113311331133115,1.3129312931293136,1.3145314531453156,1.3161316131613159,1.317731773177318,1.31933193319332,1.320932093209322,1.3225322532253223,1.3241324132413244,1.3257325732573264,1.3273327332733285,1.3289328932893287,1.3305330533053308,1.3321332133213328,1.3337333733373349,1.3353335333533352,1.3369336933693372,1.3385338533853393,1.3401340134013413,1.3417341734173416,1.3433343334333436,1.3449344934493457,1.346534653465346,1.348134813481348,1.34973497349735,1.351335133513352,1.3529352935293524,1.3545354535453544,1.3561356135613565,1.3577357735773585,1.3593359335933588,1.3609360936093609,1.362536253625363,1.364136413641365,1.3657365736573652,1.3673367336733673,1.3689368936893693,1.3705370537053714,1.3721372137213717,1.3737373737373737,1.3753375337533758,1.3769376937693778,1.378537853785378,1.3801380138013801,1.3817381738173822,1.3833383338333842,1.3849384938493845,1.3865386538653866,1.3881388138813886,1.3897389738973907,1.391339133913391,1.392939293929393,1.394539453945395,1.396139613961397,1.3977397739773973,1.3993399339933994,1.4009400940094014,1.4025402540254035,1.4041404140414038,1.4057405740574058,1.4073407340734079,1.40894089408941,1.4105410541054102,1.4121412141214122,1.4137413741374143,1.4153415341534163,1.4169416941694166,1.4185418541854187,1.4201420142014207,1.4217421742174228,1.423342334233423,1.424942494249425,1.4265426542654271,1.4281428142814292,1.4297429742974295,1.4313431343134315,1.4329432943294336,1.4345434543454356,1.436143614361436,1.437743774377438,1.43934393439344,1.440944094409442,1.4425442544254423,1.4441444144414444,1.4457445744574464,1.4473447344734485,1.4489448944894487,1.4505450545054508,1.4521452145214528,1.453745374537455,1.4553455345534552,1.4569456945694572,1.4585458545854593,1.4601460146014613,1.4617461746174616,1.4633463346334636,1.4649464946494657,1.4665466546654677,1.468146814681468,1.46974697469747,1.4713471347134721,1.4729472947294724,1.4745474547454744,1.4761476147614765,1.4777477747774785,1.4793479347934788,1.4809480948094809,1.482548254825483,1.484148414841485,1.4857485748574852,1.4873487348734873,1.4889488948894893,1.4905490549054914,1.4921492149214917,1.4937493749374937,1.4953495349534958,1.4969496949694978,1.498549854985498,1.5001500150015001,1.5017501750175022,1.5033503350335042,1.5049504950495045,1.5065506550655066,1.5081508150815086,1.5097509750975107,1.511351135113511,1.512951295129513,1.514551455145515,1.516151615161517,1.5177517751775174,1.5193519351935194,1.5209520952095215,1.5225522552255235,1.5241524152415238,1.5257525752575258,1.5273527352735279,1.52895289528953,1.5305530553055302,1.5321532153215323,1.5337533753375343,1.5353535353535364,1.5369536953695366,1.5385538553855387,1.5401540154015407,1.5417541754175428,1.543354335433543,1.544954495449545,1.5465546554655472,1.5481548154815492,1.5497549754975495,1.5513551355135515,1.5529552955295536,1.5545554555455556,1.556155615561556,1.557755775577558,1.55935593559356,1.560956095609562,1.5625562556255623,1.5641564156415644,1.5657565756575664,1.5673567356735685,1.5689568956895688,1.5705570557055708,1.5721572157215729,1.573757375737575,1.5753575357535752,1.5769576957695772,1.5785578557855793,1.5801580158015813,1.5817581758175816,1.5833583358335837,1.5849584958495857,1.5865586558655878,1.588158815881588,1.58975897589759,1.5913591359135921,1.5929592959295924,1.5945594559455945,1.5961596159615965,1.5977597759775986,1.5993599359935988,1.6009600960096009,1.602560256025603,1.604160416041605,1.6057605760576052,1.6073607360736073,1.6089608960896093,1.6105610561056114,1.6121612161216117,1.6137613761376137,1.6153615361536158,1.6169616961696178,1.618561856185618,1.6201620162016201,1.6217621762176222,1.6233623362336242,1.6249624962496245,1.6265626562656266,1.6281628162816286,1.6297629762976307,1.631363136313631,1.632963296329633,1.634563456345635,1.636163616361637,1.6377637763776374,1.6393639363936394,1.6409640964096415,1.6425642564256435,1.6441644164416438,1.6457645764576458,1.647364736473648,1.64896489648965,1.6505650565056502,1.6521652165216523,1.6537653765376543,1.6553655365536564,1.6569656965696566,1.6585658565856587,1.6601660166016607,1.6617661766176628,1.663366336633663,1.6649664966496651,1.6665666566656672,1.6681668166816692,1.6697669766976695,1.6713671367136715,1.6729672967296736,1.6745674567456756,1.676167616761676,1.677767776777678,1.67936793679368,1.680968096809682,1.6825682568256823,1.6841684168416844,1.6857685768576864,1.6873687368736885,1.6889688968896888,1.6905690569056908,1.6921692169216929,1.693769376937695,1.6953695369536952,1.6969696969696972,1.6985698569856993,1.7001700170017013,1.7017701770177016,1.7033703370337037,1.7049704970497057,1.7065706570657078,1.708170817081708,1.70977097709771,1.7113711371137121,1.7129712971297124,1.7145714571457145,1.7161716171617165,1.7177717771777186,1.7193719371937188,1.7209720972097209,1.722572257225723,1.724172417241725,1.7257725772577253,1.7273727372737273,1.7289728972897294,1.7305730573057314,1.7321732173217317,1.7337733773377337,1.7353735373537358,1.7369736973697378,1.738573857385738,1.7401740174017402,1.7417741774177422,1.7433743374337443,1.7449744974497445,1.7465746574657466,1.7481748174817486,1.7497749774977507,1.751375137513751,1.752975297529753,1.754575457545755,1.756175617561757,1.7577757775777574,1.7593759375937594,1.7609760976097615,1.7625762576257635,1.7641764176417638,1.7657765776577659,1.767376737673768,1.76897689768977,1.7705770577057702,1.7721772177217723,1.7737773777377743,1.7753775377537764,1.7769776977697767,1.7785778577857787,1.7801780178017808,1.7817781778177828,1.783378337833783,1.7849784978497851,1.7865786578657872,1.7881788178817892,1.7897789778977895,1.7913791379137916,1.7929792979297936,1.7945794579457957,1.796179617961796,1.797779777977798,1.7993799379938,1.800980098009802,1.8025802580258024,1.8041804180418044,1.8057805780578065,1.8073807380738085,1.8089808980898088,1.8105810581058108,1.8121812181218129,1.813781378137815,1.8153815381538152,1.8169816981698172,1.8185818581858193,1.8201820182018214,1.8217821782178216,1.8233823382338237,1.8249824982498257,1.8265826582658278,1.828182818281828,1.82978297829783,1.8313831383138321,1.8329832983298324,1.8345834583458345,1.8361836183618365,1.8377837783778386,1.8393839383938388,1.840984098409841,1.842584258425843,1.844184418441845,1.8457845784578453,1.8473847384738473,1.8489848984898494,1.8505850585058514,1.8521852185218517,1.8537853785378537,1.8553855385538558,1.8569856985698578,1.8585858585858581,1.8601860186018602,1.8617861786178622,1.8633863386338643,1.8649864986498645,1.8665866586658666,1.8681868186818686,1.8697869786978707,1.871387138713871,1.872987298729873,1.874587458745875,1.8761876187618771,1.8777877787778774,1.8793879387938794,1.8809880988098815,1.8825882588258835,1.8841884188418838,1.8857885788578859,1.887388738873888,1.88898889888989,1.8905890589058902,1.8921892189218923,1.8937893789378943,1.8953895389538964,1.8969896989698967,1.8985898589858987,1.9001900190019008,1.9017901790179028,1.903390339033903,1.9049904990499051,1.9065906590659072,1.9081908190819092,1.9097909790979095,1.9113911391139116,1.9129912991299136,1.9145914591459157,1.916191619161916,1.917791779177918,1.91939193919392,1.920992099209922,1.9225922592259224,1.9241924192419244,1.9257925792579265,1.9273927392739285,1.9289928992899288,1.9305930593059308,1.9321932193219329,1.933793379337935,1.9353935393539352,1.9369936993699373,1.9385938593859393,1.9401940194019414,1.9417941794179416,1.9433943394339437,1.9449944994499457,1.9465946594659478,1.948194819481948,1.94979497949795,1.9513951395139522,1.9529952995299524,1.9545954595459545,1.9561956195619565,1.9577957795779586,1.9593959395939589,1.960996099609961,1.962596259625963,1.964196419641965,1.9657965796579653,1.9673967396739673,1.9689968996899694,1.9705970597059714,1.9721972197219717,1.9737973797379738,1.9753975397539758,1.9769976997699779,1.9785978597859781,1.9801980198019802,1.9817981798179822,1.9833983398339843,1.9849984998499846,1.9865986598659866,1.9881988198819887,1.9897989798979907,1.991399139913991,1.992999299929993,1.994599459945995,1.9961996199619971,1.9977997799779974,1.9993999399939995,2.0010001000100015,2.0026002600260036,2.004200420042004,2.005800580058006,2.007400740074008,2.00900090009001,2.0106010601060103,2.0122012201220123,2.0138013801380144,2.0154015401540164,2.0170017001700167,2.0186018601860187,2.0202020202020208,2.021802180218023,2.023402340234023,2.025002500250025,2.026602660266027,2.0282028202820293,2.0298029802980295,2.0314031403140316,2.0330033003300336,2.0346034603460357,2.036203620362036,2.037803780378038,2.03940394039404,2.041004100410042,2.0426042604260424,2.0442044204420444,2.0458045804580465,2.0474047404740485,2.049004900490049,2.050605060506051,2.052205220522053,2.053805380538055,2.055405540554055,2.0570057005700573,2.0586058605860593,2.0602060206020614,2.0618061806180616,2.0634063406340637,2.0650065006500657,2.066606660666068,2.068206820682068,2.06980698069807,2.071407140714072,2.073007300730074,2.0746074607460745,2.0762076207620765,2.0778077807780786,2.079407940794079,2.081008100810081,2.082608260826083,2.084208420842085,2.0858085808580853,2.0874087408740873,2.0890089008900894,2.0906090609060914,2.0922092209220917,2.0938093809380938,2.095409540954096,2.097009700970098,2.098609860986098,2.1002100210021,2.1018101810181022,2.1034103410341043,2.1050105010501046,2.1066106610661066,2.1082108210821087,2.1098109810981107,2.111411141114111,2.113011301130113,2.114611461146115,2.116211621162117,2.1178117811781174,2.1194119411941195,2.1210121012101215,2.1226122612261236,2.124212421242124,2.125812581258126,2.127412741274128,2.12901290129013,2.1306130613061303,2.1322132213221323,2.1338133813381344,2.1354135413541364,2.1370137013701367,2.1386138613861387,2.140214021402141,2.141814181418143,2.143414341434143,2.145014501450145,2.146614661466147,2.1482148214821493,2.1498149814981495,2.1514151415141516,2.1530153015301536,2.1546154615461557,2.156215621562156,2.157815781578158,2.15941594159416,2.161016101610162,2.1626162616261624,2.1642164216421644,2.1658165816581665,2.1674167416741685,2.169016901690169,2.170617061706171,2.172217221722173,2.173817381738175,2.1754175417541752,2.1770177017701773,2.1786178617861793,2.1802180218021814,2.1818181818181817,2.1834183418341837,2.1850185018501858,2.186618661866188,2.188218821882188,2.18981898189819,2.191419141914192,2.1930193019301942,2.1946194619461945,2.1962196219621966,2.1978197819781986,2.199419941994199,2.201020102010201,2.202620262026203,2.204220422042205,2.2058205820582053,2.2074207420742074,2.2090209020902094,2.2106210621062115,2.2122212221222117,2.213821382138214,2.215421542154216,2.217021702170218,2.218621862186218,2.22022202220222,2.2218221822182223,2.2234223422342243,2.2250225022502246,2.2266226622662266,2.2282228222822287,2.2298229822982307,2.231423142314231,2.233023302330233,2.234623462346235,2.236223622362237,2.2378237823782374,2.2394239423942395,2.2410241024102415,2.2426242624262436,2.244224422442244,2.245824582458246,2.247424742474248,2.24902490249025,2.2506250625062503,2.2522252225222523,2.2538253825382544,2.2554255425542564,2.2570257025702567,2.2586258625862587,2.260226022602261,2.261826182618263,2.263426342634263,2.265026502650265,2.2666266626662672,2.2682268226822693,2.2698269826982695,2.2714271427142716,2.2730273027302736,2.2746274627462757,2.276227622762276,2.277827782778278,2.27942794279428,2.281028102810282,2.2826282628262824,2.2842284228422844,2.2858285828582865,2.2874287428742885,2.289028902890289,2.290629062906291,2.292229222922293,2.293829382938295,2.2954295429542952,2.2970297029702973,2.2986298629862993,2.3002300230023014,2.3018301830183017,2.3034303430343037,2.3050305030503058,2.306630663066308,2.308230823082308,2.30983098309831,2.311431143114312,2.3130313031303142,2.3146314631463145,2.3162316231623166,2.3178317831783186,2.319431943194319,2.321032103210321,2.322632263226323,2.324232423242325,2.3258325832583253,2.3274327432743274,2.3290329032903294,2.3306330633063315,2.3322332233223317,2.333833383338334,2.335433543354336,2.337033703370338,2.338633863386338,2.34023402340234,2.3418341834183423,2.3434343434343443,2.3450345034503446,2.3466346634663466,2.3482348234823487,2.3498349834983507,2.351435143514351,2.353035303530353,2.354635463546355,2.356235623562357,2.3578357835783574,2.3594359435943595,2.3610361036103615,2.3626362636263636,2.364236423642364,2.365836583658366,2.367436743674368,2.36903690369037,2.3706370637063703,2.3722372237223723,2.3738373837383744,2.3754375437543764,2.3770377037703767,2.3786378637863788,2.380238023802381,2.381838183818383,2.383438343834383,2.385038503850385,2.3866386638663872,2.3882388238823893,2.3898389838983896,2.3914391439143916,2.3930393039303937,2.3946394639463957,2.396239623962396,2.397839783978398,2.3994399439944,2.401040104010402,2.4026402640264024,2.4042404240424045,2.4058405840584065,2.4074407440744086,2.409040904090409,2.410641064106411,2.412241224122413,2.413841384138415,2.4154415441544153,2.4170417041704173,2.4186418641864194,2.4202420242024214,2.4218421842184217,2.4234423442344237,2.425042504250426,2.426642664266428,2.428242824282428,2.42984298429843,2.431443144314432,2.4330433043304343,2.4346434643464345,2.4362436243624366,2.4378437843784386,2.439443944394439,2.441044104410441,2.442644264426443,2.444244424442445,2.4458445844584453,2.4474447444744474,2.4490449044904494,2.4506450645064515,2.4522452245224517,2.453845384538454,2.455445544554456,2.457045704570458,2.458645864586458,2.4602460246024602,2.4618461846184623,2.4634463446344643,2.4650465046504646,2.4666466646664666,2.4682468246824687,2.4698469846984707,2.471447144714471,2.473047304730473,2.474647464746475,2.476247624762477,2.4778477847784774,2.4794479447944795,2.4810481048104815,2.4826482648264836,2.484248424842484,2.485848584858486,2.487448744874488,2.48904890489049,2.4906490649064903,2.4922492249224923,2.4938493849384944,2.4954495449544964,2.4970497049704967,2.4986498649864988,2.500250025002501,2.501850185018503,2.503450345034503,2.505050505050505,2.5066506650665072,2.5082508250825093,2.5098509850985096,2.5114511451145116,2.5130513051305137,2.5146514651465157,2.516251625162516,2.517851785178518,2.51945194519452,2.521052105210522,2.5226522652265224,2.5242524252425245,2.5258525852585265,2.5274527452745286,2.529052905290529,2.530653065306531,2.532253225322533,2.533853385338535,2.5354535453545353,2.5370537053705373,2.5386538653865394,2.5402540254025414,2.5418541854185417,2.5434543454345437,2.545054505450546,2.546654665466548,2.548254825482548,2.54985498549855,2.551455145514552,2.5530553055305543,2.5546554655465545,2.5562556255625566,2.5578557855785586,2.5594559455945607,2.561056105610561,2.562656265626563,2.564256425642565,2.5658565856585653,2.5674567456745674,2.5690569056905694,2.5706570657065715,2.5722572257225718,2.573857385738574,2.575457545754576,2.577057705770578,2.578657865786578,2.5802580258025802,2.5818581858185823,2.5834583458345843,2.5850585058505846,2.5866586658665867,2.5882588258825887,2.5898589858985908,2.591459145914591,2.593059305930593,2.594659465946595,2.596259625962597,2.5978597859785975,2.5994599459945995,2.6010601060106016,2.6026602660266036,2.604260426042604,2.605860586058606,2.607460746074608,2.60906090609061,2.6106610661066103,2.6122612261226124,2.6138613861386144,2.6154615461546165,2.6170617061706167,2.618661866186619,2.620262026202621,2.621862186218623,2.623462346234623,2.625062506250625,2.6266626662666273,2.6282628262826293,2.6298629862986296,2.6314631463146316,2.6330633063306337,2.6346634663466357,2.636263626362636,2.637863786378638,2.63946394639464,2.641064106410642,2.6426642664266424,2.6442644264426445,2.6458645864586465,2.6474647464746486,2.649064906490649,2.650665066506651,2.652265226522653,2.653865386538655,2.6554655465546553,2.6570657065706573,2.6586658665866594,2.6602660266026614,2.6618661866186617,2.6634663466346638,2.665066506650666,2.666666666666668,2.668266826682668,2.66986698669867,2.6714671467146722,2.6730673067306743,2.6746674667466745,2.6762676267626766,2.6778677867786786,2.6794679467946807,2.681068106810681,2.682668266826683,2.684268426842685,2.6858685868586853,2.6874687468746874,2.6890689068906894,2.6906690669066915,2.6922692269226918,2.693869386938694,2.695469546954696,2.697069706970698,2.698669866986698,2.7002700270027002,2.7018701870187023,2.7034703470347043,2.7050705070507046,2.7066706670667067,2.7082708270827087,2.7098709870987108,2.711471147114711,2.713071307130713,2.714671467146715,2.716271627162717,2.7178717871787175,2.7194719471947195,2.7210721072107216,2.7226722672267236,2.724272427242724,2.725872587258726,2.727472747274728,2.72907290729073,2.7306730673067303,2.7322732273227324,2.7338733873387344,2.7354735473547365,2.7370737073707367,2.738673867386739,2.740274027402741,2.741874187418743,2.743474347434743,2.745074507450745,2.7466746674667473,2.7482748274827493,2.7498749874987496,2.7514751475147516,2.7530753075307537,2.7546754675467557,2.756275627562756,2.757875787578758,2.75947594759476,2.761076107610762,2.7626762676267624,2.7642764276427645,2.7658765876587665,2.7674767476747686,2.769076907690769,2.770677067706771,2.772277227722773,2.773877387738775,2.7754775477547753,2.7770777077707773,2.7786778677867794,2.7802780278027814,2.7818781878187817,2.7834783478347838,2.785078507850786,2.786678667866788,2.788278827882788,2.78987898789879,2.7914791479147922,2.7930793079307943,2.7946794679467946,2.7962796279627966,2.7978797879787987,2.7994799479948007,2.801080108010801,2.802680268026803,2.804280428042805,2.8058805880588054,2.8074807480748074,2.8090809080908095,2.8106810681068115,2.812281228122812,2.813881388138814,2.815481548154816,2.817081708170818,2.818681868186818,2.8202820282028203,2.8218821882188223,2.8234823482348244,2.8250825082508246,2.8266826682668267,2.8282828282828287,2.829882988298831,2.831483148314831,2.833083308330833,2.834683468346835,2.836283628362837,2.8378837883788375,2.8394839483948395,2.8410841084108416,2.8426842684268436,2.844284428442844,2.845884588458846,2.847484748474848,2.84908490849085,2.8506850685068503,2.8522852285228524,2.8538853885388544,2.8554855485548565,2.8570857085708568,2.858685868586859,2.860286028602861,2.861886188618863,2.863486348634863,2.8650865086508652,2.8666866686668673,2.8682868286828693,2.8698869886988696,2.8714871487148717,2.8730873087308737,2.8746874687468758,2.876287628762876,2.877887788778878,2.87948794879488,2.881088108810882,2.8826882688268824,2.8842884288428845,2.8858885888588865,2.8874887488748886,2.889088908890889,2.890689068906891,2.892289228922893,2.893889388938895,2.8954895489548953,2.8970897089708973,2.8986898689868994,2.9002900290029014,2.9018901890189017,2.9034903490349038,2.905090509050906,2.906690669066908,2.908290829082908,2.90989098909891,2.9114911491149122,2.9130913091309143,2.9146914691469146,2.9162916291629166,2.9178917891789187,2.9194919491949207,2.921092109210921,2.922692269226923,2.924292429242925,2.9258925892589254,2.9274927492749274,2.9290929092909295,2.9306930693069315,2.932293229322932,2.933893389338934,2.935493549354936,2.937093709370938,2.938693869386938,2.9402940294029403,2.9418941894189423,2.9434943494349444,2.9450945094509446,2.9466946694669467,2.9482948294829487,2.949894989498951,2.951495149514951,2.953095309530953,2.954695469546955,2.956295629562957,2.9578957895789575,2.9594959495949595,2.9610961096109616,2.9626962696269636,2.964296429642964,2.965896589658966,2.967496749674968,2.96909690969097,2.9706970697069703,2.9722972297229724,2.9738973897389744,2.9754975497549765,2.9770977097709768,2.978697869786979,2.980298029802981,2.981898189818983,2.983498349834983,2.9850985098509852,2.9866986698669873,2.9882988298829893,2.9898989898989896,2.9914991499149917,2.9930993099309937,2.9946994699469958,2.996299629962996,2.997899789978998,2.999499949995,3.001100110011002,3.0027002700270025,3.0043004300430045,3.0059005900590066,3.0075007500750086,3.009100910091009,3.010701070107011,3.012301230123013,3.013901390139015,3.0155015501550153,3.0171017101710174,3.0187018701870194,3.0203020302030215,3.0219021902190217,3.023502350235024,3.025102510251026,3.026702670267028,3.028302830283028,3.02990299029903,3.0315031503150323,3.0331033103310343,3.0347034703470346,3.0363036303630366,3.0379037903790387,3.0395039503950407,3.041104110411041,3.042704270427043,3.044304430443045,3.0459045904590454,3.0475047504750474,3.0491049104910495,3.0507050705070515,3.052305230523052,3.053905390539054,3.055505550555056,3.057105710571058,3.0587058705870582,3.0603060306030603,3.0619061906190623,3.0635063506350644,3.0651065106510647,3.0667066706670667,3.0683068306830688,3.069906990699071,3.071507150715071,3.073107310731073,3.074707470747075,3.0763076307630772,3.0779077907790775,3.0795079507950796,3.0811081108110816,3.0827082708270837,3.084308430843084,3.085908590859086,3.087508750875088,3.08910891089109,3.0907090709070904,3.0923092309230924,3.0939093909390945,3.0955095509550965,3.0971097109710968,3.098709870987099,3.100310031003101,3.101910191019103,3.103510351035103,3.1051105110511052,3.1067106710671073,3.1083108310831093,3.1099109910991096,3.1115111511151117,3.1131113111311137,3.1147114711471158,3.116311631163116,3.117911791179118,3.11951195119512,3.121112111211122,3.1227122712271225,3.1243124312431245,3.1259125912591266,3.1275127512751286,3.129112911291129,3.130713071307131,3.132313231323133,3.133913391339135,3.1355135513551353,3.1371137113711374,3.1387138713871394,3.1403140314031415,3.1419141914191417,3.143514351435144,3.145114511451146,3.146714671467148,3.148314831483148,3.14991499149915,3.1515151515151523,3.1531153115311543,3.1547154715471546,3.1563156315631566,3.1579157915791587,3.1595159515951607,3.161116111611161,3.162716271627163,3.164316431643165,3.165916591659167,3.1675167516751674,3.1691169116911695,3.1707170717071715,3.172317231723172,3.173917391739174,3.175517551755176,3.177117711771178,3.1787178717871782,3.1803180318031803,3.1819181918191823,3.1835183518351844,3.1851185118511847,3.1867186718671867,3.1883188318831888,3.189918991899191,3.191519151915191,3.193119311931193,3.194719471947195,3.1963196319631972,3.1979197919791975,3.1995199519951996,3.2011201120112016,3.2027202720272037,3.204320432043204,3.205920592059206,3.207520752075208,3.20912091209121,3.2107210721072104,3.2123212321232124,3.2139213921392145,3.2155215521552165,3.217121712171217,3.218721872187219,3.220322032203221,3.221922192219223,3.223522352235223,3.2251225122512253,3.2267226722672273,3.2283228322832294,3.2299229922992296,3.2315231523152317,3.2331233123312337,3.234723472347236,3.236323632363236,3.237923792379238,3.23952395239524,3.241124112411242,3.2427242724272425,3.2443244324432445,3.2459245924592466,3.2475247524752486,3.249124912491249,3.250725072507251,3.252325232523253,3.253925392539255,3.2555255525552553,3.2571257125712574,3.2587258725872594,3.2603260326032615,3.2619261926192618,3.263526352635264,3.265126512651266,3.266726672667268,3.268326832683268,3.2699269926992702,3.2715271527152723,3.2731273127312743,3.2747274727472746,3.2763276327632767,3.2779277927792787,3.2795279527952808,3.281128112811281,3.282728272827283,3.284328432843285,3.285928592859287,3.2875287528752875,3.2891289128912895,3.2907290729072916,3.292329232923292,3.293929392939294,3.295529552955296,3.297129712971298,3.2987298729872983,3.3003300330033003,3.3019301930193024,3.3035303530353044,3.3051305130513047,3.3067306730673067,3.3083308330833088,3.309930993099311,3.311531153115311,3.313131313131313,3.314731473147315,3.3163316331633172,3.3179317931793175,3.3195319531953196,3.3211321132113216,3.3227322732273237,3.324332433243324,3.325932593259326,3.327532753275328,3.32913291329133,3.3307330733073304,3.3323332333233324,3.3339333933393345,3.3355335533553365,3.337133713371337,3.338733873387339,3.340334033403341,3.341934193419343,3.343534353435343,3.3451345134513453,3.3467346734673473,3.3483348334833494,3.3499349934993496,3.3515351535153517,3.3531353135313537,3.354735473547356,3.356335633563356,3.357935793579358,3.35953595359536,3.361136113611362,3.3627362736273625,3.3643364336433645,3.3659365936593666,3.3675367536753686,3.369136913691369,3.370737073707371,3.372337233723373,3.373937393739375,3.3755375537553753,3.3771377137713774,3.3787378737873794,3.3803380338033815,3.3819381938193818,3.383538353835384,3.385138513851386,3.386738673867388,3.388338833883388,3.3899389938993902,3.3915391539153923,3.3931393139313943,3.3947394739473946,3.3963396339633967,3.3979397939793987,3.3995399539954008,3.401140114011401,3.402740274027403,3.404340434043405,3.405940594059407,3.4075407540754075,3.4091409140914095,3.4107410741074116,3.412341234123412,3.413941394139414,3.415541554155416,3.417141714171418,3.4187418741874183,3.4203420342034203,3.4219421942194224,3.4235423542354244,3.4251425142514247,3.4267426742674267,3.428342834283429,3.429942994299431,3.431543154315431,3.433143314331433,3.434743474347435,3.4363436343634373,3.4379437943794375,3.4395439543954396,3.4411441144114416,3.4427442744274437,3.444344434443444,3.445944594459446,3.447544754475448,3.44914491449145,3.4507450745074504,3.4523452345234524,3.4539453945394545,3.4555455545554565,3.457145714571457,3.458745874587459,3.460346034603461,3.461946194619463,3.4635463546354632,3.4651465146514653,3.4667466746674673,3.4683468346834694,3.4699469946994697,3.4715471547154717,3.4731473147314738,3.474747474747476,3.476347634763476,3.477947794779478,3.47954795479548,3.4811481148114822,3.4827482748274825,3.4843484348434846,3.4859485948594866,3.4875487548754887,3.489148914891489,3.490749074907491,3.492349234923493,3.493949394939495,3.4955495549554954,3.4971497149714974,3.4987498749874995,3.5003500350035015,3.5019501950195018,3.503550355035504,3.505150515051506,3.506750675067508,3.508350835083508,3.5099509950995103,3.5115511551155123,3.5131513151315144,3.5147514751475146,3.5163516351635167,3.5179517951795187,3.5195519551955208,3.521152115211521,3.522752275227523,3.524352435243525,3.525952595259527,3.5275527552755275,3.5291529152915295,3.5307530753075316,3.532353235323532,3.533953395339534,3.535553555355536,3.537153715371538,3.5387538753875383,3.5403540354035403,3.5419541954195424,3.5435543554355444,3.5451545154515447,3.5467546754675467,3.548354835483549,3.549954995499551,3.551555155515551,3.553155315531553,3.554755475547555,3.5563556355635573,3.5579557955795575,3.5595559555955596,3.5611561156115616,3.5627562756275637,3.564356435643564,3.565956595659566,3.567556755675568,3.56915691569157,3.5707570757075704,3.5723572357235724,3.5739573957395745,3.5755575557555765,3.577157715771577,3.578757875787579,3.580358035803581,3.581958195819583,3.5835583558355832,3.5851585158515853,3.5867586758675873,3.5883588358835894,3.5899589958995897,3.5915591559155917,3.5931593159315938,3.594759475947596,3.596359635963596,3.597959795979598,3.5995599559956,3.6011601160116022,3.6027602760276025,3.6043604360436046,3.6059605960596066,3.6075607560756087,3.609160916091609,3.610761076107611,3.612361236123613,3.613961396139615,3.6155615561556154,3.6171617161716174,3.6187618761876195,3.6203620362036215,3.621962196219622,3.623562356235624,3.625162516251626,3.626762676267628,3.628362836283628,3.6299629962996303,3.6315631563156323,3.6331633163316344,3.6347634763476346,3.6363636363636367,3.6379637963796387,3.639563956395641,3.641164116411641,3.642764276427643,3.644364436443645,3.645964596459647,3.6475647564756475,3.6491649164916495,3.6507650765076516,3.652365236523652,3.653965396539654,3.655565556555656,3.657165716571658,3.6587658765876583,3.6603660366036603,3.6619661966196624,3.6635663566356644,3.6651665166516647,3.6667666766676668,3.668366836683669,3.669966996699671,3.671567156715671,3.673167316731673,3.6747674767476752,3.6763676367636773,3.6779677967796776,3.6795679567956796,3.6811681168116817,3.6827682768276837,3.684368436843684,3.685968596859686,3.687568756875688,3.68916891689169,3.6907690769076904,3.6923692369236925,3.6939693969396945,3.6955695569556966,3.697169716971697,3.698769876987699,3.700370037003701,3.701970197019703,3.7035703570357033,3.7051705170517053,3.7067706770677074,3.7083708370837094,3.7099709970997097,3.7115711571157117,3.7131713171317138,3.714771477147716,3.716371637163716,3.717971797179718,3.71957195719572,3.7211721172117223,3.7227722772277225,3.7243724372437246,3.7259725972597266,3.7275727572757287,3.729172917291729,3.730773077307731,3.732373237323733,3.733973397339735,3.7355735573557354,3.7371737173717374,3.7387738773877395,3.7403740374037415,3.741974197419742,3.743574357435744,3.745174517451746,3.746774677467748,3.7483748374837482,3.7499749974997503,3.7515751575157523,3.7531753175317544,3.7547754775477546,3.7563756375637567,3.7579757975797587,3.759575957595761,3.761176117611761,3.762776277627763,3.764376437643765,3.7659765976597672,3.7675767576757675,3.7691769176917695,3.7707770777077716,3.7723772377237736,3.773977397739774,3.775577557755776,3.777177717771778,3.7787778777877783,3.7803780378037803,3.7819781978197824,3.7835783578357844,3.7851785178517847,3.7867786778677868,3.788378837883789,3.789978997899791,3.791579157915791,3.793179317931793,3.7947794779477952,3.7963796379637973,3.7979797979797976,3.7995799579957996,3.8011801180118017,3.8027802780278037,3.804380438043804,3.805980598059806,3.807580758075808,3.80918091809181,3.8107810781078104,3.8123812381238125,3.8139813981398145,3.8155815581558166,3.817181718171817,3.818781878187819,3.820382038203821,3.821982198219823,3.8235823582358233,3.8251825182518253,3.8267826782678274,3.8283828382838294,3.8299829982998297,3.8315831583158317,3.833183318331834,3.834783478347836,3.836383638363836,3.837983798379838,3.83958395839584,3.8411841184118423,3.8427842784278425,3.8443844384438446,3.8459845984598466,3.8475847584758487,3.849184918491849,3.850785078507851,3.852385238523853,3.853985398539855,3.8555855585558554,3.8571857185718574,3.8587858785878595,3.8603860386038615,3.861986198619862,3.863586358635864,3.865186518651866,3.866786678667868,3.8683868386838682,3.8699869986998703,3.8715871587158723,3.8731873187318744,3.8747874787478747,3.8763876387638767,3.8779877987798788,3.879587958795881,3.881188118811881,3.882788278827883,3.884388438843885,3.8859885988598872,3.8875887588758875,3.8891889188918896,3.8907890789078916,3.8923892389238937,3.893989398939894,3.895589558955896,3.897189718971898,3.8987898789878983,3.9003900390039004,3.9019901990199024,3.9035903590359045,3.9051905190519047,3.906790679067907,3.908390839083909,3.909990999099911,3.911591159115911,3.913191319131913,3.9147914791479153,3.9163916391639173,3.9179917991799176,3.9195919591959196,3.9211921192119217,3.9227922792279237,3.924392439243924,3.925992599259926,3.927592759275928,3.92919291929193,3.9307930793079304,3.9323932393239325,3.9339933993399345,3.9355935593559366,3.937193719371937,3.938793879387939,3.940394039403941,3.941994199419943,3.9435943594359433,3.9451945194519453,3.9467946794679474,3.9483948394839494,3.9499949994999497,3.9515951595159517,3.953195319531954,3.954795479547956,3.956395639563956,3.957995799579958,3.9595959595959602,3.9611961196119623,3.9627962796279625,3.9643964396439646,3.9659965996599666,3.9675967596759687,3.969196919691969,3.970797079707971,3.972397239723973,3.973997399739975,3.9755975597559754,3.9771977197719774,3.9787978797879795,3.9803980398039815,3.981998199819982,3.983598359835984,3.985198519851986,3.986798679867988,3.9883988398839882,3.9899989998999903,3.9915991599159923,3.9931993199319944,3.9947994799479947,3.9963996399639967,3.9979997999799988,3.999599959996001,4.001200120012001,4.002800280028003,4.004400440044005,4.006000600060007,4.0076007600760075,4.00920092009201,4.010801080108012,4.012401240124014,4.014001400140014,4.015601560156016,4.017201720172018,4.018801880188018,4.02040204020402,4.022002200220022,4.0236023602360245,4.025202520252025,4.026802680268027,4.028402840284029,4.030003000300031,4.031603160316031,4.033203320332033,4.034803480348035,4.036403640364037,4.038003800380038,4.03960396039604,4.041204120412042,4.042804280428044,4.044404440444044,4.046004600460046,4.047604760476048,4.04920492049205,4.05080508050805,4.0524052405240525,4.0540054005400545,4.055605560556057,4.057205720572057,4.058805880588059,4.060406040604061,4.062006200620063,4.063606360636063,4.065206520652065,4.066806680668067,4.068406840684069,4.07000700070007,4.071607160716072,4.073207320732074,4.074807480748076,4.076407640764076,4.078007800780078,4.07960796079608,4.081208120812082,4.082808280828083,4.084408440844085,4.086008600860087,4.087608760876089,4.089208920892089,4.090809080908091,4.092409240924093,4.094009400940095,4.095609560956095,4.0972097209720975,4.0988098809880995,4.100410041004102,4.102010201020102,4.103610361036104,4.105210521052106,4.106810681068108,4.108410841084108,4.11001100110011,4.111611161116112,4.113211321132114,4.114811481148115,4.116411641164117,4.118011801180119,4.119611961196121,4.121212121212121,4.122812281228123,4.124412441244125,4.126012601260127,4.1276127612761275,4.12921292129213,4.130813081308132,4.132413241324134,4.134013401340134,4.135613561356136,4.137213721372138,4.138813881388138,4.14041404140414,4.142014201420142,4.1436143614361445,4.145214521452145,4.146814681468147,4.148414841484149,4.150015001500151,4.151615161516151,4.153215321532153,4.154815481548155,4.156415641564157,4.158015801580158,4.15961596159616,4.161216121612162,4.162816281628164,4.164416441644164,4.166016601660166,4.167616761676168,4.16921692169217,4.1708170817081704,4.1724172417241725,4.1740174017401745,4.175617561756177,4.177217721772177,4.178817881788179,4.180418041804181,4.182018201820183,4.183618361836183,4.185218521852185,4.186818681868187,4.1884188418841894,4.19001900190019,4.191619161916192,4.193219321932194,4.194819481948196,4.196419641964196,4.198019801980198,4.1996199619962,4.201220122012202,4.202820282028203,4.204420442044205,4.206020602060207,4.207620762076209,4.209220922092209,4.210821082108211,4.212421242124213,4.214021402140215,4.215621562156215,4.2172217221722175,4.2188218821882195,4.220422042204222,4.222022202220222,4.223622362236224,4.225222522252226,4.226822682268228,4.228422842284228,4.23002300230023,4.231623162316232,4.233223322332234,4.234823482348235,4.236423642364237,4.238023802380239,4.239623962396241,4.241224122412241,4.242824282428243,4.244424442444245,4.246024602460247,4.2476247624762475,4.24922492249225,4.250825082508252,4.252425242524254,4.254025402540254,4.255625562556256,4.257225722572258,4.25882588258826,4.26042604260426,4.262026202620262,4.2636263626362645,4.265226522652265,4.266826682668267,4.268426842684269,4.270027002700271,4.271627162716271,4.273227322732273,4.274827482748275,4.276427642764277,4.278027802780278,4.27962796279628,4.281228122812282,4.282828282828284,4.284428442844284,4.286028602860286,4.287628762876288,4.28922892289229,4.2908290829082905,4.2924292429242925,4.294029402940295,4.295629562956297,4.297229722972297,4.298829882988299,4.300430043004301,4.302030203020303,4.303630363036303,4.305230523052305,4.306830683068307,4.3084308430843095,4.31003100310031,4.311631163116312,4.313231323132314,4.314831483148316,4.316431643164316,4.318031803180318,4.31963196319632,4.321232123212322,4.322832283228323,4.324432443244325,4.326032603260327,4.327632763276329,4.329232923292329,4.330833083308331,4.332433243324333,4.334033403340335,4.335633563356335,4.3372337233723375,4.3388338833883395,4.340434043404342,4.342034203420342,4.343634363436344,4.345234523452346,4.346834683468348,4.348434843484348,4.35003500350035,4.351635163516352,4.353235323532354,4.354835483548355,4.356435643564357,4.358035803580359,4.359635963596361,4.361236123612361,4.362836283628363,4.364436443644365,4.366036603660367,4.3676367636763676,4.36923692369237,4.370837083708372,4.372437243724374,4.374037403740374,4.375637563756376,4.377237723772378,4.37883788378838,4.38043804380438,4.3820382038203824,4.3836383638363845,4.385238523852385,4.386838683868387,4.388438843884389,4.390039003900391,4.391639163916391,4.393239323932393,4.394839483948395,4.396439643964397,4.398039803980398,4.3996399639964,4.401240124012402,4.402840284028404,4.404440444044404,4.406040604060406,4.407640764076408,4.40924092409241,4.4108410841084105,4.4124412441244125,4.414041404140415,4.415641564156417,4.417241724172417,4.418841884188419,4.420442044204421,4.422042204220423,4.423642364236423,4.425242524252425,4.426842684268427,4.4284428442844295,4.43004300430043,4.431643164316432,4.433243324332434,4.434843484348436,4.436443644364436,4.438043804380438,4.43964396439644,4.441244124412442,4.442844284428443,4.444444444444445,4.446044604460447,4.447644764476449,4.449244924492449,4.450845084508451,4.452445244524453,4.454045404540455,4.455645564556455,4.4572457245724575,4.4588458845884595,4.460446044604462,4.462046204620462,4.463646364636464,4.465246524652466,4.466846684668468,4.468446844684468,4.47004700470047,4.471647164716472,4.473247324732474,4.474847484748475,4.476447644764477,4.478047804780479,4.479647964796481,4.481248124812481,4.482848284828483,4.484448444844485,4.486048604860487,4.487648764876488,4.48924892489249,4.490849084908492,4.492449244924494,4.494049404940494,4.495649564956496,4.497249724972498,4.4988498849885,4.5004500450045,4.5020502050205025,4.5036503650365045,4.505250525052505,4.506850685068507,4.508450845084509,4.510051005100511,4.511651165116511,4.513251325132513,4.514851485148515,4.516451645164517,4.518051805180518,4.51965196519652,4.521252125212522,4.522852285228524,4.524452445244524,4.526052605260526,4.527652765276528,4.52925292529253,4.5308530853085305,4.5324532453245325,4.534053405340535,4.535653565356537,4.537253725372537,4.538853885388539,4.540454045404541,4.542054205420543,4.543654365436543,4.545254525452545,4.546854685468547,4.5484548454845495,4.55005500550055,4.551655165516552,4.553255325532554,4.554855485548556,4.556455645564556,4.558055805580558,4.55965596559656,4.561256125612562,4.562856285628563,4.564456445644565,4.566056605660567,4.567656765676569,4.569256925692569,4.570857085708571,4.572457245724573,4.574057405740575,4.5756575657565755,4.5772577257725775,4.5788578857885796,4.580458045804582,4.582058205820582,4.583658365836584,4.585258525852586,4.586858685868588,4.588458845884588,4.59005900590059,4.591659165916592,4.5932593259325945,4.594859485948595,4.596459645964597,4.598059805980599,4.599659965996601,4.601260126012601,4.602860286028603,4.604460446044605,4.606060606060607,4.607660766076608,4.60926092609261,4.610861086108612,4.612461246124614,4.614061406140614,4.615661566156616,4.617261726172618,4.61886188618862,4.62046204620462,4.6220622062206225,4.6236623662366245,4.625262526252625,4.626862686268627,4.628462846284629,4.630063006300631,4.631663166316631,4.633263326332633,4.634863486348635,4.636463646364637,4.638063806380638,4.63966396639664,4.641264126412642,4.642864286428644,4.644464446444644,4.646064606460646,4.647664766476648,4.64926492649265,4.6508650865086505,4.6524652465246525,4.654065406540655,4.655665566556657,4.657265726572657,4.658865886588659,4.660466046604661,4.662066206620663,4.663666366636663,4.665266526652665,4.666866686668667,4.6684668466846695,4.67006700670067,4.671667166716672,4.673267326732674,4.674867486748676,4.676467646764676,4.678067806780678,4.67966796679668,4.681268126812682,4.682868286828683,4.684468446844685,4.686068606860687,4.687668766876689,4.689268926892689,4.690869086908691,4.692469246924693,4.694069406940695,4.6956695669566955,4.6972697269726975,4.6988698869887,4.700470047004702,4.702070207020702,4.703670367036704,4.705270527052706,4.706870687068708,4.708470847084708,4.71007100710071,4.711671167116712,4.7132713271327145,4.714871487148715,4.716471647164717,4.718071807180719,4.719671967196721,4.721272127212721,4.722872287228723,4.724472447244725,4.726072607260727,4.727672767276728,4.72927292729273,4.730873087308732,4.732473247324734,4.734073407340734,4.735673567356736,4.737273727372738,4.73887388738874,4.74047404740474,4.7420742074207425,4.7436743674367445,4.745274527452745,4.746874687468747,4.748474847484749,4.750075007500751,4.751675167516751,4.753275327532753,4.754875487548755,4.756475647564757,4.758075807580758,4.75967596759676,4.761276127612762,4.762876287628764,4.764476447644764,4.766076607660766,4.767676767676768,4.76927692769277,4.7708770877087705,4.7724772477247726,4.774077407740775,4.775677567756777,4.777277727772777,4.778877887788779,4.780478047804781,4.782078207820783,4.783678367836783,4.785278527852785,4.7868786878687875,4.7884788478847895,4.79007900790079,4.791679167916792,4.793279327932794,4.794879487948796,4.796479647964796,4.798079807980798,4.7996799679968,4.801280128012802,4.802880288028803,4.804480448044805,4.806080608060807,4.807680768076809,4.809280928092809,4.810881088108811,4.812481248124813,4.814081408140815,4.8156815681568155,4.8172817281728175,4.81888188818882,4.820482048204822,4.822082208220822,4.823682368236824,4.825282528252826,4.826882688268828,4.828482848284828,4.83008300830083,4.831683168316832,4.8332833283328345,4.834883488348835,4.836483648364837,4.838083808380839,4.839683968396841,4.841284128412841,4.842884288428843,4.844484448444845,4.846084608460847,4.847684768476848,4.84928492849285,4.850885088508852,4.852485248524854,4.854085408540854,4.855685568556856,4.857285728572858,4.85888588858886,4.86048604860486,4.8620862086208625,4.8636863686368645,4.865286528652867,4.866886688668867,4.868486848684869,4.870087008700871,4.871687168716871,4.873287328732873,4.874887488748875,4.876487648764877,4.878087808780878,4.87968796879688,4.881288128812882,4.882888288828884,4.884488448844884,4.886088608860886,4.887688768876888,4.88928892889289,4.8908890889088905,4.892489248924893,4.894089408940895,4.895689568956897,4.897289728972897,4.898889888988899,4.900490049004901,4.902090209020903,4.903690369036903,4.905290529052905,4.9068906890689075,4.9084908490849095,4.91009100910091,4.911691169116912,4.913291329132914,4.914891489148916,4.916491649164916,4.918091809180918,4.91969196919692,4.921292129212922,4.922892289228923,4.924492449244925,4.926092609260927,4.927692769276929,4.929292929292929,4.930893089308931,4.932493249324933,4.934093409340935,4.9356935693569355,4.9372937293729375,4.93889388938894,4.940494049404942,4.942094209420942,4.943694369436944,4.945294529452946,4.946894689468948,4.948494849484948,4.95009500950095,4.951695169516952,4.9532953295329545,4.954895489548955,4.956495649564957,4.958095809580959,4.959695969596961,4.961296129612961,4.962896289628963,4.964496449644965,4.966096609660967,4.967696769676968,4.96929692969297,4.970897089708972,4.972497249724974,4.974097409740974,4.975697569756976,4.977297729772978,4.97889788978898,4.9804980498049805,4.9820982098209825,4.9836983698369846,4.985298529852987,4.986898689868987,4.988498849884989,4.990099009900991,4.991699169916991,4.993299329932993,4.994899489948995,4.996499649964997,4.998099809980998,4.999699969997,5.001300130013002,5.002900290029004,5.004500450045004,5.006100610061006,5.007700770077008,5.00930093009301,5.0109010901090105,5.012501250125013,5.014101410141015,5.015701570157017,5.017301730173017,5.018901890189019,5.020502050205021,5.022102210221023,5.023702370237023,5.025302530253025,5.0269026902690275,5.0285028502850295,5.03010301030103,5.031703170317032,5.033303330333034,5.034903490349036,5.036503650365036,5.038103810381038,5.03970397039704,5.041304130413042,5.042904290429043,5.044504450445045,5.046104610461047,5.047704770477049,5.049304930493049,5.050905090509051,5.052505250525053,5.054105410541055,5.0557055705570555,5.0573057305730575,5.05890589058906,5.060506050605062,5.062106210621062,5.063706370637064,5.065306530653066,5.066906690669068,5.068506850685068,5.07010701070107,5.071707170717072,5.0733073307330745,5.074907490749075,5.076507650765077,5.078107810781079,5.079707970797081,5.081308130813081,5.082908290829083,5.084508450845085,5.086108610861087,5.087708770877088,5.08930893089309,5.090909090909092,5.092509250925094,5.094109410941094,5.095709570957096,5.097309730973098,5.0989098909891,5.1005100510051005,5.1021102110211025,5.103710371037105,5.105310531053107,5.106910691069107,5.108510851085109,5.110111011101111,5.111711171117111,5.113311331133113,5.114911491149115,5.116511651165117,5.118111811181118,5.11971197119712,5.121312131213122,5.122912291229124,5.124512451245124,5.126112611261126,5.127712771277128,5.12931293129313,5.1309130913091305,5.132513251325133,5.134113411341135,5.135713571357137,5.137313731373137,5.138913891389139,5.140514051405141,5.142114211421143,5.143714371437143,5.145314531453145,5.1469146914691475,5.1485148514851495,5.15011501150115,5.151715171517152,5.153315331533154,5.154915491549156,5.156515651565156,5.158115811581158,5.15971597159716,5.161316131613162,5.162916291629163,5.164516451645165,5.166116611661167,5.167716771677169,5.169316931693169,5.170917091709171,5.172517251725173,5.174117411741175,5.1757175717571755,5.177317731773178,5.17891789178918,5.180518051805182,5.182118211821182,5.183718371837184,5.185318531853186,5.186918691869188,5.188518851885188,5.19011901190119,5.1917191719171925,5.1933193319331945,5.194919491949195,5.196519651965197,5.198119811981199,5.199719971997201,5.201320132013201,5.202920292029203,5.204520452045205,5.206120612061207,5.207720772077208,5.20932093209321,5.210921092109212,5.212521252125214,5.214121412141214,5.215721572157216,5.217321732173218,5.21892189218922,5.2205220522052205,5.2221222122212225,5.223722372237225,5.225322532253227,5.226922692269227,5.228522852285229,5.230123012301231,5.231723172317231,5.233323332333233,5.234923492349235,5.236523652365237,5.238123812381238,5.23972397239724,5.241324132413242,5.242924292429244,5.244524452445244,5.246124612461246,5.247724772477248,5.24932493249325,5.2509250925092505,5.252525252525253,5.254125412541255,5.255725572557257,5.257325732573257,5.258925892589259,5.260526052605261,5.262126212621263,5.263726372637263,5.2653265326532654,5.2669266926692675,5.2685268526852695,5.27012701270127,5.271727172717272,5.273327332733274,5.274927492749276,5.276527652765276,5.278127812781278,5.27972797279728,5.281328132813282,5.282928292829283,5.284528452845285,5.286128612861287,5.287728772877289,5.289328932893289,5.290929092909291,5.292529252925293,5.294129412941295,5.2957295729572955,5.297329732973298,5.2989298929893,5.300530053005302,5.302130213021302,5.303730373037304,5.305330533053306,5.306930693069308,5.308530853085308,5.31013101310131,5.3117311731173125,5.3133313331333145,5.314931493149315,5.316531653165317,5.318131813181319,5.319731973197321,5.321332133213321,5.322932293229323,5.324532453245325,5.326132613261327,5.327732773277328,5.32933293329333,5.330933093309332,5.332533253325334,5.334133413341334,5.335733573357336,5.337333733373338,5.33893389338934,5.3405340534053405,5.3421342134213425,5.343734373437345,5.345334533453347,5.346934693469347,5.348534853485349,5.350135013501351,5.351735173517351,5.353335333533353,5.354935493549355,5.356535653565357,5.358135813581358,5.35973597359736,5.361336133613362,5.362936293629364,5.364536453645364,5.366136613661366,5.367736773677368,5.36933693369337,5.370937093709371,5.372537253725373,5.374137413741375,5.375737573757377,5.377337733773377,5.378937893789379,5.380538053805381,5.382138213821383,5.383738373837383,5.3853385338533855,5.3869386938693875,5.38853885388539,5.39013901390139,5.391739173917392,5.393339333933394,5.394939493949396,5.396539653965396,5.398139813981398,5.3997399739974,5.401340134013402,5.402940294029403,5.404540454045405,5.406140614061407,5.407740774077409,5.409340934093409,5.410941094109411,5.412541254125413,5.414141414141415,5.4157415741574155,5.417341734173418,5.41894189418942,5.420542054205422,5.422142214221422,5.423742374237424,5.425342534253426,5.426942694269428,5.428542854285428,5.43014301430143,5.4317431743174325,5.4333433343334345,5.434943494349435,5.436543654365437,5.438143814381439,5.439743974397441,5.441344134413441,5.442944294429443,5.444544454445445,5.446144614461447,5.447744774477448,5.44934493449345,5.450945094509452,5.452545254525454,5.454145414541454,5.455745574557456,5.457345734573458,5.45894589458946,5.4605460546054605,5.4621462146214625,5.463746374637465,5.465346534653467,5.466946694669467,5.468546854685469,5.470147014701471,5.471747174717473,5.473347334733473,5.474947494749475,5.4765476547654774,5.478147814781478,5.47974797479748,5.481348134813482,5.482948294829484,5.484548454845484,5.486148614861486,5.487748774877488,5.48934893489349,5.490949094909491,5.492549254925493,5.494149414941495,5.495749574957497,5.497349734973497,5.498949894989499,5.500550055005501,5.502150215021503,5.503750375037503,5.5053505350535055,5.5069506950695075,5.50855085508551,5.51015101510151,5.511751175117512,5.513351335133514,5.514951495149516,5.516551655165516,5.518151815181518,5.51975197519752,5.521352135213522,5.522952295229523,5.524552455245525,5.526152615261527,5.527752775277529,5.529352935293529,5.530953095309531,5.532553255325533,5.534153415341535,5.5357535753575355,5.537353735373538,5.53895389538954,5.540554055405542,5.542154215421542,5.543754375437544,5.545354535453546,5.546954695469548,5.548554855485548,5.55015501550155,5.5517551755175525,5.5533553355335545,5.554955495549555,5.556555655565557,5.558155815581559,5.559755975597561,5.561356135613561,5.562956295629563,5.564556455645565,5.566156615661567,5.567756775677568,5.56935693569357,5.570957095709572,5.572557255725574,5.574157415741574,5.575757575757576,5.577357735773578,5.57895789578958,5.5805580558055805,5.582158215821583,5.583758375837585,5.585358535853587,5.586958695869587,5.588558855885589,5.590159015901591,5.591759175917593,5.593359335933593,5.594959495949595,5.5965596559655975,5.598159815981598,5.5997599759976,5.601360136013602,5.602960296029604,5.604560456045604,5.606160616061606,5.607760776077608,5.60936093609361,5.610961096109611,5.612561256125613,5.614161416141615,5.615761576157617,5.617361736173617,5.618961896189619,5.620562056205621,5.622162216221623,5.623762376237623,5.6253625362536255,5.6269626962696275,5.62856285628563,5.63016301630163,5.631763176317632,5.633363336333634,5.634963496349636,5.636563656365636,5.638163816381638,5.63976397639764,5.641364136413642,5.642964296429643,5.644564456445645,5.646164616461647,5.647764776477649,5.649364936493649,5.650965096509651,5.652565256525653,5.654165416541655,5.6557655765576555,5.657365736573658,5.65896589658966,5.660566056605662,5.662166216621662,5.663766376637664,5.665366536653666,5.666966696669668,5.668566856685668,5.6701670167016704,5.6717671767176725,5.6733673367336745,5.674967496749675,5.676567656765677,5.678167816781679,5.679767976797681,5.681368136813681,5.682968296829683,5.684568456845685,5.686168616861687,5.687768776877688,5.68936893689369,5.690969096909692,5.692569256925694,5.694169416941694,5.695769576957696,5.697369736973698,5.6989698969897,5.7005700570057005,5.702170217021703,5.703770377037705,5.705370537053707,5.706970697069707,5.708570857085709,5.710171017101711,5.711771177117713,5.713371337133713,5.714971497149715,5.7165716571657175,5.718171817181718,5.71977197719772,5.721372137213722,5.722972297229724,5.724572457245724,5.726172617261726,5.727772777277728,5.72937293729373,5.730973097309731,5.732573257325733,5.734173417341735,5.735773577357737,5.737373737373737,5.738973897389739,5.740574057405741,5.742174217421743,5.743774377437743,5.7453745374537455,5.7469746974697475,5.74857485748575,5.75017501750175,5.751775177517752,5.753375337533754,5.754975497549756,5.756575657565756,5.758175817581758,5.75977597759776,5.761376137613762,5.762976297629763,5.764576457645765,5.766176617661767,5.767776777677769,5.769376937693769,5.770977097709771,5.772577257725773,5.774177417741775,5.775777577757776,5.777377737773778,5.77897789778978,5.780578057805782,5.782178217821782,5.783778377837784,5.785378537853786,5.786978697869788,5.788578857885788,5.7901790179017905,5.7917791779177925,5.793379337933795,5.794979497949795,5.796579657965797,5.798179817981799,5.799779977997801,5.801380138013801,5.802980298029803,5.804580458045805,5.806180618061807,5.807780778077808,5.80938093809381,5.810981098109812,5.812581258125814,5.814181418141814,5.815781578157816,5.817381738173818,5.81898189818982,5.8205820582058205,5.822182218221823,5.823782378237825,5.825382538253827,5.826982698269827,5.828582858285829,5.830183018301831,5.831783178317833,5.833383338333833,5.834983498349835,5.8365836583658375,5.838183818381838,5.83978397839784,5.841384138413842,5.842984298429844,5.844584458445844,5.846184618461846,5.847784778477848,5.84938493849385,5.850985098509851,5.852585258525853,5.854185418541855,5.855785578557857,5.857385738573857,5.858985898589859,5.860586058605861,5.862186218621863,5.8637863786378635,5.8653865386538655,5.8669866986698676,5.86858685868587,5.87018701870187,5.871787178717872,5.873387338733874,5.874987498749876,5.876587658765876,5.878187818781878,5.87978797879788,5.8813881388138824,5.882988298829883,5.884588458845885,5.886188618861887,5.887788778877889,5.889388938893889,5.890989098909891,5.892589258925893,5.894189418941895,5.895789578957896,5.897389738973898,5.8989898989899,5.900590059005902,5.902190219021902,5.903790379037904,5.905390539053906,5.906990699069908,5.908590859085908,5.9101910191019105,5.9117911791179125,5.913391339133915,5.914991499149915,5.916591659165917,5.918191819181919,5.919791979197921,5.921392139213921,5.922992299229923,5.924592459245925,5.926192619261927,5.927792779277928,5.92939293929393,5.930993099309932,5.932593259325934,5.934193419341934,5.935793579357936,5.937393739373938,5.93899389938994,5.9405940594059405,5.942194219421943,5.943794379437945,5.945394539453947,5.946994699469947,5.948594859485949,5.950195019501951,5.951795179517953,5.953395339533953,5.954995499549955,5.9565956595659575,5.958195819581958,5.95979597959796,5.961396139613962,5.962996299629964,5.964596459645964,5.966196619661966,5.967796779677968,5.96939693969397,5.970997099709971,5.972597259725973,5.974197419741975,5.975797579757977,5.977397739773977,5.978997899789979,5.980598059805981,5.982198219821983,5.9837983798379835,5.9853985398539855,5.986998699869988,5.98859885988599,5.99019901990199,5.991799179917992,5.993399339933994,5.994999499949996,5.996599659965996,5.998199819981998,5.999799979998,6.0014001400140025,6.003000300030003,6.004600460046005,6.006200620062007,6.007800780078009,6.009400940094009,6.011001100110011,6.012601260126013,6.014201420142015,6.015801580158016,6.017401740174018,6.01900190019002,6.020602060206022,6.022202220222022,6.023802380238024,6.025402540254026,6.027002700270028,6.028602860286028,6.0302030203020305,6.0318031803180325,6.033403340334035,6.035003500350035,6.036603660366037,6.038203820382039,6.039803980398041,6.041404140414041,6.043004300430043,6.044604460446045,6.046204620462047,6.047804780478048,6.04940494049405,6.051005100510052,6.052605260526054,6.054205420542054,6.055805580558056,6.057405740574058,6.05900590059006,6.0606060606060606,6.062206220622063,6.063806380638065,6.065406540654067,6.067006700670067,6.068606860686069,6.070207020702071,6.071807180718073,6.073407340734073,6.0750075007500755,6.0766076607660775,6.0782078207820796,6.07980798079808,6.081408140814082,6.083008300830084,6.084608460846084,6.086208620862086,6.087808780878088,6.08940894089409,6.091009100910091,6.092609260926093,6.094209420942095,6.095809580958097,6.097409740974097,6.099009900990099,6.100610061006101,6.102210221022103,6.1038103810381035,6.1054105410541055,6.107010701070108,6.10861086108611,6.11021102110211,6.111811181118112,6.113411341134114,6.115011501150116,6.116611661166116,6.118211821182118,6.11981198119812,6.1214121412141225,6.123012301230123,6.124612461246125,6.126212621262127,6.127812781278129,6.129412941294129,6.131013101310131,6.132613261326133,6.134213421342135,6.135813581358136,6.137413741374138,6.13901390139014,6.140614061406142,6.142214221422142,6.143814381438144,6.145414541454146,6.147014701470148,6.148614861486148,6.1502150215021505,6.1518151815181525,6.153415341534155,6.155015501550155,6.156615661566157,6.158215821582159,6.159815981598161,6.161416141614161,6.163016301630163,6.164616461646165,6.166216621662167,6.167816781678168,6.16941694169417,6.171017101710172,6.172617261726174,6.174217421742174,6.175817581758176,6.177417741774178,6.17901790179018,6.180618061806181,6.182218221822183,6.183818381838185,6.185418541854187,6.187018701870187,6.188618861886189,6.190219021902191,6.191819181918193,6.193419341934193,6.1950195019501955,6.1966196619661975,6.1982198219822,6.1998199819982,6.201420142014202,6.203020302030204,6.204620462046204,6.206220622062206,6.207820782078208,6.20942094209421,6.211021102110211,6.212621262126213,6.214221422142215,6.215821582158217,6.217421742174217,6.219021902190219,6.220622062206221,6.222222222222223,6.2238223822382235,6.2254225422542255,6.227022702270228,6.22862286228623,6.23022302230223,6.231823182318232,6.233423342334234,6.235023502350236,6.236623662366236,6.238223822382238,6.23982398239824,6.2414241424142425,6.243024302430243,6.244624462446245,6.246224622462247,6.247824782478249,6.249424942494249,6.251025102510251,6.252625262526253,6.254225422542255,6.255825582558256,6.257425742574258,6.25902590259026,6.260626062606262,6.262226222622262,6.263826382638264,6.265426542654266,6.267026702670268,6.2686268626862685,6.2702270227022705,6.2718271827182726,6.273427342734275,6.275027502750275,6.276627662766277,6.278227822782279,6.279827982798281,6.281428142814281,6.283028302830283,6.284628462846285,6.2862286228622875,6.287828782878288,6.28942894289429,6.291029102910292,6.292629262926294,6.294229422942294,6.295829582958296,6.297429742974298,6.2990299029903,6.300630063006301,6.302230223022303,6.303830383038305,6.305430543054307,6.307030703070307,6.308630863086309,6.310231023102311,6.311831183118313,6.313431343134313,6.3150315031503155,6.3166316631663175,6.31823182318232,6.31983198319832,6.321432143214322,6.323032303230324,6.324632463246324,6.326232623262326,6.327832783278328,6.32943294329433,6.331033103310331,6.332633263326333,6.334233423342335,6.335833583358337,6.337433743374337,6.339033903390339,6.340634063406341,6.342234223422343,6.3438343834383435,6.3454345434543455,6.347034703470348,6.34863486348635,6.35023502350235,6.351835183518352,6.353435343534354,6.355035503550356,6.356635663566356,6.358235823582358,6.35983598359836,6.3614361436143625,6.363036303630363,6.364636463646365,6.366236623662367,6.367836783678369,6.369436943694369,6.371037103710371,6.372637263726373,6.374237423742375,6.375837583758376,6.377437743774378,6.37903790379038,6.380638063806382,6.382238223822382,6.383838383838384,6.385438543854386,6.387038703870388,6.3886388638863885,6.3902390239023905,6.391839183918393,6.393439343934395,6.395039503950395,6.396639663966397,6.398239823982399,6.399839983998401,6.401440144014401,6.403040304030403,6.404640464046405,6.4062406240624075,6.407840784078408,6.40944094409441,6.411041104110412,6.412641264126414,6.414241424142414,6.415841584158416,6.417441744174418,6.41904190419042,6.420642064206421,6.422242224222423,6.423842384238425,6.425442544254427,6.427042704270427,6.428642864286429,6.430243024302431,6.431843184318433,6.433443344334433,6.4350435043504355,6.4366436643664375,6.43824382438244,6.43984398439844,6.441444144414442,6.443044304430444,6.444644464446444,6.446244624462446,6.447844784478448,6.44944494449445,6.451045104510451,6.452645264526453,6.454245424542455,6.455845584558457,6.457445744574457,6.459045904590459,6.460646064606461,6.462246224622463,6.4638463846384635,6.4654465446544656,6.467046704670468,6.46864686468647,6.47024702470247,6.471847184718472,6.473447344734474,6.475047504750476,6.476647664766476,6.478247824782478,6.4798479847984805,6.4814481448144825,6.483048304830483,6.484648464846485,6.486248624862487,6.487848784878489,6.489448944894489,6.491049104910491,6.492649264926493,6.494249424942495,6.495849584958496,6.497449744974498,6.4990499049905,6.500650065006502,6.502250225022502,6.503850385038504,6.505450545054506,6.507050705070508,6.5086508650865085,6.5102510251025105,6.511851185118513,6.513451345134515,6.515051505150515,6.516651665166517,6.518251825182519,6.519851985198521,6.521452145214521,6.523052305230523,6.524652465246525,6.5262526252625275,6.527852785278528,6.52945294529453,6.531053105310532,6.532653265326534,6.534253425342534,6.535853585358536,6.537453745374538,6.53905390539054,6.540654065406541,6.542254225422543,6.543854385438545,6.545454545454547,6.547054705470547,6.548654865486549,6.550255025502551,6.551855185518553,6.5534553455345534,6.5550555055505555,6.5566556655665575,6.55825582558256,6.55985598559856,6.561456145614562,6.563056305630564,6.564656465646566,6.566256625662566,6.567856785678568,6.56945694569457,6.571057105710571,6.572657265726573,6.574257425742575,6.575857585758577,6.577457745774577,6.579057905790579,6.580658065806581,6.582258225822583,6.5838583858385835,6.585458545854586,6.587058705870588,6.58865886588659,6.59025902590259,6.591859185918592,6.593459345934594,6.595059505950596,6.596659665966596,6.598259825982598,6.5998599859986005,6.6014601460146025,6.603060306030603,6.604660466046605,6.606260626062607,6.607860786078609,6.609460946094609,6.611061106110611,6.612661266126613,6.614261426142615,6.615861586158616,6.617461746174618,6.61906190619062,6.620662066206622,6.622262226222622,6.623862386238624,6.625462546254626,6.627062706270628,6.6286628662866285,6.6302630263026305,6.631863186318633,6.633463346334635,6.635063506350635,6.636663666366637,6.638263826382639,6.639863986398641,6.641464146414641,6.643064306430643,6.644664466446645,6.6462646264626475,6.647864786478648,6.64946494649465,6.651065106510652,6.652665266526654,6.654265426542654,6.655865586558656,6.657465746574658,6.65906590659066,6.660666066606661,6.662266226622663,6.663866386638665,6.665466546654667,6.667066706670667,6.668666866686669,6.670267026702671,6.671867186718673,6.6734673467346735,6.6750675067506755,6.6766676667666776,6.67826782678268,6.67986798679868,6.681468146814682,6.683068306830684,6.684668466846686,6.686268626862686,6.687868786878688,6.68946894689469,6.691069106910691,6.692669266926693,6.694269426942695,6.695869586958697,6.697469746974697,6.699069906990699,6.700670067006701,6.702270227022703,6.7038703870387035,6.705470547054706,6.707070707070708,6.70867086708671,6.71027102710271,6.711871187118712,6.713471347134714,6.715071507150716,6.716671667166716,6.718271827182718,6.7198719871987205,6.7214721472147225,6.723072307230723,6.724672467246725,6.726272627262727,6.727872787278729,6.729472947294729,6.731073107310731,6.732673267326733,6.734273427342735,6.735873587358736,6.737473747374738,6.73907390739074,6.740674067406742,6.742274227422742,6.743874387438744,6.745474547454746,6.747074707470748,6.7486748674867485,6.7502750275027505,6.751875187518753,6.753475347534755,6.755075507550755,6.756675667566757,6.758275827582759,6.759875987598761,6.761476147614761,6.763076307630763,6.7646764676467654,6.7662766276627675,6.767876787678768,6.76947694769477,6.771077107710772,6.772677267726774,6.774277427742774,6.775877587758776,6.777477747774778,6.77907790779078,6.780678067806781,6.782278227822783,6.783878387838785,6.785478547854787,6.787078707870787,6.788678867886789,6.790279027902791,6.791879187918793,6.7934793479347935,6.7950795079507955,6.796679667966798,6.7982798279828,6.7998799879988,6.801480148014802,6.803080308030804,6.804680468046806,6.806280628062806,6.807880788078808,6.80948094809481,6.811081108110811,6.812681268126813,6.814281428142815,6.815881588158817,6.817481748174817,6.819081908190819,6.820682068206821,6.822282228222823,6.8238823882388235,6.825482548254826,6.827082708270828,6.82868286828683,6.83028302830283,6.831883188318832,6.833483348334834,6.835083508350836,6.836683668366836,6.838283828382838,6.8398839883988405,6.8414841484148425,6.843084308430843,6.844684468446845,6.846284628462847,6.847884788478849,6.849484948494849,6.851085108510851,6.852685268526853,6.854285428542855,6.855885588558856,6.857485748574858,6.85908590859086,6.860686068606862,6.862286228622862,6.863886388638864,6.865486548654866,6.867086708670868,6.8686868686868685,6.870287028702871,6.871887188718873,6.873487348734875,6.875087508750875,6.876687668766877,6.878287828782879,6.879887988798881,6.881488148814881,6.883088308830883,6.8846884688468855,6.8862886288628875,6.887888788878888,6.88948894889489,6.891089108910892,6.892689268926894,6.894289428942894,6.895889588958896,6.897489748974898,6.8990899089909,6.900690069006901,6.902290229022903,6.903890389038905,6.905490549054907,6.907090709070907,6.908690869086909,6.910291029102911,6.911891189118913,6.9134913491349135,6.9150915091509155,6.916691669166918,6.91829182918292,6.91989198919892,6.921492149214922,6.923092309230924,6.924692469246926,6.926292629262926,6.927892789278928,6.92949294929493,6.931093109310931,6.932693269326933,6.934293429342935,6.935893589358937,6.937493749374937,6.939093909390939,6.940694069406941,6.942294229422943,6.9438943894389435,6.945494549454946,6.947094709470948,6.94869486948695,6.95029502950295,6.951895189518952,6.953495349534954,6.955095509550956,6.956695669566956,6.9582958295829584,6.9598959895989605,6.9614961496149625,6.963096309630963,6.964696469646965,6.966296629662967,6.967896789678969,6.969496949694969,6.971097109710971,6.972697269726973,6.974297429742975,6.975897589758976,6.977497749774978,6.97909790979098,6.980698069806982,6.982298229822982,6.983898389838984,6.985498549854986,6.987098709870988,6.9886988698869885,6.990299029902991,6.991899189918993,6.993499349934995,6.995099509950995,6.996699669966997,6.998299829982999,6.999899989999001,7.001500150015001,7.003100310031003,7.0047004700470055,7.0063006300630075,7.007900790079008,7.00950095009501,7.011101110111012,7.012701270127014,7.014301430143014,7.015901590159016,7.017501750175018,7.01910191019102,7.020702070207021,7.022302230223023,7.023902390239025,7.025502550255027,7.027102710271027,7.028702870287029,7.030303030303031,7.031903190319033,7.0335033503350335,7.0351035103510355,7.036703670367038,7.03830383038304,7.03990399039904,7.041504150415042,7.043104310431044,7.044704470447046,7.046304630463046,7.047904790479048,7.04950495049505,7.051105110511051,7.052705270527053,7.054305430543055,7.055905590559057,7.057505750575057,7.059105910591059,7.060706070607061,7.062306230623063,7.063906390639064,7.065506550655066,7.067106710671068,7.06870687068707,7.07030703070307,7.071907190719072,7.073507350735074,7.075107510751076,7.076707670767076,7.0783078307830785,7.0799079907990805,7.081508150815083,7.083108310831083,7.084708470847085,7.086308630863087,7.087908790879089,7.089508950895089,7.091109110911091,7.092709270927093,7.094309430943095,7.095909590959096,7.097509750975098,7.0991099109911,7.100710071007102,7.102310231023102,7.103910391039104,7.105510551055106,7.107110711071108,7.1087108710871085,7.110311031103111,7.111911191119113,7.113511351135115,7.115111511151115,7.116711671167117,7.118311831183119,7.119911991199121,7.121512151215121,7.123112311231123,7.1247124712471255,7.1263126312631275,7.127912791279128,7.12951295129513,7.131113111311132,7.132713271327134,7.134313431343134,7.135913591359136,7.137513751375138,7.13911391139114,7.140714071407141,7.142314231423143,7.143914391439145,7.145514551455147,7.147114711471147,7.148714871487149,7.150315031503151,7.151915191519153,7.1535153515351535,7.1551155115511555,7.156715671567158,7.15831583158316,7.15991599159916,7.161516151615162,7.163116311631164,7.164716471647166,7.166316631663166,7.167916791679168,7.1695169516951704,7.1711171117111725,7.172717271727173,7.174317431743175,7.175917591759177,7.177517751775177,7.179117911791179,7.180718071807181,7.182318231823183,7.183918391839184,7.185518551855186,7.187118711871188,7.18871887188719,7.19031903190319,7.191919191919192,7.193519351935194,7.195119511951196,7.196719671967196,7.1983198319831985,7.1999199919992005,7.201520152015203,7.203120312031203,7.204720472047205,7.206320632063207,7.207920792079209,7.209520952095209,7.211121112111211,7.212721272127213,7.214321432143215,7.215921592159216,7.217521752175218,7.21912191219122,7.220722072207222,7.222322232223222,7.223922392239224,7.225522552255226,7.227122712271228,7.2287228722872285,7.230323032303231,7.231923192319233,7.233523352335235,7.235123512351235,7.236723672367237,7.238323832383239,7.239923992399241,7.241524152415241,7.243124312431243,7.2447244724472455,7.2463246324632475,7.247924792479248,7.24952495249525,7.251125112511252,7.252725272527254,7.254325432543254,7.255925592559256,7.257525752575258,7.25912591259126,7.260726072607261,7.262326232623263,7.263926392639265,7.265526552655267,7.267126712671267,7.268726872687269,7.270327032703271,7.271927192719273,7.2735273527352735,7.275127512751276,7.276727672767278,7.27832783278328,7.27992799279928,7.281528152815282,7.283128312831284,7.284728472847286,7.286328632863286,7.287928792879288,7.2895289528952905,7.2911291129112925,7.292729272927293,7.294329432943295,7.295929592959297,7.297529752975297,7.299129912991299,7.300730073007301,7.302330233023303,7.303930393039304,7.305530553055306,7.307130713071308,7.30873087308731,7.31033103310331,7.311931193119312,7.313531353135314,7.315131513151316,7.316731673167316,7.3183318331833185,7.3199319931993205,7.321532153215323,7.323132313231323,7.324732473247325,7.326332633263327,7.327932793279329,7.329532953295329,7.331133113311331,7.332733273327333,7.334333433343335,7.335933593359336,7.337533753375338,7.33913391339134,7.340734073407342,7.342334233423342,7.343934393439344,7.345534553455346,7.347134713471348,7.3487348734873486,7.350335033503351,7.351935193519353,7.353535353535355,7.355135513551355,7.356735673567357,7.358335833583359,7.359935993599361,7.361536153615361,7.3631363136313634,7.3647364736473655,7.3663366336633676,7.367936793679368,7.36953695369537,7.371137113711372,7.372737273727374,7.374337433743374,7.375937593759376,7.377537753775378,7.37913791379138,7.380738073807381,7.382338233823383,7.383938393839385,7.385538553855387,7.387138713871387,7.388738873887389,7.390339033903391,7.391939193919393,7.3935393539353935,7.395139513951396,7.396739673967398,7.3983398339834,7.3999399939994,7.401540154015402,7.403140314031404,7.404740474047406,7.406340634063406,7.407940794079408,7.4095409540954105,7.4111411141114125,7.412741274127413,7.414341434143415,7.415941594159417,7.417541754175417,7.419141914191419,7.420742074207421,7.422342234223423,7.423942394239424,7.425542554255426,7.427142714271428,7.42874287428743,7.43034303430343,7.431943194319432,7.433543354335434,7.435143514351436,7.436743674367436,7.4383438343834385,7.4399439943994405,7.441544154415443,7.443144314431443,7.444744474447445,7.446344634463447,7.447944794479449,7.449544954495449,7.451145114511451,7.452745274527453,7.454345434543455,7.455945594559456,7.457545754575458,7.45914591459146,7.460746074607462,7.462346234623462,7.463946394639464,7.465546554655466,7.467146714671468,7.468746874687469,7.470347034703471,7.471947194719473,7.473547354735475,7.475147514751475,7.476747674767477,7.478347834783479,7.479947994799481,7.481548154815481,7.4831483148314835,7.4847484748474855,7.486348634863488,7.487948794879488,7.48954895489549,7.491149114911492,7.492749274927494,7.494349434943494,7.495949594959496,7.497549754975498,7.4991499149915,7.500750075007501,7.502350235023503,7.503950395039505,7.505550555055507,7.507150715071507,7.508750875087509,7.510351035103511,7.511951195119513,7.5135513551355135,7.515151515151516,7.516751675167518,7.51835183518352,7.51995199519952,7.521552155215522,7.523152315231524,7.524752475247526,7.526352635263526,7.527952795279528,7.5295529552955305,7.5311531153115325,7.532753275327533,7.534353435343535,7.535953595359537,7.537553755375537,7.539153915391539,7.540754075407541,7.542354235423543,7.543954395439544,7.545554555455546,7.547154715471548,7.54875487548755,7.55035503550355,7.551955195519552,7.553555355535554,7.555155515551556,7.5567556755675565,7.5583558355835585,7.5599559955995606,7.561556155615563,7.563156315631563,7.564756475647565,7.566356635663567,7.567956795679569,7.569556955695569,7.571157115711571,7.572757275727573,7.5743574357435755,7.575957595759576,7.577557755775578,7.57915791579158,7.580758075807582,7.582358235823582,7.583958395839584,7.585558555855586,7.587158715871588,7.588758875887589,7.590359035903591,7.591959195919593,7.593559355935595,7.595159515951595,7.596759675967597,7.598359835983599,7.599959995999601,7.601560156015601,7.6031603160316035,7.6047604760476055,7.606360636063608,7.607960796079608,7.60956095609561,7.611161116111612,7.612761276127614,7.614361436143614,7.615961596159616,7.617561756175618,7.61916191619162,7.620762076207621,7.622362236223623,7.623962396239625,7.625562556255627,7.627162716271627,7.628762876287629,7.630363036303631,7.631963196319633,7.6335633563356335,7.635163516351636,7.636763676367638,7.63836383638364,7.63996399639964,7.641564156415642,7.643164316431644,7.644764476447646,7.646364636463646,7.647964796479648,7.6495649564956505,7.6511651165116525,7.652765276527653,7.654365436543655,7.655965596559657,7.657565756575657,7.659165916591659,7.660766076607661,7.662366236623663,7.663966396639664,7.665566556655666,7.667166716671668,7.66876687668767,7.67036703670367,7.671967196719672,7.673567356735674,7.675167516751676,7.6767676767676765,7.6783678367836785,7.679967996799681,7.681568156815683,7.683168316831683,7.684768476847685,7.686368636863687,7.687968796879689,7.689568956895689,7.691169116911691,7.692769276927693,7.6943694369436955,7.695969596959696,7.697569756975698,7.6991699169917,7.700770077007702,7.702370237023702,7.703970397039704,7.705570557055706,7.707170717071708,7.708770877087709,7.710371037103711,7.711971197119713,7.713571357135715,7.715171517151715,7.716771677167717,7.718371837183719,7.719971997199721,7.721572157215721,7.7231723172317235,7.7247724772477255,7.726372637263728,7.727972797279728,7.72957295729573,7.731173117311732,7.732773277327734,7.734373437343734,7.735973597359736,7.737573757375738,7.73917391739174,7.740774077407741,7.742374237423743,7.743974397439745,7.745574557455747,7.747174717471747,7.748774877487749,7.750375037503751,7.751975197519753,7.7535753575357536,7.755175517551756,7.756775677567758,7.75837583758376,7.75997599759976,7.761576157615762,7.763176317631764,7.764776477647766,7.766376637663766,7.7679767976797685,7.7695769576957705,7.7711771177117726,7.772777277727773,7.774377437743775,7.775977597759777,7.777577757775779,7.779177917791779,7.780778077807781,7.782378237823783,7.783978397839784,7.785578557855786,7.787178717871788,7.78877887788779,7.79037903790379,7.791979197919792,7.793579357935794,7.795179517951796,7.7967796779677965,7.7983798379837985,7.799979997999801,7.801580158015803,7.803180318031803,7.804780478047805,7.806380638063807,7.807980798079809,7.809580958095809,7.811181118111811,7.812781278127813,7.8143814381438155,7.815981598159816,7.817581758175818,7.81918191819182,7.820782078207822,7.822382238223822,7.823982398239824,7.825582558255826,7.827182718271828,7.828782878287829,7.830383038303831,7.831983198319833,7.833583358335835,7.835183518351835,7.836783678367837,7.838383838383839,7.839983998399841,7.841584158415841,7.8431843184318435,7.8447844784478455,7.846384638463848,7.847984798479848,7.84958495849585,7.851185118511852,7.852785278527854,7.854385438543854,7.855985598559856,7.857585758575858,7.85918591859186,7.860786078607861,7.862386238623863,7.863986398639865,7.865586558655867,7.867186718671867,7.868786878687869,7.870387038703871,7.871987198719873,7.873587358735874,7.875187518751876,7.876787678767878,7.87838783878388,7.87998799879988,7.881588158815882,7.883188318831884,7.884788478847886,7.886388638863886,7.8879887988798885,7.8895889588958905,7.891189118911893,7.892789278927893,7.894389438943895,7.895989598959897,7.897589758975899,7.899189918991899,7.900790079007901,7.902390239023903,7.903990399039904,7.905590559055906,7.907190719071908,7.90879087908791,7.91039103910391,7.911991199119912,7.913591359135914,7.915191519151916,7.9167916791679165,7.9183918391839185,7.919991999199921,7.921592159215923,7.923192319231923,7.924792479247925,7.926392639263927,7.927992799279929,7.929592959295929,7.931193119311931,7.932793279327933,7.9343934393439355,7.935993599359936,7.937593759375938,7.93919391939194,7.940794079407942,7.942394239423942,7.943994399439944,7.945594559455946,7.947194719471948,7.948794879487949,7.950395039503951,7.951995199519953,7.953595359535955,7.955195519551955,7.956795679567957,7.958395839583959,7.959995999599961,7.9615961596159615,7.9631963196319635,7.9647964796479656,7.966396639663968,7.967996799679968,7.96959695969597,7.971197119711972,7.972797279727974,7.974397439743974,7.975997599759976,7.977597759775978,7.9791979197919805,7.980798079807981,7.982398239823983,7.983998399839985,7.985598559855987,7.987198719871987,7.988798879887989,7.990399039903991,7.991999199919993,7.993599359935994,7.995199519951996,7.996799679967998,7.998399839984,8]}),W8}var U8,Us;function Wd(){if(Us)return U8;Us=1;function t(e,n){let i=0,o=e.length-1,u=-1;for(;i<=o;){const a=Math.floor((i+o)/2);e[a]<n?(u=a,i=a+1):o=a-1}return u}return U8={binarySearch:t},U8}var q8,qs;function Ud(){if(qs)return q8;qs=1;const{X:t,Y:e}=Vd(),{binarySearch:n}=Wd();function i(o){if(o<=t[0])return e[0];if(t[t.lenght-1]<=o)return e[e.lenght-1];{const u=n(t,o);if(u==t.lenght-1)return e[e.lenght-1];{const a=u+1;return((o-t[u])*e[a]+(t[a]-o)*e[u])/(t[a]-t[u])}}}return q8={inverseNormalCDF:i},q8}var Y8,Ys;function vu(){if(Ys)return Y8;Ys=1;const{getRandomGenerator:t}=g3(),e=m3(),{inverseNormalCDF:n}=Ud();function i(o=0,u=1,a=null){if(typeof o!="number"||typeof u!="number")throw new Error("loc and scale must be numbers");if(u<=0)throw new Error("standard deviation must be a positive number");return e(()=>u*n(t()())+o,a)}return Y8=i,Y8}var K8,Ks;function qd(){if(Ks)return K8;Ks=1;const{getRandomGenerator:t}=g3(),e=m3();function n(i,o,u=null){if(o<=0)throw new Error("Scale parameter gamma must be greater than 0");return e(()=>i+o*Math.tan(Math.PI*(t()()-.5)),u)}return K8=n,K8}var X8,Xs;function Yd(){if(Xs)return X8;Xs=1;const{getRandomGenerator:t}=g3(),e=m3();function n(i,o=null){if(i<=0)throw new Error("Rate parameter lambda must be greater than 0");return e(()=>-Math.log(1-t()())/i,o)}return X8=n,X8}var Q8,Qs;function yu(){if(Qs)return Q8;Qs=1;const t=mu();function e(i,o,u){const a=i[o];i[o]=i[u],i[u]=a}function n(i){if(!Array.isArray(i))throw new Error("Input must be an array.");for(let o=i.length-1;o>0;o--){const u=t(o+1);e(i,o,u)}return i}return Q8=n,Q8}var Z8,Zs;function Kd(){if(Zs)return Z8;Zs=1;const t=yu();function e(n){if(typeof n=="number"){if(n<=0||!Number.isInteger(n))throw new Error("If x is a number, it must be a positive integer.");n=Array.from({length:n},(i,o)=>o)}else if(!Array.isArray(n))throw new Error("Input must be an array or a positive integer.");return t(n),n}return Z8=e,Z8}function v4(){return v4=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)({}).hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t},v4.apply(null,arguments)}var Du={relTol:1e-12,absTol:1e-15,matrix:"Matrix",number:"number",numberFallback:"number",precision:64,predictable:!1,randomSeed:null};function Xd(t,e){if(y4(t,e))return t[e];throw typeof t[e]=="function"&&Zd(t,e)?new Error('Cannot access method "'+e+'" as a property'):new Error('No access to property "'+e+'"')}function Qd(t,e,n){if(y4(t,e))return t[e]=n,n;throw new Error('No access to property "'+e+'"')}function y4(t,e){return!Gd(t)&&!Array.isArray(t)?!1:D6(Jd,e)?!0:!(e in Object.prototype||e in Function.prototype)}function Zd(t,e){return t==null||typeof t[e]!="function"||D6(t,e)&&Object.getPrototypeOf&&e in Object.getPrototypeOf(t)?!1:D6(ep,e)?!0:!(e in Object.prototype||e in Function.prototype)}function Gd(t){return typeof t=="object"&&t&&t.constructor===Object}var Jd={length:!0,name:!0},ep={toString:!0,valueOf:!0,toLocaleString:!0};class tp{constructor(e){this.wrappedObject=e,this[Symbol.iterator]=this.entries}keys(){return Object.keys(this.wrappedObject).filter(e=>this.has(e)).values()}get(e){return Xd(this.wrappedObject,e)}set(e,n){return Qd(this.wrappedObject,e,n),this}has(e){return y4(this.wrappedObject,e)&&e in this.wrappedObject}entries(){return np(this.keys(),e=>[e,this.get(e)])}forEach(e){for(var n of this.keys())e(this.get(n),n,this)}delete(e){y4(this.wrappedObject,e)&&delete this.wrappedObject[e]}clear(){for(var e of this.keys())this.delete(e)}get size(){return Object.keys(this.wrappedObject).length}}function np(t,e){return{next:()=>{var n=t.next();return n.done?n:{value:e(n.value),done:!1}}}}function J9(t){return typeof t=="number"}function T0(t){return!t||typeof t!="object"||typeof t.constructor!="function"?!1:t.isBigNumber===!0&&typeof t.constructor.prototype=="object"&&t.constructor.prototype.isBigNumber===!0||typeof t.constructor.isDecimal=="function"&&t.constructor.isDecimal(t)===!0}function rp(t){return typeof t=="bigint"}function wu(t){return t&&typeof t=="object"&&Object.getPrototypeOf(t).isComplex===!0||!1}function _u(t){return t&&typeof t=="object"&&Object.getPrototypeOf(t).isFraction===!0||!1}function xu(t){return t&&t.constructor.prototype.isUnit===!0||!1}function y5(t){return typeof t=="string"}var m0=Array.isArray;function $0(t){return t&&t.constructor.prototype.isMatrix===!0||!1}function D4(t){return Array.isArray(t)||$0(t)}function ip(t){return t&&t.isDenseMatrix&&t.constructor.prototype.isMatrix===!0||!1}function sp(t){return t&&t.isSparseMatrix&&t.constructor.prototype.isMatrix===!0||!1}function op(t){return t&&t.constructor.prototype.isRange===!0||!1}function Rt(t){return t&&t.constructor.prototype.isIndex===!0||!1}function up(t){return typeof t=="boolean"}function ap(t){return t&&t.constructor.prototype.isResultSet===!0||!1}function lp(t){return t&&t.constructor.prototype.isHelp===!0||!1}function cp(t){return typeof t=="function"}function fp(t){return t instanceof Date}function hp(t){return t instanceof RegExp}function Lt(t){return!!(t&&typeof t=="object"&&t.constructor===Object&&!wu(t)&&!_u(t))}function dp(t){return t?t instanceof Map||t instanceof tp||typeof t.set=="function"&&typeof t.get=="function"&&typeof t.keys=="function"&&typeof t.has=="function":!1}function pp(t){return t===null}function gp(t){return t===void 0}function mp(t){return t&&t.isAccessorNode===!0&&t.constructor.prototype.isNode===!0||!1}function vp(t){return t&&t.isArrayNode===!0&&t.constructor.prototype.isNode===!0||!1}function yp(t){return t&&t.isAssignmentNode===!0&&t.constructor.prototype.isNode===!0||!1}function Dp(t){return t&&t.isBlockNode===!0&&t.constructor.prototype.isNode===!0||!1}function wp(t){return t&&t.isConditionalNode===!0&&t.constructor.prototype.isNode===!0||!1}function _p(t){return t&&t.isConstantNode===!0&&t.constructor.prototype.isNode===!0||!1}function xp(t){return t&&t.isFunctionAssignmentNode===!0&&t.constructor.prototype.isNode===!0||!1}function Ep(t){return t&&t.isFunctionNode===!0&&t.constructor.prototype.isNode===!0||!1}function Cp(t){return t&&t.isIndexNode===!0&&t.constructor.prototype.isNode===!0||!1}function Fp(t){return t&&t.isNode===!0&&t.constructor.prototype.isNode===!0||!1}function Sp(t){return t&&t.isObjectNode===!0&&t.constructor.prototype.isNode===!0||!1}function Ap(t){return t&&t.isOperatorNode===!0&&t.constructor.prototype.isNode===!0||!1}function bp(t){return t&&t.isParenthesisNode===!0&&t.constructor.prototype.isNode===!0||!1}function Mp(t){return t&&t.isRangeNode===!0&&t.constructor.prototype.isNode===!0||!1}function kp(t){return t&&t.isRelationalNode===!0&&t.constructor.prototype.isNode===!0||!1}function Bp(t){return t&&t.isSymbolNode===!0&&t.constructor.prototype.isNode===!0||!1}function Np(t){return t&&t.constructor.prototype.isChain===!0||!1}function A2(t){var e=typeof t;return e==="object"?t===null?"null":T0(t)?"BigNumber":t.constructor&&t.constructor.name?t.constructor.name:"Object":e}function b0(t){var e=typeof t;if(e==="number"||e==="bigint"||e==="string"||e==="boolean"||t===null||t===void 0)return t;if(typeof t.clone=="function")return t.clone();if(Array.isArray(t))return t.map(function(n){return b0(n)});if(t instanceof Date)return new Date(t.valueOf());if(T0(t))return t;if(Lt(t))return Tp(t,b0);if(e==="function")return t;throw new TypeError("Cannot clone: unknown type of value (value: ".concat(t,")"))}function Tp(t,e){var n={};for(var i in t)D6(t,i)&&(n[i]=e(t[i]));return n}function Pp(t,e){for(var n in e)D6(e,n)&&(t[n]=e[n]);return t}function G5(t,e){var n,i,o;if(Array.isArray(t)){if(!Array.isArray(e)||t.length!==e.length)return!1;for(i=0,o=t.length;i<o;i++)if(!G5(t[i],e[i]))return!1;return!0}else{if(typeof t=="function")return t===e;if(t instanceof Object){if(Array.isArray(e)||!(e instanceof Object))return!1;for(n in t)if(!(n in e)||!G5(t[n],e[n]))return!1;for(n in e)if(!(n in t))return!1;return!0}else return t===e}}function D6(t,e){return t&&Object.hasOwnProperty.call(t,e)}function Op(t,e){for(var n={},i=0;i<e.length;i++){var o=e[i],u=t[o];u!==void 0&&(n[o]=u)}return n}var zp=["Matrix","Array"],Ip=["number","BigNumber","Fraction"],k4=function(e){if(e)throw new Error(`The global config is readonly. 
Please create a mathjs instance if you want to change the default configuration. 
Example:

  import { create, all } from 'mathjs';
  const mathjs = create(all);
  mathjs.config({ number: 'BigNumber' });
`);return Object.freeze(Du)};v4(k4,Du,{MATRIX_OPTIONS:zp,NUMBER_OPTIONS:Ip});function Gs(){return!0}function E1(){return!1}function n3(){}const Js="Argument is not a typed-function.";function Eu(){function t(b){return typeof b=="object"&&b!==null&&b.constructor===Object}const e=[{name:"number",test:function(b){return typeof b=="number"}},{name:"string",test:function(b){return typeof b=="string"}},{name:"boolean",test:function(b){return typeof b=="boolean"}},{name:"Function",test:function(b){return typeof b=="function"}},{name:"Array",test:Array.isArray},{name:"Date",test:function(b){return b instanceof Date}},{name:"RegExp",test:function(b){return b instanceof RegExp}},{name:"Object",test:t},{name:"null",test:function(b){return b===null}},{name:"undefined",test:function(b){return b===void 0}}],n={name:"any",test:Gs,isAny:!0};let i,o,u=0,a={createCount:0};function c(b){const R=i.get(b);if(R)return R;let V='Unknown type "'+b+'"';const Q=b.toLowerCase();let n9;for(n9 of o)if(n9.toLowerCase()===Q){V+='. Did you mean "'+n9+'" ?';break}throw new TypeError(V)}function h(b){let R=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"any";const V=R?c(R).index:o.length,Q=[];for(let J=0;J<b.length;++J){if(!b[J]||typeof b[J].name!="string"||typeof b[J].test!="function")throw new TypeError("Object with properties {name: string, test: function} expected");const p9=b[J].name;if(i.has(p9))throw new TypeError('Duplicate type name "'+p9+'"');Q.push(p9),i.set(p9,{name:p9,test:b[J].test,isAny:b[J].isAny,index:V+J,conversionsTo:[]})}const n9=o.slice(V);o=o.slice(0,V).concat(Q).concat(n9);for(let J=V+Q.length;J<o.length;++J)i.get(o[J]).index=J}function d(){i=new Map,o=[],u=0,h([n],!1)}d(),h(e);function p(){let b;for(b of o)i.get(b).conversionsTo=[];u=0}function m(b){const R=o.filter(V=>{const Q=i.get(V);return!Q.isAny&&Q.test(b)});return R.length?R:["any"]}function D(b){return b&&typeof b=="function"&&"_typedFunctionData"in b}function w(b,R,V){if(!D(b))throw new TypeError(Js);const Q=V&&V.exact,n9=Array.isArray(R)?R.join(","):R,J=B(n9),p9=x(J);if(!Q||p9 in b.signatures){const W9=b._typedFunctionData.signatureMap.get(p9);if(W9)return W9}const u9=J.length;let h9;if(Q){h9=[];let W9;for(W9 in b.signatures)h9.push(b._typedFunctionData.signatureMap.get(W9))}else h9=b._typedFunctionData.signatures;for(let W9=0;W9<u9;++W9){const U9=J[W9],l0=[];let x0;for(x0 of h9){const v0=T(x0.params,W9);if(!(!v0||U9.restParam&&!v0.restParam)){if(!v0.hasAny){const Y0=A(v0);if(U9.types.some(K0=>!Y0.has(K0.name)))continue}l0.push(x0)}}if(h9=l0,h9.length===0)break}let a9;for(a9 of h9)if(a9.params.length<=u9)return a9;throw new TypeError("Signature not found (signature: "+(b.name||"unnamed")+"("+x(J,", ")+"))")}function E(b,R,V){return w(b,R,V).implementation}function y(b,R){const V=c(R);if(V.test(b))return b;const Q=V.conversionsTo;if(Q.length===0)throw new Error("There are no conversions to "+R+" defined.");for(let n9=0;n9<Q.length;n9++)if(c(Q[n9].from).test(b))return Q[n9].convert(b);throw new Error("Cannot convert "+b+" to "+R)}function x(b){let R=arguments.length>1&&arguments[1]!==void 0?arguments[1]:",";return b.map(V=>V.name).join(R)}function C(b){const R=b.indexOf("...")===0,Q=(R?b.length>3?b.slice(3):"any":b).split("|").map(u9=>c(u9.trim()));let n9=!1,J=R?"...":"";return{types:Q.map(function(u9){return n9=u9.isAny||n9,J+=u9.name+"|",{name:u9.name,typeIndex:u9.index,test:u9.test,isAny:u9.isAny,conversion:null,conversionIndex:-1}}),name:J.slice(0,-1),hasAny:n9,hasConversion:!1,restParam:R}}function k(b){const R=b.types.map(p9=>p9.name),V=l9(R);let Q=b.hasAny,n9=b.name;const J=V.map(function(p9){const u9=c(p9.from);return Q=u9.isAny||Q,n9+="|"+p9.from,{name:p9.from,typeIndex:u9.index,test:u9.test,isAny:u9.isAny,conversion:p9,conversionIndex:p9.index}});return{types:b.types.concat(J),name:n9,hasAny:Q,hasConversion:J.length>0,restParam:b.restParam}}function A(b){return b.typeSet||(b.typeSet=new Set,b.types.forEach(R=>b.typeSet.add(R.name))),b.typeSet}function B(b){const R=[];if(typeof b!="string")throw new TypeError("Signatures must be strings");const V=b.trim();if(V==="")return R;const Q=V.split(",");for(let n9=0;n9<Q.length;++n9){const J=C(Q[n9].trim());if(J.restParam&&n9!==Q.length-1)throw new SyntaxError('Unexpected rest parameter "'+Q[n9]+'": only allowed for the last parameter');if(J.types.length===0)return null;R.push(J)}return R}function F(b){const R=b9(b);return R?R.restParam:!1}function S(b){if(!b||b.types.length===0)return Gs;if(b.types.length===1)return c(b.types[0].name).test;if(b.types.length===2){const R=c(b.types[0].name).test,V=c(b.types[1].name).test;return function(n9){return R(n9)||V(n9)}}else{const R=b.types.map(function(V){return c(V.name).test});return function(Q){for(let n9=0;n9<R.length;n9++)if(R[n9](Q))return!0;return!1}}}function P(b){let R,V,Q;if(F(b)){R=O9(b).map(S);const n9=R.length,J=S(b9(b)),p9=function(u9){for(let h9=n9;h9<u9.length;h9++)if(!J(u9[h9]))return!1;return!0};return function(h9){for(let a9=0;a9<R.length;a9++)if(!R[a9](h9[a9]))return!1;return p9(h9)&&h9.length>=n9+1}}else return b.length===0?function(J){return J.length===0}:b.length===1?(V=S(b[0]),function(J){return V(J[0])&&J.length===1}):b.length===2?(V=S(b[0]),Q=S(b[1]),function(J){return V(J[0])&&Q(J[1])&&J.length===2}):(R=b.map(S),function(J){for(let p9=0;p9<R.length;p9++)if(!R[p9](J[p9]))return!1;return J.length===R.length})}function T(b,R){return R<b.length?b[R]:F(b)?b9(b):null}function I(b,R){const V=T(b,R);return V?A(V):new Set}function H(b){return b.conversion===null||b.conversion===void 0}function W(b,R){const V=new Set;return b.forEach(Q=>{const n9=I(Q.params,R);let J;for(J of n9)V.add(J)}),V.has("any")?["any"]:Array.from(V)}function Z(b,R,V){let Q,n9;const J=b||"unnamed";let p9=V,u9;for(u9=0;u9<R.length;u9++){const U9=[];if(p9.forEach(l0=>{const x0=T(l0.params,u9),v0=S(x0);(u9<l0.params.length||F(l0.params))&&v0(R[u9])&&U9.push(l0)}),U9.length===0){if(n9=W(p9,u9),n9.length>0){const l0=m(R[u9]);return Q=new TypeError("Unexpected type of argument in function "+J+" (expected: "+n9.join(" or ")+", actual: "+l0.join(" | ")+", index: "+u9+")"),Q.data={category:"wrongType",fn:J,index:u9,actual:l0,expected:n9},Q}}else p9=U9}const h9=p9.map(function(U9){return F(U9.params)?1/0:U9.params.length});if(R.length<Math.min.apply(null,h9))return n9=W(p9,u9),Q=new TypeError("Too few arguments in function "+J+" (expected: "+n9.join(" or ")+", index: "+R.length+")"),Q.data={category:"tooFewArgs",fn:J,index:R.length,expected:n9},Q;const a9=Math.max.apply(null,h9);if(R.length>a9)return Q=new TypeError("Too many arguments in function "+J+" (expected: "+a9+", actual: "+R.length+")"),Q.data={category:"tooManyArgs",fn:J,index:R.length,expectedLength:a9},Q;const W9=[];for(let U9=0;U9<R.length;++U9)W9.push(m(R[U9]).join("|"));return Q=new TypeError('Arguments of type "'+W9.join(", ")+'" do not match any of the defined signatures of function '+J+"."),Q.data={category:"mismatch",actual:W9},Q}function f9(b){let R=o.length+1;for(let V=0;V<b.types.length;V++)H(b.types[V])&&(R=Math.min(R,b.types[V].typeIndex));return R}function o9(b){let R=u+1;for(let V=0;V<b.types.length;V++)H(b.types[V])||(R=Math.min(R,b.types[V].conversionIndex));return R}function t9(b,R){if(b.hasAny){if(!R.hasAny)return 1}else if(R.hasAny)return-1;if(b.restParam){if(!R.restParam)return 1}else if(R.restParam)return-1;if(b.hasConversion){if(!R.hasConversion)return 1}else if(R.hasConversion)return-1;const V=f9(b)-f9(R);if(V<0)return-1;if(V>0)return 1;const Q=o9(b)-o9(R);return Q<0?-1:Q>0?1:0}function q(b,R){const V=b.params,Q=R.params,n9=b9(V),J=b9(Q),p9=F(V),u9=F(Q);if(p9&&n9.hasAny){if(!u9||!J.hasAny)return 1}else if(u9&&J.hasAny)return-1;let h9=0,a9=0,W9;for(W9 of V)W9.hasAny&&++h9,W9.hasConversion&&++a9;let U9=0,l0=0;for(W9 of Q)W9.hasAny&&++U9,W9.hasConversion&&++l0;if(h9!==U9)return h9-U9;if(p9&&n9.hasConversion){if(!u9||!J.hasConversion)return 1}else if(u9&&J.hasConversion)return-1;if(a9!==l0)return a9-l0;if(p9){if(!u9)return 1}else if(u9)return-1;const x0=(V.length-Q.length)*(p9?-1:1);if(x0!==0)return x0;const v0=[];let Y0=0;for(let U1=0;U1<V.length;++U1){const k1=t9(V[U1],Q[U1]);v0.push(k1),Y0+=k1}if(Y0!==0)return Y0;let K0;for(K0 of v0)if(K0!==0)return K0;return 0}function l9(b){if(b.length===0)return[];const R=b.map(c);b.length>1&&R.sort((n9,J)=>n9.index-J.index);let V=R[0].conversionsTo;if(b.length===1)return V;V=V.concat([]);const Q=new Set(b);for(let n9=1;n9<R.length;++n9){let J;for(J of R[n9].conversionsTo)Q.has(J.from)||(V.push(J),Q.add(J.from))}return V}function Y(b,R){let V=R;if(b.some(n9=>n9.hasConversion)){const n9=F(b),J=b.map(G);V=function(){const u9=[],h9=n9?arguments.length-1:arguments.length;for(let a9=0;a9<h9;a9++)u9[a9]=J[a9](arguments[a9]);return n9&&(u9[h9]=arguments[h9].map(J[h9])),R.apply(this,u9)}}let Q=V;if(F(b)){const n9=b.length-1;Q=function(){return V.apply(this,z9(arguments,0,n9).concat([z9(arguments,n9)]))}}return Q}function G(b){let R,V,Q,n9;const J=[],p9=[];switch(b.types.forEach(function(u9){u9.conversion&&(J.push(c(u9.conversion.from).test),p9.push(u9.conversion.convert))}),p9.length){case 0:return function(h9){return h9};case 1:return R=J[0],Q=p9[0],function(h9){return R(h9)?Q(h9):h9};case 2:return R=J[0],V=J[1],Q=p9[0],n9=p9[1],function(h9){return R(h9)?Q(h9):V(h9)?n9(h9):h9};default:return function(h9){for(let a9=0;a9<p9.length;a9++)if(J[a9](h9))return p9[a9](h9);return h9}}}function X(b){function R(V,Q,n9){if(Q<V.length){const J=V[Q];let p9=[];if(J.restParam){const u9=J.types.filter(H);u9.length<J.types.length&&p9.push({types:u9,name:"..."+u9.map(h9=>h9.name).join("|"),hasAny:u9.some(h9=>h9.isAny),hasConversion:!1,restParam:!0}),p9.push(J)}else p9=J.types.map(function(u9){return{types:[u9],name:u9.name,hasAny:u9.isAny,hasConversion:u9.conversion,restParam:!1}});return p0(p9,function(u9){return R(V,Q+1,n9.concat([u9]))})}else return[n9]}return R(b,0,[])}function O(b,R){const V=Math.max(b.length,R.length);for(let u9=0;u9<V;u9++){const h9=I(b,u9),a9=I(R,u9);let W9=!1,U9;for(U9 of a9)if(h9.has(U9)){W9=!0;break}if(!W9)return!1}const Q=b.length,n9=R.length,J=F(b),p9=F(R);return J?p9?Q===n9:n9>=Q:p9?Q>=n9:Q===n9}function U(b){return b.map(R=>c1(R)?q0(R.referToSelf.callback):g1(R)?a0(R.referTo.references,R.referTo.callback):R)}function g9(b,R,V){const Q=[];let n9;for(n9 of b){let J=V[n9];if(typeof J!="number")throw new TypeError('No definition for referenced signature "'+n9+'"');if(J=R[J],typeof J!="function")return!1;Q.push(J)}return Q}function v9(b,R,V){const Q=U(b),n9=new Array(Q.length).fill(!1);let J=!0;for(;J;){J=!1;let p9=!0;for(let u9=0;u9<Q.length;++u9){if(n9[u9])continue;const h9=Q[u9];if(c1(h9))Q[u9]=h9.referToSelf.callback(V),Q[u9].referToSelf=h9.referToSelf,n9[u9]=!0,p9=!1;else if(g1(h9)){const a9=g9(h9.referTo.references,Q,R);a9?(Q[u9]=h9.referTo.callback.apply(this,a9),Q[u9].referTo=h9.referTo,n9[u9]=!0,p9=!1):J=!0}}if(p9&&J)throw new SyntaxError("Circular reference detected in resolving typed.referTo")}return Q}function E9(b){const R=/\bthis(\(|\.signatures\b)/;Object.keys(b).forEach(V=>{const Q=b[V];if(R.test(Q.toString()))throw new SyntaxError("Using `this` to self-reference a function is deprecated since typed-function@3. Use typed.referTo and typed.referToSelf instead.")})}function _9(b,R){if(a.createCount++,Object.keys(R).length===0)throw new SyntaxError("No signatures provided");a.warnAgainstDeprecatedThis&&E9(R);const V=[],Q=[],n9={},J=[];let p9;for(p9 in R){if(!Object.prototype.hasOwnProperty.call(R,p9))continue;const B9=B(p9);if(!B9)continue;V.forEach(function(q1){if(O(q1,B9))throw new TypeError('Conflicting signatures "'+x(q1)+'" and "'+x(B9)+'".')}),V.push(B9);const O0=Q.length;Q.push(R[p9]);const w3=B9.map(k);let s2;for(s2 of X(w3)){const q1=x(s2);J.push({params:s2,name:q1,fn:O0}),s2.every(V4=>!V4.hasConversion)&&(n9[q1]=O0)}}J.sort(q);const u9=v9(Q,n9,i2);let h9;for(h9 in n9)Object.prototype.hasOwnProperty.call(n9,h9)&&(n9[h9]=u9[n9[h9]]);const a9=[],W9=new Map;for(h9 of J)W9.has(h9.name)||(h9.fn=u9[h9.fn],a9.push(h9),W9.set(h9.name,h9));const U9=a9[0]&&a9[0].params.length<=2&&!F(a9[0].params),l0=a9[1]&&a9[1].params.length<=2&&!F(a9[1].params),x0=a9[2]&&a9[2].params.length<=2&&!F(a9[2].params),v0=a9[3]&&a9[3].params.length<=2&&!F(a9[3].params),Y0=a9[4]&&a9[4].params.length<=2&&!F(a9[4].params),K0=a9[5]&&a9[5].params.length<=2&&!F(a9[5].params),U1=U9&&l0&&x0&&v0&&Y0&&K0;for(let B9=0;B9<a9.length;++B9)a9[B9].test=P(a9[B9].params);const k1=U9?S(a9[0].params[0]):E1,_5=l0?S(a9[1].params[0]):E1,C6=x0?S(a9[2].params[0]):E1,F6=v0?S(a9[3].params[0]):E1,S6=Y0?S(a9[4].params[0]):E1,A6=K0?S(a9[5].params[0]):E1,b6=U9?S(a9[0].params[1]):E1,v3=l0?S(a9[1].params[1]):E1,M6=x0?S(a9[2].params[1]):E1,t2=v0?S(a9[3].params[1]):E1,y3=Y0?S(a9[4].params[1]):E1,n2=K0?S(a9[5].params[1]):E1;for(let B9=0;B9<a9.length;++B9)a9[B9].implementation=Y(a9[B9].params,a9[B9].fn);const I4=U9?a9[0].implementation:n3,r2=l0?a9[1].implementation:n3,B2=x0?a9[2].implementation:n3,N2=v0?a9[3].implementation:n3,D3=Y0?a9[4].implementation:n3,R4=K0?a9[5].implementation:n3,L4=U9?a9[0].params.length:-1,j4=l0?a9[1].params.length:-1,i5=x0?a9[2].params.length:-1,k6=v0?a9[3].params.length:-1,B6=Y0?a9[4].params.length:-1,H4=K0?a9[5].params.length:-1,N6=U1?6:0,T6=a9.length,P6=a9.map(B9=>B9.test),O6=a9.map(B9=>B9.implementation),$4=function(){for(let O0=N6;O0<T6;O0++)if(P6[O0](arguments))return O6[O0].apply(this,arguments);return a.onMismatch(b,arguments,a9)};function i2(B9,O0){return arguments.length===L4&&k1(B9)&&b6(O0)?I4.apply(this,arguments):arguments.length===j4&&_5(B9)&&v3(O0)?r2.apply(this,arguments):arguments.length===i5&&C6(B9)&&M6(O0)?B2.apply(this,arguments):arguments.length===k6&&F6(B9)&&t2(O0)?N2.apply(this,arguments):arguments.length===B6&&S6(B9)&&y3(O0)?D3.apply(this,arguments):arguments.length===H4&&A6(B9)&&n2(O0)?R4.apply(this,arguments):$4.apply(this,arguments)}try{Object.defineProperty(i2,"name",{value:b})}catch{}return i2.signatures=n9,i2._typedFunctionData={signatures:a9,signatureMap:W9},i2}function A9(b,R,V){throw Z(b,R,V)}function O9(b){return z9(b,0,b.length-1)}function b9(b){return b[b.length-1]}function z9(b,R,V){return Array.prototype.slice.call(b,R,V)}function k0(b,R){for(let V=0;V<b.length;V++)if(R(b[V]))return b[V]}function p0(b,R){return Array.prototype.concat.apply([],b.map(R))}function H9(){const b=O9(arguments).map(V=>x(B(V))),R=b9(arguments);if(typeof R!="function")throw new TypeError("Callback function expected as last argument");return a0(b,R)}function a0(b,R){return{referTo:{references:b,callback:R}}}function q0(b){if(typeof b!="function")throw new TypeError("Callback function expected as first argument");return{referToSelf:{callback:b}}}function g1(b){return b&&typeof b.referTo=="object"&&Array.isArray(b.referTo.references)&&typeof b.referTo.callback=="function"}function c1(b){return b&&typeof b.referToSelf=="object"&&typeof b.referToSelf.callback=="function"}function n5(b,R){if(!b)return R;if(R&&R!==b){const V=new Error("Function names do not match (expected: "+b+", actual: "+R+")");throw V.data={actual:R,expected:b},V}return b}function W1(b){let R;for(const V in b)Object.prototype.hasOwnProperty.call(b,V)&&(D(b[V])||typeof b[V].signature=="string")&&(R=n5(R,b[V].name));return R}function r5(b,R){let V;for(V in R)if(Object.prototype.hasOwnProperty.call(R,V)){if(V in b&&R[V]!==b[V]){const Q=new Error('Signature "'+V+'" is defined twice');throw Q.data={signature:V,sourceFunction:R[V],destFunction:b[V]},Q}b[V]=R[V]}}const w5=a;a=function(b){const R=typeof b=="string",V=R?1:0;let Q=R?b:"";const n9={};for(let J=V;J<arguments.length;++J){const p9=arguments[J];let u9={},h9;if(typeof p9=="function"?(h9=p9.name,typeof p9.signature=="string"?u9[p9.signature]=p9:D(p9)&&(u9=p9.signatures)):t(p9)&&(u9=p9,R||(h9=W1(p9))),Object.keys(u9).length===0){const a9=new TypeError("Argument to 'typed' at index "+J+" is not a (typed) function, nor an object with signatures as keys and functions as values.");throw a9.data={index:J,argument:p9},a9}R||(Q=n5(Q,h9)),r5(n9,u9)}return _9(Q||"",n9)},a.create=Eu,a.createCount=w5.createCount,a.onMismatch=A9,a.throwMismatchError=A9,a.createError=Z,a.clear=d,a.clearConversions=p,a.addTypes=h,a._findType=c,a.referTo=H9,a.referToSelf=q0,a.convert=y,a.findSignature=w,a.find=E,a.isTypedFunction=D,a.warnAgainstDeprecatedThis=!0,a.addType=function(b,R){let V="any";R!==!1&&i.has("Object")&&(V="Object"),a.addTypes([b],V)};function k2(b){if(!b||typeof b.from!="string"||typeof b.to!="string"||typeof b.convert!="function")throw new TypeError("Object with properties {from: string, to: string, convert: function} expected");if(b.to===b.from)throw new SyntaxError('Illegal to define conversion from "'+b.from+'" to itself.')}return a.addConversion=function(b){let R=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{override:!1};k2(b);const V=c(b.to),Q=V.conversionsTo.find(n9=>n9.from===b.from);if(Q)if(R&&R.override)a.removeConversion({from:Q.from,to:b.to,convert:Q.convert});else throw new Error('There is already a conversion from "'+b.from+'" to "'+V.name+'"');V.conversionsTo.push({from:b.from,convert:b.convert,index:u++})},a.addConversions=function(b,R){b.forEach(V=>a.addConversion(V,R))},a.removeConversion=function(b){k2(b);const R=c(b.to),V=k0(R.conversionsTo,n9=>n9.from===b.from);if(!V)throw new Error("Attempt to remove nonexistent conversion from "+b.from+" to "+b.to);if(V.convert!==b.convert)throw new Error("Conversion to remove does not match existing conversion");const Q=R.conversionsTo.indexOf(V);R.conversionsTo.splice(Q,1)},a.resolve=function(b,R){if(!D(b))throw new TypeError(Js);const V=b._typedFunctionData.signatures;for(let Q=0;Q<V.length;++Q)if(V[Q].test(R))return V[Q];return null},a}const w4=Eu();function Z9(t,e,n,i){function o(u){var a=Op(u,e.map(jp));return Rp(t,e,u),n(a)}return o.isFactory=!0,o.fn=t,o.dependencies=e.slice().sort(),i&&(o.meta=i),o}function Rp(t,e,n){var i=e.filter(u=>!Lp(u)).every(u=>n[u]!==void 0);if(!i){var o=e.filter(u=>n[u]===void 0);throw new Error('Cannot create function "'.concat(t,'", ')+"some dependencies are missing: ".concat(o.map(u=>'"'.concat(u,'"')).join(", "),"."))}}function Lp(t){return t&&t[0]==="?"}function jp(t){return t&&t[0]==="?"?t.slice(1):t}function M0(t){return typeof t=="boolean"?!0:isFinite(t)?t===Math.round(t):!1}function G8(t,e,n){var i={2:"0b",8:"0o",16:"0x"},o=i[e],u="";if(n){if(n<1)throw new Error("size must be in greater than 0");if(!M0(n))throw new Error("size must be an integer");if(t>2**(n-1)-1||t<-(2**(n-1)))throw new Error("Value must be in range [-2^".concat(n-1,", 2^").concat(n-1,"-1]"));if(!M0(t))throw new Error("Value must be an integer");t<0&&(t=t+2**n),u="i".concat(n)}var a="";return t<0&&(t=-t,a="-"),"".concat(a).concat(o).concat(t.toString(e)).concat(u)}function dt(t,e){if(typeof e=="function")return e(t);if(t===1/0)return"Infinity";if(t===-1/0)return"-Infinity";if(isNaN(t))return"NaN";var{notation:n,precision:i,wordSize:o}=Cu(e);switch(n){case"fixed":return $p(t,i);case"exponential":return Fu(t,i);case"engineering":return Hp(t,i);case"bin":return G8(t,2,o);case"oct":return G8(t,8,o);case"hex":return G8(t,16,o);case"auto":return Vp(t,i,e).replace(/((\.\d*?)(0+))($|e)/,function(){var u=arguments[2],a=arguments[4];return u!=="."?u+a:a});default:throw new Error('Unknown notation "'+n+'". Choose "auto", "exponential", "fixed", "bin", "oct", or "hex.')}}function Cu(t){var e="auto",n,i;if(t!==void 0)if(J9(t))n=t;else if(T0(t))n=t.toNumber();else if(Lt(t))t.precision!==void 0&&(n=eo(t.precision,()=>{throw new Error('Option "precision" must be a number or BigNumber')})),t.wordSize!==void 0&&(i=eo(t.wordSize,()=>{throw new Error('Option "wordSize" must be a number or BigNumber')})),t.notation&&(e=t.notation);else throw new Error("Unsupported type of options, number, BigNumber, or object expected");return{notation:e,precision:n,wordSize:i}}function B4(t){var e=String(t).toLowerCase().match(/^(-?)(\d+\.?\d*)(e([+-]?\d+))?$/);if(!e)throw new SyntaxError("Invalid number "+t);var n=e[1],i=e[2],o=parseFloat(e[4]||"0"),u=i.indexOf(".");o+=u!==-1?u-1:i.length-1;var a=i.replace(".","").replace(/^0*/,function(c){return o-=c.length,""}).replace(/0*$/,"").split("").map(function(c){return parseInt(c)});return a.length===0&&(a.push(0),o++),{sign:n,coefficients:a,exponent:o}}function Hp(t,e){if(isNaN(t)||!isFinite(t))return String(t);var n=B4(t),i=N4(n,e),o=i.exponent,u=i.coefficients,a=o%3===0?o:o<0?o-3-o%3:o-o%3;if(J9(e))for(;e>u.length||o-a+1>u.length;)u.push(0);else for(var c=Math.abs(o-a)-(u.length-1),h=0;h<c;h++)u.push(0);for(var d=Math.abs(o-a),p=1;d>0;)p++,d--;var m=u.slice(p).join(""),D=J9(e)&&m.length||m.match(/[1-9]/)?"."+m:"",w=u.slice(0,p).join("")+D+"e"+(o>=0?"+":"")+a.toString();return i.sign+w}function $p(t,e){if(isNaN(t)||!isFinite(t))return String(t);var n=B4(t),i=typeof e=="number"?N4(n,n.exponent+1+e):n,o=i.coefficients,u=i.exponent+1,a=u+(e||0);return o.length<a&&(o=o.concat(a3(a-o.length))),u<0&&(o=a3(-u+1).concat(o),u=1),u<o.length&&o.splice(u,0,u===0?"0.":"."),i.sign+o.join("")}function Fu(t,e){if(isNaN(t)||!isFinite(t))return String(t);var n=B4(t),i=e?N4(n,e):n,o=i.coefficients,u=i.exponent;o.length<e&&(o=o.concat(a3(e-o.length)));var a=o.shift();return i.sign+a+(o.length>0?"."+o.join(""):"")+"e"+(u>=0?"+":"")+u}function Vp(t,e,n){if(isNaN(t)||!isFinite(t))return String(t);var i=to(n==null?void 0:n.lowerExp,-3),o=to(n==null?void 0:n.upperExp,5),u=B4(t),a=e?N4(u,e):u;if(a.exponent<i||a.exponent>=o)return Fu(t,e);var c=a.coefficients,h=a.exponent;c.length<e&&(c=c.concat(a3(e-c.length))),c=c.concat(a3(h-c.length+1+(c.length<e?e-c.length:0))),c=a3(-h).concat(c);var d=h>0?h:0;return d<c.length-1&&c.splice(d+1,0,"."),a.sign+c.join("")}function N4(t,e){for(var n={sign:t.sign,coefficients:t.coefficients,exponent:t.exponent},i=n.coefficients;e<=0;)i.unshift(0),n.exponent++,e++;if(i.length>e){var o=i.splice(e,i.length-e);if(o[0]>=5){var u=e-1;for(i[u]++;i[u]===10;)i.pop(),u===0&&(i.unshift(0),n.exponent++,u++),u--,i[u]++}}return n}function a3(t){for(var e=[],n=0;n<t;n++)e.push(0);return e}function Wp(t){return t.toExponential().replace(/e.*$/,"").replace(/^0\.?0*|\./,"").length}function _4(t,e){var n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:1e-8,i=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0;if(n<=0)throw new Error("Relative tolerance must be greater than 0");if(i<0)throw new Error("Absolute tolerance must be at least 0");return isNaN(t)||isNaN(e)?!1:!isFinite(t)||!isFinite(e)?t===e:t===e?!0:Math.abs(t-e)<=Math.max(n*Math.max(Math.abs(t),Math.abs(e)),i)}function eo(t,e){if(J9(t))return t;if(T0(t))return t.toNumber();e()}function to(t,e){return J9(t)?t:T0(t)?t.toNumber():e}var Su=function(){return Su=w4.create,w4},Up=["?BigNumber","?Complex","?DenseMatrix","?Fraction"],qp=Z9("typed",Up,function(e){var{BigNumber:n,Complex:i,DenseMatrix:o,Fraction:u}=e,a=Su();return a.clear(),a.addTypes([{name:"number",test:J9},{name:"Complex",test:wu},{name:"BigNumber",test:T0},{name:"bigint",test:rp},{name:"Fraction",test:_u},{name:"Unit",test:xu},{name:"identifier",test:c=>/^(?:[A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C8A\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CD\uA7D0\uA7D1\uA7D3\uA7D5-\uA7DC\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDDC0-\uDDF3\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD23\uDD4A-\uDD65\uDD6F-\uDD85\uDE80-\uDEA9\uDEB0\uDEB1\uDEC2-\uDEC4\uDF00-\uDF1C\uDF27\uDF30-\uDF45\uDF70-\uDF81\uDFB0-\uDFC4\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE3F\uDE40\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61\uDF80-\uDF89\uDF8B\uDF8E\uDF90-\uDFB5\uDFB7\uDFD1\uDFD3]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDEB8\uDF00-\uDF1A\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCDF\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8\uDFC0-\uDFE0]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDEE0-\uDEF2\uDF02\uDF04-\uDF10\uDF12-\uDF33\uDFB0]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD80E\uD80F\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883\uD885-\uD887][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2F\uDC41-\uDC46\uDC60-\uDFFF]|\uD810[\uDC00-\uDFFA]|\uD811[\uDC00-\uDE46]|\uD818[\uDD00-\uDD1D]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE70-\uDEBE\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDD40-\uDD6C\uDE40-\uDE7F\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDCFF-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD32\uDD50-\uDD52\uDD55\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD837[\uDF00-\uDF1E\uDF25-\uDF2A]|\uD838[\uDC30-\uDC6D\uDD00-\uDD2C\uDD37-\uDD3D\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB]|\uD839[\uDCD0-\uDCEB\uDDD0-\uDDED\uDDF0\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43\uDD4B]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF39\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0\uDFF0-\uDFFF]|\uD87B[\uDC00-\uDE5D]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A\uDF50-\uDFFF]|\uD888[\uDC00-\uDFAF])(?:[0-9A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C8A\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CD\uA7D0\uA7D1\uA7D3\uA7D5-\uA7DC\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDDC0-\uDDF3\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD23\uDD4A-\uDD65\uDD6F-\uDD85\uDE80-\uDEA9\uDEB0\uDEB1\uDEC2-\uDEC4\uDF00-\uDF1C\uDF27\uDF30-\uDF45\uDF70-\uDF81\uDFB0-\uDFC4\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE3F\uDE40\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61\uDF80-\uDF89\uDF8B\uDF8E\uDF90-\uDFB5\uDFB7\uDFD1\uDFD3]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDEB8\uDF00-\uDF1A\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCDF\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8\uDFC0-\uDFE0]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDEE0-\uDEF2\uDF02\uDF04-\uDF10\uDF12-\uDF33\uDFB0]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD80E\uD80F\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883\uD885-\uD887][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2F\uDC41-\uDC46\uDC60-\uDFFF]|\uD810[\uDC00-\uDFFA]|\uD811[\uDC00-\uDE46]|\uD818[\uDD00-\uDD1D]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE70-\uDEBE\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDD40-\uDD6C\uDE40-\uDE7F\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDCFF-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD32\uDD50-\uDD52\uDD55\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD837[\uDF00-\uDF1E\uDF25-\uDF2A]|\uD838[\uDC30-\uDC6D\uDD00-\uDD2C\uDD37-\uDD3D\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB]|\uD839[\uDCD0-\uDCEB\uDDD0-\uDDED\uDDF0\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43\uDD4B]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF39\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0\uDFF0-\uDFFF]|\uD87B[\uDC00-\uDE5D]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A\uDF50-\uDFFF]|\uD888[\uDC00-\uDFAF])*$/.test(c)},{name:"string",test:y5},{name:"Chain",test:Np},{name:"Array",test:m0},{name:"Matrix",test:$0},{name:"DenseMatrix",test:ip},{name:"SparseMatrix",test:sp},{name:"Range",test:op},{name:"Index",test:Rt},{name:"boolean",test:up},{name:"ResultSet",test:ap},{name:"Help",test:lp},{name:"function",test:cp},{name:"Date",test:fp},{name:"RegExp",test:hp},{name:"null",test:pp},{name:"undefined",test:gp},{name:"AccessorNode",test:mp},{name:"ArrayNode",test:vp},{name:"AssignmentNode",test:yp},{name:"BlockNode",test:Dp},{name:"ConditionalNode",test:wp},{name:"ConstantNode",test:_p},{name:"FunctionNode",test:Ep},{name:"FunctionAssignmentNode",test:xp},{name:"IndexNode",test:Cp},{name:"Node",test:Fp},{name:"ObjectNode",test:Sp},{name:"OperatorNode",test:Ap},{name:"ParenthesisNode",test:bp},{name:"RangeNode",test:Mp},{name:"RelationalNode",test:kp},{name:"SymbolNode",test:Bp},{name:"Map",test:dp},{name:"Object",test:Lt}]),a.addConversions([{from:"number",to:"BigNumber",convert:function(h){if(n||e4(h),Wp(h)>15)throw new TypeError("Cannot implicitly convert a number with >15 significant digits to BigNumber (value: "+h+"). Use function bignumber(x) to convert to BigNumber.");return new n(h)}},{from:"number",to:"Complex",convert:function(h){return i||t4(h),new i(h,0)}},{from:"BigNumber",to:"Complex",convert:function(h){return i||t4(h),new i(h.toNumber(),0)}},{from:"bigint",to:"number",convert:function(h){if(h>Number.MAX_SAFE_INTEGER)throw new TypeError("Cannot implicitly convert bigint to number: value exceeds the max safe integer value (value: "+h+")");return Number(h)}},{from:"bigint",to:"BigNumber",convert:function(h){return n||e4(h),new n(h.toString())}},{from:"bigint",to:"Fraction",convert:function(h){return u||n4(h),new u(h)}},{from:"Fraction",to:"BigNumber",convert:function(h){throw new TypeError("Cannot implicitly convert a Fraction to BigNumber or vice versa. Use function bignumber(x) to convert to BigNumber or fraction(x) to convert to Fraction.")}},{from:"Fraction",to:"Complex",convert:function(h){return i||t4(h),new i(h.valueOf(),0)}},{from:"number",to:"Fraction",convert:function(h){u||n4(h);var d=new u(h);if(d.valueOf()!==h)throw new TypeError("Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: "+h+"). Use function fraction(x) to convert to Fraction.");return d}},{from:"string",to:"number",convert:function(h){var d=Number(h);if(isNaN(d))throw new Error('Cannot convert "'+h+'" to a number');return d}},{from:"string",to:"BigNumber",convert:function(h){n||e4(h);try{return new n(h)}catch{throw new Error('Cannot convert "'+h+'" to BigNumber')}}},{from:"string",to:"bigint",convert:function(h){try{return BigInt(h)}catch{throw new Error('Cannot convert "'+h+'" to BigInt')}}},{from:"string",to:"Fraction",convert:function(h){u||n4(h);try{return new u(h)}catch{throw new Error('Cannot convert "'+h+'" to Fraction')}}},{from:"string",to:"Complex",convert:function(h){i||t4(h);try{return new i(h)}catch{throw new Error('Cannot convert "'+h+'" to Complex')}}},{from:"boolean",to:"number",convert:function(h){return+h}},{from:"boolean",to:"BigNumber",convert:function(h){return n||e4(h),new n(+h)}},{from:"boolean",to:"bigint",convert:function(h){return BigInt(+h)}},{from:"boolean",to:"Fraction",convert:function(h){return u||n4(h),new u(+h)}},{from:"boolean",to:"string",convert:function(h){return String(h)}},{from:"Array",to:"Matrix",convert:function(h){return o||Yp(),new o(h)}},{from:"Matrix",to:"Array",convert:function(h){return h.valueOf()}}]),a.onMismatch=(c,h,d)=>{var p=a.createError(c,h,d);if(["wrongType","mismatch"].includes(p.data.category)&&h.length===1&&D4(h[0])&&d.some(D=>!D.params.includes(","))){var m=new TypeError("Function '".concat(c,"' doesn't apply to matrices. To call it ")+"elementwise on a matrix 'M', try 'map(M, ".concat(c,")'."));throw m.data=p.data,m}throw p},a.onMismatch=(c,h,d)=>{var p=a.createError(c,h,d);if(["wrongType","mismatch"].includes(p.data.category)&&h.length===1&&D4(h[0])&&d.some(D=>!D.params.includes(","))){var m=new TypeError("Function '".concat(c,"' doesn't apply to matrices. To call it ")+"elementwise on a matrix 'M', try 'map(M, ".concat(c,")'."));throw m.data=p.data,m}throw p},a});function e4(t){throw new Error("Cannot convert value ".concat(t," into a BigNumber: no class 'BigNumber' provided"))}function t4(t){throw new Error("Cannot convert value ".concat(t," into a Complex number: no class 'Complex' provided"))}function Yp(){throw new Error("Cannot convert array into a Matrix: no class 'DenseMatrix' provided")}function n4(t){throw new Error("Cannot convert value ".concat(t," into a Fraction, no class 'Fraction' provided."))}/*!
 *  decimal.js v10.4.3
 *  An arbitrary-precision Decimal type for JavaScript.
 *  https://github.com/MikeMcl/decimal.js
 *  Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>
 *  MIT Licence
 */var pt=9e15,e2=1e9,gt="0123456789abcdef",x4="2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",E4="3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789",mt={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-9e15,maxE:pt,crypto:!1},Au,D5,P9=!0,T4="[DecimalError] ",J5=T4+"Invalid argument: ",bu=T4+"Precision limit exceeded",Mu=T4+"crypto unavailable",ku="[object Decimal]",U0=Math.floor,w0=Math.pow,Kp=/^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,Xp=/^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,Qp=/^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,Bu=/^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,V1=1e7,N9=7,Zp=9007199254740991,Gp=x4.length-1,vt=E4.length-1,e9={toStringTag:ku};e9.absoluteValue=e9.abs=function(){var t=new this.constructor(this);return t.s<0&&(t.s=1),S9(t)};e9.ceil=function(){return S9(new this.constructor(this),this.e+1,2)};e9.clampedTo=e9.clamp=function(t,e){var n,i=this,o=i.constructor;if(t=new o(t),e=new o(e),!t.s||!e.s)return new o(NaN);if(t.gt(e))throw Error(J5+e);return n=i.cmp(t),n<0?t:i.cmp(e)>0?e:new o(i)};e9.comparedTo=e9.cmp=function(t){var e,n,i,o,u=this,a=u.d,c=(t=new u.constructor(t)).d,h=u.s,d=t.s;if(!a||!c)return!h||!d?NaN:h!==d?h:a===c?0:!a^h<0?1:-1;if(!a[0]||!c[0])return a[0]?h:c[0]?-d:0;if(h!==d)return h;if(u.e!==t.e)return u.e>t.e^h<0?1:-1;for(i=a.length,o=c.length,e=0,n=i<o?i:o;e<n;++e)if(a[e]!==c[e])return a[e]>c[e]^h<0?1:-1;return i===o?0:i>o^h<0?1:-1};e9.cosine=e9.cos=function(){var t,e,n=this,i=n.constructor;return n.d?n.d[0]?(t=i.precision,e=i.rounding,i.precision=t+Math.max(n.e,n.sd())+N9,i.rounding=1,n=Jp(i,zu(i,n)),i.precision=t,i.rounding=e,S9(D5==2||D5==3?n.neg():n,t,e,!0)):new i(1):new i(NaN)};e9.cubeRoot=e9.cbrt=function(){var t,e,n,i,o,u,a,c,h,d,p=this,m=p.constructor;if(!p.isFinite()||p.isZero())return new m(p);for(P9=!1,u=p.s*w0(p.s*p,1/3),!u||Math.abs(u)==1/0?(n=P0(p.d),t=p.e,(u=(t-n.length+1)%3)&&(n+=u==1||u==-2?"0":"00"),u=w0(n,1/3),t=U0((t+1)/3)-(t%3==(t<0?-1:2)),u==1/0?n="5e"+t:(n=u.toExponential(),n=n.slice(0,n.indexOf("e")+1)+t),i=new m(n),i.s=p.s):i=new m(u.toString()),a=(t=m.precision)+3;;)if(c=i,h=c.times(c).times(c),d=h.plus(p),i=Q9(d.plus(p).times(c),d.plus(h),a+2,1),P0(c.d).slice(0,a)===(n=P0(i.d)).slice(0,a))if(n=n.slice(a-3,a+1),n=="9999"||!o&&n=="4999"){if(!o&&(S9(c,t+1,0),c.times(c).times(c).eq(p))){i=c;break}a+=4,o=1}else{(!+n||!+n.slice(1)&&n.charAt(0)=="5")&&(S9(i,t+1,1),e=!i.times(i).times(i).eq(p));break}return P9=!0,S9(i,t,m.rounding,e)};e9.decimalPlaces=e9.dp=function(){var t,e=this.d,n=NaN;if(e){if(t=e.length-1,n=(t-U0(this.e/N9))*N9,t=e[t],t)for(;t%10==0;t/=10)n--;n<0&&(n=0)}return n};e9.dividedBy=e9.div=function(t){return Q9(this,new this.constructor(t))};e9.dividedToIntegerBy=e9.divToInt=function(t){var e=this,n=e.constructor;return S9(Q9(e,new n(t),0,1,1),n.precision,n.rounding)};e9.equals=e9.eq=function(t){return this.cmp(t)===0};e9.floor=function(){return S9(new this.constructor(this),this.e+1,3)};e9.greaterThan=e9.gt=function(t){return this.cmp(t)>0};e9.greaterThanOrEqualTo=e9.gte=function(t){var e=this.cmp(t);return e==1||e===0};e9.hyperbolicCosine=e9.cosh=function(){var t,e,n,i,o,u=this,a=u.constructor,c=new a(1);if(!u.isFinite())return new a(u.s?1/0:NaN);if(u.isZero())return c;n=a.precision,i=a.rounding,a.precision=n+Math.max(u.e,u.sd())+4,a.rounding=1,o=u.d.length,o<32?(t=Math.ceil(o/3),e=(1/O4(4,t)).toString()):(t=16,e="2.3283064365386962890625e-10"),u=f3(a,1,u.times(e),new a(1),!0);for(var h,d=t,p=new a(8);d--;)h=u.times(u),u=c.minus(h.times(p.minus(h.times(p))));return S9(u,a.precision=n,a.rounding=i,!0)};e9.hyperbolicSine=e9.sinh=function(){var t,e,n,i,o=this,u=o.constructor;if(!o.isFinite()||o.isZero())return new u(o);if(e=u.precision,n=u.rounding,u.precision=e+Math.max(o.e,o.sd())+4,u.rounding=1,i=o.d.length,i<3)o=f3(u,2,o,o,!0);else{t=1.4*Math.sqrt(i),t=t>16?16:t|0,o=o.times(1/O4(5,t)),o=f3(u,2,o,o,!0);for(var a,c=new u(5),h=new u(16),d=new u(20);t--;)a=o.times(o),o=o.times(c.plus(a.times(h.times(a).plus(d))))}return u.precision=e,u.rounding=n,S9(o,e,n,!0)};e9.hyperbolicTangent=e9.tanh=function(){var t,e,n=this,i=n.constructor;return n.isFinite()?n.isZero()?new i(n):(t=i.precision,e=i.rounding,i.precision=t+7,i.rounding=1,Q9(n.sinh(),n.cosh(),i.precision=t,i.rounding=e)):new i(n.s)};e9.inverseCosine=e9.acos=function(){var t,e=this,n=e.constructor,i=e.abs().cmp(1),o=n.precision,u=n.rounding;return i!==-1?i===0?e.isNeg()?$1(n,o,u):new n(0):new n(NaN):e.isZero()?$1(n,o+4,u).times(.5):(n.precision=o+6,n.rounding=1,e=e.asin(),t=$1(n,o+4,u).times(.5),n.precision=o,n.rounding=u,t.minus(e))};e9.inverseHyperbolicCosine=e9.acosh=function(){var t,e,n=this,i=n.constructor;return n.lte(1)?new i(n.eq(1)?0:NaN):n.isFinite()?(t=i.precision,e=i.rounding,i.precision=t+Math.max(Math.abs(n.e),n.sd())+4,i.rounding=1,P9=!1,n=n.times(n).minus(1).sqrt().plus(n),P9=!0,i.precision=t,i.rounding=e,n.ln()):new i(n)};e9.inverseHyperbolicSine=e9.asinh=function(){var t,e,n=this,i=n.constructor;return!n.isFinite()||n.isZero()?new i(n):(t=i.precision,e=i.rounding,i.precision=t+2*Math.max(Math.abs(n.e),n.sd())+6,i.rounding=1,P9=!1,n=n.times(n).plus(1).sqrt().plus(n),P9=!0,i.precision=t,i.rounding=e,n.ln())};e9.inverseHyperbolicTangent=e9.atanh=function(){var t,e,n,i,o=this,u=o.constructor;return o.isFinite()?o.e>=0?new u(o.abs().eq(1)?o.s/0:o.isZero()?o:NaN):(t=u.precision,e=u.rounding,i=o.sd(),Math.max(i,t)<2*-o.e-1?S9(new u(o),t,e,!0):(u.precision=n=i-o.e,o=Q9(o.plus(1),new u(1).minus(o),n+t,1),u.precision=t+4,u.rounding=1,o=o.ln(),u.precision=t,u.rounding=e,o.times(.5))):new u(NaN)};e9.inverseSine=e9.asin=function(){var t,e,n,i,o=this,u=o.constructor;return o.isZero()?new u(o):(e=o.abs().cmp(1),n=u.precision,i=u.rounding,e!==-1?e===0?(t=$1(u,n+4,i).times(.5),t.s=o.s,t):new u(NaN):(u.precision=n+6,u.rounding=1,o=o.div(new u(1).minus(o.times(o)).sqrt().plus(1)).atan(),u.precision=n,u.rounding=i,o.times(2)))};e9.inverseTangent=e9.atan=function(){var t,e,n,i,o,u,a,c,h,d=this,p=d.constructor,m=p.precision,D=p.rounding;if(d.isFinite()){if(d.isZero())return new p(d);if(d.abs().eq(1)&&m+4<=vt)return a=$1(p,m+4,D).times(.25),a.s=d.s,a}else{if(!d.s)return new p(NaN);if(m+4<=vt)return a=$1(p,m+4,D).times(.5),a.s=d.s,a}for(p.precision=c=m+10,p.rounding=1,n=Math.min(28,c/N9+2|0),t=n;t;--t)d=d.div(d.times(d).plus(1).sqrt().plus(1));for(P9=!1,e=Math.ceil(c/N9),i=1,h=d.times(d),a=new p(d),o=d;t!==-1;)if(o=o.times(h),u=a.minus(o.div(i+=2)),o=o.times(h),a=u.plus(o.div(i+=2)),a.d[e]!==void 0)for(t=e;a.d[t]===u.d[t]&&t--;);return n&&(a=a.times(2<<n-1)),P9=!0,S9(a,p.precision=m,p.rounding=D,!0)};e9.isFinite=function(){return!!this.d};e9.isInteger=e9.isInt=function(){return!!this.d&&U0(this.e/N9)>this.d.length-2};e9.isNaN=function(){return!this.s};e9.isNegative=e9.isNeg=function(){return this.s<0};e9.isPositive=e9.isPos=function(){return this.s>0};e9.isZero=function(){return!!this.d&&this.d[0]===0};e9.lessThan=e9.lt=function(t){return this.cmp(t)<0};e9.lessThanOrEqualTo=e9.lte=function(t){return this.cmp(t)<1};e9.logarithm=e9.log=function(t){var e,n,i,o,u,a,c,h,d=this,p=d.constructor,m=p.precision,D=p.rounding,w=5;if(t==null)t=new p(10),e=!0;else{if(t=new p(t),n=t.d,t.s<0||!n||!n[0]||t.eq(1))return new p(NaN);e=t.eq(10)}if(n=d.d,d.s<0||!n||!n[0]||d.eq(1))return new p(n&&!n[0]?-1/0:d.s!=1?NaN:n?0:1/0);if(e)if(n.length>1)u=!0;else{for(o=n[0];o%10===0;)o/=10;u=o!==1}if(P9=!1,c=m+w,a=q5(d,c),i=e?C4(p,c+10):q5(t,c),h=Q9(a,i,c,1),w6(h.d,o=m,D))do if(c+=10,a=q5(d,c),i=e?C4(p,c+10):q5(t,c),h=Q9(a,i,c,1),!u){+P0(h.d).slice(o+1,o+15)+1==1e14&&(h=S9(h,m+1,0));break}while(w6(h.d,o+=10,D));return P9=!0,S9(h,m,D)};e9.minus=e9.sub=function(t){var e,n,i,o,u,a,c,h,d,p,m,D,w=this,E=w.constructor;if(t=new E(t),!w.d||!t.d)return!w.s||!t.s?t=new E(NaN):w.d?t.s=-t.s:t=new E(t.d||w.s!==t.s?w:NaN),t;if(w.s!=t.s)return t.s=-t.s,w.plus(t);if(d=w.d,D=t.d,c=E.precision,h=E.rounding,!d[0]||!D[0]){if(D[0])t.s=-t.s;else if(d[0])t=new E(w);else return new E(h===3?-0:0);return P9?S9(t,c,h):t}if(n=U0(t.e/N9),p=U0(w.e/N9),d=d.slice(),u=p-n,u){for(m=u<0,m?(e=d,u=-u,a=D.length):(e=D,n=p,a=d.length),i=Math.max(Math.ceil(c/N9),a)+2,u>i&&(u=i,e.length=1),e.reverse(),i=u;i--;)e.push(0);e.reverse()}else{for(i=d.length,a=D.length,m=i<a,m&&(a=i),i=0;i<a;i++)if(d[i]!=D[i]){m=d[i]<D[i];break}u=0}for(m&&(e=d,d=D,D=e,t.s=-t.s),a=d.length,i=D.length-a;i>0;--i)d[a++]=0;for(i=D.length;i>u;){if(d[--i]<D[i]){for(o=i;o&&d[--o]===0;)d[o]=V1-1;--d[o],d[i]+=V1}d[i]-=D[i]}for(;d[--a]===0;)d.pop();for(;d[0]===0;d.shift())--n;return d[0]?(t.d=d,t.e=P4(d,n),P9?S9(t,c,h):t):new E(h===3?-0:0)};e9.modulo=e9.mod=function(t){var e,n=this,i=n.constructor;return t=new i(t),!n.d||!t.s||t.d&&!t.d[0]?new i(NaN):!t.d||n.d&&!n.d[0]?S9(new i(n),i.precision,i.rounding):(P9=!1,i.modulo==9?(e=Q9(n,t.abs(),0,3,1),e.s*=t.s):e=Q9(n,t,0,i.modulo,1),e=e.times(t),P9=!0,n.minus(e))};e9.naturalExponential=e9.exp=function(){return yt(this)};e9.naturalLogarithm=e9.ln=function(){return q5(this)};e9.negated=e9.neg=function(){var t=new this.constructor(this);return t.s=-t.s,S9(t)};e9.plus=e9.add=function(t){var e,n,i,o,u,a,c,h,d,p,m=this,D=m.constructor;if(t=new D(t),!m.d||!t.d)return!m.s||!t.s?t=new D(NaN):m.d||(t=new D(t.d||m.s===t.s?m:NaN)),t;if(m.s!=t.s)return t.s=-t.s,m.minus(t);if(d=m.d,p=t.d,c=D.precision,h=D.rounding,!d[0]||!p[0])return p[0]||(t=new D(m)),P9?S9(t,c,h):t;if(u=U0(m.e/N9),i=U0(t.e/N9),d=d.slice(),o=u-i,o){for(o<0?(n=d,o=-o,a=p.length):(n=p,i=u,a=d.length),u=Math.ceil(c/N9),a=u>a?u+1:a+1,o>a&&(o=a,n.length=1),n.reverse();o--;)n.push(0);n.reverse()}for(a=d.length,o=p.length,a-o<0&&(o=a,n=p,p=d,d=n),e=0;o;)e=(d[--o]=d[o]+p[o]+e)/V1|0,d[o]%=V1;for(e&&(d.unshift(e),++i),a=d.length;d[--a]==0;)d.pop();return t.d=d,t.e=P4(d,i),P9?S9(t,c,h):t};e9.precision=e9.sd=function(t){var e,n=this;if(t!==void 0&&t!==!!t&&t!==1&&t!==0)throw Error(J5+t);return n.d?(e=Nu(n.d),t&&n.e+1>e&&(e=n.e+1)):e=NaN,e};e9.round=function(){var t=this,e=t.constructor;return S9(new e(t),t.e+1,e.rounding)};e9.sine=e9.sin=function(){var t,e,n=this,i=n.constructor;return n.isFinite()?n.isZero()?new i(n):(t=i.precision,e=i.rounding,i.precision=t+Math.max(n.e,n.sd())+N9,i.rounding=1,n=tg(i,zu(i,n)),i.precision=t,i.rounding=e,S9(D5>2?n.neg():n,t,e,!0)):new i(NaN)};e9.squareRoot=e9.sqrt=function(){var t,e,n,i,o,u,a=this,c=a.d,h=a.e,d=a.s,p=a.constructor;if(d!==1||!c||!c[0])return new p(!d||d<0&&(!c||c[0])?NaN:c?a:1/0);for(P9=!1,d=Math.sqrt(+a),d==0||d==1/0?(e=P0(c),(e.length+h)%2==0&&(e+="0"),d=Math.sqrt(e),h=U0((h+1)/2)-(h<0||h%2),d==1/0?e="5e"+h:(e=d.toExponential(),e=e.slice(0,e.indexOf("e")+1)+h),i=new p(e)):i=new p(d.toString()),n=(h=p.precision)+3;;)if(u=i,i=u.plus(Q9(a,u,n+2,1)).times(.5),P0(u.d).slice(0,n)===(e=P0(i.d)).slice(0,n))if(e=e.slice(n-3,n+1),e=="9999"||!o&&e=="4999"){if(!o&&(S9(u,h+1,0),u.times(u).eq(a))){i=u;break}n+=4,o=1}else{(!+e||!+e.slice(1)&&e.charAt(0)=="5")&&(S9(i,h+1,1),t=!i.times(i).eq(a));break}return P9=!0,S9(i,h,p.rounding,t)};e9.tangent=e9.tan=function(){var t,e,n=this,i=n.constructor;return n.isFinite()?n.isZero()?new i(n):(t=i.precision,e=i.rounding,i.precision=t+10,i.rounding=1,n=n.sin(),n.s=1,n=Q9(n,new i(1).minus(n.times(n)).sqrt(),t+10,0),i.precision=t,i.rounding=e,S9(D5==2||D5==4?n.neg():n,t,e,!0)):new i(NaN)};e9.times=e9.mul=function(t){var e,n,i,o,u,a,c,h,d,p=this,m=p.constructor,D=p.d,w=(t=new m(t)).d;if(t.s*=p.s,!D||!D[0]||!w||!w[0])return new m(!t.s||D&&!D[0]&&!w||w&&!w[0]&&!D?NaN:!D||!w?t.s/0:t.s*0);for(n=U0(p.e/N9)+U0(t.e/N9),h=D.length,d=w.length,h<d&&(u=D,D=w,w=u,a=h,h=d,d=a),u=[],a=h+d,i=a;i--;)u.push(0);for(i=d;--i>=0;){for(e=0,o=h+i;o>i;)c=u[o]+w[i]*D[o-i-1]+e,u[o--]=c%V1|0,e=c/V1|0;u[o]=(u[o]+e)%V1|0}for(;!u[--a];)u.pop();return e?++n:u.shift(),t.d=u,t.e=P4(u,n),P9?S9(t,m.precision,m.rounding):t};e9.toBinary=function(t,e){return jt(this,2,t,e)};e9.toDecimalPlaces=e9.toDP=function(t,e){var n=this,i=n.constructor;return n=new i(n),t===void 0?n:(l1(t,0,e2),e===void 0?e=i.rounding:l1(e,0,8),S9(n,t+n.e+1,e))};e9.toExponential=function(t,e){var n,i=this,o=i.constructor;return t===void 0?n=t5(i,!0):(l1(t,0,e2),e===void 0?e=o.rounding:l1(e,0,8),i=S9(new o(i),t+1,e),n=t5(i,!0,t+1)),i.isNeg()&&!i.isZero()?"-"+n:n};e9.toFixed=function(t,e){var n,i,o=this,u=o.constructor;return t===void 0?n=t5(o):(l1(t,0,e2),e===void 0?e=u.rounding:l1(e,0,8),i=S9(new u(o),t+o.e+1,e),n=t5(i,!1,t+i.e+1)),o.isNeg()&&!o.isZero()?"-"+n:n};e9.toFraction=function(t){var e,n,i,o,u,a,c,h,d,p,m,D,w=this,E=w.d,y=w.constructor;if(!E)return new y(w);if(d=n=new y(1),i=h=new y(0),e=new y(i),u=e.e=Nu(E)-w.e-1,a=u%N9,e.d[0]=w0(10,a<0?N9+a:a),t==null)t=u>0?e:d;else{if(c=new y(t),!c.isInt()||c.lt(d))throw Error(J5+c);t=c.gt(e)?u>0?e:d:c}for(P9=!1,c=new y(P0(E)),p=y.precision,y.precision=u=E.length*N9*2;m=Q9(c,e,0,1,1),o=n.plus(m.times(i)),o.cmp(t)!=1;)n=i,i=o,o=d,d=h.plus(m.times(o)),h=o,o=e,e=c.minus(m.times(o)),c=o;return o=Q9(t.minus(n),i,0,1,1),h=h.plus(o.times(d)),n=n.plus(o.times(i)),h.s=d.s=w.s,D=Q9(d,i,u,1).minus(w).abs().cmp(Q9(h,n,u,1).minus(w).abs())<1?[d,i]:[h,n],y.precision=p,P9=!0,D};e9.toHexadecimal=e9.toHex=function(t,e){return jt(this,16,t,e)};e9.toNearest=function(t,e){var n=this,i=n.constructor;if(n=new i(n),t==null){if(!n.d)return n;t=new i(1),e=i.rounding}else{if(t=new i(t),e===void 0?e=i.rounding:l1(e,0,8),!n.d)return t.s?n:t;if(!t.d)return t.s&&(t.s=n.s),t}return t.d[0]?(P9=!1,n=Q9(n,t,0,e,1).times(t),P9=!0,S9(n)):(t.s=n.s,n=t),n};e9.toNumber=function(){return+this};e9.toOctal=function(t,e){return jt(this,8,t,e)};e9.toPower=e9.pow=function(t){var e,n,i,o,u,a,c=this,h=c.constructor,d=+(t=new h(t));if(!c.d||!t.d||!c.d[0]||!t.d[0])return new h(w0(+c,d));if(c=new h(c),c.eq(1))return c;if(i=h.precision,u=h.rounding,t.eq(1))return S9(c,i,u);if(e=U0(t.e/N9),e>=t.d.length-1&&(n=d<0?-d:d)<=Zp)return o=Tu(h,c,n,i),t.s<0?new h(1).div(o):S9(o,i,u);if(a=c.s,a<0){if(e<t.d.length-1)return new h(NaN);if(t.d[e]&1||(a=1),c.e==0&&c.d[0]==1&&c.d.length==1)return c.s=a,c}return n=w0(+c,d),e=n==0||!isFinite(n)?U0(d*(Math.log("0."+P0(c.d))/Math.LN10+c.e+1)):new h(n+"").e,e>h.maxE+1||e<h.minE-1?new h(e>0?a/0:0):(P9=!1,h.rounding=c.s=1,n=Math.min(12,(e+"").length),o=yt(t.times(q5(c,i+n)),i),o.d&&(o=S9(o,i+5,1),w6(o.d,i,u)&&(e=i+10,o=S9(yt(t.times(q5(c,e+n)),e),e+5,1),+P0(o.d).slice(i+1,i+15)+1==1e14&&(o=S9(o,i+1,0)))),o.s=a,P9=!0,h.rounding=u,S9(o,i,u))};e9.toPrecision=function(t,e){var n,i=this,o=i.constructor;return t===void 0?n=t5(i,i.e<=o.toExpNeg||i.e>=o.toExpPos):(l1(t,1,e2),e===void 0?e=o.rounding:l1(e,0,8),i=S9(new o(i),t,e),n=t5(i,t<=i.e||i.e<=o.toExpNeg,t)),i.isNeg()&&!i.isZero()?"-"+n:n};e9.toSignificantDigits=e9.toSD=function(t,e){var n=this,i=n.constructor;return t===void 0?(t=i.precision,e=i.rounding):(l1(t,1,e2),e===void 0?e=i.rounding:l1(e,0,8)),S9(new i(n),t,e)};e9.toString=function(){var t=this,e=t.constructor,n=t5(t,t.e<=e.toExpNeg||t.e>=e.toExpPos);return t.isNeg()&&!t.isZero()?"-"+n:n};e9.truncated=e9.trunc=function(){return S9(new this.constructor(this),this.e+1,1)};e9.valueOf=e9.toJSON=function(){var t=this,e=t.constructor,n=t5(t,t.e<=e.toExpNeg||t.e>=e.toExpPos);return t.isNeg()?"-"+n:n};function P0(t){var e,n,i,o=t.length-1,u="",a=t[0];if(o>0){for(u+=a,e=1;e<o;e++)i=t[e]+"",n=N9-i.length,n&&(u+=V5(n)),u+=i;a=t[e],i=a+"",n=N9-i.length,n&&(u+=V5(n))}else if(a===0)return"0";for(;a%10===0;)a/=10;return u+a}function l1(t,e,n){if(t!==~~t||t<e||t>n)throw Error(J5+t)}function w6(t,e,n,i){var o,u,a,c;for(u=t[0];u>=10;u/=10)--e;return--e<0?(e+=N9,o=0):(o=Math.ceil((e+1)/N9),e%=N9),u=w0(10,N9-e),c=t[o]%u|0,i==null?e<3?(e==0?c=c/100|0:e==1&&(c=c/10|0),a=n<4&&c==99999||n>3&&c==49999||c==5e4||c==0):a=(n<4&&c+1==u||n>3&&c+1==u/2)&&(t[o+1]/u/100|0)==w0(10,e-2)-1||(c==u/2||c==0)&&(t[o+1]/u/100|0)==0:e<4?(e==0?c=c/1e3|0:e==1?c=c/100|0:e==2&&(c=c/10|0),a=(i||n<4)&&c==9999||!i&&n>3&&c==4999):a=((i||n<4)&&c+1==u||!i&&n>3&&c+1==u/2)&&(t[o+1]/u/1e3|0)==w0(10,e-3)-1,a}function a4(t,e,n){for(var i,o=[0],u,a=0,c=t.length;a<c;){for(u=o.length;u--;)o[u]*=e;for(o[0]+=gt.indexOf(t.charAt(a++)),i=0;i<o.length;i++)o[i]>n-1&&(o[i+1]===void 0&&(o[i+1]=0),o[i+1]+=o[i]/n|0,o[i]%=n)}return o.reverse()}function Jp(t,e){var n,i,o;if(e.isZero())return e;i=e.d.length,i<32?(n=Math.ceil(i/3),o=(1/O4(4,n)).toString()):(n=16,o="2.3283064365386962890625e-10"),t.precision+=n,e=f3(t,1,e.times(o),new t(1));for(var u=n;u--;){var a=e.times(e);e=a.times(a).minus(a).times(8).plus(1)}return t.precision-=n,e}var Q9=function(){function t(i,o,u){var a,c=0,h=i.length;for(i=i.slice();h--;)a=i[h]*o+c,i[h]=a%u|0,c=a/u|0;return c&&i.unshift(c),i}function e(i,o,u,a){var c,h;if(u!=a)h=u>a?1:-1;else for(c=h=0;c<u;c++)if(i[c]!=o[c]){h=i[c]>o[c]?1:-1;break}return h}function n(i,o,u,a){for(var c=0;u--;)i[u]-=c,c=i[u]<o[u]?1:0,i[u]=c*a+i[u]-o[u];for(;!i[0]&&i.length>1;)i.shift()}return function(i,o,u,a,c,h){var d,p,m,D,w,E,y,x,C,k,A,B,F,S,P,T,I,H,W,Z,f9=i.constructor,o9=i.s==o.s?1:-1,t9=i.d,q=o.d;if(!t9||!t9[0]||!q||!q[0])return new f9(!i.s||!o.s||(t9?q&&t9[0]==q[0]:!q)?NaN:t9&&t9[0]==0||!q?o9*0:o9/0);for(h?(w=1,p=i.e-o.e):(h=V1,w=N9,p=U0(i.e/w)-U0(o.e/w)),W=q.length,I=t9.length,C=new f9(o9),k=C.d=[],m=0;q[m]==(t9[m]||0);m++);if(q[m]>(t9[m]||0)&&p--,u==null?(S=u=f9.precision,a=f9.rounding):c?S=u+(i.e-o.e)+1:S=u,S<0)k.push(1),E=!0;else{if(S=S/w+2|0,m=0,W==1){for(D=0,q=q[0],S++;(m<I||D)&&S--;m++)P=D*h+(t9[m]||0),k[m]=P/q|0,D=P%q|0;E=D||m<I}else{for(D=h/(q[0]+1)|0,D>1&&(q=t(q,D,h),t9=t(t9,D,h),W=q.length,I=t9.length),T=W,A=t9.slice(0,W),B=A.length;B<W;)A[B++]=0;Z=q.slice(),Z.unshift(0),H=q[0],q[1]>=h/2&&++H;do D=0,d=e(q,A,W,B),d<0?(F=A[0],W!=B&&(F=F*h+(A[1]||0)),D=F/H|0,D>1?(D>=h&&(D=h-1),y=t(q,D,h),x=y.length,B=A.length,d=e(y,A,x,B),d==1&&(D--,n(y,W<x?Z:q,x,h))):(D==0&&(d=D=1),y=q.slice()),x=y.length,x<B&&y.unshift(0),n(A,y,B,h),d==-1&&(B=A.length,d=e(q,A,W,B),d<1&&(D++,n(A,W<B?Z:q,B,h))),B=A.length):d===0&&(D++,A=[0]),k[m++]=D,d&&A[0]?A[B++]=t9[T]||0:(A=[t9[T]],B=1);while((T++<I||A[0]!==void 0)&&S--);E=A[0]!==void 0}k[0]||k.shift()}if(w==1)C.e=p,Au=E;else{for(m=1,D=k[0];D>=10;D/=10)m++;C.e=m+p*w-1,S9(C,c?u+C.e+1:u,a,E)}return C}}();function S9(t,e,n,i){var o,u,a,c,h,d,p,m,D,w=t.constructor;e:if(e!=null){if(m=t.d,!m)return t;for(o=1,c=m[0];c>=10;c/=10)o++;if(u=e-o,u<0)u+=N9,a=e,p=m[D=0],h=p/w0(10,o-a-1)%10|0;else if(D=Math.ceil((u+1)/N9),c=m.length,D>=c)if(i){for(;c++<=D;)m.push(0);p=h=0,o=1,u%=N9,a=u-N9+1}else break e;else{for(p=c=m[D],o=1;c>=10;c/=10)o++;u%=N9,a=u-N9+o,h=a<0?0:p/w0(10,o-a-1)%10|0}if(i=i||e<0||m[D+1]!==void 0||(a<0?p:p%w0(10,o-a-1)),d=n<4?(h||i)&&(n==0||n==(t.s<0?3:2)):h>5||h==5&&(n==4||i||n==6&&(u>0?a>0?p/w0(10,o-a):0:m[D-1])%10&1||n==(t.s<0?8:7)),e<1||!m[0])return m.length=0,d?(e-=t.e+1,m[0]=w0(10,(N9-e%N9)%N9),t.e=-e||0):m[0]=t.e=0,t;if(u==0?(m.length=D,c=1,D--):(m.length=D+1,c=w0(10,N9-u),m[D]=a>0?(p/w0(10,o-a)%w0(10,a)|0)*c:0),d)for(;;)if(D==0){for(u=1,a=m[0];a>=10;a/=10)u++;for(a=m[0]+=c,c=1;a>=10;a/=10)c++;u!=c&&(t.e++,m[0]==V1&&(m[0]=1));break}else{if(m[D]+=c,m[D]!=V1)break;m[D--]=0,c=1}for(u=m.length;m[--u]===0;)m.pop()}return P9&&(t.e>w.maxE?(t.d=null,t.e=NaN):t.e<w.minE&&(t.e=0,t.d=[0])),t}function t5(t,e,n){if(!t.isFinite())return Ou(t);var i,o=t.e,u=P0(t.d),a=u.length;return e?(n&&(i=n-a)>0?u=u.charAt(0)+"."+u.slice(1)+V5(i):a>1&&(u=u.charAt(0)+"."+u.slice(1)),u=u+(t.e<0?"e":"e+")+t.e):o<0?(u="0."+V5(-o-1)+u,n&&(i=n-a)>0&&(u+=V5(i))):o>=a?(u+=V5(o+1-a),n&&(i=n-o-1)>0&&(u=u+"."+V5(i))):((i=o+1)<a&&(u=u.slice(0,i)+"."+u.slice(i)),n&&(i=n-a)>0&&(o+1===a&&(u+="."),u+=V5(i))),u}function P4(t,e){var n=t[0];for(e*=N9;n>=10;n/=10)e++;return e}function C4(t,e,n){if(e>Gp)throw P9=!0,n&&(t.precision=n),Error(bu);return S9(new t(x4),e,1,!0)}function $1(t,e,n){if(e>vt)throw Error(bu);return S9(new t(E4),e,n,!0)}function Nu(t){var e=t.length-1,n=e*N9+1;if(e=t[e],e){for(;e%10==0;e/=10)n--;for(e=t[0];e>=10;e/=10)n++}return n}function V5(t){for(var e="";t--;)e+="0";return e}function Tu(t,e,n,i){var o,u=new t(1),a=Math.ceil(i/N9+4);for(P9=!1;;){if(n%2&&(u=u.times(e),ro(u.d,a)&&(o=!0)),n=U0(n/2),n===0){n=u.d.length-1,o&&u.d[n]===0&&++u.d[n];break}e=e.times(e),ro(e.d,a)}return P9=!0,u}function no(t){return t.d[t.d.length-1]&1}function Pu(t,e,n){for(var i,o=new t(e[0]),u=0;++u<e.length;)if(i=new t(e[u]),i.s)o[n](i)&&(o=i);else{o=i;break}return o}function yt(t,e){var n,i,o,u,a,c,h,d=0,p=0,m=0,D=t.constructor,w=D.rounding,E=D.precision;if(!t.d||!t.d[0]||t.e>17)return new D(t.d?t.d[0]?t.s<0?0:1/0:1:t.s?t.s<0?0:t:NaN);for(e==null?(P9=!1,h=E):h=e,c=new D(.03125);t.e>-2;)t=t.times(c),m+=5;for(i=Math.log(w0(2,m))/Math.LN10*2+5|0,h+=i,n=u=a=new D(1),D.precision=h;;){if(u=S9(u.times(t),h,1),n=n.times(++p),c=a.plus(Q9(u,n,h,1)),P0(c.d).slice(0,h)===P0(a.d).slice(0,h)){for(o=m;o--;)a=S9(a.times(a),h,1);if(e==null)if(d<3&&w6(a.d,h-i,w,d))D.precision=h+=10,n=u=c=new D(1),p=0,d++;else return S9(a,D.precision=E,w,P9=!0);else return D.precision=E,a}a=c}}function q5(t,e){var n,i,o,u,a,c,h,d,p,m,D,w=1,E=10,y=t,x=y.d,C=y.constructor,k=C.rounding,A=C.precision;if(y.s<0||!x||!x[0]||!y.e&&x[0]==1&&x.length==1)return new C(x&&!x[0]?-1/0:y.s!=1?NaN:x?0:y);if(e==null?(P9=!1,p=A):p=e,C.precision=p+=E,n=P0(x),i=n.charAt(0),Math.abs(u=y.e)<15e14){for(;i<7&&i!=1||i==1&&n.charAt(1)>3;)y=y.times(t),n=P0(y.d),i=n.charAt(0),w++;u=y.e,i>1?(y=new C("0."+n),u++):y=new C(i+"."+n.slice(1))}else return d=C4(C,p+2,A).times(u+""),y=q5(new C(i+"."+n.slice(1)),p-E).plus(d),C.precision=A,e==null?S9(y,A,k,P9=!0):y;for(m=y,h=a=y=Q9(y.minus(1),y.plus(1),p,1),D=S9(y.times(y),p,1),o=3;;){if(a=S9(a.times(D),p,1),d=h.plus(Q9(a,new C(o),p,1)),P0(d.d).slice(0,p)===P0(h.d).slice(0,p))if(h=h.times(2),u!==0&&(h=h.plus(C4(C,p+2,A).times(u+""))),h=Q9(h,new C(w),p,1),e==null)if(w6(h.d,p-E,k,c))C.precision=p+=E,d=a=y=Q9(m.minus(1),m.plus(1),p,1),D=S9(y.times(y),p,1),o=c=1;else return S9(h,C.precision=A,k,P9=!0);else return C.precision=A,h;h=d,o+=2}}function Ou(t){return String(t.s*t.s/0)}function Dt(t,e){var n,i,o;for((n=e.indexOf("."))>-1&&(e=e.replace(".","")),(i=e.search(/e/i))>0?(n<0&&(n=i),n+=+e.slice(i+1),e=e.substring(0,i)):n<0&&(n=e.length),i=0;e.charCodeAt(i)===48;i++);for(o=e.length;e.charCodeAt(o-1)===48;--o);if(e=e.slice(i,o),e){if(o-=i,t.e=n=n-i-1,t.d=[],i=(n+1)%N9,n<0&&(i+=N9),i<o){for(i&&t.d.push(+e.slice(0,i)),o-=N9;i<o;)t.d.push(+e.slice(i,i+=N9));e=e.slice(i),i=N9-e.length}else i-=o;for(;i--;)e+="0";t.d.push(+e),P9&&(t.e>t.constructor.maxE?(t.d=null,t.e=NaN):t.e<t.constructor.minE&&(t.e=0,t.d=[0]))}else t.e=0,t.d=[0];return t}function eg(t,e){var n,i,o,u,a,c,h,d,p;if(e.indexOf("_")>-1){if(e=e.replace(/(\d)_(?=\d)/g,"$1"),Bu.test(e))return Dt(t,e)}else if(e==="Infinity"||e==="NaN")return+e||(t.s=NaN),t.e=NaN,t.d=null,t;if(Xp.test(e))n=16,e=e.toLowerCase();else if(Kp.test(e))n=2;else if(Qp.test(e))n=8;else throw Error(J5+e);for(u=e.search(/p/i),u>0?(h=+e.slice(u+1),e=e.substring(2,u)):e=e.slice(2),u=e.indexOf("."),a=u>=0,i=t.constructor,a&&(e=e.replace(".",""),c=e.length,u=c-u,o=Tu(i,new i(n),u,u*2)),d=a4(e,n,V1),p=d.length-1,u=p;d[u]===0;--u)d.pop();return u<0?new i(t.s*0):(t.e=P4(d,p),t.d=d,P9=!1,a&&(t=Q9(t,o,c*4)),h&&(t=t.times(Math.abs(h)<54?w0(2,h):h3.pow(2,h))),P9=!0,t)}function tg(t,e){var n,i=e.d.length;if(i<3)return e.isZero()?e:f3(t,2,e,e);n=1.4*Math.sqrt(i),n=n>16?16:n|0,e=e.times(1/O4(5,n)),e=f3(t,2,e,e);for(var o,u=new t(5),a=new t(16),c=new t(20);n--;)o=e.times(e),e=e.times(u.plus(o.times(a.times(o).minus(c))));return e}function f3(t,e,n,i,o){var u,a,c,h,d=t.precision,p=Math.ceil(d/N9);for(P9=!1,h=n.times(n),c=new t(i);;){if(a=Q9(c.times(h),new t(e++*e++),d,1),c=o?i.plus(a):i.minus(a),i=Q9(a.times(h),new t(e++*e++),d,1),a=c.plus(i),a.d[p]!==void 0){for(u=p;a.d[u]===c.d[u]&&u--;);if(u==-1)break}u=c,c=i,i=a,a=u}return P9=!0,a.d.length=p+1,a}function O4(t,e){for(var n=t;--e;)n*=t;return n}function zu(t,e){var n,i=e.s<0,o=$1(t,t.precision,1),u=o.times(.5);if(e=e.abs(),e.lte(u))return D5=i?4:1,e;if(n=e.divToInt(o),n.isZero())D5=i?3:2;else{if(e=e.minus(n.times(o)),e.lte(u))return D5=no(n)?i?2:3:i?4:1,e;D5=no(n)?i?1:4:i?3:2}return e.minus(o).abs()}function jt(t,e,n,i){var o,u,a,c,h,d,p,m,D,w=t.constructor,E=n!==void 0;if(E?(l1(n,1,e2),i===void 0?i=w.rounding:l1(i,0,8)):(n=w.precision,i=w.rounding),!t.isFinite())p=Ou(t);else{for(p=t5(t),a=p.indexOf("."),E?(o=2,e==16?n=n*4-3:e==8&&(n=n*3-2)):o=e,a>=0&&(p=p.replace(".",""),D=new w(1),D.e=p.length-a,D.d=a4(t5(D),10,o),D.e=D.d.length),m=a4(p,10,o),u=h=m.length;m[--h]==0;)m.pop();if(!m[0])p=E?"0p+0":"0";else{if(a<0?u--:(t=new w(t),t.d=m,t.e=u,t=Q9(t,D,n,i,0,o),m=t.d,u=t.e,d=Au),a=m[n],c=o/2,d=d||m[n+1]!==void 0,d=i<4?(a!==void 0||d)&&(i===0||i===(t.s<0?3:2)):a>c||a===c&&(i===4||d||i===6&&m[n-1]&1||i===(t.s<0?8:7)),m.length=n,d)for(;++m[--n]>o-1;)m[n]=0,n||(++u,m.unshift(1));for(h=m.length;!m[h-1];--h);for(a=0,p="";a<h;a++)p+=gt.charAt(m[a]);if(E){if(h>1)if(e==16||e==8){for(a=e==16?4:3,--h;h%a;h++)p+="0";for(m=a4(p,o,e),h=m.length;!m[h-1];--h);for(a=1,p="1.";a<h;a++)p+=gt.charAt(m[a])}else p=p.charAt(0)+"."+p.slice(1);p=p+(u<0?"p":"p+")+u}else if(u<0){for(;++u;)p="0"+p;p="0."+p}else if(++u>h)for(u-=h;u--;)p+="0";else u<h&&(p=p.slice(0,u)+"."+p.slice(u))}p=(e==16?"0x":e==2?"0b":e==8?"0o":"")+p}return t.s<0?"-"+p:p}function ro(t,e){if(t.length>e)return t.length=e,!0}function ng(t){return new this(t).abs()}function rg(t){return new this(t).acos()}function ig(t){return new this(t).acosh()}function sg(t,e){return new this(t).plus(e)}function og(t){return new this(t).asin()}function ug(t){return new this(t).asinh()}function ag(t){return new this(t).atan()}function lg(t){return new this(t).atanh()}function cg(t,e){t=new this(t),e=new this(e);var n,i=this.precision,o=this.rounding,u=i+4;return!t.s||!e.s?n=new this(NaN):!t.d&&!e.d?(n=$1(this,u,1).times(e.s>0?.25:.75),n.s=t.s):!e.d||t.isZero()?(n=e.s<0?$1(this,i,o):new this(0),n.s=t.s):!t.d||e.isZero()?(n=$1(this,u,1).times(.5),n.s=t.s):e.s<0?(this.precision=u,this.rounding=1,n=this.atan(Q9(t,e,u,1)),e=$1(this,u,1),this.precision=i,this.rounding=o,n=t.s<0?n.minus(e):n.plus(e)):n=this.atan(Q9(t,e,u,1)),n}function fg(t){return new this(t).cbrt()}function hg(t){return S9(t=new this(t),t.e+1,2)}function dg(t,e,n){return new this(t).clamp(e,n)}function pg(t){if(!t||typeof t!="object")throw Error(T4+"Object expected");var e,n,i,o=t.defaults===!0,u=["precision",1,e2,"rounding",0,8,"toExpNeg",-9e15,0,"toExpPos",0,pt,"maxE",0,pt,"minE",-9e15,0,"modulo",0,9];for(e=0;e<u.length;e+=3)if(n=u[e],o&&(this[n]=mt[n]),(i=t[n])!==void 0)if(U0(i)===i&&i>=u[e+1]&&i<=u[e+2])this[n]=i;else throw Error(J5+n+": "+i);if(n="crypto",o&&(this[n]=mt[n]),(i=t[n])!==void 0)if(i===!0||i===!1||i===0||i===1)if(i)if(typeof crypto<"u"&&crypto&&(crypto.getRandomValues||crypto.randomBytes))this[n]=!0;else throw Error(Mu);else this[n]=!1;else throw Error(J5+n+": "+i);return this}function gg(t){return new this(t).cos()}function mg(t){return new this(t).cosh()}function Iu(t){var e,n,i;function o(u){var a,c,h,d=this;if(!(d instanceof o))return new o(u);if(d.constructor=o,io(u)){d.s=u.s,P9?!u.d||u.e>o.maxE?(d.e=NaN,d.d=null):u.e<o.minE?(d.e=0,d.d=[0]):(d.e=u.e,d.d=u.d.slice()):(d.e=u.e,d.d=u.d?u.d.slice():u.d);return}if(h=typeof u,h==="number"){if(u===0){d.s=1/u<0?-1:1,d.e=0,d.d=[0];return}if(u<0?(u=-u,d.s=-1):d.s=1,u===~~u&&u<1e7){for(a=0,c=u;c>=10;c/=10)a++;P9?a>o.maxE?(d.e=NaN,d.d=null):a<o.minE?(d.e=0,d.d=[0]):(d.e=a,d.d=[u]):(d.e=a,d.d=[u]);return}else if(u*0!==0){u||(d.s=NaN),d.e=NaN,d.d=null;return}return Dt(d,u.toString())}else if(h!=="string")throw Error(J5+u);return(c=u.charCodeAt(0))===45?(u=u.slice(1),d.s=-1):(c===43&&(u=u.slice(1)),d.s=1),Bu.test(u)?Dt(d,u):eg(d,u)}if(o.prototype=e9,o.ROUND_UP=0,o.ROUND_DOWN=1,o.ROUND_CEIL=2,o.ROUND_FLOOR=3,o.ROUND_HALF_UP=4,o.ROUND_HALF_DOWN=5,o.ROUND_HALF_EVEN=6,o.ROUND_HALF_CEIL=7,o.ROUND_HALF_FLOOR=8,o.EUCLID=9,o.config=o.set=pg,o.clone=Iu,o.isDecimal=io,o.abs=ng,o.acos=rg,o.acosh=ig,o.add=sg,o.asin=og,o.asinh=ug,o.atan=ag,o.atanh=lg,o.atan2=cg,o.cbrt=fg,o.ceil=hg,o.clamp=dg,o.cos=gg,o.cosh=mg,o.div=vg,o.exp=yg,o.floor=Dg,o.hypot=wg,o.ln=_g,o.log=xg,o.log10=Cg,o.log2=Eg,o.max=Fg,o.min=Sg,o.mod=Ag,o.mul=bg,o.pow=Mg,o.random=kg,o.round=Bg,o.sign=Ng,o.sin=Tg,o.sinh=Pg,o.sqrt=Og,o.sub=zg,o.sum=Ig,o.tan=Rg,o.tanh=Lg,o.trunc=jg,t===void 0&&(t={}),t&&t.defaults!==!0)for(i=["precision","rounding","toExpNeg","toExpPos","maxE","minE","modulo","crypto"],e=0;e<i.length;)t.hasOwnProperty(n=i[e++])||(t[n]=this[n]);return o.config(t),o}function vg(t,e){return new this(t).div(e)}function yg(t){return new this(t).exp()}function Dg(t){return S9(t=new this(t),t.e+1,3)}function wg(){var t,e,n=new this(0);for(P9=!1,t=0;t<arguments.length;)if(e=new this(arguments[t++]),e.d)n.d&&(n=n.plus(e.times(e)));else{if(e.s)return P9=!0,new this(1/0);n=e}return P9=!0,n.sqrt()}function io(t){return t instanceof h3||t&&t.toStringTag===ku||!1}function _g(t){return new this(t).ln()}function xg(t,e){return new this(t).log(e)}function Eg(t){return new this(t).log(2)}function Cg(t){return new this(t).log(10)}function Fg(){return Pu(this,arguments,"lt")}function Sg(){return Pu(this,arguments,"gt")}function Ag(t,e){return new this(t).mod(e)}function bg(t,e){return new this(t).mul(e)}function Mg(t,e){return new this(t).pow(e)}function kg(t){var e,n,i,o,u=0,a=new this(1),c=[];if(t===void 0?t=this.precision:l1(t,1,e2),i=Math.ceil(t/N9),this.crypto)if(crypto.getRandomValues)for(e=crypto.getRandomValues(new Uint32Array(i));u<i;)o=e[u],o>=429e7?e[u]=crypto.getRandomValues(new Uint32Array(1))[0]:c[u++]=o%1e7;else if(crypto.randomBytes){for(e=crypto.randomBytes(i*=4);u<i;)o=e[u]+(e[u+1]<<8)+(e[u+2]<<16)+((e[u+3]&127)<<24),o>=214e7?crypto.randomBytes(4).copy(e,u):(c.push(o%1e7),u+=4);u=i/4}else throw Error(Mu);else for(;u<i;)c[u++]=Math.random()*1e7|0;for(i=c[--u],t%=N9,i&&t&&(o=w0(10,N9-t),c[u]=(i/o|0)*o);c[u]===0;u--)c.pop();if(u<0)n=0,c=[0];else{for(n=-1;c[0]===0;n-=N9)c.shift();for(i=1,o=c[0];o>=10;o/=10)i++;i<N9&&(n-=N9-i)}return a.e=n,a.d=c,a}function Bg(t){return S9(t=new this(t),t.e+1,this.rounding)}function Ng(t){return t=new this(t),t.d?t.d[0]?t.s:0*t.s:t.s||NaN}function Tg(t){return new this(t).sin()}function Pg(t){return new this(t).sinh()}function Og(t){return new this(t).sqrt()}function zg(t,e){return new this(t).sub(e)}function Ig(){var t=0,e=arguments,n=new this(e[t]);for(P9=!1;n.s&&++t<e.length;)n=n.plus(e[t]);return P9=!0,S9(n,this.precision,this.rounding)}function Rg(t){return new this(t).tan()}function Lg(t){return new this(t).tanh()}function jg(t){return S9(t=new this(t),t.e+1,1)}e9[Symbol.for("nodejs.util.inspect.custom")]=e9.toString;e9[Symbol.toStringTag]="Decimal";var h3=e9.constructor=Iu(mt);x4=new h3(x4);E4=new h3(E4);var Hg="BigNumber",$g=["?on","config"],Vg=Z9(Hg,$g,t=>{var{on:e,config:n}=t,i=h3.clone({precision:n.precision,modulo:h3.EUCLID});return i.prototype=Object.create(i.prototype),i.prototype.type="BigNumber",i.prototype.isBigNumber=!0,i.prototype.toJSON=function(){return{mathjs:"BigNumber",value:this.toString()}},i.fromJSON=function(o){return new i(o.value)},e&&e("config",function(o,u){o.precision!==u.precision&&i.config({precision:o.precision})}),i},{isClass:!0});const j0=Math.cosh||function(t){return Math.abs(t)<1e-9?1-t:(Math.exp(t)+Math.exp(-t))*.5},C1=Math.sinh||function(t){return Math.abs(t)<1e-9?t:(Math.exp(t)-Math.exp(-t))*.5},Wg=function(t){const e=Math.PI/4;if(-e>t||t>e)return Math.cos(t)-1;const n=t*t;return n*(n*(n*(n*(n*(n*(n*(n/20922789888e3-1/87178291200)+1/479001600)-1/3628800)+1/40320)-1/720)+1/24)-1/2)},J8=function(t,e){return t=Math.abs(t),e=Math.abs(e),t<e&&([t,e]=[e,t]),t<1e8?Math.sqrt(t*t+e*e):(e/=t,t*Math.sqrt(1+e*e))},r3=function(){throw SyntaxError("Invalid Param")};function et(t,e){const n=Math.abs(t),i=Math.abs(e);return t===0?Math.log(i):e===0?Math.log(n):n<3e3&&i<3e3?Math.log(t*t+e*e)*.5:(t=t*.5,e=e*.5,.5*Math.log(t*t+e*e)+Math.LN2)}const Ug={re:0,im:0},E2=function(t,e){const n=Ug;if(t==null)n.re=n.im=0;else if(e!==void 0)n.re=t,n.im=e;else switch(typeof t){case"object":if("im"in t&&"re"in t)n.re=t.re,n.im=t.im;else if("abs"in t&&"arg"in t){if(!isFinite(t.abs)&&isFinite(t.arg))return K.INFINITY;n.re=t.abs*Math.cos(t.arg),n.im=t.abs*Math.sin(t.arg)}else if("r"in t&&"phi"in t){if(!isFinite(t.r)&&isFinite(t.phi))return K.INFINITY;n.re=t.r*Math.cos(t.phi),n.im=t.r*Math.sin(t.phi)}else t.length===2?(n.re=t[0],n.im=t[1]):r3();break;case"string":n.im=n.re=0;const i=t.replace(/_/g,"").match(/\d+\.?\d*e[+-]?\d+|\d+\.?\d*|\.\d+|./g);let o=1,u=0;i===null&&r3();for(let a=0;a<i.length;a++){const c=i[a];c===" "||c==="	"||c===`
`||(c==="+"?o++:c==="-"?u++:c==="i"||c==="I"?(o+u===0&&r3(),i[a+1]!==" "&&!isNaN(i[a+1])?(n.im+=parseFloat((u%2?"-":"")+i[a+1]),a++):n.im+=parseFloat((u%2?"-":"")+"1"),o=u=0):((o+u===0||isNaN(c))&&r3(),i[a+1]==="i"||i[a+1]==="I"?(n.im+=parseFloat((u%2?"-":"")+c),a++):n.re+=parseFloat((u%2?"-":"")+c),o=u=0))}o+u>0&&r3();break;case"number":n.im=0,n.re=t;break;default:r3()}return isNaN(n.re)||isNaN(n.im),n};function K(t,e){if(!(this instanceof K))return new K(t,e);const n=E2(t,e);this.re=n.re,this.im=n.im}K.prototype={re:0,im:0,sign:function(){const t=J8(this.re,this.im);return new K(this.re/t,this.im/t)},add:function(t,e){const n=E2(t,e),i=this.isInfinite(),o=!(isFinite(n.re)&&isFinite(n.im));return i||o?i&&o?K.NAN:K.INFINITY:new K(this.re+n.re,this.im+n.im)},sub:function(t,e){const n=E2(t,e),i=this.isInfinite(),o=!(isFinite(n.re)&&isFinite(n.im));return i||o?i&&o?K.NAN:K.INFINITY:new K(this.re-n.re,this.im-n.im)},mul:function(t,e){const n=E2(t,e),i=this.isInfinite(),o=!(isFinite(n.re)&&isFinite(n.im)),u=this.re===0&&this.im===0,a=n.re===0&&n.im===0;return i&&a||o&&u?K.NAN:i||o?K.INFINITY:n.im===0&&this.im===0?new K(this.re*n.re,0):new K(this.re*n.re-this.im*n.im,this.re*n.im+this.im*n.re)},div:function(t,e){const n=E2(t,e),i=this.isInfinite(),o=!(isFinite(n.re)&&isFinite(n.im)),u=this.re===0&&this.im===0,a=n.re===0&&n.im===0;if(u&&a||i&&o)return K.NAN;if(a||i)return K.INFINITY;if(u||o)return K.ZERO;if(n.im===0)return new K(this.re/n.re,this.im/n.re);if(Math.abs(n.re)<Math.abs(n.im)){const c=n.re/n.im,h=n.re*c+n.im;return new K((this.re*c+this.im)/h,(this.im*c-this.re)/h)}else{const c=n.im/n.re,h=n.im*c+n.re;return new K((this.re+this.im*c)/h,(this.im-this.re*c)/h)}},pow:function(t,e){const n=E2(t,e),i=this.re===0&&this.im===0;if(n.re===0&&n.im===0)return K.ONE;if(n.im===0){if(this.im===0&&this.re>0)return new K(Math.pow(this.re,n.re),0);if(this.re===0)switch((n.re%4+4)%4){case 0:return new K(Math.pow(this.im,n.re),0);case 1:return new K(0,Math.pow(this.im,n.re));case 2:return new K(-Math.pow(this.im,n.re),0);case 3:return new K(0,-Math.pow(this.im,n.re))}}if(i&&n.re>0)return K.ZERO;const u=Math.atan2(this.im,this.re),a=et(this.re,this.im);let c=Math.exp(n.re*a-n.im*u),h=n.im*a+n.re*u;return new K(c*Math.cos(h),c*Math.sin(h))},sqrt:function(){const t=this.re,e=this.im;if(e===0)return t>=0?new K(Math.sqrt(t),0):new K(0,Math.sqrt(-t));const n=J8(t,e);let i=Math.sqrt(.5*(n+Math.abs(t))),o=Math.abs(e)/(2*i);return t>=0?new K(i,e<0?-o:o):new K(o,e<0?-i:i)},exp:function(){const t=Math.exp(this.re);return this.im===0?new K(t,0):new K(t*Math.cos(this.im),t*Math.sin(this.im))},expm1:function(){const t=this.re,e=this.im;return new K(Math.expm1(t)*Math.cos(e)+Wg(e),Math.exp(t)*Math.sin(e))},log:function(){const t=this.re,e=this.im;return e===0&&t>0?new K(Math.log(t),0):new K(et(t,e),Math.atan2(e,t))},abs:function(){return J8(this.re,this.im)},arg:function(){return Math.atan2(this.im,this.re)},sin:function(){const t=this.re,e=this.im;return new K(Math.sin(t)*j0(e),Math.cos(t)*C1(e))},cos:function(){const t=this.re,e=this.im;return new K(Math.cos(t)*j0(e),-Math.sin(t)*C1(e))},tan:function(){const t=2*this.re,e=2*this.im,n=Math.cos(t)+j0(e);return new K(Math.sin(t)/n,C1(e)/n)},cot:function(){const t=2*this.re,e=2*this.im,n=Math.cos(t)-j0(e);return new K(-Math.sin(t)/n,C1(e)/n)},sec:function(){const t=this.re,e=this.im,n=.5*j0(2*e)+.5*Math.cos(2*t);return new K(Math.cos(t)*j0(e)/n,Math.sin(t)*C1(e)/n)},csc:function(){const t=this.re,e=this.im,n=.5*j0(2*e)-.5*Math.cos(2*t);return new K(Math.sin(t)*j0(e)/n,-Math.cos(t)*C1(e)/n)},asin:function(){const t=this.re,e=this.im,n=new K(e*e-t*t+1,-2*t*e).sqrt(),i=new K(n.re-e,n.im+t).log();return new K(i.im,-i.re)},acos:function(){const t=this.re,e=this.im,n=new K(e*e-t*t+1,-2*t*e).sqrt(),i=new K(n.re-e,n.im+t).log();return new K(Math.PI/2-i.im,i.re)},atan:function(){const t=this.re,e=this.im;if(t===0){if(e===1)return new K(0,1/0);if(e===-1)return new K(0,-1/0)}const n=t*t+(1-e)*(1-e),i=new K((1-e*e-t*t)/n,-2*t/n).log();return new K(-.5*i.im,.5*i.re)},acot:function(){const t=this.re,e=this.im;if(e===0)return new K(Math.atan2(1,t),0);const n=t*t+e*e;return n!==0?new K(t/n,-e/n).atan():new K(t!==0?t/0:0,e!==0?-e/0:0).atan()},asec:function(){const t=this.re,e=this.im;if(t===0&&e===0)return new K(0,1/0);const n=t*t+e*e;return n!==0?new K(t/n,-e/n).acos():new K(t!==0?t/0:0,e!==0?-e/0:0).acos()},acsc:function(){const t=this.re,e=this.im;if(t===0&&e===0)return new K(Math.PI/2,1/0);const n=t*t+e*e;return n!==0?new K(t/n,-e/n).asin():new K(t!==0?t/0:0,e!==0?-e/0:0).asin()},sinh:function(){const t=this.re,e=this.im;return new K(C1(t)*Math.cos(e),j0(t)*Math.sin(e))},cosh:function(){const t=this.re,e=this.im;return new K(j0(t)*Math.cos(e),C1(t)*Math.sin(e))},tanh:function(){const t=2*this.re,e=2*this.im,n=j0(t)+Math.cos(e);return new K(C1(t)/n,Math.sin(e)/n)},coth:function(){const t=2*this.re,e=2*this.im,n=j0(t)-Math.cos(e);return new K(C1(t)/n,-Math.sin(e)/n)},csch:function(){const t=this.re,e=this.im,n=Math.cos(2*e)-j0(2*t);return new K(-2*C1(t)*Math.cos(e)/n,2*j0(t)*Math.sin(e)/n)},sech:function(){const t=this.re,e=this.im,n=Math.cos(2*e)+j0(2*t);return new K(2*j0(t)*Math.cos(e)/n,-2*C1(t)*Math.sin(e)/n)},asinh:function(){let t=this.im;this.im=-this.re,this.re=t;const e=this.asin();return this.re=-this.im,this.im=t,t=e.re,e.re=-e.im,e.im=t,e},acosh:function(){const t=this.acos();if(t.im<=0){const e=t.re;t.re=-t.im,t.im=e}else{const e=t.im;t.im=-t.re,t.re=e}return t},atanh:function(){const t=this.re,e=this.im,n=t>1&&e===0,i=1-t,o=1+t,u=i*i+e*e,a=u!==0?new K((o*i-e*e)/u,(e*i+o*e)/u):new K(t!==-1?t/0:0,e!==0?e/0:0),c=a.re;return a.re=et(a.re,a.im)/2,a.im=Math.atan2(a.im,c)/2,n&&(a.im=-a.im),a},acoth:function(){const t=this.re,e=this.im;if(t===0&&e===0)return new K(0,Math.PI/2);const n=t*t+e*e;return n!==0?new K(t/n,-e/n).atanh():new K(t!==0?t/0:0,e!==0?-e/0:0).atanh()},acsch:function(){const t=this.re,e=this.im;if(e===0)return new K(t!==0?Math.log(t+Math.sqrt(t*t+1)):1/0,0);const n=t*t+e*e;return n!==0?new K(t/n,-e/n).asinh():new K(t!==0?t/0:0,e!==0?-e/0:0).asinh()},asech:function(){const t=this.re,e=this.im;if(this.isZero())return K.INFINITY;const n=t*t+e*e;return n!==0?new K(t/n,-e/n).acosh():new K(t!==0?t/0:0,e!==0?-e/0:0).acosh()},inverse:function(){if(this.isZero())return K.INFINITY;if(this.isInfinite())return K.ZERO;const t=this.re,e=this.im,n=t*t+e*e;return new K(t/n,-e/n)},conjugate:function(){return new K(this.re,-this.im)},neg:function(){return new K(-this.re,-this.im)},ceil:function(t){return t=Math.pow(10,t||0),new K(Math.ceil(this.re*t)/t,Math.ceil(this.im*t)/t)},floor:function(t){return t=Math.pow(10,t||0),new K(Math.floor(this.re*t)/t,Math.floor(this.im*t)/t)},round:function(t){return t=Math.pow(10,t||0),new K(Math.round(this.re*t)/t,Math.round(this.im*t)/t)},equals:function(t,e){const n=E2(t,e);return Math.abs(n.re-this.re)<=K.EPSILON&&Math.abs(n.im-this.im)<=K.EPSILON},clone:function(){return new K(this.re,this.im)},toString:function(){let t=this.re,e=this.im,n="";return this.isNaN()?"NaN":this.isInfinite()?"Infinity":(Math.abs(t)<K.EPSILON&&(t=0),Math.abs(e)<K.EPSILON&&(e=0),e===0?n+t:(t!==0?(n+=t,n+=" ",e<0?(e=-e,n+="-"):n+="+",n+=" "):e<0&&(e=-e,n+="-"),e!==1&&(n+=e),n+"i"))},toVector:function(){return[this.re,this.im]},valueOf:function(){return this.im===0?this.re:null},isNaN:function(){return isNaN(this.re)||isNaN(this.im)},isZero:function(){return this.im===0&&this.re===0},isFinite:function(){return isFinite(this.re)&&isFinite(this.im)},isInfinite:function(){return!this.isFinite()}};K.ZERO=new K(0,0);K.ONE=new K(1,0);K.I=new K(0,1);K.PI=new K(Math.PI,0);K.E=new K(Math.E,0);K.INFINITY=new K(1/0,1/0);K.NAN=new K(NaN,NaN);K.EPSILON=1e-15;var qg="Complex",Yg=[],Kg=Z9(qg,Yg,()=>(Object.defineProperty(K,"name",{value:"Complex"}),K.prototype.constructor=K,K.prototype.type="Complex",K.prototype.isComplex=!0,K.prototype.toJSON=function(){return{mathjs:"Complex",re:this.re,im:this.im}},K.prototype.toPolar=function(){return{r:this.abs(),phi:this.arg()}},K.prototype.format=function(t){var e="",n=this.im,i=this.re,o=dt(this.re,t),u=dt(this.im,t),a=J9(t)?t:t?t.precision:null;if(a!==null){var c=Math.pow(10,-a);Math.abs(i/n)<c&&(i=0),Math.abs(n/i)<c&&(n=0)}return n===0?e=o:i===0?n===1?e="i":n===-1?e="-i":e=u+"i":n<0?n===-1?e=o+" - i":e=o+" - "+u.substring(1)+"i":n===1?e=o+" + i":e=o+" + "+u+"i",e},K.fromPolar=function(t){switch(arguments.length){case 1:{var e=arguments[0];if(typeof e=="object")return K(e);throw new TypeError("Input has to be an object with r and phi keys.")}case 2:{var n=arguments[0],i=arguments[1];if(J9(n)){if(xu(i)&&i.hasBase("ANGLE")&&(i=i.toNumber("rad")),J9(i))return new K({r:n,phi:i});throw new TypeError("Phi is not a number nor an angle unit.")}else throw new TypeError("Radius r is not a number.")}default:throw new SyntaxError("Wrong number of arguments in function fromPolar")}},K.prototype.valueOf=K.prototype.toString,K.fromJSON=function(t){return new K(t)},K.compare=function(t,e){return t.re>e.re?1:t.re<e.re?-1:t.im>e.im?1:t.im<e.im?-1:0},K),{isClass:!0});typeof BigInt>"u"&&(BigInt=function(t){if(isNaN(t))throw new Error("");return t});const F9=BigInt(0),I9=BigInt(1),_6=BigInt(2),wt=BigInt(5),o1=BigInt(10),Xg=2e3,d9={s:I9,n:F9,d:I9};function p5(t,e){try{t=BigInt(t)}catch{throw $5()}return t*e}function R1(t){return typeof t=="bigint"?t:Math.floor(t)}function s0(t,e){if(e===F9)throw Ht();const n=Object.create(F1.prototype);n.s=t<F9?-I9:I9,t=t<F9?-t:t;const i=C2(t,e);return n.n=t/i,n.d=e/i,n}function i3(t){const e={};let n=t,i=_6,o=wt-I9;for(;o<=n;){for(;n%i===F9;)n/=i,e[i]=(e[i]||F9)+I9;o+=I9+_6*i++}return n!==t?n>1&&(e[n]=(e[n]||F9)+I9):e[t]=(e[t]||F9)+I9,e}const A0=function(t,e){let n=F9,i=I9,o=I9;if(t!=null)if(e!==void 0){if(typeof t=="bigint")n=t;else{if(isNaN(t))throw $5();if(t%1!==0)throw so();n=BigInt(t)}if(typeof e=="bigint")i=e;else{if(isNaN(e))throw $5();if(e%1!==0)throw so();i=BigInt(e)}o=n*i}else if(typeof t=="object"){if("d"in t&&"n"in t)n=BigInt(t.n),i=BigInt(t.d),"s"in t&&(n*=BigInt(t.s));else if(0 in t)n=BigInt(t[0]),1 in t&&(i=BigInt(t[1]));else if(typeof t=="bigint")n=t;else throw $5();o=n*i}else if(typeof t=="number"){if(isNaN(t))throw $5();if(t<0&&(o=-I9,t=-t),t%1===0)n=BigInt(t);else if(t>0){let u=1,a=0,c=1,h=1,d=1,p=1e7;for(t>=1&&(u=10**Math.floor(1+Math.log10(t)),t/=u);c<=p&&d<=p;){let m=(a+h)/(c+d);if(t===m){c+d<=p?(n=a+h,i=c+d):d>c?(n=h,i=d):(n=a,i=c);break}else t>m?(a+=h,c+=d):(h+=a,d+=c),c>p?(n=h,i=d):(n=a,i=c)}n=BigInt(n)*BigInt(u),i=BigInt(i)}}else if(typeof t=="string"){let u=0,a=F9,c=F9,h=F9,d=I9,p=I9,m=t.replace(/_/g,"").match(/\d+|./g);if(m===null)throw $5();if(m[u]==="-"?(o=-I9,u++):m[u]==="+"&&u++,m.length===u+1?c=p5(m[u++],o):m[u+1]==="."||m[u]==="."?(m[u]!=="."&&(a=p5(m[u++],o)),u++,(u+1===m.length||m[u+1]==="("&&m[u+3]===")"||m[u+1]==="'"&&m[u+3]==="'")&&(c=p5(m[u],o),d=o1**BigInt(m[u].length),u++),(m[u]==="("&&m[u+2]===")"||m[u]==="'"&&m[u+2]==="'")&&(h=p5(m[u+1],o),p=o1**BigInt(m[u+1].length)-I9,u+=3)):m[u+1]==="/"||m[u+1]===":"?(c=p5(m[u],o),d=p5(m[u+2],I9),u+=3):m[u+3]==="/"&&m[u+1]===" "&&(a=p5(m[u],o),c=p5(m[u+2],o),d=p5(m[u+4],I9),u+=5),m.length<=u)i=d*p,o=n=h+i*a+p*c;else throw $5()}else if(typeof t=="bigint")n=t,o=t,i=I9;else throw $5();if(i===F9)throw Ht();d9.s=o<F9?-I9:I9,d9.n=n<F9?-n:n,d9.d=i<F9?-i:i};function Qg(t,e,n){let i=I9;for(;e>F9;t=t*t%n,e>>=I9)e&I9&&(i=i*t%n);return i}function Zg(t,e){for(;e%_6===F9;e/=_6);for(;e%wt===F9;e/=wt);if(e===I9)return F9;let n=o1%e,i=1;for(;n!==I9;i++)if(n=n*o1%e,i>Xg)return F9;return BigInt(i)}function Gg(t,e,n){let i=I9,o=Qg(o1,n,e);for(let u=0;u<300;u++){if(i===o)return BigInt(u);i=i*o1%e,o=o*o1%e}return 0}function C2(t,e){if(!t)return e;if(!e)return t;for(;;){if(t%=e,!t)return e;if(e%=t,!e)return t}}function F1(t,e){if(A0(t,e),this instanceof F1)t=C2(d9.d,d9.n),this.s=d9.s,this.n=d9.n/t,this.d=d9.d/t;else return s0(d9.s*d9.n,d9.d)}var Ht=function(){return new Error("Division by Zero")},$5=function(){return new Error("Invalid argument")},so=function(){return new Error("Parameters must be integer")};F1.prototype={s:I9,n:F9,d:I9,abs:function(){return s0(this.n,this.d)},neg:function(){return s0(-this.s*this.n,this.d)},add:function(t,e){return A0(t,e),s0(this.s*this.n*d9.d+d9.s*this.d*d9.n,this.d*d9.d)},sub:function(t,e){return A0(t,e),s0(this.s*this.n*d9.d-d9.s*this.d*d9.n,this.d*d9.d)},mul:function(t,e){return A0(t,e),s0(this.s*d9.s*this.n*d9.n,this.d*d9.d)},div:function(t,e){return A0(t,e),s0(this.s*d9.s*this.n*d9.d,this.d*d9.n)},clone:function(){return s0(this.s*this.n,this.d)},mod:function(t,e){if(t===void 0)return s0(this.s*this.n%this.d,I9);if(A0(t,e),F9===d9.n*this.d)throw Ht();return s0(this.s*(d9.d*this.n)%(d9.n*this.d),d9.d*this.d)},gcd:function(t,e){return A0(t,e),s0(C2(d9.n,this.n)*C2(d9.d,this.d),d9.d*this.d)},lcm:function(t,e){return A0(t,e),d9.n===F9&&this.n===F9?s0(F9,I9):s0(d9.n*this.n,C2(d9.n,this.n)*C2(d9.d,this.d))},inverse:function(){return s0(this.s*this.d,this.n)},pow:function(t,e){if(A0(t,e),d9.d===I9)return d9.s<F9?s0((this.s*this.d)**d9.n,this.n**d9.n):s0((this.s*this.n)**d9.n,this.d**d9.n);if(this.s<F9)return null;let n=i3(this.n),i=i3(this.d),o=I9,u=I9;for(let a in n)if(a!=="1"){if(a==="0"){o=F9;break}if(n[a]*=d9.n,n[a]%d9.d===F9)n[a]/=d9.d;else return null;o*=BigInt(a)**n[a]}for(let a in i)if(a!=="1"){if(i[a]*=d9.n,i[a]%d9.d===F9)i[a]/=d9.d;else return null;u*=BigInt(a)**i[a]}return d9.s<F9?s0(u,o):s0(o,u)},log:function(t,e){if(A0(t,e),this.s<=F9||d9.s<=F9)return null;const n={},i=i3(d9.n),o=i3(d9.d),u=i3(this.n),a=i3(this.d);for(const d in o)i[d]=(i[d]||F9)-o[d];for(const d in a)u[d]=(u[d]||F9)-a[d];for(const d in i)d!=="1"&&(n[d]=!0);for(const d in u)d!=="1"&&(n[d]=!0);let c=null,h=null;for(const d in n){const p=i[d]||F9,m=u[d]||F9;if(p===F9){if(m!==F9)return null;continue}let D=m,w=p;const E=C2(D,w);if(D/=E,w/=E,c===null&&h===null)c=D,h=w;else if(D*h!==c*w)return null}return c!==null&&h!==null?s0(c,h):null},equals:function(t,e){return A0(t,e),this.s*this.n*d9.d===d9.s*d9.n*this.d},lt:function(t,e){return A0(t,e),this.s*this.n*d9.d<d9.s*d9.n*this.d},lte:function(t,e){return A0(t,e),this.s*this.n*d9.d<=d9.s*d9.n*this.d},gt:function(t,e){return A0(t,e),this.s*this.n*d9.d>d9.s*d9.n*this.d},gte:function(t,e){return A0(t,e),this.s*this.n*d9.d>=d9.s*d9.n*this.d},compare:function(t,e){A0(t,e);let n=this.s*this.n*d9.d-d9.s*d9.n*this.d;return(F9<n)-(n<F9)},ceil:function(t){return t=o1**BigInt(t||0),s0(R1(this.s*t*this.n/this.d)+(t*this.n%this.d>F9&&this.s>=F9?I9:F9),t)},floor:function(t){return t=o1**BigInt(t||0),s0(R1(this.s*t*this.n/this.d)-(t*this.n%this.d>F9&&this.s<F9?I9:F9),t)},round:function(t){return t=o1**BigInt(t||0),s0(R1(this.s*t*this.n/this.d)+this.s*((this.s>=F9?I9:F9)+_6*(t*this.n%this.d)>this.d?I9:F9),t)},roundTo:function(t,e){A0(t,e);const n=this.n*d9.d,i=this.d*d9.n,o=n%i;let u=R1(n/i);return o+o>=i&&u++,s0(this.s*u*d9.n,d9.d)},divisible:function(t,e){return A0(t,e),!(!(d9.n*this.d)||this.n*d9.d%(d9.n*this.d))},valueOf:function(){return Number(this.s*this.n)/Number(this.d)},toString:function(t){let e=this.n,n=this.d;t=t||15;let i=Zg(e,n),o=Gg(e,n,i),u=this.s<F9?"-":"";if(u+=R1(e/n),e%=n,e*=o1,e&&(u+="."),i){for(let a=o;a--;)u+=R1(e/n),e%=n,e*=o1;u+="(";for(let a=i;a--;)u+=R1(e/n),e%=n,e*=o1;u+=")"}else for(let a=t;e&&a--;)u+=R1(e/n),e%=n,e*=o1;return u},toFraction:function(t){let e=this.n,n=this.d,i=this.s<F9?"-":"";if(n===I9)i+=e;else{let o=R1(e/n);t&&o>F9&&(i+=o,i+=" ",e%=n),i+=e,i+="/",i+=n}return i},toLatex:function(t){let e=this.n,n=this.d,i=this.s<F9?"-":"";if(n===I9)i+=e;else{let o=R1(e/n);t&&o>F9&&(i+=o,e%=n),i+="\\frac{",i+=e,i+="}{",i+=n,i+="}"}return i},toContinued:function(){let t=this.n,e=this.d,n=[];do{n.push(R1(t/e));let i=t%e;t=e,e=i}while(t!==I9);return n},simplify:function(t){const e=BigInt(1/(t||.001)|0),n=this.abs(),i=n.toContinued();for(let o=1;o<i.length;o++){let u=s0(i[o-1],I9);for(let c=o-2;c>=0;c--)u=u.inverse().add(i[c]);let a=u.sub(n);if(a.n*e<a.d)return u.mul(this.s)}return this}};var Jg="Fraction",em=[],tm=Z9(Jg,em,()=>(Object.defineProperty(F1,"name",{value:"Fraction"}),F1.prototype.constructor=F1,F1.prototype.type="Fraction",F1.prototype.isFraction=!0,F1.prototype.toJSON=function(){return{mathjs:"Fraction",n:String(this.s*this.n),d:String(this.d)}},F1.fromJSON=function(t){return new F1(t)},F1),{isClass:!0}),nm="Matrix",rm=[],im=Z9(nm,rm,()=>{function t(){if(!(this instanceof t))throw new SyntaxError("Constructor must be called with the new operator")}return t.prototype.type="Matrix",t.prototype.isMatrix=!0,t.prototype.storage=function(){throw new Error("Cannot invoke storage on a Matrix interface")},t.prototype.datatype=function(){throw new Error("Cannot invoke datatype on a Matrix interface")},t.prototype.create=function(e,n){throw new Error("Cannot invoke create on a Matrix interface")},t.prototype.subset=function(e,n,i){throw new Error("Cannot invoke subset on a Matrix interface")},t.prototype.get=function(e){throw new Error("Cannot invoke get on a Matrix interface")},t.prototype.set=function(e,n,i){throw new Error("Cannot invoke set on a Matrix interface")},t.prototype.resize=function(e,n){throw new Error("Cannot invoke resize on a Matrix interface")},t.prototype.reshape=function(e,n){throw new Error("Cannot invoke reshape on a Matrix interface")},t.prototype.clone=function(){throw new Error("Cannot invoke clone on a Matrix interface")},t.prototype.size=function(){throw new Error("Cannot invoke size on a Matrix interface")},t.prototype.map=function(e,n){throw new Error("Cannot invoke map on a Matrix interface")},t.prototype.forEach=function(e){throw new Error("Cannot invoke forEach on a Matrix interface")},t.prototype[Symbol.iterator]=function(){throw new Error("Cannot iterate a Matrix interface")},t.prototype.toArray=function(){throw new Error("Cannot invoke toArray on a Matrix interface")},t.prototype.valueOf=function(){throw new Error("Cannot invoke valueOf on a Matrix interface")},t.prototype.format=function(e){throw new Error("Cannot invoke format on a Matrix interface")},t.prototype.toString=function(){throw new Error("Cannot invoke toString on a Matrix interface")},t},{isClass:!0});function tt(t,e,n){var i=t.constructor,o=new i(2),u="";if(n){if(n<1)throw new Error("size must be in greater than 0");if(!M0(n))throw new Error("size must be an integer");if(t.greaterThan(o.pow(n-1).sub(1))||t.lessThan(o.pow(n-1).mul(-1)))throw new Error("Value must be in range [-2^".concat(n-1,", 2^").concat(n-1,"-1]"));if(!t.isInteger())throw new Error("Value must be an integer");t.lessThan(0)&&(t=t.add(o.pow(n))),u="i".concat(n)}switch(e){case 2:return"".concat(t.toBinary()).concat(u);case 8:return"".concat(t.toOctal()).concat(u);case 16:return"".concat(t.toHexadecimal()).concat(u);default:throw new Error("Base ".concat(e," not supported "))}}function sm(t,e){if(typeof e=="function")return e(t);if(!t.isFinite())return t.isNaN()?"NaN":t.gt(0)?"Infinity":"-Infinity";var{notation:n,precision:i,wordSize:o}=Cu(e);switch(n){case"fixed":return um(t,i);case"exponential":return oo(t,i);case"engineering":return om(t,i);case"bin":return tt(t,2,o);case"oct":return tt(t,8,o);case"hex":return tt(t,16,o);case"auto":{var u=uo(e==null?void 0:e.lowerExp,-3),a=uo(e==null?void 0:e.upperExp,5);if(t.isZero())return"0";var c,h=t.toSignificantDigits(i),d=h.e;return d>=u&&d<a?c=h.toFixed():c=oo(t,i),c.replace(/((\.\d*?)(0+))($|e)/,function(){var p=arguments[2],m=arguments[4];return p!=="."?p+m:m})}default:throw new Error('Unknown notation "'+n+'". Choose "auto", "exponential", "fixed", "bin", "oct", or "hex.')}}function om(t,e){var n=t.e,i=n%3===0?n:n<0?n-3-n%3:n-n%3,o=t.mul(Math.pow(10,-i)),u=o.toPrecision(e);if(u.includes("e")){var a=t.constructor;u=new a(u).toFixed()}return u+"e"+(n>=0?"+":"")+i.toString()}function oo(t,e){return e!==void 0?t.toExponential(e-1):t.toExponential()}function um(t,e){return t.toFixed(e)}function uo(t,e){return J9(t)?t:T0(t)?t.toNumber():e}function s1(t,e){var n=am(t,e);return e&&typeof e=="object"&&"truncate"in e&&n.length>e.truncate?n.substring(0,e.truncate-3)+"...":n}function am(t,e){if(typeof t=="number")return dt(t,e);if(T0(t))return sm(t,e);if(lm(t))return!e||e.fraction!=="decimal"?"".concat(t.s*t.n,"/").concat(t.d):t.toString();if(Array.isArray(t))return Ru(t,e);if(y5(t))return ao(t);if(typeof t=="function")return t.syntax?String(t.syntax):"function";if(t&&typeof t=="object"){if(typeof t.format=="function")return t.format(e);if(t&&t.toString(e)!=={}.toString())return t.toString(e);var n=Object.keys(t).map(i=>ao(i)+": "+s1(t[i],e));return"{"+n.join(", ")+"}"}return String(t)}function ao(t){for(var e=String(t),n="",i=0;i<e.length;){var o=e.charAt(i);n+=o in lo?lo[o]:o,i++}return'"'+n+'"'}var lo={'"':'\\"',"\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","	":"\\t"};function Ru(t,e){if(Array.isArray(t)){for(var n="[",i=t.length,o=0;o<i;o++)o!==0&&(n+=", "),n+=Ru(t[o],e);return n+="]",n}else return s1(t,e)}function lm(t){return t&&typeof t=="object"&&typeof t.s=="bigint"&&typeof t.n=="bigint"&&typeof t.d=="bigint"||!1}function X9(t,e,n){if(!(this instanceof X9))throw new SyntaxError("Constructor must be called with the new operator");this.actual=t,this.expected=e,this.relation=n,this.message="Dimension mismatch ("+(Array.isArray(t)?"["+t.join(", ")+"]":t)+" "+(this.relation||"!=")+" "+(Array.isArray(e)?"["+e.join(", ")+"]":e)+")",this.stack=new Error().stack}X9.prototype=new RangeError;X9.prototype.constructor=RangeError;X9.prototype.name="DimensionError";X9.prototype.isDimensionError=!0;function M2(t,e,n){if(!(this instanceof M2))throw new SyntaxError("Constructor must be called with the new operator");this.index=t,arguments.length<3?(this.min=0,this.max=e):(this.min=e,this.max=n),this.min!==void 0&&this.index<this.min?this.message="Index out of range ("+this.index+" < "+this.min+")":this.max!==void 0&&this.index>=this.max?this.message="Index out of range ("+this.index+" > "+(this.max-1)+")":this.message="Index out of range ("+this.index+")",this.stack=new Error().stack}M2.prototype=new RangeError;M2.prototype.constructor=RangeError;M2.prototype.name="IndexError";M2.prototype.isIndexError=!0;function a1(t){for(var e=[];Array.isArray(t);)e.push(t.length),t=t[0];return e}function Lu(t,e,n){var i,o=t.length;if(o!==e[n])throw new X9(o,e[n]);if(n<e.length-1){var u=n+1;for(i=0;i<o;i++){var a=t[i];if(!Array.isArray(a))throw new X9(e.length-1,e.length,"<");Lu(t[i],e,u)}}else for(i=0;i<o;i++)if(Array.isArray(t[i]))throw new X9(e.length+1,e.length,">")}function co(t,e){var n=e.length===0;if(n){if(Array.isArray(t))throw new X9(t.length,0)}else Lu(t,e,0)}function f0(t,e){if(t!==void 0){if(!J9(t)||!M0(t))throw new TypeError("Index must be an integer (value: "+t+")");if(t<0||typeof e=="number"&&t>=e)throw new M2(t,e)}}function fo(t,e,n){if(!Array.isArray(e))throw new TypeError("Array expected");if(e.length===0)throw new Error("Resizing to scalar is not supported");e.forEach(function(o){if(!J9(o)||!M0(o)||o<0)throw new TypeError("Invalid size, must contain positive integers (size: "+s1(e)+")")}),(J9(t)||T0(t))&&(t=[t]);var i=n!==void 0?n:0;return _t(t,e,0,i),t}function _t(t,e,n,i){var o,u,a=t.length,c=e[n],h=Math.min(a,c);if(t.length=c,n<e.length-1){var d=n+1;for(o=0;o<h;o++)u=t[o],Array.isArray(u)||(u=[u],t[o]=u),_t(u,e,d,i);for(o=h;o<c;o++)u=[],t[o]=u,_t(u,e,d,i)}else{for(o=0;o<h;o++)for(;Array.isArray(t[o]);)t[o]=t[o][0];for(o=h;o<c;o++)t[o]=i}}function ju(t,e){var n=fm(t),i=n.length;if(!Array.isArray(t)||!Array.isArray(e))throw new TypeError("Array expected");if(e.length===0)throw new X9(0,i,"!=");e=$t(e,i);var o=Hu(e);if(i!==o)throw new X9(o,i,"!=");try{return cm(n,e)}catch(u){throw u instanceof X9?new X9(o,i,"!="):u}}function $t(t,e){var n=Hu(t),i=t.slice(),o=-1,u=t.indexOf(o),a=t.indexOf(o,u+1)>=0;if(a)throw new Error("More than one wildcard in sizes");var c=u>=0,h=e%n===0;if(c)if(h)i[u]=-e/n;else throw new Error("Could not replace wildcard, since "+e+" is no multiple of "+-n);return i}function Hu(t){return t.reduce((e,n)=>e*n,1)}function cm(t,e){for(var n=t,i,o=e.length-1;o>0;o--){var u=e[o];i=[];for(var a=n.length/u,c=0;c<a;c++)i.push(n.slice(c*u,(c+1)*u));n=i}return n}function $u(t,e,n,i){var o=i||a1(t);if(n)for(var u=0;u<n;u++)t=[t],o.unshift(1);for(t=Vu(t,e,0);o.length<e;)o.push(1);return t}function Vu(t,e,n){var i,o;if(Array.isArray(t)){var u=n+1;for(i=0,o=t.length;i<o;i++)t[i]=Vu(t[i],e,u)}else for(var a=n;a<e;a++)t=[t];return t}function fm(t){if(!Array.isArray(t))return t;var e=[];return t.forEach(function n(i){Array.isArray(i)?i.forEach(n):e.push(i)}),e}function Vt(t,e){for(var n,i=0,o=0;o<t.length;o++){var u=t[o],a=Array.isArray(u);if(o===0&&a&&(i=u.length),a&&u.length!==i)return;var c=a?Vt(u,e):e(u);if(n===void 0)n=c;else if(n!==c)return"mixed"}return n}function Wu(t,e,n,i){if(i<n){if(t.length!==e.length)throw new X9(t.length,e.length);for(var o=[],u=0;u<t.length;u++)o[u]=Wu(t[u],e[u],n,i+1);return o}else return t.concat(e)}function Uu(){var t=Array.prototype.slice.call(arguments,0,-1),e=Array.prototype.slice.call(arguments,-1);if(t.length===1)return t[0];if(t.length>1)return t.slice(1).reduce(function(n,i){return Wu(n,i,e,0)},t[0]);throw new Error("Wrong number of arguments in function concat")}function qu(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];for(var i=e.map(D=>D.length),o=Math.max(...i),u=new Array(o).fill(null),a=0;a<e.length;a++)for(var c=e[a],h=i[a],d=0;d<h;d++){var p=o-h+d;c[d]>u[p]&&(u[p]=c[d])}for(var m=0;m<e.length;m++)Yu(e[m],u);return u}function Yu(t,e){for(var n=e.length,i=t.length,o=0;o<i;o++){var u=n-i+o;if(t[o]<e[u]&&t[o]>1||t[o]>e[u])throw new Error("shape missmatch: missmatch is found in arg with shape (".concat(t,") not possible to broadcast dimension ").concat(i," with size ").concat(t[o]," to size ").concat(e[u]))}}function xt(t,e){var n=a1(t);if(G5(n,e))return t;Yu(n,e);var i=qu(n,e),o=i.length,u=[...Array(o-n.length).fill(1),...n],a=dm(t);n.length<o&&(a=ju(a,u),n=a1(a));for(var c=0;c<o;c++)n[c]<i[c]&&(a=hm(a,i[c],c),n=a1(a));return a}function hm(t,e,n){return Uu(...Array(e).fill(t),n)}function Ku(t,e){if(!Array.isArray(t))throw new Error("Array expected");var n=a1(t);if(e.length!==n.length)throw new X9(e.length,n.length);for(var i=0;i<e.length;i++)f0(e[i],n[i]);return e.reduce((o,u)=>o[u],t)}function dm(t){return v4([],t)}function F4(t,e,n){if(w4.isTypedFunction(t)){var i=(e.isMatrix?e.size():a1(e)).map(()=>0),o=e.isMatrix?e.get(i):Ku(e,i),u=Object.keys(t.signatures).length===1,a=pm(t,o,i,e),c=u?Object.values(t.signatures)[0]:t;return a>=1&&a<=3?function(){for(var h=arguments.length,d=new Array(h),p=0;p<h;p++)d[p]=arguments[p];return ho(c,d.slice(0,a),n,t.name)}:function(){for(var h=arguments.length,d=new Array(h),p=0;p<h;p++)d[p]=arguments[p];return ho(c,d,n,t.name)}}return t}function pm(t,e,n,i){for(var o=[e,n,i],u=3;u>0;u--){var a=o.slice(0,u);if(w4.resolve(t,a)!==null)return u}}function ho(t,e,n,i){try{return t(...e)}catch(o){gm(o,e,n,i)}}function gm(t,e,n,i){var o;if(t instanceof TypeError&&((o=t.data)===null||o===void 0?void 0:o.category)==="wrongType"){var u=[];throw u.push("value: ".concat(A2(e[0]))),e.length>=2&&u.push("index: ".concat(A2(e[1]))),e.length>=3&&u.push("array: ".concat(A2(e[2]))),new TypeError("Function ".concat(n," cannot apply callback arguments ")+"".concat(i,"(").concat(u.join(", "),") at index ").concat(JSON.stringify(e[1])))}else throw new TypeError("Function ".concat(n," cannot apply callback arguments ")+"to function ".concat(i,": ").concat(t.message))}var mm="DenseMatrix",vm=["Matrix"],ym=Z9(mm,vm,t=>{var{Matrix:e}=t;function n(p,m){if(!(this instanceof n))throw new SyntaxError("Constructor must be called with the new operator");if(m&&!y5(m))throw new Error("Invalid datatype: "+m);if($0(p))p.type==="DenseMatrix"?(this._data=b0(p._data),this._size=b0(p._size),this._datatype=m||p._datatype):(this._data=p.toArray(),this._size=p.size(),this._datatype=m||p._datatype);else if(p&&m0(p.data)&&m0(p.size))this._data=p.data,this._size=p.size,co(this._data,this._size),this._datatype=m||p.datatype;else if(m0(p))this._data=d(p),this._size=a1(this._data),co(this._data,this._size),this._datatype=m;else{if(p)throw new TypeError("Unsupported type of data ("+A2(p)+")");this._data=[],this._size=[0],this._datatype=m}}n.prototype=new e,n.prototype.createDenseMatrix=function(p,m){return new n(p,m)},Object.defineProperty(n,"name",{value:"DenseMatrix"}),n.prototype.constructor=n,n.prototype.type="DenseMatrix",n.prototype.isDenseMatrix=!0,n.prototype.getDataType=function(){return Vt(this._data,A2)},n.prototype.storage=function(){return"dense"},n.prototype.datatype=function(){return this._datatype},n.prototype.create=function(p,m){return new n(p,m)},n.prototype.subset=function(p,m,D){switch(arguments.length){case 1:return i(this,p);case 2:case 3:return u(this,p,m,D);default:throw new SyntaxError("Wrong number of arguments")}},n.prototype.get=function(p){return Ku(this._data,p)},n.prototype.set=function(p,m,D){if(!m0(p))throw new TypeError("Array expected");if(p.length<this._size.length)throw new X9(p.length,this._size.length,"<");var w,E,y,x=p.map(function(k){return k+1});h(this,x,D);var C=this._data;for(w=0,E=p.length-1;w<E;w++)y=p[w],f0(y,C.length),C=C[y];return y=p[p.length-1],f0(y,C.length),C[y]=m,this};function i(p,m){if(!Rt(m))throw new TypeError("Invalid index");var D=m.isScalar();if(D)return p.get(m.min());var w=m.size();if(w.length!==p._size.length)throw new X9(w.length,p._size.length);for(var E=m.min(),y=m.max(),x=0,C=p._size.length;x<C;x++)f0(E[x],p._size[x]),f0(y[x],p._size[x]);return new n(o(p._data,m,w.length,0),p._datatype)}function o(p,m,D,w){var E=w===D-1,y=m.dimension(w);return E?y.map(function(x){return f0(x,p.length),p[x]}).valueOf():y.map(function(x){f0(x,p.length);var C=p[x];return o(C,m,D,w+1)}).valueOf()}function u(p,m,D,w){if(!m||m.isIndex!==!0)throw new TypeError("Invalid index");var E=m.size(),y=m.isScalar(),x;if($0(D)?(x=D.size(),D=D.valueOf()):x=a1(D),y){if(x.length!==0)throw new TypeError("Scalar expected");p.set(m.min(),D,w)}else{if(!G5(x,E))try{x.length===0?D=xt([D],E):D=xt(D,E),x=a1(D)}catch{}if(E.length<p._size.length)throw new X9(E.length,p._size.length,"<");if(x.length<E.length){for(var C=0,k=0;E[C]===1&&x[C]===1;)C++;for(;E[C]===1;)k++,C++;D=$u(D,E.length,k,x)}if(!G5(E,x))throw new X9(E,x,">");var A=m.max().map(function(S){return S+1});h(p,A,w);var B=E.length,F=0;a(p._data,m,D,B,F)}return p}function a(p,m,D,w,E){var y=E===w-1,x=m.dimension(E);y?x.forEach(function(C,k){f0(C),p[C]=D[k[0]]}):x.forEach(function(C,k){f0(C),a(p[C],m,D[k[0]],w,E+1)})}n.prototype.resize=function(p,m,D){if(!D4(p))throw new TypeError("Array or Matrix expected");var w=p.valueOf().map(y=>Array.isArray(y)&&y.length===1?y[0]:y),E=D?this.clone():this;return c(E,w,m)};function c(p,m,D){if(m.length===0){for(var w=p._data;m0(w);)w=w[0];return w}return p._size=m.slice(0),p._data=fo(p._data,p._size,D),p}n.prototype.reshape=function(p,m){var D=m?this.clone():this;D._data=ju(D._data,p);var w=D._size.reduce((E,y)=>E*y);return D._size=$t(p,w),D};function h(p,m,D){for(var w=p._size.slice(0),E=!1;w.length<m.length;)w.push(0),E=!0;for(var y=0,x=m.length;y<x;y++)m[y]>w[y]&&(w[y]=m[y],E=!0);E&&c(p,w,D)}n.prototype.clone=function(){var p=new n({data:b0(this._data),size:b0(this._size),datatype:this._datatype});return p},n.prototype.size=function(){return this._size.slice(0)},n.prototype._forEach=function(p){var m=this,D=m.size();if(D.length===1){for(var w=0;w<D[0];w++)p(m._data,w,[w]);return}var E=Array(D.length).fill(0),y=Array(D.length-1),x=y.length-1;y[0]=m._data[0];for(var C=0;C<x;C++)y[C+1]=y[C][0];for(E[x]=-1;;){var k=void 0;for(k=x;k>=0;k--){if(E[k]++,E[k]===D[k]){E[k]=0;continue}y[k]=k===0?m._data[E[k]]:y[k-1][E[k]];for(var A=k;A<x;A++)y[A+1]=y[A][0];for(var B=0;B<D[y.length];B++)E[y.length]=B,p(y[x],B,E.slice(0));break}if(k===-1)break}},n.prototype.map=function(p){var m=this,D=new n(m),w=F4(p,m._data,"map");return D._forEach(function(E,y,x){E[y]=w(E[y],x,m)}),D},n.prototype.forEach=function(p){var m=this,D=F4(p,m._data,"map");m._forEach(function(w,E,y){D(w[E],y,m)})},n.prototype[Symbol.iterator]=function*(){var p=function*(D,w){if(m0(D))for(var E=0;E<D.length;E++)yield*p(D[E],w.concat(E));else yield{value:D,index:w}};yield*p(this._data,[])},n.prototype.rows=function(){var p=[],m=this.size();if(m.length!==2)throw new TypeError("Rows can only be returned for a 2D matrix.");var D=this._data;for(var w of D)p.push(new n([w],this._datatype));return p},n.prototype.columns=function(){var p=this,m=[],D=this.size();if(D.length!==2)throw new TypeError("Rows can only be returned for a 2D matrix.");for(var w=this._data,E=function(C){var k=w.map(A=>[A[C]]);m.push(new n(k,p._datatype))},y=0;y<D[1];y++)E(y);return m},n.prototype.toArray=function(){return b0(this._data)},n.prototype.valueOf=function(){return this._data},n.prototype.format=function(p){return s1(this._data,p)},n.prototype.toString=function(){return s1(this._data)},n.prototype.toJSON=function(){return{mathjs:"DenseMatrix",data:this._data,size:this._size,datatype:this._datatype}},n.prototype.diagonal=function(p){if(p){if(T0(p)&&(p=p.toNumber()),!J9(p)||!M0(p))throw new TypeError("The parameter k must be an integer number")}else p=0;for(var m=p>0?p:0,D=p<0?-p:0,w=this._size[0],E=this._size[1],y=Math.min(w-D,E-m),x=[],C=0;C<y;C++)x[C]=this._data[C+D][C+m];return new n({data:x,size:[y],datatype:this._datatype})},n.diagonal=function(p,m,D,w){if(!m0(p))throw new TypeError("Array expected, size parameter");if(p.length!==2)throw new Error("Only two dimensions matrix are supported");if(p=p.map(function(P){if(T0(P)&&(P=P.toNumber()),!J9(P)||!M0(P)||P<1)throw new Error("Size values must be positive integers");return P}),D){if(T0(D)&&(D=D.toNumber()),!J9(D)||!M0(D))throw new TypeError("The parameter k must be an integer number")}else D=0;var E=D>0?D:0,y=D<0?-D:0,x=p[0],C=p[1],k=Math.min(x-y,C-E),A;if(m0(m)){if(m.length!==k)throw new Error("Invalid value array length");A=function(T){return m[T]}}else if($0(m)){var B=m.size();if(B.length!==1||B[0]!==k)throw new Error("Invalid matrix length");A=function(T){return m.get([T])}}else A=function(){return m};w||(w=T0(A(0))?A(0).mul(0):0);var F=[];if(p.length>0){F=fo(F,p,w);for(var S=0;S<k;S++)F[S+y][S+E]=A(S)}return new n({data:F,size:[x,C]})},n.fromJSON=function(p){return new n(p)},n.prototype.swapRows=function(p,m){if(!J9(p)||!M0(p)||!J9(m)||!M0(m))throw new Error("Row index must be positive integers");if(this._size.length!==2)throw new Error("Only two dimensional matrix is supported");return f0(p,this._size[0]),f0(m,this._size[0]),n._swapRows(p,m,this._data),this},n._swapRows=function(p,m,D){var w=D[p];D[p]=D[m],D[m]=w};function d(p){return $0(p)?d(p.valueOf()):m0(p)?p.map(d):p}return n},{isClass:!0});function Wt(t,e,n){return t&&typeof t.map=="function"?t.map(function(i){return Wt(i,e)}):e(t)}var po="isInteger",Dm=["typed"],wm=Z9(po,Dm,t=>{var{typed:e}=t;return e(po,{number:M0,BigNumber:function(i){return i.isInt()},bigint:function(i){return!0},Fraction:function(i){return i.d===1n},"Array | Matrix":e.referToSelf(n=>i=>Wt(i,n))})}),Xu="number, number";function Qu(t,e){return t+e}Qu.signature=Xu;function Zu(t,e){return t*e}Zu.signature=Xu;function _m(t,e){var n=arguments.length>2&&arguments[2]!==void 0?arguments[2]:1e-9,i=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0;if(n<=0)throw new Error("Relative tolerance must be greater than 0");if(i<0)throw new Error("Absolute tolerance must be at least 0");return t.isNaN()||e.isNaN()?!1:!t.isFinite()||!e.isFinite()?t.eq(e):t.eq(e)?!0:t.minus(e).abs().lte(t.constructor.max(t.constructor.max(t.abs(),e.abs()).mul(n),i))}function xm(t,e,n,i){return _4(t.re,e.re,n,i)&&_4(t.im,e.im,n,i)}var Em=Z9("compareUnits",["typed"],t=>{var{typed:e}=t;return{"Unit, Unit":e.referToSelf(n=>(i,o)=>{if(!i.equalBase(o))throw new Error("Cannot compare units with different base");return e.find(n,[i.valueType(),o.valueType()])(i.value,o.value)})}}),S4="equalScalar",Cm=["typed","config"],Fm=Z9(S4,Cm,t=>{var{typed:e,config:n}=t,i=Em({typed:e});return e(S4,{"boolean, boolean":function(u,a){return u===a},"number, number":function(u,a){return _4(u,a,n.relTol,n.absTol)},"BigNumber, BigNumber":function(u,a){return u.eq(a)||_m(u,a,n.relTol,n.absTol)},"bigint, bigint":function(u,a){return u===a},"Fraction, Fraction":function(u,a){return u.equals(a)},"Complex, Complex":function(u,a){return xm(u,a,n.relTol,n.absTol)}},i)});Z9(S4,["typed","config"],t=>{var{typed:e,config:n}=t;return e(S4,{"number, number":function(o,u){return _4(o,u,n.relTol,n.absTol)}})});var Sm="SparseMatrix",Am=["typed","equalScalar","Matrix"],bm=Z9(Sm,Am,t=>{var{typed:e,equalScalar:n,Matrix:i}=t;function o(y,x){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator");if(x&&!y5(x))throw new Error("Invalid datatype: "+x);if($0(y))u(this,y,x);else if(y&&m0(y.index)&&m0(y.ptr)&&m0(y.size))this._values=y.values,this._index=y.index,this._ptr=y.ptr,this._size=y.size,this._datatype=x||y.datatype;else if(m0(y))a(this,y,x);else{if(y)throw new TypeError("Unsupported type of data ("+A2(y)+")");this._values=[],this._index=[],this._ptr=[0],this._size=[0,0],this._datatype=x}}function u(y,x,C){x.type==="SparseMatrix"?(y._values=x._values?b0(x._values):void 0,y._index=b0(x._index),y._ptr=b0(x._ptr),y._size=b0(x._size),y._datatype=C||x._datatype):a(y,x.valueOf(),C||x._datatype)}function a(y,x,C){y._values=[],y._index=[],y._ptr=[],y._datatype=C;var k=x.length,A=0,B=n,F=0;if(y5(C)&&(B=e.find(n,[C,C])||n,F=e.convert(0,C)),k>0){var S=0;do{y._ptr.push(y._index.length);for(var P=0;P<k;P++){var T=x[P];if(m0(T)){if(S===0&&A<T.length&&(A=T.length),S<T.length){var I=T[S];B(I,F)||(y._values.push(I),y._index.push(P))}}else S===0&&A<1&&(A=1),B(T,F)||(y._values.push(T),y._index.push(P))}S++}while(S<A)}y._ptr.push(y._index.length),y._size=[k,A]}o.prototype=new i,o.prototype.createSparseMatrix=function(y,x){return new o(y,x)},Object.defineProperty(o,"name",{value:"SparseMatrix"}),o.prototype.constructor=o,o.prototype.type="SparseMatrix",o.prototype.isSparseMatrix=!0,o.prototype.getDataType=function(){return Vt(this._values,A2)},o.prototype.storage=function(){return"sparse"},o.prototype.datatype=function(){return this._datatype},o.prototype.create=function(y,x){return new o(y,x)},o.prototype.density=function(){var y=this._size[0],x=this._size[1];return y!==0&&x!==0?this._index.length/(y*x):0},o.prototype.subset=function(y,x,C){if(!this._values)throw new Error("Cannot invoke subset on a Pattern only matrix");switch(arguments.length){case 1:return c(this,y);case 2:case 3:return h(this,y,x,C);default:throw new SyntaxError("Wrong number of arguments")}};function c(y,x){if(!Rt(x))throw new TypeError("Invalid index");var C=x.isScalar();if(C)return y.get(x.min());var k=x.size();if(k.length!==y._size.length)throw new X9(k.length,y._size.length);var A,B,F,S,P=x.min(),T=x.max();for(A=0,B=y._size.length;A<B;A++)f0(P[A],y._size[A]),f0(T[A],y._size[A]);var I=y._values,H=y._index,W=y._ptr,Z=x.dimension(0),f9=x.dimension(1),o9=[],t9=[];Z.forEach(function(G,X){t9[G]=X[0],o9[G]=!0});var q=I?[]:void 0,l9=[],Y=[];return f9.forEach(function(G){for(Y.push(l9.length),F=W[G],S=W[G+1];F<S;F++)A=H[F],o9[A]===!0&&(l9.push(t9[A]),q&&q.push(I[F]))}),Y.push(l9.length),new o({values:q,index:l9,ptr:Y,size:k,datatype:y._datatype})}function h(y,x,C,k){if(!x||x.isIndex!==!0)throw new TypeError("Invalid index");var A=x.size(),B=x.isScalar(),F;if($0(C)?(F=C.size(),C=C.toArray()):F=a1(C),B){if(F.length!==0)throw new TypeError("Scalar expected");y.set(x.min(),C,k)}else{if(A.length!==1&&A.length!==2)throw new X9(A.length,y._size.length,"<");if(F.length<A.length){for(var S=0,P=0;A[S]===1&&F[S]===1;)S++;for(;A[S]===1;)P++,S++;C=$u(C,A.length,P,F)}if(!G5(A,F))throw new X9(A,F,">");if(A.length===1){var T=x.dimension(0);T.forEach(function(W,Z){f0(W),y.set([W,0],C[Z[0]],k)})}else{var I=x.dimension(0),H=x.dimension(1);I.forEach(function(W,Z){f0(W),H.forEach(function(f9,o9){f0(f9),y.set([W,f9],C[Z[0]][o9[0]],k)})})}}return y}o.prototype.get=function(y){if(!m0(y))throw new TypeError("Array expected");if(y.length!==this._size.length)throw new X9(y.length,this._size.length);if(!this._values)throw new Error("Cannot invoke get on a Pattern only matrix");var x=y[0],C=y[1];f0(x,this._size[0]),f0(C,this._size[1]);var k=d(x,this._ptr[C],this._ptr[C+1],this._index);return k<this._ptr[C+1]&&this._index[k]===x?this._values[k]:0},o.prototype.set=function(y,x,C){if(!m0(y))throw new TypeError("Array expected");if(y.length!==this._size.length)throw new X9(y.length,this._size.length);if(!this._values)throw new Error("Cannot invoke set on a Pattern only matrix");var k=y[0],A=y[1],B=this._size[0],F=this._size[1],S=n,P=0;y5(this._datatype)&&(S=e.find(n,[this._datatype,this._datatype])||n,P=e.convert(0,this._datatype)),(k>B-1||A>F-1)&&(D(this,Math.max(k+1,B),Math.max(A+1,F),C),B=this._size[0],F=this._size[1]),f0(k,B),f0(A,F);var T=d(k,this._ptr[A],this._ptr[A+1],this._index);return T<this._ptr[A+1]&&this._index[T]===k?S(x,P)?p(T,A,this._values,this._index,this._ptr):this._values[T]=x:S(x,P)||m(T,k,A,x,this._values,this._index,this._ptr),this};function d(y,x,C,k){if(C-x===0)return C;for(var A=x;A<C;A++)if(k[A]===y)return A;return x}function p(y,x,C,k,A){C.splice(y,1),k.splice(y,1);for(var B=x+1;B<A.length;B++)A[B]--}function m(y,x,C,k,A,B,F){A.splice(y,0,k),B.splice(y,0,x);for(var S=C+1;S<F.length;S++)F[S]++}o.prototype.resize=function(y,x,C){if(!D4(y))throw new TypeError("Array or Matrix expected");var k=y.valueOf().map(B=>Array.isArray(B)&&B.length===1?B[0]:B);if(k.length!==2)throw new Error("Only two dimensions matrix are supported");k.forEach(function(B){if(!J9(B)||!M0(B)||B<0)throw new TypeError("Invalid size, must contain positive integers (size: "+s1(k)+")")});var A=C?this.clone():this;return D(A,k[0],k[1],x)};function D(y,x,C,k){var A=k||0,B=n,F=0;y5(y._datatype)&&(B=e.find(n,[y._datatype,y._datatype])||n,F=e.convert(0,y._datatype),A=e.convert(A,y._datatype));var S=!B(A,F),P=y._size[0],T=y._size[1],I,H,W;if(C>T){for(H=T;H<C;H++)if(y._ptr[H]=y._values.length,S)for(I=0;I<P;I++)y._values.push(A),y._index.push(I);y._ptr[C]=y._values.length}else C<T&&(y._ptr.splice(C+1,T-C),y._values.splice(y._ptr[C],y._values.length),y._index.splice(y._ptr[C],y._index.length));if(T=C,x>P){if(S){var Z=0;for(H=0;H<T;H++){y._ptr[H]=y._ptr[H]+Z,W=y._ptr[H+1]+Z;var f9=0;for(I=P;I<x;I++,f9++)y._values.splice(W+f9,0,A),y._index.splice(W+f9,0,I),Z++}y._ptr[T]=y._values.length}}else if(x<P){var o9=0;for(H=0;H<T;H++){y._ptr[H]=y._ptr[H]-o9;var t9=y._ptr[H],q=y._ptr[H+1]-o9;for(W=t9;W<q;W++)I=y._index[W],I>x-1&&(y._values.splice(W,1),y._index.splice(W,1),o9++)}y._ptr[H]=y._values.length}return y._size[0]=x,y._size[1]=C,y}o.prototype.reshape=function(y,x){if(!m0(y))throw new TypeError("Array expected");if(y.length!==2)throw new Error("Sparse matrices can only be reshaped in two dimensions");y.forEach(function(G){if(!J9(G)||!M0(G)||G<=-2||G===0)throw new TypeError("Invalid size, must contain positive integers or -1 (size: "+s1(y)+")")});var C=this._size[0]*this._size[1];y=$t(y,C);var k=y[0]*y[1];if(C!==k)throw new Error("Reshaping sparse matrix will result in the wrong number of elements");var A=x?this.clone():this;if(this._size[0]===y[0]&&this._size[1]===y[1])return A;for(var B=[],F=0;F<A._ptr.length;F++)for(var S=0;S<A._ptr[F+1]-A._ptr[F];S++)B.push(F);for(var P=A._values.slice(),T=A._index.slice(),I=0;I<A._index.length;I++){var H=T[I],W=B[I],Z=H*A._size[1]+W;B[I]=Z%y[1],T[I]=Math.floor(Z/y[1])}A._values.length=0,A._index.length=0,A._ptr.length=y[1]+1,A._size=y.slice();for(var f9=0;f9<A._ptr.length;f9++)A._ptr[f9]=0;for(var o9=0;o9<P.length;o9++){var t9=T[o9],q=B[o9],l9=P[o9],Y=d(t9,A._ptr[q],A._ptr[q+1],A._index);m(Y,t9,q,l9,A._values,A._index,A._ptr)}return A},o.prototype.clone=function(){var y=new o({values:this._values?b0(this._values):void 0,index:b0(this._index),ptr:b0(this._ptr),size:b0(this._size),datatype:this._datatype});return y},o.prototype.size=function(){return this._size.slice(0)},o.prototype.map=function(y,x){if(!this._values)throw new Error("Cannot invoke map on a Pattern only matrix");var C=this,k=this._size[0],A=this._size[1],B=F4(y,C,"map"),F=function(P,T,I){return B(P,[T,I],C)};return w(this,0,k-1,0,A-1,F,x)};function w(y,x,C,k,A,B,F){var S=[],P=[],T=[],I=n,H=0;y5(y._datatype)&&(I=e.find(n,[y._datatype,y._datatype])||n,H=e.convert(0,y._datatype));for(var W=function(g9,v9,E9){var _9=B(g9,v9,E9);I(_9,H)||(S.push(_9),P.push(v9))},Z=k;Z<=A;Z++){T.push(S.length);var f9=y._ptr[Z],o9=y._ptr[Z+1];if(F)for(var t9=f9;t9<o9;t9++){var q=y._index[t9];q>=x&&q<=C&&W(y._values[t9],q-x,Z-k)}else{for(var l9={},Y=f9;Y<o9;Y++){var G=y._index[Y];l9[G]=y._values[Y]}for(var X=x;X<=C;X++){var O=X in l9?l9[X]:0;W(O,X-x,Z-k)}}}return T.push(S.length),new o({values:S,index:P,ptr:T,size:[C-x+1,A-k+1]})}o.prototype.forEach=function(y,x){if(!this._values)throw new Error("Cannot invoke forEach on a Pattern only matrix");for(var C=this,k=this._size[0],A=this._size[1],B=F4(y,C,"forEach"),F=0;F<A;F++){var S=this._ptr[F],P=this._ptr[F+1];if(x)for(var T=S;T<P;T++){var I=this._index[T];B(this._values[T],[I,F],C)}else{for(var H={},W=S;W<P;W++){var Z=this._index[W];H[Z]=this._values[W]}for(var f9=0;f9<k;f9++){var o9=f9 in H?H[f9]:0;B(o9,[f9,F],C)}}}},o.prototype[Symbol.iterator]=function*(){if(!this._values)throw new Error("Cannot iterate a Pattern only matrix");for(var y=this._size[1],x=0;x<y;x++)for(var C=this._ptr[x],k=this._ptr[x+1],A=C;A<k;A++){var B=this._index[A];yield{value:this._values[A],index:[B,x]}}},o.prototype.toArray=function(){return E(this._values,this._index,this._ptr,this._size,!0)},o.prototype.valueOf=function(){return E(this._values,this._index,this._ptr,this._size,!1)};function E(y,x,C,k,A){var B=k[0],F=k[1],S=[],P,T;for(P=0;P<B;P++)for(S[P]=[],T=0;T<F;T++)S[P][T]=0;for(T=0;T<F;T++)for(var I=C[T],H=C[T+1],W=I;W<H;W++)P=x[W],S[P][T]=y?A?b0(y[W]):y[W]:1;return S}return o.prototype.format=function(y){for(var x=this._size[0],C=this._size[1],k=this.density(),A="Sparse Matrix ["+s1(x,y)+" x "+s1(C,y)+"] density: "+s1(k,y)+`
`,B=0;B<C;B++)for(var F=this._ptr[B],S=this._ptr[B+1],P=F;P<S;P++){var T=this._index[P];A+=`
    (`+s1(T,y)+", "+s1(B,y)+") ==> "+(this._values?s1(this._values[P],y):"X")}return A},o.prototype.toString=function(){return s1(this.toArray())},o.prototype.toJSON=function(){return{mathjs:"SparseMatrix",values:this._values,index:this._index,ptr:this._ptr,size:this._size,datatype:this._datatype}},o.prototype.diagonal=function(y){if(y){if(T0(y)&&(y=y.toNumber()),!J9(y)||!M0(y))throw new TypeError("The parameter k must be an integer number")}else y=0;var x=y>0?y:0,C=y<0?-y:0,k=this._size[0],A=this._size[1],B=Math.min(k-C,A-x),F=[],S=[],P=[];P[0]=0;for(var T=x;T<A&&F.length<B;T++)for(var I=this._ptr[T],H=this._ptr[T+1],W=I;W<H;W++){var Z=this._index[W];if(Z===T-x+C){F.push(this._values[W]),S[F.length-1]=Z-C;break}}return P.push(F.length),new o({values:F,index:S,ptr:P,size:[B,1]})},o.fromJSON=function(y){return new o(y)},o.diagonal=function(y,x,C,k,A){if(!m0(y))throw new TypeError("Array expected, size parameter");if(y.length!==2)throw new Error("Only two dimensions matrix are supported");if(y=y.map(function(G){if(T0(G)&&(G=G.toNumber()),!J9(G)||!M0(G)||G<1)throw new Error("Size values must be positive integers");return G}),C){if(T0(C)&&(C=C.toNumber()),!J9(C)||!M0(C))throw new TypeError("The parameter k must be an integer number")}else C=0;var B=n,F=0;y5(A)&&(B=e.find(n,[A,A])||n,F=e.convert(0,A));var S=C>0?C:0,P=C<0?-C:0,T=y[0],I=y[1],H=Math.min(T-P,I-S),W;if(m0(x)){if(x.length!==H)throw new Error("Invalid value array length");W=function(X){return x[X]}}else if($0(x)){var Z=x.size();if(Z.length!==1||Z[0]!==H)throw new Error("Invalid matrix length");W=function(X){return x.get([X])}}else W=function(){return x};for(var f9=[],o9=[],t9=[],q=0;q<I;q++){t9.push(f9.length);var l9=q-S;if(l9>=0&&l9<H){var Y=W(l9);B(Y,F)||(o9.push(l9+P),f9.push(Y))}}return t9.push(f9.length),new o({values:f9,index:o9,ptr:t9,size:[T,I]})},o.prototype.swapRows=function(y,x){if(!J9(y)||!M0(y)||!J9(x)||!M0(x))throw new Error("Row index must be positive integers");if(this._size.length!==2)throw new Error("Only two dimensional matrix is supported");return f0(y,this._size[0]),f0(x,this._size[0]),o._swapRows(y,x,this._size[1],this._values,this._index,this._ptr),this},o._forEachRow=function(y,x,C,k,A){for(var B=k[y],F=k[y+1],S=B;S<F;S++)A(C[S],x[S])},o._swapRows=function(y,x,C,k,A,B){for(var F=0;F<C;F++){var S=B[F],P=B[F+1],T=d(y,S,P,A),I=d(x,S,P,A);if(T<P&&I<P&&A[T]===y&&A[I]===x){if(k){var H=k[T];k[T]=k[I],k[I]=H}continue}if(T<P&&A[T]===y&&(I>=P||A[I]!==x)){var W=k?k[T]:void 0;A.splice(I,0,x),k&&k.splice(I,0,W),A.splice(I<=T?T+1:T,1),k&&k.splice(I<=T?T+1:T,1);continue}if(I<P&&A[I]===x&&(T>=P||A[T]!==y)){var Z=k?k[I]:void 0;A.splice(T,0,y),k&&k.splice(T,0,Z),A.splice(T<=I?I+1:I,1),k&&k.splice(T<=I?I+1:I,1)}}},o},{isClass:!0}),go="matrix",Mm=["typed","Matrix","DenseMatrix","SparseMatrix"],km=Z9(go,Mm,t=>{var{typed:e,Matrix:n,DenseMatrix:i,SparseMatrix:o}=t;return e(go,{"":function(){return u([])},string:function(c){return u([],c)},"string, string":function(c,h){return u([],c,h)},Array:function(c){return u(c)},Matrix:function(c){return u(c,c.storage())},"Array | Matrix, string":u,"Array | Matrix, string, string":u});function u(a,c,h){if(c==="dense"||c==="default"||c===void 0)return new i(a,h);if(c==="sparse")return new o(a,h);throw new TypeError("Unknown matrix type "+JSON.stringify(c)+".")}}),mo="addScalar",Bm=["typed"],Nm=Z9(mo,Bm,t=>{var{typed:e}=t;return e(mo,{"number, number":Qu,"Complex, Complex":function(i,o){return i.add(o)},"BigNumber, BigNumber":function(i,o){return i.plus(o)},"bigint, bigint":function(i,o){return i+o},"Fraction, Fraction":function(i,o){return i.add(o)},"Unit, Unit":e.referToSelf(n=>(i,o)=>{if(i.value===null||i.value===void 0)throw new Error("Parameter x contains a unit with undefined value");if(o.value===null||o.value===void 0)throw new Error("Parameter y contains a unit with undefined value");if(!i.equalBase(o))throw new Error("Units do not match");var u=i.clone();return u.value=e.find(n,[u.valueType(),o.valueType()])(u.value,o.value),u.fixPrefix=!1,u})})}),Tm="matAlgo11xS0s",Pm=["typed","equalScalar"],Om=Z9(Tm,Pm,t=>{var{typed:e,equalScalar:n}=t;return function(o,u,a,c){var h=o._values,d=o._index,p=o._ptr,m=o._size,D=o._datatype;if(!h)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var w=m[0],E=m[1],y,x=n,C=0,k=a;typeof D=="string"&&(y=D,x=e.find(n,[y,y]),C=e.convert(0,y),u=e.convert(u,y),k=e.find(a,[y,y]));for(var A=[],B=[],F=[],S=0;S<E;S++){F[S]=B.length;for(var P=p[S],T=p[S+1],I=P;I<T;I++){var H=d[I],W=c?k(u,h[I]):k(h[I],u);x(W,C)||(B.push(H),A.push(W))}}return F[E]=B.length,o.createSparseMatrix({values:A,index:B,ptr:F,size:[w,E],datatype:y})}}),zm="matAlgo14xDs",Im=["typed"],Gu=Z9(zm,Im,t=>{var{typed:e}=t;return function(o,u,a,c){var h=o._data,d=o._size,p=o._datatype,m,D=a;typeof p=="string"&&(m=p,u=e.convert(u,m),D=e.find(a,[m,m]));var w=d.length>0?n(D,0,d,d[0],h,u,c):[];return o.createDenseMatrix({data:w,size:b0(d),datatype:m})};function n(i,o,u,a,c,h,d){var p=[];if(o===u.length-1)for(var m=0;m<a;m++)p[m]=d?i(h,c[m]):i(c[m],h);else for(var D=0;D<a;D++)p[D]=n(i,o+1,u,u[o+1],c[D],h,d);return p}}),Rm="matAlgo13xDD",Lm=["typed"],jm=Z9(Rm,Lm,t=>{var{typed:e}=t;return function(o,u,a){var c=o._data,h=o._size,d=o._datatype,p=u._data,m=u._size,D=u._datatype,w=[];if(h.length!==m.length)throw new X9(h.length,m.length);for(var E=0;E<h.length;E++){if(h[E]!==m[E])throw new RangeError("Dimension mismatch. Matrix A ("+h+") must match Matrix B ("+m+")");w[E]=h[E]}var y,x=a;typeof d=="string"&&d===D&&(y=d,x=e.find(a,[y,y]));var C=w.length>0?n(x,0,w,w[0],c,p):[];return o.createDenseMatrix({data:C,size:w,datatype:y})};function n(i,o,u,a,c,h){var d=[];if(o===u.length-1)for(var p=0;p<a;p++)d[p]=i(c[p],h[p]);else for(var m=0;m<a;m++)d[m]=n(i,o+1,u,u[o+1],c[m],h[m]);return d}});function S0(t,e){if(G5(t.size(),e.size()))return[t,e];var n=qu(t.size(),e.size());return[t,e].map(i=>Hm(i,n))}function Hm(t,e){return G5(t.size(),e)?t:t.create(xt(t.valueOf(),e),t.datatype())}var $m="matrixAlgorithmSuite",Vm=["typed","matrix"],Wm=Z9($m,Vm,t=>{var{typed:e,matrix:n}=t,i=jm({typed:e}),o=Gu({typed:e});return function(a){var c=a.elop,h=a.SD||a.DS,d;c?(d={"DenseMatrix, DenseMatrix":(w,E)=>i(...S0(w,E),c),"Array, Array":(w,E)=>i(...S0(n(w),n(E)),c).valueOf(),"Array, DenseMatrix":(w,E)=>i(...S0(n(w),E),c),"DenseMatrix, Array":(w,E)=>i(...S0(w,n(E)),c)},a.SS&&(d["SparseMatrix, SparseMatrix"]=(w,E)=>a.SS(...S0(w,E),c,!1)),a.DS&&(d["DenseMatrix, SparseMatrix"]=(w,E)=>a.DS(...S0(w,E),c,!1),d["Array, SparseMatrix"]=(w,E)=>a.DS(...S0(n(w),E),c,!1)),h&&(d["SparseMatrix, DenseMatrix"]=(w,E)=>h(...S0(E,w),c,!0),d["SparseMatrix, Array"]=(w,E)=>h(...S0(n(E),w),c,!0))):(d={"DenseMatrix, DenseMatrix":e.referToSelf(w=>(E,y)=>i(...S0(E,y),w)),"Array, Array":e.referToSelf(w=>(E,y)=>i(...S0(n(E),n(y)),w).valueOf()),"Array, DenseMatrix":e.referToSelf(w=>(E,y)=>i(...S0(n(E),y),w)),"DenseMatrix, Array":e.referToSelf(w=>(E,y)=>i(...S0(E,n(y)),w))},a.SS&&(d["SparseMatrix, SparseMatrix"]=e.referToSelf(w=>(E,y)=>a.SS(...S0(E,y),w,!1))),a.DS&&(d["DenseMatrix, SparseMatrix"]=e.referToSelf(w=>(E,y)=>a.DS(...S0(E,y),w,!1)),d["Array, SparseMatrix"]=e.referToSelf(w=>(E,y)=>a.DS(...S0(n(E),y),w,!1))),h&&(d["SparseMatrix, DenseMatrix"]=e.referToSelf(w=>(E,y)=>h(...S0(y,E),w,!0)),d["SparseMatrix, Array"]=e.referToSelf(w=>(E,y)=>h(...S0(n(y),E),w,!0))));var p=a.scalar||"any",m=a.Ds||a.Ss;m&&(c?(d["DenseMatrix,"+p]=(w,E)=>o(w,E,c,!1),d[p+", DenseMatrix"]=(w,E)=>o(E,w,c,!0),d["Array,"+p]=(w,E)=>o(n(w),E,c,!1).valueOf(),d[p+", Array"]=(w,E)=>o(n(E),w,c,!0).valueOf()):(d["DenseMatrix,"+p]=e.referToSelf(w=>(E,y)=>o(E,y,w,!1)),d[p+", DenseMatrix"]=e.referToSelf(w=>(E,y)=>o(y,E,w,!0)),d["Array,"+p]=e.referToSelf(w=>(E,y)=>o(n(E),y,w,!1).valueOf()),d[p+", Array"]=e.referToSelf(w=>(E,y)=>o(n(y),E,w,!0).valueOf())));var D=a.sS!==void 0?a.sS:a.Ss;return c?(a.Ss&&(d["SparseMatrix,"+p]=(w,E)=>a.Ss(w,E,c,!1)),D&&(d[p+", SparseMatrix"]=(w,E)=>D(E,w,c,!0))):(a.Ss&&(d["SparseMatrix,"+p]=e.referToSelf(w=>(E,y)=>a.Ss(E,y,w,!1))),D&&(d[p+", SparseMatrix"]=e.referToSelf(w=>(E,y)=>D(y,E,w,!0)))),c&&c.signatures&&Pp(d,c.signatures),d}}),Um="matAlgo01xDSid",qm=["typed"],Ym=Z9(Um,qm,t=>{var{typed:e}=t;return function(i,o,u,a){var c=i._data,h=i._size,d=i._datatype||i.getDataType(),p=o._values,m=o._index,D=o._ptr,w=o._size,E=o._datatype||o._data===void 0?o._datatype:o.getDataType();if(h.length!==w.length)throw new X9(h.length,w.length);if(h[0]!==w[0]||h[1]!==w[1])throw new RangeError("Dimension mismatch. Matrix A ("+h+") must match Matrix B ("+w+")");if(!p)throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");var y=h[0],x=h[1],C=typeof d=="string"&&d!=="mixed"&&d===E?d:void 0,k=C?e.find(u,[C,C]):u,A,B,F=[];for(A=0;A<y;A++)F[A]=[];var S=[],P=[];for(B=0;B<x;B++){for(var T=B+1,I=D[B],H=D[B+1],W=I;W<H;W++)A=m[W],S[A]=a?k(p[W],c[A][B]):k(c[A][B],p[W]),P[A]=T;for(A=0;A<y;A++)P[A]===T?F[A][B]=S[A]:F[A][B]=c[A][B]}return i.createDenseMatrix({data:F,size:[y,x],datatype:d===i._datatype&&E===o._datatype?C:void 0})}}),Km="matAlgo04xSidSid",Xm=["typed","equalScalar"],Qm=Z9(Km,Xm,t=>{var{typed:e,equalScalar:n}=t;return function(o,u,a){var c=o._values,h=o._index,d=o._ptr,p=o._size,m=o._datatype||o._data===void 0?o._datatype:o.getDataType(),D=u._values,w=u._index,E=u._ptr,y=u._size,x=u._datatype||u._data===void 0?u._datatype:u.getDataType();if(p.length!==y.length)throw new X9(p.length,y.length);if(p[0]!==y[0]||p[1]!==y[1])throw new RangeError("Dimension mismatch. Matrix A ("+p+") must match Matrix B ("+y+")");var C=p[0],k=p[1],A,B=n,F=0,S=a;typeof m=="string"&&m===x&&m!=="mixed"&&(A=m,B=e.find(n,[A,A]),F=e.convert(0,A),S=e.find(a,[A,A]));var P=c&&D?[]:void 0,T=[],I=[],H=c&&D?[]:void 0,W=c&&D?[]:void 0,Z=[],f9=[],o9,t9,q,l9,Y;for(t9=0;t9<k;t9++){I[t9]=T.length;var G=t9+1;for(l9=d[t9],Y=d[t9+1],q=l9;q<Y;q++)o9=h[q],T.push(o9),Z[o9]=G,H&&(H[o9]=c[q]);for(l9=E[t9],Y=E[t9+1],q=l9;q<Y;q++)if(o9=w[q],Z[o9]===G){if(H){var X=S(H[o9],D[q]);B(X,F)?Z[o9]=null:H[o9]=X}}else T.push(o9),f9[o9]=G,W&&(W[o9]=D[q]);if(H&&W)for(q=I[t9];q<T.length;)o9=T[q],Z[o9]===G?(P[q]=H[o9],q++):f9[o9]===G?(P[q]=W[o9],q++):T.splice(q,1)}return I[k]=T.length,o.createSparseMatrix({values:P,index:T,ptr:I,size:[C,k],datatype:m===o._datatype&&x===u._datatype?A:void 0})}}),Zm="matAlgo10xSids",Gm=["typed","DenseMatrix"],Jm=Z9(Zm,Gm,t=>{var{typed:e,DenseMatrix:n}=t;return function(o,u,a,c){var h=o._values,d=o._index,p=o._ptr,m=o._size,D=o._datatype;if(!h)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var w=m[0],E=m[1],y,x=a;typeof D=="string"&&(y=D,u=e.convert(u,y),x=e.find(a,[y,y]));for(var C=[],k=[],A=[],B=0;B<E;B++){for(var F=B+1,S=p[B],P=p[B+1],T=S;T<P;T++){var I=d[T];k[I]=h[T],A[I]=F}for(var H=0;H<w;H++)B===0&&(C[H]=[]),A[H]===F?C[H][B]=c?x(u,k[H]):x(k[H],u):C[H][B]=u}return new n({data:C,size:[w,E],datatype:y})}}),ev="multiplyScalar",tv=["typed"],nv=Z9(ev,tv,t=>{var{typed:e}=t;return e("multiplyScalar",{"number, number":Zu,"Complex, Complex":function(i,o){return i.mul(o)},"BigNumber, BigNumber":function(i,o){return i.times(o)},"bigint, bigint":function(i,o){return i*o},"Fraction, Fraction":function(i,o){return i.mul(o)},"number | Fraction | BigNumber | Complex, Unit":(n,i)=>i.multiply(n),"Unit, number | Fraction | BigNumber | Complex | Unit":(n,i)=>n.multiply(i)})}),vo="multiply",rv=["typed","matrix","addScalar","multiplyScalar","equalScalar","dot"],iv=Z9(vo,rv,t=>{var{typed:e,matrix:n,addScalar:i,multiplyScalar:o,equalScalar:u,dot:a}=t,c=Om({typed:e,equalScalar:u}),h=Gu({typed:e});function d(F,S){switch(F.length){case 1:switch(S.length){case 1:if(F[0]!==S[0])throw new RangeError("Dimension mismatch in multiplication. Vectors must have the same length");break;case 2:if(F[0]!==S[0])throw new RangeError("Dimension mismatch in multiplication. Vector length ("+F[0]+") must match Matrix rows ("+S[0]+")");break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix B has "+S.length+" dimensions)")}break;case 2:switch(S.length){case 1:if(F[1]!==S[0])throw new RangeError("Dimension mismatch in multiplication. Matrix columns ("+F[1]+") must match Vector length ("+S[0]+")");break;case 2:if(F[1]!==S[0])throw new RangeError("Dimension mismatch in multiplication. Matrix A columns ("+F[1]+") must match Matrix B rows ("+S[0]+")");break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix B has "+S.length+" dimensions)")}break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix A has "+F.length+" dimensions)")}}function p(F,S,P){if(P===0)throw new Error("Cannot multiply two empty vectors");return a(F,S)}function m(F,S){if(S.storage()!=="dense")throw new Error("Support for SparseMatrix not implemented");return D(F,S)}function D(F,S){var P=F._data,T=F._size,I=F._datatype||F.getDataType(),H=S._data,W=S._size,Z=S._datatype||S.getDataType(),f9=T[0],o9=W[1],t9,q=i,l9=o;I&&Z&&I===Z&&typeof I=="string"&&I!=="mixed"&&(t9=I,q=e.find(i,[t9,t9]),l9=e.find(o,[t9,t9]));for(var Y=[],G=0;G<o9;G++){for(var X=l9(P[0],H[0][G]),O=1;O<f9;O++)X=q(X,l9(P[O],H[O][G]));Y[G]=X}return F.createDenseMatrix({data:Y,size:[o9],datatype:I===F._datatype&&Z===S._datatype?t9:void 0})}var w=e("_multiplyMatrixVector",{"DenseMatrix, any":y,"SparseMatrix, any":k}),E=e("_multiplyMatrixMatrix",{"DenseMatrix, DenseMatrix":x,"DenseMatrix, SparseMatrix":C,"SparseMatrix, DenseMatrix":A,"SparseMatrix, SparseMatrix":B});function y(F,S){var P=F._data,T=F._size,I=F._datatype||F.getDataType(),H=S._data,W=S._datatype||S.getDataType(),Z=T[0],f9=T[1],o9,t9=i,q=o;I&&W&&I===W&&typeof I=="string"&&I!=="mixed"&&(o9=I,t9=e.find(i,[o9,o9]),q=e.find(o,[o9,o9]));for(var l9=[],Y=0;Y<Z;Y++){for(var G=P[Y],X=q(G[0],H[0]),O=1;O<f9;O++)X=t9(X,q(G[O],H[O]));l9[Y]=X}return F.createDenseMatrix({data:l9,size:[Z],datatype:I===F._datatype&&W===S._datatype?o9:void 0})}function x(F,S){var P=F._data,T=F._size,I=F._datatype||F.getDataType(),H=S._data,W=S._size,Z=S._datatype||S.getDataType(),f9=T[0],o9=T[1],t9=W[1],q,l9=i,Y=o;I&&Z&&I===Z&&typeof I=="string"&&I!=="mixed"&&I!=="mixed"&&(q=I,l9=e.find(i,[q,q]),Y=e.find(o,[q,q]));for(var G=[],X=0;X<f9;X++){var O=P[X];G[X]=[];for(var U=0;U<t9;U++){for(var g9=Y(O[0],H[0][U]),v9=1;v9<o9;v9++)g9=l9(g9,Y(O[v9],H[v9][U]));G[X][U]=g9}}return F.createDenseMatrix({data:G,size:[f9,t9],datatype:I===F._datatype&&Z===S._datatype?q:void 0})}function C(F,S){var P=F._data,T=F._size,I=F._datatype||F.getDataType(),H=S._values,W=S._index,Z=S._ptr,f9=S._size,o9=S._datatype||S._data===void 0?S._datatype:S.getDataType();if(!H)throw new Error("Cannot multiply Dense Matrix times Pattern only Matrix");var t9=T[0],q=f9[1],l9,Y=i,G=o,X=u,O=0;I&&o9&&I===o9&&typeof I=="string"&&I!=="mixed"&&(l9=I,Y=e.find(i,[l9,l9]),G=e.find(o,[l9,l9]),X=e.find(u,[l9,l9]),O=e.convert(0,l9));for(var U=[],g9=[],v9=[],E9=S.createSparseMatrix({values:U,index:g9,ptr:v9,size:[t9,q],datatype:I===F._datatype&&o9===S._datatype?l9:void 0}),_9=0;_9<q;_9++){v9[_9]=g9.length;var A9=Z[_9],O9=Z[_9+1];if(O9>A9)for(var b9=0,z9=0;z9<t9;z9++){for(var k0=z9+1,p0=void 0,H9=A9;H9<O9;H9++){var a0=W[H9];b9!==k0?(p0=G(P[z9][a0],H[H9]),b9=k0):p0=Y(p0,G(P[z9][a0],H[H9]))}b9===k0&&!X(p0,O)&&(g9.push(z9),U.push(p0))}}return v9[q]=g9.length,E9}function k(F,S){var P=F._values,T=F._index,I=F._ptr,H=F._datatype||F._data===void 0?F._datatype:F.getDataType();if(!P)throw new Error("Cannot multiply Pattern only Matrix times Dense Matrix");var W=S._data,Z=S._datatype||S.getDataType(),f9=F._size[0],o9=S._size[0],t9=[],q=[],l9=[],Y,G=i,X=o,O=u,U=0;H&&Z&&H===Z&&typeof H=="string"&&H!=="mixed"&&(Y=H,G=e.find(i,[Y,Y]),X=e.find(o,[Y,Y]),O=e.find(u,[Y,Y]),U=e.convert(0,Y));var g9=[],v9=[];l9[0]=0;for(var E9=0;E9<o9;E9++){var _9=W[E9];if(!O(_9,U))for(var A9=I[E9],O9=I[E9+1],b9=A9;b9<O9;b9++){var z9=T[b9];v9[z9]?g9[z9]=G(g9[z9],X(_9,P[b9])):(v9[z9]=!0,q.push(z9),g9[z9]=X(_9,P[b9]))}}for(var k0=q.length,p0=0;p0<k0;p0++){var H9=q[p0];t9[p0]=g9[H9]}return l9[1]=q.length,F.createSparseMatrix({values:t9,index:q,ptr:l9,size:[f9,1],datatype:H===F._datatype&&Z===S._datatype?Y:void 0})}function A(F,S){var P=F._values,T=F._index,I=F._ptr,H=F._datatype||F._data===void 0?F._datatype:F.getDataType();if(!P)throw new Error("Cannot multiply Pattern only Matrix times Dense Matrix");var W=S._data,Z=S._datatype||S.getDataType(),f9=F._size[0],o9=S._size[0],t9=S._size[1],q,l9=i,Y=o,G=u,X=0;H&&Z&&H===Z&&typeof H=="string"&&H!=="mixed"&&(q=H,l9=e.find(i,[q,q]),Y=e.find(o,[q,q]),G=e.find(u,[q,q]),X=e.convert(0,q));for(var O=[],U=[],g9=[],v9=F.createSparseMatrix({values:O,index:U,ptr:g9,size:[f9,t9],datatype:H===F._datatype&&Z===S._datatype?q:void 0}),E9=[],_9=[],A9=0;A9<t9;A9++){g9[A9]=U.length;for(var O9=A9+1,b9=0;b9<o9;b9++){var z9=W[b9][A9];if(!G(z9,X))for(var k0=I[b9],p0=I[b9+1],H9=k0;H9<p0;H9++){var a0=T[H9];_9[a0]!==O9?(_9[a0]=O9,U.push(a0),E9[a0]=Y(z9,P[H9])):E9[a0]=l9(E9[a0],Y(z9,P[H9]))}}for(var q0=g9[A9],g1=U.length,c1=q0;c1<g1;c1++){var n5=U[c1];O[c1]=E9[n5]}}return g9[t9]=U.length,v9}function B(F,S){var P=F._values,T=F._index,I=F._ptr,H=F._datatype||F._data===void 0?F._datatype:F.getDataType(),W=S._values,Z=S._index,f9=S._ptr,o9=S._datatype||S._data===void 0?S._datatype:S.getDataType(),t9=F._size[0],q=S._size[1],l9=P&&W,Y,G=i,X=o;H&&o9&&H===o9&&typeof H=="string"&&H!=="mixed"&&(Y=H,G=e.find(i,[Y,Y]),X=e.find(o,[Y,Y]));for(var O=l9?[]:void 0,U=[],g9=[],v9=F.createSparseMatrix({values:O,index:U,ptr:g9,size:[t9,q],datatype:H===F._datatype&&o9===S._datatype?Y:void 0}),E9=l9?[]:void 0,_9=[],A9,O9,b9,z9,k0,p0,H9,a0,q0=0;q0<q;q0++){g9[q0]=U.length;var g1=q0+1;for(k0=f9[q0],p0=f9[q0+1],z9=k0;z9<p0;z9++)if(a0=Z[z9],l9)for(O9=I[a0],b9=I[a0+1],A9=O9;A9<b9;A9++)H9=T[A9],_9[H9]!==g1?(_9[H9]=g1,U.push(H9),E9[H9]=X(W[z9],P[A9])):E9[H9]=G(E9[H9],X(W[z9],P[A9]));else for(O9=I[a0],b9=I[a0+1],A9=O9;A9<b9;A9++)H9=T[A9],_9[H9]!==g1&&(_9[H9]=g1,U.push(H9));if(l9)for(var c1=g9[q0],n5=U.length,W1=c1;W1<n5;W1++){var r5=U[W1];O[W1]=E9[r5]}}return g9[q]=U.length,v9}return e(vo,o,{"Array, Array":e.referTo("Matrix, Matrix",F=>(S,P)=>{d(a1(S),a1(P));var T=F(n(S),n(P));return $0(T)?T.valueOf():T}),"Matrix, Matrix":function(S,P){var T=S.size(),I=P.size();return d(T,I),T.length===1?I.length===1?p(S,P,T[0]):m(S,P):I.length===1?w(S,P):E(S,P)},"Matrix, Array":e.referTo("Matrix,Matrix",F=>(S,P)=>F(S,n(P))),"Array, Matrix":e.referToSelf(F=>(S,P)=>F(n(S,P.storage()),P)),"SparseMatrix, any":function(S,P){return c(S,P,o,!1)},"DenseMatrix, any":function(S,P){return h(S,P,o,!1)},"any, SparseMatrix":function(S,P){return c(P,S,o,!0)},"any, DenseMatrix":function(S,P){return h(P,S,o,!0)},"Array, any":function(S,P){return h(n(S),P,o,!1).valueOf()},"any, Array":function(S,P){return h(n(P),S,o,!0).valueOf()},"any, any":o,"any, any, ...any":e.referToSelf(F=>(S,P,T)=>{for(var I=F(S,P),H=0;H<T.length;H++)I=F(I,T[H]);return I})})}),yo="conj",sv=["typed"],ov=Z9(yo,sv,t=>{var{typed:e}=t;return e(yo,{"number | BigNumber | Fraction":n=>n,Complex:n=>n.conjugate(),"Array | Matrix":e.referToSelf(n=>i=>Wt(i,n))})}),Do="concat",uv=["typed","matrix","isInteger"],av=Z9(Do,uv,t=>{var{typed:e,matrix:n,isInteger:i}=t;return e(Do,{"...Array | Matrix | number | BigNumber":function(u){var a,c=u.length,h=-1,d,p=!1,m=[];for(a=0;a<c;a++){var D=u[a];if($0(D)&&(p=!0),J9(D)||T0(D)){if(a!==c-1)throw new Error("Dimension must be specified as last argument");if(d=h,h=D.valueOf(),!i(h))throw new TypeError("Integer number expected for dimension");if(h<0||a>0&&h>d)throw new M2(h,d+1)}else{var w=b0(D).valueOf(),E=a1(w);if(m[a]=w,d=h,h=E.length-1,a>0&&h!==d)throw new X9(d+1,h+1)}}if(m.length===0)throw new SyntaxError("At least one matrix expected");for(var y=m.shift();m.length;)y=Uu(y,m.shift(),h);return p?n(y):y},"...string":function(u){return u.join("")}})});function lv(){throw new Error('No "matrix" implementation available')}var wo="size",cv=["typed","config","?matrix"],fv=Z9(wo,cv,t=>{var{typed:e,config:n,matrix:i}=t;return e(wo,{Matrix:function(u){return u.create(u.size(),"number")},Array:a1,string:function(u){return n.matrix==="Array"?[u.length]:i([u.length],"dense","number")},"number | Complex | BigNumber | Unit | boolean | null":function(u){return n.matrix==="Array"?[]:i?i([],"dense","number"):lv()}})}),_o="add",hv=["typed","matrix","addScalar","equalScalar","DenseMatrix","SparseMatrix","concat"],dv=Z9(_o,hv,t=>{var{typed:e,matrix:n,addScalar:i,equalScalar:o,DenseMatrix:u,SparseMatrix:a,concat:c}=t,h=Ym({typed:e}),d=Qm({typed:e,equalScalar:o}),p=Jm({typed:e,DenseMatrix:u}),m=Wm({typed:e,matrix:n,concat:c});return e(_o,{"any, any":i,"any, any, ...any":e.referToSelf(D=>(w,E,y)=>{for(var x=D(w,E),C=0;C<y.length;C++)x=D(x,y[C]);return x})},m({elop:i,DS:h,SS:d,Ss:p}))}),xo="dot",pv=["typed","addScalar","multiplyScalar","conj","size"],gv=Z9(xo,pv,t=>{var{typed:e,addScalar:n,multiplyScalar:i,conj:o,size:u}=t;return e(xo,{"Array | DenseMatrix, Array | DenseMatrix":c,"SparseMatrix, SparseMatrix":h});function a(p,m){var D=d(p),w=d(m),E,y;if(D.length===1)E=D[0];else if(D.length===2&&D[1]===1)E=D[0];else throw new RangeError("Expected a column vector, instead got a matrix of size ("+D.join(", ")+")");if(w.length===1)y=w[0];else if(w.length===2&&w[1]===1)y=w[0];else throw new RangeError("Expected a column vector, instead got a matrix of size ("+w.join(", ")+")");if(E!==y)throw new RangeError("Vectors must have equal length ("+E+" != "+y+")");if(E===0)throw new RangeError("Cannot calculate the dot product of empty vectors");return E}function c(p,m){var D=a(p,m),w=$0(p)?p._data:p,E=$0(p)?p._datatype||p.getDataType():void 0,y=$0(m)?m._data:m,x=$0(m)?m._datatype||m.getDataType():void 0,C=d(p).length===2,k=d(m).length===2,A=n,B=i;if(E&&x&&E===x&&typeof E=="string"&&E!=="mixed"){var F=E;A=e.find(n,[F,F]),B=e.find(i,[F,F])}if(!C&&!k){for(var S=B(o(w[0]),y[0]),P=1;P<D;P++)S=A(S,B(o(w[P]),y[P]));return S}if(!C&&k){for(var T=B(o(w[0]),y[0][0]),I=1;I<D;I++)T=A(T,B(o(w[I]),y[I][0]));return T}if(C&&!k){for(var H=B(o(w[0][0]),y[0]),W=1;W<D;W++)H=A(H,B(o(w[W][0]),y[W]));return H}if(C&&k){for(var Z=B(o(w[0][0]),y[0][0]),f9=1;f9<D;f9++)Z=A(Z,B(o(w[f9][0]),y[f9][0]));return Z}}function h(p,m){a(p,m);for(var D=p._index,w=p._values,E=m._index,y=m._values,x=0,C=n,k=i,A=0,B=0;A<D.length&&B<E.length;){var F=D[A],S=E[B];if(F<S){A++;continue}if(F>S){B++;continue}F===S&&(x=C(x,k(w[A],y[B])),A++,B++)}return x}function d(p){return $0(p)?p.size():u(p)}}),mv=Vg({config:k4}),vv=Kg({}),yv=tm({}),Ut=im({}),qt=ym({Matrix:Ut}),M1=qp({BigNumber:mv,Complex:vv,DenseMatrix:qt,Fraction:yv}),Yt=Nm({typed:M1}),Dv=ov({typed:M1}),Kt=Fm({config:k4,typed:M1}),wv=wm({typed:M1}),Ju=nv({typed:M1}),ea=bm({Matrix:Ut,equalScalar:Kt,typed:M1}),z4=km({DenseMatrix:qt,Matrix:Ut,SparseMatrix:ea,typed:M1}),_v=fv({matrix:z4,config:k4,typed:M1}),xv=av({isInteger:wv,matrix:z4,typed:M1}),Ev=dv({DenseMatrix:qt,SparseMatrix:ea,addScalar:Yt,concat:xv,equalScalar:Kt,matrix:z4,typed:M1}),Cv=gv({addScalar:Yt,conj:Dv,multiplyScalar:Ju,size:_v,typed:M1}),Fv=iv({addScalar:Yt,dot:Cv,equalScalar:Kt,matrix:z4,multiplyScalar:Ju,typed:M1});const Sv=require("./util/cholesky"),Av=require("./normal");function bv(t,e,n=null){if(!Array.isArray(t)||!Array.isArray(e))throw new Error("Means and covariance must be arrays.");const i=t.length;if(e.length!==i||e.some(a=>a.length!==i))throw new Error("Covariance matrix must be square and match the size of the means array.");let o;try{o=Sv(e)}catch{throw new Error("Covariance matrix is not positive semi-definite.")}const u=[];for(let a=0;a<n;a++){const c=Av(0,1,i),h=Ev(t,Fv(o,c));u.push(h)}return n===1?u[0]:u}ta.exports=bv;const Mv=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),kv=Wl(Mv);var nt,Eo;function Bv(){if(Eo)return nt;Eo=1;const t=m3(),e=vu();function n(i,o=null){if(!Number.isInteger(i)||i<=0)throw new Error("Degrees of freedom (k) must be a positive integer.");return t(()=>{let a=0;for(let c=0;c<i;c++){const h=e();a+=h*h}return a},o)}return nt=n,nt}var rt,Co;function Nv(){if(Co)return rt;Co=1;const{seed:t}=g3(),e=mu(),n=$d(),i=vu(),o=qd(),u=Yd(),a=yu(),c=Kd(),h=kv,d=Bv();return rt={seed:t,randint:e,uniform:n,normal:i,cauchy:o,exponential:u,shuffle:a,permutation:c,multivariateNormal:h,chisquare:d},rt}var L1=Nv();function Tv({size:t}){let e=L1.randint(3,10);const n=[],i=[];for(let u=0;u<e;u++)for(;1/(u+1)/(u+1)<L1.uniform();){const a=L1.uniform(0,Math.PI/2),c=L1.uniform(u,u+1)/e,h=c*Math.cos(a),d=1-c*Math.sin(a);n.push([t*h,t*d]);const p=L1.uniform(1/(u+2)/(u+2),1/(u+1)/(u+1));i.push(t*p)}const o=D9.jsx("rect",{x:"0",y:"0",width:"32",height:"32",rx:"8",ry:"8",fill:"yellow"});return D9.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",xmlnsXlink:"http://www.w3.org/1999/xlink","aria-hidden":"true",role:"img",className:"randlib-logo",width:t,height:t,preserveAspectRatio:"xMidYMid meet",viewBox:`0 0 ${t} ${t}`,children:[D9.jsx("defs",{children:D9.jsx("clipPath",{id:"clip-rect",children:o})}),o,D9.jsxs("g",{clipPath:"url(#clip-rect)",children:[D9.jsx("circle",{cx:"0",cy:"32",r:"8",fill:"black"}),n.map((u,a)=>{const c=n[a][0],h=n[a][1],d=i[a];return D9.jsx("circle",{cx:c,cy:h,r:d,fill:"black"},a)})]})]})}const l6=[{name:"randint",sampler:t=>L1.randint(t.low,t.high,t.size),parameters:{low:0,high:6}},{name:"uniform",sampler:t=>L1.uniform(t.low,t.high,t.size),parameters:{low:0,high:1}},{name:"normal",sampler:t=>L1.normal(t.loc,t.scale,t.size),parameters:{loc:0,scale:1}},{name:"cauchy",sampler:t=>L1.cauchy(t.median,t.gamma,t.size),parameters:{median:0,gamma:1}},{name:"exponential",sampler:t=>L1.exponential(t.lambda,t.size),parameters:{lambda:1}},{name:"chisquare",sampler:t=>L1.chisquare(t.k,t.size),parameters:{k:6}}],Fo=0;function Pv(t,e){t.sort((h,d)=>h-d);const n=t[0],u=(t[t.length-1]-n)/e,a=Array(e).fill(0);t.forEach(h=>{const d=Math.min(Math.floor((h-n)/u),e-1);a[d]++});const c=[];for(let h=0;h<e;h++){const d=n+h*u,p=d+u;c.push(`${d.toFixed(1)}-${p.toFixed(1)}`)}return{labels:c,values:a}}function So(t){return l6.find(e=>e.name===t).sampler}function Ao(t){const e=document.querySelector(t),n=document.createRange();n.selectNode(e),window.getSelection().removeAllRanges(),window.getSelection().addRange(n);try{document.execCommand("copy")}catch{}window.getSelection().removeAllRanges()}const Ov=()=>{const[t,e]=Z0.useState(l6[Fo].name),[n,i]=Z0.useState(l6[Fo].parameters),[o,u]=Z0.useState(()=>So(t)({...n,size:1e3}));function a(m){const D=m.target.value;e(D);const w=l6.find(E=>E.name===D);i(w.parameters),h(w.name,w.parameters)}function c(m,D){const w={...n,[m]:Number(D)};i(w),h(t,w)}function h(m,D){const w=So(m);try{const E=w({...D,size:1e3});u(E)}catch{u(null),console.log("Parámetro incorrecto.")}}const d=100;let p=null;if(o){const m=Pv(o,d);p=D9.jsx(jd,{data:m})}else p=D9.jsx("p",{children:"Incorrect parameters"});return D9.jsxs(D9.Fragment,{children:[D9.jsxs("div",{className:"App",children:[D9.jsxs("div",{className:"main",children:[D9.jsxs("h1",{children:[D9.jsx(Tv,{size:32}),D9.jsx("a",{href:"https://www.npmjs.com/package/randlibjs",className:"library-link",children:"Randlibjs"})]}),D9.jsx("h2",{children:"Powerful Lightweight Random Number Generators"}),D9.jsx("p",{children:"Randlibjs is a powerful JavaScript library designed to provide a wide range of random number distributions efficiently. Whether you need uniform, normal, exponential, or other distributions, Ranlib.js makes it easy to generate pseudo-random samples."}),D9.jsx("p",{children:"The library supports various statistical distributions, giving you flexibility for simulations, games, data analysis, and more. While the showcase here focuses on random number generation and histogram visualization, Randlibjs also offers additional powerful methods such as seeding, shuffling, and permutation for even greater control over your random processes."}),D9.jsx("p",{children:"Explore the full potential of random number generation with Randlibjs today!"}),D9.jsx("h2",{children:"Installation"}),D9.jsx("p",{children:"To get started with Randlibjs, you can install it via npm. Simply run the following command in your terminal:"}),D9.jsx("div",{className:"code-box",children:D9.jsx("code",{id:"npm-command",children:"npm install randlibjs"})}),D9.jsx("button",{className:"copy-btn",onClick:()=>Ao("#npm-command"),children:"Copy"}),D9.jsx("h2",{children:"Usage"}),D9.jsx("p",{children:"After installing the library, you can import it into your project and start generating random numbers. Here's an example of how to generate random numbers using a standard normal distribution:"}),D9.jsx("div",{className:"code-box",children:D9.jsxs("code",{id:"example-code",children:["import normal from 'randlibjs';",D9.jsx("br",{}),D9.jsx("br",{}),"// Generate a sample from a standard normal distribution",D9.jsx("br",{}),"const sample = normal(low=0.0, high=1.0, size=10);",D9.jsx("br",{}),D9.jsx("br",{}),"// Output result sample",D9.jsx("br",{}),"console.log(sample);"]})}),D9.jsx("button",{className:"copy-btn",onClick:()=>Ao("#example-code"),children:"Copy"}),D9.jsxs("div",{children:[D9.jsx("h2",{children:"Showcase"}),D9.jsx("p",{children:"On this page, you can interactively generate random numbers and visualize the results with a dynamic histogram. Simply select the distribution you want, adjust its parameters to suit your requirements, and watch the sample data update in real time."}),p]}),D9.jsx(Hd,{distributions:l6,selectedDistribution:t,handleDistributionSelect:a,parameters:n,handleParamChange:c,resample:()=>h(t,n)})]}),D9.jsx("div",{children:D9.jsxs("p",{children:["Visit official Randlibjs npm page in ",D9.jsx("a",{href:"https://www.npmjs.com/package/randlibjs",className:"library-link",children:"this link"}),"."]})})]}),D9.jsx("footer",{className:"footer",children:D9.jsx("div",{className:"text-center",children:D9.jsxs("small",{className:"copyright",children:["Designed by ",D9.jsx("a",{href:"https://pereradrian.github.io",target:"_blank",children:"Adri Mu"})]})})})]})};Jl.createRoot(document.getElementById("root")).render(D9.jsx(Z0.StrictMode,{children:D9.jsx(Ov,{})}))});export default zv();
//# sourceMappingURL=index-C8O9e7tR.js.map
