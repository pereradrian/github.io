{"version":3,"file":"index-C8O9e7tR.js","sources":["../../node_modules/react/cjs/react.production.min.js","../../node_modules/react/index.js","../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/scheduler/cjs/scheduler.production.min.js","../../node_modules/scheduler/index.js","../../node_modules/react-dom/cjs/react-dom.production.min.js","../../node_modules/react-dom/index.js","../../node_modules/react-dom/client.js","../../node_modules/@kurkle/color/dist/color.esm.js","../../node_modules/chart.js/dist/chunks/helpers.segment.js","../../node_modules/chart.js/dist/chart.js","../../node_modules/react-chartjs-2/dist/index.js","../../src/Histogram.jsx","../../src/DistributorSelector.jsx","../../node_modules/randlibjs/src/functions/seed.js","../../node_modules/randlibjs/src/functions/base-generator.js","../../node_modules/randlibjs/src/functions/randint.js","../../node_modules/randlibjs/src/functions/uniform.js","../../node_modules/randlibjs/src/functions/util/normal-cdf-data.js","../../node_modules/randlibjs/src/functions/util/util.js","../../node_modules/randlibjs/src/functions/util/inverse-normal-cdf.js","../../node_modules/randlibjs/src/functions/normal.js","../../node_modules/randlibjs/src/functions/cauchy.js","../../node_modules/randlibjs/src/functions/exponential.js","../../node_modules/randlibjs/src/functions/shuffle.js","../../node_modules/randlibjs/src/functions/permutation.js","../../node_modules/@babel/runtime/helpers/esm/extends.js","../../node_modules/mathjs/lib/esm/core/config.js","../../node_modules/mathjs/lib/esm/utils/customs.js","../../node_modules/mathjs/lib/esm/utils/map.js","../../node_modules/mathjs/lib/esm/utils/is.js","../../node_modules/mathjs/lib/esm/utils/object.js","../../node_modules/mathjs/lib/esm/core/function/config.js","../../node_modules/mathjs/lib/esm/entry/configReadonly.js","../../node_modules/typed-function/lib/esm/typed-function.mjs","../../node_modules/mathjs/lib/esm/utils/factory.js","../../node_modules/mathjs/lib/esm/utils/number.js","../../node_modules/mathjs/lib/esm/core/function/typed.js","../../node_modules/decimal.js/decimal.mjs","../../node_modules/mathjs/lib/esm/type/bignumber/BigNumber.js","../../node_modules/complex.js/dist/complex.mjs","../../node_modules/mathjs/lib/esm/type/complex/Complex.js","../../node_modules/fraction.js/dist/fraction.mjs","../../node_modules/mathjs/lib/esm/type/fraction/Fraction.js","../../node_modules/mathjs/lib/esm/type/matrix/Matrix.js","../../node_modules/mathjs/lib/esm/utils/bignumber/formatter.js","../../node_modules/mathjs/lib/esm/utils/string.js","../../node_modules/mathjs/lib/esm/error/DimensionError.js","../../node_modules/mathjs/lib/esm/error/IndexError.js","../../node_modules/mathjs/lib/esm/utils/array.js","../../node_modules/mathjs/lib/esm/utils/optimizeCallback.js","../../node_modules/mathjs/lib/esm/type/matrix/DenseMatrix.js","../../node_modules/mathjs/lib/esm/utils/collection.js","../../node_modules/mathjs/lib/esm/function/utils/isInteger.js","../../node_modules/mathjs/lib/esm/plain/number/arithmetic.js","../../node_modules/mathjs/lib/esm/utils/bignumber/nearlyEqual.js","../../node_modules/mathjs/lib/esm/utils/complex.js","../../node_modules/mathjs/lib/esm/function/relational/compareUnits.js","../../node_modules/mathjs/lib/esm/function/relational/equalScalar.js","../../node_modules/mathjs/lib/esm/type/matrix/SparseMatrix.js","../../node_modules/mathjs/lib/esm/type/matrix/function/matrix.js","../../node_modules/mathjs/lib/esm/function/arithmetic/addScalar.js","../../node_modules/mathjs/lib/esm/type/matrix/utils/matAlgo11xS0s.js","../../node_modules/mathjs/lib/esm/type/matrix/utils/matAlgo14xDs.js","../../node_modules/mathjs/lib/esm/type/matrix/utils/matAlgo13xDD.js","../../node_modules/mathjs/lib/esm/type/matrix/utils/broadcast.js","../../node_modules/mathjs/lib/esm/type/matrix/utils/matrixAlgorithmSuite.js","../../node_modules/mathjs/lib/esm/type/matrix/utils/matAlgo01xDSid.js","../../node_modules/mathjs/lib/esm/type/matrix/utils/matAlgo04xSidSid.js","../../node_modules/mathjs/lib/esm/type/matrix/utils/matAlgo10xSids.js","../../node_modules/mathjs/lib/esm/function/arithmetic/multiplyScalar.js","../../node_modules/mathjs/lib/esm/function/arithmetic/multiply.js","../../node_modules/mathjs/lib/esm/function/complex/conj.js","../../node_modules/mathjs/lib/esm/function/matrix/concat.js","../../node_modules/mathjs/lib/esm/utils/noop.js","../../node_modules/mathjs/lib/esm/function/matrix/size.js","../../node_modules/mathjs/lib/esm/function/arithmetic/add.js","../../node_modules/mathjs/lib/esm/function/matrix/dot.js","../../node_modules/mathjs/lib/esm/entry/pureFunctionsAny.generated.js","../../node_modules/randlibjs/src/functions/multivariate-normal.js","../../node_modules/randlibjs/src/functions/chisquare.js","../../node_modules/randlibjs/index.js","../../src/RandlibLogo.jsx","../../src/App.jsx","../../src/main.jsx"],"sourcesContent":["/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};function X(){throw Error(\"act(...) is not supported in production builds of React.\");}\nexports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;exports.act=X;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=X;exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};\nexports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};\nexports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};exports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.3.1\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;\nfunction Lg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction Mg(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function Ng(a){var b=a._init;return b(a._payload)}\nfunction Og(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Pg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Qg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&Ng(f)===b.type))return d=e(b,c.props),d.ref=Lg(a,b,c),d.return=a,d;d=Rg(c.type,c.key,c.props,null,a.mode,d);d.ref=Lg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=Sg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Tg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=Qg(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=Rg(b.type,b.key,b.props,null,a.mode,c),\nc.ref=Lg(a,null,b),c.return=a,c;case wa:return b=Sg(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Tg(b,a.mode,c,null),b.return=a,b;Mg(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);Mg(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);Mg(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&Ng(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=Lg(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Tg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Rg(f.type,f.key,f.props,null,a.mode,h),h.ref=Lg(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Sg(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);Mg(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=Qg(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Ug=Og(!0),Vg=Og(!1),Wg=Uf(null),Xg=null,Yg=null,Zg=null;function $g(){Zg=Yg=Xg=null}function ah(a){var b=Wg.current;E(Wg);a._currentValue=b}function bh(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}\nfunction ch(a,b){Xg=a;Zg=Yg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(dh=!0),a.firstContext=null)}function eh(a){var b=a._currentValue;if(Zg!==a)if(a={context:a,memoizedValue:b,next:null},null===Yg){if(null===Xg)throw Error(p(308));Yg=a;Xg.dependencies={lanes:0,firstContext:a}}else Yg=Yg.next=a;return b}var fh=null;function gh(a){null===fh?fh=[a]:fh.push(a)}\nfunction hh(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,gh(b)):(c.next=e.next,e.next=c);b.interleaved=c;return ih(a,d)}function ih(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var jh=!1;function kh(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction lh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function mh(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction nh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return ih(a,c)}e=d.interleaved;null===e?(b.next=b,gh(d)):(b.next=e.next,e.next=b);d.interleaved=b;return ih(a,c)}function oh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction ph(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction qh(a,b,c,d){var e=a.updateQueue;jh=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:jh=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);rh|=g;a.lanes=g;a.memoizedState=q}}\nfunction sh(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var th={},uh=Uf(th),vh=Uf(th),wh=Uf(th);function xh(a){if(a===th)throw Error(p(174));return a}\nfunction yh(a,b){G(wh,b);G(vh,a);G(uh,th);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(uh);G(uh,b)}function zh(){E(uh);E(vh);E(wh)}function Ah(a){xh(wh.current);var b=xh(uh.current);var c=lb(b,a.type);b!==c&&(G(vh,a),G(uh,c))}function Bh(a){vh.current===a&&(E(uh),E(vh))}var L=Uf(0);\nfunction Ch(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Dh=[];\nfunction Eh(){for(var a=0;a<Dh.length;a++)Dh[a]._workInProgressVersionPrimary=null;Dh.length=0}var Fh=ua.ReactCurrentDispatcher,Gh=ua.ReactCurrentBatchConfig,Hh=0,M=null,N=null,O=null,Ih=!1,Jh=!1,Kh=0,Lh=0;function P(){throw Error(p(321));}function Mh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Nh(a,b,c,d,e,f){Hh=f;M=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Fh.current=null===a||null===a.memoizedState?Oh:Ph;a=c(d,e);if(Jh){f=0;do{Jh=!1;Kh=0;if(25<=f)throw Error(p(301));f+=1;O=N=null;b.updateQueue=null;Fh.current=Qh;a=c(d,e)}while(Jh)}Fh.current=Rh;b=null!==N&&null!==N.next;Hh=0;O=N=M=null;Ih=!1;if(b)throw Error(p(300));return a}function Sh(){var a=0!==Kh;Kh=0;return a}\nfunction Th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===O?M.memoizedState=O=a:O=O.next=a;return O}function Uh(){if(null===N){var a=M.alternate;a=null!==a?a.memoizedState:null}else a=N.next;var b=null===O?M.memoizedState:O.next;if(null!==b)O=b,N=a;else{if(null===a)throw Error(p(310));N=a;a={memoizedState:N.memoizedState,baseState:N.baseState,baseQueue:N.baseQueue,queue:N.queue,next:null};null===O?M.memoizedState=O=a:O=O.next=a}return O}\nfunction Vh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Wh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=N,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Hh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;M.lanes|=m;rh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(dh=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,M.lanes|=f,rh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction Xh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(dh=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function Yh(){}\nfunction Zh(a,b){var c=M,d=Uh(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,dh=!0);d=d.queue;$h(ai.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==O&&O.memoizedState.tag&1){c.flags|=2048;bi(9,ci.bind(null,c,d,e,b),void 0,null);if(null===Q)throw Error(p(349));0!==(Hh&30)||di(c,b,e)}return e}function di(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction ci(a,b,c,d){b.value=c;b.getSnapshot=d;ei(b)&&fi(a)}function ai(a,b,c){return c(function(){ei(b)&&fi(a)})}function ei(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function fi(a){var b=ih(a,1);null!==b&&gi(b,a,1,-1)}\nfunction hi(a){var b=Th();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Vh,lastRenderedState:a};b.queue=a;a=a.dispatch=ii.bind(null,M,a);return[b.memoizedState,a]}\nfunction bi(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function ji(){return Uh().memoizedState}function ki(a,b,c,d){var e=Th();M.flags|=a;e.memoizedState=bi(1|b,c,void 0,void 0===d?null:d)}\nfunction li(a,b,c,d){var e=Uh();d=void 0===d?null:d;var f=void 0;if(null!==N){var g=N.memoizedState;f=g.destroy;if(null!==d&&Mh(d,g.deps)){e.memoizedState=bi(b,c,f,d);return}}M.flags|=a;e.memoizedState=bi(1|b,c,f,d)}function mi(a,b){return ki(8390656,8,a,b)}function $h(a,b){return li(2048,8,a,b)}function ni(a,b){return li(4,2,a,b)}function oi(a,b){return li(4,4,a,b)}\nfunction pi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function qi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return li(4,4,pi.bind(null,b,a),c)}function ri(){}function si(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction ti(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function ui(a,b,c){if(0===(Hh&21))return a.baseState&&(a.baseState=!1,dh=!0),a.memoizedState=c;He(c,b)||(c=yc(),M.lanes|=c,rh|=c,a.baseState=!0);return b}function vi(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Gh.transition;Gh.transition={};try{a(!1),b()}finally{C=c,Gh.transition=d}}function wi(){return Uh().memoizedState}\nfunction xi(a,b,c){var d=yi(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,c);else if(c=hh(a,b,c,d),null!==c){var e=R();gi(c,a,d,e);Bi(c,b,d)}}\nfunction ii(a,b,c){var d=yi(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,gh(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=hh(a,b,e,d);null!==c&&(e=R(),gi(c,a,d,e),Bi(c,b,d))}}\nfunction zi(a){var b=a.alternate;return a===M||null!==b&&b===M}function Ai(a,b){Jh=Ih=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Bi(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar Rh={readContext:eh,useCallback:P,useContext:P,useEffect:P,useImperativeHandle:P,useInsertionEffect:P,useLayoutEffect:P,useMemo:P,useReducer:P,useRef:P,useState:P,useDebugValue:P,useDeferredValue:P,useTransition:P,useMutableSource:P,useSyncExternalStore:P,useId:P,unstable_isNewReconciler:!1},Oh={readContext:eh,useCallback:function(a,b){Th().memoizedState=[a,void 0===b?null:b];return a},useContext:eh,useEffect:mi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ki(4194308,\n4,pi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ki(4194308,4,a,b)},useInsertionEffect:function(a,b){return ki(4,2,a,b)},useMemo:function(a,b){var c=Th();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=xi.bind(null,M,a);return[d.memoizedState,a]},useRef:function(a){var b=\nTh();a={current:a};return b.memoizedState=a},useState:hi,useDebugValue:ri,useDeferredValue:function(a){return Th().memoizedState=a},useTransition:function(){var a=hi(!1),b=a[0];a=vi.bind(null,a[1]);Th().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=M,e=Th();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===Q)throw Error(p(349));0!==(Hh&30)||di(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;mi(ai.bind(null,d,\nf,a),[a]);d.flags|=2048;bi(9,ci.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=Th(),b=Q.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Kh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Lh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Ph={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Wh,useRef:ji,useState:function(){return Wh(Vh)},\nuseDebugValue:ri,useDeferredValue:function(a){var b=Uh();return ui(b,N.memoizedState,a)},useTransition:function(){var a=Wh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1},Qh={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Xh,useRef:ji,useState:function(){return Xh(Vh)},useDebugValue:ri,useDeferredValue:function(a){var b=Uh();return null===\nN?b.memoizedState=a:ui(b,N.memoizedState,a)},useTransition:function(){var a=Xh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1};function Ci(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}function Di(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Ei={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=R(),d=\nyi(a),e=mh(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=nh(a,e,d);null!==b&&(gi(b,a,d,c),oh(b,a,d))}};function Fi(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction Gi(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=eh(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Ei;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Hi(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Ei.enqueueReplaceState(b,b.state,null)}\nfunction Ii(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs={};kh(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=eh(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Di(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Ei.enqueueReplaceState(e,e.state,null),qh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}function Ji(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}\nfunction Ki(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}function Li(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Mi=\"function\"===typeof WeakMap?WeakMap:Map;function Ni(a,b,c){c=mh(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Oi||(Oi=!0,Pi=d);Li(a,b)};return c}\nfunction Qi(a,b,c){c=mh(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Li(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Li(a,b);\"function\"!==typeof d&&(null===Ri?Ri=new Set([this]):Ri.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Si(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Mi;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ti.bind(null,a,b,c),b.then(a,a))}function Ui(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Vi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=mh(-1,1),b.tag=2,nh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Wi=ua.ReactCurrentOwner,dh=!1;function Xi(a,b,c,d){b.child=null===a?Vg(b,null,c,d):Ug(b,a.child,c,d)}\nfunction Yi(a,b,c,d,e){c=c.render;var f=b.ref;ch(b,e);d=Nh(a,b,c,d,f,e);c=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&c&&vg(b);b.flags|=1;Xi(a,b,d,e);return b.child}\nfunction $i(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!aj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,bj(a,b,f,d,e);a=Rg(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return Zi(a,b,e)}b.flags|=1;a=Pg(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction bj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(dh=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(dh=!0);else return b.lanes=a.lanes,Zi(a,b,e)}return cj(a,b,c,d,e)}\nfunction dj(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(ej,fj),fj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(ej,fj),fj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(ej,fj);fj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(ej,fj),fj|=d;Xi(a,b,e,c);return b.child}function gj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function cj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);ch(b,e);c=Nh(a,b,c,d,f,e);d=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&d&&vg(b);b.flags|=1;Xi(a,b,c,e);return b.child}\nfunction hj(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;ch(b,e);if(null===b.stateNode)ij(a,b),Gi(b,c,d),Ii(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=eh(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&Hi(b,g,d,l);jh=!1;var r=b.memoizedState;g.state=r;qh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||jh?(\"function\"===typeof m&&(Di(b,c,m,d),k=b.memoizedState),(h=jh||Fi(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;lh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Ci(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=eh(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&Hi(b,g,d,k);jh=!1;r=b.memoizedState;g.state=r;qh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||jh?(\"function\"===typeof y&&(Di(b,c,y,d),n=b.memoizedState),(l=jh||Fi(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return jj(a,b,c,d,f,e)}\nfunction jj(a,b,c,d,e,f){gj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),Zi(a,b,f);d=b.stateNode;Wi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Ug(b,a.child,null,f),b.child=Ug(b,null,h,f)):Xi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function kj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);yh(a,b.containerInfo)}\nfunction lj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Xi(a,b,c,d);return b.child}var mj={dehydrated:null,treeContext:null,retryLane:0};function nj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction oj(a,b,c){var d=b.pendingProps,e=L.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(L,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=pj(g,d,0,null),a=Tg(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=nj(c),b.memoizedState=mj,a):qj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return rj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=Pg(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=Pg(h,f):(f=Tg(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?nj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=mj;return d}f=a.child;a=f.sibling;d=Pg(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction qj(a,b){b=pj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function sj(a,b,c,d){null!==d&&Jg(d);Ug(b,a.child,null,c);a=qj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction rj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Ki(Error(p(422))),sj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=pj({mode:\"visible\",children:d.children},e,0,null);f=Tg(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Ug(b,a.child,null,g);b.child.memoizedState=nj(g);b.memoizedState=mj;return f}if(0===(b.mode&1))return sj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Ki(f,d,void 0);return sj(a,b,g,d)}h=0!==(g&a.childLanes);if(dh||h){d=Q;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,ih(a,e),gi(d,a,e,-1))}tj();d=Ki(Error(p(421)));return sj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=uj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=qj(b,d.children);b.flags|=4096;return b}function vj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);bh(a.return,b,c)}\nfunction wj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction xj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Xi(a,b,d.children,c);d=L.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&vj(a,c,b);else if(19===a.tag)vj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(L,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Ch(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);wj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Ch(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}wj(b,!0,c,null,f);break;case \"together\":wj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction ij(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function Zi(a,b,c){null!==a&&(b.dependencies=a.dependencies);rh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=Pg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Pg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction yj(a,b,c){switch(b.tag){case 3:kj(b);Ig();break;case 5:Ah(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:yh(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Wg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(L,L.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return oj(a,b,c);G(L,L.current&1);a=Zi(a,b,c);return null!==a?a.sibling:null}G(L,L.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return xj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(L,L.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,dj(a,b,c)}return Zi(a,b,c)}var zj,Aj,Bj,Cj;\nzj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Aj=function(){};\nBj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;xh(uh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Cj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Dj(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Ej(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;zh();E(Wf);E(H);Eh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Fj(zg),zg=null));Aj(a,b);S(b);return null;case 5:Bh(b);var e=xh(wh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Bj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;zj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Cj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=xh(wh.current);xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(L);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Fj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(L.current&1)?0===T&&(T=3):tj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return zh(),\nAj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return ah(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(L);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Dj(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Ch(a);if(null!==g){b.flags|=128;Dj(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(L,L.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Gj&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304)}else{if(!d)if(a=Ch(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Dj(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Gj&&1073741824!==c&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=L.current,G(L,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Hj(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(fj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Ij(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return zh(),E(Wf),E(H),Eh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Bh(b),null;case 13:E(L);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(L),null;case 4:return zh(),null;case 10:return ah(b.type._context),null;case 22:case 23:return Hj(),\nnull;case 24:return null;default:return null}}var Jj=!1,U=!1,Kj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Lj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Mj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Nj=!1;\nfunction Oj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Ci(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Nj;Nj=!1;return n}\nfunction Pj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Mj(b,c,f)}e=e.next}while(e!==d)}}function Qj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Rj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Sj(a){var b=a.alternate;null!==b&&(a.alternate=null,Sj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Tj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Uj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Tj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Vj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Vj(a,b,c),a=a.sibling;null!==a;)Vj(a,b,c),a=a.sibling}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}var X=null,Xj=!1;function Yj(a,b,c){for(c=c.child;null!==c;)Zj(a,b,c),c=c.sibling}\nfunction Zj(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Lj(c,b);case 6:var d=X,e=Xj;X=null;Yj(a,b,c);X=d;Xj=e;null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Xj;X=c.stateNode.containerInfo;Xj=!0;\nYj(a,b,c);X=d;Xj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Mj(c,b,g):0!==(f&4)&&Mj(c,b,g));e=e.next}while(e!==d)}Yj(a,b,c);break;case 1:if(!U&&(Lj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Yj(a,b,c);break;case 21:Yj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Yj(a,b,c),U=d):Yj(a,b,c);break;default:Yj(a,b,c)}}function ak(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Kj);b.forEach(function(b){var d=bk.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction ck(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Xj=!1;break a;case 3:X=h.stateNode.containerInfo;Xj=!0;break a;case 4:X=h.stateNode.containerInfo;Xj=!0;break a}h=h.return}if(null===X)throw Error(p(160));Zj(f,g,e);X=null;Xj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)dk(b,a),b=b.sibling}\nfunction dk(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:ck(b,a);ek(a);if(d&4){try{Pj(3,a,a.return),Qj(3,a)}catch(t){W(a,a.return,t)}try{Pj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);break;case 5:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:ck(b,a);ek(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:ck(b,a);ek(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:ck(b,a);ek(a);break;case 13:ck(b,a);ek(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(fk=B()));d&4&&ak(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,ck(b,a),U=l):ck(b,a);ek(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Pj(4,r,r.return);break;case 1:Lj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Lj(r,r.return);break;case 22:if(null!==r.memoizedState){gk(q);continue}}null!==y?(y.return=r,V=y):gk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:ck(b,a);ek(a);d&4&&ak(a);break;case 21:break;default:ck(b,\na),ek(a)}}function ek(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Tj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Uj(a);Wj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Uj(a);Vj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function hk(a,b,c){V=a;ik(a,b,c)}\nfunction ik(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Jj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Jj;var l=U;Jj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?jk(e):null!==k?(k.return=g,V=k):jk(e);for(;null!==f;)V=f,ik(f,b,c),f=f.sibling;V=e;Jj=h;U=l}kk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):kk(a,b,c)}}\nfunction kk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Qj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Ci(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&sh(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}sh(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Rj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function gk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction jk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Qj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Rj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Rj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar lk=Math.ceil,mk=ua.ReactCurrentDispatcher,nk=ua.ReactCurrentOwner,ok=ua.ReactCurrentBatchConfig,K=0,Q=null,Y=null,Z=0,fj=0,ej=Uf(0),T=0,pk=null,rh=0,qk=0,rk=0,sk=null,tk=null,fk=0,Gj=Infinity,uk=null,Oi=!1,Pi=null,Ri=null,vk=!1,wk=null,xk=0,yk=0,zk=null,Ak=-1,Bk=0;function R(){return 0!==(K&6)?B():-1!==Ak?Ak:Ak=B()}\nfunction yi(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Bk&&(Bk=yc()),Bk;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function gi(a,b,c,d){if(50<yk)throw yk=0,zk=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==Q)a===Q&&(0===(K&2)&&(qk|=c),4===T&&Ck(a,Z)),Dk(a,d),1===c&&0===K&&0===(b.mode&1)&&(Gj=B()+500,fg&&jg())}\nfunction Dk(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===Q?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Ek.bind(null,a)):hg(Ek.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Fk(c,Gk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Gk(a,b){Ak=-1;Bk=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Hk()&&a.callbackNode!==c)return null;var d=uc(a,a===Q?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Ik(a,d);else{b=d;var e=K;K|=2;var f=Jk();if(Q!==a||Z!==b)uk=null,Gj=B()+500,Kk(a,b);do try{Lk();break}catch(h){Mk(a,h)}while(1);$g();mk.current=f;K=e;null!==Y?b=0:(Q=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Nk(a,e)));if(1===b)throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;if(6===b)Ck(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Ok(e)&&(b=Ik(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Nk(a,f))),1===b))throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Pk(a,tk,uk);break;case 3:Ck(a,d);if((d&130023424)===d&&(b=fk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){R();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),b);break}Pk(a,tk,uk);break;case 4:Ck(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*lk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),d);break}Pk(a,tk,uk);break;case 5:Pk(a,tk,uk);break;default:throw Error(p(329));}}}Dk(a,B());return a.callbackNode===c?Gk.bind(null,a):null}\nfunction Nk(a,b){var c=sk;a.current.memoizedState.isDehydrated&&(Kk(a,b).flags|=256);a=Ik(a,b);2!==a&&(b=tk,tk=c,null!==b&&Fj(b));return a}function Fj(a){null===tk?tk=a:tk.push.apply(tk,a)}\nfunction Ok(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Ck(a,b){b&=~rk;b&=~qk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Ek(a){if(0!==(K&6))throw Error(p(327));Hk();var b=uc(a,0);if(0===(b&1))return Dk(a,B()),null;var c=Ik(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Nk(a,d))}if(1===c)throw c=pk,Kk(a,0),Ck(a,b),Dk(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Pk(a,tk,uk);Dk(a,B());return null}\nfunction Qk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Gj=B()+500,fg&&jg())}}function Rk(a){null!==wk&&0===wk.tag&&0===(K&6)&&Hk();var b=K;K|=1;var c=ok.transition,d=C;try{if(ok.transition=null,C=1,a)return a()}finally{C=d,ok.transition=c,K=b,0===(K&6)&&jg()}}function Hj(){fj=ej.current;E(ej)}\nfunction Kk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:zh();E(Wf);E(H);Eh();break;case 5:Bh(d);break;case 4:zh();break;case 13:E(L);break;case 19:E(L);break;case 10:ah(d.type._context);break;case 22:case 23:Hj()}c=c.return}Q=a;Y=a=Pg(a.current,null);Z=fj=b;T=0;pk=null;rk=qk=rh=0;tk=sk=null;if(null!==fh){for(b=\n0;b<fh.length;b++)if(c=fh[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}fh=null}return a}\nfunction Mk(a,b){do{var c=Y;try{$g();Fh.current=Rh;if(Ih){for(var d=M.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Ih=!1}Hh=0;O=N=M=null;Jh=!1;Kh=0;nk.current=null;if(null===c||null===c.return){T=1;pk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Ui(g);if(null!==y){y.flags&=-257;Vi(y,g,h,f,b);y.mode&1&&Si(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Si(f,l,b);tj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Ui(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Vi(J,g,h,f,b);Jg(Ji(k,h));break a}}f=k=Ji(k,h);4!==T&&(T=2);null===sk?sk=[f]:sk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Ni(f,k,b);ph(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Ri||!Ri.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Qi(f,h,b);ph(f,F);break a}}f=f.return}while(null!==f)}Sk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Jk(){var a=mk.current;mk.current=Rh;return null===a?Rh:a}\nfunction tj(){if(0===T||3===T||2===T)T=4;null===Q||0===(rh&268435455)&&0===(qk&268435455)||Ck(Q,Z)}function Ik(a,b){var c=K;K|=2;var d=Jk();if(Q!==a||Z!==b)uk=null,Kk(a,b);do try{Tk();break}catch(e){Mk(a,e)}while(1);$g();K=c;mk.current=d;if(null!==Y)throw Error(p(261));Q=null;Z=0;return T}function Tk(){for(;null!==Y;)Uk(Y)}function Lk(){for(;null!==Y&&!cc();)Uk(Y)}function Uk(a){var b=Vk(a.alternate,a,fj);a.memoizedProps=a.pendingProps;null===b?Sk(a):Y=b;nk.current=null}\nfunction Sk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Ej(c,b,fj),null!==c){Y=c;return}}else{c=Ij(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Pk(a,b,c){var d=C,e=ok.transition;try{ok.transition=null,C=1,Wk(a,b,c,d)}finally{ok.transition=e,C=d}return null}\nfunction Wk(a,b,c,d){do Hk();while(null!==wk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===Q&&(Y=Q=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||vk||(vk=!0,Fk(hc,function(){Hk();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=ok.transition;ok.transition=null;\nvar g=C;C=1;var h=K;K|=4;nk.current=null;Oj(a,c);dk(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;hk(c,a,e);dc();K=h;C=g;ok.transition=f}else a.current=c;vk&&(vk=!1,wk=a,xk=e);f=a.pendingLanes;0===f&&(Ri=null);mc(c.stateNode,d);Dk(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Oi)throw Oi=!1,a=Pi,Pi=null,a;0!==(xk&1)&&0!==a.tag&&Hk();f=a.pendingLanes;0!==(f&1)?a===zk?yk++:(yk=0,zk=a):yk=0;jg();return null}\nfunction Hk(){if(null!==wk){var a=Dc(xk),b=ok.transition,c=C;try{ok.transition=null;C=16>a?16:a;if(null===wk)var d=!1;else{a=wk;wk=null;xk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Pj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Sj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Pj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Qj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,ok.transition=b}}return!1}function Xk(a,b,c){b=Ji(c,b);b=Ni(a,b,1);a=nh(a,b,1);b=R();null!==a&&(Ac(a,1,b),Dk(a,b))}\nfunction W(a,b,c){if(3===a.tag)Xk(a,a,c);else for(;null!==b;){if(3===b.tag){Xk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ri||!Ri.has(d))){a=Ji(c,a);a=Qi(b,a,1);b=nh(b,a,1);a=R();null!==b&&(Ac(b,1,a),Dk(b,a));break}}b=b.return}}\nfunction Ti(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=R();a.pingedLanes|=a.suspendedLanes&c;Q===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-fk?Kk(a,0):rk|=c);Dk(a,b)}function Yk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=R();a=ih(a,b);null!==a&&(Ac(a,b,c),Dk(a,c))}function uj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Yk(a,c)}\nfunction bk(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Yk(a,c)}var Vk;\nVk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)dh=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return dh=!1,yj(a,b,c);dh=0!==(a.flags&131072)?!0:!1}else dh=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;ij(a,b);a=b.pendingProps;var e=Yf(b,H.current);ch(b,c);e=Nh(null,b,d,a,e,c);var f=Sh();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,kh(b),e.updater=Ei,b.stateNode=e,e._reactInternals=b,Ii(b,d,a,c),b=jj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Xi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{ij(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=Zk(d);a=Ci(d,a);switch(e){case 0:b=cj(null,b,d,a,c);break a;case 1:b=hj(null,b,d,a,c);break a;case 11:b=Yi(null,b,d,a,c);break a;case 14:b=$i(null,b,d,Ci(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),cj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),hj(a,b,d,e,c);case 3:a:{kj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;lh(a,b);qh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ji(Error(p(423)),b);b=lj(a,b,d,c,e);break a}else if(d!==e){e=Ji(Error(p(424)),b);b=lj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Vg(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=Zi(a,b,c);break a}Xi(a,b,d,c)}b=b.child}return b;case 5:return Ah(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\ngj(a,b),Xi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return oj(a,b,c);case 4:return yh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Ug(b,null,d,c):Xi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),Yi(a,b,d,e,c);case 7:return Xi(a,b,b.pendingProps,c),b.child;case 8:return Xi(a,b,b.pendingProps.children,c),b.child;case 12:return Xi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Wg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=Zi(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=mh(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);bh(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);bh(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Xi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,ch(b,c),e=eh(e),d=d(e),b.flags|=1,Xi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Ci(d,b.pendingProps),e=Ci(d.type,e),$i(a,b,d,e,c);case 15:return bj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),ij(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,ch(b,c),Gi(b,d,e),Ii(b,d,e,c),jj(null,b,d,!0,a,c);case 19:return xj(a,b,c);case 22:return dj(a,b,c)}throw Error(p(156,b.tag));};function Fk(a,b){return ac(a,b)}\nfunction $k(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new $k(a,b,c,d)}function aj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction Zk(a){if(\"function\"===typeof a)return aj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction Pg(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Rg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)aj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Tg(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return pj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Tg(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function pj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function Qg(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction Sg(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction al(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function bl(a,b,c,d,e,f,g,h,k){a=new al(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};kh(f);return a}function cl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction dl(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction el(a,b,c,d,e,f,g,h,k){a=bl(c,d,!0,a,e,f,g,h,k);a.context=dl(null);c=a.current;d=R();e=yi(c);f=mh(d,e);f.callback=void 0!==b&&null!==b?b:null;nh(c,f,e);a.current.lanes=e;Ac(a,e,d);Dk(a,d);return a}function fl(a,b,c,d){var e=b.current,f=R(),g=yi(e);c=dl(c);null===b.context?b.context=c:b.pendingContext=c;b=mh(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=nh(e,b,g);null!==a&&(gi(a,e,g,f),oh(a,e,g));return g}\nfunction gl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function hl(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function il(a,b){hl(a,b);(a=a.alternate)&&hl(a,b)}function jl(){return null}var kl=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ll(a){this._internalRoot=a}\nml.prototype.render=ll.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));fl(a,b,null,null)};ml.prototype.unmount=ll.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Rk(function(){fl(null,a,null,null)});b[uf]=null}};function ml(a){this._internalRoot=a}\nml.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function nl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function pl(){}\nfunction ql(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=gl(g);f.call(a)}}var g=el(b,d,a,0,null,!1,!1,\"\",pl);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Rk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=gl(k);h.call(a)}}var k=bl(a,0,!1,null,null,!1,!1,\"\",pl);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Rk(function(){fl(b,k,c,d)});return k}\nfunction rl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=gl(g);h.call(a)}}fl(b,g,a,e)}else g=ql(c,b,a,e,d);return gl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Dk(b,B()),0===(K&6)&&(Gj=B()+500,jg()))}break;case 13:Rk(function(){var b=ih(a,1);if(null!==b){var c=R();gi(b,a,1,c)}}),il(a,1)}};\nFc=function(a){if(13===a.tag){var b=ih(a,134217728);if(null!==b){var c=R();gi(b,a,134217728,c)}il(a,134217728)}};Gc=function(a){if(13===a.tag){var b=yi(a),c=ih(a,b);if(null!==c){var d=R();gi(c,a,b,d)}il(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Qk;Hb=Rk;\nvar sl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Qk]},tl={findFiberByHostInstance:Wc,bundleType:0,version:\"18.3.1\",rendererPackageName:\"react-dom\"};\nvar ul={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||\njl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.3.1-next-f1338f8080-20240426\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var vl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!vl.isDisabled&&vl.supportsFiber)try{kc=vl.inject(ul),lc=vl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=sl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nl(b))throw Error(p(200));return cl(a,b,null,c)};exports.createRoot=function(a,b){if(!nl(a))throw Error(p(299));var c=!1,d=\"\",e=kl;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=bl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ll(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Rk(a)};exports.hydrate=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!nl(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=kl;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=el(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new ml(b)};exports.render=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!ol(a))throw Error(p(40));return a._reactRootContainer?(Rk(function(){rl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Qk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!ol(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return rl(a,b,c,!1,d)};exports.version=\"18.3.1-next-f1338f8080-20240426\";\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.7\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.7\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.7\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import React, { forwardRef, useRef, useEffect } from 'react';\nimport { Chart as Chart$1, LineController, BarController, RadarController, DoughnutController, PolarAreaController, BubbleController, PieController, ScatterController } from 'chart.js';\n\nconst defaultDatasetIdKey = 'label';\nfunction reforwardRef(ref, value) {\n    if (typeof ref === 'function') {\n        ref(value);\n    } else if (ref) {\n        ref.current = value;\n    }\n}\nfunction setOptions(chart, nextOptions) {\n    const options = chart.options;\n    if (options && nextOptions) {\n        Object.assign(options, nextOptions);\n    }\n}\nfunction setLabels(currentData, nextLabels) {\n    currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets) {\n    let datasetIdKey = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : defaultDatasetIdKey;\n    const addedDatasets = [];\n    currentData.datasets = nextDatasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = currentData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]);\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction cloneData(data) {\n    let datasetIdKey = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultDatasetIdKey;\n    const nextData = {\n        labels: [],\n        datasets: []\n    };\n    setLabels(nextData, data.labels);\n    setDatasets(nextData, data.datasets, datasetIdKey);\n    return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'dataset', {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'nearest', {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'index', {\n        intersect: true\n    }, false);\n}\n\nfunction ChartComponent(props, ref) {\n    const { height = 150, width = 300, redraw = false, datasetIdKey, type, data, options, plugins = [], fallbackContent, updateMode, ...canvasProps } = props;\n    const canvasRef = useRef(null);\n    const chartRef = useRef(null);\n    const renderChart = ()=>{\n        if (!canvasRef.current) return;\n        chartRef.current = new Chart$1(canvasRef.current, {\n            type,\n            data: cloneData(data, datasetIdKey),\n            options: options && {\n                ...options\n            },\n            plugins\n        });\n        reforwardRef(ref, chartRef.current);\n    };\n    const destroyChart = ()=>{\n        reforwardRef(ref, null);\n        if (chartRef.current) {\n            chartRef.current.destroy();\n            chartRef.current = null;\n        }\n    };\n    useEffect(()=>{\n        if (!redraw && chartRef.current && options) {\n            setOptions(chartRef.current, options);\n        }\n    }, [\n        redraw,\n        options\n    ]);\n    useEffect(()=>{\n        if (!redraw && chartRef.current) {\n            setLabels(chartRef.current.config.data, data.labels);\n        }\n    }, [\n        redraw,\n        data.labels\n    ]);\n    useEffect(()=>{\n        if (!redraw && chartRef.current && data.datasets) {\n            setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n        }\n    }, [\n        redraw,\n        data.datasets\n    ]);\n    useEffect(()=>{\n        if (!chartRef.current) return;\n        if (redraw) {\n            destroyChart();\n            setTimeout(renderChart);\n        } else {\n            chartRef.current.update(updateMode);\n        }\n    }, [\n        redraw,\n        options,\n        data.labels,\n        data.datasets,\n        updateMode\n    ]);\n    useEffect(()=>{\n        if (!chartRef.current) return;\n        destroyChart();\n        setTimeout(renderChart);\n    }, [\n        type\n    ]);\n    useEffect(()=>{\n        renderChart();\n        return ()=>destroyChart();\n    }, []);\n    return /*#__PURE__*/ React.createElement(\"canvas\", {\n        ref: canvasRef,\n        role: \"img\",\n        height: height,\n        width: width,\n        ...canvasProps\n    }, fallbackContent);\n}\nconst Chart = /*#__PURE__*/ forwardRef(ChartComponent);\n\nfunction createTypedChart(type, registerables) {\n    Chart$1.register(registerables);\n    return /*#__PURE__*/ forwardRef((props, ref)=>/*#__PURE__*/ React.createElement(Chart, {\n            ...props,\n            ref: ref,\n            type: type\n        }));\n}\nconst Line = /* #__PURE__ */ createTypedChart('line', LineController);\nconst Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\nconst Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\nconst Doughnut = /* #__PURE__ */ createTypedChart('doughnut', DoughnutController);\nconst PolarArea = /* #__PURE__ */ createTypedChart('polarArea', PolarAreaController);\nconst Bubble = /* #__PURE__ */ createTypedChart('bubble', BubbleController);\nconst Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\nconst Scatter = /* #__PURE__ */ createTypedChart('scatter', ScatterController);\n\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };\n//# sourceMappingURL=index.js.map\n","// src/Histogram.jsx\r\nimport React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\n// Register Chart.js components\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst Histogram = ({ data, xmin, xmax }) => {\r\n  const chartData = {\r\n    labels: data.labels,\r\n    datasets: [\r\n      {\r\n        label: 'Frecuency',\r\n        data: data.values,\r\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n        borderColor: 'yellow', //'rgba(75, 192, 192, 1)',\r\n        borderWidth: 1,\r\n        categoryPercentage: 1\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    scales: {\r\n      x: {\r\n        min: xmin,\r\n        max: xmax,\r\n        ticks: {\r\n          color : 'yellow', //'rgba(75, 192, 192, 1)',\r\n        }\r\n      },\r\n      y: {\r\n        beginAtZero: true,\r\n        title: {\r\n          display: true,\r\n          text: 'Frequency',\r\n          color : 'yellow', //'rgba(75, 192, 192, 1)',\r\n        },\r\n        ticks: {\r\n          color : 'yellow', //'rgba(75, 192, 192, 1)',\r\n        }\r\n      },\r\n    },\r\n    plugins: {\r\n      title: {\r\n        display: false,\r\n        text: 'Histogram',\r\n      },\r\n      legend: {\r\n        display: false,\r\n      }\r\n    },\r\n  };\r\n\r\n  return <Bar data={chartData} options={chartOptions} />;\r\n};\r\n\r\nexport default Histogram;\r\n","\r\n\r\nconst DistributionSelector = ({ distributions, selectedDistribution, handleDistributionSelect, parameters, handleParamChange, resample }) => {\r\n  return (\r\n    <div className=\"distributionSelector\">\r\n      <div className=\"selectorItem\">\r\n        <table>\r\n          <tbody>\r\n          <tr key=\"distribution\">\r\n            <td>Distribution</td>\r\n            <td>\r\n              <select\r\n                value={selectedDistribution}\r\n                onChange={handleDistributionSelect}>\r\n\r\n                {distributions.map((distribution) => (\r\n                  <option key={distribution.name} value={distribution.name}>\r\n                    {distribution.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </td>\r\n          </tr>\r\n          {Object.keys(parameters).map(key => (\r\n            <tr key={key}>\r\n              <td>{key}</td>\r\n              <td><input\r\n                type=\"number\"\r\n                value={parameters[key] ?? defaultValue}\r\n                onChange={(e) => handleParamChange(key, e.target.value)}\r\n              /></td>\r\n            </tr>\r\n          ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"selectorItem\">\r\n        <button id=\"resampleButton\" onClick={resample}><b>Sample</b></button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DistributionSelector;\r\n","let randomGenerator = Math.random; // Default generator\r\n\r\n/**\r\n * PCG64 Random Number Generator\r\n * \r\n * A JavaScript implementation of the Permuted Congruential Generator (PCG).\r\n * This algorithm was introduced by Melissa E. O'Neill in her paper:\r\n * \"PCG: A Family of Simple Fast Space-Efficient Statistically Good Algorithms for Random Number Generation\" (2014).\r\n * \r\n * Reference:\r\n * - Paper: https://www.pcg-random.org/pdf/toms-oneill-pcg-family-v1.02.pdf\r\n * - Website: https://www.pcg-random.org/\r\n *\r\n * Constants used (multiplier and increment) are based on the PCG64 default configuration:\r\n * - Multiplier: 6364136223846793005 (prime relative to 2^64, ensures full period).\r\n * - Increment: 1442695040888963407 (odd, ensures proper state transitions).\r\n * \r\n * This implementation generates 64-bit random numbers and maps them to the range [0, 1).\r\n *\r\n * @param {number|bigint} seed - The initial seed for the random generator.\r\n * @returns {function} - A function that generates random numbers in [0, 1).\r\n */\r\nfunction pcg64(seed) {\r\n    let state = BigInt(seed); // Use BigInt for 64-bit arithmetic\r\n    const multiplier = 6364136223846793005n; // PCG multiplier\r\n    const increment = 1442695040888963407n; // PCG increment\r\n\r\n    return function () {\r\n        // Update the internal state\r\n        state = state * multiplier + increment & 0xFFFFFFFFFFFFFFFFn;\r\n\r\n        // Extract high-order bits for randomness\r\n        const result = Number(state >> 32n) / 0xFFFFFFFF;\r\n\r\n        // Normalize to [0, 1)\r\n        return result >= 0 ? result : result + 1;\r\n    };\r\n}\r\n\r\n/**\r\n * Seeds the random number generator with a specified value.\r\n *\r\n * @param {number} seedValue - Value to initialize the random generator.\r\n * @returns {void}\r\n */\r\nfunction seed(seedValue) {\r\n    const numericSeed = typeof seedValue === 'bigint' || typeof seedValue === 'number'\r\n        ? BigInt(seedValue)\r\n        : hashSeed(seedValue);\r\n    randomGenerator = pcg64(numericSeed);\r\n}\r\n\r\n/**\r\n * Returns the current random generator function.\r\n *\r\n * @returns {function} The random number generator function.\r\n */\r\nfunction getRandomGenerator() {\r\n    return randomGenerator;\r\n}\r\n\r\nmodule.exports = { seed, getRandomGenerator };\r\n","/**\r\n * Generates random floats or arrays of random floats given a random number generator function and a size parameter.\r\n *\r\n * @param {Function} generator - The random number generator function. It should return a random float\r\n *   between 0 (inclusive) and 1 (exclusive) on each call.\r\n * @param {number|Array|null} [size=null] - The shape of the output:\r\n *   - If `null`, a single float is returned.\r\n *   - If a number, a 1D array of the specified size is returned.\r\n *   - If an array (e.g., [m, n]), a multidimensional array of the specified shape is returned.\r\n * @returns {number|Array} A single random float, an array of random floats, or a multidimensional array\r\n *   depending on the value of the `size` parameter:\r\n *   - `null`: A single random float (e.g., `0.532`).\r\n *   - `number`: A 1D array of random floats (e.g., `[0.1, 0.4, 0.8]`).\r\n *   - `Array`: A multidimensional array of random floats (e.g., `[[0.1, 0.3], [0.4, 0.8]]`).\r\n * @throws {Error} Throws an error if the `size` parameter is not a number, an array, or null.\r\n *\r\n * @example\r\n * // Using a custom random generator\r\n * const generator = () => Math.random();\r\n *\r\n * // Single float\r\n * const randomFloat = baseGenerator(generator, null);\r\n * console.log(randomFloat); // e.g., 0.234\r\n *\r\n * // 1D array of random floats\r\n * const randomArray = baseGenerator(generator, 5);\r\n * console.log(randomArray); // e.g., [0.1, 0.4, 0.6, 0.2, 0.8]\r\n *\r\n * // Multidimensional array of random floats\r\n * const randomMatrix = baseGenerator(generator, [2, 3]);\r\n * console.log(randomMatrix); // e.g., [[0.2, 0.7, 0.4], [0.1, 0.9, 0.5]]\r\n */\r\nfunction baseGenerator(generator, size) {\r\n    if (size === null) {\r\n        return generator();\r\n    }\r\n    else if (typeof size === \"number\") {\r\n        return Array.from({ length: size }, () => generator());\r\n    }\r\n    else if (Array.isArray(size)) {\r\n        const buildArray = (dims) => {\r\n            const [first, ...rest] = dims;\r\n            return Array.from({ length: first }, () => rest.length > 0 ? buildArray(rest) : generator());\r\n        };\r\n        return buildArray(size);\r\n    }\r\n    else {\r\n        throw new Error(\"size must be a number, an array, or null\");\r\n    }\r\n}\r\n\r\nmodule.exports = baseGenerator;","const { getRandomGenerator } = require('./seed');\r\nconst baseGenerator  = require('./base-generator')\r\n\r\n/**\r\n * Generates random integers or arrays of random integers within a specified range.\r\n *\r\n * @param {number} low - The inclusive lower bound of the random integers.\r\n * @param {number} [high=null] - The exclusive upper bound. If not provided, `low` is treated as `high`, and the range is [0, low).\r\n * @param {number|Array|null} [size=null] - The shape of the output:\r\n *   - If `null`, a single integer is returned.\r\n *   - If a number, a 1D array of the specified size is returned.\r\n *   - If an array (e.g., [m, n]), a multidimensional array of the specified shape is returned.\r\n * @throws {Error} If `low` is greater than or equal to `high`.\r\n * @returns {number|Array} A random integer, an array of random integers, or a multidimensional array.\r\n *\r\n * @example\r\n * // Single random integer between 0 and 9\r\n * randint(10); // e.g., 3\r\n *\r\n * // Single random integer between 5 and 15\r\n * randint(5, 15); // e.g., 12\r\n *\r\n * // 1D array of 5 random integers between 0 and 9\r\n * randint(0, 10, 5); // e.g., [2, 8, 6, 3, 7]\r\n *\r\n * // 2D array (3x4) of random integers between 1 and 6\r\n * randint(1, 7, [3, 4]); // e.g., [[4, 6, 1, 3], [5, 1, 2, 6], [3, 4, 5, 1]]\r\n */\r\nfunction randint(low, high = null, size = null) {\r\n    if (high === null) {\r\n        high = low;\r\n        low = 0;\r\n    }\r\n    if (low >= high) {\r\n        throw new Error(\"low must be less than high\");\r\n    }\r\n    return baseGenerator(() => Math.floor(getRandomGenerator()() * (high - low) + low), size);\r\n}\r\n\r\nmodule.exports = randint;\r\n","const { getRandomGenerator } = require('./seed');\r\nconst baseGenerator  = require('./base-generator')\r\n\r\n/**\r\n * Generates random floats or arrays of random floats within a specified range.\r\n *\r\n * @param {number} [low=0.0] - The lower bound. 0.0 by default.\r\n * @param {number} [high=1.0] - The upper bound. 1.0 by default.\r\n * @param {number|Array|null} [size=null] - The shape of the output:\r\n *   - If `null`, a single float is returned.\r\n *   - If a number, a 1D array of the specified size is returned.\r\n *   - If an array (e.g., [m, n]), a multidimensional array of the specified shape is returned.\r\n * @throws {Error} If `low` is greater than or equal to `high`.\r\n * @returns {number|Array} A random float, an array of random float, or a multidimensional array.\r\n *\r\n * @example\r\n * // Single random float between 0 and 10\r\n * unform(); // e.g., 0.34\r\n *\r\n * // Single random float between 5 and 15\r\n * uniform(5, 15); // e.g., 12\r\n *\r\n * // 1D array of 5 random floats between 0 and 9\r\n * uniform(0, 10, 5); // e.g., [2.22, 8.469, 6.2323123, 3, 7]\r\n *\r\n * // 2D array (3x4) of random integers between 1 and 6\r\n * uniform(1, 7, [3, 4]); // e.g., [[4, 6, 1, 3], [5, 1, 2, 6], [3, 4, 5, 1]]\r\n */\r\nfunction uniform(low = 0.0, high = 1.0, size = null) {\r\n    if (low >= high) {\r\n        throw new Error(\"low must be less than high\");\r\n    }\r\n    return baseGenerator(() => getRandomGenerator()() * (high - low) + low, size);\r\n}\r\n\r\nmodule.exports = uniform;\r\n","const X= [\r\n\t6.22096057427174e-16,\r\n\t6.30232463237987e-16,\r\n\t6.384736738561162e-16,\r\n\t6.468210178957527e-16,\r\n\t6.552758405344601e-16,\r\n\t6.63839503716088e-16,\r\n\t6.725133863560783e-16,\r\n\t6.812988845492691e-16,\r\n\t6.901974117801946e-16,\r\n\t6.992103991358987e-16,\r\n\t7.083392955213121e-16,\r\n\t7.175855678772167e-16,\r\n\t7.26950701400833e-16,\r\n\t7.364361997690278e-16,\r\n\t7.460435853642744e-16,\r\n\t7.557743995031796e-16,\r\n\t7.656302026679585e-16,\r\n\t7.756125747404577e-16,\r\n\t7.857231152392053e-16,\r\n\t7.959634435590867e-16,\r\n\t8.063351992141211e-16,\r\n\t8.168400420828962e-16,\r\n\t8.274796526572087e-16,\r\n\t8.382557322934205e-16,\r\n\t8.49170003467074e-16,\r\n\t8.602242100303102e-16,\r\n\t8.714201174726226e-16,\r\n\t8.827595131844686e-16,\r\n\t8.94244206724291e-16,\r\n\t9.05876030088484e-16,\r\n\t9.176568379848355e-16,\r\n\t9.295885081089926e-16,\r\n\t9.416729414244787e-16,\r\n\t9.53912062445788e-16,\r\n\t9.663078195251577e-16,\r\n\t9.788621851424571e-16,\r\n\t9.915771561988532e-16,\r\n\t1.0044547543136464e-15,\r\n\t1.0174970261250164e-15,\r\n\t1.0307060435939614e-15,\r\n\t1.044083904312255e-15,\r\n\t1.0576327318137562e-15,\r\n\t1.0713546758896157e-15,\r\n\t1.0852519129071793e-15,\r\n\t1.0993266461326927e-15,\r\n\t1.1135811060578712e-15,\r\n\t1.1280175507303345e-15,\r\n\t1.1426382660879915e-15,\r\n\t1.157445566297407e-15,\r\n\t1.1724417940961863e-15,\r\n\t1.1876293211394562e-15,\r\n\t1.203010548350442e-15,\r\n\t1.2185879062752297e-15,\r\n\t1.2343638554417474e-15,\r\n\t1.2503408867230134e-15,\r\n\t1.2665215217046937e-15,\r\n\t1.2829083130570544e-15,\r\n\t1.2995038449112991e-15,\r\n\t1.3163107332403988e-15,\r\n\t1.3333316262444326e-15,\r\n\t1.3505692047405337e-15,\r\n\t1.3680261825574024e-15,\r\n\t1.3857053069345783e-15,\r\n\t1.40360935892639e-15,\r\n\t1.421741153810718e-15,\r\n\t1.4401035415026276e-15,\r\n\t1.4586994069728484e-15,\r\n\t1.477531670671285e-15,\r\n\t1.496603288955494e-15,\r\n\t1.5159172545242631e-15,\r\n\t1.5354765968563093e-15,\r\n\t1.5552843826542037e-15,\r\n\t1.5753437162935217e-15,\r\n\t1.5956577402772919e-15,\r\n\t1.616229635695915e-15,\r\n\t1.6370626226924002e-15,\r\n\t1.6581599609331902e-15,\r\n\t1.6795249500845409e-15,\r\n\t1.7011609302944935e-15,\r\n\t1.72307128268064e-15,\r\n\t1.7452594298234446e-15,\r\n\t1.7677288362657469e-15,\r\n\t1.7904830090177105e-15,\r\n\t1.8135254980682285e-15,\r\n\t1.8368598969018577e-15,\r\n\t1.860489843022393e-15,\r\n\t1.8844190184820554e-15,\r\n\t1.9086511504174898e-15,\r\n\t1.933190011591521e-15,\r\n\t1.9580394209418674e-15,\r\n\t1.9832032441358236e-15,\r\n\t2.008685394131789e-15,\r\n\t2.03448983174731e-15,\r\n\t2.060620566233834e-15,\r\n\t2.087081655858217e-15,\r\n\t2.1138772084910882e-15,\r\n\t2.1410113822021433e-15,\r\n\t2.168488385862441e-15,\r\n\t2.196312479753803e-15,\r\n\t2.224487976185363e-15,\r\n\t2.253019240117364e-15,\r\n\t2.281910689792321e-15,\r\n\t2.31116679737356e-15,\r\n\t2.340792089591339e-15,\r\n\t2.3707911483964357e-15,\r\n\t2.4011686116215586e-15,\r\n\t2.431929173650418e-15,\r\n\t2.463077586094694e-15,\r\n\t2.4946186584789864e-15,\r\n\t2.526557258933702e-15,\r\n\t2.5588983148962105e-15,\r\n\t2.5916468138201102e-15,\r\n\t2.6248078038928595e-15,\r\n\t2.658386394761855e-15,\r\n\t2.6923877582689307e-15,\r\n\t2.726817129193579e-15,\r\n\t2.7616798060047883e-15,\r\n\t2.7969811516217285e-15,\r\n\t2.832726594183377e-15,\r\n\t2.8689216278270517e-15,\r\n\t2.9055718134761953e-15,\r\n\t2.9426827796372764e-15,\r\n\t2.980260223206055e-15,\r\n\t3.0183099102832767e-15,\r\n\t3.0568376769998983e-15,\r\n\t3.0958494303519914e-15,\r\n\t3.135351149045364e-15,\r\n\t3.1753488843500757e-15,\r\n\t3.215848760964932e-15,\r\n\t3.2568569778920757e-15,\r\n\t3.298379809321827e-15,\r\n\t3.340423605527786e-15,\r\n\t3.382994793772442e-15,\r\n\t3.426099879223322e-15,\r\n\t3.469745445879841e-15,\r\n\t3.5139381575109506e-15,\r\n\t3.558684758603772e-15,\r\n\t3.603992075323197e-15,\r\n\t3.649867016482758e-15,\r\n\t3.696316574526758e-15,\r\n\t3.743347826523878e-15,\r\n\t3.790967935172457e-15,\r\n\t3.83918414981702e-15,\r\n\t3.888003807477534e-15,\r\n\t3.9374343338894524e-15,\r\n\t3.987483244557224e-15,\r\n\t4.038158145818566e-15,\r\n\t4.089466735922685e-15,\r\n\t4.141416806119487e-15,\r\n\t4.194016241762926e-15,\r\n\t4.247273023425719e-15,\r\n\t4.301195228028547e-15,\r\n\t4.355791029980784e-15,\r\n\t4.411068702335943e-15,\r\n\t4.467036617959417e-15,\r\n\t4.523703250710466e-15,\r\n\t4.5810771766375376e-15,\r\n\t4.63916707518773e-15,\r\n\t4.6979817304300234e-15,\r\n\t4.757530032292938e-15,\r\n\t4.817820977816426e-15,\r\n\t4.8788636724181875e-15,\r\n\t4.940667331174895e-15,\r\n\t5.003241280118e-15,\r\n\t5.0665949575447896e-15,\r\n\t5.130737915344422e-15,\r\n\t5.195679820339508e-15,\r\n\t5.261430455642994e-15,\r\n\t5.3279997220309885e-15,\r\n\t5.395397639331309e-15,\r\n\t5.463634347828129e-15,\r\n\t5.532720109682902e-15,\r\n\t5.602665310371667e-15,\r\n\t5.673480460139036e-15,\r\n\t5.745176195468891e-15,\r\n\t5.817763280572145e-15,\r\n\t5.89125260889164e-15,\r\n\t5.965655204624441e-15,\r\n\t6.040982224261762e-15,\r\n\t6.117244958146554e-15,\r\n\t6.194454832049133e-15,\r\n\t6.2726234087609834e-15,\r\n\t6.351762389706915e-15,\r\n\t6.4318836165759035e-15,\r\n\t6.5129990729705134e-15,\r\n\t6.595120886075625e-15,\r\n\t6.6782613283461235e-15,\r\n\t6.762432819214263e-15,\r\n\t6.847647926816407e-15,\r\n\t6.933919369740014e-15,\r\n\t7.021260018790318e-15,\r\n\t7.109682898777697e-15,\r\n\t7.199201190325679e-15,\r\n\t7.289828231698849e-15,\r\n\t7.38157752065344e-15,\r\n\t7.474462716307113e-15,\r\n\t7.568497641032562e-15,\r\n\t7.663696282370348e-15,\r\n\t7.760072794966314e-15,\r\n\t7.85764150252871e-15,\r\n\t7.956416899810287e-15,\r\n\t8.056413654610611e-15,\r\n\t8.157646609803855e-15,\r\n\t8.260130785387577e-15,\r\n\t8.363881380557116e-15,\r\n\t8.468913775801577e-15,\r\n\t8.575243535026331e-15,\r\n\t8.682886407697078e-15,\r\n\t8.791858331011417e-15,\r\n\t8.902175432092283e-15,\r\n\t9.013854030209647e-15,\r\n\t9.126910639024427e-15,\r\n\t9.241361968861176e-15,\r\n\t9.357224929004044e-15,\r\n\t9.474516630021532e-15,\r\n\t9.593254386115301e-15,\r\n\t9.713455717498508e-15,\r\n\t9.835138352798544e-15,\r\n\t9.958320231490157e-15,\r\n\t1.0083019506353707e-14,\r\n\t1.0209254545963416e-14,\r\n\t1.0337043937202962e-14,\r\n\t1.046640648781046e-14,\r\n\t1.0597361228952056e-14,\r\n\t1.0729927417825103e-14,\r\n\t1.0864124540291155e-14,\r\n\t1.0999972313538602e-14,\r\n\t1.1137490688776213e-14,\r\n\t1.1276699853956987e-14,\r\n\t1.1417620236533234e-14,\r\n\t1.1560272506242992e-14,\r\n\t1.1704677577928362e-14,\r\n\t1.1850856614385764e-14,\r\n\t1.1998831029248577e-14,\r\n\t1.2148622489902992e-14,\r\n\t1.2300252920436821e-14,\r\n\t1.2453744504621603e-14,\r\n\t1.2609119688929245e-14,\r\n\t1.2766401185582477e-14,\r\n\t1.2925611975640207e-14,\r\n\t1.3086775312117827e-14,\r\n\t1.3249914723143729e-14,\r\n\t1.3415054015149736e-14,\r\n\t1.3582217276100877e-14,\r\n\t1.3751428878758158e-14,\r\n\t1.392271348398241e-14,\r\n\t1.4096096044071427e-14,\r\n\t1.427160180613921e-14,\r\n\t1.4449256315529338e-14,\r\n\t1.462908541927153e-14,\r\n\t1.4811115269572578e-14,\r\n\t1.499537232735192e-14,\r\n\t1.518188336581235e-14,\r\n\t1.537067547405587e-14,\r\n\t1.5561776060735964e-14,\r\n\t1.575521285775606e-14,\r\n\t1.5951013924004606e-14,\r\n\t1.6149207649137982e-14,\r\n\t1.634982275740078e-14,\r\n\t1.6552888311494685e-14,\r\n\t1.6758433716485613e-14,\r\n\t1.6966488723760756e-14,\r\n\t1.7177083435024576e-14,\r\n\t1.7390248306345977e-14,\r\n\t1.760601415224509e-14,\r\n\t1.7824412149832054e-14,\r\n\t1.8045473842987445e-14,\r\n\t1.8269231146594278e-14,\r\n\t1.8495716350814502e-14,\r\n\t1.872496212541568e-14,\r\n\t1.895700152414556e-14,\r\n\t1.9191867989156684e-14,\r\n\t1.9429595355480593e-14,\r\n\t1.9670217855552186e-14,\r\n\t1.99137701237856e-14,\r\n\t2.0160287201201556e-14,\r\n\t2.040980454010668e-14,\r\n\t2.066235800882558e-14,\r\n\t2.091798389648658e-14,\r\n\t2.117671891786058e-14,\r\n\t2.1438600218255407e-14,\r\n\t2.1703665378464417e-14,\r\n\t2.1971952419771175e-14,\r\n\t2.2243499809010422e-14,\r\n\t2.2518346463685763e-14,\r\n\t2.279653175714535e-14,\r\n\t2.307809552381522e-14,\r\n\t2.3363078064491716e-14,\r\n\t2.3651520151693424e-14,\r\n\t2.3943463035073025e-14,\r\n\t2.4238948446890333e-14,\r\n\t2.4538018607546334e-14,\r\n\t2.4840716231179458e-14,\r\n\t2.5147084531324874e-14,\r\n\t2.5457167226636975e-14,\r\n\t2.5771008546676595e-14,\r\n\t2.6088653237762123e-14,\r\n\t2.641014656888742e-14,\r\n\t2.673553433770519e-14,\r\n\t2.7064862876577362e-14,\r\n\t2.7398179058695286e-14,\r\n\t2.7735530304263765e-14,\r\n\t2.8076964586759928e-14,\r\n\t2.842253043925833e-14,\r\n\t2.877227696082959e-14,\r\n\t2.9126253823006274e-14,\r\n\t2.9484511276326956e-14,\r\n\t2.984710015694828e-14,\r\n\t3.0214071893335666e-14,\r\n\t3.058547851302225e-14,\r\n\t3.0961372649452365e-14,\r\n\t3.134180754889155e-14,\r\n\t3.172683707742324e-14,\r\n\t3.211651572801485e-14,\r\n\t3.251089862767081e-14,\r\n\t3.2910041544657615e-14,\r\n\t3.331400089581773e-14,\r\n\t3.3722833753955964e-14,\r\n\t3.413659785531798e-14,\r\n\t3.455535160714336e-14,\r\n\t3.4979154095308553e-14,\r\n\t3.540806509205275e-14,\r\n\t3.584214506379068e-14,\r\n\t3.628145517901122e-14,\r\n\t3.672605731626546e-14,\r\n\t3.717601407224305e-14,\r\n\t3.7631388769937725e-14,\r\n\t3.8092245466904655e-14,\r\n\t3.855864896360975e-14,\r\n\t3.903066481187093e-14,\r\n\t3.950835932339388e-14,\r\n\t3.999179957840246e-14,\r\n\t4.04810534343656e-14,\r\n\t4.097618953481976e-14,\r\n\t4.1477277318291215e-14,\r\n\t4.1984387027315975e-14,\r\n\t4.249758971756035e-14,\r\n\t4.301695726704339e-14,\r\n\t4.354256238545987e-14,\r\n\t4.407447862360909e-14,\r\n\t4.461278038292625e-14,\r\n\t4.5157542925120554e-14,\r\n\t4.570884238191963e-14,\r\n\t4.626675576492269e-14,\r\n\t4.683136097556207e-14,\r\n\t4.740273681517468e-14,\r\n\t4.798096299518736e-14,\r\n\t4.856612014741174e-14,\r\n\t4.9158289834455154e-14,\r\n\t4.975755456024683e-14,\r\n\t5.03639977806791e-14,\r\n\t5.09777039143676e-14,\r\n\t5.159875835352986e-14,\r\n\t5.2227247474984005e-14,\r\n\t5.286325865127003e-14,\r\n\t5.350688026189258e-14,\r\n\t5.415820170468801e-14,\r\n\t5.4817313407319094e-14,\r\n\t5.5484306838893444e-14,\r\n\t5.6159274521712247e-14,\r\n\t5.684231004314865e-14,\r\n\t5.753350806765616e-14,\r\n\t5.823296434890996e-14,\r\n\t5.894077574208219e-14,\r\n\t5.965704021625315e-14,\r\n\t6.03818568669572e-14,\r\n\t6.111532592886978e-14,\r\n\t6.18575487886312e-14,\r\n\t6.260862799781639e-14,\r\n\t6.336866728603775e-14,\r\n\t6.413777157420662e-14,\r\n\t6.491604698792659e-14,\r\n\t6.570360087104365e-14,\r\n\t6.65005417993379e-14,\r\n\t6.730697959437675e-14,\r\n\t6.812302533750746e-14,\r\n\t6.894879138401159e-14,\r\n\t6.97843913774117e-14,\r\n\t7.062994026393997e-14,\r\n\t7.148555430715835e-14,\r\n\t7.23513511027446e-14,\r\n\t7.322744959343646e-14,\r\n\t7.411397008414807e-14,\r\n\t7.501103425724036e-14,\r\n\t7.591876518796954e-14,\r\n\t7.683728736009416e-14,\r\n\t7.776672668166962e-14,\r\n\t7.870721050099549e-14,\r\n\t7.965886762275421e-14,\r\n\t8.062182832431504e-14,\r\n\t8.159622437222867e-14,\r\n\t8.258218903888749e-14,\r\n\t8.357985711938104e-14,\r\n\t8.458936494852895e-14,\r\n\t8.561085041810249e-14,\r\n\t8.664445299423364e-14,\r\n\t8.769031373501627e-14,\r\n\t8.874857530829595e-14,\r\n\t8.981938200965909e-14,\r\n\t9.090287978061455e-14,\r\n\t9.199921622697539e-14,\r\n\t9.310854063744249e-14,\r\n\t9.423100400238794e-14,\r\n\t9.536675903284708e-14,\r\n\t9.651596017971497e-14,\r\n\t9.767876365315356e-14,\r\n\t9.885532744220995e-14,\r\n\t1.0004581133464993e-13,\r\n\t1.0125037693700428e-13,\r\n\t1.0246918769483812e-13,\r\n\t1.0370240891323724e-13,\r\n\t1.0495020777752033e-13,\r\n\t1.0621275337417331e-13,\r\n\t1.07490216712016e-13,\r\n\t1.0878277074359533e-13,\r\n\t1.1009059038681311e-13,\r\n\t1.1141385254678888e-13,\r\n\t1.127527361379595e-13,\r\n\t1.141074221064205e-13,\r\n\t1.154780934525127e-13,\r\n\t1.1686493525364049e-13,\r\n\t1.1826813468736485e-13,\r\n\t1.1968788105471326e-13,\r\n\t1.211243658037773e-13,\r\n\t1.2257778255353206e-13,\r\n\t1.240483271179503e-13,\r\n\t1.2553619753033852e-13,\r\n\t1.2704159406797915e-13,\r\n\t1.2856471927699782e-13,\r\n\t1.3010577799754022e-13,\r\n\t1.316649773891834e-13,\r\n\t1.3324252695666188e-13,\r\n\t1.3483863857582993e-13,\r\n\t1.364535265199492e-13,\r\n\t1.3808740748621747e-13,\r\n\t1.3974050062262752e-13,\r\n\t1.41413027555072e-13,\r\n\t1.4310521241478823e-13,\r\n\t1.4481728186605125e-13,\r\n\t1.4654946513421725e-13,\r\n\t1.4830199403401797e-13,\r\n\t1.5007510299821024e-13,\r\n\t1.5186902910649148e-13,\r\n\t1.5368401211476585e-13,\r\n\t1.555202944846898e-13,\r\n\t1.5737812141357358e-13,\r\n\t1.5925774086457277e-13,\r\n\t1.6115940359722527e-13,\r\n\t1.6308336319831302e-13,\r\n\t1.6502987611305245e-13,\r\n\t1.6699920167662582e-13,\r\n\t1.6899160214605198e-13,\r\n\t1.71007342732398e-13,\r\n\t1.7304669163333878e-13,\r\n\t1.751099200660706e-13,\r\n\t1.771973023005718e-13,\r\n\t1.7930911569323017e-13,\r\n\t1.8144564072082543e-13,\r\n\t1.8360716101488076e-13,\r\n\t1.8579396339638232e-13,\r\n\t1.8800633791087244e-13,\r\n\t1.9024457786392175e-13,\r\n\t1.9250897985697993e-13,\r\n\t1.9479984382361206e-13,\r\n\t1.9711747306612605e-13,\r\n\t1.9946217429259105e-13,\r\n\t2.0183425765425652e-13,\r\n\t2.0423403678336908e-13,\r\n\t2.0666182883139684e-13,\r\n\t2.0911795450766281e-13,\r\n\t2.116027381184029e-13,\r\n\t2.141165076062124e-13,\r\n\t2.1665959458996506e-13,\r\n\t2.1923233440509927e-13,\r\n\t2.2183506614440194e-13,\r\n\t2.2446813269916061e-13,\r\n\t2.2713188080082312e-13,\r\n\t2.2982666106303933e-13,\r\n\t2.32552828024215e-13,\r\n\t2.353107401904611e-13,\r\n\t2.3810076007905823e-13,\r\n\t2.4092325426233235e-13,\r\n\t2.437785934120561e-13,\r\n\t2.4666715234426067e-13,\r\n\t2.495893100645985e-13,\r\n\t2.525454498141155e-13,\r\n\t2.555359591155821e-13,\r\n\t2.585612298202546e-13,\r\n\t2.6162165815520435e-13,\r\n\t2.6471764477107163e-13,\r\n\t2.678495947904171e-13,\r\n\t2.7101791785649903e-13,\r\n\t2.7422302818266005e-13,\r\n\t2.774653446021525e-13,\r\n\t2.8074529061858223e-13,\r\n\t2.840632944567986e-13,\r\n\t2.874197891144196e-13,\r\n\t2.9081521241382406e-13,\r\n\t2.9425000705475236e-13,\r\n\t2.977246206674401e-13,\r\n\t3.012395058663269e-13,\r\n\t3.0479512030433264e-13,\r\n\t3.083919267277128e-13,\r\n\t3.1203039303149565e-13,\r\n\t3.1571099231551275e-13,\r\n\t3.1943420294101723e-13,\r\n\t3.2320050858791015e-13,\r\n\t3.270103983125698e-13,\r\n\t3.308643666063034e-13,\r\n\t3.347629134544037e-13,\r\n\t3.3870654439585095e-13,\r\n\t3.426957705836334e-13,\r\n\t3.4673110884571433e-13,\r\n\t3.508130817466479e-13,\r\n\t3.549422176498366e-13,\r\n\t3.5911905078046545e-13,\r\n\t3.633441212890882e-13,\r\n\t3.6761797531589297e-13,\r\n\t3.719411650556535e-13,\r\n\t3.7631424882335357e-13,\r\n\t3.807377911205232e-13,\r\n\t3.852123627022641e-13,\r\n\t3.8973854064499004e-13,\r\n\t3.9431690841488086e-13,\r\n\t3.9894805593705595e-13,\r\n\t4.036325796655106e-13,\r\n\t4.0837108265371603e-13,\r\n\t4.1316417462605965e-13,\r\n\t4.1801247204996765e-13,\r\n\t4.229165982088412e-13,\r\n\t4.2787718327569457e-13,\r\n\t4.328948643876548e-13,\r\n\t4.3797028572118007e-13,\r\n\t4.4310409856811663e-13,\r\n\t4.482969614125025e-13,\r\n\t4.535495400082557e-13,\r\n\t4.588625074576073e-13,\r\n\t4.642365442904347e-13,\r\n\t4.696723385443298e-13,\r\n\t4.751705858456312e-13,\r\n\t4.807319894912081e-13,\r\n\t4.863572605311775e-13,\r\n\t4.920471178524166e-13,\r\n\t4.978022882630504e-13,\r\n\t5.036235065777136e-13,\r\n\t5.095115157038332e-13,\r\n\t5.154670667286977e-13,\r\n\t5.214909190075309e-13,\r\n\t5.275838402524441e-13,\r\n\t5.337466066223378e-13,\r\n\t5.399800028137431e-13,\r\n\t5.462848221526231e-13,\r\n\t5.526618666871293e-13,\r\n\t5.59111947281326e-13,\r\n\t5.656358837099244e-13,\r\n\t5.722345047539741e-13,\r\n\t5.789086482975794e-13,\r\n\t5.856591614256305e-13,\r\n\t5.924869005225452e-13,\r\n\t5.993927313720541e-13,\r\n\t6.063775292580278e-13,\r\n\t6.134421790663581e-13,\r\n\t6.205875753879129e-13,\r\n\t6.278146226225564e-13,\r\n\t6.351242350842639e-13,\r\n\t6.425173371073373e-13,\r\n\t6.499948631537216e-13,\r\n\t6.575577579214638e-13,\r\n\t6.652069764542709e-13,\r\n\t6.729434842522488e-13,\r\n\t6.807682573837715e-13,\r\n\t6.886822825985279e-13,\r\n\t6.966865574417526e-13,\r\n\t7.047820903696403e-13,\r\n\t7.129699008659583e-13,\r\n\t7.212510195598972e-13,\r\n\t7.296264883451352e-13,\r\n\t7.380973605001308e-13,\r\n\t7.46664700809702e-13,\r\n\t7.553295856878322e-13,\r\n\t7.640931033017926e-13,\r\n\t7.729563536975274e-13,\r\n\t7.819204489263677e-13,\r\n\t7.909865131730339e-13,\r\n\t8.001556828850058e-13,\r\n\t8.094291069032092e-13,\r\n\t8.188079465940744e-13,\r\n\t8.282933759829603e-13,\r\n\t8.378865818889816e-13,\r\n\t8.475887640612037e-13,\r\n\t8.574011353162914e-13,\r\n\t8.673249216775568e-13,\r\n\t8.773613625154582e-13,\r\n\t8.875117106895751e-13,\r\n\t8.977772326920163e-13,\r\n\t9.081592087923608e-13,\r\n\t9.186589331840598e-13,\r\n\t9.292777141324265e-13,\r\n\t9.400168741239984e-13,\r\n\t9.508777500176986e-13,\r\n\t9.618616931973158e-13,\r\n\t9.72970069725719e-13,\r\n\t9.842042605005742e-13,\r\n\t9.955656614117854e-13,\r\n\t1.007055683500435e-12,\r\n\t1.0186757531194494e-12,\r\n\t1.0304273120958834e-12,\r\n\t1.0423118178949625e-12,\r\n\t1.0543307437856882e-12,\r\n\t1.0664855790082837e-12,\r\n\t1.0787778289432414e-12,\r\n\t1.0912090152822902e-12,\r\n\t1.1037806762009307e-12,\r\n\t1.116494366532895e-12,\r\n\t1.1293516579463002e-12,\r\n\t1.1423541391217694e-12,\r\n\t1.1555034159322012e-12,\r\n\t1.1688011116245245e-12,\r\n\t1.1822488670032834e-12,\r\n\t1.195848340616113e-12,\r\n\t1.2096012089411234e-12,\r\n\t1.2235091665762372e-12,\r\n\t1.237573926430436e-12,\r\n\t1.2517972199170087e-12,\r\n\t1.2661807971487686e-12,\r\n\t1.2807264271352857e-12,\r\n\t1.2954358979821567e-12,\r\n\t1.3103110170923015e-12,\r\n\t1.3253536113693443e-12,\r\n\t1.3405655274230782e-12,\r\n\t1.35594863177704e-12,\r\n\t1.3715048110782342e-12,\r\n\t1.3872359723089627e-12,\r\n\t1.4031440430008934e-12,\r\n\t1.4192309714512618e-12,\r\n\t1.4354987269413523e-12,\r\n\t1.451949299957146e-12,\r\n\t1.4685847024123138e-12,\r\n\t1.4854069678734063e-12,\r\n\t1.5024181517874512e-12,\r\n\t1.5196203317117818e-12,\r\n\t1.537015607546277e-12,\r\n\t1.554606101767989e-12,\r\n\t1.5723939596681076e-12,\r\n\t1.5903813495914258e-12,\r\n\t1.6085704631782075e-12,\r\n\t1.6269635156085683e-12,\r\n\t1.645562745849213e-12,\r\n\t1.6643704169030242e-12,\r\n\t1.6833888160607147e-12,\r\n\t1.702620255155585e-12,\r\n\t1.7220670708203843e-12,\r\n\t1.7417316247472511e-12,\r\n\t1.7616163039498375e-12,\r\n\t1.7817235210286316e-12,\r\n\t1.8020557144384017e-12,\r\n\t1.8226153487589826e-12,\r\n\t1.8434049149682238e-12,\r\n\t1.864426930718277e-12,\r\n\t1.8856839406141617e-12,\r\n\t1.9071785164957257e-12,\r\n\t1.9289132577218756e-12,\r\n\t1.950890791458332e-12,\r\n\t1.9731137729676867e-12,\r\n\t1.9955848859030017e-12,\r\n\t2.018306842603855e-12,\r\n\t2.0412823843958732e-12,\r\n\t2.0645142818929236e-12,\r\n\t2.0880053353026596e-12,\r\n\t2.111758374734911e-12,\r\n\t2.1357762605135495e-12,\r\n\t2.1600618834911345e-12,\r\n\t2.1846181653670752e-12,\r\n\t2.2094480590087042e-12,\r\n\t2.234554548776051e-12,\r\n\t2.259940650849423e-12,\r\n\t2.2856094135606342e-12,\r\n\t2.3115639177274565e-12,\r\n\t2.3378072769915405e-12,\r\n\t2.364342638159644e-12,\r\n\t2.3911731815484497e-12,\r\n\t2.41830212133278e-12,\r\n\t2.445732705897368e-12,\r\n\t2.4734682181921886e-12,\r\n\t2.501511976091415e-12,\r\n\t2.5298673327559092e-12,\r\n\t2.558537676999515e-12,\r\n\t2.5875264336589347e-12,\r\n\t2.616837063967403e-12,\r\n\t2.6464730659321487e-12,\r\n\t2.6764379747155927e-12,\r\n\t2.7067353630204965e-12,\r\n\t2.7373688414789235e-12,\r\n\t2.7683420590451552e-12,\r\n\t2.7996587033925535e-12,\r\n\t2.831322501314475e-12,\r\n\t2.8633372191291666e-12,\r\n\t2.895706663088726e-12,\r\n\t2.9284346797923102e-12,\r\n\t2.9615251566034222e-12,\r\n\t2.994982022071223e-12,\r\n\t3.0288092463565055e-12,\r\n\t3.063010841661542e-12,\r\n\t3.0975908626645803e-12,\r\n\t3.1325534069582934e-12,\r\n\t3.1679026154932925e-12,\r\n\t3.20364267302526e-12,\r\n\t3.2397778085674853e-12,\r\n\t3.276312295847061e-12,\r\n\t3.3132504537664854e-12,\r\n\t3.3505966468691112e-12,\r\n\t3.3883552858100943e-12,\r\n\t3.426530827831156e-12,\r\n\t3.4651277772411264e-12,\r\n\t3.504150685900187e-12,\r\n\t3.5436041537101546e-12,\r\n\t3.583492829108515e-12,\r\n\t3.6238214095684984e-12,\r\n\t3.6645946421031205e-12,\r\n\t3.705817323775346e-12,\r\n\t3.747494302212263e-12,\r\n\t3.789630476125421e-12,\r\n\t3.832230795835512e-12,\r\n\t3.87530026380306e-12,\r\n\t3.918843935163769e-12,\r\n\t3.962866918269641e-12,\r\n\t4.00737437523534e-12,\r\n\t4.052371522490106e-12,\r\n\t4.097863631335016e-12,\r\n\t4.143856028506042e-12,\r\n\t4.190354096742521e-12,\r\n\t4.237363275361478e-12,\r\n\t4.284889060837479e-12,\r\n\t4.332937007388498e-12,\r\n\t4.381512727567447e-12,\r\n\t4.430621892859689e-12,\r\n\t4.4802702342864865e-12,\r\n\t4.530463543014451e-12,\r\n\t4.5812076709711525e-12,\r\n\t4.632508531466663e-12,\r\n\t4.684372099821513e-12,\r\n\t4.73680441400081e-12,\r\n\t4.78981157525456e-12,\r\n\t4.84339974876452e-12,\r\n\t4.897575164297437e-12,\r\n\t4.952344116864737e-12,\r\n\t5.00771296738879e-12,\r\n\t5.063688143375812e-12,\r\n\t5.120276139595494e-12,\r\n\t5.1774835187671705e-12,\r\n\t5.2353169122533566e-12,\r\n\t5.293783020759139e-12,\r\n\t5.352888615039706e-12,\r\n\t5.412640536614071e-12,\r\n\t5.47304569848635e-12,\r\n\t5.5341110858735145e-12,\r\n\t5.595843756941341e-12,\r\n\t5.658250843546785e-12,\r\n\t5.7213395519884025e-12,\r\n\t5.785117163763294e-12,\r\n\t5.849591036332664e-12,\r\n\t5.914768603894059e-12,\r\n\t5.9806573781618605e-12,\r\n\t6.04726494915477e-12,\r\n\t6.114598985992041e-12,\r\n\t6.182667237696669e-12,\r\n\t6.251477534007333e-12,\r\n\t6.321037786197414e-12,\r\n\t6.3913559879030935e-12,\r\n\t6.462440215958956e-12,\r\n\t6.534298631242298e-12,\r\n\t6.6069394795249835e-12,\r\n\t6.680371092334864e-12,\r\n\t6.754601887824663e-12,\r\n\t6.829640371650217e-12,\r\n\t6.905495137856578e-12,\r\n\t6.9821748697733825e-12,\r\n\t7.059688340919289e-12,\r\n\t7.138044415914474e-12,\r\n\t7.217252051402825e-12,\r\n\t7.297320296983032e-12,\r\n\t7.378258296148635e-12,\r\n\t7.460075287237614e-12,\r\n\t7.542780604391117e-12,\r\n\t7.626383678521646e-12,\r\n\t7.710894038290902e-12,\r\n\t7.796321311096944e-12,\r\n\t7.882675224071409e-12,\r\n\t7.969965605086216e-12,\r\n\t8.058202383770321e-12,\r\n\t8.147395592536378e-12,\r\n\t8.237555367617556e-12,\r\n\t8.328691950114424e-12,\r\n\t8.420815687052141e-12,\r\n\t8.513937032448046e-12,\r\n\t8.60806654838963e-12,\r\n\t8.703214906123131e-12,\r\n\t8.799392887152862e-12,\r\n\t8.89661138435109e-12,\r\n\t8.994881403078982e-12,\r\n\t9.094214062318405e-12,\r\n\t9.19462059581482e-12,\r\n\t9.296112353231463e-12,\r\n\t9.398700801314625e-12,\r\n\t9.502397525070435e-12,\r\n\t9.607214228953107e-12,\r\n\t9.713162738064798e-12,\r\n\t9.820254999367299e-12,\r\n\t9.928503082905224e-12,\r\n\t1.003791918304159e-11,\r\n\t1.0148515619705038e-11,\r\n\t1.0260304839649588e-11,\r\n\t1.0373299417726238e-11,\r\n\t1.0487512058167474e-11,\r\n\t1.0602955595883857e-11,\r\n\t1.0719642997773482e-11,\r\n\t1.0837587364043997e-11,\r\n\t1.0956801929548194e-11,\r\n\t1.1077300065130924e-11,\r\n\t1.1199095278991338e-11,\r\n\t1.1322201218056587e-11,\r\n\t1.1446631669370136e-11,\r\n\t1.1572400561492115e-11,\r\n\t1.1699521965914874e-11,\r\n\t1.1828010098491823e-11,\r\n\t1.1957879320878887e-11,\r\n\t1.20891441419921e-11,\r\n\t1.222181921947701e-11,\r\n\t1.235591936119506e-11,\r\n\t1.2491459526721649e-11,\r\n\t1.2628454828860657e-11,\r\n\t1.276692053517216e-11,\r\n\t1.2906872069517166e-11,\r\n\t1.3048325013614472e-11,\r\n\t1.3191295108615023e-11,\r\n\t1.333579825668953e-11,\r\n\t1.3481850522633987e-11,\r\n\t1.362946813548773e-11,\r\n\t1.3778667490169488e-11,\r\n\t1.392946514912767e-11,\r\n\t1.408187784400855e-11,\r\n\t1.423592247733816e-11,\r\n\t1.4391616124222355e-11,\r\n\t1.4548976034061911e-11,\r\n\t1.4708019632286056e-11,\r\n\t1.486876452210044e-11,\r\n\t1.5031228486253587e-11,\r\n\t1.5195429488819463e-11,\r\n\t1.5361385676998832e-11,\r\n\t1.5529115382935403e-11,\r\n\t1.5698637125552e-11,\r\n\t1.5869969612402262e-11,\r\n\t1.6043131741542734e-11,\r\n\t1.6218142603420386e-11,\r\n\t1.639502148277975e-11,\r\n\t1.6573787860588188e-11,\r\n\t1.6754461415979728e-11,\r\n\t1.693706202821733e-11,\r\n\t1.712160977867424e-11,\r\n\t1.7308124952834316e-11,\r\n\t1.7496628042311852e-11,\r\n\t1.7687139746890118e-11,\r\n\t1.787968097658043e-11,\r\n\t1.8074272853700213e-11,\r\n\t1.827093671497131e-11,\r\n\t1.8469694113638767e-11,\r\n\t1.867056682160906e-11,\r\n\t1.8873576831609888e-11,\r\n\t1.9078746359369936e-11,\r\n\t1.9286097845819746e-11,\r\n\t1.9495653959314e-11,\r\n\t1.9707437597874297e-11,\r\n\t1.9921471891454472e-11,\r\n\t2.0137780204226705e-11,\r\n\t2.0356386136889812e-11,\r\n\t2.057731352900036e-11,\r\n\t2.0800586461323957e-11,\r\n\t2.102622925821261e-11,\r\n\t2.125426649e-11,\r\n\t2.1484722975425232e-11,\r\n\t2.1717623784073974e-11,\r\n\t2.195299423884865e-11,\r\n\t2.2190859918456392e-11,\r\n\t2.2431246659926614e-11,\r\n\t2.2674180561146965e-11,\r\n\t2.2919687983428814e-11,\r\n\t2.3167795554091928e-11,\r\n\t2.341853016907933e-11,\r\n\t2.3671918995591338e-11,\r\n\t2.3927989474750368e-11,\r\n\t2.418676932428556e-11,\r\n\t2.4448286541248573e-11,\r\n\t2.4712569404749508e-11,\r\n\t2.4979646478724866e-11,\r\n\t2.5249546614725624e-11,\r\n\t2.5522298954737784e-11,\r\n\t2.579793293402479e-11,\r\n\t2.60764782840006e-11,\r\n\t2.635796503512676e-11,\r\n\t2.6642423519841314e-11,\r\n\t2.692988437551081e-11,\r\n\t2.722037854741344e-11,\r\n\t2.7513937291749774e-11,\r\n\t2.7810592178681237e-11,\r\n\t2.811037509539874e-11,\r\n\t2.841331824921926e-11,\r\n\t2.8719454170712433e-11,\r\n\t2.9028815716856536e-11,\r\n\t2.934143607422427e-11,\r\n\t2.965734876219928e-11,\r\n\t2.9976587636222314e-11,\r\n\t3.029918689106866e-11,\r\n\t3.062518106415631e-11,\r\n\t3.095460503888602e-11,\r\n\t3.12874940480117e-11,\r\n\t3.1623883677044264e-11,\r\n\t3.1963809867686355e-11,\r\n\t3.230730892130018e-11,\r\n\t3.26544175024078e-11,\r\n\t3.3005172642224904e-11,\r\n\t3.335961174222749e-11,\r\n\t3.3717772577751835e-11,\r\n\t3.407969330163017e-11,\r\n\t3.44454124478578e-11,\r\n\t3.481496893529882e-11,\r\n\t3.5188402071420815e-11,\r\n\t3.556575155607175e-11,\r\n\t3.594705748528685e-11,\r\n\t3.6332360355135247e-11,\r\n\t3.6721701065598185e-11,\r\n\t3.711512092448973e-11,\r\n\t3.751266165140911e-11,\r\n\t3.7914365381734205e-11,\r\n\t3.8320274670647635e-11,\r\n\t3.873043249720778e-11,\r\n\t3.9144882268449965e-11,\r\n\t3.9563667823534576e-11,\r\n\t3.998683343792456e-11,\r\n\t4.0414423827613506e-11,\r\n\t4.084648415338112e-11,\r\n\t4.128306002510008e-11,\r\n\t4.172419750607355e-11,\r\n\t4.2169943117422166e-11,\r\n\t4.262034384250301e-11,\r\n\t4.307544713137974e-11,\r\n\t4.353530090532446e-11,\r\n\t4.399995356137252e-11,\r\n\t4.446945397690803e-11,\r\n\t4.4943851514305487e-11,\r\n\t4.542319602560105e-11,\r\n\t4.590753785722053e-11,\r\n\t4.639692785473988e-11,\r\n\t4.6891417367701004e-11,\r\n\t4.739105825446344e-11,\r\n\t4.7895902887106614e-11,\r\n\t4.840600415637704e-11,\r\n\t4.892141547667987e-11,\r\n\t4.944219079111954e-11,\r\n\t4.996838457658549e-11,\r\n\t5.0500051848886294e-11,\r\n\t5.103724816793128e-11,\r\n\t5.1580029642960597e-11,\r\n\t5.212845293782434e-11,\r\n\t5.268257527631001e-11,\r\n\t5.3242454447520424e-11,\r\n\t5.38081488113011e-11,\r\n\t5.4379717303718434e-11,\r\n\t5.495721944258945e-11,\r\n\t5.554071533306097e-11,\r\n\t5.6130265673243576e-11,\r\n\t5.672593175989528e-11,\r\n\t5.73277754941595e-11,\r\n\t5.793585938735629e-11,\r\n\t5.85502465668267e-11,\r\n\t5.917100078183047e-11,\r\n\t5.979818640950386e-11,\r\n\t6.04318684608623e-11,\r\n\t6.107211258686998e-11,\r\n\t6.171898508455872e-11,\r\n\t6.237255290320775e-11,\r\n\t6.303288365057341e-11,\r\n\t6.370004559918727e-11,\r\n\t6.437410769270426e-11,\r\n\t6.505513955231472e-11,\r\n\t6.574321148320794e-11,\r\n\t6.643839448110733e-11,\r\n\t6.714076023885541e-11,\r\n\t6.785038115306808e-11,\r\n\t6.856733033083979e-11,\r\n\t6.929168159652305e-11,\r\n\t7.002350949856154e-11,\r\n\t7.076288931639315e-11,\r\n\t7.150989706740536e-11,\r\n\t7.226460951397101e-11,\r\n\t7.302710417053435e-11,\r\n\t7.379745931077362e-11,\r\n\t7.457575397481824e-11,\r\n\t7.536206797654412e-11,\r\n\t7.615648191092878e-11,\r\n\t7.695907716147764e-11,\r\n\t7.776993590771387e-11,\r\n\t7.85891411327444e-11,\r\n\t7.941677663089167e-11,\r\n\t8.02529270153927e-11,\r\n\t8.109767772617596e-11,\r\n\t8.195111503770014e-11,\r\n\t8.281332606687876e-11,\r\n\t8.368439878106189e-11,\r\n\t8.456442200610323e-11,\r\n\t8.545348543449412e-11,\r\n\t8.635167963357713e-11,\r\n\t8.725909605383039e-11,\r\n\t8.817582703723241e-11,\r\n\t8.910196582569993e-11,\r\n\t9.003760656960603e-11,\r\n\t9.098284433637296e-11,\r\n\t9.193777511914758e-11,\r\n\t9.29024958455534e-11,\r\n\t9.387710438652366e-11,\r\n\t9.486169956521507e-11,\r\n\t9.585638116600464e-11,\r\n\t9.686124994356502e-11,\r\n\t9.787640763202799e-11,\r\n\t9.890195695422702e-11,\r\n\t9.993800163102673e-11,\r\n\t1.0098464639073853e-10,\r\n\t1.0204199697861783e-10,\r\n\t1.0311016016645413e-10,\r\n\t1.0418924376224354e-10,\r\n\t1.0527935661995155e-10,\r\n\t1.0638060864936643e-10,\r\n\t1.0749311082603784e-10,\r\n\t1.0861697520131188e-10,\r\n\t1.0975231491245303e-10,\r\n\t1.1089924419286043e-10,\r\n\t1.1205787838237614e-10,\r\n\t1.132283339376895e-10,\r\n\t1.1441072844283167e-10,\r\n\t1.1560518061977113e-10,\r\n\t1.1681181033910143e-10,\r\n\t1.1803073863082733e-10,\r\n\t1.1926208769525084e-10,\r\n\t1.2050598091395182e-10,\r\n\t1.217625428608735e-10,\r\n\t1.2303189931350492e-10,\r\n\t1.243141772641647e-10,\r\n\t1.2560950493139533e-10,\r\n\t1.2691801177144152e-10,\r\n\t1.2823982848985775e-10,\r\n\t1.29575087053201e-10,\r\n\t1.309239207008429e-10,\r\n\t1.3228646395687382e-10,\r\n\t1.336628526421316e-10,\r\n\t1.3505322388633224e-10,\r\n\t1.3645771614030305e-10,\r\n\t1.378764691883387e-10,\r\n\t1.3930962416065667e-10,\r\n\t1.4075732354598403e-10,\r\n\t1.4221971120423254e-10,\r\n\t1.436969323793115e-10,\r\n\t1.4518913371203756e-10,\r\n\t1.466964632531815e-10,\r\n\t1.4821907047661258e-10,\r\n\t1.4975710629257262e-10,\r\n\t1.5131072306106565e-10,\r\n\t1.52880074605378e-10,\r\n\t1.544653162257028e-10,\r\n\t1.5606660471290317e-10,\r\n\t1.576840983623861e-10,\r\n\t1.593179569881215e-10,\r\n\t1.6096834193676088e-10,\r\n\t1.6263541610190458e-10,\r\n\t1.6431934393848135e-10,\r\n\t1.6602029147727988e-10,\r\n\t1.6773842633958033e-10,\r\n\t1.6947391775194457e-10,\r\n\t1.7122693656111913e-10,\r\n\t1.7299765524909329e-10,\r\n\t1.7478624794826839e-10,\r\n\t1.765928904567821e-10,\r\n\t1.7841776025396186e-10,\r\n\t1.802610365159154e-10,\r\n\t1.8212290013127044e-10,\r\n\t1.8400353371704327e-10,\r\n\t1.8590312163465764e-10,\r\n\t1.8782185000610645e-10,\r\n\t1.8975990673025517e-10,\r\n\t1.917174814992932e-10,\r\n\t1.9369476581533209e-10,\r\n\t1.9569195300715204e-10,\r\n\t1.9770923824710038e-10,\r\n\t1.9974681856813744e-10,\r\n\t2.0180489288103712e-10,\r\n\t2.03883661991741e-10,\r\n\t2.059833286188661e-10,\r\n\t2.0810409741137387e-10,\r\n\t2.1024617496638735e-10,\r\n\t2.124097698471784e-10,\r\n\t2.1459509260130703e-10,\r\n\t2.1680235577892898e-10,\r\n\t2.1903177395125794e-10,\r\n\t2.2128356372920182e-10,\r\n\t2.2355794378216548e-10,\r\n\t2.2585513485699963e-10,\r\n\t2.2817535979715949e-10,\r\n\t2.305188435619827e-10,\r\n\t2.328858132461943e-10,\r\n\t2.3527649809952856e-10,\r\n\t2.376911295465803e-10,\r\n\t2.4012994120677914e-10,\r\n\t2.42593168914594e-10,\r\n\t2.450810507398668e-10,\r\n\t2.4759382700837674e-10,\r\n\t2.5013174032252976e-10,\r\n\t2.526950355823004e-10,\r\n\t2.552839600062854e-10,\r\n\t2.5789876315301306e-10,\r\n\t2.6053969694238153e-10,\r\n\t2.6320701567734347e-10,\r\n\t2.6590097606572366e-10,\r\n\t2.6862183724229045e-10,\r\n\t2.7136986079097007e-10,\r\n\t2.74145310767295e-10,\r\n\t2.769484537210222e-10,\r\n\t2.797795587189851e-10,\r\n\t2.826388973681097e-10,\r\n\t2.855267438386641e-10,\r\n\t2.884433748876878e-10,\r\n\t2.913890698826675e-10,\r\n\t2.943641108253714e-10,\r\n\t2.973687823759304e-10,\r\n\t3.0040337187712224e-10,\r\n\t3.0346816937886124e-10,\r\n\t3.0656346766291846e-10,\r\n\t3.096895622678475e-10,\r\n\t3.128467515141367e-10,\r\n\t3.1603533652958106e-10,\r\n\t3.19255621274876e-10,\r\n\t3.2250791256944224e-10,\r\n\t3.2579252011747e-10,\r\n\t3.291097565341976e-10,\r\n\t3.3245993737242046e-10,\r\n\t3.3584338114923063e-10,\r\n\t3.392604093729988e-10,\r\n\t3.427113465705789e-10,\r\n\t3.4619652031477e-10,\r\n\t3.4971626125200377e-10,\r\n\t3.532709031302872e-10,\r\n\t3.568607828273767e-10,\r\n\t3.6048624037921673e-10,\r\n\t3.641476190086071e-10,\r\n\t3.6784526515414813e-10,\r\n\t3.7157952849940674e-10,\r\n\t3.7535076200237656e-10,\r\n\t3.791593219251501e-10,\r\n\t3.830055678638948e-10,\r\n\t3.8688986277906355e-10,\r\n\t3.908125730258951e-10,\r\n\t3.947740683851253e-10,\r\n\t3.9877472209406e-10,\r\n\t4.028149108778079e-10,\r\n\t4.0689501498090064e-10,\r\n\t4.110154181990786e-10,\r\n\t4.151765079114622e-10,\r\n\t4.193786751128919e-10,\r\n\t4.236223144466685e-10,\r\n\t4.279078242374567e-10,\r\n\t4.32235606524604e-10,\r\n\t4.366060670956182e-10,\r\n\t4.410196155200584e-10,\r\n\t4.4547666518361825e-10,\r\n\t4.4997763332260075e-10,\r\n\t4.545229410585857e-10,\r\n\t4.591130134335287e-10,\r\n\t4.637482794450232e-10,\r\n\t4.684291720820092e-10,\r\n\t4.731561283606579e-10,\r\n\t4.779295893606996e-10,\r\n\t4.827500002619399e-10,\r\n\t4.87617810381215e-10,\r\n\t4.925334732095582e-10,\r\n\t4.974974464497697e-10,\r\n\t5.025101920542651e-10,\r\n\t5.07572176263278e-10,\r\n\t5.126838696433849e-10,\r\n\t5.178457471263523e-10,\r\n\t5.230582880483475e-10,\r\n\t5.283219761894565e-10,\r\n\t5.336372998135718e-10,\r\n\t5.390047517086168e-10,\r\n\t5.444248292271025e-10,\r\n\t5.498980343270568e-10,\r\n\t5.554248736133013e-10,\r\n\t5.610058583790768e-10,\r\n\t5.666415046480378e-10,\r\n\t5.723323332166016e-10,\r\n\t5.780788696966756e-10,\r\n\t5.838816445587411e-10,\r\n\t5.897411931753061e-10,\r\n\t5.956580558647511e-10,\r\n\t6.016327779355415e-10,\r\n\t6.076659097308099e-10,\r\n\t6.137580066733489e-10,\r\n\t6.199096293109568e-10,\r\n\t6.26121343362231e-10,\r\n\t6.32393719762661e-10,\r\n\t6.387273347112334e-10,\r\n\t6.451227697173351e-10,\r\n\t6.515806116481489e-10,\r\n\t6.581014527763555e-10,\r\n\t6.646858908283517e-10,\r\n\t6.71334529032801e-10,\r\n\t6.780479761696737e-10,\r\n\t6.848268466195998e-10,\r\n\t6.916717604137797e-10,\r\n\t6.985833432842151e-10,\r\n\t7.055622267144536e-10,\r\n\t7.126090479906581e-10,\r\n\t7.197244502532545e-10,\r\n\t7.269090825488987e-10,\r\n\t7.341635998829865e-10,\r\n\t7.414886632725035e-10,\r\n\t7.488849397994544e-10,\r\n\t7.563531026646345e-10,\r\n\t7.638938312419629e-10,\r\n\t7.715078111331628e-10,\r\n\t7.791957342230332e-10,\r\n\t7.869582987350982e-10,\r\n\t7.947962092878133e-10,\r\n\t8.027101769511289e-10,\r\n\t8.107009193036855e-10,\r\n\t8.187691604904061e-10,\r\n\t8.269156312805816e-10,\r\n\t8.351410691264751e-10,\r\n\t8.434462182224329e-10,\r\n\t8.518318295644646e-10,\r\n\t8.602986610103706e-10,\r\n\t8.688474773403473e-10,\r\n\t8.774790503181394e-10,\r\n\t8.861941587526724e-10,\r\n\t8.949935885602556e-10,\r\n\t9.038781328272805e-10,\r\n\t9.12848591873462e-10,\r\n\t9.219057733156174e-10,\r\n\t9.31050492131999e-10,\r\n\t9.40283570727139e-10,\r\n\t9.496058389972893e-10,\r\n\t9.59018134396381e-10,\r\n\t9.685213020025553e-10,\r\n\t9.78116194585275e-10,\r\n\t9.878036726729629e-10,\r\n\t9.975846046212662e-10,\r\n\t1.0074598666818564e-09,\r\n\t1.0174303430718286e-09,\r\n\t1.0274969260436933e-09,\r\n\t1.0376605159559681e-09,\r\n\t1.0479220213443002e-09,\r\n\t1.0582823589933048e-09,\r\n\t1.0687424540089066e-09,\r\n\t1.0793032398913767e-09,\r\n\t1.0899656586088801e-09,\r\n\t1.1007306606717598e-09,\r\n\t1.111599205207376e-09,\r\n\t1.1225722600356287e-09,\r\n\t1.1336508017450036e-09,\r\n\t1.1448358157694389e-09,\r\n\t1.156128296465662e-09,\r\n\t1.1675292471913384e-09,\r\n\t1.1790396803836953e-09,\r\n\t1.1906606176389939e-09,\r\n\t1.202393089792551e-09,\r\n\t1.2142381369994953e-09,\r\n\t1.226196808816112e-09,\r\n\t1.2382701642820115e-09,\r\n\t1.2504592720028622e-09,\r\n\t1.262765210233917e-09,\r\n\t1.2751890669641229e-09,\r\n\t1.2877319400010634e-09,\r\n\t1.3003949370565367e-09,\r\n\t1.3131791758328976e-09,\r\n\t1.3260857841100542e-09,\r\n\t1.3391158998332443e-09,\r\n\t1.3522706712015957e-09,\r\n\t1.365551256757308e-09,\r\n\t1.3789588254756915e-09,\r\n\t1.3924945568558477e-09,\r\n\t1.4061596410123008e-09,\r\n\t1.4199552787671357e-09,\r\n\t1.4338826817431363e-09,\r\n\t1.447943072457524e-09,\r\n\t1.4621376844166772e-09,\r\n\t1.4764677622114114e-09,\r\n\t1.4909345616132636e-09,\r\n\t1.5055393496713797e-09,\r\n\t1.5202834048104702e-09,\r\n\t1.5351680169292988e-09,\r\n\t1.5501944875001919e-09,\r\n\t1.565364129669263e-09,\r\n\t1.5806782683576026e-09,\r\n\t1.596138240363142e-09,\r\n\t1.6117453944635089e-09,\r\n\t1.6275010915196053e-09,\r\n\t1.6434067045802672e-09,\r\n\t1.6594636189874933e-09,\r\n\t1.6756732324828167e-09,\r\n\t1.6920369553143572e-09,\r\n\t1.7085562103449852e-09,\r\n\t1.725232433161124e-09,\r\n\t1.7420670721826742e-09,\r\n\t1.7590615887737107e-09,\r\n\t1.7762174573541898e-09,\r\n\t1.793536165512521e-09,\r\n\t1.8110192141190952e-09,\r\n\t1.8286681174407772e-09,\r\n\t1.8464844032562777e-09,\r\n\t1.864469612972576e-09,\r\n\t1.8826253017422242e-09,\r\n\t1.9009530385816595e-09,\r\n\t1.919454406490511e-09,\r\n\t1.938131002571834e-09,\r\n\t1.9569844381534172e-09,\r\n\t1.976016338910029e-09,\r\n\t1.995228344986699e-09,\r\n\t2.014622111123013e-09,\r\n\t2.0341993067784635e-09,\r\n\t2.053961616258754e-09,\r\n\t2.073910738843254e-09,\r\n\t2.0940483889134163e-09,\r\n\t2.1143762960822898e-09,\r\n\t2.134896205325106e-09,\r\n\t2.1556098771109473e-09,\r\n\t2.176519087535451e-09,\r\n\t2.1976256284545935e-09,\r\n\t2.2189313076197644e-09,\r\n\t2.2404379488136807e-09,\r\n\t2.262147391987576e-09,\r\n\t2.2840614933994566e-09,\r\n\t2.3061821257536466e-09,\r\n\t2.328511178341199e-09,\r\n\t2.3510505571817143e-09,\r\n\t2.3738021851661487e-09,\r\n\t2.3967680022009865e-09,\r\n\t2.4199499653533644e-09,\r\n\t2.443350048997569e-09,\r\n\t2.466970244962564e-09,\r\n\t2.490812562681032e-09,\r\n\t2.514879029339203e-09,\r\n\t2.539171690028299e-09,\r\n\t2.563692607896918e-09,\r\n\t2.5884438643049887e-09,\r\n\t2.613427558978646e-09,\r\n\t2.6386458101665817e-09,\r\n\t2.6641007547975633e-09,\r\n\t2.689794548639449e-09,\r\n\t2.715729366459163e-09,\r\n\t2.7419074021842694e-09,\r\n\t2.7683308690656636e-09,\r\n\t2.7950019998418313e-09,\r\n\t2.8219230469041465e-09,\r\n\t2.84909628246374e-09,\r\n\t2.876523998719634e-09,\r\n\t2.904208508028301e-09,\r\n\t2.9321521430745026e-09,\r\n\t2.9603572570436603e-09,\r\n\t2.9888262237955034e-09,\r\n\t3.0175614380391848e-09,\r\n\t3.046565315509858e-09,\r\n\t3.0758402931465713e-09,\r\n\t3.105388829271753e-09,\r\n\t3.135213403772041e-09,\r\n\t3.165316518280639e-09,\r\n\t3.195700696361114e-09,\r\n\t3.2263684836927648e-09,\r\n\t3.2573224482573398e-09,\r\n\t3.2885651805274612e-09,\r\n\t3.320099293656418e-09,\r\n\t3.3519274236695644e-09,\r\n\t3.3840522296573027e-09,\r\n\t3.4164763939695083e-09,\r\n\t3.449202622411684e-09,\r\n\t3.4822336444425744e-09,\r\n\t3.5155722133734016e-09,\r\n\t3.5492211065689103e-09,\r\n\t3.5831831256495185e-09,\r\n\t3.6174610966957873e-09,\r\n\t3.652057870454001e-09,\r\n\t3.6869763225437563e-09,\r\n\t3.7222193536668087e-09,\r\n\t3.757789889818187e-09,\r\n\t3.7936908824984214e-09,\r\n\t3.829925308928025e-09,\r\n\t3.866496172263082e-09,\r\n\t3.903406501813209e-09,\r\n\t3.940659353260857e-09,\r\n\t3.978257808882574e-09,\r\n\t4.016204977771789e-09,\r\n\t4.0545039960638044e-09,\r\n\t4.093158027162175e-09,\r\n\t4.132170261967349e-09,\r\n\t4.171543919106474e-09,\r\n\t4.211282245165876e-09,\r\n\t4.251388514924748e-09,\r\n\t4.291866031591157e-09,\r\n\t4.3327181270394185e-09,\r\n\t4.373948162050035e-09,\r\n\t4.415559526551097e-09,\r\n\t4.457555639861711e-09,\r\n\t4.499939950937307e-09,\r\n\t4.542715938617315e-09,\r\n\t4.585887111874246e-09,\r\n\t4.6294570100650945e-09,\r\n\t4.67342920318476e-09,\r\n\t4.717807292121384e-09,\r\n\t4.762594908913739e-09,\r\n\t4.8077957170108e-09,\r\n\t4.8534134115331526e-09,\r\n\t4.899451719536763e-09,\r\n\t4.945914400278616e-09,\r\n\t4.992805245484627e-09,\r\n\t5.0401280796195835e-09,\r\n\t5.087886760159368e-09,\r\n\t5.136085177865146e-09,\r\n\t5.184727257059979e-09,\r\n\t5.233816955907444e-09,\r\n\t5.283358266692551e-09,\r\n\t5.3333552161049505e-09,\r\n\t5.383811865524214e-09,\r\n\t5.434732311307602e-09,\r\n\t5.48612068507997e-09,\r\n\t5.537981154025996e-09,\r\n\t5.59031792118483e-09,\r\n\t5.6431352257468714e-09,\r\n\t5.696437343353127e-09,\r\n\t5.750228586396966e-09,\r\n\t5.804513304327762e-09,\r\n\t5.85929588395771e-09,\r\n\t5.914580749770535e-09,\r\n\t5.970372364232888e-09,\r\n\t6.02667522810785e-09,\r\n\t6.0834938807715126e-09,\r\n\t6.140832900531498e-09,\r\n\t6.19869690494855e-09,\r\n\t6.257090551159763e-09,\r\n\t6.316018536205547e-09,\r\n\t6.375485597358224e-09,\r\n\t6.435496512453817e-09,\r\n\t6.49605610022587e-09,\r\n\t6.557169220642509e-09,\r\n\t6.618840775245792e-09,\r\n\t6.681075707494017e-09,\r\n\t6.743879003106079e-09,\r\n\t6.807255690409452e-09,\r\n\t6.871210840690289e-09,\r\n\t6.935749568546531e-09,\r\n\t7.000877032243415e-09,\r\n\t7.066598434072452e-09,\r\n\t7.132919020712545e-09,\r\n\t7.199844083594595e-09,\r\n\t7.267378959268191e-09,\r\n\t7.335529029771718e-09,\r\n\t7.404299723005647e-09,\r\n\t7.473696513107799e-09,\r\n\t7.543724920832581e-09,\r\n\t7.614390513932177e-09,\r\n\t7.68569890754204e-09,\r\n\t7.757655764567993e-09,\r\n\t7.830266796077215e-09,\r\n\t7.903537761692152e-09,\r\n\t7.977474469987353e-09,\r\n\t8.052082778889654e-09,\r\n\t8.127368596080971e-09,\r\n\t8.203337879404959e-09,\r\n\t8.279996637276316e-09,\r\n\t8.357350929093586e-09,\r\n\t8.435406865654766e-09,\r\n\t8.514170609576739e-09,\r\n\t8.59364837571751e-09,\r\n\t8.673846431602086e-09,\r\n\t8.75477109785124e-09,\r\n\t8.836428748613917e-09,\r\n\t8.918825812003245e-09,\r\n\t9.001968770535279e-09,\r\n\t9.085864161571726e-09,\r\n\t9.170518577765812e-09,\r\n\t9.25593866751195e-09,\r\n\t9.342131135398325e-09,\r\n\t9.429102742663603e-09,\r\n\t9.516860307656817e-09,\r\n\t9.605410706301067e-09,\r\n\t9.694760872560515e-09,\r\n\t9.784917798911113e-09,\r\n\t9.875888536815367e-09,\r\n\t9.967680197200105e-09,\r\n\t1.0060299950938556e-08,\r\n\t1.0153755029335551e-08,\r\n\t1.0248052724617294e-08,\r\n\t1.0343200390424105e-08,\r\n\t1.043920544230747e-08,\r\n\t1.0536075358230618e-08,\r\n\t1.0633817679073438e-08,\r\n\t1.0732440009140856e-08,\r\n\t1.0831950016675152e-08,\r\n\t1.093235543437236e-08,\r\n\t1.1033664059902981e-08,\r\n\t1.1135883756436171e-08,\r\n\t1.1239022453167995e-08,\r\n\t1.1343088145854123e-08,\r\n\t1.1448088897346581e-08,\r\n\t1.15540328381344e-08,\r\n\t1.1660928166888362e-08,\r\n\t1.1768783151010175e-08,\r\n\t1.187760612718607e-08,\r\n\t1.1987405501944227e-08,\r\n\t1.2098189752216411e-08,\r\n\t1.2209967425904323e-08,\r\n\t1.232274714245045e-08,\r\n\t1.2436537593412586e-08,\r\n\t1.2551347543043171e-08,\r\n\t1.2667185828873254e-08,\r\n\t1.2784061362300713e-08,\r\n\t1.2901983129183001e-08,\r\n\t1.3020960190434257e-08,\r\n\t1.3141001682627442e-08,\r\n\t1.3262116818600702e-08,\r\n\t1.3384314888068602e-08,\r\n\t1.350760525823764e-08,\r\n\t1.363199737442706e-08,\r\n\t1.3757500760694086e-08,\r\n\t1.3884125020463691e-08,\r\n\t1.4011879837163752e-08,\r\n\t1.414077497486433e-08,\r\n\t1.427082027892286e-08,\r\n\t1.4402025676633055e-08,\r\n\t1.453440117787962e-08,\r\n\t1.4667956875797508e-08,\r\n\t1.4802702947436735e-08,\r\n\t1.493864965443144e-08,\r\n\t1.507580734367485e-08,\r\n\t1.5214186447998604e-08,\r\n\t1.535379748685826e-08,\r\n\t1.5494651067023092e-08,\r\n\t1.5636757883271176e-08,\r\n\t1.5780128719090418e-08,\r\n\t1.59247744473846e-08,\r\n\t1.607070603118455e-08,\r\n\t1.6217934524364685e-08,\r\n\t1.63664710723653e-08,\r\n\t1.6516326912920575e-08,\r\n\t1.6667513376791414e-08,\r\n\t1.6820041888503913e-08,\r\n\t1.6973923967093964e-08,\r\n\t1.712917122685742e-08,\r\n\t1.7285795378105414e-08,\r\n\t1.7443808227925577e-08,\r\n\t1.7603221680949185e-08,\r\n\t1.7764047740124526e-08,\r\n\t1.792629850749519e-08,\r\n\t1.808998618498436e-08,\r\n\t1.825512307518615e-08,\r\n\t1.8421721582161693e-08,\r\n\t1.858979421224132e-08,\r\n\t1.875935357483348e-08,\r\n\t1.893041238323958e-08,\r\n\t1.9102983455474597e-08,\r\n\t1.927707971509369e-08,\r\n\t1.9452714192025642e-08,\r\n\t1.9629900023412718e-08,\r\n\t1.9808650454456082e-08,\r\n\t1.9988978839267572e-08,\r\n\t2.0170898641728936e-08,\r\n\t2.0354423436356346e-08,\r\n\t2.0539566909172367e-08,\r\n\t2.072634285858322e-08,\r\n\t2.0914765196264066e-08,\r\n\t2.110484794804999e-08,\r\n\t2.1296605254834235e-08,\r\n\t2.14900513734721e-08,\r\n\t2.1685200677693203e-08,\r\n\t2.188206765901949e-08,\r\n\t2.2080666927690174e-08,\r\n\t2.228101321359403e-08,\r\n\t2.2483121367207952e-08,\r\n\t2.2687006360543967e-08,\r\n\t2.289268328810133e-08,\r\n\t2.310016736782738e-08,\r\n\t2.3309473942084462e-08,\r\n\t2.3520618478625287e-08,\r\n\t2.3733616571574087e-08,\r\n\t2.3948483942416337e-08,\r\n\t2.4165236440994718e-08,\r\n\t2.438389004651408e-08,\r\n\t2.4604460868552412e-08,\r\n\t2.4826965148079508e-08,\r\n\t2.5051419258483984e-08,\r\n\t2.527783970660777e-08,\r\n\t2.5506243133787972e-08,\r\n\t2.5736646316905814e-08,\r\n\t2.5969066169444736e-08,\r\n\t2.6203519742556035e-08,\r\n\t2.644002422613175e-08,\r\n\t2.6678596949885435e-08,\r\n\t2.691925538444184e-08,\r\n\t2.716201714243455e-08,\r\n\t2.7406899979611076e-08,\r\n\t2.7653921795945987e-08,\r\n\t2.7903100636763553e-08,\r\n\t2.8154454693867524e-08,\r\n\t2.840800230668008e-08,\r\n\t2.8663761963388005e-08,\r\n\t2.8921752302098757e-08,\r\n\t2.9181992112004358e-08,\r\n\t2.9444500334554075e-08,\r\n\t2.9709296064634947e-08,\r\n\t2.9976398551762606e-08,\r\n\t3.02458272012795e-08,\r\n\t3.051760157556287e-08,\r\n\t3.079174139524089e-08,\r\n\t3.106826654041752e-08,\r\n\t3.134719705190865e-08,\r\n\t3.162855313248387e-08,\r\n\t3.191235514812026e-08,\r\n\t3.219862362926341e-08,\r\n\t3.248737927209992e-08,\r\n\t3.277864293983657e-08,\r\n\t3.3072435663991195e-08,\r\n\t3.336877864569121e-08,\r\n\t3.3667693256983654e-08,\r\n\t3.396920104215321e-08,\r\n\t3.4273323719049835e-08,\r\n\t3.458008318042754e-08,\r\n\t3.4889501495292073e-08,\r\n\t3.5201600910258535e-08,\r\n\t3.5516403850918206e-08,\r\n\t3.583393292321724e-08,\r\n\t3.61542109148438e-08,\r\n\t3.647726079662578e-08,\r\n\t3.680310572393859e-08,\r\n\t3.7131769038124596e-08,\r\n\t3.7463274267920595e-08,\r\n\t3.7797645130897515e-08,\r\n\t3.813490553490947e-08,\r\n\t3.847507957955498e-08,\r\n\t3.88181915576471e-08,\r\n\t3.916426595669455e-08,\r\n\t3.951332746039454e-08,\r\n\t3.9865400950136585e-08,\r\n\t4.022051150651595e-08,\r\n\t4.057868441085838e-08,\r\n\t4.093994514675692e-08,\r\n\t4.130431940161994e-08,\r\n\t4.167183306822908e-08,\r\n\t4.204251224630867e-08,\r\n\t4.241638324410791e-08,\r\n\t4.279347257999424e-08,\r\n\t4.317380698405692e-08,\r\n\t4.3557413399722643e-08,\r\n\t4.394431898538453e-08,\r\n\t4.433455111604081e-08,\r\n\t4.4728137384947155e-08,\r\n\t4.51251056052783e-08,\r\n\t4.552548381180537e-08,\r\n\t4.5929300262582474e-08,\r\n\t4.633658344064691e-08,\r\n\t4.6747362055730266e-08,\r\n\t4.716166504598366e-08,\r\n\t4.7579521579714335e-08,\r\n\t4.800096105713534e-08,\r\n\t4.842601311212669e-08,\r\n\t4.885470761401049e-08,\r\n\t4.928707466933911e-08,\r\n\t4.972314462369416e-08,\r\n\t5.016294806350134e-08,\r\n\t5.0606515817854865e-08,\r\n\t5.1053878960359546e-08,\r\n\t5.1505068810981086e-08,\r\n\t5.196011693791391e-08,\r\n\t5.241905515945899e-08,\r\n\t5.2881915545918716e-08,\r\n\t5.334873042150232e-08,\r\n\t5.3819532366245987e-08,\r\n\t5.429435421794667e-08,\r\n\t5.47732290741116e-08,\r\n\t5.5256190293918814e-08,\r\n\t5.5743271500192684e-08,\r\n\t5.623450658139442e-08,\r\n\t5.67299296936272e-08,\r\n\t5.722957526265433e-08,\r\n\t5.773347798593118e-08,\r\n\t5.824167283465353e-08,\r\n\t5.875419505582098e-08,\r\n\t5.927108017431285e-08,\r\n\t5.97923639949792e-08,\r\n\t6.031808260474845e-08,\r\n\t6.084827237474965e-08,\r\n\t6.138296996244903e-08,\r\n\t6.192221231380067e-08,\r\n\t6.246603666541577e-08,\r\n\t6.30144805467446e-08,\r\n\t6.356758178227593e-08,\r\n\t6.412537849374901e-08,\r\n\t6.468790910238552e-08,\r\n\t6.525521233113365e-08,\r\n\t6.582732720693147e-08,\r\n\t6.640429306298207e-08,\r\n\t6.698614954104922e-08,\r\n\t6.757293659376782e-08,\r\n\t6.816469448696847e-08,\r\n\t6.876146380202212e-08,\r\n\t6.936328543819865e-08,\r\n\t6.997020061504449e-08,\r\n\t7.058225087477343e-08,\r\n\t7.1199478084679e-08,\r\n\t7.182192443955992e-08,\r\n\t7.244963246416641e-08,\r\n\t7.308264501565841e-08,\r\n\t7.37210052860875e-08,\r\n\t7.436475680489272e-08,\r\n\t7.501394344141307e-08,\r\n\t7.566860940742139e-08,\r\n\t7.632879925967142e-08,\r\n\t7.699455790246866e-08,\r\n\t7.76659305902535e-08,\r\n\t7.834296293020619e-08,\r\n\t7.902570088486801e-08,\r\n\t7.97141907747843e-08,\r\n\t8.040847928116096e-08,\r\n\t8.110861344854459e-08,\r\n\t8.181464068751658e-08,\r\n\t8.252660877741273e-08,\r\n\t8.324456586905489e-08,\r\n\t8.396856048750574e-08,\r\n\t8.469864153484121e-08,\r\n\t8.543485829294595e-08,\r\n\t8.617726042632368e-08,\r\n\t8.692589798492814e-08,\r\n\t8.768082140701618e-08,\r\n\t8.84420815220209e-08,\r\n\t8.92097295534415e-08,\r\n\t8.998381712175566e-08,\r\n\t9.076439624735137e-08,\r\n\t9.15515193534827e-08,\r\n\t9.23452392692411e-08,\r\n\t9.3145609232549e-08,\r\n\t9.39526828931762e-08,\r\n\t9.476651431577688e-08,\r\n\t9.558715798294598e-08,\r\n\t9.641466879829697e-08,\r\n\t9.724910208956365e-08,\r\n\t9.809051361172069e-08,\r\n\t9.893895955012934e-08,\r\n\t9.979449652369804e-08,\r\n\t1.0065718158807502e-07,\r\n\t1.0152707223885367e-07,\r\n\t1.0240422641480798e-07,\r\n\t1.0328870250114204e-07,\r\n\t1.0418055933277108e-07,\r\n\t1.0507985619761917e-07,\r\n\t1.0598665283994151e-07,\r\n\t1.0690100946366964e-07,\r\n\t1.0782298673577987e-07,\r\n\t1.0875264578968697e-07,\r\n\t1.0969004822865702e-07,\r\n\t1.1063525612924802e-07,\r\n\t1.1158833204477065e-07,\r\n\t1.1254933900877869e-07,\r\n\t1.1351834053857538e-07,\r\n\t1.14495400638752e-07,\r\n\t1.1548058380474345e-07,\r\n\t1.1647395502641669e-07,\r\n\t1.174755797916772e-07,\r\n\t1.1848552409010047e-07,\r\n\t1.1950385441659305e-07,\r\n\t1.20530637775077e-07,\r\n\t1.2156594168219765e-07,\r\n\t1.2260983417105694e-07,\r\n\t1.2366238379497488e-07,\r\n\t1.2472365963127728e-07,\r\n\t1.257937312851071e-07,\r\n\t1.2687266889325965e-07,\r\n\t1.2796054312805042e-07,\r\n\t1.290574252012069e-07,\r\n\t1.3016338686778499e-07,\r\n\t1.312785004301122e-07,\r\n\t1.3240283874176122e-07,\r\n\t1.335364752115516e-07,\r\n\t1.3467948380756967e-07,\r\n\t1.358319390612257e-07,\r\n\t1.369939160713381e-07,\r\n\t1.3816549050824004e-07,\r\n\t1.3934673861791513e-07,\r\n\t1.4053773722616588e-07,\r\n\t1.4173856374280906e-07,\r\n\t1.4294929616589694e-07,\r\n\t1.4417001308596664e-07,\r\n\t1.4540079369032466e-07,\r\n\t1.466417177673544e-07,\r\n\t1.4789286571085795e-07,\r\n\t1.4915431852441914e-07,\r\n\t1.50426157825808e-07,\r\n\t1.5170846585140564e-07,\r\n\t1.530013254606652e-07,\r\n\t1.5430482014059592e-07,\r\n\t1.556190340102881e-07,\r\n\t1.569440518254578e-07,\r\n\t1.582799589830328e-07,\r\n\t1.5962684152575926e-07,\r\n\t1.609847861468462e-07,\r\n\t1.6235388019464342e-07,\r\n\t1.6373421167734374e-07,\r\n\t1.6512586926772172e-07,\r\n\t1.6652894230790378e-07,\r\n\t1.67943520814173e-07,\r\n\t1.6936969548180054e-07,\r\n\t1.7080755768991462e-07,\r\n\t1.7225719950639903e-07,\r\n\t1.737187136928307e-07,\r\n\t1.7519219370944328e-07,\r\n\t1.7667773372012663e-07,\r\n\t1.7817542859746047e-07,\r\n\t1.796853739277862e-07,\r\n\t1.812076660163061e-07,\r\n\t1.827424018922178e-07,\r\n\t1.842896793138853e-07,\r\n\t1.8584959677404923e-07,\r\n\t1.8742225350506443e-07,\r\n\t1.8900774948417265e-07,\r\n\t1.906061854388161e-07,\r\n\t1.922176628519871e-07,\r\n\t1.9384228396760882e-07,\r\n\t1.954801517959509e-07,\r\n\t1.9713137011908657e-07,\r\n\t1.9879604349638812e-07,\r\n\t2.004742772700512e-07,\r\n\t2.0216617757065856e-07,\r\n\t2.0387185132278724e-07,\r\n\t2.0559140625064602e-07,\r\n\t2.073249508837549e-07,\r\n\t2.0907259456265724e-07,\r\n\t2.1083444744467803e-07,\r\n\t2.126106205097127e-07,\r\n\t2.1440122556606228e-07,\r\n\t2.1620637525629608e-07,\r\n\t2.180261830631679e-07,\r\n\t2.1986076331555956e-07,\r\n\t2.2171023119447276e-07,\r\n\t2.2357470273905262e-07,\r\n\t2.2545429485265538e-07,\r\n\t2.273491253089625e-07,\r\n\t2.2925931275812214e-07,\r\n\t2.3118497673294357e-07,\r\n\t2.3312623765512237e-07,\r\n\t2.3508321684152126e-07,\r\n\t2.3705603651047515e-07,\r\n\t2.3904481978815083e-07,\r\n\t2.4104969071494053e-07,\r\n\t2.43070774251909e-07,\r\n\t2.451081962872711e-07,\r\n\t2.4716208364291445e-07,\r\n\t2.492325640809727e-07,\r\n\t2.513197663104373e-07,\r\n\t2.534238199938138e-07,\r\n\t2.5554485575381253e-07,\r\n\t2.5768300518010727e-07,\r\n\t2.5983840083611146e-07,\r\n\t2.620111762658166e-07,\r\n\t2.642014660006664e-07,\r\n\t2.66409405566487e-07,\r\n\t2.686351314904524e-07,\r\n\t2.7087878130809455e-07,\r\n\t2.7314049357036823e-07,\r\n\t2.754204078507633e-07,\r\n\t2.77718664752454e-07,\r\n\t2.8003540591549483e-07,\r\n\t2.823707740240772e-07,\r\n\t2.8472491281382396e-07,\r\n\t2.8709796707913215e-07,\r\n\t2.8949008268056023e-07,\r\n\t2.919014065522739e-07,\r\n\t2.9433208670953537e-07,\r\n\t2.967822722562415e-07,\r\n\t2.992521133925053e-07,\r\n\t3.0174176142229657e-07,\r\n\t3.042513687611337e-07,\r\n\t3.067810889438162e-07,\r\n\t3.093310766322071e-07,\r\n\t3.119014876230825e-07,\r\n\t3.144924788560115e-07,\r\n\t3.171042084213062e-07,\r\n\t3.197368355680039e-07,\r\n\t3.223905207119211e-07,\r\n\t3.2506542544374517e-07,\r\n\t3.2776171253719034e-07,\r\n\t3.304795459571896e-07,\r\n\t3.332190908681629e-07,\r\n\t3.359805136423221e-07,\r\n\t3.387639818680318e-07,\r\n\t3.415696643582334e-07,\r\n\t3.4439773115890943e-07,\r\n\t3.472483535576236e-07,\r\n\t3.5012170409209144e-07,\r\n\t3.530179565588266e-07,\r\n\t3.559372860218293e-07,\r\n\t3.5887986882134497e-07,\r\n\t3.6184588258266535e-07,\r\n\t3.6483550622499464e-07,\r\n\t3.6784891997036677e-07,\r\n\t3.7088630535263527e-07,\r\n\t3.739478452265026e-07,\r\n\t3.77033723776614e-07,\r\n\t3.8014412652671214e-07,\r\n\t3.832792403488593e-07,\r\n\t3.864392534727022e-07,\r\n\t3.896243554947994e-07,\r\n\t3.928347373880202e-07,\r\n\t3.9607059151099984e-07,\r\n\t3.9933211161765187e-07,\r\n\t4.026194928667327e-07,\r\n\t4.059329318314846e-07,\r\n\t4.0927262650934104e-07,\r\n\t4.1263877633167997e-07,\r\n\t4.1603158217363717e-07,\r\n\t4.1945124636400874e-07,\r\n\t4.228979726951905e-07,\r\n\t4.263719664331962e-07,\r\n\t4.29873434327724e-07,\r\n\t4.334025846223091e-07,\r\n\t4.3695962706452415e-07,\r\n\t4.4054477291625677e-07,\r\n\t4.4415823496403337e-07,\r\n\t4.478002275294363e-07,\r\n\t4.514709664795639e-07,\r\n\t4.551706692375759e-07,\r\n\t4.588995547932813e-07,\r\n\t4.626578437138259e-07,\r\n\t4.664457581544234e-07,\r\n\t4.702635218691597e-07,\r\n\t4.7411136022187563e-07,\r\n\t4.779895001971031e-07,\r\n\t4.818981704110934e-07,\r\n\t4.858376011228845e-07,\r\n\t4.898080242454686e-07,\r\n\t4.938096733570142e-07,\r\n\t4.978427837121665e-07,\r\n\t5.019075922534025e-07,\r\n\t5.060043376224888e-07,\r\n\t5.101332601719855e-07,\r\n\t5.142946019768344e-07,\r\n\t5.18488606846015e-07,\r\n\t5.227155203342755e-07,\r\n\t5.269755897539556e-07,\r\n\t5.312690641868453e-07,\r\n\t5.355961944961583e-07,\r\n\t5.399572333385508e-07,\r\n\t5.443524351762484e-07,\r\n\t5.487820562892092e-07,\r\n\t5.532463547873971e-07,\r\n\t5.57745590623114e-07,\r\n\t5.622800256034235e-07,\r\n\t5.668499234026397e-07,\r\n\t5.71455549574896e-07,\r\n\t5.760971715667959e-07,\r\n\t5.807750587301582e-07,\r\n\t5.85489482334817e-07,\r\n\t5.902407155815069e-07,\r\n\t5.950290336148403e-07,\r\n\t5.99854713536371e-07,\r\n\t6.047180344177179e-07,\r\n\t6.096192773137809e-07,\r\n\t6.145587252760427e-07,\r\n\t6.195366633659607e-07,\r\n\t6.245533786684283e-07,\r\n\t6.29609160305315e-07,\r\n\t6.347042994491192e-07,\r\n\t6.39839089336676e-07,\r\n\t6.4501382528298e-07,\r\n\t6.502288046950516e-07,\r\n\t6.554843270859382e-07,\r\n\t6.607806940887702e-07,\r\n\t6.661182094709256e-07,\r\n\t6.714971791482483e-07,\r\n\t6.769179111994036e-07,\r\n\t6.823807158802789e-07,\r\n\t6.878859056385107e-07,\r\n\t6.934337951280654e-07,\r\n\t6.99024701223932e-07,\r\n\t7.046589430369167e-07,\r\n\t7.103368419284974e-07,\r\n\t7.160587215258025e-07,\r\n\t7.218249077366482e-07,\r\n\t7.27635728764717e-07,\r\n\t7.33491515124776e-07,\r\n\t7.393925996580292e-07,\r\n\t7.453393175475362e-07,\r\n\t7.513320063337637e-07,\r\n\t7.573710059301909e-07,\r\n\t7.634566586390285e-07,\r\n\t7.695893091670427e-07,\r\n\t7.757693046414772e-07,\r\n\t7.819969946260569e-07,\r\n\t7.882727311370912e-07,\r\n\t7.945968686596948e-07,\r\n\t8.009697641641051e-07,\r\n\t8.073917771220841e-07,\r\n\t8.138632695234204e-07,\r\n\t8.203846058925484e-07,\r\n\t8.269561533052768e-07,\r\n\t8.335782814055921e-07,\r\n\t8.402513624225746e-07,\r\n\t8.469757711874204e-07,\r\n\t8.537518851505937e-07,\r\n\t8.605800843990398e-07,\r\n\t8.674607516735115e-07,\r\n\t8.743942723860376e-07,\r\n\t8.813810346374749e-07,\r\n\t8.884214292351358e-07,\r\n\t8.955158497105734e-07,\r\n\t9.026646923374683e-07,\r\n\t9.098683561495994e-07,\r\n\t9.171272429589202e-07,\r\n\t9.244417573737798e-07,\r\n\t9.318123068172449e-07,\r\n\t9.392393015455113e-07,\r\n\t9.467231546664296e-07,\r\n\t9.54264282158179e-07,\r\n\t9.618631028880107e-07,\r\n\t9.695200386311508e-07,\r\n\t9.772355140897487e-07,\r\n\t9.85009956912026e-07,\r\n\t9.92843797711472e-07,\r\n\t1.0007374700862049e-06,\r\n\t1.0086914106383947e-06,\r\n\t1.0167060589938681e-06,\r\n\t1.0247818578217847e-06,\r\n\t1.0329192528544562e-06,\r\n\t1.0411186929072673e-06,\r\n\t1.049380629898721e-06,\r\n\t1.0577055188706423e-06,\r\n\t1.0660938180084297e-06,\r\n\t1.0745459886615052e-06,\r\n\t1.083062495363816e-06,\r\n\t1.0916438058545493e-06,\r\n\t1.100290391098864e-06,\r\n\t1.1090027253088427e-06,\r\n\t1.1177812859644962e-06,\r\n\t1.1266265538349587e-06,\r\n\t1.1355390129997672e-06,\r\n\t1.1445191508702607e-06,\r\n\t1.1535674582111456e-06,\r\n\t1.1626844291621819e-06,\r\n\t1.171870561259973e-06,\r\n\t1.181126355459898e-06,\r\n\t1.1904523161581833e-06,\r\n\t1.1998489512141178e-06,\r\n\t1.209316771972376e-06,\r\n\t1.2188562932854711e-06,\r\n\t1.2284680335363573e-06,\r\n\t1.23815251466119e-06,\r\n\t1.2479102621721824e-06,\r\n\t1.2577418051805861e-06,\r\n\t1.267647676419861e-06,\r\n\t1.2776284122689696e-06,\r\n\t1.2876845527757774e-06,\r\n\t1.2978166416805956e-06,\r\n\t1.308025226439918e-06,\r\n\t1.3183108582502298e-06,\r\n\t1.3286740920720276e-06,\r\n\t1.339115486653883e-06,\r\n\t1.3496356045567708e-06,\r\n\t1.3602350121784407e-06,\r\n\t1.370914279778004e-06,\r\n\t1.3816739815005912e-06,\r\n\t1.3925146954022365e-06,\r\n\t1.403437003474869e-06,\r\n\t1.414441491671432e-06,\r\n\t1.4255287499311945e-06,\r\n\t1.4366993722051645e-06,\r\n\t1.4479539564817242e-06,\r\n\t1.4592931048123227e-06,\r\n\t1.470717423337401e-06,\r\n\t1.4822275223123973e-06,\r\n\t1.493824016134014e-06,\r\n\t1.5055075233664905e-06,\r\n\t1.5172786667681718e-06,\r\n\t1.5291380733181227e-06,\r\n\t1.541086374242991e-06,\r\n\t1.5531242050439695e-06,\r\n\t1.5652522055238954e-06,\r\n\t1.5774710198146123e-06,\r\n\t1.58978129640437e-06,\r\n\t1.6021836881654569e-06,\r\n\t1.614678852381971e-06,\r\n\t1.6272674507777844e-06,\r\n\t1.6399501495446133e-06,\r\n\t1.6527276193703008e-06,\r\n\t1.665600535467239e-06,\r\n\t1.6785695776009826e-06,\r\n\t1.6916354301190126e-06,\r\n\t1.7047987819796462e-06,\r\n\t1.7180603267811397e-06,\r\n\t1.7314207627909964e-06,\r\n\t1.7448807929753845e-06,\r\n\t1.7584411250287243e-06,\r\n\t1.7721024714034898e-06,\r\n\t1.7858655493401964e-06,\r\n\t1.7997310808975028e-06,\r\n\t1.8136997929824957e-06,\r\n\t1.8277724173811997e-06,\r\n\t1.8419496907892508e-06,\r\n\t1.8562323548427067e-06,\r\n\t1.8706211561490535e-06,\r\n\t1.8851168463184068e-06,\r\n\t1.8997201819949154e-06,\r\n\t1.9144319248882945e-06,\r\n\t1.9292528418055303e-06,\r\n\t1.9441837046828556e-06,\r\n\t1.9592252906178227e-06,\r\n\t1.9743783819016305e-06,\r\n\t1.989643766051524e-06,\r\n\t2.005022235843542e-06,\r\n\t2.0205145893453174e-06,\r\n\t2.0361216299491532e-06,\r\n\t2.0518441664052052e-06,\r\n\t2.0676830128549416e-06,\r\n\t2.0836389888647544e-06,\r\n\t2.099712919459745e-06,\r\n\t2.1159056351577397e-06,\r\n\t2.1322179720034547e-06,\r\n\t2.148650771602954e-06,\r\n\t2.1652048811581714e-06,\r\n\t2.181881153501716e-06,\r\n\t2.1986804471318467e-06,\r\n\t2.215603626247702e-06,\r\n\t2.232651560784622e-06,\r\n\t2.2498251264497897e-06,\r\n\t2.267125204757959e-06,\r\n\t2.284552683067514e-06,\r\n\t2.302108454616661e-06,\r\n\t2.31979341855977e-06,\r\n\t2.337608480004027e-06,\r\n\t2.355554550046301e-06,\r\n\t2.373632545810118e-06,\r\n\t2.3918433904828932e-06,\r\n\t2.4101880133533998e-06,\r\n\t2.428667349849472e-06,\r\n\t2.4472823415758465e-06,\r\n\t2.4660339363522218e-06,\r\n\t2.484923088251612e-06,\r\n\t2.5039507576388886e-06,\r\n\t2.5231179112094872e-06,\r\n\t2.542425522028357e-06,\r\n\t2.561874569569189e-06,\r\n\t2.5814660397537784e-06,\r\n\t2.6012009249917046e-06,\r\n\t2.6210802242200846e-06,\r\n\t2.641104942943762e-06,\r\n\t2.6612760932755087e-06,\r\n\t2.681594693976643e-06,\r\n\t2.7020617704976873e-06,\r\n\t2.7226783550194192e-06,\r\n\t2.743445486494059e-06,\r\n\t2.764364210686746e-06,\r\n\t2.7854355802171762e-06,\r\n\t2.806660654601498e-06,\r\n\t2.82804050029458e-06,\r\n\t2.8495761907322117e-06,\r\n\t2.871268806373865e-06,\r\n\t2.8931194347454913e-06,\r\n\t2.915129170482668e-06,\r\n\t2.9372991153738516e-06,\r\n\t2.959630378404048e-06,\r\n\t2.9821240757985805e-06,\r\n\t3.0047813310672054e-06,\r\n\t3.0276032750483835e-06,\r\n\t3.0505910459538363e-06,\r\n\t3.073745789413423e-06,\r\n\t3.097068658520123e-06,\r\n\t3.120560813875398e-06,\r\n\t3.1442234236346884e-06,\r\n\t3.168057663553339e-06,\r\n\t3.1920647170325453e-06,\r\n\t3.2162457751657647e-06,\r\n\t3.2406020367852285e-06,\r\n\t3.265134708508854e-06,\r\n\t3.2898450047873243e-06,\r\n\t3.314734147951381e-06,\r\n\t3.339803368259495e-06,\r\n\t3.365053903945795e-06,\r\n\t3.390487001268162e-06,\r\n\t3.4161039145566347e-06,\r\n\t3.441905906262078e-06,\r\n\t3.4678942470052404e-06,\r\n\t3.4940702156258656e-06,\r\n\t3.520435099232194e-06,\r\n\t3.5469901932507522e-06,\r\n\t3.573736801476396e-06,\r\n\t3.6006762361226507e-06,\r\n\t3.6278098178721828e-06,\r\n\t3.65513887592776e-06,\r\n\t3.6826647480634076e-06,\r\n\t3.710388780675812e-06,\r\n\t3.7383123288359653e-06,\r\n\t3.7664367563412285e-06,\r\n\t3.7947634357675958e-06,\r\n\t3.823293748522266e-06,\r\n\t3.852029084896394e-06,\r\n\t3.880970844118372e-06,\r\n\t3.910120434407124e-06,\r\n\t3.939479273025953e-06,\r\n\t3.9690487863363985e-06,\r\n\t3.998830409852672e-06,\r\n\t4.028825588296174e-06,\r\n\t4.059035775650463e-06,\r\n\t4.089462435216382e-06,\r\n\t4.120107039667557e-06,\r\n\t4.15097107110627e-06,\r\n\t4.182056021119465e-06,\r\n\t4.213363390835225e-06,\r\n\t4.244894690979381e-06,\r\n\t4.276651441932677e-06,\r\n\t4.308635173787967e-06,\r\n\t4.340847426407912e-06,\r\n\t4.3732897494828445e-06,\r\n\t4.405963702589184e-06,\r\n\t4.4388708552478925e-06,\r\n\t4.472012786983349e-06,\r\n\t4.505391087382592e-06,\r\n\t4.539007356154908e-06,\r\n\t4.572863203191607e-06,\r\n\t4.606960248626172e-06,\r\n\t4.641300122894776e-06,\r\n\t4.6758844667971425e-06,\r\n\t4.7107149315576786e-06,\r\n\t4.745793178886853e-06,\r\n\t4.781120881043064e-06,\r\n\t4.816699720894837e-06,\r\n\t4.85253139198323e-06,\r\n\t4.8886175985845575e-06,\r\n\t4.924960055773623e-06,\r\n\t4.961560489487208e-06,\r\n\t4.998420636587855e-06,\r\n\t5.03554224492793e-06,\r\n\t5.072927073414269e-06,\r\n\t5.110576892072964e-06,\r\n\t5.1484934821144585e-06,\r\n\t5.186678635999181e-06,\r\n\t5.2251341575034055e-06,\r\n\t5.263861861785529e-06,\r\n\t5.3028635754525e-06,\r\n\t5.3421411366268656e-06,\r\n\t5.38169639501413e-06,\r\n\t5.421531211970292e-06,\r\n\t5.461647460569827e-06,\r\n\t5.502047025674169e-06,\r\n\t5.542731804000365e-06,\r\n\t5.58370370419022e-06,\r\n\t5.624964646879661e-06,\r\n\t5.666516564768643e-06,\r\n\t5.708361402691322e-06,\r\n\t5.750501117686668e-06,\r\n\t5.792937679069253e-06,\r\n\t5.835673068500703e-06,\r\n\t5.878709280061384e-06,\r\n\t5.922048320322332e-06,\r\n\t5.9656922084178625e-06,\r\n\t6.009642976118203e-06,\r\n\t6.0539026679029145e-06,\r\n\t6.098473341034294e-06,\r\n\t6.143357065631469e-06,\r\n\t6.18855592474462e-06,\r\n\t6.234072014429948e-06,\r\n\t6.279907443824612e-06,\r\n\t6.326064335222368e-06,\r\n\t6.372544824149419e-06,\r\n\t6.419351059440866e-06,\r\n\t6.466485203317378e-06,\r\n\t6.513949431462211e-06,\r\n\t6.561745933098854e-06,\r\n\t6.609876911068948e-06,\r\n\t6.658344581910668e-06,\r\n\t6.707151175937273e-06,\r\n\t6.756298937316405e-06,\r\n\t6.8057901241497346e-06,\r\n\t6.855627008552791e-06,\r\n\t6.905811876735345e-06,\r\n\t6.956347029082279e-06,\r\n\t7.007234780234882e-06,\r\n\t7.058477459172399e-06,\r\n\t7.11007740929406e-06,\r\n\t7.162036988501672e-06,\r\n\t7.214358569282491e-06,\r\n\t7.267044538792657e-06,\r\n\t7.3200972989407755e-06,\r\n\t7.373519266472318e-06,\r\n\t7.427312873054163e-06,\r\n\t7.48148056535977e-06,\r\n\t7.536024805154531e-06,\r\n\t7.5909480693819215e-06,\r\n\t7.64625285024971e-06,\r\n\t7.701941655317028e-06,\r\n\t7.758017007581371e-06,\r\n\t7.814481445566556e-06,\r\n\t7.871337523410869e-06,\r\n\t7.92858781095561e-06,\r\n\t7.986234893834263e-06,\r\n\t8.044281373561935e-06,\r\n\t8.102729867625552e-06,\r\n\t8.161583009574119e-06,\r\n\t8.22084344910977e-06,\r\n\t8.280513852179035e-06,\r\n\t8.340596901064845e-06,\r\n\t8.401095294478724e-06,\r\n\t8.46201174765365e-06,\r\n\t8.523348992437184e-06,\r\n\t8.585109777385456e-06,\r\n\t8.647296867857171e-06,\r\n\t8.70991304610822e-06,\r\n\t8.772961111387178e-06,\r\n\t8.836443880030596e-06,\r\n\t8.90036418555937e-06,\r\n\t8.964724878775173e-06,\r\n\t9.029528827857806e-06,\r\n\t9.09477891846256e-06,\r\n\t9.160478053818447e-06,\r\n\t9.22662915482664e-06,\r\n\t9.293235160159771e-06,\r\n\t9.36029902636142e-06,\r\n\t9.427823727946037e-06,\r\n\t9.495812257499694e-06,\r\n\t9.56426762578123e-06,\r\n\t9.633192861823755e-06,\r\n\t9.702591013036682e-06,\r\n\t9.772465145308403e-06,\r\n\t9.842818343109592e-06,\r\n\t9.913653709596701e-06,\r\n\t9.98497436671603e-06,\r\n\t1.0056783455308519e-05,\r\n\t1.0129084135215092e-05,\r\n\t1.0201879585382304e-05,\r\n\t1.0275173003968421e-05,\r\n\t1.0348967608450458e-05,\r\n\t1.0423266635731396e-05,\r\n\t1.0498073342248194e-05,\r\n\t1.0573391004079866e-05,\r\n\t1.0649222917056732e-05,\r\n\t1.0725572396869764e-05,\r\n\t1.0802442779180685e-05,\r\n\t1.0879837419732339e-05,\r\n\t1.095775969446005e-05,\r\n\t1.103621299960315e-05,\r\n\t1.1115200751817245e-05,\r\n\t1.1194726388286977e-05,\r\n\t1.1274793366839261e-05,\r\n\t1.1355405166057418e-05,\r\n\t1.1436565285395364e-05,\r\n\t1.1518277245292796e-05,\r\n\t1.1600544587290605e-05,\r\n\t1.1683370874147272e-05,\r\n\t1.1766759689955409e-05,\r\n\t1.1850714640259152e-05,\r\n\t1.1935239352171809e-05,\r\n\t1.2020337474494696e-05,\r\n\t1.2106012677835956e-05,\r\n\t1.2192268654730067e-05,\r\n\t1.2279109119758133e-05,\r\n\t1.2366537809668871e-05,\r\n\t1.2454558483499833e-05,\r\n\t1.254317492269918e-05,\r\n\t1.2632390931248512e-05,\r\n\t1.272221033578608e-05,\r\n\t1.2812636985730434e-05,\r\n\t1.2903674753404687e-05,\r\n\t1.2995327534161605e-05,\r\n\t1.3087599246509316e-05,\r\n\t1.3180493832237441e-05,\r\n\t1.3274015256543631e-05,\r\n\t1.3368167508161294e-05,\r\n\t1.3462954599487637e-05,\r\n\t1.3558380566712251e-05,\r\n\t1.3654449469946224e-05,\r\n\t1.3751165393352364e-05,\r\n\t1.3848532445275519e-05,\r\n\t1.3946554758373899e-05,\r\n\t1.4045236489750704e-05,\r\n\t1.4144581821086708e-05,\r\n\t1.424459495877321e-05,\r\n\t1.434528013404607e-05,\r\n\t1.4446641603119478e-05,\r\n\t1.4548683647321534e-05,\r\n\t1.4651410573229661e-05,\r\n\t1.4754826712806923e-05,\r\n\t1.4858936423538975e-05,\r\n\t1.4963744088571668e-05,\r\n\t1.5069254116849561e-05,\r\n\t1.5175470943254369e-05,\r\n\t1.5282399028745047e-05,\r\n\t1.5390042860497832e-05,\r\n\t1.549840695204733e-05,\r\n\t1.5607495843427828e-05,\r\n\t1.5717314101315953e-05,\r\n\t1.5827866319173356e-05,\r\n\t1.5939157117390625e-05,\r\n\t1.6051191143431367e-05,\r\n\t1.616397307197721e-05,\r\n\t1.6277507605073873e-05,\r\n\t1.639179947227715e-05,\r\n\t1.6506853430800233e-05,\r\n\t1.662267426566124e-05,\r\n\t1.673926678983224e-05,\r\n\t1.6856635844387836e-05,\r\n\t1.697478629865545e-05,\r\n\t1.7093723050365624e-05,\r\n\t1.7213451025803727e-05,\r\n\t1.7333975179961788e-05,\r\n\t1.7455300496691042e-05,\r\n\t1.7577431988855536e-05,\r\n\t1.7700374698486556e-05,\r\n\t1.7824133696937325e-05,\r\n\t1.7948714085038504e-05,\r\n\t1.8074120993254675e-05,\r\n\t1.8200359581841677e-05,\r\n\t1.8327435041004214e-05,\r\n\t1.84553525910543e-05,\r\n\t1.858411748257071e-05,\r\n\t1.8713734996559307e-05,\r\n\t1.884421044461362e-05,\r\n\t1.8975549169076144e-05,\r\n\t1.9107756543200982e-05,\r\n\t1.924083797131701e-05,\r\n\t1.9374798888991633e-05,\r\n\t1.9509644763194904e-05,\r\n\t1.964538109246558e-05,\r\n\t1.978201340707679e-05,\r\n\t1.991954726920333e-05,\r\n\t2.005798827308876e-05,\r\n\t2.0197342045214384e-05,\r\n\t2.033761424446811e-05,\r\n\t2.047881056231493e-05,\r\n\t2.0620936722967025e-05,\r\n\t2.0763998483555955e-05,\r\n\t2.0908001634304797e-05,\r\n\t2.1052951998701307e-05,\r\n\t2.119885543367199e-05,\r\n\t2.1345717829756465e-05,\r\n\t2.149354511128383e-05,\r\n\t2.164234323654827e-05,\r\n\t2.179211819798676e-05,\r\n\t2.1942876022356507e-05,\r\n\t2.2094622770914603e-05,\r\n\t2.2247364539596814e-05,\r\n\t2.240110745919863e-05,\r\n\t2.2555857695556064e-05,\r\n\t2.2711621449728313e-05,\r\n\t2.2868404958180394e-05,\r\n\t2.3026214492966753e-05,\r\n\t2.3185056361916022e-05,\r\n\t2.334493690881682e-05,\r\n\t2.3505862513603785e-05,\r\n\t2.3667839592544298e-05,\r\n\t2.383087459842706e-05,\r\n\t2.3994974020750866e-05,\r\n\t2.416014438591432e-05,\r\n\t2.4326392257405977e-05,\r\n\t2.4493724235996052e-05,\r\n\t2.4662146959928996e-05,\r\n\t2.483166710511644e-05,\r\n\t2.500229138533089e-05,\r\n\t2.5174026552400974e-05,\r\n\t2.5346879396407725e-05,\r\n\t2.552085674588004e-05,\r\n\t2.56959654679931e-05,\r\n\t2.5872212468766806e-05,\r\n\t2.6049604693265045e-05,\r\n\t2.622814912579548e-05,\r\n\t2.640785279011092e-05,\r\n\t2.6588722749611885e-05,\r\n\t2.6770766107548934e-05,\r\n\t2.695399000722644e-05,\r\n\t2.7138401632207713e-05,\r\n\t2.7324008206520493e-05,\r\n\t2.751081699486371e-05,\r\n\t2.7698835302814467e-05,\r\n\t2.788807047703715e-05,\r\n\t2.807852990549223e-05,\r\n\t2.8270221017647098e-05,\r\n\t2.84631512846866e-05,\r\n\t2.8657328219725707e-05,\r\n\t2.8852759378022412e-05,\r\n\t2.904945235719214e-05,\r\n\t2.9247414797421837e-05,\r\n\t2.9446654381686884e-05,\r\n\t2.964717883596754e-05,\r\n\t2.9848995929466778e-05,\r\n\t3.0052113474829284e-05,\r\n\t3.0256539328360746e-05,\r\n\t3.0462281390249454e-05,\r\n\t3.066934760478717e-05,\r\n\t3.087774596059245e-05,\r\n\t3.108748449083353e-05,\r\n\t3.129857127345408e-05,\r\n\t3.151101443139781e-05,\r\n\t3.172482213283566e-05,\r\n\t3.1940002591393065e-05,\r\n\t3.215656406637918e-05,\r\n\t3.2374514863015386e-05,\r\n\t3.259386333266714e-05,\r\n\t3.281461787307498e-05,\r\n\t3.303678692858664e-05,\r\n\t3.326037899039187e-05,\r\n\t3.348540259675589e-05,\r\n\t3.371186633325606e-05,\r\n\t3.393977883301759e-05,\r\n\t3.41691487769524e-05,\r\n\t3.4399984893996525e-05,\r\n\t3.463229596135137e-05,\r\n\t3.486609080472296e-05,\r\n\t3.51013782985654e-05,\r\n\t3.533816736632217e-05,\r\n\t3.5576466980671694e-05,\r\n\t3.5816286163770744e-05,\r\n\t3.605763398750199e-05,\r\n\t3.630051957371971e-05,\r\n\t3.654495209449929e-05,\r\n\t3.679094077238512e-05,\r\n\t3.703849488064242e-05,\r\n\t3.728762374350691e-05,\r\n\t3.753833673643902e-05,\r\n\t3.779064328637575e-05,\r\n\t3.8044552871986755e-05,\r\n\t3.830007502392905e-05,\r\n\t3.855721932510415e-05,\r\n\t3.881599541091606e-05,\r\n\t3.9076412969530124e-05,\r\n\t3.9338481742133125e-05,\r\n\t3.960221152319455e-05,\r\n\t3.986761216072874e-05,\r\n\t4.013469355655859e-05,\r\n\t4.040346566657975e-05,\r\n\t4.067393850102644e-05,\r\n\t4.0946122124738176e-05,\r\n\t4.12200266574281e-05,\r\n\t4.14956622739508e-05,\r\n\t4.1773039204574294e-05,\r\n\t4.205216773524931e-05,\r\n\t4.233305820788373e-05,\r\n\t4.261572102061435e-05,\r\n\t4.290016662808323e-05,\r\n\t4.31864055417121e-05,\r\n\t4.347444832998096e-05,\r\n\t4.376430561870452e-05,\r\n\t4.405598809131363e-05,\r\n\t4.43495064891336e-05,\r\n\t4.464487161166808e-05,\r\n\t4.4942094316879953e-05,\r\n\t4.524118552147732e-05,\r\n\t4.554215620119686e-05,\r\n\t4.5845017391092105e-05,\r\n\t4.614978018581928e-05,\r\n\t4.6456455739927876e-05,\r\n\t4.6765055268148975e-05,\r\n\t4.707559004568824e-05,\r\n\t4.738807140851637e-05,\r\n\t4.770251075366487e-05,\r\n\t4.8018919539518815e-05,\r\n\t4.8337309286114895e-05,\r\n\t4.865769157543676e-05,\r\n\t4.898007805171532e-05,\r\n\t4.930448042172731e-05,\r\n\t4.963091045509667e-05,\r\n\t4.995937998459677e-05,\r\n\t5.028990090645382e-05,\r\n\t5.062248518065154e-05,\r\n\t5.0957144831237207e-05,\r\n\t5.12938919466288e-05,\r\n\t5.1632738679923174e-05,\r\n\t5.197369724920642e-05,\r\n\t5.2316779937864196e-05,\r\n\t5.2661999094894296e-05,\r\n\t5.3009367135220113e-05,\r\n\t5.335889654000526e-05,\r\n\t5.3710599856970186e-05,\r\n\t5.406448970070875e-05,\r\n\t5.4420578753007315e-05,\r\n\t5.477887976316472e-05,\r\n\t5.513940554831326e-05,\r\n\t5.550216899374138e-05,\r\n\t5.5867183053217494e-05,\r\n\t5.623446074931492e-05,\r\n\t5.660401517373863e-05,\r\n\t5.697585948765273e-05,\r\n\t5.735000692200963e-05,\r\n\t5.772647077788087e-05,\r\n\t5.810526442678758e-05,\r\n\t5.84864013110354e-05,\r\n\t5.8869894944046755e-05,\r\n\t5.925575891069883e-05,\r\n\t5.964400686765816e-05,\r\n\t6.00346525437217e-05,\r\n\t6.0427709740154014e-05,\r\n\t6.082319233103068e-05,\r\n\t6.122111426357861e-05,\r\n\t6.162148955852216e-05,\r\n\t6.20243323104258e-05,\r\n\t6.24296566880434e-05,\r\n\t6.283747693466333e-05,\r\n\t6.324780736846071e-05,\r\n\t6.366066238284525e-05,\r\n\t6.407605644681595e-05,\r\n\t6.449400410531217e-05,\r\n\t6.491451997957094e-05,\r\n\t6.533761876748063e-05,\r\n\t6.576331524394124e-05,\r\n\t6.619162426122093e-05,\r\n\t6.662256074931912e-05,\r\n\t6.705613971632558e-05,\r\n\t6.749237624878661e-05,\r\n\t6.793128551206708e-05,\r\n\t6.837288275071904e-05,\r\n\t6.88171832888473e-05,\r\n\t6.926420253047977e-05,\r\n\t6.971395595993728e-05,\r\n\t7.016645914220575e-05,\r\n\t7.062172772330951e-05,\r\n\t7.107977743068592e-05,\r\n\t7.154062407356203e-05,\r\n\t7.20042835433318e-05,\r\n\t7.247077181393559e-05,\r\n\t7.294010494224088e-05,\r\n\t7.341229906842383e-05,\r\n\t7.388737041635428e-05,\r\n\t7.436533529397833e-05,\r\n\t7.48462100937079e-05,\r\n\t7.533001129280592e-05,\r\n\t7.58167554537785e-05,\r\n\t7.630645922476318e-05,\r\n\t7.679913933992462e-05,\r\n\t7.729481261984511e-05,\r\n\t7.779349597192367e-05,\r\n\t7.829520639076976e-05,\r\n\t7.879996095860489e-05,\r\n\t7.930777684565972e-05,\r\n\t7.98186713105788e-05,\r\n\t8.033266170082028e-05,\r\n\t8.08497654530643e-05,\r\n\t8.13700000936153e-05,\r\n\t8.189338323881356e-05,\r\n\t8.241993259544084e-05,\r\n\t8.29496659611347e-05,\r\n\t8.348260122479757e-05,\r\n\t8.401875636701377e-05,\r\n\t8.455814946046188e-05,\r\n\t8.510079867033548e-05,\r\n\t8.564672225475749e-05,\r\n\t8.619593856520473e-05,\r\n\t8.674846604692572e-05,\r\n\t8.730432323936735e-05,\r\n\t8.786352877659767e-05,\r\n\t8.84261013877329e-05,\r\n\t8.899205989736694e-05,\r\n\t8.95614232259982e-05,\r\n\t9.013421039046442e-05,\r\n\t9.07104405043722e-05,\r\n\t9.129013277853471e-05,\r\n\t9.18733065214047e-05,\r\n\t9.245998113951568e-05,\r\n\t9.305017613791744e-05,\r\n\t9.364391112062109e-05,\r\n\t9.424120579103842e-05,\r\n\t9.484207995242803e-05,\r\n\t9.544655350834062e-05,\r\n\t9.605464646306648e-05,\r\n\t9.666637892208509e-05,\r\n\t9.72817710925155e-05,\r\n\t9.790084328356923e-05,\r\n\t9.852361590700436e-05,\r\n\t9.915010947758092e-05,\r\n\t9.978034461351918e-05,\r\n\t0.00010041434203695821,\r\n\t0.0001010521225744167,\r\n\t0.00010169370715725574,\r\n\t0.00010233911682214381,\r\n\t0.00010298837271151997,\r\n\t0.00010364149607406565,\r\n\t0.00010429850826516899,\r\n\t0.00010495943074740089,\r\n\t0.0001056242850909831,\r\n\t0.00010629309297426646,\r\n\t0.00010696587618420343,\r\n\t0.00010764265661682989,\r\n\t0.00010832345627773993,\r\n\t0.00010900829728257247,\r\n\t0.00010969720185748852,\r\n\t0.00011039019233966156,\r\n\t0.00011108729117775896,\r\n\t0.0001117885209324344,\r\n\t0.00011249390427681404,\r\n\t0.000113203463996992,\r\n\t0.00011391722299251951,\r\n\t0.00011463520427690499,\r\n\t0.00011535743097810604,\r\n\t0.00011608392633903245,\r\n\t0.00011681471371804304,\r\n\t0.00011754981658945169,\r\n\t0.00011828925854402695,\r\n\t0.00011903306328950273,\r\n\t0.00011978125465108095,\r\n\t0.00012053385657194551,\r\n\t0.00012129089311377009,\r\n\t0.00012205238845723272,\r\n\t0.00012281836690252997,\r\n\t0.00012358885286989414,\r\n\t0.0001243638709001111,\r\n\t0.0001251434456550404,\r\n\t0.00012592760191813785,\r\n\t0.00012671636459497904,\r\n\t0.0001275097587137846,\r\n\t0.00012830780942594858,\r\n\t0.00012911054200656668,\r\n\t0.00012991798185496925,\r\n\t0.00013073015449525076,\r\n\t0.00013154708557680975,\r\n\t0.00013236880087487982,\r\n\t0.00013319532629107344,\r\n\t0.00013402668785391777,\r\n\t0.00013486291171940128,\r\n\t0.00013570402417151342,\r\n\t0.000136550051622795,\r\n\t0.00013740102061488154,\r\n\t0.0001382569578190579,\r\n\t0.00013911789003680447,\r\n\t0.00013998384420035675,\r\n\t0.0001408548473732542,\r\n\t0.00014173092675090303,\r\n\t0.0001426121096611333,\r\n\t0.00014349842356475756,\r\n\t0.00014438989605613893,\r\n\t0.00014528655486375052,\r\n\t0.00014618842785074708,\r\n\t0.00014709554301552927,\r\n\t0.00014800792849231897,\r\n\t0.0001489256125517263,\r\n\t0.00014984862360133009,\r\n\t0.00015077699018624835,\r\n\t0.00015171074098972227,\r\n\t0.000152649904833691,\r\n\t0.00015359451067937946,\r\n\t0.00015454458762787632,\r\n\t0.0001555001649207266,\r\n\t0.00015646127194051353,\r\n\t0.00015742793821145427,\r\n\t0.00015840019339998608,\r\n\t0.00015937806731536626,\r\n\t0.0001603615899102623,\r\n\t0.00016135079128135526,\r\n\t0.00016234570166993384,\r\n\t0.0001633463514625018,\r\n\t0.00016435277119137748,\r\n\t0.00016536499153530176,\r\n\t0.00016638304332004545,\r\n\t0.00016740695751901868,\r\n\t0.00016843676525388283,\r\n\t0.00016947249779516457,\r\n\t0.00017051418656287122,\r\n\t0.00017156186312710858,\r\n\t0.0001726155592087011,\r\n\t0.00017367530667981325,\r\n\t0.00017474113756457338,\r\n\t0.00017581308403969998,\r\n\t0.00017689117843512858,\r\n\t0.00017797545323464358,\r\n\t0.00017906594107650682,\r\n\t0.0001801626747540962,\r\n\t0.00018126568721653577,\r\n\t0.0001823750115693409,\r\n\t0.00018349068107505054,\r\n\t0.00018461272915387726,\r\n\t0.00018574118938434364,\r\n\t0.00018687609550393637,\r\n\t0.00018801748140974671,\r\n\t0.00018916538115912833,\r\n\t0.00019031982897034275,\r\n\t0.00019148085922322054,\r\n\t0.0001926485064598113,\r\n\t0.0001938228053850491,\r\n\t0.00019500379086740628,\r\n\t0.00019619149793956325,\r\n\t0.00019738596179906634,\r\n\t0.000198587217809002,\r\n\t0.00019979530149865865,\r\n\t0.00020101024856420484,\r\n\t0.0002022320948693561,\r\n\t0.00020346087644605704,\r\n\t0.00020469662949515067,\r\n\t0.00020593939038706762,\r\n\t0.00020718919566249826,\r\n\t0.00020844608203308482,\r\n\t0.00020971008638210166,\r\n\t0.00021098124576514576,\r\n\t0.00021225959741082685,\r\n\t0.00021354517872145958,\r\n\t0.00021483802727375752,\r\n\t0.0002161381808195303,\r\n\t0.00021744567728638258,\r\n\t0.00021876055477841404,\r\n\t0.00022008285157692367,\r\n\t0.0002214126061411141,\r\n\t0.00022274985710879803,\r\n\t0.00022409464329711177,\r\n\t0.00022544700370322,\r\n\t0.0002268069775050376,\r\n\t0.0002281746040619386,\r\n\t0.00022954992291547905,\r\n\t0.0002309329737901149,\r\n\t0.00023232379659392558,\r\n\t0.0002337224314193381,\r\n\t0.00023512891854385456,\r\n\t0.00023654329843078047,\r\n\t0.00023796561172995584,\r\n\t0.0002393958992784911,\r\n\t0.0002408342021014969,\r\n\t0.00024228056141283017,\r\n\t0.00024373501861582443,\r\n\t0.00024519761530404286,\r\n\t0.00024666839326201135,\r\n\t0.00024814739446597523,\r\n\t0.00024963466108463966,\r\n\t0.0002511302354799286,\r\n\t0.00025263416020772914,\r\n\t0.00025414647801865685,\r\n\t0.0002556672318588034,\r\n\t0.00025719646487050587,\r\n\t0.00025873422039309976,\r\n\t0.00026028054196369283,\r\n\t0.00026183547331792124,\r\n\t0.00026339905839072904,\r\n\t0.0002649713413171298,\r\n\t0.0002665523664329873,\r\n\t0.0002681421782757841,\r\n\t0.00026974082158540705,\r\n\t0.00027134834130491866,\r\n\t0.00027296478258134873,\r\n\t0.0002745901907664681,\r\n\t0.0002762246114175873,\r\n\t0.0002778680902983336,\r\n\t0.0002795206733794522,\r\n\t0.00028118240683959353,\r\n\t0.00028285333706611136,\r\n\t0.00028453351065586065,\r\n\t0.0002862229744159971,\r\n\t0.00028792177536478085,\r\n\t0.00028962996073238017,\r\n\t0.0002913475779616789,\r\n\t0.00029307467470908666,\r\n\t0.0002948112988453491,\r\n\t0.0002965574984563622,\r\n\t0.00029831332184398975,\r\n\t0.0003000788175268801,\r\n\t0.00030185403424128667,\r\n\t0.00030363902094189505,\r\n\t0.0003054338268026412,\r\n\t0.00030723850121754684,\r\n\t0.00030905309380154167,\r\n\t0.0003108776543913044,\r\n\t0.0003127122330460868,\r\n\t0.0003145568800485622,\r\n\t0.00031641164590565183,\r\n\t0.0003182765813493798,\r\n\t0.0003201517373377039,\r\n\t0.0003220371650553722,\r\n\t0.00032393291591476263,\r\n\t0.0003258390415567429,\r\n\t0.00032775559385151207,\r\n\t0.00032968262489946863,\r\n\t0.0003316201870320555,\r\n\t0.0003335683328126316,\r\n\t0.0003355271150373222,\r\n\t0.0003374965867358965,\r\n\t0.00033947680117262045,\r\n\t0.00034146781184714027,\r\n\t0.0003434696724953399,\r\n\t0.0003454824370902277,\r\n\t0.00034750615984280086,\r\n\t0.0003495408952029356,\r\n\t0.00035158669786025535,\r\n\t0.000353643622745026,\r\n\t0.00035571172502903457,\r\n\t0.0003577910601264747,\r\n\t0.0003598816836948463,\r\n\t0.00036198365163583526,\r\n\t0.00036409702009622234,\r\n\t0.00036622184546876544,\r\n\t0.000368358184393114,\r\n\t0.00037050609375669636,\r\n\t0.0003726656306956389,\r\n\t0.0003748368525956564,\r\n\t0.0003770198170929762,\r\n\t0.00037921458207523865,\r\n\t0.00038142120568241495,\r\n\t0.0003836397463077231,\r\n\t0.0003858702625985456,\r\n\t0.00038811281345734903,\r\n\t0.0003903674580426086,\r\n\t0.0003926342557697333,\r\n\t0.00039491326631199176,\r\n\t0.0003972045496014442,\r\n\t0.00039950816582987405,\r\n\t0.0004018241754497217,\r\n\t0.0004041526391750263,\r\n\t0.00040649361798235476,\r\n\t0.00040884717311175713,\r\n\t0.00041121336606769727,\r\n\t0.0004135922586200124,\r\n\t0.0004159839128048484,\r\n\t0.00041838839092562483,\r\n\t0.0004208057555539743,\r\n\t0.0004232360695307132,\r\n\t0.0004256793959667845,\r\n\t0.0004281357982442351,\r\n\t0.00043060534001716024,\r\n\t0.00043308808521268834,\r\n\t0.00043558409803193,\r\n\t0.0004380934429509646,\r\n\t0.00044061618472179847,\r\n\t0.0004431523883733531,\r\n\t0.00044570211921242836,\r\n\t0.00044826544282469677,\r\n\t0.0004508424250756692,\r\n\t0.0004534331321116967,\r\n\t0.0004560376303609393,\r\n\t0.00045865598653437235,\r\n\t0.00046128826762676045,\r\n\t0.0004639345409176684,\r\n\t0.00046659487397244023,\r\n\t0.0004692693346432132,\r\n\t0.00047195799106990714,\r\n\t0.00047466091168123367,\r\n\t0.0004773781651956987,\r\n\t0.0004801098206226116,\r\n\t0.00048285594726309584,\r\n\t0.0004856166147110997,\r\n\t0.0004883918928544127,\r\n\t0.0004911818518756826,\r\n\t0.0004939865622534346,\r\n\t0.000496806094763094,\r\n\t0.0004996405204780083,\r\n\t0.0005024899107704797,\r\n\t0.0005053543373127836,\r\n\t0.0005082338720782142,\r\n\t0.0005111285873421019,\r\n\t0.0005140385556828663,\r\n\t0.0005169638499830389,\r\n\t0.0005199045434303176,\r\n\t0.0005228607095185964,\r\n\t0.000525832422049027,\r\n\t0.0005288197551310468,\r\n\t0.0005318227831834506,\r\n\t0.0005348415809354225,\r\n\t0.0005378762234276089,\r\n\t0.0005409267860131596,\r\n\t0.0005439933443588036,\r\n\t0.0005470759744458927,\r\n\t0.0005501747525714831,\r\n\t0.0005532897553493938,\r\n\t0.0005564210597112685,\r\n\t0.0005595687429076648,\r\n\t0.0005627328825091073,\r\n\t0.0005659135564071822,\r\n\t0.0005691108428155971,\r\n\t0.0005723248202712819,\r\n\t0.0005755555676354494,\r\n\t0.0005788031640947029,\r\n\t0.0005820676891621024,\r\n\t0.000585349222678274,\r\n\t0.0005886478448124836,\r\n\t0.0005919636360637503,\r\n\t0.000595296677261922,\r\n\t0.0005986470495687976,\r\n\t0.0006020148344792055,\r\n\t0.0006054001138221282,\r\n\t0.0006088029697617883,\r\n\t0.0006122234847987781,\r\n\t0.0006156617417711467,\r\n\t0.0006191178238555368,\r\n\t0.0006225918145682784,\r\n\t0.0006260837977665235,\r\n\t0.0006295938576493541,\r\n\t0.0006331220787589106,\r\n\t0.0006366685459815131,\r\n\t0.0006402333445487898,\r\n\t0.000643816560038804,\r\n\t0.0006474182783771886,\r\n\t0.0006510385858382744,\r\n\t0.0006546775690462318,\r\n\t0.0006583353149762051,\r\n\t0.0006620119109554509,\r\n\t0.0006657074446644857,\r\n\t0.0006694220041382312,\r\n\t0.0006731556777671494,\r\n\t0.0006769085542984124,\r\n\t0.0006806807228370314,\r\n\t0.0006844722728470308,\r\n\t0.000688283294152586,\r\n\t0.0006921138769392013,\r\n\t0.0006959641117548477,\r\n\t0.0006998340895111499,\r\n\t0.0007037239014845273,\r\n\t0.000707633639317385,\r\n\t0.0007115633950192593,\r\n\t0.0007155132609680129,\r\n\t0.0007194833299109854,\r\n\t0.0007234736949661937,\r\n\t0.0007274844496234864,\r\n\t0.0007315156877457454,\r\n\t0.0007355675035700491,\r\n\t0.0007396399917088792,\r\n\t0.0007437332471512818,\r\n\t0.000747847365264085,\r\n\t0.0007519824417930625,\r\n\t0.0007561385728641534,\r\n\t0.0007603158549846332,\r\n\t0.000764514385044336,\r\n\t0.0007687342603168309,\r\n\t0.0007729755784606465,\r\n\t0.00077723843752046,\r\n\t0.0007815229359283086,\r\n\t0.0007858291725047999,\r\n\t0.0007901572464603223,\r\n\t0.0007945072573962547,\r\n\t0.0007988793053061875,\r\n\t0.0008032734905771351,\r\n\t0.0008076899139907581,\r\n\t0.000812128676724583,\r\n\t0.0008165898803532268,\r\n\t0.0008210736268496233,\r\n\t0.0008255800185862561,\r\n\t0.000830109158336371,\r\n\t0.0008346611492752331,\r\n\t0.000839236094981341,\r\n\t0.0008438340994376727,\r\n\t0.0008484552670329229,\r\n\t0.0008530997025627398,\r\n\t0.0008577675112309725,\r\n\t0.0008624587986509136,\r\n\t0.0008671736708465424,\r\n\t0.0008719122342537825,\r\n\t0.0008766745957217418,\r\n\t0.0008814608625139729,\r\n\t0.0008862711423097292,\r\n\t0.0008911055432052069,\r\n\t0.0008959641737148328,\r\n\t0.0009008471427724886,\r\n\t0.00090575455973281,\r\n\t0.0009106865343724202,\r\n\t0.0009156431768912236,\r\n\t0.0009206245979136505,\r\n\t0.0009256309084899543,\r\n\t0.0009306622200974545,\r\n\t0.0009357186446418415,\r\n\t0.0009408002944584262,\r\n\t0.0009459072823134445,\r\n\t0.0009510397214053111,\r\n\t0.0009561977253659342,\r\n\t0.0009613814082619633,\r\n\t0.0009665908845961132,\r\n\t0.0009718262693084173,\r\n\t0.0009770876777775517,\r\n\t0.0009823752258220947,\r\n\t0.0009876890297018542,\r\n\t0.0009930292061191299,\r\n\t0.0009983958722200451,\r\n\t0.0010037891455958144,\r\n\t0.0010092091442840752,\r\n\t0.0010146559867701653,\r\n\t0.0010201297919884519,\r\n\t0.0010256306793236202,\r\n\t0.0010311587686119925,\r\n\t0.0010367141801428366,\r\n\t0.0010422970346596792,\r\n\t0.0010479074533616217,\r\n\t0.0010535455579046562,\r\n\t0.001059211470402981,\r\n\t0.0010649053134303248,\r\n\t0.0010706272100212669,\r\n\t0.0010763772836725636,\r\n\t0.0010821556583444642,\r\n\t0.0010879624584620594,\r\n\t0.0010937978089165786,\r\n\t0.0010996618350667556,\r\n\t0.0011055546627401292,\r\n\t0.0011114764182344088,\r\n\t0.001117427228318776,\r\n\t0.0011234072202352598,\r\n\t0.0011294165217000372,\r\n\t0.0011354552609048139,\r\n\t0.0011415235665181273,\r\n\t0.001147621567686733,\r\n\t0.0011537493940369052,\r\n\t0.0011599071756758321,\r\n\t0.0011660950431929208,\r\n\t0.0011723131276611867,\r\n\t0.001178561560638574,\r\n\t0.0011848404741693418,\r\n\t0.0011911500007853848,\r\n\t0.0011974902735076298,\r\n\t0.0012038614258473542,\r\n\t0.0012102635918075904,\r\n\t0.0012166969058844412,\r\n\t0.0012231615030684922,\r\n\t0.0012296575188461313,\r\n\t0.0012361850892009566,\r\n\t0.0012427443506151082,\r\n\t0.001249335440070673,\r\n\t0.0012559584950510363,\r\n\t0.0012626136535422454,\r\n\t0.0012693010540344182,\r\n\t0.0012760208355230757,\r\n\t0.001282773137510568,\r\n\t0.0012895581000074029,\r\n\t0.0012963758635336756,\r\n\t0.001303226569120404,\r\n\t0.001310110358310957,\r\n\t0.0013170273731623972,\r\n\t0.0013239777562469043,\r\n\t0.001330961650653138,\r\n\t0.0013379791999876367,\r\n\t0.0013450305483762044,\r\n\t0.0013521158404653083,\r\n\t0.0013592352214234673,\r\n\t0.0013663888369426465,\r\n\t0.0013735768332396561,\r\n\t0.0013807993570575461,\r\n\t0.0013880565556670032,\r\n\t0.0013953485768677589,\r\n\t0.0014026755689899818,\r\n\t0.0014100376808956789,\r\n\t0.0014174350619801084,\r\n\t0.0014248678621731855,\r\n\t0.0014323362319408656,\r\n\t0.0014398403222865895,\r\n\t0.0014473802847526514,\r\n\t0.0014549562714216498,\r\n\t0.0014625684349178541,\r\n\t0.0014702169284086667,\r\n\t0.0014779019056059797,\r\n\t0.0014856235207676522,\r\n\t0.001493381928698861,\r\n\t0.0015011772847535814,\r\n\t0.0015090097448359427,\r\n\t0.0015168794654017068,\r\n\t0.0015247866034596342,\r\n\t0.0015327313165729526,\r\n\t0.0015407137628607364,\r\n\t0.0015487341009993729,\r\n\t0.0015567924902239393,\r\n\t0.0015648890903296794,\r\n\t0.0015730240616733805,\r\n\t0.001581197565174845,\r\n\t0.0015894097623182764,\r\n\t0.0015976608151537534,\r\n\t0.00160595088629861,\r\n\t0.0016142801389389249,\r\n\t0.0016226487368308912,\r\n\t0.001631056844302306,\r\n\t0.0016395046262539642,\r\n\t0.001647992248161114,\r\n\t0.0016565198760748866,\r\n\t0.0016650876766237284,\r\n\t0.0016736958170148514,\r\n\t0.001682344465035657,\r\n\t0.0016910337890551823,\r\n\t0.001699763958025541,\r\n\t0.0017085351414833627,\r\n\t0.0017173475095512306,\r\n\t0.001726201232939125,\r\n\t0.001735096482945884,\r\n\t0.0017440334314606026,\r\n\t0.001753012250964139,\r\n\t0.001762033114530495,\r\n\t0.0017710961958283236,\r\n\t0.001780201669122314,\r\n\t0.0017893497092747001,\r\n\t0.0017985404917466525,\r\n\t0.0018077741925997732,\r\n\t0.0018170509884975023,\r\n\t0.0018263710567066134,\r\n\t0.001835734575098612,\r\n\t0.0018451417221512433,\r\n\t0.0018545926769498826,\r\n\t0.0018640876191890398,\r\n\t0.001873626729173789,\r\n\t0.0018832101878212045,\r\n\t0.0018928381766618527,\r\n\t0.0019025108778412017,\r\n\t0.0019122284741211262,\r\n\t0.0019219911488813038,\r\n\t0.0019317990861207283,\r\n\t0.0019416524704591067,\r\n\t0.0019515514871383817,\r\n\t0.00196149632202411,\r\n\t0.001971487161607001,\r\n\t0.001981524193004292,\r\n\t0.0019916076039612823,\r\n\t0.0020017375828527213,\r\n\t0.0020119143186843316,\r\n\t0.0020221380010941974,\r\n\t0.002032408820354294,\r\n\t0.002042726967371879,\r\n\t0.0020530926336910127,\r\n\t0.002063506011493959,\r\n\t0.002073967293602699,\r\n\t0.002084476673480337,\r\n\t0.0020950343452326046,\r\n\t0.002105640503609295,\r\n\t0.002116295344005729,\r\n\t0.002126999062464209,\r\n\t0.00213775185567549,\r\n\t0.0021485539209802284,\r\n\t0.0021594054563704476,\r\n\t0.002170306660490993,\r\n\t0.002181257732640996,\r\n\t0.002192258872775332,\r\n\t0.002203310281506075,\r\n\t0.002214412160103963,\r\n\t0.0022255647104998657,\r\n\t0.00223676813528621,\r\n\t0.0022480226377184914,\r\n\t0.002259328421716674,\r\n\t0.002270685691866706,\r\n\t0.0022820946534219265,\r\n\t0.0022935555123045786,\r\n\t0.0023050684751071966,\r\n\t0.002316633749094147,\r\n\t0.0023282515422030077,\r\n\t0.0023399220630460943,\r\n\t0.002351645520911846,\r\n\t0.0023634221257663626,\r\n\t0.0023752520882547768,\r\n\t0.0023871356197027868,\r\n\t0.002399072932118044,\r\n\t0.002411064238191676,\r\n\t0.002423109751299667,\r\n\t0.0024352096855043887,\r\n\t0.0024473642555559853,\r\n\t0.002459573676893879,\r\n\t0.0024718381656481853,\r\n\t0.002484157938641198,\r\n\t0.002496533213388805,\r\n\t0.002508964208101976,\r\n\t0.0025214511416881817,\r\n\t0.002533994233752871,\r\n\t0.0025465937046008913,\r\n\t0.002559249775237969,\r\n\t0.0025719626673721178,\r\n\t0.0025847326034151422,\r\n\t0.002597559806484012,\r\n\t0.0026104445004023844,\r\n\t0.002623386909701973,\r\n\t0.0026363872596240684,\r\n\t0.002649445776120905,\r\n\t0.0026625626858571808,\r\n\t0.0026757382162114172,\r\n\t0.002688972595277485,\r\n\t0.002702266051865965,\r\n\t0.0027156188155056434,\r\n\t0.0027290311164449407,\r\n\t0.002742503185653298,\r\n\t0.002756035254822702,\r\n\t0.002769627556369023,\r\n\t0.0027832803234335403,\r\n\t0.0027969937898842914,\r\n\t0.002810768190317583,\r\n\t0.00282460376005934,\r\n\t0.002838500735166619,\r\n\t0.0028524593524289605,\r\n\t0.0028664798493698795,\r\n\t0.0028805624642482368,\r\n\t0.0028947074360597094,\r\n\t0.0029089150045381804,\r\n\t0.00292318541015719,\r\n\t0.0029375188941313185,\r\n\t0.002951915698417659,\r\n\t0.0029663760657171754,\r\n\t0.0029809002394761766,\r\n\t0.0029954884638876745,\r\n\t0.0030101409838928714,\r\n\t0.0030248580451824798,\r\n\t0.0030396398941982287,\r\n\t0.003054486778134189,\r\n\t0.003069398944938259,\r\n\t0.003084376643313489,\r\n\t0.0030994201227195813,\r\n\t0.0031145296333741955,\r\n\t0.003129705426254432,\r\n\t0.003144947753098174,\r\n\t0.0031602568664055265,\r\n\t0.0031756330194401814,\r\n\t0.003191076466230847,\r\n\t0.0032065874615725964,\r\n\t0.0032221662610283125,\r\n\t0.0032378131209300225,\r\n\t0.0032535282983803433,\r\n\t0.003269312051253807,\r\n\t0.0032851646381983047,\r\n\t0.00330108631863641,\r\n\t0.0033170773527668295,\r\n\t0.003333138001565693,\r\n\t0.00334926852678803,\r\n\t0.00336546919096904,\r\n\t0.003381740257425571,\r\n\t0.003398081990257386,\r\n\t0.00341449465434863,\r\n\t0.00343097851536911,\r\n\t0.0034475338397757216,\r\n\t0.0034641608948137725,\r\n\t0.0034808599485183726,\r\n\t0.0034976312697157534,\r\n\t0.0035144751280246724,\r\n\t0.003531391793857711,\r\n\t0.003548381538422685,\r\n\t0.0035654446337239297,\r\n\t0.00358258135256371,\r\n\t0.0035997919685435004,\r\n\t0.003617076756065394,\r\n\t0.0036344359903333627,\r\n\t0.0036518699473546867,\r\n\t0.0036693789039411793,\r\n\t0.0036869631377106425,\r\n\t0.0037046229270880655,\r\n\t0.0037223585513070823,\r\n\t0.0037401702904111597,\r\n\t0.003758058425255052,\r\n\t0.0037760232375060095,\r\n\t0.0037940650096451706,\r\n\t0.003812184024968818,\r\n\t0.00383038056758974,\r\n\t0.0038486549224384884,\r\n\t0.0038670073752647377,\r\n\t0.003885438212638524,\r\n\t0.00390394772195161,\r\n\t0.003922536191418718,\r\n\t0.003941203910078875,\r\n\t0.003959951167796684,\r\n\t0.003978778255263587,\r\n\t0.003997685463999197,\r\n\t0.004016673086352524,\r\n\t0.0040357414155033165,\r\n\t0.004054890745463272,\r\n\t0.0040741213710773685,\r\n\t0.004093433588025073,\r\n\t0.004112827692821674,\r\n\t0.004132303982819469,\r\n\t0.004151862756209107,\r\n\t0.004171504312020758,\r\n\t0.004191228950125454,\r\n\t0.00421103697123624,\r\n\t0.0042309286769095355,\r\n\t0.004250904369546244,\r\n\t0.004270964352393136,\r\n\t0.00429110892954394,\r\n\t0.004311338405940715,\r\n\t0.004331653087374946,\r\n\t0.004352053280488889,\r\n\t0.0043725392927766935,\r\n\t0.0043931114325857,\r\n\t0.004413770009117587,\r\n\t0.004434515332429639,\r\n\t0.00445534771343591,\r\n\t0.00447626746390846,\r\n\t0.00449727489647852,\r\n\t0.004518370324637734,\r\n\t0.004539554062739287,\r\n\t0.004560826425999174,\r\n\t0.004582187730497291,\r\n\t0.004603638293178721,\r\n\t0.004625178431854795,\r\n\t0.00464680846520438,\r\n\t0.004668528712774931,\r\n\t0.0046903394949837805,\r\n\t0.004712241133119166,\r\n\t0.004734233949341519,\r\n\t0.004756318266684489,\r\n\t0.004778494409056211,\r\n\t0.004800762701240342,\r\n\t0.004823123468897289,\r\n\t0.004845577038565277,\r\n\t0.0048681237376615345,\r\n\t0.004890763894483364,\r\n\t0.004913497838209328,\r\n\t0.004936325898900296,\r\n\t0.004959248407500637,\r\n\t0.004982265695839237,\r\n\t0.005005378096630702,\r\n\t0.005028585943476361,\r\n\t0.005051889570865462,\r\n\t0.005075289314176147,\r\n\t0.005098785509676666,\r\n\t0.005122378494526329,\r\n\t0.005146068606776712,\r\n\t0.005169856185372595,\r\n\t0.005193741570153166,\r\n\t0.005217725101852958,\r\n\t0.005241807122103009,\r\n\t0.005265987973431835,\r\n\t0.005290267999266543,\r\n\t0.005314647543933818,\r\n\t0.00533912695266101,\r\n\t0.005363706571577122,\r\n\t0.005388386747713887,\r\n\t0.005413167829006735,\r\n\t0.00543805016429587,\r\n\t0.005463034103327218,\r\n\t0.00548811999675352,\r\n\t0.005513308196135219,\r\n\t0.005538599053941597,\r\n\t0.005563992923551607,\r\n\t0.005589490159255026,\r\n\t0.0056150911162533195,\r\n\t0.0056407961506606385,\r\n\t0.005666605619504837,\r\n\t0.005692519880728371,\r\n\t0.005718539293189331,\r\n\t0.005744664216662314,\r\n\t0.005770895011839469,\r\n\t0.005797232040331323,\r\n\t0.005823675664667851,\r\n\t0.005850226248299261,\r\n\t0.005876884155597088,\r\n\t0.0059036497518549355,\r\n\t0.005930523403289558,\r\n\t0.005957505477041618,\r\n\t0.005984596341176728,\r\n\t0.006011796364686238,\r\n\t0.0060391059174882,\r\n\t0.006066525370428195,\r\n\t0.006094055095280276,\r\n\t0.0061216954647477645,\r\n\t0.006149446852464216,\r\n\t0.006177309632994168,\r\n\t0.006205284181834112,\r\n\t0.006233370875413228,\r\n\t0.00626157009109433,\r\n\t0.006289882207174621,\r\n\t0.0063183076028866065,\r\n\t0.006346846658398807,\r\n\t0.006375499754816714,\r\n\t0.006404267274183449,\r\n\t0.006433149599480739,\r\n\t0.006462147114629527,\r\n\t0.006491260204490958,\r\n\t0.0065204892548669825,\r\n\t0.006549834652501297,\r\n\t0.006579296785079985,\r\n\t0.006608876041232387,\r\n\t0.0066385728105317725,\r\n\t0.006668387483496171,\r\n\t0.006698320451589051,\r\n\t0.006728372107220125,\r\n\t0.006758542843745993,\r\n\t0.006788833055470998,\r\n\t0.0068192431376477925,\r\n\t0.006849773486478195,\r\n\t0.006880424499113768,\r\n\t0.00691119657365665,\r\n\t0.00694209010916008,\r\n\t0.006973105505629279,\r\n\t0.00700424316402193,\r\n\t0.0070355034862490205,\r\n\t0.007066886875175351,\r\n\t0.007098393734620348,\r\n\t0.007130024469358556,\r\n\t0.007161779485120417,\r\n\t0.007193659188592785,\r\n\t0.007225663987419669,\r\n\t0.007257794290202729,\r\n\t0.007290050506502019,\r\n\t0.00732243304683646,\r\n\t0.0073549423226845516,\r\n\t0.0073875787464848805,\r\n\t0.007420342731636759,\r\n\t0.007453234692500734,\r\n\t0.007486255044399267,\r\n\t0.007519404203617118,\r\n\t0.00755268258740211,\r\n\t0.00758609061396545,\r\n\t0.0076196287024824895,\r\n\t0.0076532972730930324,\r\n\t0.007687096746902061,\r\n\t0.007721027545980056,\r\n\t0.00775509009336369,\r\n\t0.007789284813056146,\r\n\t0.00782361213002776,\r\n\t0.007858072470216368,\r\n\t0.007892666260527868,\r\n\t0.007927393928836712,\r\n\t0.007962255903986198,\r\n\t0.007997252615789131,\r\n\t0.008032384495028072,\r\n\t0.008067651973455957,\r\n\t0.008103055483796313,\r\n\t0.008138595459743882,\r\n\t0.008174272335964837,\r\n\t0.00821008654809735,\r\n\t0.008246038532751835,\r\n\t0.00828212872751145,\r\n\t0.008318357570932366,\r\n\t0.008354725502544234,\r\n\t0.00839123296285043,\r\n\t0.008427880393328518,\r\n\t0.008464668236430477,\r\n\t0.00850159693558313,\r\n\t0.00853866693518837,\r\n\t0.00857587868062359,\r\n\t0.008613232618241822,\r\n\t0.00865072919537224,\r\n\t0.008688368860320208,\r\n\t0.00872615206236781,\r\n\t0.008764079251773855,\r\n\t0.008802150879774403,\r\n\t0.008840367398582757,\r\n\t0.008878729261389934,\r\n\t0.008917236922364707,\r\n\t0.008955890836653976,\r\n\t0.008994691460382856,\r\n\t0.00903363925065499,\r\n\t0.009072734665552645,\r\n\t0.009111978164137008,\r\n\t0.00915137020644823,\r\n\t0.009190911253505728,\r\n\t0.009230601767308225,\r\n\t0.009270442210833984,\r\n\t0.009310433048040877,\r\n\t0.00935057474386662,\r\n\t0.0093908677642287,\r\n\t0.009431312576024744,\r\n\t0.009471909647132353,\r\n\t0.009512659446409426,\r\n\t0.009553562443694043,\r\n\t0.00959461910980471,\r\n\t0.00963582991654025,\r\n\t0.009677195336680024,\r\n\t0.009718715843983814,\r\n\t0.009760391913192003,\r\n\t0.009802224020025441,\r\n\t0.009844212641185618,\r\n\t0.009886358254354508,\r\n\t0.009928661338194719,\r\n\t0.009971122372349305,\r\n\t0.010013741837441907,\r\n\t0.010056520215076558,\r\n\t0.010099457987837781,\r\n\t0.010142555639290365,\r\n\t0.010185813653979497,\r\n\t0.010229232517430454,\r\n\t0.010272812716148745,\r\n\t0.010316554737619768,\r\n\t0.01036045907030896,\r\n\t0.010404526203661411,\r\n\t0.01044875662810198,\r\n\t0.010493150835034928,\r\n\t0.010537709316843955,\r\n\t0.010582432566891876,\r\n\t0.010627321079520597,\r\n\t0.01067237535005078,\r\n\t0.010717595874781782,\r\n\t0.010762983150991338,\r\n\t0.010808537676935433,\r\n\t0.010854259951847982,\r\n\t0.010900150475940685,\r\n\t0.010946209750402754,\r\n\t0.010992438277400558,\r\n\t0.011038836560077479,\r\n\t0.011085405102553538,\r\n\t0.011132144409925174,\r\n\t0.011179054988264854,\r\n\t0.011226137344620862,\r\n\t0.011273391987016839,\r\n\t0.011320819424451588,\r\n\t0.011368420166898588,\r\n\t0.011416194725305777,\r\n\t0.01146414361159499,\r\n\t0.01151226733866181,\r\n\t0.011560566420374918,\r\n\t0.01160904137157596,\r\n\t0.01165769270807882,\r\n\t0.011706520946669512,\r\n\t0.011755526605105437,\r\n\t0.01180471020211521,\r\n\t0.011854072257397914,\r\n\t0.011903613291622915,\r\n\t0.01195333382642911,\r\n\t0.012003234384424626,\r\n\t0.01205331548918614,\r\n\t0.012103577665258557,\r\n\t0.012154021438154238,\r\n\t0.01220464733435269,\r\n\t0.012255455881299783,\r\n\t0.0123064476074074,\r\n\t0.012357623042052642,\r\n\t0.012408982715577412,\r\n\t0.012460527159287658,\r\n\t0.012512256905452934,\r\n\t0.012564172487305517,\r\n\t0.012616274439040079,\r\n\t0.012668563295812669,\r\n\t0.012721039593740432,\r\n\t0.01277370386990056,\r\n\t0.012826556662329945,\r\n\t0.012879598510024135,\r\n\t0.012932829952936941,\r\n\t0.012986251531979427,\r\n\t0.013039863789019395,\r\n\t0.013093667266880457,\r\n\t0.013147662509341396,\r\n\t0.013201850061135284,\r\n\t0.013256230467948807,\r\n\t0.013310804276421312,\r\n\t0.013365572034144154,\r\n\t0.013420534289659707,\r\n\t0.013475691592460677,\r\n\t0.013531044492989074,\r\n\t0.013586593542635576,\r\n\t0.013642339293738348,\r\n\t0.013698282299582473,\r\n\t0.013754423114398716,\r\n\t0.013810762293362972,\r\n\t0.01386730039259493,\r\n\t0.013924037969157504,\r\n\t0.013980975581055592,\r\n\t0.014038113787235284,\r\n\t0.014095453147582765,\r\n\t0.01415299422292341,\r\n\t0.014210737575020659,\r\n\t0.01426868376657516,\r\n\t0.014326833361223522,\r\n\t0.014385186923537482,\r\n\t0.014443745019022637,\r\n\t0.014502508214117558,\r\n\t0.014561477076192526,\r\n\t0.014620652173548587,\r\n\t0.014680034075416272,\r\n\t0.01473962335195467,\r\n\t0.01479942057425002,\r\n\t0.014859426314314823,\r\n\t0.014919641145086532,\r\n\t0.014980065640426296,\r\n\t0.015040700375117972,\r\n\t0.01510154592486669,\r\n\t0.015162602866297807,\r\n\t0.015223871776955522,\r\n\t0.01528535323530176,\r\n\t0.015347047820714759,\r\n\t0.015408956113487991,\r\n\t0.015471078694828558,\r\n\t0.01553341614685629,\r\n\t0.015595969052601997,\r\n\t0.015658737996006512,\r\n\t0.015721723561919015,\r\n\t0.015784926336095982,\r\n\t0.0158483469051995,\r\n\t0.015911985856796148,\r\n\t0.01597584377935535,\r\n\t0.016039921262248194,\r\n\t0.01610421889574575,\r\n\t0.01616873727101787,\r\n\t0.01623347698013149,\r\n\t0.016298438616049356,\r\n\t0.016363622772628376,\r\n\t0.01642903004461825,\r\n\t0.016494661027659792,\r\n\t0.016560516318283598,\r\n\t0.016626596513908253,\r\n\t0.01669290221283906,\r\n\t0.016759434014266134,\r\n\t0.01682619251826314,\r\n\t0.016893178325785373,\r\n\t0.016960392038668455,\r\n\t0.017027834259626354,\r\n\t0.01709550559225011,\r\n\t0.017163406641005803,\r\n\t0.017231538011233203,\r\n\t0.017299900309143766,\r\n\t0.017368494141819228,\r\n\t0.01743732011720961,\r\n\t0.017506378844131722,\r\n\t0.017575670932267175,\r\n\t0.017645196992160862,\r\n\t0.0177149576352189,\r\n\t0.01778495347370713,\r\n\t0.017855185120749014,\r\n\t0.017925653190324093,\r\n\t0.017996358297265827,\r\n\t0.018067301057260125,\r\n\t0.018138482086843013,\r\n\t0.01820990200339925,\r\n\t0.018281561425159937,\r\n\t0.018353460971201045,\r\n\t0.01842560126144107,\r\n\t0.01849798291663947,\r\n\t0.01857060655839438,\r\n\t0.01864347280914088,\r\n\t0.018716582292148804,\r\n\t0.018789935631520926,\r\n\t0.018863533452190724,\r\n\t0.018937376379920576,\r\n\t0.019011465041299455,\r\n\t0.01908580006374114,\r\n\t0.019160382075481815,\r\n\t0.01923521170557829,\r\n\t0.019310289583905592,\r\n\t0.019385616341155137,\r\n\t0.019461192608832216,\r\n\t0.019537019019254278,\r\n\t0.019613096205548266,\r\n\t0.019689424801648914,\r\n\t0.01976600544229606,\r\n\t0.019842838763032875,\r\n\t0.01991992540020326,\r\n\t0.019997265990949847,\r\n\t0.020074861173211507,\r\n\t0.020152711585721253,\r\n\t0.020230817868003955,\r\n\t0.02030918066037369,\r\n\t0.02038780060393193,\r\n\t0.02046667834056465,\r\n\t0.02054581451294049,\r\n\t0.020625209764507855,\r\n\t0.020704864739493022,\r\n\t0.02078478008289725,\r\n\t0.020864956440494815,\r\n\t0.02094539445883013,\r\n\t0.021026094785215662,\r\n\t0.021107058067729122,\r\n\t0.021188284955211335,\r\n\t0.021269776097263316,\r\n\t0.021351532144244192,\r\n\t0.02143355374726821,\r\n\t0.02151584155820264,\r\n\t0.02159839622966475,\r\n\t0.021681218415019656,\r\n\t0.021764308768377295,\r\n\t0.021847667944590237,\r\n\t0.02193129659925057,\r\n\t0.022015195388687812,\r\n\t0.022099364969965608,\r\n\t0.022183806000879693,\r\n\t0.02226851913995458,\r\n\t0.02235350504644139,\r\n\t0.022438764380314696,\r\n\t0.02252429780227007,\r\n\t0.022610105973721043,\r\n\t0.02269618955679665,\r\n\t0.02278254921433831,\r\n\t0.022869185609897282,\r\n\t0.02295609940773159,\r\n\t0.023043291272803412,\r\n\t0.023130761870775996,\r\n\t0.02321851186801102,\r\n\t0.023306541931565408,\r\n\t0.023394852729188773,\r\n\t0.02348344492932005,\r\n\t0.023572319201085067,\r\n\t0.023661476214293015,\r\n\t0.023750916639434058,\r\n\t0.02384064114767579,\r\n\t0.023930650410860718,\r\n\t0.02402094510150274,\r\n\t0.024111525892784622,\r\n\t0.02420239345855447,\r\n\t0.02429354847332301,\r\n\t0.024384991612260213,\r\n\t0.024476723551192445,\r\n\t0.024568744966599092,\r\n\t0.024661056535609654,\r\n\t0.024753658936000348,\r\n\t0.02484655284619119,\r\n\t0.024939738945242537,\r\n\t0.025033217912852117,\r\n\t0.025126990429351573,\r\n\t0.025221057175703533,\r\n\t0.02531541883349791,\r\n\t0.025410076084949124,\r\n\t0.025505029612892326,\r\n\t0.02560028010078059,\r\n\t0.02569582823268101,\r\n\t0.025791674693272,\r\n\t0.025887820167839293,\r\n\t0.025984265342273168,\r\n\t0.026081010903064503,\r\n\t0.026178057537301846,\r\n\t0.026275405932667587,\r\n\t0.026373056777434883,\r\n\t0.026471010760463824,\r\n\t0.026569268571198346,\r\n\t0.026667830899662348,\r\n\t0.026766698436456505,\r\n\t0.026865871872754635,\r\n\t0.026965351900299958,\r\n\t0.027065139211401926,\r\n\t0.027165234498932243,\r\n\t0.027265638456321597,\r\n\t0.027366351777555777,\r\n\t0.02746737515717234,\r\n\t0.02756870929025661,\r\n\t0.027670354872438414,\r\n\t0.02777231259988802,\r\n\t0.027874583169312774,\r\n\t0.02797716727795309,\r\n\t0.028080065623579016,\r\n\t0.028183278904486186,\r\n\t0.02828680781949242,\r\n\t0.028390653067933452,\r\n\t0.02849481534965977,\r\n\t0.028599295365032053,\r\n\t0.02870409381491813,\r\n\t0.028809211400688404,\r\n\t0.02891464882421265,\r\n\t0.029020406787855477,\r\n\t0.029126485994473074,\r\n\t0.02923288714740875,\r\n\t0.029339610950489422,\r\n\t0.029446658108021308,\r\n\t0.02955402932478633,\r\n\t0.02966172530603774,\r\n\t0.029769746757496524,\r\n\t0.029878094385347005,\r\n\t0.029986768896233154,\r\n\t0.03009577099725419,\r\n\t0.030205101395960898,\r\n\t0.03031476080035115,\r\n\t0.03042474991886625,\r\n\t0.030535069460386272,\r\n\t0.030645720134226517,\r\n\t0.03075670265013279,\r\n\t0.030868017718277813,\r\n\t0.03097966604925639,\r\n\t0.03109164835408192,\r\n\t0.03120396534418151,\r\n\t0.03131661773139227,\r\n\t0.03142960622795664,\r\n\t0.0315429315465185,\r\n\t0.031656594400118504,\r\n\t0.03177059550219019,\r\n\t0.03188493556655524,\r\n\t0.03199961530741953,\r\n\t0.03211463543936841,\r\n\t0.032229996677362704,\r\n\t0.03234569973673394,\r\n\t0.032461745333180414,\r\n\t0.032578134182762154,\r\n\t0.0326948670018972,\r\n\t0.032811944507356416,\r\n\t0.03292936741625975,\r\n\t0.033047136446070983,\r\n\t0.03316525231459403,\r\n\t0.033283715739967634,\r\n\t0.033402527440661516,\r\n\t0.033521688135471274,\r\n\t0.033641198543514245,\r\n\t0.03376105938422448,\r\n\t0.033881271377348685,\r\n\t0.03400183524294097,\r\n\t0.03412275170135879,\r\n\t0.03424402147325786,\r\n\t0.03436564527958781,\r\n\t0.03448762384158717,\r\n\t0.03460995788077902,\r\n\t0.03473264811896588,\r\n\t0.0348556952782255,\r\n\t0.034979100080905344,\r\n\t0.03510286324961874,\r\n\t0.035226985507239156,\r\n\t0.0353514675768962,\r\n\t0.03547631018197034,\r\n\t0.03560151404608808,\r\n\t0.03572707989311737,\r\n\t0.03585300844716237,\r\n\t0.035979300432558994,\r\n\t0.03610595657386953,\r\n\t0.036232977595878256,\r\n\t0.03636036422358584,\r\n\t0.03648811718220519,\r\n\t0.036616237197155586,\r\n\t0.03674472499405863,\r\n\t0.03687358129873237,\r\n\t0.03700280683718701,\r\n\t0.03713240233561925,\r\n\t0.03726236852040788,\r\n\t0.03739270611810802,\r\n\t0.03752341585544667,\r\n\t0.03765449845931711,\r\n\t0.03778595465677417,\r\n\t0.037917785175028786,\r\n\t0.03804999074144314,\r\n\t0.038182572083525136,\r\n\t0.03831552992892371,\r\n\t0.038448865005423036,\r\n\t0.038582578040937926,\r\n\t0.038716669763508,\r\n\t0.038851140901293116,\r\n\t0.038985992182567306,\r\n\t0.03912122433571436,\r\n\t0.03925683808922163,\r\n\t0.039392834171675675,\r\n\t0.03952921331175603,\r\n\t0.039665976238230594,\r\n\t0.0398031236799497,\r\n\t0.039940656365841265,\r\n\t0.04007857502490487,\r\n\t0.04021688038620686,\r\n\t0.04035557317887446,\r\n\t0.04049465413209077,\r\n\t0.040634123975088914,\r\n\t0.040773983437146936,\r\n\t0.04091423324758193,\r\n\t0.04105487413574501,\r\n\t0.04119590683101524,\r\n\t0.04133733206279467,\r\n\t0.04147915056050226,\r\n\t0.041621363053568845,\r\n\t0.041763970271430945,\r\n\t0.04190697294352587,\r\n\t0.04205037179928537,\r\n\t0.0421941675681308,\r\n\t0.04233836097946661,\r\n\t0.04248295276267559,\r\n\t0.042627943647112386,\r\n\t0.04277333436209846,\r\n\t0.04291912563691585,\r\n\t0.04306531820080198,\r\n\t0.04321191278294338,\r\n\t0.04335891011247049,\r\n\t0.043506310918451335,\r\n\t0.04365411592988634,\r\n\t0.04380232587570191,\r\n\t0.04395094148474522,\r\n\t0.04409996348577789,\r\n\t0.04424939260747059,\r\n\t0.04439922957839667,\r\n\t0.04454947512702694,\r\n\t0.04470012998172302,\r\n\t0.0448511948707323,\r\n\t0.0450026705221811,\r\n\t0.04515455766406969,\r\n\t0.04530685702426543,\r\n\t0.04545956933049767,\r\n\t0.04561269531035101,\r\n\t0.04576623569125982,\r\n\t0.04592019120050225,\r\n\t0.04607456256519364,\r\n\t0.04622935051228133,\r\n\t0.046384555768537734,\r\n\t0.04654017906055523,\r\n\t0.04669622111473902,\r\n\t0.04685268265730213,\r\n\t0.04700956441425832,\r\n\t0.04716686711141675,\r\n\t0.04732459147437529,\r\n\t0.04748273822851479,\r\n\t0.04764130809899249,\r\n\t0.047800301810736336,\r\n\t0.047959720088438296,\r\n\t0.04811956365654867,\r\n\t0.04827983323926925,\r\n\t0.048440529560547764,\r\n\t0.04860165334407106,\r\n\t0.04876320531325927,\r\n\t0.04892518619125908,\r\n\t0.04908759670093819,\r\n\t0.049250437564877965,\r\n\t0.049413709505368206,\r\n\t0.049577413244399814,\r\n\t0.04974154950365945,\r\n\t0.049906119004522145,\r\n\t0.05007112246804603,\r\n\t0.050236560614964704,\r\n\t0.05040243416568217,\r\n\t0.05056874384026525,\r\n\t0.05073549035843803,\r\n\t0.0509026744395748,\r\n\t0.05107029680269407,\r\n\t0.05123835816645171,\r\n\t0.051406859249134886,\r\n\t0.05157580076865512,\r\n\t0.051745183442542274,\r\n\t0.05191500798793744,\r\n\t0.05208527512158713,\r\n\t0.05225598555983597,\r\n\t0.05242714001862096,\r\n\t0.05259873921346394,\r\n\t0.0527707838594661,\r\n\t0.052943274671300264,\r\n\t0.05311621236320538,\r\n\t0.05328959764897886,\r\n\t0.05346343124197091,\r\n\t0.05363771385507705,\r\n\t0.05381244620073213,\r\n\t0.0539876289909031,\r\n\t0.05416326293708285,\r\n\t0.054339348750282984,\r\n\t0.05451588714102766,\r\n\t0.054692878819346355,\r\n\t0.05487032449476759,\r\n\t0.055048224876311724,\r\n\t0.05522658067248476,\r\n\t0.05540539259127091,\r\n\t0.05558466134012654,\r\n\t0.055764387625972585,\r\n\t0.0559445721551887,\r\n\t0.056125215633605306,\r\n\t0.05630631876649796,\r\n\t0.05648788225857938,\r\n\t0.05666990681399371,\r\n\t0.05685239313630846,\r\n\t0.05703534192850884,\r\n\t0.05721875389298992,\r\n\t0.05740262973155033,\r\n\t0.05758697014538494,\r\n\t0.057771775835078344,\r\n\t0.05795704750059752,\r\n\t0.0581427858412853,\r\n\t0.05832899155585297,\r\n\t0.05851566534237381,\r\n\t0.058702807898275554,\r\n\t0.05889041992033392,\r\n\t0.05907850210466549,\r\n\t0.05926705514672029,\r\n\t0.059456079741275376,\r\n\t0.05964557658242735,\r\n\t0.05983554636358566,\r\n\t0.06002598977746516,\r\n\t0.06021690751607957,\r\n\t0.060408300270733774,\r\n\t0.06060016873201745,\r\n\t0.06079251358979722,\r\n\t0.06098533553321031,\r\n\t0.06117863525065668,\r\n\t0.06137241342979277,\r\n\t0.061566670757523284,\r\n\t0.06176140791999527,\r\n\t0.061956625602589785,\r\n\t0.062152324489915894,\r\n\t0.06234850526580221,\r\n\t0.06254516861329111,\r\n\t0.0627423152146302,\r\n\t0.06293994575126632,\r\n\t0.06313806090383738,\r\n\t0.06333666135216574,\r\n\t0.06353574777525066,\r\n\t0.06373532085126127,\r\n\t0.06393538125752912,\r\n\t0.06413592967054126,\r\n\t0.06433696676593242,\r\n\t0.06453849321847846,\r\n\t0.06474050970208829,\r\n\t0.06494301688979735,\r\n\t0.06514601545375964,\r\n\t0.06534950606524105,\r\n\t0.06555348939461131,\r\n\t0.06575796611133759,\r\n\t0.06596293688397596,\r\n\t0.06616840238016547,\r\n\t0.06637436326661939,\r\n\t0.06658082020911907,\r\n\t0.06678777387250547,\r\n\t0.06699522492067295,\r\n\t0.06720317401656077,\r\n\t0.0674116218221465,\r\n\t0.06762056899843806,\r\n\t0.06783001620546691,\r\n\t0.06803996410227996,\r\n\t0.06825041334693277,\r\n\t0.06846136459648154,\r\n\t0.06867281850697633,\r\n\t0.06888477573345286,\r\n\t0.06909723692992582,\r\n\t0.06931020274938067,\r\n\t0.06952367384376704,\r\n\t0.0697376508639901,\r\n\t0.06995213445990449,\r\n\t0.07016712528030532,\r\n\t0.07038262397292212,\r\n\t0.07059863118441007,\r\n\t0.07081514756034361,\r\n\t0.07103217374520795,\r\n\t0.07124971038239235,\r\n\t0.0714677581141818,\r\n\t0.0716863175817505,\r\n\t0.07190538942515312,\r\n\t0.07212497428331832,\r\n\t0.07234507279404055,\r\n\t0.07256568559397274,\r\n\t0.07278681331861861,\r\n\t0.07300845660232538,\r\n\t0.0732306160782756,\r\n\t0.07345329237848044,\r\n\t0.07367648613377115,\r\n\t0.07390019797379238,\r\n\t0.07412442852699362,\r\n\t0.07434917842062258,\r\n\t0.07457444828071694,\r\n\t0.07480023873209674,\r\n\t0.07502655039835718,\r\n\t0.07525338390186048,\r\n\t0.0754807398637288,\r\n\t0.07570861890383594,\r\n\t0.07593702164080052,\r\n\t0.0761659486919774,\r\n\t0.07639540067345106,\r\n\t0.07662537820002681,\r\n\t0.0768558818852243,\r\n\t0.07708691234126872,\r\n\t0.0773184701790843,\r\n\t0.0775505560082854,\r\n\t0.07778317043717009,\r\n\t0.07801631407271133,\r\n\t0.07824998752055021,\r\n\t0.0784841913849875,\r\n\t0.0787189262689767,\r\n\t0.07895419277411558,\r\n\t0.07918999150063916,\r\n\t0.07942632304741154,\r\n\t0.07966318801191868,\r\n\t0.07990058699025981,\r\n\t0.08013852057714099,\r\n\t0.08037698936586607,\r\n\t0.08061599394833002,\r\n\t0.08085553491501063,\r\n\t0.08109561285496097,\r\n\t0.08133622835580157,\r\n\t0.08157738200371312,\r\n\t0.08181907438342784,\r\n\t0.08206130607822276,\r\n\t0.0823040776699111,\r\n\t0.08254738973883552,\r\n\t0.08279124286385903,\r\n\t0.08303563762235894,\r\n\t0.08328057459021726,\r\n\t0.08352605434181481,\r\n\t0.08377207745002174,\r\n\t0.08401864448619129,\r\n\t0.0842657560201508,\r\n\t0.0845134126201949,\r\n\t0.0847616148530771,\r\n\t0.08501036328400263,\r\n\t0.08525965847661982,\r\n\t0.08550950099301347,\r\n\t0.085759891393696,\r\n\t0.08601083023760059,\r\n\t0.08626231808207252,\r\n\t0.08651435548286274,\r\n\t0.0867669429941183,\r\n\t0.08702008116837617,\r\n\t0.08727377055655478,\r\n\t0.08752801170794622,\r\n\t0.08778280517020864,\r\n\t0.08803815148935867,\r\n\t0.08829405120976291,\r\n\t0.08855050487413135,\r\n\t0.08880751302350842,\r\n\t0.08906507619726622,\r\n\t0.08932319493309582,\r\n\t0.08958186976700033,\r\n\t0.08984110123328665,\r\n\t0.09010088986455794,\r\n\t0.0903612361917055,\r\n\t0.09062214074390162,\r\n\t0.09088360404859114,\r\n\t0.0911456266314844,\r\n\t0.09140820901654889,\r\n\t0.09167135172600177,\r\n\t0.09193505528030183,\r\n\t0.09219932019814253,\r\n\t0.09246414699644301,\r\n\t0.09272953619034152,\r\n\t0.09299548829318727,\r\n\t0.09326200381653199,\r\n\t0.09352908327012344,\r\n\t0.09379672716189652,\r\n\t0.0940649359979665,\r\n\t0.09433371028262028,\r\n\t0.09460305051830986,\r\n\t0.0948729572056432,\r\n\t0.09514343084337806,\r\n\t0.09541447192841251,\r\n\t0.09568608095577907,\r\n\t0.0959582584186352,\r\n\t0.09623100480825736,\r\n\t0.09650432061403147,\r\n\t0.09677820632344686,\r\n\t0.09705266242208732,\r\n\t0.0973276893936243,\r\n\t0.09760328771980836,\r\n\t0.09787945788046226,\r\n\t0.09815620035347283,\r\n\t0.09843351561478325,\r\n\t0.09871140413838558,\r\n\t0.0989898663963133,\r\n\t0.0992689028586326,\r\n\t0.09954851399343623,\r\n\t0.09982870026683444,\r\n\t0.1001094621429483,\r\n\t0.10039080008390122,\r\n\t0.10067271454981225,\r\n\t0.1009552059987876,\r\n\t0.10123827488691334,\r\n\t0.10152192166824764,\r\n\t0.10180614679481348,\r\n\t0.10209095071659047,\r\n\t0.10237633388150785,\r\n\t0.10266229673543603,\r\n\t0.10294883972218016,\r\n\t0.10323596328347107,\r\n\t0.10352366785895945,\r\n\t0.10381195388620601,\r\n\t0.10410082180067654,\r\n\t0.1043902720357317,\r\n\t0.10468030502262143,\r\n\t0.10497092119047619,\r\n\t0.10526212096630017,\r\n\t0.10555390477496307,\r\n\t0.1058462730391933,\r\n\t0.10613922617956945,\r\n\t0.10643276461451384,\r\n\t0.10672688876028386,\r\n\t0.10702159903096597,\r\n\t0.10731689583846621,\r\n\t0.10761277959250454,\r\n\t0.10790925070060609,\r\n\t0.10820630956809463,\r\n\t0.1085039565980837,\r\n\t0.10880219219147114,\r\n\t0.10910101674692946,\r\n\t0.10940043066090027,\r\n\t0.1097004343275852,\r\n\t0.11000102813894003,\r\n\t0.1103022124846656,\r\n\t0.1106039877522021,\r\n\t0.1109063543267198,\r\n\t0.11120931259111377,\r\n\t0.11151286292599427,\r\n\t0.11181700570968134,\r\n\t0.11212174131819547,\r\n\t0.11242707012525238,\r\n\t0.11273299250225366,\r\n\t0.11303950881828079,\r\n\t0.1133466194400869,\r\n\t0.1136543247320902,\r\n\t0.1139626250563659,\r\n\t0.11427152077263969,\r\n\t0.11458101223827954,\r\n\t0.11489109980828927,\r\n\t0.11520178383530072,\r\n\t0.11551306466956629,\r\n\t0.11582494265895277,\r\n\t0.11613741814893247,\r\n\t0.11645049148257752,\r\n\t0.11676416300055115,\r\n\t0.11707843304110238,\r\n\t0.11739330194005643,\r\n\t0.11770877003080965,\r\n\t0.11802483764432109,\r\n\t0.11834150510910585,\r\n\t0.11865877275122749,\r\n\t0.11897664089429133,\r\n\t0.11929510985943692,\r\n\t0.11961417996533158,\r\n\t0.119933851528162,\r\n\t0.12025412486162851,\r\n\t0.1205750002769373,\r\n\t0.1208964780827933,\r\n\t0.12121855858539315,\r\n\t0.12154124208841866,\r\n\t0.12186452889302862,\r\n\t0.12218841929785329,\r\n\t0.12251291359898575,\r\n\t0.12283801208997647,\r\n\t0.12316371506182483,\r\n\t0.12349002280297361,\r\n\t0.1238169355993004,\r\n\t0.12414445373411243,\r\n\t0.12447257748813773,\r\n\t0.12480130713952031,\r\n\t0.12513064296381088,\r\n\t0.1254605852339623,\r\n\t0.12579113422032068,\r\n\t0.12612229019062005,\r\n\t0.1264540534099743,\r\n\t0.12678642414087138,\r\n\t0.12711940264316562,\r\n\t0.1274529891740716,\r\n\t0.12778718398815647,\r\n\t0.1281219873373345,\r\n\t0.12845739947085855,\r\n\t0.12879342063531524,\r\n\t0.12913005107461645,\r\n\t0.12946729102999416,\r\n\t0.12980514073999183,\r\n\t0.1301436004404603,\r\n\t0.13048267036454836,\r\n\t0.13082235074269832,\r\n\t0.1311626418026376,\r\n\t0.13150354376937362,\r\n\t0.13184505686518588,\r\n\t0.1321871813096206,\r\n\t0.13252991731948266,\r\n\t0.13287326510883068,\r\n\t0.1332172248889691,\r\n\t0.1335617968684425,\r\n\t0.1339069812530283,\r\n\t0.1342527782457315,\r\n\t0.13459918804677645,\r\n\t0.13494621085360242,\r\n\t0.135293846860855,\r\n\t0.13564209626038176,\r\n\t0.13599095924122379,\r\n\t0.13634043598961126,\r\n\t0.13669052668895548,\r\n\t0.1370412315198436,\r\n\t0.13739255066003114,\r\n\t0.13774448428443742,\r\n\t0.138097032565137,\r\n\t0.13845019567135547,\r\n\t0.13880397376946152,\r\n\t0.13915836702296225,\r\n\t0.13951337559249521,\r\n\t0.13986899963582372,\r\n\t0.14022523930783004,\r\n\t0.14058209476050865,\r\n\t0.14093956614296121,\r\n\t0.14129765360138924,\r\n\t0.14165635727908926,\r\n\t0.1420156773164452,\r\n\t0.14237561385092395,\r\n\t0.1427361670170676,\r\n\t0.14309733694648907,\r\n\t0.14345912376786457,\r\n\t0.14382152760692885,\r\n\t0.14418454858646818,\r\n\t0.14454818682631515,\r\n\t0.14491244244334223,\r\n\t0.14527731555145634,\r\n\t0.14564280626159204,\r\n\t0.14600891468170696,\r\n\t0.14637564091677463,\r\n\t0.14674298506877964,\r\n\t0.14711094723671092,\r\n\t0.14747952751655696,\r\n\t0.14784872600129895,\r\n\t0.14821854278090613,\r\n\t0.14858897794232867,\r\n\t0.14896003156949367,\r\n\t0.14933170374329757,\r\n\t0.14970399454160233,\r\n\t0.15007690403922813,\r\n\t0.15045043230794913,\r\n\t0.15082457941648664,\r\n\t0.15119934543050473,\r\n\t0.15157473041260333,\r\n\t0.15195073442231422,\r\n\t0.15232735751609366,\r\n\t0.15270459974731904,\r\n\t0.15308246116628127,\r\n\t0.15346094182018127,\r\n\t0.15384004175312266,\r\n\t0.15421976100610824,\r\n\t0.15460009961703264,\r\n\t0.15498105762067893,\r\n\t0.15536263504871156,\r\n\t0.1557448319296726,\r\n\t0.15612764828897452,\r\n\t0.15651108414889747,\r\n\t0.15689513952858125,\r\n\t0.1572798144440225,\r\n\t0.15766510890806762,\r\n\t0.1580510229304093,\r\n\t0.15843755651757946,\r\n\t0.1588247096729462,\r\n\t0.15921248239670688,\r\n\t0.15960087468588452,\r\n\t0.159989886534321,\r\n\t0.1603795179326743,\r\n\t0.16076976886841132,\r\n\t0.16116063932580443,\r\n\t0.1615521292859255,\r\n\t0.16194423872664182,\r\n\t0.16233696762261046,\r\n\t0.16273031594527387,\r\n\t0.16312428366285464,\r\n\t0.16351887074035149,\r\n\t0.16391407713953282,\r\n\t0.16430990281893432,\r\n\t0.1647063477338514,\r\n\t0.16510341183633748,\r\n\t0.16550109507519617,\r\n\t0.1658993973959796,\r\n\t0.16629831874098133,\r\n\t0.1666978590492334,\r\n\t0.1670980182565005,\r\n\t0.1674987962952766,\r\n\t0.16790019309477894,\r\n\t0.16830220858094547,\r\n\t0.168704842676428,\r\n\t0.1691080953005899,\r\n\t0.16951196636950067,\r\n\t0.1699164557959309,\r\n\t0.17032156348934935,\r\n\t0.1707272893559173,\r\n\t0.17113363329848513,\r\n\t0.17154059521658716,\r\n\t0.17194817500643872,\r\n\t0.17235637256092984,\r\n\t0.1727651877696234,\r\n\t0.1731746205187487,\r\n\t0.17358467069119937,\r\n\t0.17399533816652724,\r\n\t0.1744066228209401,\r\n\t0.17481852452729618,\r\n\t0.1752310431551009,\r\n\t0.1756441785705023,\r\n\t0.17605793063628805,\r\n\t0.17647229921187974,\r\n\t0.17688728415333094,\r\n\t0.17730288531332167,\r\n\t0.1777191025411557,\r\n\t0.1781359356827556,\r\n\t0.17855338458066033,\r\n\t0.17897144907401957,\r\n\t0.17939012899859202,\r\n\t0.17980942418673979,\r\n\t0.1802293344674264,\r\n\t0.18064985966621122,\r\n\t0.18107099960524808,\r\n\t0.18149275410327914,\r\n\t0.18191512297563384,\r\n\t0.182338106034223,\r\n\t0.18276170308753725,\r\n\t0.18318591394064188,\r\n\t0.18361073839517517,\r\n\t0.18403617624934276,\r\n\t0.18446222729791645,\r\n\t0.18488889133222902,\r\n\t0.18531616814017238,\r\n\t0.18574405750619272,\r\n\t0.18617255921128895,\r\n\t0.18660167303300756,\r\n\t0.18703139874544134,\r\n\t0.18746173611922434,\r\n\t0.18789268492153027,\r\n\t0.18832424491606808,\r\n\t0.18875641586308017,\r\n\t0.18918919751933772,\r\n\t0.18962258963813955,\r\n\t0.1900565919693069,\r\n\t0.19049120425918292,\r\n\t0.19092642625062745,\r\n\t0.1913622576830158,\r\n\t0.19179869829223462,\r\n\t0.19223574781068026,\r\n\t0.19267340596725446,\r\n\t0.19311167248736355,\r\n\t0.19355054709291325,\r\n\t0.19399002950230843,\r\n\t0.19443011943044824,\r\n\t0.19487081658872552,\r\n\t0.1953121206850219,\r\n\t0.19575403142370762,\r\n\t0.19619654850563673,\r\n\t0.1966396716281465,\r\n\t0.19708340048505324,\r\n\t0.19752773476665136,\r\n\t0.19797267415970932,\r\n\t0.19841821834746914,\r\n\t0.198864367009642,\r\n\t0.1993111198224079,\r\n\t0.19975847645841138,\r\n\t0.20020643658676124,\r\n\t0.20065499987302637,\r\n\t0.2011041659792352,\r\n\t0.20155393456387277,\r\n\t0.20200430528187818,\r\n\t0.20245527778464378,\r\n\t0.20290685172001116,\r\n\t0.20335902673227157,\r\n\t0.20381180246216146,\r\n\t0.20426517854686266,\r\n\t0.2047191546199984,\r\n\t0.2051737303116336,\r\n\t0.20562890524827082,\r\n\t0.20608467905285055,\r\n\t0.20654105134474726,\r\n\t0.20699802173976972,\r\n\t0.20745558985015744,\r\n\t0.20791375528458061,\r\n\t0.20837251764813708,\r\n\t0.2088318765423517,\r\n\t0.20929183156517372,\r\n\t0.20975238231097704,\r\n\t0.21021352837055612,\r\n\t0.2106752693311273,\r\n\t0.21113760477632443,\r\n\t0.21160053428620051,\r\n\t0.21206405743722329,\r\n\t0.2125281738022769,\r\n\t0.2129928829506577,\r\n\t0.21345818444807535,\r\n\t0.21392407785664985,\r\n\t0.21439056273491164,\r\n\t0.21485763863779933,\r\n\t0.2153253051166596,\r\n\t0.21579356171924502,\r\n\t0.2162624079897142,\r\n\t0.21673184346862928,\r\n\t0.2172018676929569,\r\n\t0.21767248019606483,\r\n\t0.21814368050772354,\r\n\t0.2186154681541031,\r\n\t0.2190878426577743,\r\n\t0.21956080353770585,\r\n\t0.22003435030926566,\r\n\t0.220508482484218,\r\n\t0.2209831995707251,\r\n\t0.22145850107334403,\r\n\t0.2219343864930282,\r\n\t0.22241085532712518,\r\n\t0.2228879070693775,\r\n\t0.22336554120992058,\r\n\t0.22384375723528405,\r\n\t0.22432255462838924,\r\n\t0.22480193286855116,\r\n\t0.22528189143147542,\r\n\t0.22576242978926064,\r\n\t0.22624354741039554,\r\n\t0.22672524375976116,\r\n\t0.22720751829862823,\r\n\t0.22769037048465918,\r\n\t0.228173799771906,\r\n\t0.22865780561081195,\r\n\t0.22914238744820958,\r\n\t0.22962754472732289,\r\n\t0.23011327688776484,\r\n\t0.23059958336553982,\r\n\t0.2310864635930414,\r\n\t0.23157391699905477,\r\n\t0.23206194300875443,\r\n\t0.23255054104370682,\r\n\t0.23303971052186812,\r\n\t0.23352945085758697,\r\n\t0.2340197614616022,\r\n\t0.23451064174104552,\r\n\t0.23500209109943987,\r\n\t0.2354941089367018,\r\n\t0.23598669464913952,\r\n\t0.23647984762945606,\r\n\t0.2369735672667473,\r\n\t0.23746785294650424,\r\n\t0.2379627040506132,\r\n\t0.23845811995735522,\r\n\t0.23895410004140916,\r\n\t0.23945064367384944,\r\n\t0.2399477502221496,\r\n\t0.24044541905018058,\r\n\t0.24094364951821406,\r\n\t0.24144244098292056,\r\n\t0.24194179279737305,\r\n\t0.24244170431104528,\r\n\t0.24294217486981534,\r\n\t0.24344320381596402,\r\n\t0.2439447904881784,\r\n\t0.24444693422155062,\r\n\t0.24494963434758116,\r\n\t0.24545289019417765,\r\n\t0.24595670108565865,\r\n\t0.24646106634275222,\r\n\t0.24696598528259972,\r\n\t0.2474714572187549,\r\n\t0.24797748146118725,\r\n\t0.24848405731628115,\r\n\t0.24899118408683985,\r\n\t0.24949886107208435,\r\n\t0.2500070875676574,\r\n\t0.2505158628656224,\r\n\t0.2510251862544677,\r\n\t0.2515350570191056,\r\n\t0.25204547444087666,\r\n\t0.25255643779754844,\r\n\t0.2530679463633202,\r\n\t0.25357999940882203,\r\n\t0.2540925962011189,\r\n\t0.2546057360037106,\r\n\t0.25511941807653526,\r\n\t0.2556336416759697,\r\n\t0.256148406054833,\r\n\t0.25666371046238684,\r\n\t0.25717955414433924,\r\n\t0.2576959363428448,\r\n\t0.25821285629650886,\r\n\t0.2587303132403874,\r\n\t0.2592483064059916,\r\n\t0.2597668350212877,\r\n\t0.2602858983107015,\r\n\t0.26080549549511833,\r\n\t0.2613256257918882,\r\n\t0.26184628841482516,\r\n\t0.2623674825742124,\r\n\t0.26288920747680233,\r\n\t0.2634114623258216,\r\n\t0.2639342463209708,\r\n\t0.26445755865842996,\r\n\t0.26498139853085845,\r\n\t0.2655057651274002,\r\n\t0.2660306576336836,\r\n\t0.2665560752318274,\r\n\t0.2670820171004401,\r\n\t0.26760848241462604,\r\n\t0.26813547034598534,\r\n\t0.2686629800626193,\r\n\t0.269191010729131,\r\n\t0.26971956150663046,\r\n\t0.27024863155273554,\r\n\t0.27077822002157725,\r\n\t0.2713083260638001,\r\n\t0.2718389488265684,\r\n\t0.27237008745356606,\r\n\t0.2729017410850031,\r\n\t0.27343390885761554,\r\n\t0.273966589904672,\r\n\t0.2744997833559739,\r\n\t0.2750334883378619,\r\n\t0.27556770397321595,\r\n\t0.2761024293814617,\r\n\t0.2766376636785725,\r\n\t0.2771734059770725,\r\n\t0.2777096553860418,\r\n\t0.27824641101111786,\r\n\t0.2787836719545016,\r\n\t0.27932143731495834,\r\n\t0.27985970618782446,\r\n\t0.28039847766500814,\r\n\t0.28093775083499584,\r\n\t0.2814775247828537,\r\n\t0.2820177985902338,\r\n\t0.28255857133537543,\r\n\t0.28309984209311184,\r\n\t0.28364160993487136,\r\n\t0.28418387392868405,\r\n\t0.28472663313918345,\r\n\t0.2852698866276127,\r\n\t0.2858136334518267,\r\n\t0.28635787266629825,\r\n\t0.28690260332212014,\r\n\t0.28744782446701156,\r\n\t0.2879935351453205,\r\n\t0.28853973439802955,\r\n\t0.28908642126275874,\r\n\t0.28963359477377193,\r\n\t0.2901812539619785,\r\n\t0.29072939785494123,\r\n\t0.2912780254768772,\r\n\t0.29182713584866565,\r\n\t0.2923767279878496,\r\n\t0.29292680090864315,\r\n\t0.2934773536219338,\r\n\t0.29402838513528917,\r\n\t0.29457989445295973,\r\n\t0.29513188057588585,\r\n\t0.29568434250170006,\r\n\t0.29623727922473464,\r\n\t0.29679068973602357,\r\n\t0.29734457302331047,\r\n\t0.2978989280710507,\r\n\t0.29845375386041895,\r\n\t0.29900904936931183,\r\n\t0.2995648135723556,\r\n\t0.30012104544090823,\r\n\t0.3006777439430678,\r\n\t0.3012349080436746,\r\n\t0.3017925367043191,\r\n\t0.3023506288833448,\r\n\t0.3029091835358557,\r\n\t0.30346819961371974,\r\n\t0.3040276760655758,\r\n\t0.30458761183683747,\r\n\t0.3051480058697006,\r\n\t0.3057088571031463,\r\n\t0.3062701644729489,\r\n\t0.3068319269116793,\r\n\t0.3073941433487128,\r\n\t0.30795681271023223,\r\n\t0.3085199339192366,\r\n\t0.3090835058955434,\r\n\t0.30964752755579783,\r\n\t0.3102119978134755,\r\n\t0.310776915578891,\r\n\t0.3113422797592008,\r\n\t0.31190808925841257,\r\n\t0.31247434297738774,\r\n\t0.3130410398138504,\r\n\t0.3136081786623906,\r\n\t0.31417575841447315,\r\n\t0.314743777958441,\r\n\t0.315312236179524,\r\n\t0.31588113195984213,\r\n\t0.3164504641784152,\r\n\t0.3170202317111653,\r\n\t0.3175904334309262,\r\n\t0.31816106820744827,\r\n\t0.31873213490740426,\r\n\t0.31930363239439713,\r\n\t0.31987555952896496,\r\n\t0.320447915168589,\r\n\t0.3210206981676982,\r\n\t0.3215939073776781,\r\n\t0.3221675416468748,\r\n\t0.3227415998206041,\r\n\t0.3233160807411556,\r\n\t0.323890983247802,\r\n\t0.3244663061768032,\r\n\t0.3250420483614154,\r\n\t0.32561820863189567,\r\n\t0.326194785815511,\r\n\t0.32677177873654273,\r\n\t0.32734918621629605,\r\n\t0.3279270070731042,\r\n\t0.32850524012233795,\r\n\t0.32908388417641043,\r\n\t0.3296629380447862,\r\n\t0.3302424005339859,\r\n\t0.33082227044759616,\r\n\t0.3314025465862737,\r\n\t0.33198322774775557,\r\n\t0.3325643127268634,\r\n\t0.3331458003155132,\r\n\t0.33372768930272056,\r\n\t0.33430997847460975,\r\n\t0.33489266661441897,\r\n\t0.3354757525025104,\r\n\t0.33605923491637446,\r\n\t0.33664311263064056,\r\n\t0.33722738441708133,\r\n\t0.33781204904462336,\r\n\t0.3383971052793514,\r\n\t0.3389825518845191,\r\n\t0.33956838762055386,\r\n\t0.34015461124506713,\r\n\t0.34074122151285924,\r\n\t0.3413282171759301,\r\n\t0.34191559698348384,\r\n\t0.3425033596819399,\r\n\t0.3430915040149374,\r\n\t0.3436800287233463,\r\n\t0.3442689325452723,\r\n\t0.3448582142160675,\r\n\t0.3454478724683355,\r\n\t0.3460379060319425,\r\n\t0.3466283136340221,\r\n\t0.34721909399898626,\r\n\t0.34781024584853093,\r\n\t0.3484017679016465,\r\n\t0.3489936588746233,\r\n\t0.3495859174810627,\r\n\t0.35017854243188234,\r\n\t0.3507715324353273,\r\n\t0.3513648861969756,\r\n\t0.35195860241974897,\r\n\t0.35255267980391913,\r\n\t0.3531471170471181,\r\n\t0.3537419128443442,\r\n\t0.35433706588797353,\r\n\t0.3549325748677652,\r\n\t0.35552843847087284,\r\n\t0.35612465538185045,\r\n\t0.3567212242826634,\r\n\t0.35731814385269467,\r\n\t0.35791541276875594,\r\n\t0.3585130297050936,\r\n\t0.35911099333340013,\r\n\t0.35970930232282017,\r\n\t0.36030795533996196,\r\n\t0.3609069510489035,\r\n\t0.3615062881112039,\r\n\t0.3621059651859094,\r\n\t0.3627059809295652,\r\n\t0.3633063339962226,\r\n\t0.3639070230374475,\r\n\t0.3645080467023315,\r\n\t0.36510940363749816,\r\n\t0.36571109248711475,\r\n\t0.3663131118928987,\r\n\t0.3669154604941294,\r\n\t0.36751813692765434,\r\n\t0.3681211398279013,\r\n\t0.3687244678268846,\r\n\t0.3693281195542174,\r\n\t0.36993209363711743,\r\n\t0.37053638870041994,\r\n\t0.37114100336658357,\r\n\t0.3717459362557026,\r\n\t0.3723511859855138,\r\n\t0.37295675117140825,\r\n\t0.37356263042643806,\r\n\t0.37416882236132876,\r\n\t0.3747753255844857,\r\n\t0.3753821387020067,\r\n\t0.3759892603176885,\r\n\t0.37659668903303906,\r\n\t0.3772044234472847,\r\n\t0.37781246215738223,\r\n\t0.3784208037580258,\r\n\t0.37902944684165935,\r\n\t0.37963838999848376,\r\n\t0.3802476318164691,\r\n\t0.38085717088136173,\r\n\t0.3814670057766966,\r\n\t0.38207713508380486,\r\n\t0.3826875573818258,\r\n\t0.38329827124771443,\r\n\t0.3839092752562537,\r\n\t0.3845205679800622,\r\n\t0.38513214798960627,\r\n\t0.3857440138532078,\r\n\t0.3863561641370564,\r\n\t0.3869685974052172,\r\n\t0.3875813122196432,\r\n\t0.38819430714018294,\r\n\t0.38880758072459304,\r\n\t0.3894211315285459,\r\n\t0.39003495810564237,\r\n\t0.3906490590074193,\r\n\t0.3912634327833624,\r\n\t0.39187807798091384,\r\n\t0.392492993145485,\r\n\t0.3931081768204645,\r\n\t0.3937236275472306,\r\n\t0.3943393438651594,\r\n\t0.3949553243116375,\r\n\t0.39557156742206984,\r\n\t0.39618807172989284,\r\n\t0.3968048357665821,\r\n\t0.3974218580616654,\r\n\t0.3980391371427307,\r\n\t0.3986566715354394,\r\n\t0.3992744597635337,\r\n\t0.39989250034885054,\r\n\t0.4005107918113288,\r\n\t0.4011293326690232,\r\n\t0.40174812143811156,\r\n\t0.402367156632909,\r\n\t0.402986436765875,\r\n\t0.4036059603476275,\r\n\t0.40422572588695044,\r\n\t0.40484573189080764,\r\n\t0.4054659768643503,\r\n\t0.4060864593109312,\r\n\t0.40670717773211196,\r\n\t0.4073281306276775,\r\n\t0.40794931649564325,\r\n\t0.4085707338322693,\r\n\t0.4091923811320694,\r\n\t0.4098142568878216,\r\n\t0.4104363595905812,\r\n\t0.411058687729689,\r\n\t0.4116812397927851,\r\n\t0.4123040142658171,\r\n\t0.4129270096330539,\r\n\t0.41355022437709404,\r\n\t0.4141736569788794,\r\n\t0.41479730591770386,\r\n\t0.41542116967122655,\r\n\t0.4160452467154809,\r\n\t0.41666953552488806,\r\n\t0.41729403457226555,\r\n\t0.41791874232884124,\r\n\t0.41854365726426157,\r\n\t0.4191687778466059,\r\n\t0.41979410254239446,\r\n\t0.4204196298166031,\r\n\t0.4210453581326711,\r\n\t0.4216712859525158,\r\n\t0.42229741173654084,\r\n\t0.42292373394365035,\r\n\t0.42355025103125765,\r\n\t0.42417696145529926,\r\n\t0.42480386367024364,\r\n\t0.4254309561291053,\r\n\t0.4260582372834536,\r\n\t0.42668570558342683,\r\n\t0.42731335947774096,\r\n\t0.427941197413704,\r\n\t0.4285692178372246,\r\n\t0.4291974191928266,\r\n\t0.4298257999236573,\r\n\t0.4304543584715025,\r\n\t0.4310830932767946,\r\n\t0.43171200277862765,\r\n\t0.4323410854147656,\r\n\t0.43297033962165715,\r\n\t0.4335997638344443,\r\n\t0.4342293564869771,\r\n\t0.43485911601182214,\r\n\t0.43548904084027756,\r\n\t0.43611912940238157,\r\n\t0.43674938012692716,\r\n\t0.43737979144147093,\r\n\t0.43801036177234787,\r\n\t0.43864108954468,\r\n\t0.43927197318239136,\r\n\t0.4399030111082167,\r\n\t0.4405342017437162,\r\n\t0.4411655435092847,\r\n\t0.441797034824166,\r\n\t0.4424286741064623,\r\n\t0.4430604597731485,\r\n\t0.4436923902400818,\r\n\t0.44432446392201574,\r\n\t0.44495667923261006,\r\n\t0.4455890345844448,\r\n\t0.44622152838903,\r\n\t0.44685415905682,\r\n\t0.447486924997223,\r\n\t0.44811982461861544,\r\n\t0.4487528563283517,\r\n\t0.4493860185327786,\r\n\t0.4500193096372446,\r\n\t0.4506527280461149,\r\n\t0.4512862721627804,\r\n\t0.4519199403896729,\r\n\t0.4525537311282741,\r\n\t0.45318764277913054,\r\n\t0.4538216737418631,\r\n\t0.4544558224151818,\r\n\t0.45509008719689487,\r\n\t0.4557244664839243,\r\n\t0.4563589586723146,\r\n\t0.4569935621572476,\r\n\t0.45762827533305395,\r\n\t0.45826309659322356,\r\n\t0.4588980243304209,\r\n\t0.4595330569364939,\r\n\t0.46016819280248933,\r\n\t0.4608034303186621,\r\n\t0.46143876787449034,\r\n\t0.46207420385868464,\r\n\t0.46270973665920334,\r\n\t0.46334536466326204,\r\n\t0.46398108625734846,\r\n\t0.46461689982723203,\r\n\t0.46525280375797906,\r\n\t0.4658887964339621,\r\n\t0.4665248762388751,\r\n\t0.4671610415557432,\r\n\t0.46779729076693727,\r\n\t0.4684336222541841,\r\n\t0.4690700343985811,\r\n\t0.469706525580606,\r\n\t0.4703430941801321,\r\n\t0.47097973857643766,\r\n\t0.4716164571482213,\r\n\t0.4722532482736114,\r\n\t0.47289011033018136,\r\n\t0.4735270416949591,\r\n\t0.4741640407444426,\r\n\t0.47480110585460916,\r\n\t0.47543823540093066,\r\n\t0.47607542775838335,\r\n\t0.47671268130146305,\r\n\t0.4773499944041947,\r\n\t0.4779873654401476,\r\n\t0.4786247927824452,\r\n\t0.4792622748037802,\r\n\t0.4798998098764244,\r\n\t0.48053739637224363,\r\n\t0.4811750326627079,\r\n\t0.48181271711890633,\r\n\t0.4824504481115568,\r\n\t0.4830882240110216,\r\n\t0.4837260431873166,\r\n\t0.4843639040101272,\r\n\t0.4850018048488174,\r\n\t0.48563974407244537,\r\n\t0.48627772004977327,\r\n\t0.4869157311492825,\r\n\t0.4875537757391833,\r\n\t0.48819185218743005,\r\n\t0.48882995886173125,\r\n\t0.48946809412956466,\r\n\t0.49010625635818694,\r\n\t0.4907444439146492,\r\n\t0.4913826551658067,\r\n\t0.49202088847833386,\r\n\t0.4926591422187346,\r\n\t0.4932974147533571,\r\n\t0.49393570444840385,\r\n\t0.49457400966994697,\r\n\t0.49521232878393784,\r\n\t0.4958506601562227,\r\n\t0.4964890021525521,\r\n\t0.49712735313859635,\r\n\t0.4977657114799554,\r\n\t0.4984040755421741,\r\n\t0.4990424436907518,\r\n\t0.4996808142911581,\r\n\t0.5003191857088426,\r\n\t0.5009575563092482,\r\n\t0.5015959244578263,\r\n\t0.5022342885200449,\r\n\t0.5028726468614043,\r\n\t0.5035109978474479,\r\n\t0.5041493398437776,\r\n\t0.5047876712160625,\r\n\t0.5054259903300531,\r\n\t0.5060642955515962,\r\n\t0.5067025852466432,\r\n\t0.5073408577812658,\r\n\t0.5079791115216661,\r\n\t0.5086173448341933,\r\n\t0.5092555560853511,\r\n\t0.5098937436418134,\r\n\t0.5105319058704354,\r\n\t0.5111700411382687,\r\n\t0.5118081478125703,\r\n\t0.5124462242608171,\r\n\t0.5130842688507175,\r\n\t0.5137222799502267,\r\n\t0.514360255927555,\r\n\t0.514998195151183,\r\n\t0.5156360959898728,\r\n\t0.5162739568126834,\r\n\t0.5169117759889788,\r\n\t0.5175495518884435,\r\n\t0.5181872828810937,\r\n\t0.5188249673372921,\r\n\t0.5194626036277568,\r\n\t0.520100190123576,\r\n\t0.5207377251962197,\r\n\t0.5213752072175548,\r\n\t0.5220126345598528,\r\n\t0.5226500055958057,\r\n\t0.523287318698537,\r\n\t0.5239245722416166,\r\n\t0.5245617645990697,\r\n\t0.5251988941453912,\r\n\t0.5258359592555574,\r\n\t0.5264729583050408,\r\n\t0.527109889669819,\r\n\t0.527746751726389,\r\n\t0.5283835428517787,\r\n\t0.5290202614235623,\r\n\t0.5296569058198682,\r\n\t0.5302934744193943,\r\n\t0.5309299656014189,\r\n\t0.5315663777458159,\r\n\t0.5322027092330631,\r\n\t0.5328389584442572,\r\n\t0.5334751237611248,\r\n\t0.5341112035660379,\r\n\t0.5347471962420213,\r\n\t0.5353831001727684,\r\n\t0.5360189137426515,\r\n\t0.536654635336738,\r\n\t0.537290263340797,\r\n\t0.5379257961413157,\r\n\t0.5385612321255097,\r\n\t0.5391965696813379,\r\n\t0.539831807197511,\r\n\t0.5404669430635065,\r\n\t0.5411019756695791,\r\n\t0.5417369034067764,\r\n\t0.5423717246669464,\r\n\t0.5430064378427527,\r\n\t0.5436410413276854,\r\n\t0.544275533516076,\r\n\t0.5449099128031055,\r\n\t0.545544177584819,\r\n\t0.5461783262581369,\r\n\t0.5468123572208698,\r\n\t0.5474462688717263,\r\n\t0.5480800596103278,\r\n\t0.5487137278372196,\r\n\t0.5493472719538854,\r\n\t0.5499806903627558,\r\n\t0.5506139814672221,\r\n\t0.5512471436716483,\r\n\t0.5518801753813849,\r\n\t0.5525130750027774,\r\n\t0.55314584094318,\r\n\t0.5537784716109699,\r\n\t0.5544109654155556,\r\n\t0.5550433207673903,\r\n\t0.5556755360779843,\r\n\t0.5563076097599182,\r\n\t0.5569395402268518,\r\n\t0.5575713258935381,\r\n\t0.558202965175834,\r\n\t0.5588344564907153,\r\n\t0.5594657982562842,\r\n\t0.5600969888917837,\r\n\t0.5607280268176087,\r\n\t0.5613589104553199,\r\n\t0.5619896382276525,\r\n\t0.5626202085585293,\r\n\t0.5632506198730729,\r\n\t0.5638808705976184,\r\n\t0.5645109591597228,\r\n\t0.5651408839881782,\r\n\t0.565770643513023,\r\n\t0.5664002361655557,\r\n\t0.5670296603783432,\r\n\t0.5676589145852348,\r\n\t0.5682879972213724,\r\n\t0.5689169067232054,\r\n\t0.5695456415284978,\r\n\t0.570174200076343,\r\n\t0.5708025808071734,\r\n\t0.5714307821627753,\r\n\t0.5720588025862963,\r\n\t0.5726866405222594,\r\n\t0.5733142944165731,\r\n\t0.5739417627165464,\r\n\t0.574569043870895,\r\n\t0.5751961363297567,\r\n\t0.5758230385447007,\r\n\t0.5764497489687423,\r\n\t0.57707626605635,\r\n\t0.5777025882634595,\r\n\t0.5783287140474842,\r\n\t0.5789546418673289,\r\n\t0.5795803701833973,\r\n\t0.5802058974576059,\r\n\t0.5808312221533941,\r\n\t0.5814563427357384,\r\n\t0.5820812576711591,\r\n\t0.5827059654277348,\r\n\t0.5833304644751119,\r\n\t0.5839547532845191,\r\n\t0.5845788303287738,\r\n\t0.5852026940822965,\r\n\t0.5858263430211206,\r\n\t0.586449775622906,\r\n\t0.5870729903669465,\r\n\t0.5876959857341832,\r\n\t0.5883187602072149,\r\n\t0.588941312270311,\r\n\t0.5895636404094191,\r\n\t0.5901857431121788,\r\n\t0.5908076188679307,\r\n\t0.5914292661677307,\r\n\t0.5920506835043571,\r\n\t0.5926718693723232,\r\n\t0.593292822267888,\r\n\t0.5939135406890692,\r\n\t0.5945340231356501,\r\n\t0.595154268109193,\r\n\t0.5957742741130495,\r\n\t0.5963940396523728,\r\n\t0.5970135632341254,\r\n\t0.5976328433670917,\r\n\t0.5982518785618884,\r\n\t0.5988706673309772,\r\n\t0.5994892081886716,\r\n\t0.6001074996511495,\r\n\t0.6007255402364663,\r\n\t0.601343328464561,\r\n\t0.6019608628572696,\r\n\t0.6025781419383346,\r\n\t0.6031951642334179,\r\n\t0.6038119282701075,\r\n\t0.6044284325779306,\r\n\t0.6050446756883625,\r\n\t0.6056606561348405,\r\n\t0.6062763724527698,\r\n\t0.6068918231795358,\r\n\t0.607507006854515,\r\n\t0.6081219220190862,\r\n\t0.6087365672166379,\r\n\t0.609350940992581,\r\n\t0.6099650418943576,\r\n\t0.6105788684714542,\r\n\t0.6111924192754074,\r\n\t0.6118056928598175,\r\n\t0.6124186877803568,\r\n\t0.6130314025947827,\r\n\t0.6136438358629439,\r\n\t0.6142559861467926,\r\n\t0.6148678520103937,\r\n\t0.6154794320199378,\r\n\t0.6160907247437466,\r\n\t0.6167017287522859,\r\n\t0.6173124426181742,\r\n\t0.6179228649161951,\r\n\t0.6185329942233037,\r\n\t0.6191428291186386,\r\n\t0.6197523681835309,\r\n\t0.6203616100015162,\r\n\t0.620970553158341,\r\n\t0.6215791962419746,\r\n\t0.6221875378426177,\r\n\t0.6227955765527153,\r\n\t0.6234033109669612,\r\n\t0.6240107396823119,\r\n\t0.6246178612979933,\r\n\t0.6252246744155143,\r\n\t0.6258311776386716,\r\n\t0.6264373695735622,\r\n\t0.6270432488285917,\r\n\t0.6276488140144862,\r\n\t0.6282540637442977,\r\n\t0.6288589966334168,\r\n\t0.6294636112995801,\r\n\t0.6300679063628826,\r\n\t0.6306718804457829,\r\n\t0.6312755321731157,\r\n\t0.6318788601720987,\r\n\t0.6324818630723457,\r\n\t0.633084539505871,\r\n\t0.6336868881071016,\r\n\t0.6342889075128852,\r\n\t0.6348905963625018,\r\n\t0.6354919532976688,\r\n\t0.6360929769625528,\r\n\t0.6366936660037774,\r\n\t0.6372940190704348,\r\n\t0.6378940348140909,\r\n\t0.6384937118887968,\r\n\t0.6390930489510964,\r\n\t0.6396920446600384,\r\n\t0.6402906976771802,\r\n\t0.6408890066666006,\r\n\t0.6414869702949064,\r\n\t0.6420845872312444,\r\n\t0.6426818561473056,\r\n\t0.6432787757173373,\r\n\t0.6438753446181495,\r\n\t0.6444715615291274,\r\n\t0.6450674251322351,\r\n\t0.6456629341120271,\r\n\t0.6462580871556558,\r\n\t0.6468528829528822,\r\n\t0.6474473201960812,\r\n\t0.648041397580251,\r\n\t0.6486351138030244,\r\n\t0.649228467564673,\r\n\t0.6498214575681179,\r\n\t0.6504140825189373,\r\n\t0.6510063411253767,\r\n\t0.6515982320983538,\r\n\t0.6521897541514694,\r\n\t0.6527809060010137,\r\n\t0.653371686365978,\r\n\t0.6539620939680578,\r\n\t0.6545521275316648,\r\n\t0.6551417857839326,\r\n\t0.6557310674547276,\r\n\t0.656319971276654,\r\n\t0.656908495985063,\r\n\t0.6574966403180601,\r\n\t0.6580844030165162,\r\n\t0.6586717828240702,\r\n\t0.6592587784871411,\r\n\t0.6598453887549329,\r\n\t0.6604316123794461,\r\n\t0.6610174481154811,\r\n\t0.6616028947206489,\r\n\t0.6621879509553766,\r\n\t0.6627726155829187,\r\n\t0.6633568873693597,\r\n\t0.6639407650836259,\r\n\t0.6645242474974896,\r\n\t0.665107333385581,\r\n\t0.6656900215253906,\r\n\t0.6662723106972798,\r\n\t0.6668541996844868,\r\n\t0.6674356872731366,\r\n\t0.6680167722522448,\r\n\t0.6685974534137267,\r\n\t0.6691777295524038,\r\n\t0.6697575994660141,\r\n\t0.6703370619552141,\r\n\t0.6709161158235899,\r\n\t0.671494759877662,\r\n\t0.6720729929268958,\r\n\t0.6726508137837043,\r\n\t0.6732282212634576,\r\n\t0.673805214184489,\r\n\t0.6743817913681043,\r\n\t0.6749579516385849,\r\n\t0.6755336938231971,\r\n\t0.6761090167521979,\r\n\t0.6766839192588444,\r\n\t0.6772584001793962,\r\n\t0.6778324583531256,\r\n\t0.6784060926223219,\r\n\t0.6789793018323018,\r\n\t0.6795520848314114,\r\n\t0.6801244404710354,\r\n\t0.6806963676056028,\r\n\t0.6812678650925957,\r\n\t0.681838931792552,\r\n\t0.6824095665690741,\r\n\t0.6829797682888348,\r\n\t0.6835495358215852,\r\n\t0.6841188680401582,\r\n\t0.6846877638204767,\r\n\t0.685256222041559,\r\n\t0.6858242415855271,\r\n\t0.6863918213376097,\r\n\t0.6869589601861503,\r\n\t0.6875256570226123,\r\n\t0.6880919107415877,\r\n\t0.6886577202407995,\r\n\t0.6892230844211098,\r\n\t0.6897880021865245,\r\n\t0.6903524724442025,\r\n\t0.690916494104457,\r\n\t0.6914800660807634,\r\n\t0.6920431872897678,\r\n\t0.6926058566512876,\r\n\t0.6931680730883211,\r\n\t0.6937298355270511,\r\n\t0.6942911428968537,\r\n\t0.6948519941302997,\r\n\t0.6954123881631629,\r\n\t0.6959723239344242,\r\n\t0.6965318003862803,\r\n\t0.6970908164641446,\r\n\t0.6976493711166555,\r\n\t0.698207463295681,\r\n\t0.6987650919563254,\r\n\t0.6993222560569325,\r\n\t0.699878954559092,\r\n\t0.7004351864276444,\r\n\t0.7009909506306882,\r\n\t0.7015462461395814,\r\n\t0.7021010719289495,\r\n\t0.7026554269766896,\r\n\t0.7032093102639765,\r\n\t0.7037627207752657,\r\n\t0.7043156574983003,\r\n\t0.7048681194241142,\r\n\t0.7054201055470403,\r\n\t0.7059716148647112,\r\n\t0.7065226463780665,\r\n\t0.7070731990913568,\r\n\t0.7076232720121505,\r\n\t0.7081728641513347,\r\n\t0.708721974523123,\r\n\t0.7092706021450588,\r\n\t0.7098187460380214,\r\n\t0.7103664052262285,\r\n\t0.7109135787372416,\r\n\t0.7114602656019704,\r\n\t0.7120064648546796,\r\n\t0.7125521755329887,\r\n\t0.7130973966778802,\r\n\t0.7136421273337017,\r\n\t0.7141863665481734,\r\n\t0.7147301133723876,\r\n\t0.7152733668608169,\r\n\t0.715816126071316,\r\n\t0.7163583900651287,\r\n\t0.7169001579068885,\r\n\t0.7174414286646249,\r\n\t0.7179822014097662,\r\n\t0.7185224752171463,\r\n\t0.7190622491650045,\r\n\t0.7196015223349922,\r\n\t0.7201402938121755,\r\n\t0.7206785626850416,\r\n\t0.7212163280454988,\r\n\t0.7217535889888824,\r\n\t0.7222903446139581,\r\n\t0.7228265940229275,\r\n\t0.7233623363214278,\r\n\t0.7238975706185387,\r\n\t0.724432296026784,\r\n\t0.7249665116621384,\r\n\t0.7255002166440263,\r\n\t0.7260334100953286,\r\n\t0.7265660911423845,\r\n\t0.7270982589149972,\r\n\t0.7276299125464343,\r\n\t0.7281610511734322,\r\n\t0.7286916739361999,\r\n\t0.7292217799784231,\r\n\t0.7297513684472647,\r\n\t0.7302804384933701,\r\n\t0.730808989270869,\r\n\t0.731337019937381,\r\n\t0.7318645296540149,\r\n\t0.7323915175853739,\r\n\t0.7329179828995599,\r\n\t0.7334439247681729,\r\n\t0.7339693423663167,\r\n\t0.7344942348725998,\r\n\t0.7350186014691416,\r\n\t0.7355424413415703,\r\n\t0.7360657536790295,\r\n\t0.7365885376741784,\r\n\t0.7371107925231977,\r\n\t0.737632517425788,\r\n\t0.7381537115851752,\r\n\t0.7386743742081118,\r\n\t0.7391945045048817,\r\n\t0.7397141016892989,\r\n\t0.7402331649787126,\r\n\t0.7407516935940084,\r\n\t0.7412696867596126,\r\n\t0.7417871437034914,\r\n\t0.7423040636571554,\r\n\t0.7428204458556608,\r\n\t0.7433362895376132,\r\n\t0.7438515939451673,\r\n\t0.7443663583240305,\r\n\t0.7448805819234647,\r\n\t0.7453942639962894,\r\n\t0.7459074037988813,\r\n\t0.7464200005911783,\r\n\t0.7469320536366798,\r\n\t0.7474435622024516,\r\n\t0.7479545255591237,\r\n\t0.7484649429808946,\r\n\t0.7489748137455323,\r\n\t0.7494841371343777,\r\n\t0.7499929124323429,\r\n\t0.7505011389279159,\r\n\t0.7510088159131602,\r\n\t0.7515159426837188,\r\n\t0.7520225185388131,\r\n\t0.7525285427812454,\r\n\t0.7530340147174003,\r\n\t0.7535389336572478,\r\n\t0.7540432989143417,\r\n\t0.7545471098058225,\r\n\t0.7550503656524188,\r\n\t0.7555530657784494,\r\n\t0.7560552095118218,\r\n\t0.7565567961840363,\r\n\t0.7570578251301847,\r\n\t0.7575582956889547,\r\n\t0.7580582072026273,\r\n\t0.7585575590170797,\r\n\t0.759056350481786,\r\n\t0.7595545809498194,\r\n\t0.7600522497778507,\r\n\t0.7605493563261508,\r\n\t0.7610458999585908,\r\n\t0.7615418800426448,\r\n\t0.7620372959493871,\r\n\t0.762532147053496,\r\n\t0.7630264327332528,\r\n\t0.7635201523705442,\r\n\t0.7640133053508608,\r\n\t0.7645058910632988,\r\n\t0.7649979089005601,\r\n\t0.7654893582589548,\r\n\t0.765980238538398,\r\n\t0.7664705491424135,\r\n\t0.7669602894781319,\r\n\t0.7674494589562935,\r\n\t0.767938056991246,\r\n\t0.7684260830009458,\r\n\t0.7689135364069586,\r\n\t0.7694004166344605,\r\n\t0.7698867231122355,\r\n\t0.7703724552726772,\r\n\t0.7708576125517904,\r\n\t0.7713421943891883,\r\n\t0.7718262002280942,\r\n\t0.7723096295153409,\r\n\t0.7727924817013718,\r\n\t0.7732747562402391,\r\n\t0.7737564525896047,\r\n\t0.7742375702107394,\r\n\t0.7747181085685246,\r\n\t0.7751980671314491,\r\n\t0.7756774453716111,\r\n\t0.776156242764716,\r\n\t0.7766344587900794,\r\n\t0.7771120929306228,\r\n\t0.7775891446728751,\r\n\t0.7780656135069718,\r\n\t0.7785414989266559,\r\n\t0.7790168004292751,\r\n\t0.7794915175157822,\r\n\t0.7799656496907343,\r\n\t0.7804391964622941,\r\n\t0.780912157342226,\r\n\t0.7813845318458972,\r\n\t0.7818563194922765,\r\n\t0.7823275198039352,\r\n\t0.7827981323070434,\r\n\t0.783268156531371,\r\n\t0.7837375920102858,\r\n\t0.784206438280755,\r\n\t0.7846746948833406,\r\n\t0.785142361362201,\r\n\t0.7856094372650884,\r\n\t0.7860759221433502,\r\n\t0.7865418155519248,\r\n\t0.7870071170493426,\r\n\t0.7874718261977232,\r\n\t0.7879359425627768,\r\n\t0.7883994657137998,\r\n\t0.7888623952236758,\r\n\t0.7893247306688727,\r\n\t0.7897864716294438,\r\n\t0.7902476176890232,\r\n\t0.7907081684348265,\r\n\t0.7911681234576483,\r\n\t0.791627482351863,\r\n\t0.7920862447154196,\r\n\t0.7925444101498429,\r\n\t0.7930019782602302,\r\n\t0.7934589486552528,\r\n\t0.7939153209471497,\r\n\t0.7943710947517294,\r\n\t0.7948262696883663,\r\n\t0.7952808453800015,\r\n\t0.7957348214531377,\r\n\t0.7961881975378389,\r\n\t0.7966409732677284,\r\n\t0.7970931482799888,\r\n\t0.7975447222153564,\r\n\t0.7979956947181219,\r\n\t0.7984460654361272,\r\n\t0.7988958340207648,\r\n\t0.7993450001269738,\r\n\t0.7997935634132393,\r\n\t0.8002415235415886,\r\n\t0.8006888801775924,\r\n\t0.8011356329903583,\r\n\t0.8015817816525314,\r\n\t0.8020273258402907,\r\n\t0.8024722652333489,\r\n\t0.802916599514947,\r\n\t0.8033603283718539,\r\n\t0.8038034514943633,\r\n\t0.8042459685762926,\r\n\t0.8046878793149783,\r\n\t0.805129183411275,\r\n\t0.8055698805695517,\r\n\t0.8060099704976917,\r\n\t0.806449452907087,\r\n\t0.8068883275126364,\r\n\t0.8073265940327455,\r\n\t0.80776425218932,\r\n\t0.8082013017077656,\r\n\t0.8086377423169842,\r\n\t0.8090735737493726,\r\n\t0.8095087957408174,\r\n\t0.8099434080306933,\r\n\t0.8103774103618604,\r\n\t0.8108108024806623,\r\n\t0.8112435841369201,\r\n\t0.8116757550839321,\r\n\t0.8121073150784697,\r\n\t0.8125382638807757,\r\n\t0.8129686012545588,\r\n\t0.8133983269669927,\r\n\t0.813827440788711,\r\n\t0.8142559424938073,\r\n\t0.8146838318598278,\r\n\t0.8151111086677713,\r\n\t0.8155377727020836,\r\n\t0.8159638237506572,\r\n\t0.816389261604825,\r\n\t0.8168140860593583,\r\n\t0.8172382969124627,\r\n\t0.8176618939657769,\r\n\t0.8180848770243664,\r\n\t0.8185072458967211,\r\n\t0.8189290003947519,\r\n\t0.8193501403337888,\r\n\t0.8197706655325738,\r\n\t0.8201905758132604,\r\n\t0.820609871001408,\r\n\t0.8210285509259805,\r\n\t0.8214466154193398,\r\n\t0.8218640643172446,\r\n\t0.8222808974588443,\r\n\t0.8226971146866784,\r\n\t0.8231127158466693,\r\n\t0.8235277007881205,\r\n\t0.823942069363712,\r\n\t0.8243558214294977,\r\n\t0.8247689568448993,\r\n\t0.825181475472704,\r\n\t0.8255933771790599,\r\n\t0.8260046618334728,\r\n\t0.826415329308801,\r\n\t0.8268253794812516,\r\n\t0.8272348122303765,\r\n\t0.8276436274390702,\r\n\t0.8280518249935616,\r\n\t0.828459404783413,\r\n\t0.8288663667015148,\r\n\t0.8292727106440827,\r\n\t0.8296784365106509,\r\n\t0.8300835442040693,\r\n\t0.8304880336304994,\r\n\t0.8308919046994101,\r\n\t0.8312951573235723,\r\n\t0.831697791419055,\r\n\t0.832099806905221,\r\n\t0.8325012037047237,\r\n\t0.8329019817434997,\r\n\t0.833302140950767,\r\n\t0.8337016812590187,\r\n\t0.8341006026040205,\r\n\t0.834498904924804,\r\n\t0.8348965881636631,\r\n\t0.8352936522661486,\r\n\t0.8356900971810659,\r\n\t0.8360859228604673,\r\n\t0.836481129259649,\r\n\t0.8368757163371454,\r\n\t0.8372696840547262,\r\n\t0.8376630323773898,\r\n\t0.8380557612733581,\r\n\t0.8384478707140746,\r\n\t0.8388393606741957,\r\n\t0.8392302311315889,\r\n\t0.8396204820673256,\r\n\t0.840010113465679,\r\n\t0.8403991253141158,\r\n\t0.8407875176032933,\r\n\t0.8411752903270537,\r\n\t0.8415624434824205,\r\n\t0.8419489770695909,\r\n\t0.8423348910919326,\r\n\t0.8427201855559775,\r\n\t0.8431048604714187,\r\n\t0.8434889158511027,\r\n\t0.8438723517110256,\r\n\t0.8442551680703274,\r\n\t0.8446373649512884,\r\n\t0.8450189423793213,\r\n\t0.8453999003829675,\r\n\t0.8457802389938918,\r\n\t0.8461599582468773,\r\n\t0.8465390581798189,\r\n\t0.8469175388337189,\r\n\t0.8472954002526809,\r\n\t0.8476726424839063,\r\n\t0.848049265577686,\r\n\t0.8484252695873968,\r\n\t0.8488006545694953,\r\n\t0.8491754205835134,\r\n\t0.849549567692051,\r\n\t0.8499230959607722,\r\n\t0.8502960054583977,\r\n\t0.8506682962567025,\r\n\t0.8510399684305066,\r\n\t0.8514110220576715,\r\n\t0.8517814572190938,\r\n\t0.852151273998701,\r\n\t0.8525204724834432,\r\n\t0.8528890527632893,\r\n\t0.8532570149312204,\r\n\t0.8536243590832253,\r\n\t0.8539910853182933,\r\n\t0.8543571937384082,\r\n\t0.8547226844485436,\r\n\t0.8550875575566578,\r\n\t0.855451813173685,\r\n\t0.8558154514135321,\r\n\t0.8561784723930712,\r\n\t0.8565408762321354,\r\n\t0.856902663053511,\r\n\t0.8572638329829326,\r\n\t0.857624386149076,\r\n\t0.8579843226835548,\r\n\t0.858343642720911,\r\n\t0.858702346398611,\r\n\t0.8590604338570388,\r\n\t0.8594179052394914,\r\n\t0.8597747606921702,\r\n\t0.8601310003641764,\r\n\t0.8604866244075048,\r\n\t0.860841632977038,\r\n\t0.8611960262305387,\r\n\t0.8615498043286449,\r\n\t0.861902967434863,\r\n\t0.8622555157155628,\r\n\t0.862607449339969,\r\n\t0.8629587684801567,\r\n\t0.8633094733110445,\r\n\t0.8636595640103888,\r\n\t0.8640090407587764,\r\n\t0.8643579037396187,\r\n\t0.864706153139145,\r\n\t0.8650537891463979,\r\n\t0.8654008119532237,\r\n\t0.8657472217542685,\r\n\t0.8660930187469718,\r\n\t0.8664382031315576,\r\n\t0.8667827751110311,\r\n\t0.8671267348911693,\r\n\t0.8674700826805173,\r\n\t0.8678128186903795,\r\n\t0.8681549431348143,\r\n\t0.8684964562306263,\r\n\t0.8688373581973624,\r\n\t0.8691776492573018,\r\n\t0.8695173296354518,\r\n\t0.8698563995595396,\r\n\t0.8701948592600082,\r\n\t0.8705327089700061,\r\n\t0.8708699489253837,\r\n\t0.8712065793646848,\r\n\t0.8715426005291415,\r\n\t0.8718780126626657,\r\n\t0.8722128160118436,\r\n\t0.8725470108259283,\r\n\t0.8728805973568343,\r\n\t0.8732135758591288,\r\n\t0.8735459465900259,\r\n\t0.87387770980938,\r\n\t0.8742088657796794,\r\n\t0.8745394147660379,\r\n\t0.8748693570361893,\r\n\t0.8751986928604797,\r\n\t0.8755274225118623,\r\n\t0.8758555462658877,\r\n\t0.8761830644006998,\r\n\t0.8765099771970264,\r\n\t0.8768362849381752,\r\n\t0.8771619879100236,\r\n\t0.8774870864010145,\r\n\t0.8778115807021467,\r\n\t0.8781354711069713,\r\n\t0.8784587579115815,\r\n\t0.8787814414146069,\r\n\t0.8791035219172068,\r\n\t0.8794249997230628,\r\n\t0.8797458751383715,\r\n\t0.8800661484718382,\r\n\t0.8803858200346684,\r\n\t0.8807048901405631,\r\n\t0.8810233591057088,\r\n\t0.8813412272487728,\r\n\t0.8816584948908941,\r\n\t0.8819751623556789,\r\n\t0.8822912299691905,\r\n\t0.8826066980599439,\r\n\t0.8829215669588977,\r\n\t0.8832358369994489,\r\n\t0.8835495085174228,\r\n\t0.8838625818510677,\r\n\t0.8841750573410472,\r\n\t0.8844869353304337,\r\n\t0.8847982161646994,\r\n\t0.885108900191711,\r\n\t0.8854189877617205,\r\n\t0.8857284792273604,\r\n\t0.8860373749436343,\r\n\t0.8863456752679102,\r\n\t0.886653380559913,\r\n\t0.8869604911817194,\r\n\t0.8872670074977466,\r\n\t0.8875729298747479,\r\n\t0.8878782586818046,\r\n\t0.888182994290319,\r\n\t0.888487137074006,\r\n\t0.8887906874088866,\r\n\t0.8890936456732802,\r\n\t0.8893960122477981,\r\n\t0.8896977875153345,\r\n\t0.8899989718610599,\r\n\t0.8902995656724149,\r\n\t0.8905995693390999,\r\n\t0.8908989832530707,\r\n\t0.8911978078085289,\r\n\t0.8914960434019163,\r\n\t0.8917936904319057,\r\n\t0.8920907492993941,\r\n\t0.8923872204074954,\r\n\t0.8926831041615337,\r\n\t0.8929784009690342,\r\n\t0.8932731112397163,\r\n\t0.8935672353854862,\r\n\t0.8938607738204305,\r\n\t0.8941537269608069,\r\n\t0.894446095225037,\r\n\t0.8947378790336998,\r\n\t0.8950290788095239,\r\n\t0.8953196949773787,\r\n\t0.8956097279642685,\r\n\t0.8958991781993235,\r\n\t0.896188046113794,\r\n\t0.8964763321410407,\r\n\t0.896764036716529,\r\n\t0.8970511602778198,\r\n\t0.897337703264564,\r\n\t0.8976236661184922,\r\n\t0.8979090492834096,\r\n\t0.8981938532051865,\r\n\t0.8984780783317523,\r\n\t0.8987617251130868,\r\n\t0.8990447940012125,\r\n\t0.8993272854501877,\r\n\t0.8996091999160988,\r\n\t0.8998905378570519,\r\n\t0.9001712997331657,\r\n\t0.9004514860065638,\r\n\t0.9007310971413673,\r\n\t0.9010101336036869,\r\n\t0.9012885958616146,\r\n\t0.9015664843852167,\r\n\t0.9018437996465272,\r\n\t0.9021205421195377,\r\n\t0.9023967122801918,\r\n\t0.9026723106063756,\r\n\t0.9029473375779127,\r\n\t0.9032217936765532,\r\n\t0.9034956793859686,\r\n\t0.9037689951917427,\r\n\t0.9040417415813649,\r\n\t0.9043139190442211,\r\n\t0.9045855280715877,\r\n\t0.9048565691566219,\r\n\t0.9051270427943567,\r\n\t0.9053969494816902,\r\n\t0.90566628971738,\r\n\t0.9059350640020335,\r\n\t0.9062032728381035,\r\n\t0.9064709167298768,\r\n\t0.9067379961834682,\r\n\t0.9070045117068127,\r\n\t0.9072704638096585,\r\n\t0.9075358530035572,\r\n\t0.9078006798018577,\r\n\t0.9080649447196982,\r\n\t0.9083286482739984,\r\n\t0.9085917909834513,\r\n\t0.9088543733685157,\r\n\t0.9091163959514088,\r\n\t0.9093778592560985,\r\n\t0.9096387638082947,\r\n\t0.9098991101354423,\r\n\t0.9101588987667133,\r\n\t0.9104181302329998,\r\n\t0.9106768050669044,\r\n\t0.9109349238027338,\r\n\t0.9111924869764916,\r\n\t0.9114494951258688,\r\n\t0.9117059487902373,\r\n\t0.9119618485106413,\r\n\t0.9122171948297914,\r\n\t0.9124719882920539,\r\n\t0.9127262294434454,\r\n\t0.9129799188316239,\r\n\t0.9132330570058818,\r\n\t0.9134856445171373,\r\n\t0.9137376819179275,\r\n\t0.9139891697623994,\r\n\t0.914240108606304,\r\n\t0.9144904990069866,\r\n\t0.9147403415233804,\r\n\t0.9149896367159973,\r\n\t0.9152383851469229,\r\n\t0.9154865873798053,\r\n\t0.9157342439798494,\r\n\t0.9159813555138088,\r\n\t0.9162279225499783,\r\n\t0.9164739456581854,\r\n\t0.9167194254097829,\r\n\t0.9169643623776411,\r\n\t0.9172087571361409,\r\n\t0.9174526102611646,\r\n\t0.917695922330089,\r\n\t0.9179386939217773,\r\n\t0.9181809256165722,\r\n\t0.9184226179962869,\r\n\t0.9186637716441985,\r\n\t0.9189043871450391,\r\n\t0.9191444650849894,\r\n\t0.9193840060516701,\r\n\t0.9196230106341341,\r\n\t0.919861479422859,\r\n\t0.9200994130097402,\r\n\t0.9203368119880815,\r\n\t0.9205736769525885,\r\n\t0.9208100084993609,\r\n\t0.9210458072258845,\r\n\t0.9212810737310235,\r\n\t0.9215158086150126,\r\n\t0.9217500124794498,\r\n\t0.9219836859272886,\r\n\t0.92221682956283,\r\n\t0.9224494439917148,\r\n\t0.9226815298209157,\r\n\t0.9229130876587313,\r\n\t0.9231441181147758,\r\n\t0.9233746217999733,\r\n\t0.9236045993265489,\r\n\t0.9238340513080225,\r\n\t0.9240629783591996,\r\n\t0.9242913810961642,\r\n\t0.9245192601362712,\r\n\t0.9247466160981395,\r\n\t0.924973449601643,\r\n\t0.9251997612679034,\r\n\t0.9254255517192831,\r\n\t0.9256508215793774,\r\n\t0.9258755714730065,\r\n\t0.9260998020262079,\r\n\t0.9263235138662289,\r\n\t0.9265467076215197,\r\n\t0.9267693839217245,\r\n\t0.9269915433976749,\r\n\t0.9272131866813814,\r\n\t0.9274343144060273,\r\n\t0.9276549272059595,\r\n\t0.9278750257166819,\r\n\t0.9280946105748469,\r\n\t0.9283136824182496,\r\n\t0.9285322418858183,\r\n\t0.9287502896176079,\r\n\t0.928967826254792,\r\n\t0.9291848524396564,\r\n\t0.92940136881559,\r\n\t0.9296173760270778,\r\n\t0.9298328747196947,\r\n\t0.9300478655400957,\r\n\t0.93026234913601,\r\n\t0.930476326156233,\r\n\t0.9306897972506193,\r\n\t0.9309027630700742,\r\n\t0.9311152242665472,\r\n\t0.9313271814930236,\r\n\t0.9315386354035184,\r\n\t0.9317495866530674,\r\n\t0.9319600358977201,\r\n\t0.9321699837945331,\r\n\t0.932379431001562,\r\n\t0.9325883781778537,\r\n\t0.9327968259834394,\r\n\t0.9330047750793271,\r\n\t0.9332122261274945,\r\n\t0.9334191797908811,\r\n\t0.9336256367333807,\r\n\t0.9338315976198346,\r\n\t0.9340370631160241,\r\n\t0.9342420338886626,\r\n\t0.9344465106053887,\r\n\t0.934650493934759,\r\n\t0.9348539845462404,\r\n\t0.9350569831102028,\r\n\t0.9352594902979118,\r\n\t0.9354615067815215,\r\n\t0.9356630332340676,\r\n\t0.9358640703294588,\r\n\t0.9360646187424709,\r\n\t0.9362646791487388,\r\n\t0.9364642522247494,\r\n\t0.9366633386478344,\r\n\t0.9368619390961628,\r\n\t0.9370600542487337,\r\n\t0.9372576847853697,\r\n\t0.937454831386709,\r\n\t0.9376514947341978,\r\n\t0.9378476755100841,\r\n\t0.9380433743974103,\r\n\t0.9382385920800048,\r\n\t0.9384333292424768,\r\n\t0.9386275865702072,\r\n\t0.9388213647493433,\r\n\t0.9390146644667898,\r\n\t0.9392074864102029,\r\n\t0.9393998312679825,\r\n\t0.9395916997292663,\r\n\t0.9397830924839206,\r\n\t0.9399740102225349,\r\n\t0.9401644536364143,\r\n\t0.9403544234175727,\r\n\t0.9405439202587247,\r\n\t0.9407329448532799,\r\n\t0.9409214978953345,\r\n\t0.941109580079666,\r\n\t0.9412971921017246,\r\n\t0.9414843346576264,\r\n\t0.9416710084441471,\r\n\t0.9418572141587148,\r\n\t0.9420429524994026,\r\n\t0.9422282241649218,\r\n\t0.9424130298546151,\r\n\t0.9425973702684497,\r\n\t0.9427812461070102,\r\n\t0.9429646580714913,\r\n\t0.9431476068636916,\r\n\t0.9433300931860064,\r\n\t0.9435121177414207,\r\n\t0.9436936812335023,\r\n\t0.9438747843663947,\r\n\t0.9440554278448114,\r\n\t0.9442356123740274,\r\n\t0.9444153386598735,\r\n\t0.9445946074087291,\r\n\t0.9447734193275154,\r\n\t0.9449517751236883,\r\n\t0.9451296755052324,\r\n\t0.9453071211806536,\r\n\t0.9454841128589724,\r\n\t0.9456606512497171,\r\n\t0.9458367370629172,\r\n\t0.9460123710090969,\r\n\t0.9461875537992679,\r\n\t0.946362286144923,\r\n\t0.946536568758029,\r\n\t0.9467104023510211,\r\n\t0.9468837876367947,\r\n\t0.9470567253286999,\r\n\t0.9472292161405339,\r\n\t0.9474012607865361,\r\n\t0.9475728599813792,\r\n\t0.9477440144401641,\r\n\t0.9479147248784129,\r\n\t0.9480849920120625,\r\n\t0.9482548165574578,\r\n\t0.948424199231345,\r\n\t0.9485931407508651,\r\n\t0.9487616418335483,\r\n\t0.9489297031973061,\r\n\t0.9490973255604254,\r\n\t0.949264509641562,\r\n\t0.9494312561597348,\r\n\t0.9495975658343179,\r\n\t0.9497634393850354,\r\n\t0.949928877531954,\r\n\t0.9500938809954779,\r\n\t0.9502584504963406,\r\n\t0.9504225867556003,\r\n\t0.9505862904946318,\r\n\t0.950749562435122,\r\n\t0.9509124032990619,\r\n\t0.951074813808741,\r\n\t0.9512367946867407,\r\n\t0.9513983466559289,\r\n\t0.9515594704394523,\r\n\t0.9517201667607309,\r\n\t0.9518804363434513,\r\n\t0.9520402799115617,\r\n\t0.9521996981892638,\r\n\t0.9523586919010076,\r\n\t0.9525172617714852,\r\n\t0.9526754085256247,\r\n\t0.9528331328885833,\r\n\t0.9529904355857418,\r\n\t0.9531473173426979,\r\n\t0.953303778885261,\r\n\t0.9534598209394449,\r\n\t0.9536154442314624,\r\n\t0.9537706494877187,\r\n\t0.9539254374348064,\r\n\t0.9540798087994978,\r\n\t0.9542337643087402,\r\n\t0.9543873046896489,\r\n\t0.9545404306695023,\r\n\t0.9546931429757346,\r\n\t0.9548454423359305,\r\n\t0.9549973294778189,\r\n\t0.9551488051292678,\r\n\t0.9552998700182771,\r\n\t0.9554505248729732,\r\n\t0.9556007704216033,\r\n\t0.9557506073925295,\r\n\t0.9559000365142222,\r\n\t0.9560490585152549,\r\n\t0.9561976741242981,\r\n\t0.9563458840701138,\r\n\t0.9564936890815487,\r\n\t0.9566410898875295,\r\n\t0.9567880872170567,\r\n\t0.9569346817991982,\r\n\t0.9570808743630842,\r\n\t0.9572266656379016,\r\n\t0.9573720563528876,\r\n\t0.9575170472373244,\r\n\t0.9576616390205335,\r\n\t0.9578058324318692,\r\n\t0.9579496282007146,\r\n\t0.9580930270564743,\r\n\t0.9582360297285691,\r\n\t0.9583786369464311,\r\n\t0.9585208494394978,\r\n\t0.9586626679372054,\r\n\t0.9588040931689849,\r\n\t0.958945125864255,\r\n\t0.9590857667524181,\r\n\t0.9592260165628531,\r\n\t0.9593658760249112,\r\n\t0.9595053458679093,\r\n\t0.9596444268211255,\r\n\t0.9597831196137933,\r\n\t0.9599214249750951,\r\n\t0.9600593436341587,\r\n\t0.9601968763200504,\r\n\t0.9603340237617695,\r\n\t0.960470786688244,\r\n\t0.9606071658283243,\r\n\t0.9607431619107784,\r\n\t0.9608787756642857,\r\n\t0.9610140078174327,\r\n\t0.9611488590987068,\r\n\t0.961283330236492,\r\n\t0.9614174219590622,\r\n\t0.961551134994577,\r\n\t0.9616844700710763,\r\n\t0.9618174279164748,\r\n\t0.9619500092585569,\r\n\t0.9620822148249712,\r\n\t0.9622140453432259,\r\n\t0.9623455015406829,\r\n\t0.9624765841445534,\r\n\t0.962607293881892,\r\n\t0.9627376314795921,\r\n\t0.9628675976643808,\r\n\t0.9629971931628131,\r\n\t0.9631264187012677,\r\n\t0.9632552750059413,\r\n\t0.9633837628028444,\r\n\t0.9635118828177949,\r\n\t0.9636396357764142,\r\n\t0.9637670224041217,\r\n\t0.9638940434261305,\r\n\t0.9640206995674411,\r\n\t0.9641469915528377,\r\n\t0.9642729201068826,\r\n\t0.9643984859539119,\r\n\t0.9645236898180297,\r\n\t0.9646485324231039,\r\n\t0.9647730144927609,\r\n\t0.9648971367503814,\r\n\t0.9650208999190947,\r\n\t0.9651443047217747,\r\n\t0.9652673518810341,\r\n\t0.9653900421192211,\r\n\t0.9655123761584129,\r\n\t0.9656343547204124,\r\n\t0.9657559785267421,\r\n\t0.9658772482986413,\r\n\t0.9659981647570591,\r\n\t0.9661187286226515,\r\n\t0.9662389406157755,\r\n\t0.9663588014564858,\r\n\t0.9664783118645288,\r\n\t0.9665974725593385,\r\n\t0.9667162842600323,\r\n\t0.966834747685406,\r\n\t0.9669528635539291,\r\n\t0.9670706325837403,\r\n\t0.9671880554926435,\r\n\t0.9673051329981028,\r\n\t0.9674218658172379,\r\n\t0.9675382546668196,\r\n\t0.967654300263266,\r\n\t0.9677700033226374,\r\n\t0.9678853645606317,\r\n\t0.9680003846925804,\r\n\t0.9681150644334447,\r\n\t0.9682294044978099,\r\n\t0.9683434055998815,\r\n\t0.9684570684534815,\r\n\t0.9685703937720433,\r\n\t0.9686833822686077,\r\n\t0.9687960346558185,\r\n\t0.968908351645918,\r\n\t0.9690203339507436,\r\n\t0.9691319822817223,\r\n\t0.9692432973498672,\r\n\t0.9693542798657735,\r\n\t0.9694649305396137,\r\n\t0.9695752500811339,\r\n\t0.9696852391996489,\r\n\t0.9697948986040391,\r\n\t0.9699042290027458,\r\n\t0.9700132311037669,\r\n\t0.9701219056146531,\r\n\t0.9702302532425034,\r\n\t0.9703382746939623,\r\n\t0.9704459706752138,\r\n\t0.9705533418919787,\r\n\t0.9706603890495106,\r\n\t0.9707671128525912,\r\n\t0.9708735140055269,\r\n\t0.9709795932121446,\r\n\t0.9710853511757873,\r\n\t0.9711907885993116,\r\n\t0.9712959061850819,\r\n\t0.971400704634968,\r\n\t0.9715051846503402,\r\n\t0.9716093469320666,\r\n\t0.9717131921805077,\r\n\t0.9718167210955139,\r\n\t0.971919934376421,\r\n\t0.9720228327220469,\r\n\t0.9721254168306873,\r\n\t0.972227687400112,\r\n\t0.9723296451275616,\r\n\t0.9724312907097434,\r\n\t0.9725326248428278,\r\n\t0.9726336482224442,\r\n\t0.9727343615436784,\r\n\t0.9728347655010677,\r\n\t0.9729348607885981,\r\n\t0.9730346480997001,\r\n\t0.9731341281272453,\r\n\t0.9732333015635435,\r\n\t0.9733321691003377,\r\n\t0.9734307314288018,\r\n\t0.9735289892395361,\r\n\t0.9736269432225652,\r\n\t0.9737245940673325,\r\n\t0.9738219424626983,\r\n\t0.9739189890969355,\r\n\t0.9740157346577268,\r\n\t0.9741121798321608,\r\n\t0.9742083253067281,\r\n\t0.974304171767319,\r\n\t0.9743997198992195,\r\n\t0.9744949703871078,\r\n\t0.9745899239150508,\r\n\t0.9746845811665021,\r\n\t0.9747789428242966,\r\n\t0.9748730095706485,\r\n\t0.9749667820871479,\r\n\t0.9750602610547575,\r\n\t0.9751534471538088,\r\n\t0.9752463410639997,\r\n\t0.9753389434643903,\r\n\t0.9754312550334009,\r\n\t0.9755232764488077,\r\n\t0.9756150083877398,\r\n\t0.975706451526677,\r\n\t0.9757976065414455,\r\n\t0.9758884741072155,\r\n\t0.9759790548984973,\r\n\t0.9760693495891393,\r\n\t0.9761593588523242,\r\n\t0.976249083360566,\r\n\t0.9763385237857071,\r\n\t0.976427680798915,\r\n\t0.9765165550706799,\r\n\t0.9766051472708113,\r\n\t0.9766934580684347,\r\n\t0.976781488131989,\r\n\t0.976869238129224,\r\n\t0.9769567087271966,\r\n\t0.9770439005922684,\r\n\t0.9771308143901027,\r\n\t0.9772174507856617,\r\n\t0.9773038104432034,\r\n\t0.977389894026279,\r\n\t0.97747570219773,\r\n\t0.9775612356196853,\r\n\t0.9776464949535586,\r\n\t0.9777314808600455,\r\n\t0.9778161939991203,\r\n\t0.9779006350300344,\r\n\t0.9779848046113122,\r\n\t0.9780687034007495,\r\n\t0.9781523320554097,\r\n\t0.9782356912316227,\r\n\t0.9783187815849804,\r\n\t0.9784016037703352,\r\n\t0.9784841584417974,\r\n\t0.9785664462527318,\r\n\t0.9786484678557559,\r\n\t0.9787302239027367,\r\n\t0.9788117150447887,\r\n\t0.9788929419322708,\r\n\t0.9789739052147843,\r\n\t0.97905460554117,\r\n\t0.9791350435595052,\r\n\t0.9792152199171027,\r\n\t0.979295135260507,\r\n\t0.9793747902354922,\r\n\t0.9794541854870595,\r\n\t0.9795333216594353,\r\n\t0.9796121993960681,\r\n\t0.9796908193396263,\r\n\t0.979769182131996,\r\n\t0.9798472884142787,\r\n\t0.9799251388267886,\r\n\t0.9800027340090502,\r\n\t0.9800800745997967,\r\n\t0.9801571612369672,\r\n\t0.980233994557704,\r\n\t0.9803105751983512,\r\n\t0.9803869037944517,\r\n\t0.9804629809807458,\r\n\t0.9805388073911678,\r\n\t0.9806143836588449,\r\n\t0.9806897104160944,\r\n\t0.9807647882944217,\r\n\t0.9808396179245182,\r\n\t0.980914199936259,\r\n\t0.9809885349587005,\r\n\t0.9810626236200795,\r\n\t0.9811364665478093,\r\n\t0.9812100643684791,\r\n\t0.9812834177078512,\r\n\t0.9813565271908592,\r\n\t0.9814293934416056,\r\n\t0.9815020170833605,\r\n\t0.9815743987385589,\r\n\t0.981646539028799,\r\n\t0.9817184385748401,\r\n\t0.9817900979966008,\r\n\t0.981861517913157,\r\n\t0.9819326989427399,\r\n\t0.9820036417027342,\r\n\t0.9820743468096759,\r\n\t0.982144814879251,\r\n\t0.9822150465262929,\r\n\t0.9822850423647811,\r\n\t0.9823548030078392,\r\n\t0.9824243290677328,\r\n\t0.9824936211558684,\r\n\t0.9825626798827904,\r\n\t0.9826315058581808,\r\n\t0.9827000996908563,\r\n\t0.9827684619887669,\r\n\t0.9828365933589942,\r\n\t0.9829044944077499,\r\n\t0.9829721657403736,\r\n\t0.9830396079613316,\r\n\t0.9831068216742147,\r\n\t0.9831738074817369,\r\n\t0.9832405659857338,\r\n\t0.983307097787161,\r\n\t0.9833734034860918,\r\n\t0.9834394836817164,\r\n\t0.9835053389723402,\r\n\t0.9835709699553818,\r\n\t0.9836363772273716,\r\n\t0.9837015613839506,\r\n\t0.9837665230198686,\r\n\t0.9838312627289821,\r\n\t0.9838957811042542,\r\n\t0.9839600787377518,\r\n\t0.9840241562206447,\r\n\t0.9840880141432039,\r\n\t0.9841516530948006,\r\n\t0.984215073663904,\r\n\t0.984278276438081,\r\n\t0.9843412620039935,\r\n\t0.984404030947398,\r\n\t0.9844665838531437,\r\n\t0.9845289213051714,\r\n\t0.9845910438865121,\r\n\t0.9846529521792853,\r\n\t0.9847146467646982,\r\n\t0.9847761282230445,\r\n\t0.9848373971337022,\r\n\t0.9848984540751333,\r\n\t0.984959299624882,\r\n\t0.9850199343595737,\r\n\t0.9850803588549135,\r\n\t0.9851405736856852,\r\n\t0.98520057942575,\r\n\t0.9852603766480453,\r\n\t0.9853199659245837,\r\n\t0.9853793478264515,\r\n\t0.9854385229238075,\r\n\t0.9854974917858825,\r\n\t0.9855562549809774,\r\n\t0.9856148130764626,\r\n\t0.9856731666387765,\r\n\t0.9857313162334249,\r\n\t0.9857892624249793,\r\n\t0.9858470057770766,\r\n\t0.9859045468524172,\r\n\t0.9859618862127647,\r\n\t0.9860190244189444,\r\n\t0.9860759620308425,\r\n\t0.986132699607405,\r\n\t0.986189237706637,\r\n\t0.9862455768856013,\r\n\t0.9863017177004175,\r\n\t0.9863576607062616,\r\n\t0.9864134064573644,\r\n\t0.986468955507011,\r\n\t0.9865243084075394,\r\n\t0.9865794657103403,\r\n\t0.9866344279658559,\r\n\t0.9866891957235787,\r\n\t0.9867437695320512,\r\n\t0.9867981499388647,\r\n\t0.9868523374906586,\r\n\t0.9869063327331196,\r\n\t0.9869601362109806,\r\n\t0.9870137484680206,\r\n\t0.9870671700470631,\r\n\t0.9871204014899759,\r\n\t0.9871734433376701,\r\n\t0.9872262961300995,\r\n\t0.9872789604062596,\r\n\t0.9873314367041873,\r\n\t0.9873837255609599,\r\n\t0.9874358275126944,\r\n\t0.9874877430945471,\r\n\t0.9875394728407123,\r\n\t0.9875910172844226,\r\n\t0.9876423769579473,\r\n\t0.9876935523925926,\r\n\t0.9877445441187003,\r\n\t0.9877953526656473,\r\n\t0.9878459785618458,\r\n\t0.9878964223347415,\r\n\t0.9879466845108139,\r\n\t0.9879967656155754,\r\n\t0.9880466661735708,\r\n\t0.9880963867083771,\r\n\t0.9881459277426021,\r\n\t0.9881952897978847,\r\n\t0.9882444733948945,\r\n\t0.9882934790533305,\r\n\t0.9883423072919212,\r\n\t0.9883909586284241,\r\n\t0.988439433579625,\r\n\t0.9884877326613383,\r\n\t0.988535856388405,\r\n\t0.9885838052746942,\r\n\t0.9886315798331015,\r\n\t0.9886791805755485,\r\n\t0.9887266080129832,\r\n\t0.9887738626553791,\r\n\t0.9888209450117351,\r\n\t0.9888678555900748,\r\n\t0.9889145948974465,\r\n\t0.9889611634399226,\r\n\t0.9890075617225994,\r\n\t0.9890537902495973,\r\n\t0.9890998495240594,\r\n\t0.989145740048152,\r\n\t0.9891914623230645,\r\n\t0.9892370168490087,\r\n\t0.9892824041252183,\r\n\t0.9893276246499492,\r\n\t0.9893726789204794,\r\n\t0.9894175674331082,\r\n\t0.989462290683156,\r\n\t0.9895068491649651,\r\n\t0.989551243371898,\r\n\t0.9895954737963386,\r\n\t0.9896395409296911,\r\n\t0.9896834452623803,\r\n\t0.9897271872838512,\r\n\t0.9897707674825695,\r\n\t0.9898141863460205,\r\n\t0.9898574443607097,\r\n\t0.9899005420121623,\r\n\t0.9899434797849235,\r\n\t0.9899862581625581,\r\n\t0.9900288776276507,\r\n\t0.9900713386618053,\r\n\t0.9901136417456455,\r\n\t0.9901557873588144,\r\n\t0.9901977759799746,\r\n\t0.990239608086808,\r\n\t0.9902812841560162,\r\n\t0.99032280466332,\r\n\t0.9903641700834598,\r\n\t0.9904053808901954,\r\n\t0.990446437556306,\r\n\t0.9904873405535906,\r\n\t0.9905280903528676,\r\n\t0.9905686874239753,\r\n\t0.9906091322357713,\r\n\t0.9906494252561334,\r\n\t0.9906895669519591,\r\n\t0.990729557789166,\r\n\t0.9907693982326918,\r\n\t0.9908090887464943,\r\n\t0.9908486297935518,\r\n\t0.990888021835863,\r\n\t0.9909272653344474,\r\n\t0.990966360749345,\r\n\t0.9910053085396171,\r\n\t0.9910441091633461,\r\n\t0.9910827630776353,\r\n\t0.9911212707386101,\r\n\t0.9911596326014173,\r\n\t0.9911978491202256,\r\n\t0.9912359207482262,\r\n\t0.9912738479376322,\r\n\t0.9913116311396798,\r\n\t0.9913492708046278,\r\n\t0.9913867673817582,\r\n\t0.9914241213193764,\r\n\t0.9914613330648117,\r\n\t0.9914984030644169,\r\n\t0.9915353317635696,\r\n\t0.9915721196066715,\r\n\t0.9916087670371496,\r\n\t0.9916452744974558,\r\n\t0.9916816424290676,\r\n\t0.9917178712724886,\r\n\t0.9917539614672481,\r\n\t0.9917899134519027,\r\n\t0.9918257276640352,\r\n\t0.9918614045402561,\r\n\t0.9918969445162037,\r\n\t0.9919323480265441,\r\n\t0.9919676155049719,\r\n\t0.9920027473842109,\r\n\t0.9920377440960138,\r\n\t0.9920726060711633,\r\n\t0.9921073337394721,\r\n\t0.9921419275297836,\r\n\t0.9921763878699723,\r\n\t0.9922107151869439,\r\n\t0.9922449099066364,\r\n\t0.99227897245402,\r\n\t0.992312903253098,\r\n\t0.992346702726907,\r\n\t0.9923803712975175,\r\n\t0.9924139093860346,\r\n\t0.992447317412598,\r\n\t0.9924805957963829,\r\n\t0.9925137449556007,\r\n\t0.9925467653074993,\r\n\t0.9925796572683633,\r\n\t0.9926124212535151,\r\n\t0.9926450576773155,\r\n\t0.9926775669531636,\r\n\t0.992709949493498,\r\n\t0.9927422057097973,\r\n\t0.9927743360125804,\r\n\t0.9928063408114072,\r\n\t0.9928382205148796,\r\n\t0.9928699755306415,\r\n\t0.9929016062653796,\r\n\t0.9929331131248247,\r\n\t0.992964496513751,\r\n\t0.9929957568359781,\r\n\t0.9930268944943708,\r\n\t0.99305790989084,\r\n\t0.9930888034263433,\r\n\t0.9931195755008863,\r\n\t0.9931502265135218,\r\n\t0.9931807568623522,\r\n\t0.993211166944529,\r\n\t0.993241457156254,\r\n\t0.9932716278927799,\r\n\t0.993301679548411,\r\n\t0.9933316125165038,\r\n\t0.9933614271894683,\r\n\t0.9933911239587676,\r\n\t0.99342070321492,\r\n\t0.9934501653474987,\r\n\t0.9934795107451331,\r\n\t0.993508739795509,\r\n\t0.9935378528853704,\r\n\t0.9935668504005193,\r\n\t0.9935957327258166,\r\n\t0.9936245002451833,\r\n\t0.9936531533416012,\r\n\t0.9936816923971135,\r\n\t0.9937101177928254,\r\n\t0.9937384299089057,\r\n\t0.9937666291245868,\r\n\t0.9937947158181659,\r\n\t0.9938226903670059,\r\n\t0.9938505531475358,\r\n\t0.9938783045352523,\r\n\t0.9939059449047197,\r\n\t0.9939334746295718,\r\n\t0.9939608940825118,\r\n\t0.9939882036353138,\r\n\t0.9940154036588232,\r\n\t0.9940424945229585,\r\n\t0.9940694765967104,\r\n\t0.994096350248145,\r\n\t0.9941231158444029,\r\n\t0.9941497737517008,\r\n\t0.9941763243353321,\r\n\t0.9942027679596687,\r\n\t0.9942291049881605,\r\n\t0.9942553357833377,\r\n\t0.9942814607068107,\r\n\t0.9943074801192716,\r\n\t0.9943333943804952,\r\n\t0.9943592038493394,\r\n\t0.9943849088837466,\r\n\t0.994410509840745,\r\n\t0.9944360070764484,\r\n\t0.9944614009460584,\r\n\t0.9944866918038647,\r\n\t0.9945118800032465,\r\n\t0.9945369658966728,\r\n\t0.9945619498357041,\r\n\t0.9945868321709933,\r\n\t0.9946116132522861,\r\n\t0.9946362934284229,\r\n\t0.994660873047339,\r\n\t0.9946853524560662,\r\n\t0.9947097320007334,\r\n\t0.9947340120265682,\r\n\t0.994758192877897,\r\n\t0.9947822748981471,\r\n\t0.9948062584298468,\r\n\t0.9948301438146274,\r\n\t0.9948539313932233,\r\n\t0.9948776215054737,\r\n\t0.9949012144903233,\r\n\t0.9949247106858239,\r\n\t0.9949481104291346,\r\n\t0.9949714140565237,\r\n\t0.9949946219033693,\r\n\t0.9950177343041607,\r\n\t0.9950407515924994,\r\n\t0.9950636741010997,\r\n\t0.9950865021617907,\r\n\t0.9951092361055166,\r\n\t0.9951318762623385,\r\n\t0.9951544229614347,\r\n\t0.9951768765311028,\r\n\t0.9951992372987597,\r\n\t0.9952215055909438,\r\n\t0.9952436817333155,\r\n\t0.9952657660506585,\r\n\t0.9952877588668808,\r\n\t0.9953096605050162,\r\n\t0.9953314712872251,\r\n\t0.9953531915347956,\r\n\t0.9953748215681452,\r\n\t0.9953963617068213,\r\n\t0.9954178122695027,\r\n\t0.9954391735740008,\r\n\t0.9954604459372607,\r\n\t0.9954816296753622,\r\n\t0.9955027251035214,\r\n\t0.9955237325360915,\r\n\t0.9955446522865641,\r\n\t0.9955654846675703,\r\n\t0.9955862299908824,\r\n\t0.9956068885674143,\r\n\t0.9956274607072233,\r\n\t0.9956479467195111,\r\n\t0.9956683469126251,\r\n\t0.9956886615940593,\r\n\t0.9957088910704561,\r\n\t0.9957290356476068,\r\n\t0.9957490956304538,\r\n\t0.9957690713230904,\r\n\t0.9957889630287637,\r\n\t0.9958087710498745,\r\n\t0.9958284956879793,\r\n\t0.995848137243791,\r\n\t0.9958676960171805,\r\n\t0.9958871723071784,\r\n\t0.995906566411975,\r\n\t0.9959258786289227,\r\n\t0.9959451092545367,\r\n\t0.9959642585844967,\r\n\t0.9959833269136474,\r\n\t0.9960023145360009,\r\n\t0.9960212217447364,\r\n\t0.9960400488322033,\r\n\t0.9960587960899211,\r\n\t0.9960774638085813,\r\n\t0.9960960522780484,\r\n\t0.9961145617873615,\r\n\t0.9961329926247353,\r\n\t0.9961513450775615,\r\n\t0.9961696194324102,\r\n\t0.9961878159750311,\r\n\t0.9962059349903548,\r\n\t0.996223976762494,\r\n\t0.996241941574745,\r\n\t0.9962598297095888,\r\n\t0.9962776414486929,\r\n\t0.9962953770729119,\r\n\t0.9963130368622893,\r\n\t0.9963306210960589,\r\n\t0.9963481300526453,\r\n\t0.9963655640096667,\r\n\t0.9963829232439346,\r\n\t0.9964002080314565,\r\n\t0.9964174186474363,\r\n\t0.9964345553662761,\r\n\t0.9964516184615773,\r\n\t0.9964686082061422,\r\n\t0.9964855248719754,\r\n\t0.9965023687302843,\r\n\t0.9965191400514817,\r\n\t0.9965358391051862,\r\n\t0.9965524661602243,\r\n\t0.9965690214846309,\r\n\t0.9965855053456514,\r\n\t0.9966019180097426,\r\n\t0.9966182597425745,\r\n\t0.996634530809031,\r\n\t0.9966507314732119,\r\n\t0.9966668619984344,\r\n\t0.9966829226472331,\r\n\t0.9966989136813635,\r\n\t0.9967148353618017,\r\n\t0.9967306879487462,\r\n\t0.9967464717016197,\r\n\t0.99676218687907,\r\n\t0.9967778337389717,\r\n\t0.9967934125384275,\r\n\t0.9968089235337692,\r\n\t0.9968243669805599,\r\n\t0.9968397431335945,\r\n\t0.9968550522469019,\r\n\t0.9968702945737455,\r\n\t0.9968854703666258,\r\n\t0.9969005798772804,\r\n\t0.9969156233566865,\r\n\t0.9969306010550617,\r\n\t0.9969455132218659,\r\n\t0.9969603601058018,\r\n\t0.9969751419548175,\r\n\t0.9969898590161071,\r\n\t0.9970045115361124,\r\n\t0.9970190997605238,\r\n\t0.9970336239342829,\r\n\t0.9970480843015823,\r\n\t0.9970624811058687,\r\n\t0.9970768145898428,\r\n\t0.9970910849954618,\r\n\t0.9971052925639403,\r\n\t0.9971194375357517,\r\n\t0.9971335201506302,\r\n\t0.997147540647571,\r\n\t0.9971614992648334,\r\n\t0.9971753962399407,\r\n\t0.9971892318096824,\r\n\t0.9972030062101157,\r\n\t0.9972167196765664,\r\n\t0.997230372443631,\r\n\t0.9972439647451773,\r\n\t0.9972574968143467,\r\n\t0.997270968883555,\r\n\t0.9972843811844944,\r\n\t0.997297733948134,\r\n\t0.9973110274047225,\r\n\t0.9973242617837886,\r\n\t0.9973374373141428,\r\n\t0.9973505542238791,\r\n\t0.997363612740376,\r\n\t0.997376613090298,\r\n\t0.9973895554995976,\r\n\t0.997402440193516,\r\n\t0.9974152673965848,\r\n\t0.9974280373326279,\r\n\t0.9974407502247621,\r\n\t0.9974534062953991,\r\n\t0.9974660057662471,\r\n\t0.9974785488583118,\r\n\t0.997491035791898,\r\n\t0.9975034667866112,\r\n\t0.9975158420613588,\r\n\t0.9975281618343518,\r\n\t0.9975404263231061,\r\n\t0.997552635744444,\r\n\t0.9975647903144956,\r\n\t0.9975768902487003,\r\n\t0.9975889357618083,\r\n\t0.997600927067882,\r\n\t0.9976128643802972,\r\n\t0.9976247479117453,\r\n\t0.9976365778742337,\r\n\t0.9976483544790882,\r\n\t0.9976600779369539,\r\n\t0.997671748457797,\r\n\t0.9976833662509058,\r\n\t0.9976949315248929,\r\n\t0.9977064444876954,\r\n\t0.9977179053465781,\r\n\t0.9977293143081333,\r\n\t0.9977406715782833,\r\n\t0.9977519773622815,\r\n\t0.9977632318647138,\r\n\t0.9977744352895002,\r\n\t0.997785587839896,\r\n\t0.9977966897184939,\r\n\t0.9978077411272247,\r\n\t0.997818742267359,\r\n\t0.997829693339509,\r\n\t0.9978405945436296,\r\n\t0.9978514460790198,\r\n\t0.9978622481443246,\r\n\t0.9978730009375358,\r\n\t0.9978837046559943,\r\n\t0.9978943594963907,\r\n\t0.9979049656547674,\r\n\t0.9979155233265197,\r\n\t0.9979260327063973,\r\n\t0.997936493988506,\r\n\t0.997946907366309,\r\n\t0.9979572730326282,\r\n\t0.9979675911796457,\r\n\t0.9979778619989058,\r\n\t0.9979880856813157,\r\n\t0.9979982624171473,\r\n\t0.9980083923960388,\r\n\t0.9980184758069958,\r\n\t0.998028512838393,\r\n\t0.9980385036779759,\r\n\t0.9980484485128617,\r\n\t0.9980583475295409,\r\n\t0.9980682009138793,\r\n\t0.9980780088511187,\r\n\t0.9980877715258789,\r\n\t0.9980974891221588,\r\n\t0.9981071618233381,\r\n\t0.9981167898121788,\r\n\t0.9981263732708262,\r\n\t0.998135912380811,\r\n\t0.9981454073230501,\r\n\t0.9981548582778488,\r\n\t0.9981642654249014,\r\n\t0.9981736289432934,\r\n\t0.9981829490115025,\r\n\t0.9981922258074002,\r\n\t0.9982014595082533,\r\n\t0.9982106502907253,\r\n\t0.9982197983308777,\r\n\t0.9982289038041717,\r\n\t0.9982379668854695,\r\n\t0.9982469877490359,\r\n\t0.9982559665685394,\r\n\t0.9982649035170541,\r\n\t0.9982737987670609,\r\n\t0.9982826524904488,\r\n\t0.9982914648585166,\r\n\t0.9983002360419745,\r\n\t0.9983089662109448,\r\n\t0.9983176555349643,\r\n\t0.9983263041829852,\r\n\t0.9983349123233762,\r\n\t0.9983434801239252,\r\n\t0.9983520077518389,\r\n\t0.998360495373746,\r\n\t0.9983689431556977,\r\n\t0.9983773512631691,\r\n\t0.9983857198610611,\r\n\t0.9983940491137014,\r\n\t0.9984023391848462,\r\n\t0.9984105902376817,\r\n\t0.9984188024348252,\r\n\t0.9984269759383266,\r\n\t0.9984351109096703,\r\n\t0.9984432075097761,\r\n\t0.9984512658990006,\r\n\t0.9984592862371393,\r\n\t0.9984672686834271,\r\n\t0.9984752133965403,\r\n\t0.9984831205345983,\r\n\t0.9984909902551641,\r\n\t0.9984988227152464,\r\n\t0.9985066180713011,\r\n\t0.9985143764792324,\r\n\t0.9985220980943941,\r\n\t0.9985297830715913,\r\n\t0.9985374315650821,\r\n\t0.9985450437285783,\r\n\t0.9985526197152473,\r\n\t0.9985601596777134,\r\n\t0.9985676637680592,\r\n\t0.9985751321378268,\r\n\t0.9985825649380199,\r\n\t0.9985899623191044,\r\n\t0.99859732443101,\r\n\t0.9986046514231323,\r\n\t0.998611943444333,\r\n\t0.9986192006429424,\r\n\t0.9986264231667603,\r\n\t0.9986336111630574,\r\n\t0.9986407647785766,\r\n\t0.9986478841595346,\r\n\t0.9986549694516238,\r\n\t0.9986620208000123,\r\n\t0.9986690383493468,\r\n\t0.9986760222437531,\r\n\t0.9986829726268376,\r\n\t0.998689889641689,\r\n\t0.9986967734308796,\r\n\t0.9987036241364663,\r\n\t0.9987104418999926,\r\n\t0.9987172268624894,\r\n\t0.998723979164477,\r\n\t0.9987306989459656,\r\n\t0.9987373863464578,\r\n\t0.998744041504949,\r\n\t0.9987506645599293,\r\n\t0.9987572556493849,\r\n\t0.998763814910799,\r\n\t0.9987703424811538,\r\n\t0.9987768384969316,\r\n\t0.9987833030941156,\r\n\t0.9987897364081925,\r\n\t0.9987961385741526,\r\n\t0.9988025097264924,\r\n\t0.9988088499992146,\r\n\t0.9988151595258307,\r\n\t0.9988214384393614,\r\n\t0.9988276868723388,\r\n\t0.9988339049568071,\r\n\t0.9988400928243242,\r\n\t0.9988462506059631,\r\n\t0.9988523784323132,\r\n\t0.9988584764334819,\r\n\t0.9988645447390951,\r\n\t0.9988705834782999,\r\n\t0.9988765927797647,\r\n\t0.9988825727716812,\r\n\t0.9988885235817656,\r\n\t0.9988944453372599,\r\n\t0.9989003381649333,\r\n\t0.9989062021910834,\r\n\t0.9989120375415379,\r\n\t0.9989178443416555,\r\n\t0.9989236227163274,\r\n\t0.9989293727899787,\r\n\t0.9989350946865697,\r\n\t0.998940788529597,\r\n\t0.9989464544420954,\r\n\t0.9989520925466384,\r\n\t0.9989577029653404,\r\n\t0.9989632858198572,\r\n\t0.998968841231388,\r\n\t0.9989743693206764,\r\n\t0.9989798702080116,\r\n\t0.9989853440132298,\r\n\t0.998990790855716,\r\n\t0.9989962108544042,\r\n\t0.9990016041277799,\r\n\t0.9990069707938809,\r\n\t0.9990123109702982,\r\n\t0.9990176247741779,\r\n\t0.9990229123222224,\r\n\t0.9990281737306916,\r\n\t0.9990334091154038,\r\n\t0.999038618591738,\r\n\t0.9990438022746341,\r\n\t0.9990489602785947,\r\n\t0.9990540927176865,\r\n\t0.9990591997055416,\r\n\t0.9990642813553582,\r\n\t0.9990693377799026,\r\n\t0.99907436909151,\r\n\t0.9990793754020864,\r\n\t0.9990843568231088,\r\n\t0.9990893134656276,\r\n\t0.9990942454402671,\r\n\t0.9990991528572275,\r\n\t0.9991040358262852,\r\n\t0.9991088944567947,\r\n\t0.9991137288576902,\r\n\t0.999118539137486,\r\n\t0.9991233254042783,\r\n\t0.9991280877657462,\r\n\t0.9991328263291535,\r\n\t0.9991375412013491,\r\n\t0.999142232488769,\r\n\t0.9991469002974372,\r\n\t0.9991515447329671,\r\n\t0.9991561659005623,\r\n\t0.9991607639050186,\r\n\t0.9991653388507248,\r\n\t0.9991698908416636,\r\n\t0.9991744199814138,\r\n\t0.9991789263731504,\r\n\t0.9991834101196467,\r\n\t0.9991878713232755,\r\n\t0.9991923100860093,\r\n\t0.9991967265094228,\r\n\t0.9992011206946938,\r\n\t0.9992054927426037,\r\n\t0.9992098427535396,\r\n\t0.9992141708274952,\r\n\t0.9992184770640717,\r\n\t0.9992227615624796,\r\n\t0.9992270244215393,\r\n\t0.9992312657396831,\r\n\t0.9992354856149557,\r\n\t0.9992396841450154,\r\n\t0.9992438614271358,\r\n\t0.9992480175582069,\r\n\t0.9992521526347359,\r\n\t0.9992562667528487,\r\n\t0.9992603600082911,\r\n\t0.9992644324964299,\r\n\t0.9992684843122542,\r\n\t0.9992725155503765,\r\n\t0.9992765263050338,\r\n\t0.999280516670089,\r\n\t0.999284486739032,\r\n\t0.9992884366049808,\r\n\t0.9992923663606826,\r\n\t0.9992962760985155,\r\n\t0.9993001659104889,\r\n\t0.9993040358882451,\r\n\t0.9993078861230608,\r\n\t0.9993117167058474,\r\n\t0.9993155277271529,\r\n\t0.999319319277163,\r\n\t0.9993230914457016,\r\n\t0.9993268443222328,\r\n\t0.9993305779958618,\r\n\t0.9993342925553356,\r\n\t0.9993379880890445,\r\n\t0.9993416646850238,\r\n\t0.9993453224309538,\r\n\t0.9993489614141617,\r\n\t0.9993525817216228,\r\n\t0.9993561834399612,\r\n\t0.9993597666554512,\r\n\t0.9993633314540185,\r\n\t0.9993668779212411,\r\n\t0.9993704061423506,\r\n\t0.9993739162022335,\r\n\t0.9993774081854317,\r\n\t0.9993808821761445,\r\n\t0.9993843382582288,\r\n\t0.9993877765152013,\r\n\t0.9993911970302383,\r\n\t0.9993945998861778,\r\n\t0.9993979851655208,\r\n\t0.9994013529504312,\r\n\t0.9994047033227381,\r\n\t0.9994080363639363,\r\n\t0.9994113521551875,\r\n\t0.9994146507773217,\r\n\t0.9994179323108379,\r\n\t0.9994211968359052,\r\n\t0.9994244444323646,\r\n\t0.9994276751797287,\r\n\t0.9994308891571844,\r\n\t0.9994340864435928,\r\n\t0.9994372671174909,\r\n\t0.9994404312570924,\r\n\t0.9994435789402887,\r\n\t0.9994467102446506,\r\n\t0.9994498252474285,\r\n\t0.9994529240255541,\r\n\t0.9994560066556412,\r\n\t0.9994590732139869,\r\n\t0.9994621237765724,\r\n\t0.9994651584190646,\r\n\t0.9994681772168166,\r\n\t0.9994711802448689,\r\n\t0.9994741675779509,\r\n\t0.9994771392904814,\r\n\t0.9994800954565697,\r\n\t0.999483036150017,\r\n\t0.9994859614443171,\r\n\t0.9994888714126579,\r\n\t0.9994917661279218,\r\n\t0.9994946456626872,\r\n\t0.9994975100892295,\r\n\t0.999500359479522,\r\n\t0.9995031939052369,\r\n\t0.9995060134377466,\r\n\t0.9995088181481243,\r\n\t0.9995116081071456,\r\n\t0.9995143833852889,\r\n\t0.999517144052737,\r\n\t0.9995198901793774,\r\n\t0.9995226218348043,\r\n\t0.9995253390883188,\r\n\t0.9995280420089301,\r\n\t0.9995307306653568,\r\n\t0.9995334051260275,\r\n\t0.9995360654590824,\r\n\t0.9995387117323732,\r\n\t0.9995413440134656,\r\n\t0.999543962369639,\r\n\t0.9995465668678883,\r\n\t0.9995491575749244,\r\n\t0.9995517345571753,\r\n\t0.9995542978807875,\r\n\t0.9995568476116267,\r\n\t0.9995593838152782,\r\n\t0.999561906557049,\r\n\t0.9995644159019681,\r\n\t0.9995669119147873,\r\n\t0.9995693946599828,\r\n\t0.9995718642017558,\r\n\t0.9995743206040332,\r\n\t0.9995767639304692,\r\n\t0.9995791942444461,\r\n\t0.9995816116090743,\r\n\t0.9995840160871952,\r\n\t0.99958640774138,\r\n\t0.9995887866339324,\r\n\t0.9995911528268883,\r\n\t0.9995935063820176,\r\n\t0.999595847360825,\r\n\t0.9995981758245502,\r\n\t0.9996004918341701,\r\n\t0.9996027954503985,\r\n\t0.999605086733688,\r\n\t0.9996073657442303,\r\n\t0.9996096325419573,\r\n\t0.9996118871865427,\r\n\t0.9996141297374015,\r\n\t0.9996163602536923,\r\n\t0.9996185787943176,\r\n\t0.9996207854179248,\r\n\t0.9996229801829071,\r\n\t0.9996251631474043,\r\n\t0.9996273343693044,\r\n\t0.9996294939062433,\r\n\t0.9996316418156069,\r\n\t0.9996337781545312,\r\n\t0.9996359029799038,\r\n\t0.9996380163483641,\r\n\t0.9996401183163052,\r\n\t0.9996422089398735,\r\n\t0.999644288274971,\r\n\t0.999646356377255,\r\n\t0.9996484133021397,\r\n\t0.9996504591047971,\r\n\t0.9996524938401572,\r\n\t0.9996545175629098,\r\n\t0.9996565303275047,\r\n\t0.9996585321881528,\r\n\t0.9996605231988274,\r\n\t0.9996625034132641,\r\n\t0.9996644728849626,\r\n\t0.9996664316671874,\r\n\t0.999668379812968,\r\n\t0.9996703173751005,\r\n\t0.9996722444061484,\r\n\t0.9996741609584433,\r\n\t0.9996760670840852,\r\n\t0.9996779628349446,\r\n\t0.9996798482626623,\r\n\t0.9996817234186506,\r\n\t0.9996835883540943,\r\n\t0.9996854431199514,\r\n\t0.9996872877669539,\r\n\t0.9996891223456087,\r\n\t0.9996909469061984,\r\n\t0.9996927614987825,\r\n\t0.9996945661731974,\r\n\t0.9996963609790581,\r\n\t0.9996981459657587,\r\n\t0.9996999211824731,\r\n\t0.9997016866781561,\r\n\t0.9997034425015436,\r\n\t0.9997051887011547,\r\n\t0.9997069253252909,\r\n\t0.9997086524220383,\r\n\t0.9997103700392677,\r\n\t0.9997120782246353,\r\n\t0.999713777025584,\r\n\t0.9997154664893442,\r\n\t0.9997171466629339,\r\n\t0.9997188175931604,\r\n\t0.9997204793266206,\r\n\t0.9997221319097017,\r\n\t0.9997237753885824,\r\n\t0.9997254098092335,\r\n\t0.9997270352174187,\r\n\t0.9997286516586951,\r\n\t0.9997302591784146,\r\n\t0.9997318578217242,\r\n\t0.999733447633567,\r\n\t0.9997350286586829,\r\n\t0.9997366009416093,\r\n\t0.9997381645266821,\r\n\t0.9997397194580363,\r\n\t0.9997412657796069,\r\n\t0.9997428035351295,\r\n\t0.9997443327681412,\r\n\t0.9997458535219813,\r\n\t0.9997473658397923,\r\n\t0.99974886976452,\r\n\t0.9997503653389154,\r\n\t0.999751852605534,\r\n\t0.999753331606738,\r\n\t0.9997548023846959,\r\n\t0.9997562649813841,\r\n\t0.9997577194385872,\r\n\t0.9997591657978985,\r\n\t0.9997606041007215,\r\n\t0.99976203438827,\r\n\t0.9997634567015692,\r\n\t0.9997648710814562,\r\n\t0.9997662775685806,\r\n\t0.9997676762034061,\r\n\t0.9997690670262099,\r\n\t0.9997704500770845,\r\n\t0.999771825395938,\r\n\t0.999773193022495,\r\n\t0.9997745529962968,\r\n\t0.9997759053567029,\r\n\t0.9997772501428912,\r\n\t0.9997785873938589,\r\n\t0.9997799171484231,\r\n\t0.9997812394452216,\r\n\t0.9997825543227136,\r\n\t0.9997838618191804,\r\n\t0.9997851619727263,\r\n\t0.9997864548212786,\r\n\t0.9997877404025892,\r\n\t0.9997890187542349,\r\n\t0.9997902899136178,\r\n\t0.9997915539179669,\r\n\t0.9997928108043375,\r\n\t0.999794060609613,\r\n\t0.9997953033705048,\r\n\t0.9997965391235539,\r\n\t0.9997977679051306,\r\n\t0.9997989897514358,\r\n\t0.9998002046985014,\r\n\t0.999801412782191,\r\n\t0.9998026140382009,\r\n\t0.9998038085020604,\r\n\t0.9998049962091325,\r\n\t0.999806177194615,\r\n\t0.9998073514935402,\r\n\t0.9998085191407767,\r\n\t0.9998096801710297,\r\n\t0.9998108346188409,\r\n\t0.9998119825185903,\r\n\t0.9998131239044961,\r\n\t0.9998142588106157,\r\n\t0.9998153872708462,\r\n\t0.999816509318925,\r\n\t0.9998176249884306,\r\n\t0.9998187343127835,\r\n\t0.9998198373252459,\r\n\t0.9998209340589235,\r\n\t0.9998220245467654,\r\n\t0.9998231088215649,\r\n\t0.9998241869159603,\r\n\t0.9998252588624355,\r\n\t0.9998263246933202,\r\n\t0.9998273844407913,\r\n\t0.9998284381368729,\r\n\t0.9998294858134371,\r\n\t0.9998305275022048,\r\n\t0.9998315632347461,\r\n\t0.999832593042481,\r\n\t0.9998336169566799,\r\n\t0.9998346350084647,\r\n\t0.9998356472288086,\r\n\t0.9998366536485375,\r\n\t0.99983765429833,\r\n\t0.9998386492087187,\r\n\t0.9998396384100897,\r\n\t0.9998406219326846,\r\n\t0.9998415998066,\r\n\t0.9998425720617885,\r\n\t0.9998435387280595,\r\n\t0.9998444998350793,\r\n\t0.9998454554123721,\r\n\t0.9998464054893206,\r\n\t0.9998473500951663,\r\n\t0.9998482892590103,\r\n\t0.9998492230098137,\r\n\t0.9998501513763987,\r\n\t0.9998510743874482,\r\n\t0.9998519920715077,\r\n\t0.9998529044569845,\r\n\t0.9998538115721493,\r\n\t0.9998547134451362,\r\n\t0.9998556101039439,\r\n\t0.9998565015764352,\r\n\t0.9998573878903388,\r\n\t0.9998582690732492,\r\n\t0.9998591451526267,\r\n\t0.9998600161557997,\r\n\t0.9998608821099632,\r\n\t0.9998617430421809,\r\n\t0.9998625989793851,\r\n\t0.9998634499483772,\r\n\t0.9998642959758285,\r\n\t0.9998651370882806,\r\n\t0.9998659733121461,\r\n\t0.9998668046737089,\r\n\t0.9998676311991251,\r\n\t0.9998684529144232,\r\n\t0.9998692698455047,\r\n\t0.999870082018145,\r\n\t0.9998708894579934,\r\n\t0.999871692190574,\r\n\t0.9998724902412862,\r\n\t0.9998732836354051,\r\n\t0.9998740723980819,\r\n\t0.9998748565543449,\r\n\t0.9998756361290999,\r\n\t0.9998764111471301,\r\n\t0.9998771816330975,\r\n\t0.9998779476115428,\r\n\t0.9998787091068863,\r\n\t0.999879466143428,\r\n\t0.9998802187453489,\r\n\t0.9998809669367105,\r\n\t0.9998817107414559,\r\n\t0.9998824501834106,\r\n\t0.999883185286282,\r\n\t0.999883916073661,\r\n\t0.9998846425690219,\r\n\t0.9998853647957231,\r\n\t0.9998860827770075,\r\n\t0.999886796536003,\r\n\t0.9998875060957232,\r\n\t0.9998882114790676,\r\n\t0.9998889127088222,\r\n\t0.9998896098076603,\r\n\t0.9998903027981425,\r\n\t0.9998909917027174,\r\n\t0.9998916765437222,\r\n\t0.9998923573433832,\r\n\t0.9998930341238158,\r\n\t0.9998937069070257,\r\n\t0.999894375714909,\r\n\t0.9998950405692526,\r\n\t0.9998957014917348,\r\n\t0.9998963585039259,\r\n\t0.9998970116272885,\r\n\t0.9998976608831779,\r\n\t0.9998983062928427,\r\n\t0.9998989478774256,\r\n\t0.999899585657963,\r\n\t0.9999002196553864,\r\n\t0.9999008498905224,\r\n\t0.999901476384093,\r\n\t0.9999020991567165,\r\n\t0.9999027182289075,\r\n\t0.9999033336210779,\r\n\t0.9999039453535369,\r\n\t0.9999045534464917,\r\n\t0.9999051579200475,\r\n\t0.999905758794209,\r\n\t0.9999063560888793,\r\n\t0.9999069498238621,\r\n\t0.9999075400188605,\r\n\t0.9999081266934786,\r\n\t0.9999087098672215,\r\n\t0.9999092895594957,\r\n\t0.9999098657896095,\r\n\t0.999910438576774,\r\n\t0.9999110079401027,\r\n\t0.9999115738986123,\r\n\t0.9999121364712235,\r\n\t0.9999126956767607,\r\n\t0.999913251533953,\r\n\t0.9999138040614348,\r\n\t0.9999143532777452,\r\n\t0.9999148992013297,\r\n\t0.9999154418505395,\r\n\t0.999915981243633,\r\n\t0.9999165173987752,\r\n\t0.9999170503340389,\r\n\t0.9999175800674046,\r\n\t0.9999181066167612,\r\n\t0.9999186299999064,\r\n\t0.9999191502345469,\r\n\t0.9999196673382992,\r\n\t0.9999201813286894,\r\n\t0.9999206922231544,\r\n\t0.9999212000390414,\r\n\t0.9999217047936092,\r\n\t0.9999222065040281,\r\n\t0.9999227051873801,\r\n\t0.9999232008606601,\r\n\t0.9999236935407753,\r\n\t0.9999241832445462,\r\n\t0.9999246699887072,\r\n\t0.9999251537899063,\r\n\t0.9999256346647061,\r\n\t0.9999261126295836,\r\n\t0.9999265877009316,\r\n\t0.9999270598950578,\r\n\t0.9999275292281861,\r\n\t0.9999279957164566,\r\n\t0.9999284593759264,\r\n\t0.9999289202225693,\r\n\t0.9999293782722767,\r\n\t0.9999298335408578,\r\n\t0.9999302860440401,\r\n\t0.9999307357974695,\r\n\t0.9999311828167111,\r\n\t0.9999316271172493,\r\n\t0.9999320687144879,\r\n\t0.9999325076237512,\r\n\t0.9999329438602836,\r\n\t0.9999333774392507,\r\n\t0.9999338083757388,\r\n\t0.999934236684756,\r\n\t0.9999346623812325,\r\n\t0.9999350854800204,\r\n\t0.9999355059958946,\r\n\t0.9999359239435531,\r\n\t0.9999363393376172,\r\n\t0.9999367521926316,\r\n\t0.9999371625230653,\r\n\t0.999937570343312,\r\n\t0.9999379756676896,\r\n\t0.9999383785104414,\r\n\t0.9999387788857365,\r\n\t0.999939176807669,\r\n\t0.9999395722902599,\r\n\t0.9999399653474563,\r\n\t0.9999403559931324,\r\n\t0.9999407442410893,\r\n\t0.9999411301050559,\r\n\t0.999941513598689,\r\n\t0.9999418947355733,\r\n\t0.9999422735292222,\r\n\t0.999942649993078,\r\n\t0.9999430241405124,\r\n\t0.9999433959848263,\r\n\t0.9999437655392507,\r\n\t0.9999441328169468,\r\n\t0.9999444978310063,\r\n\t0.9999448605944516,\r\n\t0.9999452211202369,\r\n\t0.999945579421247,\r\n\t0.9999459355102993,\r\n\t0.9999462894001431,\r\n\t0.99994664110346,\r\n\t0.9999469906328647,\r\n\t0.9999473380009051,\r\n\t0.9999476832200621,\r\n\t0.9999480263027508,\r\n\t0.9999483672613201,\r\n\t0.9999487061080534,\r\n\t0.9999490428551687,\r\n\t0.9999493775148194,\r\n\t0.9999497100990935,\r\n\t0.9999500406200154,\r\n\t0.9999503690895449,\r\n\t0.9999506955195783,\r\n\t0.9999510199219482,\r\n\t0.9999513423084245,\r\n\t0.9999516626907139,\r\n\t0.9999519810804605,\r\n\t0.9999522974892463,\r\n\t0.9999526119285915,\r\n\t0.9999529244099543,\r\n\t0.9999532349447319,\r\n\t0.99995354354426,\r\n\t0.9999538502198142,\r\n\t0.9999541549826089,\r\n\t0.9999544578437988,\r\n\t0.9999547588144785,\r\n\t0.9999550579056832,\r\n\t0.9999553551283883,\r\n\t0.9999556504935109,\r\n\t0.9999559440119087,\r\n\t0.9999562356943813,\r\n\t0.99995652555167,\r\n\t0.9999568135944583,\r\n\t0.9999570998333719,\r\n\t0.9999573842789794,\r\n\t0.9999576669417921,\r\n\t0.9999579478322648,\r\n\t0.9999582269607954,\r\n\t0.999958504337726,\r\n\t0.9999587799733426,\r\n\t0.9999590538778753,\r\n\t0.999959326061499,\r\n\t0.9999595965343334,\r\n\t0.9999598653064434,\r\n\t0.9999601323878393,\r\n\t0.9999603977884768,\r\n\t0.9999606615182579,\r\n\t0.9999609235870305,\r\n\t0.9999611840045891,\r\n\t0.9999614427806749,\r\n\t0.9999616999249761,\r\n\t0.999961955447128,\r\n\t0.9999622093567136,\r\n\t0.9999624616632635,\r\n\t0.9999627123762564,\r\n\t0.9999629615051193,\r\n\t0.9999632090592276,\r\n\t0.9999634550479055,\r\n\t0.9999636994804263,\r\n\t0.9999639423660125,\r\n\t0.9999641837138362,\r\n\t0.9999644235330193,\r\n\t0.9999646618326337,\r\n\t0.9999648986217015,\r\n\t0.9999651339091953,\r\n\t0.9999653677040387,\r\n\t0.999965600015106,\r\n\t0.999965830851223,\r\n\t0.999966060221167,\r\n\t0.9999662881336667,\r\n\t0.9999665145974033,\r\n\t0.9999667396210096,\r\n\t0.9999669632130714,\r\n\t0.9999671853821269,\r\n\t0.9999674061366673,\r\n\t0.999967625485137,\r\n\t0.9999678434359336,\r\n\t0.9999680599974086,\r\n\t0.9999682751778671,\r\n\t0.9999684889855686,\r\n\t0.9999687014287265,\r\n\t0.9999689125155091,\r\n\t0.9999691222540394,\r\n\t0.9999693306523952,\r\n\t0.9999695377186097,\r\n\t0.9999697434606717,\r\n\t0.9999699478865252,\r\n\t0.9999701510040705,\r\n\t0.9999703528211641,\r\n\t0.9999705533456184,\r\n\t0.9999707525852026,\r\n\t0.9999709505476428,\r\n\t0.999971147240622,\r\n\t0.9999713426717802,\r\n\t0.9999715368487153,\r\n\t0.9999717297789823,\r\n\t0.9999719214700945,\r\n\t0.999972111929523,\r\n\t0.9999723011646972,\r\n\t0.9999724891830052,\r\n\t0.9999726759917935,\r\n\t0.9999728615983678,\r\n\t0.9999730460099928,\r\n\t0.9999732292338924,\r\n\t0.9999734112772504,\r\n\t0.9999735921472099,\r\n\t0.9999737718508742,\r\n\t0.9999739503953068,\r\n\t0.9999741277875313,\r\n\t0.999974304034532,\r\n\t0.9999744791432541,\r\n\t0.9999746531206036,\r\n\t0.9999748259734476,\r\n\t0.9999749977086146,\r\n\t0.9999751683328949,\r\n\t0.99997533785304,\r\n\t0.999975506275764,\r\n\t0.9999756736077426,\r\n\t0.9999758398556141,\r\n\t0.9999760050259793,\r\n\t0.9999761691254015,\r\n\t0.9999763321604075,\r\n\t0.9999764941374863,\r\n\t0.9999766550630912,\r\n\t0.9999768149436381,\r\n\t0.999976973785507,\r\n\t0.9999771315950419,\r\n\t0.9999772883785503,\r\n\t0.9999774441423045,\r\n\t0.9999775988925408,\r\n\t0.9999777526354604,\r\n\t0.9999779053772291,\r\n\t0.9999780571239777,\r\n\t0.999978207881802,\r\n\t0.9999783576567635,\r\n\t0.9999785064548887,\r\n\t0.9999786542821703,\r\n\t0.9999788011445663,\r\n\t0.9999789470480013,\r\n\t0.9999790919983657,\r\n\t0.9999792360015164,\r\n\t0.999979379063277,\r\n\t0.9999795211894377,\r\n\t0.9999796623857555,\r\n\t0.9999798026579548,\r\n\t0.9999799420117269,\r\n\t0.9999800804527308,\r\n\t0.999980217986593,\r\n\t0.9999803546189076,\r\n\t0.9999804903552368,\r\n\t0.999980625201111,\r\n\t0.9999807591620287,\r\n\t0.9999808922434568,\r\n\t0.9999810244508309,\r\n\t0.9999811557895554,\r\n\t0.9999812862650035,\r\n\t0.9999814158825174,\r\n\t0.999981544647409,\r\n\t0.999981672564959,\r\n\t0.9999817996404181,\r\n\t0.9999819258790067,\r\n\t0.999982051285915,\r\n\t0.9999821758663031,\r\n\t0.9999822996253015,\r\n\t0.9999824225680112,\r\n\t0.9999825446995033,\r\n\t0.99998266602482,\r\n\t0.9999827865489742,\r\n\t0.9999829062769496,\r\n\t0.9999830252137013,\r\n\t0.9999831433641556,\r\n\t0.9999832607332102,\r\n\t0.9999833773257344,\r\n\t0.9999834931465692,\r\n\t0.9999836082005277,\r\n\t0.999983722492395,\r\n\t0.999983836026928,\r\n\t0.9999839488088565,\r\n\t0.9999840608428826,\r\n\t0.9999841721336808,\r\n\t0.9999842826858987,\r\n\t0.9999843925041566,\r\n\t0.999984501593048,\r\n\t0.9999846099571394,\r\n\t0.9999847176009713,\r\n\t0.9999848245290568,\r\n\t0.9999849307458831,\r\n\t0.9999850362559114,\r\n\t0.9999851410635765,\r\n\t0.9999852451732872,\r\n\t0.9999853485894268,\r\n\t0.9999854513163526,\r\n\t0.9999855533583969,\r\n\t0.999985654719866,\r\n\t0.9999857554050412,\r\n\t0.9999858554181789,\r\n\t0.9999859547635103,\r\n\t0.9999860534452416,\r\n\t0.9999861514675548,\r\n\t0.9999862488346066,\r\n\t0.99998634555053,\r\n\t0.9999864416194333,\r\n\t0.9999865370454005,\r\n\t0.9999866318324918,\r\n\t0.9999867259847435,\r\n\t0.9999868195061677,\r\n\t0.9999869124007534,\r\n\t0.9999870046724658,\r\n\t0.9999870963252466,\r\n\t0.9999871873630143,\r\n\t0.9999872777896642,\r\n\t0.9999873676090687,\r\n\t0.9999874568250773,\r\n\t0.9999875454415165,\r\n\t0.9999876334621903,\r\n\t0.9999877208908803,\r\n\t0.9999878077313453,\r\n\t0.9999878939873221,\r\n\t0.9999879796625255,\r\n\t0.9999880647606478,\r\n\t0.9999881492853597,\r\n\t0.99998823324031,\r\n\t0.9999883166291259,\r\n\t0.9999883994554127,\r\n\t0.9999884817227547,\r\n\t0.9999885634347147,\r\n\t0.9999886445948339,\r\n\t0.9999887252066332,\r\n\t0.9999888052736117,\r\n\t0.9999888847992482,\r\n\t0.9999889637870004,\r\n\t0.9999890422403055,\r\n\t0.9999891201625802,\r\n\t0.9999891975572208,\r\n\t0.9999892744276031,\r\n\t0.999989350777083,\r\n\t0.9999894266089959,\r\n\t0.9999895019266577,\r\n\t0.9999895767333643,\r\n\t0.9999896510323916,\r\n\t0.999989724826996,\r\n\t0.9999897981204147,\r\n\t0.9999898709158648,\r\n\t0.9999899432165447,\r\n\t0.9999900150256333,\r\n\t0.9999900863462904,\r\n\t0.9999901571816568,\r\n\t0.9999902275348547,\r\n\t0.9999902974089869,\r\n\t0.9999903668071382,\r\n\t0.9999904357323742,\r\n\t0.9999905041877425,\r\n\t0.9999905721762721,\r\n\t0.9999906397009737,\r\n\t0.9999907067648398,\r\n\t0.9999907733708452,\r\n\t0.9999908395219462,\r\n\t0.9999909052210816,\r\n\t0.9999909704711721,\r\n\t0.9999910352751212,\r\n\t0.9999910996358145,\r\n\t0.9999911635561199,\r\n\t0.9999912270388887,\r\n\t0.9999912900869539,\r\n\t0.9999913527031321,\r\n\t0.9999914148902226,\r\n\t0.9999914766510075,\r\n\t0.9999915379882524,\r\n\t0.9999915989047056,\r\n\t0.999991659403099,\r\n\t0.9999917194861478,\r\n\t0.9999917791565509,\r\n\t0.9999918384169905,\r\n\t0.9999918972701324,\r\n\t0.9999919557186264,\r\n\t0.9999920137651062,\r\n\t0.999992071412189,\r\n\t0.9999921286624766,\r\n\t0.9999921855185544,\r\n\t0.9999922419829924,\r\n\t0.9999922980583447,\r\n\t0.9999923537471498,\r\n\t0.9999924090519307,\r\n\t0.9999924639751948,\r\n\t0.9999925185194346,\r\n\t0.9999925726871269,\r\n\t0.9999926264807335,\r\n\t0.999992679902701,\r\n\t0.9999927329554612,\r\n\t0.9999927856414307,\r\n\t0.9999928379630115,\r\n\t0.9999928899225907,\r\n\t0.9999929415225408,\r\n\t0.9999929927652198,\r\n\t0.9999930436529709,\r\n\t0.9999930941881232,\r\n\t0.9999931443729915,\r\n\t0.9999931942098759,\r\n\t0.9999932437010627,\r\n\t0.9999932928488241,\r\n\t0.9999933416554181,\r\n\t0.999993390123089,\r\n\t0.999993438254067,\r\n\t0.9999934860505686,\r\n\t0.9999935335147967,\r\n\t0.9999935806489405,\r\n\t0.9999936274551758,\r\n\t0.9999936739356647,\r\n\t0.9999937200925562,\r\n\t0.9999937659279856,\r\n\t0.9999938114440753,\r\n\t0.9999938566429344,\r\n\t0.999993901526659,\r\n\t0.999993946097332,\r\n\t0.9999939903570239,\r\n\t0.9999940343077915,\r\n\t0.9999940779516797,\r\n\t0.99999412129072,\r\n\t0.9999941643269314,\r\n\t0.9999942070623209,\r\n\t0.9999942494988823,\r\n\t0.9999942916385973,\r\n\t0.9999943334834352,\r\n\t0.9999943750353532,\r\n\t0.9999944162962958,\r\n\t0.999994457268196,\r\n\t0.9999944979529743,\r\n\t0.9999945383525394,\r\n\t0.999994578468788,\r\n\t0.999994618303605,\r\n\t0.9999946578588633,\r\n\t0.9999946971364245,\r\n\t0.9999947361381382,\r\n\t0.9999947748658425,\r\n\t0.999994813321364,\r\n\t0.9999948515065179,\r\n\t0.9999948894231079,\r\n\t0.9999949270729266,\r\n\t0.999994964457755,\r\n\t0.9999950015793634,\r\n\t0.9999950384395105,\r\n\t0.9999950750399442,\r\n\t0.9999951113824014,\r\n\t0.9999951474686081,\r\n\t0.9999951833002791,\r\n\t0.9999952188791189,\r\n\t0.9999952542068211,\r\n\t0.9999952892850684,\r\n\t0.9999953241155332,\r\n\t0.9999953586998771,\r\n\t0.9999953930397514,\r\n\t0.9999954271367968,\r\n\t0.9999954609926438,\r\n\t0.9999954946089126,\r\n\t0.999995527987213,\r\n\t0.9999955611291448,\r\n\t0.9999955940362975,\r\n\t0.9999956267102506,\r\n\t0.9999956591525736,\r\n\t0.9999956913648262,\r\n\t0.999995723348558,\r\n\t0.999995755105309,\r\n\t0.9999957866366092,\r\n\t0.9999958179439788,\r\n\t0.9999958490289289,\r\n\t0.9999958798929603,\r\n\t0.9999959105375648,\r\n\t0.9999959409642244,\r\n\t0.9999959711744117,\r\n\t0.9999960011695902,\r\n\t0.9999960309512137,\r\n\t0.999996060520727,\r\n\t0.9999960898795656,\r\n\t0.9999961190291559,\r\n\t0.9999961479709151,\r\n\t0.9999961767062515,\r\n\t0.9999962052365642,\r\n\t0.9999962335632436,\r\n\t0.9999962616876712,\r\n\t0.9999962896112193,\r\n\t0.999996317335252,\r\n\t0.9999963448611241,\r\n\t0.9999963721901821,\r\n\t0.9999963993237638,\r\n\t0.9999964262631985,\r\n\t0.9999964530098068,\r\n\t0.9999964795649008,\r\n\t0.9999965059297844,\r\n\t0.999996532105753,\r\n\t0.9999965580940937,\r\n\t0.9999965838960855,\r\n\t0.9999966095129987,\r\n\t0.999996634946096,\r\n\t0.9999966601966317,\r\n\t0.9999966852658521,\r\n\t0.9999967101549952,\r\n\t0.9999967348652915,\r\n\t0.9999967593979632,\r\n\t0.9999967837542248,\r\n\t0.999996807935283,\r\n\t0.9999968319423365,\r\n\t0.9999968557765764,\r\n\t0.9999968794391861,\r\n\t0.9999969029313415,\r\n\t0.9999969262542105,\r\n\t0.999996949408954,\r\n\t0.9999969723967249,\r\n\t0.9999969952186689,\r\n\t0.9999970178759242,\r\n\t0.9999970403696216,\r\n\t0.9999970627008846,\r\n\t0.9999970848708295,\r\n\t0.9999971068805652,\r\n\t0.9999971287311936,\r\n\t0.9999971504238093,\r\n\t0.9999971719594997,\r\n\t0.9999971933393454,\r\n\t0.9999972145644198,\r\n\t0.9999972356357893,\r\n\t0.9999972565545135,\r\n\t0.999997277321645,\r\n\t0.9999972979382296,\r\n\t0.999997318405306,\r\n\t0.9999973387239067,\r\n\t0.999997358895057,\r\n\t0.9999973789197758,\r\n\t0.999997398799075,\r\n\t0.9999974185339603,\r\n\t0.9999974381254304,\r\n\t0.999997457574478,\r\n\t0.9999974768820888,\r\n\t0.9999974960492424,\r\n\t0.9999975150769117,\r\n\t0.9999975339660636,\r\n\t0.9999975527176584,\r\n\t0.9999975713326501,\r\n\t0.9999975898119866,\r\n\t0.9999976081566095,\r\n\t0.9999976263674542,\r\n\t0.9999976444454499,\r\n\t0.99999766239152,\r\n\t0.9999976802065814,\r\n\t0.9999976978915454,\r\n\t0.999997715447317,\r\n\t0.9999977328747952,\r\n\t0.9999977501748736,\r\n\t0.9999977673484393,\r\n\t0.9999977843963738,\r\n\t0.9999978013195528,\r\n\t0.9999978181188465,\r\n\t0.9999978347951188,\r\n\t0.9999978513492284,\r\n\t0.999997867782028,\r\n\t0.9999978840943649,\r\n\t0.9999979002870806,\r\n\t0.9999979163610111,\r\n\t0.9999979323169872,\r\n\t0.9999979481558336,\r\n\t0.99999796387837,\r\n\t0.9999979794854107,\r\n\t0.9999979949777642,\r\n\t0.9999980103562339,\r\n\t0.9999980256216181,\r\n\t0.9999980407747093,\r\n\t0.9999980558162953,\r\n\t0.9999980707471582,\r\n\t0.9999980855680751,\r\n\t0.9999981002798181,\r\n\t0.9999981148831537,\r\n\t0.9999981293788438,\r\n\t0.9999981437676452,\r\n\t0.9999981580503092,\r\n\t0.9999981722275826,\r\n\t0.999998186300207,\r\n\t0.9999982002689191,\r\n\t0.9999982141344507,\r\n\t0.9999982278975286,\r\n\t0.999998241558875,\r\n\t0.999998255119207,\r\n\t0.9999982685792372,\r\n\t0.9999982819396732,\r\n\t0.999998295201218,\r\n\t0.9999983083645699,\r\n\t0.9999983214304224,\r\n\t0.9999983343994645,\r\n\t0.9999983472723807,\r\n\t0.9999983600498504,\r\n\t0.9999983727325492,\r\n\t0.9999983853211476,\r\n\t0.9999983978163118,\r\n\t0.9999984102187036,\r\n\t0.9999984225289802,\r\n\t0.9999984347477945,\r\n\t0.999998446875795,\r\n\t0.9999984589136257,\r\n\t0.9999984708619267,\r\n\t0.9999984827213332,\r\n\t0.9999984944924767,\r\n\t0.9999985061759838,\r\n\t0.9999985177724777,\r\n\t0.9999985292825767,\r\n\t0.9999985407068952,\r\n\t0.9999985520460435,\r\n\t0.9999985633006278,\r\n\t0.9999985744712501,\r\n\t0.9999985855585083,\r\n\t0.9999985965629965,\r\n\t0.9999986074853046,\r\n\t0.9999986183260186,\r\n\t0.9999986290857202,\r\n\t0.9999986397649878,\r\n\t0.9999986503643954,\r\n\t0.9999986608845134,\r\n\t0.9999986713259079,\r\n\t0.9999986816891417,\r\n\t0.9999986919747735,\r\n\t0.9999987021833583,\r\n\t0.9999987123154472,\r\n\t0.9999987223715877,\r\n\t0.9999987323523236,\r\n\t0.9999987422581949,\r\n\t0.9999987520897379,\r\n\t0.9999987618474854,\r\n\t0.9999987715319665,\r\n\t0.9999987811437067,\r\n\t0.9999987906832281,\r\n\t0.9999988001510488,\r\n\t0.9999988095476838,\r\n\t0.9999988188736445,\r\n\t0.9999988281294387,\r\n\t0.9999988373155708,\r\n\t0.9999988464325418,\r\n\t0.9999988554808491,\r\n\t0.999998864460987,\r\n\t0.9999988733734462,\r\n\t0.999998882218714,\r\n\t0.9999988909972747,\r\n\t0.9999988997096089,\r\n\t0.9999989083561941,\r\n\t0.9999989169375046,\r\n\t0.9999989254540114,\r\n\t0.999998933906182,\r\n\t0.9999989422944812,\r\n\t0.99999895061937,\r\n\t0.9999989588813071,\r\n\t0.9999989670807471,\r\n\t0.9999989752181422,\r\n\t0.999998983293941,\r\n\t0.9999989913085894,\r\n\t0.9999989992625299,\r\n\t0.9999990071562023,\r\n\t0.9999990149900431,\r\n\t0.9999990227644859,\r\n\t0.9999990304799614,\r\n\t0.9999990381368972,\r\n\t0.9999990457357179,\r\n\t0.9999990532768454,\r\n\t0.9999990607606984,\r\n\t0.9999990681876931,\r\n\t0.9999990755582426,\r\n\t0.9999990828727571,\r\n\t0.9999990901316439,\r\n\t0.9999990973353077,\r\n\t0.9999991044841503,\r\n\t0.9999991115785708,\r\n\t0.9999991186189654,\r\n\t0.9999991256057276,\r\n\t0.9999991325392483,\r\n\t0.9999991394199156,\r\n\t0.9999991462481148,\r\n\t0.9999991530242288,\r\n\t0.9999991597486376,\r\n\t0.9999991664217186,\r\n\t0.9999991730438467,\r\n\t0.9999991796153941,\r\n\t0.9999991861367304,\r\n\t0.9999991926082229,\r\n\t0.9999991990302358,\r\n\t0.9999992054031314,\r\n\t0.9999992117272689,\r\n\t0.9999992180030054,\r\n\t0.9999992242306953,\r\n\t0.9999992304106908,\r\n\t0.9999992365433413,\r\n\t0.9999992426289941,\r\n\t0.9999992486679936,\r\n\t0.9999992546606824,\r\n\t0.9999992606074003,\r\n\t0.9999992665084849,\r\n\t0.9999992723642712,\r\n\t0.9999992781750923,\r\n\t0.9999992839412785,\r\n\t0.9999992896631581,\r\n\t0.9999992953410569,\r\n\t0.9999993009752988,\r\n\t0.9999993065662048,\r\n\t0.9999993121140943,\r\n\t0.9999993176192841,\r\n\t0.9999993230820888,\r\n\t0.9999993285028208,\r\n\t0.9999993338817905,\r\n\t0.999999339219306,\r\n\t0.999999344515673,\r\n\t0.9999993497711953,\r\n\t0.9999993549861748,\r\n\t0.9999993601609106,\r\n\t0.9999993652957005,\r\n\t0.9999993703908397,\r\n\t0.9999993754466213,\r\n\t0.9999993804633366,\r\n\t0.9999993854412748,\r\n\t0.9999993903807227,\r\n\t0.9999993952819656,\r\n\t0.9999994001452864,\r\n\t0.9999994049709664,\r\n\t0.9999994097592844,\r\n\t0.9999994145105177,\r\n\t0.9999994192249413,\r\n\t0.9999994239028285,\r\n\t0.9999994285444505,\r\n\t0.9999994331500766,\r\n\t0.9999994377199743,\r\n\t0.9999994422544094,\r\n\t0.9999994467536452,\r\n\t0.9999994512179438,\r\n\t0.9999994556475649,\r\n\t0.9999994600427666,\r\n\t0.9999994644038055,\r\n\t0.9999994687309358,\r\n\t0.9999994730244103,\r\n\t0.9999994772844797,\r\n\t0.9999994815113932,\r\n\t0.999999485705398,\r\n\t0.9999994898667398,\r\n\t0.9999994939956623,\r\n\t0.9999994980924077,\r\n\t0.9999995021572163,\r\n\t0.9999995061903266,\r\n\t0.9999995101919757,\r\n\t0.9999995141623989,\r\n\t0.9999995181018296,\r\n\t0.9999995220104998,\r\n\t0.9999995258886398,\r\n\t0.9999995297364781,\r\n\t0.9999995335542419,\r\n\t0.9999995373421563,\r\n\t0.9999995411004452,\r\n\t0.9999995448293307,\r\n\t0.9999995485290335,\r\n\t0.9999995521997724,\r\n\t0.999999555841765,\r\n\t0.9999995594552271,\r\n\t0.999999563040373,\r\n\t0.9999995665974154,\r\n\t0.9999995701265657,\r\n\t0.9999995736280336,\r\n\t0.9999995771020274,\r\n\t0.9999995805487536,\r\n\t0.9999995839684178,\r\n\t0.9999995873612236,\r\n\t0.9999995907273735,\r\n\t0.9999995940670682,\r\n\t0.9999995973805071,\r\n\t0.9999996006678884,\r\n\t0.9999996039294085,\r\n\t0.9999996071652626,\r\n\t0.9999996103756446,\r\n\t0.9999996135607465,\r\n\t0.9999996167207597,\r\n\t0.9999996198558735,\r\n\t0.9999996229662762,\r\n\t0.9999996260521548,\r\n\t0.9999996291136947,\r\n\t0.99999963215108,\r\n\t0.9999996351644937,\r\n\t0.9999996381541174,\r\n\t0.9999996411201312,\r\n\t0.999999644062714,\r\n\t0.9999996469820435,\r\n\t0.9999996498782959,\r\n\t0.9999996527516465,\r\n\t0.9999996556022689,\r\n\t0.9999996584303357,\r\n\t0.9999996612360181,\r\n\t0.9999996640194864,\r\n\t0.9999996667809091,\r\n\t0.999999669520454,\r\n\t0.9999996722382875,\r\n\t0.9999996749345745,\r\n\t0.9999996776094793,\r\n\t0.9999996802631644,\r\n\t0.9999996828957916,\r\n\t0.9999996855075212,\r\n\t0.9999996880985124,\r\n\t0.9999996906689234,\r\n\t0.999999693218911,\r\n\t0.9999996957486312,\r\n\t0.9999996982582385,\r\n\t0.9999997007478866,\r\n\t0.9999997032177278,\r\n\t0.9999997056679133,\r\n\t0.9999997080985934,\r\n\t0.9999997105099173,\r\n\t0.9999997129020329,\r\n\t0.9999997152750871,\r\n\t0.999999717629226,\r\n\t0.9999997199645941,\r\n\t0.9999997222813353,\r\n\t0.9999997245795922,\r\n\t0.9999997268595064,\r\n\t0.9999997291212187,\r\n\t0.9999997313648685,\r\n\t0.9999997335905945,\r\n\t0.999999735798534,\r\n\t0.9999997379888237,\r\n\t0.9999997401615992,\r\n\t0.9999997423169948,\r\n\t0.9999997444551443,\r\n\t0.99999974657618,\r\n\t0.9999997486802337,\r\n\t0.999999750767436,\r\n\t0.9999997528379163,\r\n\t0.9999997548918037,\r\n\t0.9999997569292257,\r\n\t0.9999997589503092,\r\n\t0.9999997609551802,\r\n\t0.9999997629439635,\r\n\t0.9999997649167831,\r\n\t0.9999997668737624,\r\n\t0.9999997688150233,\r\n\t0.9999997707406872,\r\n\t0.9999997726508747,\r\n\t0.9999997745457051,\r\n\t0.9999997764252972,\r\n\t0.9999997782897688,\r\n\t0.9999997801392367,\r\n\t0.9999997819738169,\r\n\t0.9999997837936248,\r\n\t0.9999997855987744,\r\n\t0.9999997873893794,\r\n\t0.9999997891655525,\r\n\t0.9999997909274054,\r\n\t0.9999997926750491,\r\n\t0.9999997944085938,\r\n\t0.9999997961281487,\r\n\t0.9999997978338224,\r\n\t0.9999997995257227,\r\n\t0.9999998012039565,\r\n\t0.9999998028686299,\r\n\t0.9999998045198482,\r\n\t0.999999806157716,\r\n\t0.9999998077823371,\r\n\t0.9999998093938146,\r\n\t0.9999998109922505,\r\n\t0.9999998125777465,\r\n\t0.9999998141504032,\r\n\t0.9999998157103207,\r\n\t0.9999998172575981,\r\n\t0.999999818792334,\r\n\t0.9999998203146261,\r\n\t0.9999998218245714,\r\n\t0.9999998233222663,\r\n\t0.9999998248078062,\r\n\t0.9999998262812863,\r\n\t0.9999998277428005,\r\n\t0.9999998291924423,\r\n\t0.9999998306303045,\r\n\t0.9999998320564791,\r\n\t0.9999998334710577,\r\n\t0.9999998348741307,\r\n\t0.9999998362657884,\r\n\t0.9999998376461198,\r\n\t0.9999998390152138,\r\n\t0.9999998403731585,\r\n\t0.999999841720041,\r\n\t0.9999998430559481,\r\n\t0.999999844380966,\r\n\t0.9999998456951799,\r\n\t0.9999998469986745,\r\n\t0.9999998482915341,\r\n\t0.9999998495738421,\r\n\t0.9999998508456814,\r\n\t0.9999998521071343,\r\n\t0.9999998533582822,\r\n\t0.9999998545992063,\r\n\t0.999999855829987,\r\n\t0.9999998570507038,\r\n\t0.9999998582614362,\r\n\t0.9999998594622628,\r\n\t0.9999998606532614,\r\n\t0.9999998618345095,\r\n\t0.9999998630060839,\r\n\t0.999999864168061,\r\n\t0.9999998653205162,\r\n\t0.9999998664635248,\r\n\t0.9999998675971613,\r\n\t0.9999998687214996,\r\n\t0.9999998698366132,\r\n\t0.9999998709425748,\r\n\t0.9999998720394568,\r\n\t0.9999998731273311,\r\n\t0.9999998742062687,\r\n\t0.9999998752763404,\r\n\t0.9999998763376162,\r\n\t0.9999998773901658,\r\n\t0.9999998784340584,\r\n\t0.9999998794693622,\r\n\t0.9999998804961456,\r\n\t0.9999998815144759,\r\n\t0.9999998825244202,\r\n\t0.999999883526045,\r\n\t0.9999998845194162,\r\n\t0.9999998855045994,\r\n\t0.9999998864816595,\r\n\t0.999999887450661,\r\n\t0.999999888411668,\r\n\t0.9999998893647438,\r\n\t0.9999998903099517,\r\n\t0.9999998912473542,\r\n\t0.9999998921770132,\r\n\t0.9999998930989905,\r\n\t0.9999998940133472,\r\n\t0.9999998949201439,\r\n\t0.9999998958194407,\r\n\t0.9999998967112975,\r\n\t0.9999998975957736,\r\n\t0.9999998984729278,\r\n\t0.9999998993428184,\r\n\t0.9999999002055034,\r\n\t0.9999999010610404,\r\n\t0.9999999019094864,\r\n\t0.9999999027508979,\r\n\t0.9999999035853312,\r\n\t0.999999904412842,\r\n\t0.9999999052334857,\r\n\t0.9999999060473171,\r\n\t0.9999999068543908,\r\n\t0.9999999076547608,\r\n\t0.9999999084484806,\r\n\t0.9999999092356038,\r\n\t0.9999999100161828,\r\n\t0.9999999107902704,\r\n\t0.9999999115579185,\r\n\t0.9999999123191786,\r\n\t0.999999913074102,\r\n\t0.9999999138227396,\r\n\t0.9999999145651417,\r\n\t0.9999999153013585,\r\n\t0.9999999160314396,\r\n\t0.9999999167554341,\r\n\t0.9999999174733912,\r\n\t0.9999999181853593,\r\n\t0.9999999188913865,\r\n\t0.9999999195915207,\r\n\t0.9999999202858092,\r\n\t0.9999999209742991,\r\n\t0.9999999216570371,\r\n\t0.9999999223340694,\r\n\t0.999999923005442,\r\n\t0.9999999236712007,\r\n\t0.9999999243313906,\r\n\t0.9999999249860566,\r\n\t0.9999999256352432,\r\n\t0.9999999262789947,\r\n\t0.999999926917355,\r\n\t0.9999999275503675,\r\n\t0.9999999281780756,\r\n\t0.9999999288005219,\r\n\t0.9999999294177492,\r\n\t0.9999999300297994,\r\n\t0.9999999306367146,\r\n\t0.9999999312385361,\r\n\t0.9999999318353056,\r\n\t0.9999999324270634,\r\n\t0.9999999330138505,\r\n\t0.9999999335957069,\r\n\t0.9999999341726727,\r\n\t0.9999999347447877,\r\n\t0.9999999353120909,\r\n\t0.9999999358746215,\r\n\t0.9999999364324182,\r\n\t0.9999999369855195,\r\n\t0.9999999375339633,\r\n\t0.9999999380777876,\r\n\t0.9999999386170301,\r\n\t0.9999999391517276,\r\n\t0.9999999396819174,\r\n\t0.999999940207636,\r\n\t0.9999999407289198,\r\n\t0.9999999412458049,\r\n\t0.9999999417583272,\r\n\t0.999999942266522,\r\n\t0.9999999427704247,\r\n\t0.9999999432700704,\r\n\t0.9999999437654934,\r\n\t0.9999999442567284,\r\n\t0.9999999447438097,\r\n\t0.9999999452267709,\r\n\t0.9999999457056458,\r\n\t0.9999999461804676,\r\n\t0.9999999466512696,\r\n\t0.9999999471180845,\r\n\t0.9999999475809448,\r\n\t0.999999948039883,\r\n\t0.9999999484949312,\r\n\t0.999999948946121,\r\n\t0.9999999493934841,\r\n\t0.999999949837052,\r\n\t0.9999999502768554,\r\n\t0.9999999507129254,\r\n\t0.9999999511452924,\r\n\t0.9999999515739869,\r\n\t0.9999999519990389,\r\n\t0.9999999524204785,\r\n\t0.999999952838335,\r\n\t0.9999999532526379,\r\n\t0.9999999536634165,\r\n\t0.9999999540706997,\r\n\t0.9999999544745162,\r\n\t0.9999999548748943,\r\n\t0.9999999552718626,\r\n\t0.9999999556654489,\r\n\t0.999999956055681,\r\n\t0.9999999564425865,\r\n\t0.999999956826193,\r\n\t0.9999999572065275,\r\n\t0.9999999575836167,\r\n\t0.9999999579574878,\r\n\t0.9999999583281669,\r\n\t0.9999999586956806,\r\n\t0.9999999590600549,\r\n\t0.9999999594213156,\r\n\t0.9999999597794885,\r\n\t0.999999960134599,\r\n\t0.9999999604866725,\r\n\t0.9999999608357341,\r\n\t0.9999999611818084,\r\n\t0.9999999615249204,\r\n\t0.9999999618650944,\r\n\t0.9999999622023549,\r\n\t0.9999999625367257,\r\n\t0.999999962868231,\r\n\t0.9999999631968943,\r\n\t0.9999999635227392,\r\n\t0.999999963845789,\r\n\t0.9999999641660671,\r\n\t0.9999999644835962,\r\n\t0.9999999647983991,\r\n\t0.9999999651104985,\r\n\t0.9999999654199169,\r\n\t0.9999999657266763,\r\n\t0.999999966030799,\r\n\t0.9999999663323067,\r\n\t0.9999999666312214,\r\n\t0.9999999669275643,\r\n\t0.9999999672213571,\r\n\t0.9999999675126208,\r\n\t0.9999999678013763,\r\n\t0.9999999680876448,\r\n\t0.9999999683714469,\r\n\t0.9999999686528029,\r\n\t0.9999999689317335,\r\n\t0.9999999692082586,\r\n\t0.9999999694823984,\r\n\t0.9999999697541728,\r\n\t0.9999999700236014,\r\n\t0.999999970290704,\r\n\t0.9999999705554997,\r\n\t0.9999999708180078,\r\n\t0.9999999710782477,\r\n\t0.9999999713362381,\r\n\t0.9999999715919977,\r\n\t0.9999999718455453,\r\n\t0.9999999720968994,\r\n\t0.9999999723460782,\r\n\t0.9999999725931,\r\n\t0.9999999728379828,\r\n\t0.9999999730807446,\r\n\t0.999999973321403,\r\n\t0.9999999735599757,\r\n\t0.9999999737964803,\r\n\t0.9999999740309339,\r\n\t0.9999999742633536,\r\n\t0.9999999744937569,\r\n\t0.9999999747221603,\r\n\t0.9999999749485807,\r\n\t0.9999999751730348,\r\n\t0.9999999753955391,\r\n\t0.99999997561611,\r\n\t0.9999999758347635,\r\n\t0.999999976051516,\r\n\t0.9999999762663835,\r\n\t0.9999999764793815,\r\n\t0.9999999766905261,\r\n\t0.9999999768998327,\r\n\t0.9999999771073167,\r\n\t0.9999999773129936,\r\n\t0.9999999775168786,\r\n\t0.9999999777189867,\r\n\t0.999999977919333,\r\n\t0.9999999781179323,\r\n\t0.9999999783147994,\r\n\t0.9999999785099486,\r\n\t0.9999999787033947,\r\n\t0.999999978895152,\r\n\t0.9999999790852349,\r\n\t0.9999999792736571,\r\n\t0.9999999794604331,\r\n\t0.9999999796455765,\r\n\t0.9999999798291014,\r\n\t0.9999999800110212,\r\n\t0.9999999801913495,\r\n\t0.9999999803701,\r\n\t0.9999999805472858,\r\n\t0.9999999807229203,\r\n\t0.9999999808970166,\r\n\t0.9999999810695877,\r\n\t0.9999999812406464,\r\n\t0.9999999814102057,\r\n\t0.9999999815782784,\r\n\t0.9999999817448769,\r\n\t0.9999999819100138,\r\n\t0.9999999820737014,\r\n\t0.9999999822359522,\r\n\t0.9999999823967783,\r\n\t0.9999999825561918,\r\n\t0.9999999827142046,\r\n\t0.9999999828708288,\r\n\t0.9999999830260761,\r\n\t0.9999999831799581,\r\n\t0.9999999833324866,\r\n\t0.9999999834836731,\r\n\t0.9999999836335289,\r\n\t0.9999999837820654,\r\n\t0.999999983929294,\r\n\t0.9999999840752255,\r\n\t0.9999999842198712,\r\n\t0.9999999843632421,\r\n\t0.9999999845053489,\r\n\t0.9999999846462025,\r\n\t0.9999999847858135,\r\n\t0.9999999849241926,\r\n\t0.9999999850613503,\r\n\t0.999999985197297,\r\n\t0.9999999853320432,\r\n\t0.9999999854655989,\r\n\t0.9999999855979743,\r\n\t0.9999999857291797,\r\n\t0.999999985859225,\r\n\t0.9999999859881201,\r\n\t0.9999999861158749,\r\n\t0.9999999862424992,\r\n\t0.9999999863680026,\r\n\t0.9999999864923947,\r\n\t0.9999999866156851,\r\n\t0.9999999867378832,\r\n\t0.9999999868589983,\r\n\t0.9999999869790398,\r\n\t0.9999999870980169,\r\n\t0.9999999872159386,\r\n\t0.9999999873328141,\r\n\t0.9999999874486525,\r\n\t0.9999999875634624,\r\n\t0.9999999876772528,\r\n\t0.9999999877900326,\r\n\t0.9999999879018102,\r\n\t0.9999999880125945,\r\n\t0.9999999881223939,\r\n\t0.9999999882312168,\r\n\t0.9999999883390719,\r\n\t0.9999999884459672,\r\n\t0.9999999885519111,\r\n\t0.9999999886569119,\r\n\t0.9999999887609775,\r\n\t0.9999999888641162,\r\n\t0.9999999889663359,\r\n\t0.9999999890676445,\r\n\t0.99999998916805,\r\n\t0.99999998926756,\r\n\t0.9999999893661823,\r\n\t0.9999999894639247,\r\n\t0.9999999895607946,\r\n\t0.9999999896567996,\r\n\t0.9999999897519473,\r\n\t0.9999999898462449,\r\n\t0.9999999899397001,\r\n\t0.9999999900323198,\r\n\t0.9999999901241114,\r\n\t0.9999999902150822,\r\n\t0.9999999903052391,\r\n\t0.9999999903945893,\r\n\t0.9999999904831397,\r\n\t0.9999999905708973,\r\n\t0.9999999906578688,\r\n\t0.9999999907440613,\r\n\t0.9999999908294814,\r\n\t0.9999999909141358,\r\n\t0.9999999909980313,\r\n\t0.9999999910811742,\r\n\t0.9999999911635713,\r\n\t0.9999999912452289,\r\n\t0.9999999913261536,\r\n\t0.9999999914063517,\r\n\t0.9999999914858294,\r\n\t0.9999999915645932,\r\n\t0.9999999916426491,\r\n\t0.9999999917200033,\r\n\t0.9999999917966621,\r\n\t0.9999999918726314,\r\n\t0.9999999919479172,\r\n\t0.9999999920225255,\r\n\t0.9999999920964623,\r\n\t0.9999999921697332,\r\n\t0.9999999922423443,\r\n\t0.9999999923143011,\r\n\t0.9999999923856094,\r\n\t0.9999999924562751,\r\n\t0.9999999925263034,\r\n\t0.9999999925957003,\r\n\t0.9999999926644709,\r\n\t0.9999999927326211,\r\n\t0.999999992800156,\r\n\t0.999999992867081,\r\n\t0.9999999929334016,\r\n\t0.999999992999123,\r\n\t0.9999999930642505,\r\n\t0.9999999931287892,\r\n\t0.9999999931927444,\r\n\t0.999999993256121,\r\n\t0.9999999933189243,\r\n\t0.9999999933811592,\r\n\t0.9999999934428307,\r\n\t0.9999999935039439,\r\n\t0.9999999935645035,\r\n\t0.9999999936245144,\r\n\t0.9999999936839815,\r\n\t0.9999999937429095,\r\n\t0.9999999938013031,\r\n\t0.999999993859167,\r\n\t0.9999999939165061,\r\n\t0.9999999939733247,\r\n\t0.9999999940296276,\r\n\t0.9999999940854193,\r\n\t0.9999999941407041,\r\n\t0.9999999941954867,\r\n\t0.9999999942497714,\r\n\t0.9999999943035627,\r\n\t0.9999999943568648,\r\n\t0.9999999944096821,\r\n\t0.9999999944620188,\r\n\t0.9999999945138793,\r\n\t0.9999999945652677,\r\n\t0.9999999946161882,\r\n\t0.9999999946666448,\r\n\t0.9999999947166417,\r\n\t0.9999999947661831,\r\n\t0.9999999948152728,\r\n\t0.9999999948639148,\r\n\t0.9999999949121132,\r\n\t0.9999999949598719,\r\n\t0.9999999950071947,\r\n\t0.9999999950540855,\r\n\t0.9999999951005483,\r\n\t0.9999999951465866,\r\n\t0.9999999951922043,\r\n\t0.9999999952374051,\r\n\t0.9999999952821927,\r\n\t0.9999999953265708,\r\n\t0.999999995370543,\r\n\t0.9999999954141129,\r\n\t0.999999995457284,\r\n\t0.99999999550006,\r\n\t0.9999999955424443,\r\n\t0.9999999955844405,\r\n\t0.9999999956260518,\r\n\t0.9999999956672819,\r\n\t0.9999999957081339,\r\n\t0.9999999957486115,\r\n\t0.9999999957887178,\r\n\t0.9999999958284561,\r\n\t0.9999999958678297,\r\n\t0.999999995906842,\r\n\t0.999999995945496,\r\n\t0.9999999959837951,\r\n\t0.9999999960217422,\r\n\t0.9999999960593406,\r\n\t0.9999999960965935,\r\n\t0.9999999961335039,\r\n\t0.9999999961700747,\r\n\t0.9999999962063091,\r\n\t0.9999999962422101,\r\n\t0.9999999962777807,\r\n\t0.9999999963130237,\r\n\t0.9999999963479421,\r\n\t0.9999999963825389,\r\n\t0.9999999964168169,\r\n\t0.9999999964507789,\r\n\t0.9999999964844278,\r\n\t0.9999999965177664,\r\n\t0.9999999965507974,\r\n\t0.9999999965835236,\r\n\t0.9999999966159477,\r\n\t0.9999999966480726,\r\n\t0.9999999966799007,\r\n\t0.9999999967114348,\r\n\t0.9999999967426776,\r\n\t0.9999999967736315,\r\n\t0.9999999968042993,\r\n\t0.9999999968346834,\r\n\t0.9999999968647866,\r\n\t0.9999999968946112,\r\n\t0.9999999969241598,\r\n\t0.9999999969534347,\r\n\t0.9999999969824386,\r\n\t0.9999999970111738,\r\n\t0.9999999970396427,\r\n\t0.9999999970678478,\r\n\t0.9999999970957915,\r\n\t0.999999997123476,\r\n\t0.9999999971509037,\r\n\t0.999999997178077,\r\n\t0.999999997204998,\r\n\t0.9999999972316691,\r\n\t0.9999999972580926,\r\n\t0.9999999972842706,\r\n\t0.9999999973102055,\r\n\t0.9999999973358993,\r\n\t0.9999999973613541,\r\n\t0.9999999973865724,\r\n\t0.9999999974115561,\r\n\t0.9999999974363074,\r\n\t0.9999999974608283,\r\n\t0.9999999974851209,\r\n\t0.9999999975091874,\r\n\t0.9999999975330297,\r\n\t0.9999999975566499,\r\n\t0.99999999758005,\r\n\t0.999999997603232,\r\n\t0.9999999976261978,\r\n\t0.9999999976489494,\r\n\t0.9999999976714888,\r\n\t0.9999999976938179,\r\n\t0.9999999977159385,\r\n\t0.9999999977378526,\r\n\t0.999999997759562,\r\n\t0.9999999977810687,\r\n\t0.9999999978023744,\r\n\t0.9999999978234809,\r\n\t0.9999999978443901,\r\n\t0.9999999978651037,\r\n\t0.9999999978856237,\r\n\t0.9999999979059516,\r\n\t0.9999999979260893,\r\n\t0.9999999979460383,\r\n\t0.9999999979658007,\r\n\t0.9999999979853779,\r\n\t0.9999999980047717,\r\n\t0.9999999980239836,\r\n\t0.9999999980430155,\r\n\t0.999999998061869,\r\n\t0.9999999980805456,\r\n\t0.9999999980990469,\r\n\t0.9999999981173747,\r\n\t0.9999999981355304,\r\n\t0.9999999981535156,\r\n\t0.9999999981713319,\r\n\t0.9999999981889808,\r\n\t0.9999999982064638,\r\n\t0.9999999982237825,\r\n\t0.9999999982409384,\r\n\t0.999999998257933,\r\n\t0.9999999982747676,\r\n\t0.9999999982914438,\r\n\t0.999999998307963,\r\n\t0.9999999983243267,\r\n\t0.9999999983405364,\r\n\t0.9999999983565933,\r\n\t0.9999999983724989,\r\n\t0.9999999983882546,\r\n\t0.9999999984038618,\r\n\t0.9999999984193217,\r\n\t0.9999999984346358,\r\n\t0.9999999984498055,\r\n\t0.999999998464832,\r\n\t0.9999999984797165,\r\n\t0.9999999984944606,\r\n\t0.9999999985090654,\r\n\t0.9999999985235323,\r\n\t0.9999999985378624,\r\n\t0.9999999985520569,\r\n\t0.9999999985661173,\r\n\t0.9999999985800447,\r\n\t0.9999999985938404,\r\n\t0.9999999986075054,\r\n\t0.9999999986210412,\r\n\t0.9999999986344488,\r\n\t0.9999999986477294,\r\n\t0.9999999986608841,\r\n\t0.9999999986739142,\r\n\t0.9999999986868209,\r\n\t0.9999999986996051,\r\n\t0.9999999987122681,\r\n\t0.9999999987248109,\r\n\t0.9999999987372348,\r\n\t0.9999999987495407,\r\n\t0.9999999987617298,\r\n\t0.9999999987738032,\r\n\t0.9999999987857618,\r\n\t0.9999999987976069,\r\n\t0.9999999988093394,\r\n\t0.9999999988209604,\r\n\t0.9999999988324707,\r\n\t0.9999999988438717,\r\n\t0.9999999988551642,\r\n\t0.9999999988663492,\r\n\t0.9999999988774277,\r\n\t0.9999999988884007,\r\n\t0.9999999988992694,\r\n\t0.9999999989100343,\r\n\t0.9999999989206968,\r\n\t0.9999999989312576,\r\n\t0.9999999989417176,\r\n\t0.999999998952078,\r\n\t0.9999999989623395,\r\n\t0.999999998972503,\r\n\t0.9999999989825696,\r\n\t0.9999999989925401,\r\n\t0.9999999990024154,\r\n\t0.9999999990121963,\r\n\t0.9999999990218839,\r\n\t0.9999999990314787,\r\n\t0.9999999990409819,\r\n\t0.9999999990503942,\r\n\t0.9999999990597165,\r\n\t0.9999999990689495,\r\n\t0.9999999990780942,\r\n\t0.9999999990871514,\r\n\t0.9999999990961219,\r\n\t0.9999999991050064,\r\n\t0.9999999991138059,\r\n\t0.9999999991225209,\r\n\t0.9999999991311526,\r\n\t0.9999999991397014,\r\n\t0.9999999991481682,\r\n\t0.9999999991565538,\r\n\t0.9999999991648589,\r\n\t0.9999999991730844,\r\n\t0.9999999991812308,\r\n\t0.999999999189299,\r\n\t0.9999999991972898,\r\n\t0.9999999992052038,\r\n\t0.9999999992130417,\r\n\t0.9999999992208043,\r\n\t0.9999999992284921,\r\n\t0.9999999992361062,\r\n\t0.9999999992436469,\r\n\t0.999999999251115,\r\n\t0.9999999992585114,\r\n\t0.9999999992658364,\r\n\t0.9999999992730909,\r\n\t0.9999999992802755,\r\n\t0.9999999992873909,\r\n\t0.9999999992944377,\r\n\t0.9999999993014167,\r\n\t0.9999999993083283,\r\n\t0.9999999993151731,\r\n\t0.999999999321952,\r\n\t0.9999999993286655,\r\n\t0.9999999993353141,\r\n\t0.9999999993418985,\r\n\t0.9999999993484194,\r\n\t0.9999999993548773,\r\n\t0.9999999993612727,\r\n\t0.9999999993676063,\r\n\t0.9999999993738786,\r\n\t0.9999999993800903,\r\n\t0.999999999386242,\r\n\t0.9999999993923341,\r\n\t0.9999999993983673,\r\n\t0.9999999994043419,\r\n\t0.9999999994102589,\r\n\t0.9999999994161184,\r\n\t0.9999999994219211,\r\n\t0.9999999994276677,\r\n\t0.9999999994333585,\r\n\t0.9999999994389941,\r\n\t0.9999999994445751,\r\n\t0.999999999450102,\r\n\t0.9999999994555752,\r\n\t0.9999999994609953,\r\n\t0.9999999994663628,\r\n\t0.9999999994716781,\r\n\t0.9999999994769417,\r\n\t0.9999999994821542,\r\n\t0.9999999994873161,\r\n\t0.9999999994924278,\r\n\t0.9999999994974899,\r\n\t0.9999999995025025,\r\n\t0.9999999995074665,\r\n\t0.9999999995123822,\r\n\t0.99999999951725,\r\n\t0.9999999995220704,\r\n\t0.9999999995268438,\r\n\t0.9999999995315708,\r\n\t0.9999999995362517,\r\n\t0.999999999540887,\r\n\t0.999999999545477,\r\n\t0.9999999995500224,\r\n\t0.9999999995545233,\r\n\t0.9999999995589803,\r\n\t0.9999999995633939,\r\n\t0.9999999995677644,\r\n\t0.9999999995720922,\r\n\t0.9999999995763776,\r\n\t0.9999999995806214,\r\n\t0.9999999995848234,\r\n\t0.9999999995889846,\r\n\t0.999999999593105,\r\n\t0.9999999995971851,\r\n\t0.9999999996012253,\r\n\t0.9999999996052259,\r\n\t0.9999999996091874,\r\n\t0.9999999996131101,\r\n\t0.9999999996169945,\r\n\t0.9999999996208406,\r\n\t0.9999999996246492,\r\n\t0.9999999996284205,\r\n\t0.9999999996321547,\r\n\t0.9999999996358524,\r\n\t0.9999999996395138,\r\n\t0.9999999996431392,\r\n\t0.9999999996467291,\r\n\t0.9999999996502837,\r\n\t0.9999999996538035,\r\n\t0.9999999996572887,\r\n\t0.9999999996607396,\r\n\t0.9999999996641566,\r\n\t0.99999999966754,\r\n\t0.9999999996708903,\r\n\t0.9999999996742075,\r\n\t0.9999999996774921,\r\n\t0.9999999996807444,\r\n\t0.9999999996839647,\r\n\t0.9999999996871533,\r\n\t0.9999999996903104,\r\n\t0.9999999996934366,\r\n\t0.9999999996965319,\r\n\t0.9999999996995966,\r\n\t0.9999999997026312,\r\n\t0.9999999997056359,\r\n\t0.999999999708611,\r\n\t0.9999999997115566,\r\n\t0.9999999997144733,\r\n\t0.9999999997173611,\r\n\t0.9999999997202205,\r\n\t0.9999999997230515,\r\n\t0.9999999997258547,\r\n\t0.9999999997286302,\r\n\t0.9999999997313782,\r\n\t0.999999999734099,\r\n\t0.999999999736793,\r\n\t0.9999999997394603,\r\n\t0.9999999997421012,\r\n\t0.9999999997447161,\r\n\t0.9999999997473049,\r\n\t0.9999999997498683,\r\n\t0.9999999997524062,\r\n\t0.9999999997549189,\r\n\t0.9999999997574068,\r\n\t0.9999999997598701,\r\n\t0.9999999997623089,\r\n\t0.9999999997647235,\r\n\t0.9999999997671142,\r\n\t0.9999999997694812,\r\n\t0.9999999997718246,\r\n\t0.9999999997741449,\r\n\t0.999999999776442,\r\n\t0.9999999997787165,\r\n\t0.9999999997809682,\r\n\t0.9999999997831976,\r\n\t0.9999999997854049,\r\n\t0.9999999997875902,\r\n\t0.9999999997897538,\r\n\t0.9999999997918959,\r\n\t0.9999999997940167,\r\n\t0.9999999997961163,\r\n\t0.9999999997981951,\r\n\t0.9999999998002532,\r\n\t0.9999999998022907,\r\n\t0.9999999998043081,\r\n\t0.9999999998063053,\r\n\t0.9999999998082825,\r\n\t0.9999999998102401,\r\n\t0.9999999998121781,\r\n\t0.9999999998140969,\r\n\t0.9999999998159965,\r\n\t0.9999999998178771,\r\n\t0.999999999819739,\r\n\t0.9999999998215823,\r\n\t0.9999999998234071,\r\n\t0.9999999998252137,\r\n\t0.9999999998270024,\r\n\t0.9999999998287731,\r\n\t0.9999999998305261,\r\n\t0.9999999998322616,\r\n\t0.9999999998339797,\r\n\t0.9999999998356807,\r\n\t0.9999999998373645,\r\n\t0.9999999998390317,\r\n\t0.999999999840682,\r\n\t0.9999999998423159,\r\n\t0.9999999998439334,\r\n\t0.9999999998455347,\r\n\t0.99999999984712,\r\n\t0.9999999998486893,\r\n\t0.9999999998502429,\r\n\t0.9999999998517809,\r\n\t0.9999999998533036,\r\n\t0.9999999998548109,\r\n\t0.9999999998563031,\r\n\t0.9999999998577803,\r\n\t0.9999999998592427,\r\n\t0.9999999998606903,\r\n\t0.9999999998621235,\r\n\t0.9999999998635423,\r\n\t0.9999999998649468,\r\n\t0.9999999998663371,\r\n\t0.9999999998677135,\r\n\t0.9999999998690761,\r\n\t0.9999999998704249,\r\n\t0.9999999998717601,\r\n\t0.999999999873082,\r\n\t0.9999999998743905,\r\n\t0.9999999998756858,\r\n\t0.9999999998769681,\r\n\t0.9999999998782375,\r\n\t0.9999999998794941,\r\n\t0.999999999880738,\r\n\t0.9999999998819693,\r\n\t0.9999999998831882,\r\n\t0.9999999998843948,\r\n\t0.9999999998855893,\r\n\t0.9999999998867717,\r\n\t0.9999999998879421,\r\n\t0.9999999998891007,\r\n\t0.9999999998902477,\r\n\t0.999999999891383,\r\n\t0.9999999998925069,\r\n\t0.9999999998936194,\r\n\t0.9999999998947207,\r\n\t0.9999999998958108,\r\n\t0.9999999998968898,\r\n\t0.999999999897958,\r\n\t0.9999999998990153,\r\n\t0.999999999900062,\r\n\t0.999999999901098,\r\n\t0.9999999999021236,\r\n\t0.9999999999031387,\r\n\t0.9999999999041436,\r\n\t0.9999999999051383,\r\n\t0.9999999999061229,\r\n\t0.9999999999070975,\r\n\t0.9999999999080622,\r\n\t0.9999999999090171,\r\n\t0.9999999999099624,\r\n\t0.999999999910898,\r\n\t0.9999999999118242,\r\n\t0.9999999999127409,\r\n\t0.9999999999136483,\r\n\t0.9999999999145465,\r\n\t0.9999999999154355,\r\n\t0.9999999999163156,\r\n\t0.9999999999171867,\r\n\t0.9999999999180489,\r\n\t0.9999999999189023,\r\n\t0.9999999999197471,\r\n\t0.9999999999205832,\r\n\t0.9999999999214109,\r\n\t0.9999999999222301,\r\n\t0.9999999999230409,\r\n\t0.9999999999238435,\r\n\t0.999999999924638,\r\n\t0.9999999999254242,\r\n\t0.9999999999262026,\r\n\t0.9999999999269729,\r\n\t0.9999999999277354,\r\n\t0.9999999999284901,\r\n\t0.9999999999292372,\r\n\t0.9999999999299765,\r\n\t0.9999999999307083,\r\n\t0.9999999999314326,\r\n\t0.9999999999321496,\r\n\t0.9999999999328593,\r\n\t0.9999999999335616,\r\n\t0.9999999999342568,\r\n\t0.9999999999349448,\r\n\t0.9999999999356259,\r\n\t0.9999999999363,\r\n\t0.9999999999369671,\r\n\t0.9999999999376274,\r\n\t0.999999999938281,\r\n\t0.9999999999389279,\r\n\t0.9999999999395681,\r\n\t0.9999999999402018,\r\n\t0.999999999940829,\r\n\t0.9999999999414497,\r\n\t0.9999999999420641,\r\n\t0.9999999999426722,\r\n\t0.999999999943274,\r\n\t0.9999999999438698,\r\n\t0.9999999999444593,\r\n\t0.9999999999450427,\r\n\t0.9999999999456203,\r\n\t0.9999999999461918,\r\n\t0.9999999999467576,\r\n\t0.9999999999473175,\r\n\t0.9999999999478716,\r\n\t0.9999999999484199,\r\n\t0.9999999999489627,\r\n\t0.9999999999495,\r\n\t0.9999999999500316,\r\n\t0.9999999999505578,\r\n\t0.9999999999510786,\r\n\t0.9999999999515939,\r\n\t0.9999999999521041,\r\n\t0.9999999999526089,\r\n\t0.9999999999531086,\r\n\t0.9999999999536031,\r\n\t0.9999999999540925,\r\n\t0.9999999999545768,\r\n\t0.9999999999550562,\r\n\t0.9999999999555306,\r\n\t0.9999999999560001,\r\n\t0.9999999999564647,\r\n\t0.9999999999569246,\r\n\t0.9999999999573796,\r\n\t0.9999999999578301,\r\n\t0.9999999999582758,\r\n\t0.9999999999587169,\r\n\t0.9999999999591536,\r\n\t0.9999999999595856,\r\n\t0.9999999999600132,\r\n\t0.9999999999604363,\r\n\t0.9999999999608551,\r\n\t0.9999999999612695,\r\n\t0.9999999999616798,\r\n\t0.9999999999620857,\r\n\t0.9999999999624873,\r\n\t0.9999999999628849,\r\n\t0.9999999999632783,\r\n\t0.9999999999636676,\r\n\t0.999999999964053,\r\n\t0.9999999999644342,\r\n\t0.9999999999648116,\r\n\t0.9999999999651851,\r\n\t0.9999999999655546,\r\n\t0.9999999999659203,\r\n\t0.9999999999662822,\r\n\t0.9999999999666404,\r\n\t0.9999999999669948,\r\n\t0.9999999999673456,\r\n\t0.9999999999676927,\r\n\t0.9999999999680362,\r\n\t0.9999999999683761,\r\n\t0.9999999999687125,\r\n\t0.9999999999690454,\r\n\t0.9999999999693748,\r\n\t0.9999999999697008,\r\n\t0.9999999999700234,\r\n\t0.9999999999703426,\r\n\t0.9999999999706586,\r\n\t0.9999999999709712,\r\n\t0.9999999999712805,\r\n\t0.9999999999715867,\r\n\t0.9999999999718896,\r\n\t0.9999999999721894,\r\n\t0.999999999972486,\r\n\t0.9999999999727797,\r\n\t0.9999999999730701,\r\n\t0.9999999999733575,\r\n\t0.9999999999736421,\r\n\t0.9999999999739235,\r\n\t0.9999999999742021,\r\n\t0.9999999999744777,\r\n\t0.9999999999747504,\r\n\t0.9999999999750203,\r\n\t0.9999999999752874,\r\n\t0.9999999999755517,\r\n\t0.9999999999758132,\r\n\t0.999999999976072,\r\n\t0.999999999976328,\r\n\t0.9999999999765815,\r\n\t0.9999999999768322,\r\n\t0.9999999999770803,\r\n\t0.9999999999773258,\r\n\t0.9999999999775687,\r\n\t0.9999999999778092,\r\n\t0.999999999978047,\r\n\t0.9999999999782824,\r\n\t0.9999999999785153,\r\n\t0.9999999999787458,\r\n\t0.9999999999789738,\r\n\t0.9999999999791994,\r\n\t0.9999999999794227,\r\n\t0.9999999999796436,\r\n\t0.9999999999798622,\r\n\t0.9999999999800785,\r\n\t0.9999999999802925,\r\n\t0.9999999999805044,\r\n\t0.9999999999807139,\r\n\t0.9999999999809213,\r\n\t0.9999999999811264,\r\n\t0.9999999999813294,\r\n\t0.9999999999815303,\r\n\t0.9999999999817291,\r\n\t0.9999999999819257,\r\n\t0.9999999999821203,\r\n\t0.9999999999823128,\r\n\t0.9999999999825033,\r\n\t0.9999999999826918,\r\n\t0.9999999999828784,\r\n\t0.999999999983063,\r\n\t0.9999999999832455,\r\n\t0.9999999999834263,\r\n\t0.999999999983605,\r\n\t0.9999999999837819,\r\n\t0.9999999999839568,\r\n\t0.99999999998413,\r\n\t0.9999999999843013,\r\n\t0.9999999999844709,\r\n\t0.9999999999846386,\r\n\t0.9999999999848046,\r\n\t0.9999999999849688,\r\n\t0.9999999999851312,\r\n\t0.999999999985292,\r\n\t0.999999999985451,\r\n\t0.9999999999856084,\r\n\t0.999999999985764,\r\n\t0.9999999999859182,\r\n\t0.9999999999860706,\r\n\t0.9999999999862214,\r\n\t0.9999999999863706,\r\n\t0.9999999999865181,\r\n\t0.9999999999866642,\r\n\t0.9999999999868087,\r\n\t0.9999999999869517,\r\n\t0.9999999999870931,\r\n\t0.9999999999872331,\r\n\t0.9999999999873715,\r\n\t0.9999999999875085,\r\n\t0.9999999999876441,\r\n\t0.9999999999877782,\r\n\t0.9999999999879109,\r\n\t0.9999999999880421,\r\n\t0.999999999988172,\r\n\t0.9999999999883005,\r\n\t0.9999999999884276,\r\n\t0.9999999999885534,\r\n\t0.9999999999886778,\r\n\t0.999999999988801,\r\n\t0.9999999999889227,\r\n\t0.9999999999890432,\r\n\t0.9999999999891624,\r\n\t0.9999999999892804,\r\n\t0.999999999989397,\r\n\t0.9999999999895125,\r\n\t0.9999999999896267,\r\n\t0.9999999999897397,\r\n\t0.9999999999898515,\r\n\t0.999999999989962,\r\n\t0.9999999999900715,\r\n\t0.9999999999901797,\r\n\t0.9999999999902869,\r\n\t0.9999999999903928,\r\n\t0.9999999999904976,\r\n\t0.9999999999906013,\r\n\t0.9999999999907039,\r\n\t0.9999999999908054,\r\n\t0.9999999999909058,\r\n\t0.9999999999910051,\r\n\t0.9999999999911033,\r\n\t0.9999999999912006,\r\n\t0.9999999999912967,\r\n\t0.9999999999913919,\r\n\t0.999999999991486,\r\n\t0.9999999999915792,\r\n\t0.9999999999916713,\r\n\t0.9999999999917625,\r\n\t0.9999999999918526,\r\n\t0.9999999999919418,\r\n\t0.99999999999203,\r\n\t0.9999999999921173,\r\n\t0.9999999999922037,\r\n\t0.9999999999922891,\r\n\t0.9999999999923737,\r\n\t0.9999999999924573,\r\n\t0.99999999999254,\r\n\t0.9999999999926218,\r\n\t0.9999999999927027,\r\n\t0.9999999999927828,\r\n\t0.9999999999928619,\r\n\t0.9999999999929403,\r\n\t0.9999999999930178,\r\n\t0.9999999999930945,\r\n\t0.9999999999931704,\r\n\t0.9999999999932454,\r\n\t0.9999999999933197,\r\n\t0.9999999999933931,\r\n\t0.9999999999934657,\r\n\t0.9999999999935376,\r\n\t0.9999999999936087,\r\n\t0.999999999993679,\r\n\t0.9999999999937486,\r\n\t0.9999999999938173,\r\n\t0.9999999999938854,\r\n\t0.9999999999939527,\r\n\t0.9999999999940193,\r\n\t0.9999999999940853,\r\n\t0.9999999999941505,\r\n\t0.9999999999942148,\r\n\t0.9999999999942787,\r\n\t0.9999999999943417,\r\n\t0.9999999999944041,\r\n\t0.9999999999944659,\r\n\t0.9999999999945269,\r\n\t0.9999999999945873,\r\n\t0.9999999999946471,\r\n\t0.9999999999947062,\r\n\t0.9999999999947646,\r\n\t0.9999999999948225,\r\n\t0.9999999999948798,\r\n\t0.9999999999949363,\r\n\t0.9999999999949923,\r\n\t0.9999999999950476,\r\n\t0.9999999999951025,\r\n\t0.9999999999951567,\r\n\t0.9999999999952102,\r\n\t0.9999999999952632,\r\n\t0.9999999999953156,\r\n\t0.9999999999953675,\r\n\t0.9999999999954188,\r\n\t0.9999999999954695,\r\n\t0.9999999999955197,\r\n\t0.9999999999955694,\r\n\t0.9999999999956185,\r\n\t0.999999999995667,\r\n\t0.9999999999957151,\r\n\t0.9999999999957626,\r\n\t0.9999999999958097,\r\n\t0.9999999999958561,\r\n\t0.9999999999959022,\r\n\t0.9999999999959476,\r\n\t0.9999999999959926,\r\n\t0.9999999999960372,\r\n\t0.9999999999960811,\r\n\t0.9999999999961247,\r\n\t0.9999999999961677,\r\n\t0.9999999999962104,\r\n\t0.9999999999962526,\r\n\t0.9999999999962942,\r\n\t0.9999999999963354,\r\n\t0.9999999999963762,\r\n\t0.9999999999964165,\r\n\t0.9999999999964564,\r\n\t0.9999999999964958,\r\n\t0.9999999999965349,\r\n\t0.9999999999965735,\r\n\t0.9999999999966116,\r\n\t0.9999999999966495,\r\n\t0.9999999999966868,\r\n\t0.9999999999967237,\r\n\t0.9999999999967603,\r\n\t0.9999999999967963,\r\n\t0.9999999999968321,\r\n\t0.9999999999968674,\r\n\t0.9999999999969024,\r\n\t0.999999999996937,\r\n\t0.9999999999969712,\r\n\t0.9999999999970051,\r\n\t0.9999999999970385,\r\n\t0.9999999999970716,\r\n\t0.9999999999971043,\r\n\t0.9999999999971366,\r\n\t0.9999999999971687,\r\n\t0.9999999999972004,\r\n\t0.9999999999972317,\r\n\t0.9999999999972626,\r\n\t0.9999999999972933,\r\n\t0.9999999999973236,\r\n\t0.9999999999973536,\r\n\t0.9999999999973832,\r\n\t0.9999999999974125,\r\n\t0.9999999999974415,\r\n\t0.9999999999974701,\r\n\t0.9999999999974984,\r\n\t0.9999999999975265,\r\n\t0.9999999999975543,\r\n\t0.9999999999975817,\r\n\t0.9999999999976088,\r\n\t0.9999999999976357,\r\n\t0.9999999999976622,\r\n\t0.9999999999976884,\r\n\t0.9999999999977144,\r\n\t0.99999999999774,\r\n\t0.9999999999977655,\r\n\t0.9999999999977905,\r\n\t0.9999999999978154,\r\n\t0.99999999999784,\r\n\t0.9999999999978643,\r\n\t0.9999999999978882,\r\n\t0.999999999997912,\r\n\t0.9999999999979355,\r\n\t0.9999999999979587,\r\n\t0.9999999999979817,\r\n\t0.9999999999980044,\r\n\t0.9999999999980269,\r\n\t0.9999999999980491,\r\n\t0.9999999999980711,\r\n\t0.9999999999980929,\r\n\t0.9999999999981143,\r\n\t0.9999999999981356,\r\n\t0.9999999999981566,\r\n\t0.9999999999981773,\r\n\t0.999999999998198,\r\n\t0.9999999999982183,\r\n\t0.9999999999982384,\r\n\t0.9999999999982583,\r\n\t0.9999999999982779,\r\n\t0.9999999999982974,\r\n\t0.9999999999983166,\r\n\t0.9999999999983357,\r\n\t0.9999999999983544,\r\n\t0.9999999999983731,\r\n\t0.9999999999983914,\r\n\t0.9999999999984096,\r\n\t0.9999999999984276,\r\n\t0.9999999999984454,\r\n\t0.999999999998463,\r\n\t0.9999999999984803,\r\n\t0.9999999999984975,\r\n\t0.9999999999985146,\r\n\t0.9999999999985314,\r\n\t0.999999999998548,\r\n\t0.9999999999985645,\r\n\t0.9999999999985808,\r\n\t0.9999999999985969,\r\n\t0.9999999999986128,\r\n\t0.9999999999986285,\r\n\t0.9999999999986441,\r\n\t0.9999999999986594,\r\n\t0.9999999999986746,\r\n\t0.9999999999986897,\r\n\t0.9999999999987046,\r\n\t0.9999999999987192,\r\n\t0.9999999999987338,\r\n\t0.9999999999987482,\r\n\t0.9999999999987624,\r\n\t0.9999999999987765,\r\n\t0.9999999999987904,\r\n\t0.9999999999988042,\r\n\t0.9999999999988177,\r\n\t0.9999999999988312,\r\n\t0.9999999999988445,\r\n\t0.9999999999988577,\r\n\t0.9999999999988707,\r\n\t0.9999999999988836,\r\n\t0.9999999999988962,\r\n\t0.9999999999989088,\r\n\t0.9999999999989212,\r\n\t0.9999999999989335,\r\n\t0.9999999999989456,\r\n\t0.9999999999989577,\r\n\t0.9999999999989696,\r\n\t0.9999999999989814,\r\n\t0.9999999999989929,\r\n\t0.9999999999990045,\r\n\t0.9999999999990158,\r\n\t0.999999999999027,\r\n\t0.9999999999990381,\r\n\t0.9999999999990491,\r\n\t0.99999999999906,\r\n\t0.9999999999990707,\r\n\t0.9999999999990813,\r\n\t0.9999999999990918,\r\n\t0.9999999999991023,\r\n\t0.9999999999991125,\r\n\t0.9999999999991226,\r\n\t0.9999999999991327,\r\n\t0.9999999999991426,\r\n\t0.9999999999991525,\r\n\t0.9999999999991621,\r\n\t0.9999999999991717,\r\n\t0.9999999999991812,\r\n\t0.9999999999991905,\r\n\t0.9999999999991999,\r\n\t0.999999999999209,\r\n\t0.9999999999992181,\r\n\t0.9999999999992271,\r\n\t0.999999999999236,\r\n\t0.9999999999992447,\r\n\t0.9999999999992534,\r\n\t0.9999999999992619,\r\n\t0.9999999999992704,\r\n\t0.9999999999992788,\r\n\t0.999999999999287,\r\n\t0.9999999999992952,\r\n\t0.9999999999993033,\r\n\t0.9999999999993113,\r\n\t0.9999999999993192,\r\n\t0.9999999999993271,\r\n\t0.9999999999993348,\r\n\t0.9999999999993424,\r\n\t0.99999999999935,\r\n\t0.9999999999993575,\r\n\t0.9999999999993648,\r\n\t0.9999999999993722,\r\n\t0.9999999999993794,\r\n\t0.9999999999993866,\r\n\t0.9999999999993936,\r\n\t0.9999999999994006,\r\n\t0.9999999999994075,\r\n\t0.9999999999994144,\r\n\t0.9999999999994211,\r\n\t0.9999999999994278,\r\n\t0.9999999999994343,\r\n\t0.9999999999994409,\r\n\t0.9999999999994473,\r\n\t0.9999999999994538,\r\n\t0.99999999999946,\r\n\t0.9999999999994662,\r\n\t0.9999999999994724,\r\n\t0.9999999999994785,\r\n\t0.9999999999994845,\r\n\t0.9999999999994905,\r\n\t0.9999999999994964,\r\n\t0.9999999999995022,\r\n\t0.999999999999508,\r\n\t0.9999999999995136,\r\n\t0.9999999999995193,\r\n\t0.9999999999995248,\r\n\t0.9999999999995304,\r\n\t0.9999999999995358,\r\n\t0.9999999999995411,\r\n\t0.9999999999995465,\r\n\t0.9999999999995517,\r\n\t0.9999999999995569,\r\n\t0.999999999999562,\r\n\t0.9999999999995671,\r\n\t0.9999999999995721,\r\n\t0.9999999999995771,\r\n\t0.999999999999582,\r\n\t0.9999999999995869,\r\n\t0.9999999999995917,\r\n\t0.9999999999995963,\r\n\t0.9999999999996011,\r\n\t0.9999999999996056,\r\n\t0.9999999999996103,\r\n\t0.9999999999996148,\r\n\t0.9999999999996193,\r\n\t0.9999999999996236,\r\n\t0.9999999999996281,\r\n\t0.9999999999996324,\r\n\t0.9999999999996366,\r\n\t0.9999999999996408,\r\n\t0.9999999999996451,\r\n\t0.9999999999996492,\r\n\t0.9999999999996533,\r\n\t0.9999999999996573,\r\n\t0.9999999999996613,\r\n\t0.9999999999996653,\r\n\t0.9999999999996692,\r\n\t0.999999999999673,\r\n\t0.9999999999996768,\r\n\t0.9999999999996806,\r\n\t0.9999999999996843,\r\n\t0.9999999999996879,\r\n\t0.9999999999996916,\r\n\t0.9999999999996952,\r\n\t0.9999999999996988,\r\n\t0.9999999999997022,\r\n\t0.9999999999997058,\r\n\t0.9999999999997092,\r\n\t0.9999999999997126,\r\n\t0.9999999999997159,\r\n\t0.9999999999997192,\r\n\t0.9999999999997226,\r\n\t0.9999999999997258,\r\n\t0.999999999999729,\r\n\t0.9999999999997321,\r\n\t0.9999999999997353,\r\n\t0.9999999999997384,\r\n\t0.9999999999997414,\r\n\t0.9999999999997444,\r\n\t0.9999999999997474,\r\n\t0.9999999999997504,\r\n\t0.9999999999997533,\r\n\t0.9999999999997562,\r\n\t0.9999999999997591,\r\n\t0.9999999999997619,\r\n\t0.9999999999997647,\r\n\t0.9999999999997674,\r\n\t0.9999999999997702,\r\n\t0.9999999999997728,\r\n\t0.9999999999997755,\r\n\t0.9999999999997782,\r\n\t0.9999999999997807,\r\n\t0.9999999999997834,\r\n\t0.9999999999997858,\r\n\t0.9999999999997884,\r\n\t0.9999999999997908,\r\n\t0.9999999999997934,\r\n\t0.9999999999997957,\r\n\t0.9999999999997982,\r\n\t0.9999999999998005,\r\n\t0.9999999999998029,\r\n\t0.9999999999998052,\r\n\t0.9999999999998075,\r\n\t0.9999999999998097,\r\n\t0.999999999999812,\r\n\t0.9999999999998143,\r\n\t0.9999999999998164,\r\n\t0.9999999999998186,\r\n\t0.9999999999998207,\r\n\t0.9999999999998228,\r\n\t0.9999999999998249,\r\n\t0.9999999999998269,\r\n\t0.999999999999829,\r\n\t0.999999999999831,\r\n\t0.999999999999833,\r\n\t0.999999999999835,\r\n\t0.9999999999998369,\r\n\t0.9999999999998388,\r\n\t0.9999999999998408,\r\n\t0.9999999999998426,\r\n\t0.9999999999998445,\r\n\t0.9999999999998463,\r\n\t0.9999999999998481,\r\n\t0.9999999999998499,\r\n\t0.9999999999998517,\r\n\t0.9999999999998535,\r\n\t0.9999999999998552,\r\n\t0.9999999999998569,\r\n\t0.9999999999998586,\r\n\t0.9999999999998602,\r\n\t0.9999999999998619,\r\n\t0.9999999999998636,\r\n\t0.9999999999998651,\r\n\t0.9999999999998668,\r\n\t0.9999999999998683,\r\n\t0.9999999999998699,\r\n\t0.9999999999998714,\r\n\t0.999999999999873,\r\n\t0.9999999999998744,\r\n\t0.999999999999876,\r\n\t0.9999999999998774,\r\n\t0.9999999999998789,\r\n\t0.9999999999998803,\r\n\t0.9999999999998818,\r\n\t0.9999999999998831,\r\n\t0.9999999999998845,\r\n\t0.9999999999998859,\r\n\t0.9999999999998872,\r\n\t0.9999999999998885,\r\n\t0.9999999999998899,\r\n\t0.9999999999998912,\r\n\t0.9999999999998925,\r\n\t0.9999999999998938,\r\n\t0.9999999999998951,\r\n\t0.9999999999998963,\r\n\t0.9999999999998975,\r\n\t0.9999999999998987,\r\n\t0.9999999999999,\r\n\t0.9999999999999012,\r\n\t0.9999999999999023,\r\n\t0.9999999999999035,\r\n\t0.9999999999999046,\r\n\t0.9999999999999057,\r\n\t0.9999999999999069,\r\n\t0.999999999999908,\r\n\t0.9999999999999091,\r\n\t0.9999999999999102,\r\n\t0.9999999999999113,\r\n\t0.9999999999999123,\r\n\t0.9999999999999134,\r\n\t0.9999999999999144,\r\n\t0.9999999999999154,\r\n\t0.9999999999999164,\r\n\t0.9999999999999174,\r\n\t0.9999999999999184,\r\n\t0.9999999999999194,\r\n\t0.9999999999999203,\r\n\t0.9999999999999213,\r\n\t0.9999999999999223,\r\n\t0.9999999999999232,\r\n\t0.9999999999999241,\r\n\t0.999999999999925,\r\n\t0.9999999999999258,\r\n\t0.9999999999999267,\r\n\t0.9999999999999276,\r\n\t0.9999999999999285,\r\n\t0.9999999999999294,\r\n\t0.9999999999999302,\r\n\t0.999999999999931,\r\n\t0.9999999999999318,\r\n\t0.9999999999999327,\r\n\t0.9999999999999335,\r\n\t0.9999999999999343,\r\n\t0.999999999999935,\r\n\t0.9999999999999358,\r\n\t0.9999999999999366,\r\n\t0.9999999999999374,\r\n\t0.9999999999999382,\r\n\t0.9999999999999389,\r\n\t0.9999999999999396,\r\n\t0.9999999999999404,\r\n\t0.999999999999941,\r\n\t0.9999999999999417,\r\n\t0.9999999999999425,\r\n\t0.9999999999999432,\r\n\t0.9999999999999438,\r\n\t0.9999999999999445,\r\n\t0.9999999999999452,\r\n\t0.9999999999999458,\r\n\t0.9999999999999465,\r\n\t0.9999999999999472,\r\n\t0.9999999999999478,\r\n\t0.9999999999999484,\r\n\t0.999999999999949,\r\n\t0.9999999999999496,\r\n\t0.9999999999999503,\r\n\t0.9999999999999508,\r\n\t0.9999999999999515,\r\n\t0.999999999999952,\r\n\t0.9999999999999526,\r\n\t0.9999999999999531,\r\n\t0.9999999999999537,\r\n\t0.9999999999999543,\r\n\t0.9999999999999548,\r\n\t0.9999999999999554,\r\n\t0.9999999999999559,\r\n\t0.9999999999999565,\r\n\t0.999999999999957,\r\n\t0.9999999999999575,\r\n\t0.999999999999958,\r\n\t0.9999999999999585,\r\n\t0.999999999999959,\r\n\t0.9999999999999595,\r\n\t0.99999999999996,\r\n\t0.9999999999999605,\r\n\t0.9999999999999609,\r\n\t0.9999999999999615,\r\n\t0.9999999999999619,\r\n\t0.9999999999999624,\r\n\t0.9999999999999628,\r\n\t0.9999999999999633,\r\n\t0.9999999999999637,\r\n\t0.9999999999999641,\r\n\t0.9999999999999646,\r\n\t0.999999999999965,\r\n\t0.9999999999999655,\r\n\t0.9999999999999659,\r\n\t0.9999999999999662,\r\n\t0.9999999999999667,\r\n\t0.9999999999999671,\r\n\t0.9999999999999675,\r\n\t0.9999999999999679,\r\n\t0.9999999999999682,\r\n\t0.9999999999999687,\r\n\t0.999999999999969,\r\n\t0.9999999999999695,\r\n\t0.9999999999999698,\r\n\t0.9999999999999701,\r\n\t0.9999999999999705,\r\n\t0.9999999999999709,\r\n\t0.9999999999999712,\r\n\t0.9999999999999716,\r\n\t0.9999999999999719,\r\n\t0.9999999999999722,\r\n\t0.9999999999999726,\r\n\t0.9999999999999729,\r\n\t0.9999999999999732,\r\n\t0.9999999999999736,\r\n\t0.9999999999999739,\r\n\t0.9999999999999742,\r\n\t0.9999999999999746,\r\n\t0.9999999999999748,\r\n\t0.9999999999999751,\r\n\t0.9999999999999755,\r\n\t0.9999999999999758,\r\n\t0.999999999999976,\r\n\t0.9999999999999764,\r\n\t0.9999999999999767,\r\n\t0.9999999999999769,\r\n\t0.9999999999999772,\r\n\t0.9999999999999775,\r\n\t0.9999999999999778,\r\n\t0.999999999999978,\r\n\t0.9999999999999784,\r\n\t0.9999999999999786,\r\n\t0.9999999999999788,\r\n\t0.9999999999999791,\r\n\t0.9999999999999793,\r\n\t0.9999999999999796,\r\n\t0.9999999999999798,\r\n\t0.9999999999999801,\r\n\t0.9999999999999803,\r\n\t0.9999999999999806,\r\n\t0.9999999999999808,\r\n\t0.999999999999981,\r\n\t0.9999999999999812,\r\n\t0.9999999999999815,\r\n\t0.9999999999999817,\r\n\t0.9999999999999819,\r\n\t0.9999999999999821,\r\n\t0.9999999999999823,\r\n\t0.9999999999999826,\r\n\t0.9999999999999828,\r\n\t0.999999999999983,\r\n\t0.9999999999999832,\r\n\t0.9999999999999835,\r\n\t0.9999999999999837,\r\n\t0.9999999999999839,\r\n\t0.999999999999984,\r\n\t0.9999999999999842,\r\n\t0.9999999999999845,\r\n\t0.9999999999999847,\r\n\t0.9999999999999848,\r\n\t0.999999999999985,\r\n\t0.9999999999999852,\r\n\t0.9999999999999853,\r\n\t0.9999999999999856,\r\n\t0.9999999999999857,\r\n\t0.9999999999999859,\r\n\t0.9999999999999861,\r\n\t0.9999999999999862,\r\n\t0.9999999999999865,\r\n\t0.9999999999999866,\r\n\t0.9999999999999868,\r\n\t0.9999999999999869,\r\n\t0.9999999999999871,\r\n\t0.9999999999999872,\r\n\t0.9999999999999873,\r\n\t0.9999999999999876,\r\n\t0.9999999999999877,\r\n\t0.9999999999999879,\r\n\t0.999999999999988,\r\n\t0.9999999999999881,\r\n\t0.9999999999999883,\r\n\t0.9999999999999885,\r\n\t0.9999999999999886,\r\n\t0.9999999999999887,\r\n\t0.9999999999999889,\r\n\t0.999999999999989,\r\n\t0.9999999999999891,\r\n\t0.9999999999999892,\r\n\t0.9999999999999895,\r\n\t0.9999999999999896,\r\n\t0.9999999999999897,\r\n\t0.9999999999999898,\r\n\t0.9999999999999899,\r\n\t0.99999999999999,\r\n\t0.9999999999999901,\r\n\t0.9999999999999903,\r\n\t0.9999999999999905,\r\n\t0.9999999999999906,\r\n\t0.9999999999999907,\r\n\t0.9999999999999908,\r\n\t0.9999999999999909,\r\n\t0.999999999999991,\r\n\t0.9999999999999911,\r\n\t0.9999999999999912,\r\n\t0.9999999999999913,\r\n\t0.9999999999999915,\r\n\t0.9999999999999916,\r\n\t0.9999999999999917,\r\n\t0.9999999999999918,\r\n\t0.9999999999999919,\r\n\t0.9999999999999919,\r\n\t0.999999999999992,\r\n\t0.9999999999999921,\r\n\t0.9999999999999922,\r\n\t0.9999999999999923,\r\n\t0.9999999999999925,\r\n\t0.9999999999999926,\r\n\t0.9999999999999927,\r\n\t0.9999999999999927,\r\n\t0.9999999999999928,\r\n\t0.9999999999999929,\r\n\t0.999999999999993,\r\n\t0.9999999999999931,\r\n\t0.9999999999999931,\r\n\t0.9999999999999932,\r\n\t0.9999999999999933,\r\n\t0.9999999999999934,\r\n\t0.9999999999999934,\r\n\t0.9999999999999936,\r\n\t0.9999999999999937,\r\n\t0.9999999999999938,\r\n\t0.9999999999999938,\r\n\t0.9999999999999939,\r\n\t0.999999999999994,\r\n\t0.999999999999994,\r\n\t0.9999999999999941,\r\n\t0.9999999999999942,\r\n\t0.9999999999999942,\r\n\t0.9999999999999943,\r\n\t0.9999999999999944,\r\n\t0.9999999999999944,\r\n\t0.9999999999999946,\r\n\t0.9999999999999946,\r\n\t0.9999999999999947,\r\n\t0.9999999999999948,\r\n\t0.9999999999999948,\r\n\t0.9999999999999949,\r\n\t0.9999999999999949,\r\n\t0.999999999999995,\r\n\t0.999999999999995,\r\n\t0.9999999999999951,\r\n\t0.9999999999999952,\r\n\t0.9999999999999952,\r\n\t0.9999999999999953,\r\n\t0.9999999999999953,\r\n\t0.9999999999999954,\r\n\t0.9999999999999954,\r\n\t0.9999999999999956,\r\n\t0.9999999999999956,\r\n\t0.9999999999999957,\r\n\t0.9999999999999957,\r\n\t0.9999999999999958,\r\n\t0.9999999999999958,\r\n\t0.9999999999999959,\r\n\t0.9999999999999959,\r\n\t0.999999999999996,\r\n\t0.999999999999996,\r\n\t0.9999999999999961,\r\n\t0.9999999999999961,\r\n\t0.9999999999999961,\r\n\t0.9999999999999962,\r\n\t0.9999999999999962,\r\n\t0.9999999999999963,\r\n\t0.9999999999999963,\r\n\t0.9999999999999964,\r\n\t0.9999999999999964,\r\n\t0.9999999999999964,\r\n\t0.9999999999999966,\r\n\t0.9999999999999966,\r\n\t0.9999999999999967,\r\n\t0.9999999999999967,\r\n\t0.9999999999999967,\r\n\t0.9999999999999968,\r\n\t0.9999999999999968,\r\n\t0.9999999999999968,\r\n\t0.9999999999999969,\r\n\t0.9999999999999969,\r\n\t0.9999999999999969,\r\n\t0.999999999999997,\r\n\t0.999999999999997,\r\n\t0.999999999999997,\r\n\t0.9999999999999971,\r\n\t0.9999999999999971,\r\n\t0.9999999999999971,\r\n\t0.9999999999999972,\r\n\t0.9999999999999972,\r\n\t0.9999999999999972,\r\n\t0.9999999999999973,\r\n\t0.9999999999999973,\r\n\t0.9999999999999973,\r\n\t0.9999999999999974,\r\n\t0.9999999999999974,\r\n\t0.9999999999999974,\r\n\t0.9999999999999976,\r\n\t0.9999999999999976,\r\n\t0.9999999999999976,\r\n\t0.9999999999999976,\r\n\t0.9999999999999977,\r\n\t0.9999999999999977,\r\n\t0.9999999999999977,\r\n\t0.9999999999999977,\r\n\t0.9999999999999978,\r\n\t0.9999999999999978,\r\n\t0.9999999999999978,\r\n\t0.9999999999999978,\r\n\t0.9999999999999979,\r\n\t0.9999999999999979,\r\n\t0.9999999999999979,\r\n\t0.9999999999999979,\r\n\t0.999999999999998,\r\n\t0.999999999999998,\r\n\t0.999999999999998,\r\n\t0.999999999999998,\r\n\t0.9999999999999981,\r\n\t0.9999999999999981,\r\n\t0.9999999999999981,\r\n\t0.9999999999999981,\r\n\t0.9999999999999981,\r\n\t0.9999999999999982,\r\n\t0.9999999999999982,\r\n\t0.9999999999999982,\r\n\t0.9999999999999982,\r\n\t0.9999999999999982,\r\n\t0.9999999999999983,\r\n\t0.9999999999999983,\r\n\t0.9999999999999983,\r\n\t0.9999999999999983,\r\n\t0.9999999999999983,\r\n\t0.9999999999999984,\r\n\t0.9999999999999984,\r\n\t0.9999999999999984,\r\n\t0.9999999999999984,\r\n\t0.9999999999999984,\r\n\t0.9999999999999986,\r\n\t0.9999999999999986,\r\n\t0.9999999999999986,\r\n\t0.9999999999999986,\r\n\t0.9999999999999986,\r\n\t0.9999999999999986,\r\n\t0.9999999999999987,\r\n\t0.9999999999999987,\r\n\t0.9999999999999987,\r\n\t0.9999999999999987,\r\n\t0.9999999999999987,\r\n\t0.9999999999999987,\r\n\t0.9999999999999987,\r\n\t0.9999999999999988,\r\n\t0.9999999999999988,\r\n\t0.9999999999999988,\r\n\t0.9999999999999988,\r\n\t0.9999999999999988,\r\n\t0.9999999999999988,\r\n\t0.9999999999999988,\r\n\t0.9999999999999989,\r\n\t0.9999999999999989,\r\n\t0.9999999999999989,\r\n\t0.9999999999999989,\r\n\t0.9999999999999989,\r\n\t0.9999999999999989,\r\n\t0.9999999999999989,\r\n\t0.9999999999999989,\r\n\t0.999999999999999,\r\n\t0.999999999999999,\r\n\t0.999999999999999,\r\n\t0.999999999999999,\r\n\t0.999999999999999,\r\n\t0.999999999999999,\r\n\t0.999999999999999,\r\n\t0.999999999999999,\r\n\t0.9999999999999991,\r\n\t0.9999999999999991,\r\n\t0.9999999999999991,\r\n\t0.9999999999999991,\r\n\t0.9999999999999991,\r\n\t0.9999999999999991,\r\n\t0.9999999999999991,\r\n\t0.9999999999999991,\r\n\t0.9999999999999991,\r\n\t0.9999999999999991,\r\n\t0.9999999999999992,\r\n\t0.9999999999999992,\r\n\t0.9999999999999992,\r\n\t0.9999999999999992,\r\n\t0.9999999999999992,\r\n\t0.9999999999999992,\r\n\t0.9999999999999992,\r\n\t0.9999999999999992,\r\n\t0.9999999999999992,\r\n\t0.9999999999999992,\r\n\t0.9999999999999992,\r\n\t0.9999999999999993,\r\n\t0.9999999999999993,\r\n\t0.9999999999999993,\r\n\t0.9999999999999993,\r\n\t0.9999999999999993,\r\n\t0.9999999999999993,\r\n\t0.9999999999999993,\r\n\t0.9999999999999993,\r\n\t0.9999999999999993,\r\n\t0.9999999999999993,\r\n\t0.9999999999999993,\r\n\t0.9999999999999993\r\n]\r\n\r\nconst Y= [\r\n\t-8.0,\r\n\t-7.998399839983999,\r\n\t-7.996799679967997,\r\n\t-7.995199519951996,\r\n\t-7.993599359935994,\r\n\t-7.991999199919992,\r\n\t-7.99039903990399,\r\n\t-7.988798879887989,\r\n\t-7.987198719871987,\r\n\t-7.985598559855986,\r\n\t-7.983998399839984,\r\n\t-7.982398239823983,\r\n\t-7.980798079807981,\r\n\t-7.97919791979198,\r\n\t-7.9775977597759775,\r\n\t-7.975997599759976,\r\n\t-7.974397439743974,\r\n\t-7.972797279727973,\r\n\t-7.971197119711971,\r\n\t-7.96959695969597,\r\n\t-7.967996799679968,\r\n\t-7.966396639663967,\r\n\t-7.964796479647965,\r\n\t-7.9631963196319635,\r\n\t-7.9615961596159615,\r\n\t-7.95999599959996,\r\n\t-7.958395839583958,\r\n\t-7.956795679567957,\r\n\t-7.955195519551955,\r\n\t-7.953595359535954,\r\n\t-7.951995199519952,\r\n\t-7.950395039503951,\r\n\t-7.948794879487949,\r\n\t-7.947194719471947,\r\n\t-7.945594559455945,\r\n\t-7.943994399439944,\r\n\t-7.942394239423942,\r\n\t-7.940794079407941,\r\n\t-7.939193919391939,\r\n\t-7.937593759375938,\r\n\t-7.935993599359936,\r\n\t-7.934393439343935,\r\n\t-7.9327932793279325,\r\n\t-7.931193119311931,\r\n\t-7.929592959295929,\r\n\t-7.927992799279928,\r\n\t-7.926392639263926,\r\n\t-7.924792479247925,\r\n\t-7.923192319231923,\r\n\t-7.921592159215922,\r\n\t-7.91999199919992,\r\n\t-7.9183918391839185,\r\n\t-7.9167916791679165,\r\n\t-7.915191519151915,\r\n\t-7.913591359135913,\r\n\t-7.911991199119912,\r\n\t-7.91039103910391,\r\n\t-7.908790879087909,\r\n\t-7.907190719071907,\r\n\t-7.905590559055906,\r\n\t-7.903990399039904,\r\n\t-7.9023902390239025,\r\n\t-7.9007900790079,\r\n\t-7.899189918991899,\r\n\t-7.897589758975897,\r\n\t-7.895989598959896,\r\n\t-7.894389438943894,\r\n\t-7.892789278927893,\r\n\t-7.891189118911891,\r\n\t-7.88958895889589,\r\n\t-7.887988798879888,\r\n\t-7.886388638863886,\r\n\t-7.884788478847884,\r\n\t-7.883188318831883,\r\n\t-7.881588158815881,\r\n\t-7.87998799879988,\r\n\t-7.878387838783878,\r\n\t-7.876787678767877,\r\n\t-7.875187518751876,\r\n\t-7.873587358735874,\r\n\t-7.871987198719872,\r\n\t-7.87038703870387,\r\n\t-7.868786878687869,\r\n\t-7.867186718671867,\r\n\t-7.865586558655866,\r\n\t-7.863986398639864,\r\n\t-7.862386238623863,\r\n\t-7.860786078607861,\r\n\t-7.8591859185918596,\r\n\t-7.8575857585758575,\r\n\t-7.855985598559856,\r\n\t-7.854385438543854,\r\n\t-7.852785278527853,\r\n\t-7.851185118511851,\r\n\t-7.84958495849585,\r\n\t-7.847984798479848,\r\n\t-7.846384638463847,\r\n\t-7.844784478447845,\r\n\t-7.8431843184318435,\r\n\t-7.841584158415841,\r\n\t-7.83998399839984,\r\n\t-7.838383838383838,\r\n\t-7.836783678367837,\r\n\t-7.835183518351835,\r\n\t-7.833583358335834,\r\n\t-7.831983198319832,\r\n\t-7.830383038303831,\r\n\t-7.828782878287829,\r\n\t-7.827182718271827,\r\n\t-7.825582558255825,\r\n\t-7.823982398239824,\r\n\t-7.822382238223822,\r\n\t-7.820782078207821,\r\n\t-7.819181918191819,\r\n\t-7.817581758175818,\r\n\t-7.815981598159816,\r\n\t-7.814381438143815,\r\n\t-7.8127812781278125,\r\n\t-7.811181118111811,\r\n\t-7.809580958095809,\r\n\t-7.807980798079808,\r\n\t-7.806380638063806,\r\n\t-7.804780478047805,\r\n\t-7.803180318031803,\r\n\t-7.801580158015802,\r\n\t-7.7999799979998,\r\n\t-7.7983798379837985,\r\n\t-7.7967796779677965,\r\n\t-7.795179517951795,\r\n\t-7.793579357935793,\r\n\t-7.791979197919792,\r\n\t-7.79037903790379,\r\n\t-7.788778877887789,\r\n\t-7.787178717871787,\r\n\t-7.785578557855786,\r\n\t-7.783978397839784,\r\n\t-7.7823782378237825,\r\n\t-7.78077807780778,\r\n\t-7.779177917791779,\r\n\t-7.777577757775777,\r\n\t-7.775977597759776,\r\n\t-7.774377437743774,\r\n\t-7.772777277727773,\r\n\t-7.771177117711771,\r\n\t-7.76957695769577,\r\n\t-7.767976797679768,\r\n\t-7.766376637663766,\r\n\t-7.764776477647764,\r\n\t-7.763176317631763,\r\n\t-7.761576157615761,\r\n\t-7.75997599759976,\r\n\t-7.758375837583758,\r\n\t-7.756775677567757,\r\n\t-7.755175517551756,\r\n\t-7.7535753575357536,\r\n\t-7.751975197519752,\r\n\t-7.75037503750375,\r\n\t-7.748774877487749,\r\n\t-7.747174717471747,\r\n\t-7.745574557455746,\r\n\t-7.743974397439744,\r\n\t-7.742374237423743,\r\n\t-7.740774077407741,\r\n\t-7.7391739173917395,\r\n\t-7.7375737573757375,\r\n\t-7.735973597359736,\r\n\t-7.734373437343734,\r\n\t-7.732773277327733,\r\n\t-7.731173117311731,\r\n\t-7.72957295729573,\r\n\t-7.727972797279728,\r\n\t-7.726372637263727,\r\n\t-7.724772477247725,\r\n\t-7.7231723172317235,\r\n\t-7.721572157215721,\r\n\t-7.71997199719972,\r\n\t-7.718371837183718,\r\n\t-7.716771677167717,\r\n\t-7.715171517151715,\r\n\t-7.713571357135714,\r\n\t-7.711971197119712,\r\n\t-7.710371037103711,\r\n\t-7.708770877087709,\r\n\t-7.707170717071707,\r\n\t-7.705570557055705,\r\n\t-7.703970397039704,\r\n\t-7.702370237023702,\r\n\t-7.700770077007701,\r\n\t-7.699169916991699,\r\n\t-7.697569756975698,\r\n\t-7.695969596959696,\r\n\t-7.694369436943695,\r\n\t-7.6927692769276925,\r\n\t-7.691169116911691,\r\n\t-7.689568956895689,\r\n\t-7.687968796879688,\r\n\t-7.686368636863686,\r\n\t-7.684768476847685,\r\n\t-7.683168316831683,\r\n\t-7.681568156815682,\r\n\t-7.67996799679968,\r\n\t-7.6783678367836785,\r\n\t-7.6767676767676765,\r\n\t-7.675167516751675,\r\n\t-7.673567356735673,\r\n\t-7.671967196719672,\r\n\t-7.67036703670367,\r\n\t-7.668766876687669,\r\n\t-7.667166716671667,\r\n\t-7.665566556655666,\r\n\t-7.663966396639664,\r\n\t-7.6623662366236625,\r\n\t-7.66076607660766,\r\n\t-7.659165916591659,\r\n\t-7.657565756575657,\r\n\t-7.655965596559656,\r\n\t-7.654365436543654,\r\n\t-7.652765276527653,\r\n\t-7.651165116511651,\r\n\t-7.64956495649565,\r\n\t-7.6479647964796476,\r\n\t-7.646364636463646,\r\n\t-7.644764476447644,\r\n\t-7.643164316431643,\r\n\t-7.641564156415642,\r\n\t-7.63996399639964,\r\n\t-7.638363836383638,\r\n\t-7.636763676367637,\r\n\t-7.635163516351636,\r\n\t-7.6335633563356335,\r\n\t-7.6319631963196315,\r\n\t-7.63036303630363,\r\n\t-7.628762876287629,\r\n\t-7.627162716271627,\r\n\t-7.625562556255626,\r\n\t-7.623962396239624,\r\n\t-7.622362236223623,\r\n\t-7.620762076207621,\r\n\t-7.6191619161916195,\r\n\t-7.6175617561756175,\r\n\t-7.615961596159616,\r\n\t-7.614361436143614,\r\n\t-7.612761276127613,\r\n\t-7.611161116111611,\r\n\t-7.60956095609561,\r\n\t-7.607960796079608,\r\n\t-7.606360636063607,\r\n\t-7.604760476047605,\r\n\t-7.6031603160316035,\r\n\t-7.601560156015601,\r\n\t-7.5999599959996,\r\n\t-7.598359835983598,\r\n\t-7.596759675967597,\r\n\t-7.595159515951595,\r\n\t-7.593559355935594,\r\n\t-7.591959195919592,\r\n\t-7.590359035903591,\r\n\t-7.588758875887589,\r\n\t-7.587158715871587,\r\n\t-7.585558555855585,\r\n\t-7.583958395839584,\r\n\t-7.582358235823582,\r\n\t-7.580758075807581,\r\n\t-7.579157915791579,\r\n\t-7.577557755775578,\r\n\t-7.575957595759576,\r\n\t-7.574357435743575,\r\n\t-7.5727572757275725,\r\n\t-7.571157115711571,\r\n\t-7.569556955695569,\r\n\t-7.567956795679568,\r\n\t-7.566356635663566,\r\n\t-7.564756475647565,\r\n\t-7.563156315631563,\r\n\t-7.561556155615562,\r\n\t-7.55995599559956,\r\n\t-7.5583558355835585,\r\n\t-7.5567556755675565,\r\n\t-7.555155515551555,\r\n\t-7.553555355535553,\r\n\t-7.551955195519552,\r\n\t-7.55035503550355,\r\n\t-7.548754875487549,\r\n\t-7.547154715471547,\r\n\t-7.545554555455546,\r\n\t-7.543954395439544,\r\n\t-7.542354235423542,\r\n\t-7.54075407540754,\r\n\t-7.539153915391539,\r\n\t-7.537553755375537,\r\n\t-7.535953595359536,\r\n\t-7.534353435343534,\r\n\t-7.532753275327533,\r\n\t-7.531153115311531,\r\n\t-7.52955295529553,\r\n\t-7.5279527952795275,\r\n\t-7.526352635263526,\r\n\t-7.524752475247524,\r\n\t-7.523152315231523,\r\n\t-7.521552155215522,\r\n\t-7.51995199519952,\r\n\t-7.518351835183518,\r\n\t-7.516751675167517,\r\n\t-7.515151515151516,\r\n\t-7.5135513551355135,\r\n\t-7.5119511951195115,\r\n\t-7.51035103510351,\r\n\t-7.508750875087509,\r\n\t-7.507150715071507,\r\n\t-7.505550555055506,\r\n\t-7.503950395039504,\r\n\t-7.502350235023503,\r\n\t-7.500750075007501,\r\n\t-7.4991499149914995,\r\n\t-7.4975497549754975,\r\n\t-7.495949594959496,\r\n\t-7.494349434943494,\r\n\t-7.492749274927493,\r\n\t-7.491149114911491,\r\n\t-7.48954895489549,\r\n\t-7.487948794879488,\r\n\t-7.486348634863487,\r\n\t-7.484748474847485,\r\n\t-7.4831483148314835,\r\n\t-7.481548154815481,\r\n\t-7.47994799479948,\r\n\t-7.478347834783478,\r\n\t-7.476747674767477,\r\n\t-7.475147514751475,\r\n\t-7.473547354735474,\r\n\t-7.471947194719472,\r\n\t-7.470347034703471,\r\n\t-7.468746874687469,\r\n\t-7.467146714671467,\r\n\t-7.465546554655465,\r\n\t-7.463946394639464,\r\n\t-7.462346234623462,\r\n\t-7.460746074607461,\r\n\t-7.459145914591459,\r\n\t-7.457545754575458,\r\n\t-7.455945594559456,\r\n\t-7.4543454345434546,\r\n\t-7.4527452745274525,\r\n\t-7.451145114511451,\r\n\t-7.449544954495449,\r\n\t-7.447944794479448,\r\n\t-7.446344634463446,\r\n\t-7.444744474447445,\r\n\t-7.443144314431443,\r\n\t-7.441544154415442,\r\n\t-7.43994399439944,\r\n\t-7.4383438343834385,\r\n\t-7.436743674367436,\r\n\t-7.435143514351435,\r\n\t-7.433543354335433,\r\n\t-7.431943194319432,\r\n\t-7.43034303430343,\r\n\t-7.428742874287429,\r\n\t-7.427142714271427,\r\n\t-7.425542554255426,\r\n\t-7.423942394239424,\r\n\t-7.422342234223422,\r\n\t-7.42074207420742,\r\n\t-7.419141914191419,\r\n\t-7.417541754175417,\r\n\t-7.415941594159416,\r\n\t-7.414341434143414,\r\n\t-7.412741274127413,\r\n\t-7.411141114111411,\r\n\t-7.40954095409541,\r\n\t-7.407940794079408,\r\n\t-7.406340634063406,\r\n\t-7.404740474047404,\r\n\t-7.403140314031403,\r\n\t-7.401540154015402,\r\n\t-7.3999399939994,\r\n\t-7.398339833983398,\r\n\t-7.396739673967397,\r\n\t-7.395139513951396,\r\n\t-7.3935393539353935,\r\n\t-7.3919391939193915,\r\n\t-7.39033903390339,\r\n\t-7.388738873887389,\r\n\t-7.387138713871387,\r\n\t-7.385538553855385,\r\n\t-7.383938393839384,\r\n\t-7.382338233823383,\r\n\t-7.380738073807381,\r\n\t-7.379137913791379,\r\n\t-7.3775377537753775,\r\n\t-7.375937593759376,\r\n\t-7.374337433743374,\r\n\t-7.372737273727373,\r\n\t-7.371137113711371,\r\n\t-7.36953695369537,\r\n\t-7.367936793679368,\r\n\t-7.366336633663367,\r\n\t-7.364736473647365,\r\n\t-7.3631363136313634,\r\n\t-7.361536153615361,\r\n\t-7.35993599359936,\r\n\t-7.358335833583358,\r\n\t-7.356735673567357,\r\n\t-7.355135513551355,\r\n\t-7.353535353535354,\r\n\t-7.351935193519352,\r\n\t-7.350335033503351,\r\n\t-7.3487348734873486,\r\n\t-7.347134713471347,\r\n\t-7.345534553455345,\r\n\t-7.343934393439344,\r\n\t-7.342334233423342,\r\n\t-7.340734073407341,\r\n\t-7.339133913391339,\r\n\t-7.337533753375338,\r\n\t-7.335933593359336,\r\n\t-7.3343334333433345,\r\n\t-7.3327332733273325,\r\n\t-7.331133113311331,\r\n\t-7.329532953295329,\r\n\t-7.327932793279328,\r\n\t-7.326332633263326,\r\n\t-7.324732473247325,\r\n\t-7.323132313231323,\r\n\t-7.321532153215322,\r\n\t-7.31993199319932,\r\n\t-7.3183318331833185,\r\n\t-7.316731673167316,\r\n\t-7.315131513151315,\r\n\t-7.313531353135313,\r\n\t-7.311931193119312,\r\n\t-7.31033103310331,\r\n\t-7.308730873087309,\r\n\t-7.307130713071307,\r\n\t-7.305530553055306,\r\n\t-7.303930393039304,\r\n\t-7.302330233023302,\r\n\t-7.3007300730073,\r\n\t-7.299129912991299,\r\n\t-7.297529752975297,\r\n\t-7.295929592959296,\r\n\t-7.294329432943294,\r\n\t-7.292729272927293,\r\n\t-7.291129112911291,\r\n\t-7.28952895289529,\r\n\t-7.2879287928792875,\r\n\t-7.286328632863286,\r\n\t-7.284728472847284,\r\n\t-7.283128312831283,\r\n\t-7.281528152815282,\r\n\t-7.27992799279928,\r\n\t-7.278327832783278,\r\n\t-7.276727672767277,\r\n\t-7.275127512751276,\r\n\t-7.2735273527352735,\r\n\t-7.2719271927192715,\r\n\t-7.27032703270327,\r\n\t-7.268726872687269,\r\n\t-7.267126712671267,\r\n\t-7.265526552655265,\r\n\t-7.263926392639264,\r\n\t-7.262326232623263,\r\n\t-7.260726072607261,\r\n\t-7.259125912591259,\r\n\t-7.2575257525752574,\r\n\t-7.255925592559256,\r\n\t-7.254325432543254,\r\n\t-7.252725272527253,\r\n\t-7.251125112511251,\r\n\t-7.24952495249525,\r\n\t-7.247924792479248,\r\n\t-7.246324632463247,\r\n\t-7.244724472447245,\r\n\t-7.243124312431243,\r\n\t-7.241524152415241,\r\n\t-7.23992399239924,\r\n\t-7.238323832383238,\r\n\t-7.236723672367237,\r\n\t-7.235123512351235,\r\n\t-7.233523352335234,\r\n\t-7.231923192319232,\r\n\t-7.230323032303231,\r\n\t-7.2287228722872285,\r\n\t-7.227122712271227,\r\n\t-7.225522552255225,\r\n\t-7.223922392239224,\r\n\t-7.222322232223222,\r\n\t-7.220722072207221,\r\n\t-7.219121912191219,\r\n\t-7.217521752175218,\r\n\t-7.215921592159216,\r\n\t-7.2143214321432145,\r\n\t-7.2127212721272125,\r\n\t-7.211121112111211,\r\n\t-7.209520952095209,\r\n\t-7.207920792079208,\r\n\t-7.206320632063206,\r\n\t-7.204720472047205,\r\n\t-7.203120312031203,\r\n\t-7.201520152015202,\r\n\t-7.1999199919992,\r\n\t-7.1983198319831985,\r\n\t-7.196719671967196,\r\n\t-7.195119511951195,\r\n\t-7.193519351935193,\r\n\t-7.191919191919192,\r\n\t-7.19031903190319,\r\n\t-7.188718871887189,\r\n\t-7.187118711871187,\r\n\t-7.185518551855186,\r\n\t-7.183918391839184,\r\n\t-7.182318231823182,\r\n\t-7.18071807180718,\r\n\t-7.179117911791179,\r\n\t-7.177517751775177,\r\n\t-7.175917591759176,\r\n\t-7.174317431743174,\r\n\t-7.172717271727173,\r\n\t-7.171117111711171,\r\n\t-7.16951695169517,\r\n\t-7.1679167916791675,\r\n\t-7.166316631663166,\r\n\t-7.164716471647164,\r\n\t-7.163116311631163,\r\n\t-7.161516151615162,\r\n\t-7.15991599159916,\r\n\t-7.158315831583158,\r\n\t-7.156715671567157,\r\n\t-7.1551155115511555,\r\n\t-7.1535153515351535,\r\n\t-7.1519151915191514,\r\n\t-7.15031503150315,\r\n\t-7.148714871487149,\r\n\t-7.147114711471147,\r\n\t-7.145514551455145,\r\n\t-7.143914391439144,\r\n\t-7.142314231423143,\r\n\t-7.140714071407141,\r\n\t-7.139113911391139,\r\n\t-7.137513751375137,\r\n\t-7.135913591359136,\r\n\t-7.134313431343134,\r\n\t-7.132713271327133,\r\n\t-7.131113111311131,\r\n\t-7.12951295129513,\r\n\t-7.127912791279128,\r\n\t-7.126312631263127,\r\n\t-7.124712471247125,\r\n\t-7.123112311231123,\r\n\t-7.121512151215121,\r\n\t-7.11991199119912,\r\n\t-7.118311831183118,\r\n\t-7.116711671167117,\r\n\t-7.115111511151115,\r\n\t-7.113511351135114,\r\n\t-7.111911191119112,\r\n\t-7.110311031103111,\r\n\t-7.1087108710871085,\r\n\t-7.107110711071107,\r\n\t-7.105510551055105,\r\n\t-7.103910391039104,\r\n\t-7.102310231023102,\r\n\t-7.100710071007101,\r\n\t-7.099109910991099,\r\n\t-7.097509750975098,\r\n\t-7.095909590959096,\r\n\t-7.0943094309430945,\r\n\t-7.0927092709270925,\r\n\t-7.091109110911091,\r\n\t-7.089508950895089,\r\n\t-7.087908790879088,\r\n\t-7.086308630863086,\r\n\t-7.084708470847085,\r\n\t-7.083108310831083,\r\n\t-7.081508150815082,\r\n\t-7.07990799079908,\r\n\t-7.0783078307830785,\r\n\t-7.076707670767076,\r\n\t-7.075107510751075,\r\n\t-7.073507350735073,\r\n\t-7.071907190719072,\r\n\t-7.07030703070307,\r\n\t-7.068706870687069,\r\n\t-7.067106710671067,\r\n\t-7.065506550655066,\r\n\t-7.063906390639064,\r\n\t-7.062306230623062,\r\n\t-7.06070607060706,\r\n\t-7.059105910591059,\r\n\t-7.057505750575057,\r\n\t-7.055905590559056,\r\n\t-7.054305430543054,\r\n\t-7.052705270527053,\r\n\t-7.051105110511051,\r\n\t-7.0495049504950495,\r\n\t-7.0479047904790475,\r\n\t-7.046304630463046,\r\n\t-7.044704470447044,\r\n\t-7.043104310431043,\r\n\t-7.041504150415042,\r\n\t-7.03990399039904,\r\n\t-7.038303830383038,\r\n\t-7.036703670367037,\r\n\t-7.0351035103510355,\r\n\t-7.0335033503350335,\r\n\t-7.031903190319031,\r\n\t-7.03030303030303,\r\n\t-7.028702870287029,\r\n\t-7.027102710271027,\r\n\t-7.025502550255025,\r\n\t-7.023902390239024,\r\n\t-7.022302230223023,\r\n\t-7.020702070207021,\r\n\t-7.019101910191019,\r\n\t-7.017501750175017,\r\n\t-7.015901590159016,\r\n\t-7.014301430143014,\r\n\t-7.012701270127013,\r\n\t-7.011101110111011,\r\n\t-7.00950095009501,\r\n\t-7.007900790079008,\r\n\t-7.006300630063007,\r\n\t-7.004700470047005,\r\n\t-7.003100310031003,\r\n\t-7.001500150015001,\r\n\t-6.999899989998999,\r\n\t-6.998299829982998,\r\n\t-6.996699669966997,\r\n\t-6.995099509950995,\r\n\t-6.993499349934994,\r\n\t-6.991899189918992,\r\n\t-6.990299029902991,\r\n\t-6.9886988698869885,\r\n\t-6.987098709870987,\r\n\t-6.985498549854985,\r\n\t-6.983898389838984,\r\n\t-6.982298229822982,\r\n\t-6.980698069806981,\r\n\t-6.979097909790979,\r\n\t-6.977497749774978,\r\n\t-6.975897589758976,\r\n\t-6.9742974297429745,\r\n\t-6.9726972697269725,\r\n\t-6.971097109710971,\r\n\t-6.969496949694969,\r\n\t-6.967896789678968,\r\n\t-6.966296629662966,\r\n\t-6.964696469646965,\r\n\t-6.963096309630963,\r\n\t-6.961496149614962,\r\n\t-6.95989598959896,\r\n\t-6.9582958295829584,\r\n\t-6.956695669566956,\r\n\t-6.955095509550955,\r\n\t-6.953495349534953,\r\n\t-6.951895189518952,\r\n\t-6.95029502950295,\r\n\t-6.948694869486949,\r\n\t-6.947094709470947,\r\n\t-6.945494549454946,\r\n\t-6.9438943894389435,\r\n\t-6.942294229422942,\r\n\t-6.94069406940694,\r\n\t-6.939093909390939,\r\n\t-6.937493749374937,\r\n\t-6.935893589358936,\r\n\t-6.934293429342935,\r\n\t-6.932693269326933,\r\n\t-6.931093109310931,\r\n\t-6.9294929492949295,\r\n\t-6.927892789278928,\r\n\t-6.926292629262926,\r\n\t-6.924692469246924,\r\n\t-6.923092309230923,\r\n\t-6.921492149214922,\r\n\t-6.91989198919892,\r\n\t-6.918291829182918,\r\n\t-6.916691669166917,\r\n\t-6.9150915091509155,\r\n\t-6.9134913491349135,\r\n\t-6.911891189118911,\r\n\t-6.91029102910291,\r\n\t-6.908690869086909,\r\n\t-6.907090709070907,\r\n\t-6.905490549054905,\r\n\t-6.903890389038904,\r\n\t-6.902290229022903,\r\n\t-6.900690069006901,\r\n\t-6.899089908990899,\r\n\t-6.897489748974897,\r\n\t-6.895889588958896,\r\n\t-6.894289428942894,\r\n\t-6.892689268926892,\r\n\t-6.891089108910891,\r\n\t-6.88948894889489,\r\n\t-6.887888788878888,\r\n\t-6.886288628862886,\r\n\t-6.884688468846885,\r\n\t-6.883088308830883,\r\n\t-6.881488148814881,\r\n\t-6.879887988798879,\r\n\t-6.878287828782878,\r\n\t-6.876687668766877,\r\n\t-6.875087508750875,\r\n\t-6.873487348734874,\r\n\t-6.871887188718872,\r\n\t-6.870287028702871,\r\n\t-6.8686868686868685,\r\n\t-6.867086708670867,\r\n\t-6.865486548654865,\r\n\t-6.863886388638864,\r\n\t-6.862286228622862,\r\n\t-6.860686068606861,\r\n\t-6.859085908590859,\r\n\t-6.857485748574858,\r\n\t-6.855885588558856,\r\n\t-6.8542854285428545,\r\n\t-6.8526852685268524,\r\n\t-6.851085108510851,\r\n\t-6.849484948494849,\r\n\t-6.847884788478848,\r\n\t-6.846284628462846,\r\n\t-6.844684468446845,\r\n\t-6.843084308430843,\r\n\t-6.841484148414842,\r\n\t-6.83988398839884,\r\n\t-6.838283828382838,\r\n\t-6.836683668366836,\r\n\t-6.835083508350835,\r\n\t-6.833483348334833,\r\n\t-6.831883188318832,\r\n\t-6.83028302830283,\r\n\t-6.828682868286829,\r\n\t-6.827082708270827,\r\n\t-6.825482548254826,\r\n\t-6.8238823882388235,\r\n\t-6.822282228222822,\r\n\t-6.82068206820682,\r\n\t-6.819081908190819,\r\n\t-6.817481748174817,\r\n\t-6.815881588158816,\r\n\t-6.814281428142815,\r\n\t-6.812681268126813,\r\n\t-6.811081108110811,\r\n\t-6.8094809480948095,\r\n\t-6.807880788078808,\r\n\t-6.806280628062806,\r\n\t-6.804680468046804,\r\n\t-6.803080308030803,\r\n\t-6.801480148014802,\r\n\t-6.7998799879988,\r\n\t-6.798279827982798,\r\n\t-6.796679667966797,\r\n\t-6.7950795079507955,\r\n\t-6.7934793479347935,\r\n\t-6.791879187918791,\r\n\t-6.79027902790279,\r\n\t-6.788678867886789,\r\n\t-6.787078707870787,\r\n\t-6.785478547854785,\r\n\t-6.783878387838784,\r\n\t-6.782278227822783,\r\n\t-6.780678067806781,\r\n\t-6.779077907790779,\r\n\t-6.777477747774777,\r\n\t-6.775877587758776,\r\n\t-6.774277427742774,\r\n\t-6.772677267726772,\r\n\t-6.771077107710771,\r\n\t-6.76947694769477,\r\n\t-6.767876787678768,\r\n\t-6.766276627662766,\r\n\t-6.764676467646765,\r\n\t-6.763076307630763,\r\n\t-6.761476147614761,\r\n\t-6.759875987598759,\r\n\t-6.758275827582758,\r\n\t-6.756675667566757,\r\n\t-6.755075507550755,\r\n\t-6.753475347534754,\r\n\t-6.751875187518752,\r\n\t-6.7502750275027505,\r\n\t-6.7486748674867485,\r\n\t-6.747074707470747,\r\n\t-6.745474547454745,\r\n\t-6.743874387438744,\r\n\t-6.742274227422742,\r\n\t-6.740674067406741,\r\n\t-6.739073907390739,\r\n\t-6.737473747374738,\r\n\t-6.735873587358736,\r\n\t-6.7342734273427345,\r\n\t-6.732673267326732,\r\n\t-6.731073107310731,\r\n\t-6.729472947294729,\r\n\t-6.727872787278728,\r\n\t-6.726272627262726,\r\n\t-6.724672467246725,\r\n\t-6.723072307230723,\r\n\t-6.721472147214722,\r\n\t-6.71987198719872,\r\n\t-6.718271827182718,\r\n\t-6.716671667166716,\r\n\t-6.715071507150715,\r\n\t-6.713471347134713,\r\n\t-6.711871187118712,\r\n\t-6.71027102710271,\r\n\t-6.708670867086709,\r\n\t-6.707070707070707,\r\n\t-6.705470547054706,\r\n\t-6.7038703870387035,\r\n\t-6.702270227022702,\r\n\t-6.7006700670067,\r\n\t-6.699069906990699,\r\n\t-6.697469746974697,\r\n\t-6.695869586958696,\r\n\t-6.694269426942695,\r\n\t-6.692669266926693,\r\n\t-6.691069106910691,\r\n\t-6.6894689468946895,\r\n\t-6.687868786878688,\r\n\t-6.686268626862686,\r\n\t-6.684668466846684,\r\n\t-6.683068306830683,\r\n\t-6.681468146814682,\r\n\t-6.67986798679868,\r\n\t-6.678267826782678,\r\n\t-6.676667666766677,\r\n\t-6.6750675067506755,\r\n\t-6.6734673467346735,\r\n\t-6.671867186718671,\r\n\t-6.67026702670267,\r\n\t-6.668666866686669,\r\n\t-6.667066706670667,\r\n\t-6.665466546654665,\r\n\t-6.663866386638664,\r\n\t-6.662266226622663,\r\n\t-6.660666066606661,\r\n\t-6.659065906590659,\r\n\t-6.657465746574657,\r\n\t-6.655865586558656,\r\n\t-6.654265426542654,\r\n\t-6.652665266526652,\r\n\t-6.651065106510651,\r\n\t-6.64946494649465,\r\n\t-6.647864786478648,\r\n\t-6.646264626462646,\r\n\t-6.6446644664466445,\r\n\t-6.643064306430643,\r\n\t-6.641464146414641,\r\n\t-6.639863986398639,\r\n\t-6.638263826382638,\r\n\t-6.636663666366637,\r\n\t-6.635063506350635,\r\n\t-6.633463346334634,\r\n\t-6.631863186318632,\r\n\t-6.6302630263026305,\r\n\t-6.6286628662866285,\r\n\t-6.627062706270627,\r\n\t-6.625462546254625,\r\n\t-6.623862386238624,\r\n\t-6.622262226222622,\r\n\t-6.620662066206621,\r\n\t-6.619061906190619,\r\n\t-6.617461746174618,\r\n\t-6.615861586158616,\r\n\t-6.6142614261426145,\r\n\t-6.612661266126612,\r\n\t-6.611061106110611,\r\n\t-6.609460946094609,\r\n\t-6.607860786078608,\r\n\t-6.606260626062606,\r\n\t-6.604660466046605,\r\n\t-6.603060306030603,\r\n\t-6.601460146014602,\r\n\t-6.5998599859986,\r\n\t-6.598259825982598,\r\n\t-6.596659665966596,\r\n\t-6.595059505950595,\r\n\t-6.593459345934593,\r\n\t-6.591859185918592,\r\n\t-6.59025902590259,\r\n\t-6.588658865886589,\r\n\t-6.587058705870587,\r\n\t-6.585458545854586,\r\n\t-6.5838583858385835,\r\n\t-6.582258225822582,\r\n\t-6.58065806580658,\r\n\t-6.579057905790579,\r\n\t-6.577457745774577,\r\n\t-6.575857585758576,\r\n\t-6.574257425742574,\r\n\t-6.572657265726573,\r\n\t-6.571057105710571,\r\n\t-6.5694569456945695,\r\n\t-6.567856785678568,\r\n\t-6.566256625662566,\r\n\t-6.564656465646564,\r\n\t-6.563056305630563,\r\n\t-6.561456145614562,\r\n\t-6.55985598559856,\r\n\t-6.558255825582558,\r\n\t-6.556655665566557,\r\n\t-6.5550555055505555,\r\n\t-6.5534553455345534,\r\n\t-6.551855185518551,\r\n\t-6.55025502550255,\r\n\t-6.548654865486549,\r\n\t-6.547054705470547,\r\n\t-6.545454545454545,\r\n\t-6.543854385438544,\r\n\t-6.542254225422543,\r\n\t-6.540654065406541,\r\n\t-6.5390539053905385,\r\n\t-6.537453745374537,\r\n\t-6.535853585358536,\r\n\t-6.534253425342534,\r\n\t-6.532653265326532,\r\n\t-6.531053105310531,\r\n\t-6.52945294529453,\r\n\t-6.527852785278528,\r\n\t-6.526252625262526,\r\n\t-6.5246524652465245,\r\n\t-6.523052305230523,\r\n\t-6.521452145214521,\r\n\t-6.519851985198519,\r\n\t-6.518251825182518,\r\n\t-6.516651665166517,\r\n\t-6.515051505150515,\r\n\t-6.513451345134513,\r\n\t-6.511851185118512,\r\n\t-6.5102510251025105,\r\n\t-6.5086508650865085,\r\n\t-6.507050705070507,\r\n\t-6.505450545054505,\r\n\t-6.503850385038504,\r\n\t-6.502250225022502,\r\n\t-6.500650065006501,\r\n\t-6.499049904990499,\r\n\t-6.497449744974498,\r\n\t-6.495849584958496,\r\n\t-6.4942494249424945,\r\n\t-6.492649264926492,\r\n\t-6.491049104910491,\r\n\t-6.489448944894489,\r\n\t-6.487848784878488,\r\n\t-6.486248624862486,\r\n\t-6.484648464846485,\r\n\t-6.483048304830483,\r\n\t-6.481448144814482,\r\n\t-6.47984798479848,\r\n\t-6.478247824782478,\r\n\t-6.476647664766476,\r\n\t-6.475047504750475,\r\n\t-6.473447344734473,\r\n\t-6.471847184718472,\r\n\t-6.47024702470247,\r\n\t-6.468646864686469,\r\n\t-6.467046704670467,\r\n\t-6.4654465446544656,\r\n\t-6.4638463846384635,\r\n\t-6.462246224622462,\r\n\t-6.46064606460646,\r\n\t-6.459045904590459,\r\n\t-6.457445744574457,\r\n\t-6.455845584558456,\r\n\t-6.454245424542454,\r\n\t-6.452645264526453,\r\n\t-6.451045104510451,\r\n\t-6.4494449444944495,\r\n\t-6.447844784478448,\r\n\t-6.446244624462446,\r\n\t-6.444644464446444,\r\n\t-6.443044304430443,\r\n\t-6.441444144414442,\r\n\t-6.43984398439844,\r\n\t-6.438243824382438,\r\n\t-6.436643664366437,\r\n\t-6.4350435043504355,\r\n\t-6.433443344334433,\r\n\t-6.431843184318431,\r\n\t-6.43024302430243,\r\n\t-6.428642864286429,\r\n\t-6.427042704270427,\r\n\t-6.425442544254425,\r\n\t-6.423842384238424,\r\n\t-6.422242224222423,\r\n\t-6.420642064206421,\r\n\t-6.4190419041904185,\r\n\t-6.417441744174417,\r\n\t-6.415841584158416,\r\n\t-6.414241424142414,\r\n\t-6.412641264126412,\r\n\t-6.411041104110411,\r\n\t-6.40944094409441,\r\n\t-6.407840784078408,\r\n\t-6.406240624062406,\r\n\t-6.4046404640464045,\r\n\t-6.403040304030403,\r\n\t-6.401440144014401,\r\n\t-6.399839983998399,\r\n\t-6.398239823982398,\r\n\t-6.396639663966397,\r\n\t-6.395039503950395,\r\n\t-6.393439343934393,\r\n\t-6.391839183918392,\r\n\t-6.3902390239023905,\r\n\t-6.3886388638863885,\r\n\t-6.387038703870387,\r\n\t-6.385438543854385,\r\n\t-6.383838383838384,\r\n\t-6.382238223822382,\r\n\t-6.380638063806381,\r\n\t-6.379037903790379,\r\n\t-6.377437743774378,\r\n\t-6.375837583758376,\r\n\t-6.3742374237423745,\r\n\t-6.372637263726372,\r\n\t-6.371037103710371,\r\n\t-6.369436943694369,\r\n\t-6.367836783678368,\r\n\t-6.366236623662366,\r\n\t-6.364636463646365,\r\n\t-6.363036303630363,\r\n\t-6.361436143614362,\r\n\t-6.3598359835983596,\r\n\t-6.358235823582358,\r\n\t-6.356635663566356,\r\n\t-6.355035503550355,\r\n\t-6.353435343534353,\r\n\t-6.351835183518352,\r\n\t-6.35023502350235,\r\n\t-6.348634863486349,\r\n\t-6.347034703470347,\r\n\t-6.3454345434543455,\r\n\t-6.3438343834383435,\r\n\t-6.342234223422342,\r\n\t-6.34063406340634,\r\n\t-6.339033903390339,\r\n\t-6.337433743374337,\r\n\t-6.335833583358336,\r\n\t-6.334233423342334,\r\n\t-6.332633263326333,\r\n\t-6.331033103310331,\r\n\t-6.3294329432943295,\r\n\t-6.327832783278328,\r\n\t-6.326232623262326,\r\n\t-6.324632463246324,\r\n\t-6.323032303230323,\r\n\t-6.321432143214322,\r\n\t-6.31983198319832,\r\n\t-6.318231823182318,\r\n\t-6.316631663166317,\r\n\t-6.3150315031503155,\r\n\t-6.313431343134313,\r\n\t-6.311831183118311,\r\n\t-6.31023102310231,\r\n\t-6.308630863086309,\r\n\t-6.307030703070307,\r\n\t-6.305430543054305,\r\n\t-6.303830383038304,\r\n\t-6.302230223022303,\r\n\t-6.300630063006301,\r\n\t-6.2990299029902985,\r\n\t-6.297429742974297,\r\n\t-6.295829582958296,\r\n\t-6.294229422942294,\r\n\t-6.292629262926292,\r\n\t-6.291029102910291,\r\n\t-6.28942894289429,\r\n\t-6.287828782878288,\r\n\t-6.286228622862286,\r\n\t-6.2846284628462845,\r\n\t-6.283028302830283,\r\n\t-6.281428142814281,\r\n\t-6.279827982798279,\r\n\t-6.278227822782278,\r\n\t-6.276627662766277,\r\n\t-6.275027502750275,\r\n\t-6.273427342734273,\r\n\t-6.271827182718272,\r\n\t-6.2702270227022705,\r\n\t-6.2686268626862685,\r\n\t-6.267026702670267,\r\n\t-6.265426542654265,\r\n\t-6.263826382638264,\r\n\t-6.262226222622262,\r\n\t-6.260626062606261,\r\n\t-6.259025902590259,\r\n\t-6.257425742574258,\r\n\t-6.255825582558256,\r\n\t-6.254225422542254,\r\n\t-6.252625262526252,\r\n\t-6.251025102510251,\r\n\t-6.249424942494249,\r\n\t-6.247824782478248,\r\n\t-6.246224622462246,\r\n\t-6.244624462446245,\r\n\t-6.243024302430243,\r\n\t-6.241424142414242,\r\n\t-6.2398239823982395,\r\n\t-6.238223822382238,\r\n\t-6.236623662366236,\r\n\t-6.235023502350235,\r\n\t-6.233423342334233,\r\n\t-6.231823182318232,\r\n\t-6.23022302230223,\r\n\t-6.228622862286229,\r\n\t-6.227022702270227,\r\n\t-6.2254225422542255,\r\n\t-6.2238223822382235,\r\n\t-6.222222222222222,\r\n\t-6.22062206220622,\r\n\t-6.219021902190219,\r\n\t-6.217421742174217,\r\n\t-6.215821582158216,\r\n\t-6.214221422142214,\r\n\t-6.212621262126213,\r\n\t-6.211021102110211,\r\n\t-6.2094209420942095,\r\n\t-6.207820782078208,\r\n\t-6.206220622062206,\r\n\t-6.204620462046204,\r\n\t-6.203020302030203,\r\n\t-6.201420142014202,\r\n\t-6.1998199819982,\r\n\t-6.198219821982198,\r\n\t-6.196619661966197,\r\n\t-6.1950195019501955,\r\n\t-6.193419341934193,\r\n\t-6.191819181918191,\r\n\t-6.19021902190219,\r\n\t-6.188618861886189,\r\n\t-6.187018701870187,\r\n\t-6.185418541854185,\r\n\t-6.183818381838184,\r\n\t-6.182218221822183,\r\n\t-6.180618061806181,\r\n\t-6.1790179017901785,\r\n\t-6.177417741774177,\r\n\t-6.175817581758176,\r\n\t-6.174217421742174,\r\n\t-6.172617261726172,\r\n\t-6.171017101710171,\r\n\t-6.16941694169417,\r\n\t-6.167816781678168,\r\n\t-6.166216621662166,\r\n\t-6.1646164616461645,\r\n\t-6.163016301630163,\r\n\t-6.161416141614161,\r\n\t-6.159815981598159,\r\n\t-6.158215821582158,\r\n\t-6.156615661566157,\r\n\t-6.155015501550155,\r\n\t-6.153415341534153,\r\n\t-6.151815181518152,\r\n\t-6.1502150215021505,\r\n\t-6.148614861486148,\r\n\t-6.147014701470147,\r\n\t-6.145414541454145,\r\n\t-6.143814381438144,\r\n\t-6.142214221422142,\r\n\t-6.140614061406141,\r\n\t-6.139013901390139,\r\n\t-6.137413741374138,\r\n\t-6.135813581358136,\r\n\t-6.134213421342134,\r\n\t-6.132613261326132,\r\n\t-6.131013101310131,\r\n\t-6.129412941294129,\r\n\t-6.127812781278128,\r\n\t-6.126212621262126,\r\n\t-6.124612461246125,\r\n\t-6.123012301230123,\r\n\t-6.121412141214122,\r\n\t-6.1198119811981195,\r\n\t-6.118211821182118,\r\n\t-6.116611661166116,\r\n\t-6.115011501150115,\r\n\t-6.113411341134113,\r\n\t-6.111811181118112,\r\n\t-6.11021102110211,\r\n\t-6.108610861086109,\r\n\t-6.107010701070107,\r\n\t-6.1054105410541055,\r\n\t-6.1038103810381035,\r\n\t-6.102210221022102,\r\n\t-6.1006100610061,\r\n\t-6.099009900990099,\r\n\t-6.097409740974097,\r\n\t-6.095809580958096,\r\n\t-6.094209420942094,\r\n\t-6.092609260926093,\r\n\t-6.091009100910091,\r\n\t-6.0894089408940895,\r\n\t-6.087808780878088,\r\n\t-6.086208620862086,\r\n\t-6.084608460846084,\r\n\t-6.083008300830083,\r\n\t-6.081408140814082,\r\n\t-6.07980798079808,\r\n\t-6.078207820782078,\r\n\t-6.076607660766077,\r\n\t-6.0750075007500755,\r\n\t-6.073407340734073,\r\n\t-6.071807180718071,\r\n\t-6.07020702070207,\r\n\t-6.068606860686069,\r\n\t-6.067006700670067,\r\n\t-6.065406540654065,\r\n\t-6.063806380638064,\r\n\t-6.062206220622063,\r\n\t-6.0606060606060606,\r\n\t-6.0590059005900585,\r\n\t-6.057405740574057,\r\n\t-6.055805580558056,\r\n\t-6.054205420542054,\r\n\t-6.052605260526052,\r\n\t-6.051005100510051,\r\n\t-6.04940494049405,\r\n\t-6.047804780478048,\r\n\t-6.046204620462046,\r\n\t-6.0446044604460445,\r\n\t-6.043004300430043,\r\n\t-6.041404140414041,\r\n\t-6.039803980398039,\r\n\t-6.038203820382038,\r\n\t-6.036603660366037,\r\n\t-6.035003500350035,\r\n\t-6.033403340334033,\r\n\t-6.031803180318032,\r\n\t-6.0302030203020305,\r\n\t-6.028602860286028,\r\n\t-6.027002700270027,\r\n\t-6.025402540254025,\r\n\t-6.023802380238024,\r\n\t-6.022202220222022,\r\n\t-6.020602060206021,\r\n\t-6.019001900190019,\r\n\t-6.017401740174018,\r\n\t-6.015801580158016,\r\n\t-6.014201420142014,\r\n\t-6.012601260126012,\r\n\t-6.011001100110011,\r\n\t-6.009400940094009,\r\n\t-6.007800780078008,\r\n\t-6.006200620062006,\r\n\t-6.004600460046005,\r\n\t-6.003000300030003,\r\n\t-6.001400140014002,\r\n\t-5.9997999799979995,\r\n\t-5.998199819981998,\r\n\t-5.996599659965996,\r\n\t-5.994999499949995,\r\n\t-5.993399339933994,\r\n\t-5.991799179917992,\r\n\t-5.99019901990199,\r\n\t-5.988598859885989,\r\n\t-5.986998699869988,\r\n\t-5.9853985398539855,\r\n\t-5.9837983798379835,\r\n\t-5.982198219821982,\r\n\t-5.980598059805981,\r\n\t-5.978997899789979,\r\n\t-5.977397739773977,\r\n\t-5.975797579757976,\r\n\t-5.974197419741975,\r\n\t-5.972597259725973,\r\n\t-5.970997099709971,\r\n\t-5.9693969396939695,\r\n\t-5.967796779677968,\r\n\t-5.966196619661966,\r\n\t-5.964596459645964,\r\n\t-5.962996299629963,\r\n\t-5.961396139613962,\r\n\t-5.95979597959796,\r\n\t-5.958195819581958,\r\n\t-5.956595659565957,\r\n\t-5.954995499549955,\r\n\t-5.953395339533953,\r\n\t-5.951795179517951,\r\n\t-5.95019501950195,\r\n\t-5.948594859485949,\r\n\t-5.946994699469947,\r\n\t-5.945394539453945,\r\n\t-5.943794379437944,\r\n\t-5.942194219421943,\r\n\t-5.9405940594059405,\r\n\t-5.9389938993899385,\r\n\t-5.937393739373937,\r\n\t-5.935793579357936,\r\n\t-5.934193419341934,\r\n\t-5.932593259325932,\r\n\t-5.930993099309931,\r\n\t-5.92939293929393,\r\n\t-5.927792779277928,\r\n\t-5.926192619261926,\r\n\t-5.9245924592459245,\r\n\t-5.922992299229923,\r\n\t-5.921392139213921,\r\n\t-5.919791979197919,\r\n\t-5.918191819181918,\r\n\t-5.916591659165917,\r\n\t-5.914991499149915,\r\n\t-5.913391339133913,\r\n\t-5.911791179117912,\r\n\t-5.9101910191019105,\r\n\t-5.908590859085908,\r\n\t-5.906990699069906,\r\n\t-5.905390539053905,\r\n\t-5.903790379037904,\r\n\t-5.902190219021902,\r\n\t-5.9005900590059,\r\n\t-5.898989898989899,\r\n\t-5.897389738973898,\r\n\t-5.895789578957896,\r\n\t-5.8941894189418935,\r\n\t-5.892589258925892,\r\n\t-5.890989098909891,\r\n\t-5.889388938893889,\r\n\t-5.887788778877887,\r\n\t-5.886188618861886,\r\n\t-5.884588458845885,\r\n\t-5.882988298829883,\r\n\t-5.881388138813881,\r\n\t-5.8797879787978795,\r\n\t-5.878187818781878,\r\n\t-5.876587658765876,\r\n\t-5.874987498749875,\r\n\t-5.873387338733874,\r\n\t-5.871787178717872,\r\n\t-5.87018701870187,\r\n\t-5.868586858685869,\r\n\t-5.8669866986698676,\r\n\t-5.8653865386538655,\r\n\t-5.8637863786378635,\r\n\t-5.862186218621862,\r\n\t-5.860586058605861,\r\n\t-5.858985898589859,\r\n\t-5.857385738573857,\r\n\t-5.855785578557856,\r\n\t-5.854185418541855,\r\n\t-5.852585258525853,\r\n\t-5.850985098509851,\r\n\t-5.849384938493849,\r\n\t-5.847784778477848,\r\n\t-5.846184618461846,\r\n\t-5.844584458445844,\r\n\t-5.842984298429843,\r\n\t-5.841384138413842,\r\n\t-5.83978397839784,\r\n\t-5.838183818381838,\r\n\t-5.836583658365837,\r\n\t-5.834983498349835,\r\n\t-5.833383338333833,\r\n\t-5.831783178317831,\r\n\t-5.83018301830183,\r\n\t-5.828582858285829,\r\n\t-5.826982698269827,\r\n\t-5.825382538253825,\r\n\t-5.823782378237824,\r\n\t-5.822182218221823,\r\n\t-5.8205820582058205,\r\n\t-5.8189818981898185,\r\n\t-5.817381738173817,\r\n\t-5.815781578157816,\r\n\t-5.814181418141814,\r\n\t-5.812581258125812,\r\n\t-5.810981098109811,\r\n\t-5.80938093809381,\r\n\t-5.807780778077808,\r\n\t-5.806180618061806,\r\n\t-5.8045804580458045,\r\n\t-5.802980298029803,\r\n\t-5.801380138013801,\r\n\t-5.799779977997799,\r\n\t-5.798179817981798,\r\n\t-5.796579657965797,\r\n\t-5.794979497949795,\r\n\t-5.793379337933793,\r\n\t-5.791779177917792,\r\n\t-5.7901790179017905,\r\n\t-5.788578857885788,\r\n\t-5.786978697869786,\r\n\t-5.785378537853785,\r\n\t-5.783778377837784,\r\n\t-5.782178217821782,\r\n\t-5.78057805780578,\r\n\t-5.778977897789779,\r\n\t-5.777377737773778,\r\n\t-5.775777577757776,\r\n\t-5.7741774177417735,\r\n\t-5.772577257725772,\r\n\t-5.770977097709771,\r\n\t-5.769376937693769,\r\n\t-5.767776777677767,\r\n\t-5.766176617661766,\r\n\t-5.764576457645765,\r\n\t-5.762976297629763,\r\n\t-5.761376137613761,\r\n\t-5.7597759775977595,\r\n\t-5.758175817581758,\r\n\t-5.756575657565756,\r\n\t-5.754975497549754,\r\n\t-5.753375337533754,\r\n\t-5.751775177517752,\r\n\t-5.75017501750175,\r\n\t-5.748574857485749,\r\n\t-5.7469746974697475,\r\n\t-5.7453745374537455,\r\n\t-5.743774377437743,\r\n\t-5.742174217421742,\r\n\t-5.740574057405741,\r\n\t-5.738973897389739,\r\n\t-5.737373737373737,\r\n\t-5.735773577357736,\r\n\t-5.734173417341735,\r\n\t-5.732573257325733,\r\n\t-5.730973097309731,\r\n\t-5.729372937293729,\r\n\t-5.727772777277728,\r\n\t-5.726172617261726,\r\n\t-5.724572457245724,\r\n\t-5.722972297229723,\r\n\t-5.721372137213722,\r\n\t-5.71977197719772,\r\n\t-5.718171817181718,\r\n\t-5.716571657165717,\r\n\t-5.714971497149715,\r\n\t-5.713371337133713,\r\n\t-5.711771177117711,\r\n\t-5.71017101710171,\r\n\t-5.708570857085709,\r\n\t-5.706970697069707,\r\n\t-5.705370537053705,\r\n\t-5.703770377037704,\r\n\t-5.702170217021703,\r\n\t-5.7005700570057005,\r\n\t-5.6989698969896985,\r\n\t-5.697369736973697,\r\n\t-5.695769576957696,\r\n\t-5.694169416941694,\r\n\t-5.692569256925692,\r\n\t-5.690969096909691,\r\n\t-5.68936893689369,\r\n\t-5.687768776877688,\r\n\t-5.686168616861686,\r\n\t-5.6845684568456845,\r\n\t-5.682968296829683,\r\n\t-5.681368136813681,\r\n\t-5.679767976797679,\r\n\t-5.678167816781678,\r\n\t-5.676567656765677,\r\n\t-5.674967496749675,\r\n\t-5.673367336733673,\r\n\t-5.671767176717672,\r\n\t-5.6701670167016704,\r\n\t-5.668566856685668,\r\n\t-5.666966696669666,\r\n\t-5.665366536653665,\r\n\t-5.663766376637664,\r\n\t-5.662166216621662,\r\n\t-5.66056605660566,\r\n\t-5.658965896589659,\r\n\t-5.657365736573658,\r\n\t-5.6557655765576555,\r\n\t-5.6541654165416535,\r\n\t-5.652565256525652,\r\n\t-5.650965096509651,\r\n\t-5.649364936493649,\r\n\t-5.647764776477647,\r\n\t-5.646164616461646,\r\n\t-5.644564456445645,\r\n\t-5.642964296429643,\r\n\t-5.641364136413641,\r\n\t-5.6397639763976395,\r\n\t-5.638163816381638,\r\n\t-5.636563656365636,\r\n\t-5.634963496349634,\r\n\t-5.633363336333633,\r\n\t-5.631763176317632,\r\n\t-5.63016301630163,\r\n\t-5.628562856285629,\r\n\t-5.6269626962696275,\r\n\t-5.6253625362536255,\r\n\t-5.623762376237623,\r\n\t-5.622162216221622,\r\n\t-5.620562056205621,\r\n\t-5.618961896189619,\r\n\t-5.617361736173617,\r\n\t-5.615761576157616,\r\n\t-5.614161416141615,\r\n\t-5.612561256125613,\r\n\t-5.610961096109611,\r\n\t-5.609360936093609,\r\n\t-5.607760776077608,\r\n\t-5.606160616061606,\r\n\t-5.604560456045604,\r\n\t-5.602960296029603,\r\n\t-5.601360136013602,\r\n\t-5.5997599759976,\r\n\t-5.598159815981598,\r\n\t-5.596559655965597,\r\n\t-5.594959495949595,\r\n\t-5.593359335933593,\r\n\t-5.591759175917591,\r\n\t-5.59015901590159,\r\n\t-5.588558855885589,\r\n\t-5.586958695869587,\r\n\t-5.585358535853585,\r\n\t-5.583758375837584,\r\n\t-5.582158215821583,\r\n\t-5.5805580558055805,\r\n\t-5.5789578957895785,\r\n\t-5.577357735773577,\r\n\t-5.575757575757576,\r\n\t-5.574157415741574,\r\n\t-5.572557255725572,\r\n\t-5.570957095709571,\r\n\t-5.56935693569357,\r\n\t-5.567756775677568,\r\n\t-5.566156615661566,\r\n\t-5.5645564556455644,\r\n\t-5.562956295629563,\r\n\t-5.561356135613561,\r\n\t-5.559755975597559,\r\n\t-5.558155815581558,\r\n\t-5.556555655565557,\r\n\t-5.554955495549555,\r\n\t-5.553355335533553,\r\n\t-5.551755175517552,\r\n\t-5.55015501550155,\r\n\t-5.548554855485548,\r\n\t-5.546954695469546,\r\n\t-5.545354535453545,\r\n\t-5.543754375437544,\r\n\t-5.542154215421542,\r\n\t-5.54055405540554,\r\n\t-5.538953895389539,\r\n\t-5.537353735373538,\r\n\t-5.5357535753575355,\r\n\t-5.5341534153415335,\r\n\t-5.532553255325532,\r\n\t-5.530953095309531,\r\n\t-5.529352935293529,\r\n\t-5.527752775277527,\r\n\t-5.526152615261526,\r\n\t-5.524552455245525,\r\n\t-5.522952295229523,\r\n\t-5.521352135213521,\r\n\t-5.5197519751975195,\r\n\t-5.518151815181518,\r\n\t-5.516551655165516,\r\n\t-5.514951495149514,\r\n\t-5.513351335133513,\r\n\t-5.511751175117512,\r\n\t-5.51015101510151,\r\n\t-5.508550855085509,\r\n\t-5.5069506950695075,\r\n\t-5.5053505350535055,\r\n\t-5.503750375037503,\r\n\t-5.502150215021502,\r\n\t-5.500550055005501,\r\n\t-5.498949894989499,\r\n\t-5.497349734973497,\r\n\t-5.495749574957496,\r\n\t-5.494149414941495,\r\n\t-5.492549254925493,\r\n\t-5.490949094909491,\r\n\t-5.489348934893489,\r\n\t-5.487748774877488,\r\n\t-5.486148614861486,\r\n\t-5.484548454845484,\r\n\t-5.482948294829483,\r\n\t-5.481348134813482,\r\n\t-5.47974797479748,\r\n\t-5.478147814781478,\r\n\t-5.476547654765477,\r\n\t-5.474947494749475,\r\n\t-5.473347334733473,\r\n\t-5.471747174717471,\r\n\t-5.47014701470147,\r\n\t-5.468546854685469,\r\n\t-5.466946694669467,\r\n\t-5.465346534653465,\r\n\t-5.463746374637464,\r\n\t-5.4621462146214625,\r\n\t-5.4605460546054605,\r\n\t-5.4589458945894584,\r\n\t-5.457345734573457,\r\n\t-5.455745574557456,\r\n\t-5.454145414541454,\r\n\t-5.452545254525452,\r\n\t-5.450945094509451,\r\n\t-5.44934493449345,\r\n\t-5.447744774477448,\r\n\t-5.446144614461446,\r\n\t-5.444544454445444,\r\n\t-5.442944294429443,\r\n\t-5.441344134413441,\r\n\t-5.439743974397439,\r\n\t-5.438143814381438,\r\n\t-5.436543654365437,\r\n\t-5.434943494349435,\r\n\t-5.433343334333433,\r\n\t-5.431743174317432,\r\n\t-5.43014301430143,\r\n\t-5.428542854285428,\r\n\t-5.426942694269426,\r\n\t-5.425342534253425,\r\n\t-5.423742374237424,\r\n\t-5.422142214221422,\r\n\t-5.42054205420542,\r\n\t-5.418941894189419,\r\n\t-5.417341734173418,\r\n\t-5.4157415741574155,\r\n\t-5.4141414141414135,\r\n\t-5.412541254125412,\r\n\t-5.410941094109411,\r\n\t-5.409340934093409,\r\n\t-5.407740774077407,\r\n\t-5.406140614061406,\r\n\t-5.404540454045405,\r\n\t-5.402940294029403,\r\n\t-5.401340134013401,\r\n\t-5.3997399739973995,\r\n\t-5.398139813981398,\r\n\t-5.396539653965396,\r\n\t-5.394939493949394,\r\n\t-5.393339333933393,\r\n\t-5.391739173917392,\r\n\t-5.39013901390139,\r\n\t-5.388538853885389,\r\n\t-5.3869386938693875,\r\n\t-5.3853385338533855,\r\n\t-5.383738373837383,\r\n\t-5.382138213821382,\r\n\t-5.380538053805381,\r\n\t-5.378937893789379,\r\n\t-5.377337733773377,\r\n\t-5.375737573757376,\r\n\t-5.374137413741375,\r\n\t-5.372537253725373,\r\n\t-5.370937093709371,\r\n\t-5.369336933693369,\r\n\t-5.367736773677368,\r\n\t-5.366136613661366,\r\n\t-5.364536453645364,\r\n\t-5.362936293629363,\r\n\t-5.361336133613362,\r\n\t-5.35973597359736,\r\n\t-5.358135813581358,\r\n\t-5.3565356535653565,\r\n\t-5.354935493549355,\r\n\t-5.353335333533353,\r\n\t-5.351735173517351,\r\n\t-5.35013501350135,\r\n\t-5.348534853485349,\r\n\t-5.346934693469347,\r\n\t-5.345334533453345,\r\n\t-5.343734373437344,\r\n\t-5.3421342134213425,\r\n\t-5.3405340534053405,\r\n\t-5.338933893389338,\r\n\t-5.337333733373337,\r\n\t-5.335733573357336,\r\n\t-5.334133413341334,\r\n\t-5.332533253325332,\r\n\t-5.330933093309331,\r\n\t-5.32933293329333,\r\n\t-5.327732773277328,\r\n\t-5.326132613261326,\r\n\t-5.324532453245324,\r\n\t-5.322932293229323,\r\n\t-5.321332133213321,\r\n\t-5.319731973197319,\r\n\t-5.318131813181318,\r\n\t-5.316531653165317,\r\n\t-5.314931493149315,\r\n\t-5.313331333133313,\r\n\t-5.311731173117312,\r\n\t-5.31013101310131,\r\n\t-5.308530853085308,\r\n\t-5.306930693069306,\r\n\t-5.305330533053305,\r\n\t-5.303730373037304,\r\n\t-5.302130213021302,\r\n\t-5.3005300530053,\r\n\t-5.298929892989299,\r\n\t-5.297329732973298,\r\n\t-5.2957295729572955,\r\n\t-5.2941294129412935,\r\n\t-5.292529252925292,\r\n\t-5.290929092909291,\r\n\t-5.289328932893289,\r\n\t-5.287728772877287,\r\n\t-5.286128612861286,\r\n\t-5.284528452845285,\r\n\t-5.282928292829283,\r\n\t-5.281328132813281,\r\n\t-5.2797279727972795,\r\n\t-5.278127812781278,\r\n\t-5.276527652765276,\r\n\t-5.274927492749274,\r\n\t-5.273327332733273,\r\n\t-5.271727172717272,\r\n\t-5.27012701270127,\r\n\t-5.268526852685269,\r\n\t-5.2669266926692675,\r\n\t-5.2653265326532654,\r\n\t-5.263726372637263,\r\n\t-5.262126212621262,\r\n\t-5.260526052605261,\r\n\t-5.258925892589259,\r\n\t-5.257325732573257,\r\n\t-5.255725572557256,\r\n\t-5.254125412541255,\r\n\t-5.252525252525253,\r\n\t-5.2509250925092505,\r\n\t-5.249324932493249,\r\n\t-5.247724772477248,\r\n\t-5.246124612461246,\r\n\t-5.244524452445244,\r\n\t-5.242924292429243,\r\n\t-5.241324132413242,\r\n\t-5.23972397239724,\r\n\t-5.238123812381238,\r\n\t-5.2365236523652365,\r\n\t-5.234923492349235,\r\n\t-5.233323332333233,\r\n\t-5.231723172317231,\r\n\t-5.23012301230123,\r\n\t-5.228522852285229,\r\n\t-5.226922692269227,\r\n\t-5.225322532253225,\r\n\t-5.223722372237224,\r\n\t-5.2221222122212225,\r\n\t-5.2205220522052205,\r\n\t-5.218921892189218,\r\n\t-5.217321732173217,\r\n\t-5.215721572157216,\r\n\t-5.214121412141214,\r\n\t-5.212521252125212,\r\n\t-5.210921092109211,\r\n\t-5.20932093209321,\r\n\t-5.207720772077208,\r\n\t-5.206120612061206,\r\n\t-5.204520452045204,\r\n\t-5.202920292029203,\r\n\t-5.201320132013201,\r\n\t-5.199719971997199,\r\n\t-5.198119811981198,\r\n\t-5.196519651965197,\r\n\t-5.194919491949195,\r\n\t-5.193319331933193,\r\n\t-5.191719171917192,\r\n\t-5.19011901190119,\r\n\t-5.188518851885188,\r\n\t-5.186918691869186,\r\n\t-5.185318531853185,\r\n\t-5.183718371837184,\r\n\t-5.182118211821182,\r\n\t-5.18051805180518,\r\n\t-5.178917891789179,\r\n\t-5.177317731773178,\r\n\t-5.1757175717571755,\r\n\t-5.1741174117411735,\r\n\t-5.172517251725172,\r\n\t-5.170917091709171,\r\n\t-5.169316931693169,\r\n\t-5.167716771677167,\r\n\t-5.166116611661166,\r\n\t-5.164516451645165,\r\n\t-5.162916291629163,\r\n\t-5.161316131613161,\r\n\t-5.1597159715971594,\r\n\t-5.158115811581158,\r\n\t-5.156515651565156,\r\n\t-5.154915491549154,\r\n\t-5.153315331533153,\r\n\t-5.151715171517152,\r\n\t-5.15011501150115,\r\n\t-5.148514851485148,\r\n\t-5.1469146914691475,\r\n\t-5.145314531453145,\r\n\t-5.143714371437143,\r\n\t-5.142114211421142,\r\n\t-5.140514051405141,\r\n\t-5.138913891389139,\r\n\t-5.137313731373137,\r\n\t-5.135713571357136,\r\n\t-5.134113411341135,\r\n\t-5.132513251325133,\r\n\t-5.1309130913091305,\r\n\t-5.129312931293129,\r\n\t-5.127712771277128,\r\n\t-5.126112611261126,\r\n\t-5.124512451245124,\r\n\t-5.122912291229123,\r\n\t-5.121312131213122,\r\n\t-5.11971197119712,\r\n\t-5.118111811181118,\r\n\t-5.1165116511651165,\r\n\t-5.114911491149115,\r\n\t-5.113311331133113,\r\n\t-5.111711171117111,\r\n\t-5.11011101110111,\r\n\t-5.108510851085109,\r\n\t-5.106910691069107,\r\n\t-5.105310531053105,\r\n\t-5.103710371037104,\r\n\t-5.1021102110211025,\r\n\t-5.1005100510051005,\r\n\t-5.098909890989098,\r\n\t-5.097309730973097,\r\n\t-5.095709570957096,\r\n\t-5.094109410941094,\r\n\t-5.092509250925092,\r\n\t-5.090909090909091,\r\n\t-5.08930893089309,\r\n\t-5.087708770877088,\r\n\t-5.086108610861086,\r\n\t-5.084508450845084,\r\n\t-5.082908290829083,\r\n\t-5.081308130813081,\r\n\t-5.079707970797079,\r\n\t-5.078107810781078,\r\n\t-5.076507650765077,\r\n\t-5.074907490749075,\r\n\t-5.073307330733073,\r\n\t-5.0717071707170716,\r\n\t-5.07010701070107,\r\n\t-5.068506850685068,\r\n\t-5.066906690669066,\r\n\t-5.065306530653065,\r\n\t-5.063706370637064,\r\n\t-5.062106210621062,\r\n\t-5.06050605060506,\r\n\t-5.058905890589059,\r\n\t-5.0573057305730575,\r\n\t-5.0557055705570555,\r\n\t-5.0541054105410534,\r\n\t-5.052505250525052,\r\n\t-5.050905090509051,\r\n\t-5.049304930493049,\r\n\t-5.047704770477047,\r\n\t-5.046104610461046,\r\n\t-5.044504450445045,\r\n\t-5.042904290429043,\r\n\t-5.041304130413041,\r\n\t-5.039703970397039,\r\n\t-5.038103810381038,\r\n\t-5.036503650365036,\r\n\t-5.034903490349034,\r\n\t-5.033303330333033,\r\n\t-5.031703170317032,\r\n\t-5.03010301030103,\r\n\t-5.028502850285028,\r\n\t-5.026902690269027,\r\n\t-5.025302530253025,\r\n\t-5.023702370237023,\r\n\t-5.022102210221022,\r\n\t-5.020502050205021,\r\n\t-5.018901890189019,\r\n\t-5.017301730173017,\r\n\t-5.015701570157016,\r\n\t-5.014101410141015,\r\n\t-5.012501250125013,\r\n\t-5.0109010901090105,\r\n\t-5.009300930093009,\r\n\t-5.007700770077008,\r\n\t-5.006100610061006,\r\n\t-5.004500450045004,\r\n\t-5.002900290029003,\r\n\t-5.001300130013002,\r\n\t-4.999699969997,\r\n\t-4.998099809980998,\r\n\t-4.9964996499649965,\r\n\t-4.994899489948995,\r\n\t-4.993299329932993,\r\n\t-4.991699169916991,\r\n\t-4.99009900990099,\r\n\t-4.988498849884989,\r\n\t-4.986898689868987,\r\n\t-4.985298529852985,\r\n\t-4.983698369836984,\r\n\t-4.9820982098209825,\r\n\t-4.9804980498049805,\r\n\t-4.978897889788978,\r\n\t-4.977297729772977,\r\n\t-4.975697569756976,\r\n\t-4.974097409740974,\r\n\t-4.972497249724972,\r\n\t-4.970897089708971,\r\n\t-4.96929692969297,\r\n\t-4.967696769676968,\r\n\t-4.9660966096609656,\r\n\t-4.964496449644964,\r\n\t-4.962896289628963,\r\n\t-4.961296129612961,\r\n\t-4.959695969596959,\r\n\t-4.958095809580958,\r\n\t-4.956495649564957,\r\n\t-4.954895489548955,\r\n\t-4.953295329532953,\r\n\t-4.9516951695169515,\r\n\t-4.95009500950095,\r\n\t-4.948494849484948,\r\n\t-4.946894689468946,\r\n\t-4.945294529452945,\r\n\t-4.943694369436944,\r\n\t-4.942094209420942,\r\n\t-4.94049404940494,\r\n\t-4.938893889388939,\r\n\t-4.9372937293729375,\r\n\t-4.9356935693569355,\r\n\t-4.934093409340933,\r\n\t-4.932493249324932,\r\n\t-4.930893089308931,\r\n\t-4.929292929292929,\r\n\t-4.927692769276927,\r\n\t-4.926092609260926,\r\n\t-4.924492449244925,\r\n\t-4.922892289228923,\r\n\t-4.921292129212921,\r\n\t-4.919691969196919,\r\n\t-4.918091809180918,\r\n\t-4.916491649164916,\r\n\t-4.914891489148914,\r\n\t-4.913291329132913,\r\n\t-4.911691169116912,\r\n\t-4.91009100910091,\r\n\t-4.908490849084908,\r\n\t-4.906890689068907,\r\n\t-4.905290529052905,\r\n\t-4.903690369036903,\r\n\t-4.902090209020902,\r\n\t-4.900490049004901,\r\n\t-4.898889888988899,\r\n\t-4.897289728972897,\r\n\t-4.895689568956896,\r\n\t-4.894089408940895,\r\n\t-4.892489248924893,\r\n\t-4.8908890889088905,\r\n\t-4.889288928892889,\r\n\t-4.887688768876888,\r\n\t-4.886088608860886,\r\n\t-4.884488448844884,\r\n\t-4.882888288828883,\r\n\t-4.881288128812882,\r\n\t-4.87968796879688,\r\n\t-4.878087808780878,\r\n\t-4.8764876487648765,\r\n\t-4.874887488748875,\r\n\t-4.873287328732873,\r\n\t-4.871687168716871,\r\n\t-4.87008700870087,\r\n\t-4.868486848684869,\r\n\t-4.866886688668867,\r\n\t-4.865286528652865,\r\n\t-4.863686368636864,\r\n\t-4.8620862086208625,\r\n\t-4.86048604860486,\r\n\t-4.858885888588858,\r\n\t-4.857285728572857,\r\n\t-4.855685568556856,\r\n\t-4.854085408540854,\r\n\t-4.852485248524852,\r\n\t-4.850885088508851,\r\n\t-4.84928492849285,\r\n\t-4.847684768476848,\r\n\t-4.8460846084608455,\r\n\t-4.844484448444844,\r\n\t-4.842884288428843,\r\n\t-4.841284128412841,\r\n\t-4.839683968396839,\r\n\t-4.838083808380838,\r\n\t-4.836483648364837,\r\n\t-4.834883488348835,\r\n\t-4.833283328332833,\r\n\t-4.8316831683168315,\r\n\t-4.83008300830083,\r\n\t-4.828482848284828,\r\n\t-4.826882688268826,\r\n\t-4.825282528252825,\r\n\t-4.823682368236824,\r\n\t-4.822082208220822,\r\n\t-4.82048204820482,\r\n\t-4.818881888188819,\r\n\t-4.8172817281728175,\r\n\t-4.8156815681568155,\r\n\t-4.814081408140813,\r\n\t-4.812481248124812,\r\n\t-4.810881088108811,\r\n\t-4.809280928092809,\r\n\t-4.807680768076807,\r\n\t-4.806080608060806,\r\n\t-4.804480448044805,\r\n\t-4.802880288028803,\r\n\t-4.801280128012801,\r\n\t-4.799679967996799,\r\n\t-4.798079807980798,\r\n\t-4.796479647964796,\r\n\t-4.794879487948794,\r\n\t-4.793279327932793,\r\n\t-4.791679167916792,\r\n\t-4.79007900790079,\r\n\t-4.788478847884788,\r\n\t-4.786878687868787,\r\n\t-4.785278527852785,\r\n\t-4.783678367836783,\r\n\t-4.782078207820782,\r\n\t-4.780478047804781,\r\n\t-4.778877887788779,\r\n\t-4.777277727772777,\r\n\t-4.775677567756776,\r\n\t-4.774077407740775,\r\n\t-4.7724772477247726,\r\n\t-4.7708770877087705,\r\n\t-4.769276927692769,\r\n\t-4.767676767676768,\r\n\t-4.766076607660766,\r\n\t-4.764476447644764,\r\n\t-4.762876287628763,\r\n\t-4.761276127612762,\r\n\t-4.75967596759676,\r\n\t-4.758075807580758,\r\n\t-4.7564756475647565,\r\n\t-4.754875487548755,\r\n\t-4.753275327532753,\r\n\t-4.751675167516751,\r\n\t-4.75007500750075,\r\n\t-4.748474847484749,\r\n\t-4.746874687468747,\r\n\t-4.745274527452745,\r\n\t-4.743674367436744,\r\n\t-4.7420742074207425,\r\n\t-4.74047404740474,\r\n\t-4.738873887388738,\r\n\t-4.737273727372737,\r\n\t-4.735673567356736,\r\n\t-4.734073407340734,\r\n\t-4.732473247324732,\r\n\t-4.730873087308731,\r\n\t-4.72927292729273,\r\n\t-4.727672767276728,\r\n\t-4.7260726072607255,\r\n\t-4.724472447244724,\r\n\t-4.722872287228723,\r\n\t-4.721272127212721,\r\n\t-4.719671967196719,\r\n\t-4.718071807180718,\r\n\t-4.716471647164717,\r\n\t-4.714871487148715,\r\n\t-4.713271327132713,\r\n\t-4.7116711671167115,\r\n\t-4.71007100710071,\r\n\t-4.708470847084708,\r\n\t-4.706870687068706,\r\n\t-4.705270527052705,\r\n\t-4.703670367036704,\r\n\t-4.702070207020702,\r\n\t-4.7004700470047,\r\n\t-4.698869886988699,\r\n\t-4.6972697269726975,\r\n\t-4.6956695669566955,\r\n\t-4.694069406940693,\r\n\t-4.692469246924692,\r\n\t-4.690869086908691,\r\n\t-4.689268926892689,\r\n\t-4.687668766876687,\r\n\t-4.686068606860686,\r\n\t-4.684468446844685,\r\n\t-4.682868286828683,\r\n\t-4.681268126812681,\r\n\t-4.679667966796679,\r\n\t-4.678067806780678,\r\n\t-4.676467646764676,\r\n\t-4.674867486748674,\r\n\t-4.673267326732673,\r\n\t-4.671667166716672,\r\n\t-4.67006700670067,\r\n\t-4.668466846684668,\r\n\t-4.6668666866686666,\r\n\t-4.665266526652665,\r\n\t-4.663666366636663,\r\n\t-4.662066206620662,\r\n\t-4.660466046604661,\r\n\t-4.658865886588659,\r\n\t-4.657265726572657,\r\n\t-4.655665566556656,\r\n\t-4.654065406540655,\r\n\t-4.6524652465246525,\r\n\t-4.6508650865086505,\r\n\t-4.649264926492649,\r\n\t-4.647664766476648,\r\n\t-4.646064606460646,\r\n\t-4.644464446444644,\r\n\t-4.642864286428643,\r\n\t-4.641264126412642,\r\n\t-4.63966396639664,\r\n\t-4.638063806380638,\r\n\t-4.6364636463646365,\r\n\t-4.634863486348635,\r\n\t-4.633263326332633,\r\n\t-4.631663166316631,\r\n\t-4.63006300630063,\r\n\t-4.628462846284629,\r\n\t-4.626862686268627,\r\n\t-4.625262526252625,\r\n\t-4.623662366236624,\r\n\t-4.6220622062206225,\r\n\t-4.62046204620462,\r\n\t-4.618861886188618,\r\n\t-4.617261726172617,\r\n\t-4.615661566156616,\r\n\t-4.614061406140614,\r\n\t-4.612461246124612,\r\n\t-4.610861086108611,\r\n\t-4.60926092609261,\r\n\t-4.607660766076608,\r\n\t-4.6060606060606055,\r\n\t-4.604460446044604,\r\n\t-4.602860286028603,\r\n\t-4.601260126012601,\r\n\t-4.599659965996599,\r\n\t-4.598059805980598,\r\n\t-4.596459645964597,\r\n\t-4.594859485948595,\r\n\t-4.593259325932593,\r\n\t-4.5916591659165915,\r\n\t-4.59005900590059,\r\n\t-4.588458845884588,\r\n\t-4.586858685868586,\r\n\t-4.585258525852585,\r\n\t-4.583658365836584,\r\n\t-4.582058205820582,\r\n\t-4.58045804580458,\r\n\t-4.578857885788579,\r\n\t-4.5772577257725775,\r\n\t-4.5756575657565755,\r\n\t-4.574057405740573,\r\n\t-4.572457245724572,\r\n\t-4.570857085708571,\r\n\t-4.569256925692569,\r\n\t-4.567656765676567,\r\n\t-4.566056605660566,\r\n\t-4.564456445644565,\r\n\t-4.562856285628563,\r\n\t-4.5612561256125606,\r\n\t-4.559655965596559,\r\n\t-4.558055805580558,\r\n\t-4.556455645564556,\r\n\t-4.554855485548554,\r\n\t-4.553255325532553,\r\n\t-4.551655165516552,\r\n\t-4.55005500550055,\r\n\t-4.548454845484548,\r\n\t-4.5468546854685465,\r\n\t-4.545254525452545,\r\n\t-4.543654365436543,\r\n\t-4.542054205420541,\r\n\t-4.540454045404541,\r\n\t-4.538853885388539,\r\n\t-4.537253725372537,\r\n\t-4.535653565356536,\r\n\t-4.534053405340535,\r\n\t-4.5324532453245325,\r\n\t-4.5308530853085305,\r\n\t-4.529252925292529,\r\n\t-4.527652765276528,\r\n\t-4.526052605260526,\r\n\t-4.524452445244524,\r\n\t-4.522852285228523,\r\n\t-4.521252125212522,\r\n\t-4.51965196519652,\r\n\t-4.518051805180518,\r\n\t-4.5164516451645165,\r\n\t-4.514851485148515,\r\n\t-4.513251325132513,\r\n\t-4.511651165116511,\r\n\t-4.51005100510051,\r\n\t-4.508450845084509,\r\n\t-4.506850685068507,\r\n\t-4.505250525052505,\r\n\t-4.503650365036504,\r\n\t-4.5020502050205025,\r\n\t-4.5004500450045,\r\n\t-4.498849884988498,\r\n\t-4.497249724972497,\r\n\t-4.495649564956496,\r\n\t-4.494049404940494,\r\n\t-4.492449244924492,\r\n\t-4.490849084908491,\r\n\t-4.48924892489249,\r\n\t-4.487648764876488,\r\n\t-4.4860486048604855,\r\n\t-4.484448444844484,\r\n\t-4.482848284828483,\r\n\t-4.481248124812481,\r\n\t-4.479647964796479,\r\n\t-4.478047804780478,\r\n\t-4.476447644764477,\r\n\t-4.474847484748475,\r\n\t-4.473247324732473,\r\n\t-4.4716471647164715,\r\n\t-4.47004700470047,\r\n\t-4.468446844684468,\r\n\t-4.466846684668466,\r\n\t-4.465246524652465,\r\n\t-4.463646364636464,\r\n\t-4.462046204620462,\r\n\t-4.46044604460446,\r\n\t-4.458845884588459,\r\n\t-4.4572457245724575,\r\n\t-4.455645564556455,\r\n\t-4.454045404540453,\r\n\t-4.452445244524452,\r\n\t-4.450845084508451,\r\n\t-4.449244924492449,\r\n\t-4.447644764476447,\r\n\t-4.446044604460446,\r\n\t-4.444444444444445,\r\n\t-4.442844284428443,\r\n\t-4.4412441244124405,\r\n\t-4.439643964396439,\r\n\t-4.438043804380438,\r\n\t-4.436443644364436,\r\n\t-4.434843484348434,\r\n\t-4.433243324332433,\r\n\t-4.431643164316432,\r\n\t-4.43004300430043,\r\n\t-4.428442844284428,\r\n\t-4.4268426842684265,\r\n\t-4.425242524252425,\r\n\t-4.423642364236423,\r\n\t-4.422042204220421,\r\n\t-4.42044204420442,\r\n\t-4.418841884188419,\r\n\t-4.417241724172417,\r\n\t-4.415641564156416,\r\n\t-4.414041404140415,\r\n\t-4.4124412441244125,\r\n\t-4.4108410841084105,\r\n\t-4.409240924092409,\r\n\t-4.407640764076408,\r\n\t-4.406040604060406,\r\n\t-4.404440444044404,\r\n\t-4.402840284028403,\r\n\t-4.401240124012402,\r\n\t-4.3996399639964,\r\n\t-4.398039803980398,\r\n\t-4.3964396439643965,\r\n\t-4.394839483948395,\r\n\t-4.393239323932393,\r\n\t-4.391639163916391,\r\n\t-4.39003900390039,\r\n\t-4.388438843884389,\r\n\t-4.386838683868387,\r\n\t-4.385238523852385,\r\n\t-4.383638363836384,\r\n\t-4.3820382038203824,\r\n\t-4.38043804380438,\r\n\t-4.378837883788378,\r\n\t-4.377237723772377,\r\n\t-4.375637563756376,\r\n\t-4.374037403740374,\r\n\t-4.372437243724372,\r\n\t-4.370837083708371,\r\n\t-4.36923692369237,\r\n\t-4.3676367636763676,\r\n\t-4.3660366036603655,\r\n\t-4.364436443644364,\r\n\t-4.362836283628363,\r\n\t-4.361236123612361,\r\n\t-4.359635963596359,\r\n\t-4.358035803580358,\r\n\t-4.356435643564357,\r\n\t-4.354835483548355,\r\n\t-4.353235323532353,\r\n\t-4.3516351635163515,\r\n\t-4.35003500350035,\r\n\t-4.348434843484348,\r\n\t-4.346834683468346,\r\n\t-4.345234523452345,\r\n\t-4.343634363436344,\r\n\t-4.342034203420342,\r\n\t-4.34043404340434,\r\n\t-4.338833883388339,\r\n\t-4.3372337233723375,\r\n\t-4.335633563356335,\r\n\t-4.334033403340333,\r\n\t-4.332433243324332,\r\n\t-4.330833083308331,\r\n\t-4.329232923292329,\r\n\t-4.327632763276327,\r\n\t-4.326032603260326,\r\n\t-4.324432443244325,\r\n\t-4.322832283228323,\r\n\t-4.3212321232123205,\r\n\t-4.319631963196319,\r\n\t-4.318031803180318,\r\n\t-4.316431643164316,\r\n\t-4.314831483148314,\r\n\t-4.313231323132313,\r\n\t-4.311631163116312,\r\n\t-4.31003100310031,\r\n\t-4.308430843084308,\r\n\t-4.3068306830683065,\r\n\t-4.305230523052305,\r\n\t-4.303630363036303,\r\n\t-4.302030203020301,\r\n\t-4.3004300430043,\r\n\t-4.298829882988299,\r\n\t-4.297229722972297,\r\n\t-4.295629562956296,\r\n\t-4.294029402940295,\r\n\t-4.2924292429242925,\r\n\t-4.2908290829082905,\r\n\t-4.289228922892289,\r\n\t-4.287628762876288,\r\n\t-4.286028602860286,\r\n\t-4.284428442844284,\r\n\t-4.282828282828283,\r\n\t-4.281228122812282,\r\n\t-4.27962796279628,\r\n\t-4.278027802780278,\r\n\t-4.2764276427642764,\r\n\t-4.274827482748275,\r\n\t-4.273227322732273,\r\n\t-4.271627162716271,\r\n\t-4.27002700270027,\r\n\t-4.268426842684269,\r\n\t-4.266826682668267,\r\n\t-4.265226522652265,\r\n\t-4.263626362636264,\r\n\t-4.262026202620262,\r\n\t-4.26042604260426,\r\n\t-4.258825882588258,\r\n\t-4.257225722572257,\r\n\t-4.255625562556256,\r\n\t-4.254025402540254,\r\n\t-4.252425242524252,\r\n\t-4.250825082508251,\r\n\t-4.24922492249225,\r\n\t-4.2476247624762475,\r\n\t-4.2460246024602455,\r\n\t-4.244424442444244,\r\n\t-4.242824282428243,\r\n\t-4.241224122412241,\r\n\t-4.239623962396239,\r\n\t-4.238023802380238,\r\n\t-4.236423642364237,\r\n\t-4.234823482348235,\r\n\t-4.233223322332233,\r\n\t-4.2316231623162315,\r\n\t-4.23002300230023,\r\n\t-4.228422842284228,\r\n\t-4.226822682268226,\r\n\t-4.225222522252225,\r\n\t-4.223622362236224,\r\n\t-4.222022202220222,\r\n\t-4.22042204220422,\r\n\t-4.218821882188219,\r\n\t-4.2172217221722175,\r\n\t-4.215621562156215,\r\n\t-4.214021402140213,\r\n\t-4.212421242124212,\r\n\t-4.210821082108211,\r\n\t-4.209220922092209,\r\n\t-4.207620762076207,\r\n\t-4.206020602060206,\r\n\t-4.204420442044205,\r\n\t-4.202820282028203,\r\n\t-4.2012201220122005,\r\n\t-4.199619961996199,\r\n\t-4.198019801980198,\r\n\t-4.196419641964196,\r\n\t-4.194819481948194,\r\n\t-4.193219321932193,\r\n\t-4.191619161916192,\r\n\t-4.19001900190019,\r\n\t-4.188418841884188,\r\n\t-4.1868186818681865,\r\n\t-4.185218521852185,\r\n\t-4.183618361836183,\r\n\t-4.182018201820181,\r\n\t-4.18041804180418,\r\n\t-4.178817881788179,\r\n\t-4.177217721772177,\r\n\t-4.175617561756176,\r\n\t-4.1740174017401745,\r\n\t-4.1724172417241725,\r\n\t-4.1708170817081704,\r\n\t-4.169216921692169,\r\n\t-4.167616761676168,\r\n\t-4.166016601660166,\r\n\t-4.164416441644164,\r\n\t-4.162816281628163,\r\n\t-4.161216121612162,\r\n\t-4.15961596159616,\r\n\t-4.158015801580158,\r\n\t-4.156415641564156,\r\n\t-4.154815481548155,\r\n\t-4.153215321532153,\r\n\t-4.151615161516151,\r\n\t-4.15001500150015,\r\n\t-4.148414841484149,\r\n\t-4.146814681468147,\r\n\t-4.145214521452145,\r\n\t-4.143614361436144,\r\n\t-4.142014201420142,\r\n\t-4.14041404140414,\r\n\t-4.138813881388138,\r\n\t-4.137213721372137,\r\n\t-4.135613561356136,\r\n\t-4.134013401340134,\r\n\t-4.132413241324132,\r\n\t-4.130813081308131,\r\n\t-4.12921292129213,\r\n\t-4.1276127612761275,\r\n\t-4.1260126012601255,\r\n\t-4.124412441244124,\r\n\t-4.122812281228123,\r\n\t-4.121212121212121,\r\n\t-4.119611961196119,\r\n\t-4.118011801180118,\r\n\t-4.116411641164117,\r\n\t-4.114811481148115,\r\n\t-4.113211321132113,\r\n\t-4.1116111611161115,\r\n\t-4.11001100110011,\r\n\t-4.108410841084108,\r\n\t-4.106810681068106,\r\n\t-4.105210521052105,\r\n\t-4.103610361036104,\r\n\t-4.102010201020102,\r\n\t-4.1004100410041,\r\n\t-4.098809880988099,\r\n\t-4.0972097209720975,\r\n\t-4.095609560956095,\r\n\t-4.094009400940093,\r\n\t-4.092409240924092,\r\n\t-4.090809080908091,\r\n\t-4.089208920892089,\r\n\t-4.087608760876087,\r\n\t-4.086008600860086,\r\n\t-4.084408440844085,\r\n\t-4.082808280828083,\r\n\t-4.0812081208120805,\r\n\t-4.079607960796079,\r\n\t-4.078007800780078,\r\n\t-4.076407640764076,\r\n\t-4.074807480748074,\r\n\t-4.073207320732073,\r\n\t-4.071607160716072,\r\n\t-4.07000700070007,\r\n\t-4.068406840684068,\r\n\t-4.0668066806680665,\r\n\t-4.065206520652065,\r\n\t-4.063606360636063,\r\n\t-4.062006200620061,\r\n\t-4.06040604060406,\r\n\t-4.058805880588059,\r\n\t-4.057205720572057,\r\n\t-4.055605560556055,\r\n\t-4.0540054005400545,\r\n\t-4.0524052405240525,\r\n\t-4.05080508050805,\r\n\t-4.049204920492049,\r\n\t-4.047604760476048,\r\n\t-4.046004600460046,\r\n\t-4.044404440444044,\r\n\t-4.042804280428043,\r\n\t-4.041204120412042,\r\n\t-4.03960396039604,\r\n\t-4.038003800380038,\r\n\t-4.036403640364036,\r\n\t-4.034803480348035,\r\n\t-4.033203320332033,\r\n\t-4.031603160316031,\r\n\t-4.03000300030003,\r\n\t-4.028402840284029,\r\n\t-4.026802680268027,\r\n\t-4.025202520252025,\r\n\t-4.023602360236024,\r\n\t-4.022002200220022,\r\n\t-4.02040204020402,\r\n\t-4.018801880188018,\r\n\t-4.017201720172017,\r\n\t-4.015601560156016,\r\n\t-4.014001400140014,\r\n\t-4.012401240124012,\r\n\t-4.010801080108011,\r\n\t-4.00920092009201,\r\n\t-4.0076007600760075,\r\n\t-4.0060006000600055,\r\n\t-4.004400440044004,\r\n\t-4.002800280028003,\r\n\t-4.001200120012001,\r\n\t-3.999599959995999,\r\n\t-3.997999799979998,\r\n\t-3.996399639963996,\r\n\t-3.9947994799479947,\r\n\t-3.9931993199319935,\r\n\t-3.9915991599159915,\r\n\t-3.9899989998999903,\r\n\t-3.9883988398839882,\r\n\t-3.986798679867987,\r\n\t-3.985198519851985,\r\n\t-3.983598359835984,\r\n\t-3.981998199819982,\r\n\t-3.9803980398039807,\r\n\t-3.9787978797879786,\r\n\t-3.9771977197719774,\r\n\t-3.9755975597559754,\r\n\t-3.9739973997399742,\r\n\t-3.972397239723972,\r\n\t-3.970797079707971,\r\n\t-3.969196919691969,\r\n\t-3.967596759675968,\r\n\t-3.9659965996599658,\r\n\t-3.9643964396439646,\r\n\t-3.9627962796279625,\r\n\t-3.9611961196119614,\r\n\t-3.9595959595959593,\r\n\t-3.957995799579958,\r\n\t-3.956395639563956,\r\n\t-3.954795479547955,\r\n\t-3.953195319531953,\r\n\t-3.9515951595159517,\r\n\t-3.9499949994999497,\r\n\t-3.9483948394839485,\r\n\t-3.9467946794679465,\r\n\t-3.9451945194519453,\r\n\t-3.9435943594359433,\r\n\t-3.941994199419942,\r\n\t-3.94039403940394,\r\n\t-3.938793879387939,\r\n\t-3.937193719371937,\r\n\t-3.9355935593559357,\r\n\t-3.9339933993399336,\r\n\t-3.9323932393239325,\r\n\t-3.9307930793079304,\r\n\t-3.9291929192919293,\r\n\t-3.927592759275927,\r\n\t-3.925992599259926,\r\n\t-3.924392439243924,\r\n\t-3.922792279227923,\r\n\t-3.921192119211921,\r\n\t-3.9195919591959196,\r\n\t-3.9179917991799176,\r\n\t-3.9163916391639164,\r\n\t-3.9147914791479144,\r\n\t-3.913191319131913,\r\n\t-3.911591159115911,\r\n\t-3.90999099909991,\r\n\t-3.908390839083908,\r\n\t-3.906790679067907,\r\n\t-3.9051905190519047,\r\n\t-3.9035903590359036,\r\n\t-3.9019901990199015,\r\n\t-3.9003900390039004,\r\n\t-3.8987898789878983,\r\n\t-3.897189718971897,\r\n\t-3.895589558955895,\r\n\t-3.893989398939894,\r\n\t-3.892389238923892,\r\n\t-3.8907890789078907,\r\n\t-3.8891889188918887,\r\n\t-3.8875887588758875,\r\n\t-3.8859885988598855,\r\n\t-3.8843884388438843,\r\n\t-3.8827882788278822,\r\n\t-3.881188118811881,\r\n\t-3.879587958795879,\r\n\t-3.877987798779878,\r\n\t-3.876387638763876,\r\n\t-3.8747874787478747,\r\n\t-3.8731873187318735,\r\n\t-3.8715871587158714,\r\n\t-3.8699869986998703,\r\n\t-3.8683868386838682,\r\n\t-3.866786678667867,\r\n\t-3.865186518651865,\r\n\t-3.863586358635864,\r\n\t-3.861986198619862,\r\n\t-3.8603860386038606,\r\n\t-3.8587858785878586,\r\n\t-3.8571857185718574,\r\n\t-3.8555855585558554,\r\n\t-3.8539853985398542,\r\n\t-3.852385238523852,\r\n\t-3.850785078507851,\r\n\t-3.849184918491849,\r\n\t-3.847584758475848,\r\n\t-3.8459845984598457,\r\n\t-3.8443844384438446,\r\n\t-3.8427842784278425,\r\n\t-3.8411841184118414,\r\n\t-3.8395839583958393,\r\n\t-3.837983798379838,\r\n\t-3.836383638363836,\r\n\t-3.834783478347835,\r\n\t-3.833183318331833,\r\n\t-3.8315831583158317,\r\n\t-3.8299829982998297,\r\n\t-3.8283828382838285,\r\n\t-3.8267826782678265,\r\n\t-3.8251825182518253,\r\n\t-3.8235823582358233,\r\n\t-3.821982198219822,\r\n\t-3.82038203820382,\r\n\t-3.818781878187819,\r\n\t-3.817181718171817,\r\n\t-3.8155815581558157,\r\n\t-3.8139813981398136,\r\n\t-3.8123812381238125,\r\n\t-3.8107810781078104,\r\n\t-3.8091809180918093,\r\n\t-3.807580758075807,\r\n\t-3.805980598059806,\r\n\t-3.804380438043804,\r\n\t-3.802780278027803,\r\n\t-3.801180118011801,\r\n\t-3.7995799579957996,\r\n\t-3.7979797979797976,\r\n\t-3.7963796379637964,\r\n\t-3.7947794779477944,\r\n\t-3.793179317931793,\r\n\t-3.791579157915791,\r\n\t-3.78997899789979,\r\n\t-3.788378837883788,\r\n\t-3.7867786778677868,\r\n\t-3.7851785178517847,\r\n\t-3.7835783578357836,\r\n\t-3.7819781978197815,\r\n\t-3.7803780378037803,\r\n\t-3.7787778777877783,\r\n\t-3.777177717771777,\r\n\t-3.775577557755775,\r\n\t-3.773977397739774,\r\n\t-3.772377237723772,\r\n\t-3.7707770777077707,\r\n\t-3.7691769176917687,\r\n\t-3.7675767576757675,\r\n\t-3.7659765976597654,\r\n\t-3.7643764376437643,\r\n\t-3.7627762776277622,\r\n\t-3.761176117611761,\r\n\t-3.759575957595759,\r\n\t-3.757975797579758,\r\n\t-3.756375637563756,\r\n\t-3.7547754775477546,\r\n\t-3.7531753175317526,\r\n\t-3.7515751575157514,\r\n\t-3.7499749974997503,\r\n\t-3.7483748374837482,\r\n\t-3.746774677467747,\r\n\t-3.745174517451745,\r\n\t-3.743574357435744,\r\n\t-3.741974197419742,\r\n\t-3.7403740374037406,\r\n\t-3.7387738773877386,\r\n\t-3.7371737173717374,\r\n\t-3.7355735573557354,\r\n\t-3.733973397339734,\r\n\t-3.732373237323732,\r\n\t-3.730773077307731,\r\n\t-3.729172917291729,\r\n\t-3.727572757275728,\r\n\t-3.7259725972597257,\r\n\t-3.7243724372437246,\r\n\t-3.7227722772277225,\r\n\t-3.7211721172117214,\r\n\t-3.7195719571957193,\r\n\t-3.717971797179718,\r\n\t-3.716371637163716,\r\n\t-3.714771477147715,\r\n\t-3.713171317131713,\r\n\t-3.7115711571157117,\r\n\t-3.7099709970997097,\r\n\t-3.7083708370837085,\r\n\t-3.7067706770677065,\r\n\t-3.7051705170517053,\r\n\t-3.7035703570357033,\r\n\t-3.701970197019702,\r\n\t-3.7003700370037,\r\n\t-3.698769876987699,\r\n\t-3.697169716971697,\r\n\t-3.6955695569556957,\r\n\t-3.6939693969396936,\r\n\t-3.6923692369236925,\r\n\t-3.6907690769076904,\r\n\t-3.6891689168916892,\r\n\t-3.687568756875687,\r\n\t-3.685968596859686,\r\n\t-3.684368436843684,\r\n\t-3.682768276827683,\r\n\t-3.6811681168116808,\r\n\t-3.6795679567956796,\r\n\t-3.6779677967796776,\r\n\t-3.6763676367636764,\r\n\t-3.6747674767476743,\r\n\t-3.673167316731673,\r\n\t-3.671567156715671,\r\n\t-3.66996699669967,\r\n\t-3.668366836683668,\r\n\t-3.6667666766676668,\r\n\t-3.6651665166516647,\r\n\t-3.6635663566356635,\r\n\t-3.6619661966196615,\r\n\t-3.6603660366036603,\r\n\t-3.6587658765876583,\r\n\t-3.657165716571657,\r\n\t-3.655565556555655,\r\n\t-3.653965396539654,\r\n\t-3.652365236523652,\r\n\t-3.6507650765076507,\r\n\t-3.6491649164916486,\r\n\t-3.6475647564756475,\r\n\t-3.6459645964596454,\r\n\t-3.6443644364436443,\r\n\t-3.6427642764276422,\r\n\t-3.641164116411641,\r\n\t-3.639563956395639,\r\n\t-3.637963796379638,\r\n\t-3.636363636363636,\r\n\t-3.6347634763476346,\r\n\t-3.6331633163316326,\r\n\t-3.6315631563156314,\r\n\t-3.6299629962996303,\r\n\t-3.628362836283628,\r\n\t-3.626762676267627,\r\n\t-3.625162516251625,\r\n\t-3.623562356235624,\r\n\t-3.621962196219622,\r\n\t-3.6203620362036206,\r\n\t-3.6187618761876186,\r\n\t-3.6171617161716174,\r\n\t-3.6155615561556154,\r\n\t-3.613961396139614,\r\n\t-3.612361236123612,\r\n\t-3.610761076107611,\r\n\t-3.609160916091609,\r\n\t-3.6075607560756078,\r\n\t-3.6059605960596057,\r\n\t-3.6043604360436046,\r\n\t-3.6027602760276025,\r\n\t-3.6011601160116014,\r\n\t-3.5995599559955993,\r\n\t-3.597959795979598,\r\n\t-3.596359635963596,\r\n\t-3.594759475947595,\r\n\t-3.593159315931593,\r\n\t-3.5915591559155917,\r\n\t-3.5899589958995897,\r\n\t-3.5883588358835885,\r\n\t-3.5867586758675865,\r\n\t-3.5851585158515853,\r\n\t-3.5835583558355832,\r\n\t-3.581958195819582,\r\n\t-3.58035803580358,\r\n\t-3.578757875787579,\r\n\t-3.577157715771577,\r\n\t-3.5755575557555757,\r\n\t-3.5739573957395736,\r\n\t-3.5723572357235724,\r\n\t-3.5707570757075704,\r\n\t-3.5691569156915692,\r\n\t-3.567556755675567,\r\n\t-3.565956595659566,\r\n\t-3.564356435643564,\r\n\t-3.562756275627563,\r\n\t-3.5611561156115608,\r\n\t-3.5595559555955596,\r\n\t-3.5579557955795575,\r\n\t-3.5563556355635564,\r\n\t-3.5547554755475543,\r\n\t-3.553155315531553,\r\n\t-3.551555155515551,\r\n\t-3.54995499549955,\r\n\t-3.548354835483548,\r\n\t-3.5467546754675467,\r\n\t-3.5451545154515447,\r\n\t-3.5435543554355435,\r\n\t-3.5419541954195415,\r\n\t-3.5403540354035403,\r\n\t-3.5387538753875383,\r\n\t-3.537153715371537,\r\n\t-3.535553555355535,\r\n\t-3.533953395339534,\r\n\t-3.532353235323532,\r\n\t-3.5307530753075307,\r\n\t-3.5291529152915286,\r\n\t-3.5275527552755275,\r\n\t-3.5259525952595254,\r\n\t-3.5243524352435243,\r\n\t-3.522752275227522,\r\n\t-3.521152115211521,\r\n\t-3.519551955195519,\r\n\t-3.517951795179518,\r\n\t-3.516351635163516,\r\n\t-3.5147514751475146,\r\n\t-3.5131513151315126,\r\n\t-3.5115511551155114,\r\n\t-3.5099509950995094,\r\n\t-3.508350835083508,\r\n\t-3.506750675067507,\r\n\t-3.505150515051505,\r\n\t-3.503550355035504,\r\n\t-3.5019501950195018,\r\n\t-3.5003500350035006,\r\n\t-3.4987498749874986,\r\n\t-3.4971497149714974,\r\n\t-3.4955495549554954,\r\n\t-3.493949394939494,\r\n\t-3.492349234923492,\r\n\t-3.490749074907491,\r\n\t-3.489148914891489,\r\n\t-3.4875487548754878,\r\n\t-3.4859485948594857,\r\n\t-3.4843484348434846,\r\n\t-3.4827482748274825,\r\n\t-3.4811481148114813,\r\n\t-3.4795479547954793,\r\n\t-3.477947794779478,\r\n\t-3.476347634763476,\r\n\t-3.474747474747475,\r\n\t-3.473147314731473,\r\n\t-3.4715471547154717,\r\n\t-3.4699469946994697,\r\n\t-3.4683468346834685,\r\n\t-3.4667466746674664,\r\n\t-3.4651465146514653,\r\n\t-3.4635463546354632,\r\n\t-3.461946194619462,\r\n\t-3.46034603460346,\r\n\t-3.458745874587459,\r\n\t-3.457145714571457,\r\n\t-3.4555455545554556,\r\n\t-3.4539453945394536,\r\n\t-3.4523452345234524,\r\n\t-3.4507450745074504,\r\n\t-3.449144914491449,\r\n\t-3.447544754475447,\r\n\t-3.445944594459446,\r\n\t-3.444344434443444,\r\n\t-3.442744274427443,\r\n\t-3.4411441144114407,\r\n\t-3.4395439543954396,\r\n\t-3.4379437943794375,\r\n\t-3.4363436343634364,\r\n\t-3.4347434743474343,\r\n\t-3.433143314331433,\r\n\t-3.431543154315431,\r\n\t-3.42994299429943,\r\n\t-3.428342834283428,\r\n\t-3.4267426742674267,\r\n\t-3.4251425142514247,\r\n\t-3.4235423542354235,\r\n\t-3.4219421942194215,\r\n\t-3.4203420342034203,\r\n\t-3.4187418741874183,\r\n\t-3.417141714171417,\r\n\t-3.415541554155415,\r\n\t-3.413941394139414,\r\n\t-3.412341234123412,\r\n\t-3.4107410741074107,\r\n\t-3.4091409140914086,\r\n\t-3.4075407540754075,\r\n\t-3.4059405940594054,\r\n\t-3.4043404340434043,\r\n\t-3.402740274027402,\r\n\t-3.401140114011401,\r\n\t-3.399539953995399,\r\n\t-3.397939793979398,\r\n\t-3.3963396339633958,\r\n\t-3.3947394739473946,\r\n\t-3.3931393139313926,\r\n\t-3.3915391539153914,\r\n\t-3.3899389938993894,\r\n\t-3.388338833883388,\r\n\t-3.386738673867387,\r\n\t-3.385138513851385,\r\n\t-3.383538353835384,\r\n\t-3.3819381938193818,\r\n\t-3.3803380338033806,\r\n\t-3.3787378737873786,\r\n\t-3.3771377137713774,\r\n\t-3.3755375537553753,\r\n\t-3.373937393739374,\r\n\t-3.372337233723372,\r\n\t-3.370737073707371,\r\n\t-3.369136913691369,\r\n\t-3.3675367536753678,\r\n\t-3.3659365936593657,\r\n\t-3.3643364336433645,\r\n\t-3.3627362736273625,\r\n\t-3.3611361136113613,\r\n\t-3.3595359535953593,\r\n\t-3.357935793579358,\r\n\t-3.356335633563356,\r\n\t-3.354735473547355,\r\n\t-3.353135313531353,\r\n\t-3.3515351535153517,\r\n\t-3.3499349934993496,\r\n\t-3.3483348334833485,\r\n\t-3.3467346734673464,\r\n\t-3.3451345134513453,\r\n\t-3.343534353435343,\r\n\t-3.341934193419342,\r\n\t-3.34033403340334,\r\n\t-3.338733873387339,\r\n\t-3.337133713371337,\r\n\t-3.3355335533553356,\r\n\t-3.3339333933393336,\r\n\t-3.3323332333233324,\r\n\t-3.3307330733073304,\r\n\t-3.329132913291329,\r\n\t-3.327532753275327,\r\n\t-3.325932593259326,\r\n\t-3.324332433243324,\r\n\t-3.322732273227323,\r\n\t-3.3211321132113207,\r\n\t-3.3195319531953196,\r\n\t-3.3179317931793175,\r\n\t-3.3163316331633164,\r\n\t-3.3147314731473143,\r\n\t-3.313131313131313,\r\n\t-3.311531153115311,\r\n\t-3.30993099309931,\r\n\t-3.308330833083308,\r\n\t-3.3067306730673067,\r\n\t-3.3051305130513047,\r\n\t-3.3035303530353035,\r\n\t-3.3019301930193015,\r\n\t-3.3003300330033003,\r\n\t-3.2987298729872983,\r\n\t-3.297129712971297,\r\n\t-3.295529552955295,\r\n\t-3.293929392939294,\r\n\t-3.292329232923292,\r\n\t-3.2907290729072907,\r\n\t-3.2891289128912886,\r\n\t-3.2875287528752875,\r\n\t-3.2859285928592854,\r\n\t-3.2843284328432842,\r\n\t-3.282728272827282,\r\n\t-3.281128112811281,\r\n\t-3.279527952795279,\r\n\t-3.277927792779278,\r\n\t-3.2763276327632758,\r\n\t-3.2747274727472746,\r\n\t-3.2731273127312726,\r\n\t-3.2715271527152714,\r\n\t-3.2699269926992693,\r\n\t-3.268326832683268,\r\n\t-3.266726672667266,\r\n\t-3.265126512651265,\r\n\t-3.263526352635264,\r\n\t-3.2619261926192618,\r\n\t-3.2603260326032606,\r\n\t-3.2587258725872585,\r\n\t-3.2571257125712574,\r\n\t-3.2555255525552553,\r\n\t-3.253925392539254,\r\n\t-3.252325232523252,\r\n\t-3.250725072507251,\r\n\t-3.249124912491249,\r\n\t-3.2475247524752477,\r\n\t-3.2459245924592457,\r\n\t-3.2443244324432445,\r\n\t-3.2427242724272425,\r\n\t-3.2411241124112413,\r\n\t-3.2395239523952393,\r\n\t-3.237923792379238,\r\n\t-3.236323632363236,\r\n\t-3.234723472347235,\r\n\t-3.233123312331233,\r\n\t-3.2315231523152317,\r\n\t-3.2299229922992296,\r\n\t-3.2283228322832285,\r\n\t-3.2267226722672264,\r\n\t-3.2251225122512253,\r\n\t-3.223522352235223,\r\n\t-3.221922192219222,\r\n\t-3.22032203220322,\r\n\t-3.218721872187219,\r\n\t-3.217121712171217,\r\n\t-3.2155215521552156,\r\n\t-3.2139213921392136,\r\n\t-3.2123212321232124,\r\n\t-3.2107210721072104,\r\n\t-3.209120912091209,\r\n\t-3.207520752075207,\r\n\t-3.205920592059206,\r\n\t-3.204320432043204,\r\n\t-3.2027202720272028,\r\n\t-3.2011201120112007,\r\n\t-3.1995199519951996,\r\n\t-3.1979197919791975,\r\n\t-3.1963196319631964,\r\n\t-3.1947194719471943,\r\n\t-3.193119311931193,\r\n\t-3.191519151915191,\r\n\t-3.18991899189919,\r\n\t-3.188318831883188,\r\n\t-3.1867186718671867,\r\n\t-3.1851185118511847,\r\n\t-3.1835183518351835,\r\n\t-3.1819181918191815,\r\n\t-3.1803180318031803,\r\n\t-3.1787178717871782,\r\n\t-3.177117711771177,\r\n\t-3.175517551755175,\r\n\t-3.173917391739174,\r\n\t-3.172317231723172,\r\n\t-3.1707170717071707,\r\n\t-3.1691169116911686,\r\n\t-3.1675167516751674,\r\n\t-3.1659165916591654,\r\n\t-3.1643164316431642,\r\n\t-3.162716271627162,\r\n\t-3.161116111611161,\r\n\t-3.159515951595159,\r\n\t-3.157915791579158,\r\n\t-3.1563156315631558,\r\n\t-3.1547154715471546,\r\n\t-3.1531153115311525,\r\n\t-3.1515151515151514,\r\n\t-3.1499149914991493,\r\n\t-3.148314831483148,\r\n\t-3.146714671467146,\r\n\t-3.145114511451145,\r\n\t-3.143514351435144,\r\n\t-3.1419141914191417,\r\n\t-3.1403140314031406,\r\n\t-3.1387138713871385,\r\n\t-3.1371137113711374,\r\n\t-3.1355135513551353,\r\n\t-3.133913391339134,\r\n\t-3.132313231323132,\r\n\t-3.130713071307131,\r\n\t-3.129112911291129,\r\n\t-3.1275127512751277,\r\n\t-3.1259125912591257,\r\n\t-3.1243124312431245,\r\n\t-3.1227122712271225,\r\n\t-3.1211121112111213,\r\n\t-3.1195119511951193,\r\n\t-3.117911791179118,\r\n\t-3.116311631163116,\r\n\t-3.114711471147115,\r\n\t-3.113111311131113,\r\n\t-3.1115111511151117,\r\n\t-3.1099109910991096,\r\n\t-3.1083108310831085,\r\n\t-3.1067106710671064,\r\n\t-3.1051105110511052,\r\n\t-3.103510351035103,\r\n\t-3.101910191019102,\r\n\t-3.1003100310031,\r\n\t-3.098709870987099,\r\n\t-3.0971097109710968,\r\n\t-3.0955095509550956,\r\n\t-3.0939093909390936,\r\n\t-3.0923092309230924,\r\n\t-3.0907090709070904,\r\n\t-3.089108910891089,\r\n\t-3.087508750875087,\r\n\t-3.085908590859086,\r\n\t-3.084308430843084,\r\n\t-3.0827082708270828,\r\n\t-3.0811081108110807,\r\n\t-3.0795079507950796,\r\n\t-3.0779077907790775,\r\n\t-3.0763076307630763,\r\n\t-3.0747074707470743,\r\n\t-3.073107310731073,\r\n\t-3.071507150715071,\r\n\t-3.06990699069907,\r\n\t-3.068306830683068,\r\n\t-3.0667066706670667,\r\n\t-3.0651065106510647,\r\n\t-3.0635063506350635,\r\n\t-3.0619061906190614,\r\n\t-3.0603060306030603,\r\n\t-3.0587058705870582,\r\n\t-3.057105710571057,\r\n\t-3.055505550555055,\r\n\t-3.053905390539054,\r\n\t-3.052305230523052,\r\n\t-3.0507050705070506,\r\n\t-3.0491049104910486,\r\n\t-3.0475047504750474,\r\n\t-3.0459045904590454,\r\n\t-3.044304430443044,\r\n\t-3.042704270427042,\r\n\t-3.041104110411041,\r\n\t-3.039503950395039,\r\n\t-3.037903790379038,\r\n\t-3.0363036303630357,\r\n\t-3.0347034703470346,\r\n\t-3.0331033103310325,\r\n\t-3.0315031503150314,\r\n\t-3.0299029902990293,\r\n\t-3.028302830283028,\r\n\t-3.026702670267026,\r\n\t-3.025102510251025,\r\n\t-3.023502350235024,\r\n\t-3.0219021902190217,\r\n\t-3.0203020302030206,\r\n\t-3.0187018701870185,\r\n\t-3.0171017101710174,\r\n\t-3.0155015501550153,\r\n\t-3.013901390139014,\r\n\t-3.012301230123012,\r\n\t-3.010701070107011,\r\n\t-3.009100910091009,\r\n\t-3.0075007500750077,\r\n\t-3.0059005900590057,\r\n\t-3.0043004300430045,\r\n\t-3.0027002700270025,\r\n\t-3.0011001100110013,\r\n\t-2.9994999499949992,\r\n\t-2.997899789978998,\r\n\t-2.996299629962996,\r\n\t-2.994699469946995,\r\n\t-2.993099309930993,\r\n\t-2.9914991499149917,\r\n\t-2.9898989898989896,\r\n\t-2.9882988298829884,\r\n\t-2.9866986698669864,\r\n\t-2.9850985098509852,\r\n\t-2.983498349834983,\r\n\t-2.981898189818982,\r\n\t-2.98029802980298,\r\n\t-2.978697869786979,\r\n\t-2.9770977097709768,\r\n\t-2.9754975497549756,\r\n\t-2.9738973897389736,\r\n\t-2.9722972297229724,\r\n\t-2.9706970697069703,\r\n\t-2.969096909690969,\r\n\t-2.967496749674967,\r\n\t-2.965896589658966,\r\n\t-2.964296429642964,\r\n\t-2.9626962696269628,\r\n\t-2.9610961096109607,\r\n\t-2.9594959495949595,\r\n\t-2.9578957895789575,\r\n\t-2.9562956295629563,\r\n\t-2.9546954695469543,\r\n\t-2.953095309530953,\r\n\t-2.951495149514951,\r\n\t-2.94989498949895,\r\n\t-2.948294829482948,\r\n\t-2.9466946694669467,\r\n\t-2.9450945094509446,\r\n\t-2.9434943494349435,\r\n\t-2.9418941894189414,\r\n\t-2.9402940294029403,\r\n\t-2.938693869386938,\r\n\t-2.937093709370937,\r\n\t-2.935493549354935,\r\n\t-2.933893389338934,\r\n\t-2.932293229322932,\r\n\t-2.9306930693069306,\r\n\t-2.9290929092909286,\r\n\t-2.9274927492749274,\r\n\t-2.9258925892589254,\r\n\t-2.924292429242924,\r\n\t-2.922692269226922,\r\n\t-2.921092109210921,\r\n\t-2.919491949194919,\r\n\t-2.917891789178918,\r\n\t-2.9162916291629157,\r\n\t-2.9146914691469146,\r\n\t-2.9130913091309125,\r\n\t-2.9114911491149114,\r\n\t-2.9098909890989093,\r\n\t-2.908290829082908,\r\n\t-2.906690669066906,\r\n\t-2.905090509050905,\r\n\t-2.903490349034903,\r\n\t-2.9018901890189017,\r\n\t-2.9002900290029006,\r\n\t-2.8986898689868985,\r\n\t-2.8970897089708973,\r\n\t-2.8954895489548953,\r\n\t-2.893889388938894,\r\n\t-2.892289228922892,\r\n\t-2.890689068906891,\r\n\t-2.889088908890889,\r\n\t-2.8874887488748877,\r\n\t-2.8858885888588857,\r\n\t-2.8842884288428845,\r\n\t-2.8826882688268824,\r\n\t-2.8810881088108813,\r\n\t-2.8794879487948792,\r\n\t-2.877887788778878,\r\n\t-2.876287628762876,\r\n\t-2.874687468746875,\r\n\t-2.873087308730873,\r\n\t-2.8714871487148717,\r\n\t-2.8698869886988696,\r\n\t-2.8682868286828684,\r\n\t-2.8666866686668664,\r\n\t-2.8650865086508652,\r\n\t-2.863486348634863,\r\n\t-2.861886188618862,\r\n\t-2.86028602860286,\r\n\t-2.858685868586859,\r\n\t-2.8570857085708568,\r\n\t-2.8554855485548556,\r\n\t-2.8538853885388535,\r\n\t-2.8522852285228524,\r\n\t-2.8506850685068503,\r\n\t-2.849084908490849,\r\n\t-2.847484748474847,\r\n\t-2.845884588458846,\r\n\t-2.844284428442844,\r\n\t-2.8426842684268427,\r\n\t-2.8410841084108407,\r\n\t-2.8394839483948395,\r\n\t-2.8378837883788375,\r\n\t-2.8362836283628363,\r\n\t-2.8346834683468343,\r\n\t-2.833083308330833,\r\n\t-2.831483148314831,\r\n\t-2.82988298829883,\r\n\t-2.828282828282828,\r\n\t-2.8266826682668267,\r\n\t-2.8250825082508246,\r\n\t-2.8234823482348235,\r\n\t-2.8218821882188214,\r\n\t-2.8202820282028203,\r\n\t-2.818681868186818,\r\n\t-2.817081708170817,\r\n\t-2.815481548154815,\r\n\t-2.813881388138814,\r\n\t-2.812281228122812,\r\n\t-2.8106810681068106,\r\n\t-2.8090809080908086,\r\n\t-2.8074807480748074,\r\n\t-2.8058805880588054,\r\n\t-2.804280428042804,\r\n\t-2.802680268026802,\r\n\t-2.801080108010801,\r\n\t-2.799479947994799,\r\n\t-2.7978797879787978,\r\n\t-2.7962796279627957,\r\n\t-2.7946794679467946,\r\n\t-2.7930793079307925,\r\n\t-2.7914791479147913,\r\n\t-2.7898789878987893,\r\n\t-2.788278827882788,\r\n\t-2.786678667866786,\r\n\t-2.785078507850785,\r\n\t-2.783478347834783,\r\n\t-2.7818781878187817,\r\n\t-2.7802780278027805,\r\n\t-2.7786778677867785,\r\n\t-2.7770777077707773,\r\n\t-2.7754775477547753,\r\n\t-2.773877387738774,\r\n\t-2.772277227722772,\r\n\t-2.770677067706771,\r\n\t-2.769076907690769,\r\n\t-2.7674767476747677,\r\n\t-2.7658765876587657,\r\n\t-2.7642764276427645,\r\n\t-2.7626762676267624,\r\n\t-2.7610761076107613,\r\n\t-2.7594759475947592,\r\n\t-2.757875787578758,\r\n\t-2.756275627562756,\r\n\t-2.754675467546755,\r\n\t-2.753075307530753,\r\n\t-2.7514751475147516,\r\n\t-2.7498749874987496,\r\n\t-2.7482748274827484,\r\n\t-2.7466746674667464,\r\n\t-2.745074507450745,\r\n\t-2.743474347434743,\r\n\t-2.741874187418742,\r\n\t-2.74027402740274,\r\n\t-2.738673867386739,\r\n\t-2.7370737073707367,\r\n\t-2.7354735473547356,\r\n\t-2.7338733873387335,\r\n\t-2.7322732273227324,\r\n\t-2.7306730673067303,\r\n\t-2.729072907290729,\r\n\t-2.727472747274727,\r\n\t-2.725872587258726,\r\n\t-2.724272427242724,\r\n\t-2.7226722672267227,\r\n\t-2.7210721072107207,\r\n\t-2.7194719471947195,\r\n\t-2.7178717871787175,\r\n\t-2.7162716271627163,\r\n\t-2.7146714671467143,\r\n\t-2.713071307130713,\r\n\t-2.711471147114711,\r\n\t-2.70987098709871,\r\n\t-2.708270827082708,\r\n\t-2.7066706670667067,\r\n\t-2.7050705070507046,\r\n\t-2.7034703470347035,\r\n\t-2.7018701870187014,\r\n\t-2.7002700270027002,\r\n\t-2.698669866986698,\r\n\t-2.697069706970697,\r\n\t-2.695469546954695,\r\n\t-2.693869386938694,\r\n\t-2.6922692269226918,\r\n\t-2.6906690669066906,\r\n\t-2.6890689068906886,\r\n\t-2.6874687468746874,\r\n\t-2.6858685868586853,\r\n\t-2.684268426842684,\r\n\t-2.682668266826682,\r\n\t-2.681068106810681,\r\n\t-2.679467946794679,\r\n\t-2.6778677867786778,\r\n\t-2.6762676267626757,\r\n\t-2.6746674667466745,\r\n\t-2.6730673067306725,\r\n\t-2.6714671467146713,\r\n\t-2.6698669866986693,\r\n\t-2.668266826682668,\r\n\t-2.666666666666666,\r\n\t-2.665066506650665,\r\n\t-2.663466346634663,\r\n\t-2.6618661866186617,\r\n\t-2.6602660266026597,\r\n\t-2.6586658665866585,\r\n\t-2.6570657065706573,\r\n\t-2.6554655465546553,\r\n\t-2.653865386538654,\r\n\t-2.652265226522652,\r\n\t-2.650665066506651,\r\n\t-2.649064906490649,\r\n\t-2.6474647464746477,\r\n\t-2.6458645864586456,\r\n\t-2.6442644264426445,\r\n\t-2.6426642664266424,\r\n\t-2.6410641064106413,\r\n\t-2.639463946394639,\r\n\t-2.637863786378638,\r\n\t-2.636263626362636,\r\n\t-2.634663466346635,\r\n\t-2.633063306330633,\r\n\t-2.6314631463146316,\r\n\t-2.6298629862986296,\r\n\t-2.6282628262826284,\r\n\t-2.6266626662666264,\r\n\t-2.625062506250625,\r\n\t-2.623462346234623,\r\n\t-2.621862186218622,\r\n\t-2.62026202620262,\r\n\t-2.618661866186619,\r\n\t-2.6170617061706167,\r\n\t-2.6154615461546156,\r\n\t-2.6138613861386135,\r\n\t-2.6122612261226124,\r\n\t-2.6106610661066103,\r\n\t-2.609060906090609,\r\n\t-2.607460746074607,\r\n\t-2.605860586058606,\r\n\t-2.604260426042604,\r\n\t-2.6026602660266027,\r\n\t-2.6010601060106007,\r\n\t-2.5994599459945995,\r\n\t-2.5978597859785975,\r\n\t-2.5962596259625963,\r\n\t-2.5946594659465942,\r\n\t-2.593059305930593,\r\n\t-2.591459145914591,\r\n\t-2.58985898589859,\r\n\t-2.588258825882588,\r\n\t-2.5866586658665867,\r\n\t-2.5850585058505846,\r\n\t-2.5834583458345834,\r\n\t-2.5818581858185814,\r\n\t-2.5802580258025802,\r\n\t-2.578657865786578,\r\n\t-2.577057705770577,\r\n\t-2.575457545754575,\r\n\t-2.573857385738574,\r\n\t-2.5722572257225718,\r\n\t-2.5706570657065706,\r\n\t-2.5690569056905685,\r\n\t-2.5674567456745674,\r\n\t-2.5658565856585653,\r\n\t-2.564256425642564,\r\n\t-2.562656265626562,\r\n\t-2.561056105610561,\r\n\t-2.559455945594559,\r\n\t-2.5578557855785578,\r\n\t-2.5562556255625557,\r\n\t-2.5546554655465545,\r\n\t-2.5530553055305525,\r\n\t-2.5514551455145513,\r\n\t-2.5498549854985493,\r\n\t-2.548254825482548,\r\n\t-2.546654665466546,\r\n\t-2.545054505450545,\r\n\t-2.543454345434543,\r\n\t-2.5418541854185417,\r\n\t-2.5402540254025396,\r\n\t-2.5386538653865385,\r\n\t-2.5370537053705373,\r\n\t-2.5354535453545353,\r\n\t-2.533853385338534,\r\n\t-2.532253225322532,\r\n\t-2.530653065306531,\r\n\t-2.529052905290529,\r\n\t-2.5274527452745277,\r\n\t-2.5258525852585256,\r\n\t-2.5242524252425245,\r\n\t-2.5226522652265224,\r\n\t-2.5210521052105213,\r\n\t-2.519451945194519,\r\n\t-2.517851785178518,\r\n\t-2.516251625162516,\r\n\t-2.514651465146515,\r\n\t-2.513051305130513,\r\n\t-2.5114511451145116,\r\n\t-2.5098509850985096,\r\n\t-2.5082508250825084,\r\n\t-2.5066506650665064,\r\n\t-2.505050505050505,\r\n\t-2.503450345034503,\r\n\t-2.501850185018502,\r\n\t-2.5002500250025,\r\n\t-2.4986498649864988,\r\n\t-2.4970497049704967,\r\n\t-2.4954495449544956,\r\n\t-2.4938493849384935,\r\n\t-2.4922492249224923,\r\n\t-2.4906490649064903,\r\n\t-2.489048904890489,\r\n\t-2.487448744874487,\r\n\t-2.485848584858486,\r\n\t-2.484248424842484,\r\n\t-2.4826482648264827,\r\n\t-2.4810481048104807,\r\n\t-2.4794479447944795,\r\n\t-2.4778477847784774,\r\n\t-2.4762476247624763,\r\n\t-2.4746474647464742,\r\n\t-2.473047304730473,\r\n\t-2.471447144714471,\r\n\t-2.46984698469847,\r\n\t-2.468246824682468,\r\n\t-2.4666466646664666,\r\n\t-2.4650465046504646,\r\n\t-2.4634463446344634,\r\n\t-2.4618461846184614,\r\n\t-2.4602460246024602,\r\n\t-2.458645864586458,\r\n\t-2.457045704570457,\r\n\t-2.455445544554455,\r\n\t-2.453845384538454,\r\n\t-2.4522452245224517,\r\n\t-2.4506450645064506,\r\n\t-2.4490449044904485,\r\n\t-2.4474447444744474,\r\n\t-2.4458445844584453,\r\n\t-2.444244424442444,\r\n\t-2.442644264426442,\r\n\t-2.441044104410441,\r\n\t-2.439443944394439,\r\n\t-2.4378437843784377,\r\n\t-2.4362436243624357,\r\n\t-2.4346434643464345,\r\n\t-2.4330433043304325,\r\n\t-2.4314431443144313,\r\n\t-2.4298429842984293,\r\n\t-2.428242824282428,\r\n\t-2.426642664266426,\r\n\t-2.425042504250425,\r\n\t-2.423442344234423,\r\n\t-2.4218421842184217,\r\n\t-2.4202420242024196,\r\n\t-2.4186418641864185,\r\n\t-2.4170417041704164,\r\n\t-2.4154415441544153,\r\n\t-2.413841384138414,\r\n\t-2.412241224122412,\r\n\t-2.410641064106411,\r\n\t-2.409040904090409,\r\n\t-2.4074407440744077,\r\n\t-2.4058405840584056,\r\n\t-2.4042404240424045,\r\n\t-2.4026402640264024,\r\n\t-2.4010401040104012,\r\n\t-2.399439943994399,\r\n\t-2.397839783978398,\r\n\t-2.396239623962396,\r\n\t-2.394639463946395,\r\n\t-2.3930393039303928,\r\n\t-2.3914391439143916,\r\n\t-2.3898389838983896,\r\n\t-2.3882388238823884,\r\n\t-2.3866386638663863,\r\n\t-2.385038503850385,\r\n\t-2.383438343834383,\r\n\t-2.381838183818382,\r\n\t-2.38023802380238,\r\n\t-2.3786378637863788,\r\n\t-2.3770377037703767,\r\n\t-2.3754375437543755,\r\n\t-2.3738373837383735,\r\n\t-2.3722372237223723,\r\n\t-2.3706370637063703,\r\n\t-2.369036903690369,\r\n\t-2.367436743674367,\r\n\t-2.365836583658366,\r\n\t-2.364236423642364,\r\n\t-2.3626362636263627,\r\n\t-2.3610361036103606,\r\n\t-2.3594359435943595,\r\n\t-2.3578357835783574,\r\n\t-2.3562356235623563,\r\n\t-2.3546354635463542,\r\n\t-2.353035303530353,\r\n\t-2.351435143514351,\r\n\t-2.34983498349835,\r\n\t-2.348234823482348,\r\n\t-2.3466346634663466,\r\n\t-2.3450345034503446,\r\n\t-2.3434343434343434,\r\n\t-2.3418341834183414,\r\n\t-2.34023402340234,\r\n\t-2.338633863386338,\r\n\t-2.337033703370337,\r\n\t-2.335433543354335,\r\n\t-2.333833383338334,\r\n\t-2.3322332233223317,\r\n\t-2.3306330633063306,\r\n\t-2.3290329032903285,\r\n\t-2.3274327432743274,\r\n\t-2.3258325832583253,\r\n\t-2.324232423242324,\r\n\t-2.322632263226322,\r\n\t-2.321032103210321,\r\n\t-2.319431943194319,\r\n\t-2.3178317831783177,\r\n\t-2.3162316231623157,\r\n\t-2.3146314631463145,\r\n\t-2.3130313031303125,\r\n\t-2.3114311431143113,\r\n\t-2.3098309830983093,\r\n\t-2.308230823082308,\r\n\t-2.306630663066306,\r\n\t-2.305030503050305,\r\n\t-2.303430343034303,\r\n\t-2.3018301830183017,\r\n\t-2.3002300230022996,\r\n\t-2.2986298629862985,\r\n\t-2.2970297029702964,\r\n\t-2.2954295429542952,\r\n\t-2.293829382938294,\r\n\t-2.292229222922292,\r\n\t-2.290629062906291,\r\n\t-2.289028902890289,\r\n\t-2.2874287428742877,\r\n\t-2.2858285828582856,\r\n\t-2.2842284228422844,\r\n\t-2.2826282628262824,\r\n\t-2.2810281028102812,\r\n\t-2.279427942794279,\r\n\t-2.277827782778278,\r\n\t-2.276227622762276,\r\n\t-2.274627462746275,\r\n\t-2.2730273027302728,\r\n\t-2.2714271427142716,\r\n\t-2.2698269826982695,\r\n\t-2.2682268226822684,\r\n\t-2.2666266626662663,\r\n\t-2.265026502650265,\r\n\t-2.263426342634263,\r\n\t-2.261826182618262,\r\n\t-2.26022602260226,\r\n\t-2.2586258625862587,\r\n\t-2.2570257025702567,\r\n\t-2.2554255425542555,\r\n\t-2.2538253825382535,\r\n\t-2.2522252225222523,\r\n\t-2.2506250625062503,\r\n\t-2.249024902490249,\r\n\t-2.247424742474247,\r\n\t-2.245824582458246,\r\n\t-2.244224422442244,\r\n\t-2.2426242624262427,\r\n\t-2.2410241024102406,\r\n\t-2.2394239423942395,\r\n\t-2.2378237823782374,\r\n\t-2.2362236223622363,\r\n\t-2.234623462346234,\r\n\t-2.233023302330233,\r\n\t-2.231423142314231,\r\n\t-2.22982298229823,\r\n\t-2.228222822282228,\r\n\t-2.2266226622662266,\r\n\t-2.2250225022502246,\r\n\t-2.2234223422342234,\r\n\t-2.2218221822182214,\r\n\t-2.22022202220222,\r\n\t-2.218621862186218,\r\n\t-2.217021702170217,\r\n\t-2.215421542154215,\r\n\t-2.213821382138214,\r\n\t-2.2122212221222117,\r\n\t-2.2106210621062106,\r\n\t-2.2090209020902085,\r\n\t-2.2074207420742074,\r\n\t-2.2058205820582053,\r\n\t-2.204220422042204,\r\n\t-2.202620262026202,\r\n\t-2.201020102010201,\r\n\t-2.199419941994199,\r\n\t-2.1978197819781977,\r\n\t-2.1962196219621957,\r\n\t-2.1946194619461945,\r\n\t-2.1930193019301925,\r\n\t-2.1914191419141913,\r\n\t-2.1898189818981892,\r\n\t-2.188218821882188,\r\n\t-2.186618661866186,\r\n\t-2.185018501850185,\r\n\t-2.183418341834183,\r\n\t-2.1818181818181817,\r\n\t-2.1802180218021796,\r\n\t-2.1786178617861784,\r\n\t-2.1770177017701764,\r\n\t-2.1754175417541752,\r\n\t-2.173817381738174,\r\n\t-2.172217221722172,\r\n\t-2.170617061706171,\r\n\t-2.169016901690169,\r\n\t-2.1674167416741676,\r\n\t-2.1658165816581656,\r\n\t-2.1642164216421644,\r\n\t-2.1626162616261624,\r\n\t-2.161016101610161,\r\n\t-2.159415941594159,\r\n\t-2.157815781578158,\r\n\t-2.156215621562156,\r\n\t-2.154615461546155,\r\n\t-2.1530153015301527,\r\n\t-2.1514151415141516,\r\n\t-2.1498149814981495,\r\n\t-2.1482148214821484,\r\n\t-2.1466146614661463,\r\n\t-2.145014501450145,\r\n\t-2.143414341434143,\r\n\t-2.141814181418142,\r\n\t-2.14021402140214,\r\n\t-2.1386138613861387,\r\n\t-2.1370137013701367,\r\n\t-2.1354135413541355,\r\n\t-2.1338133813381335,\r\n\t-2.1322132213221323,\r\n\t-2.1306130613061303,\r\n\t-2.129012901290129,\r\n\t-2.127412741274127,\r\n\t-2.125812581258126,\r\n\t-2.124212421242124,\r\n\t-2.1226122612261227,\r\n\t-2.1210121012101206,\r\n\t-2.1194119411941195,\r\n\t-2.1178117811781174,\r\n\t-2.1162116211621163,\r\n\t-2.114611461146114,\r\n\t-2.113011301130113,\r\n\t-2.111411141114111,\r\n\t-2.10981098109811,\r\n\t-2.1082108210821078,\r\n\t-2.1066106610661066,\r\n\t-2.1050105010501046,\r\n\t-2.1034103410341034,\r\n\t-2.1018101810181014,\r\n\t-2.1002100210021,\r\n\t-2.098609860986098,\r\n\t-2.097009700970097,\r\n\t-2.095409540954095,\r\n\t-2.0938093809380938,\r\n\t-2.0922092209220917,\r\n\t-2.0906090609060906,\r\n\t-2.0890089008900885,\r\n\t-2.0874087408740873,\r\n\t-2.0858085808580853,\r\n\t-2.084208420842084,\r\n\t-2.082608260826082,\r\n\t-2.081008100810081,\r\n\t-2.079407940794079,\r\n\t-2.0778077807780777,\r\n\t-2.0762076207620757,\r\n\t-2.0746074607460745,\r\n\t-2.0730073007300724,\r\n\t-2.0714071407140713,\r\n\t-2.0698069806980692,\r\n\t-2.068206820682068,\r\n\t-2.066606660666066,\r\n\t-2.065006500650065,\r\n\t-2.063406340634063,\r\n\t-2.0618061806180616,\r\n\t-2.0602060206020596,\r\n\t-2.0586058605860584,\r\n\t-2.0570057005700564,\r\n\t-2.055405540554055,\r\n\t-2.053805380538053,\r\n\t-2.052205220522052,\r\n\t-2.050605060506051,\r\n\t-2.049004900490049,\r\n\t-2.0474047404740476,\r\n\t-2.0458045804580456,\r\n\t-2.0442044204420444,\r\n\t-2.0426042604260424,\r\n\t-2.041004100410041,\r\n\t-2.039403940394039,\r\n\t-2.037803780378038,\r\n\t-2.036203620362036,\r\n\t-2.034603460346035,\r\n\t-2.0330033003300327,\r\n\t-2.0314031403140316,\r\n\t-2.0298029802980295,\r\n\t-2.0282028202820284,\r\n\t-2.0266026602660263,\r\n\t-2.025002500250025,\r\n\t-2.023402340234023,\r\n\t-2.021802180218022,\r\n\t-2.02020202020202,\r\n\t-2.0186018601860187,\r\n\t-2.0170017001700167,\r\n\t-2.0154015401540155,\r\n\t-2.0138013801380135,\r\n\t-2.0122012201220123,\r\n\t-2.0106010601060103,\r\n\t-2.009000900090009,\r\n\t-2.007400740074007,\r\n\t-2.005800580058006,\r\n\t-2.004200420042004,\r\n\t-2.0026002600260027,\r\n\t-2.0010001000100006,\r\n\t-1.9993999399939995,\r\n\t-1.9977997799779974,\r\n\t-1.9961996199619962,\r\n\t-1.9945994599459942,\r\n\t-1.992999299929993,\r\n\t-1.991399139913991,\r\n\t-1.9897989798979898,\r\n\t-1.9881988198819878,\r\n\t-1.9865986598659866,\r\n\t-1.9849984998499846,\r\n\t-1.9833983398339834,\r\n\t-1.9817981798179813,\r\n\t-1.9801980198019802,\r\n\t-1.9785978597859781,\r\n\t-1.976997699769977,\r\n\t-1.975397539753975,\r\n\t-1.9737973797379738,\r\n\t-1.9721972197219717,\r\n\t-1.9705970597059705,\r\n\t-1.9689968996899685,\r\n\t-1.9673967396739673,\r\n\t-1.9657965796579653,\r\n\t-1.9641964196419641,\r\n\t-1.962596259625962,\r\n\t-1.960996099609961,\r\n\t-1.9593959395939589,\r\n\t-1.9577957795779577,\r\n\t-1.9561956195619556,\r\n\t-1.9545954595459545,\r\n\t-1.9529952995299524,\r\n\t-1.9513951395139513,\r\n\t-1.9497949794979492,\r\n\t-1.948194819481948,\r\n\t-1.946594659465946,\r\n\t-1.9449944994499448,\r\n\t-1.9433943394339428,\r\n\t-1.9417941794179416,\r\n\t-1.9401940194019396,\r\n\t-1.9385938593859384,\r\n\t-1.9369936993699364,\r\n\t-1.9353935393539352,\r\n\t-1.9337933793379332,\r\n\t-1.932193219321932,\r\n\t-1.9305930593059308,\r\n\t-1.9289928992899288,\r\n\t-1.9273927392739276,\r\n\t-1.9257925792579256,\r\n\t-1.9241924192419244,\r\n\t-1.9225922592259224,\r\n\t-1.9209920992099212,\r\n\t-1.9193919391939191,\r\n\t-1.917791779177918,\r\n\t-1.916191619161916,\r\n\t-1.9145914591459148,\r\n\t-1.9129912991299127,\r\n\t-1.9113911391139116,\r\n\t-1.9097909790979095,\r\n\t-1.9081908190819084,\r\n\t-1.9065906590659063,\r\n\t-1.9049904990499051,\r\n\t-1.903390339033903,\r\n\t-1.901790179017902,\r\n\t-1.9001900190018999,\r\n\t-1.8985898589858987,\r\n\t-1.8969896989698967,\r\n\t-1.8953895389538955,\r\n\t-1.8937893789378935,\r\n\t-1.8921892189218923,\r\n\t-1.8905890589058902,\r\n\t-1.888988898889889,\r\n\t-1.887388738873887,\r\n\t-1.8857885788578859,\r\n\t-1.8841884188418838,\r\n\t-1.8825882588258827,\r\n\t-1.8809880988098806,\r\n\t-1.8793879387938794,\r\n\t-1.8777877787778774,\r\n\t-1.8761876187618762,\r\n\t-1.8745874587458742,\r\n\t-1.872987298729873,\r\n\t-1.871387138713871,\r\n\t-1.8697869786978698,\r\n\t-1.8681868186818678,\r\n\t-1.8665866586658666,\r\n\t-1.8649864986498645,\r\n\t-1.8633863386338634,\r\n\t-1.8617861786178613,\r\n\t-1.8601860186018602,\r\n\t-1.8585858585858581,\r\n\t-1.856985698569857,\r\n\t-1.855385538553855,\r\n\t-1.8537853785378537,\r\n\t-1.8521852185218517,\r\n\t-1.8505850585058505,\r\n\t-1.8489848984898485,\r\n\t-1.8473847384738473,\r\n\t-1.8457845784578453,\r\n\t-1.844184418441844,\r\n\t-1.842584258425842,\r\n\t-1.840984098409841,\r\n\t-1.8393839383938388,\r\n\t-1.8377837783778377,\r\n\t-1.8361836183618356,\r\n\t-1.8345834583458345,\r\n\t-1.8329832983298324,\r\n\t-1.8313831383138313,\r\n\t-1.8297829782978292,\r\n\t-1.828182818281828,\r\n\t-1.826582658265826,\r\n\t-1.8249824982498248,\r\n\t-1.8233823382338228,\r\n\t-1.8217821782178216,\r\n\t-1.8201820182018196,\r\n\t-1.8185818581858184,\r\n\t-1.8169816981698164,\r\n\t-1.8153815381538152,\r\n\t-1.8137813781378131,\r\n\t-1.812181218121812,\r\n\t-1.81058105810581,\r\n\t-1.8089808980898088,\r\n\t-1.8073807380738076,\r\n\t-1.8057805780578056,\r\n\t-1.8041804180418044,\r\n\t-1.8025802580258024,\r\n\t-1.8009800980098012,\r\n\t-1.7993799379937991,\r\n\t-1.797779777977798,\r\n\t-1.796179617961796,\r\n\t-1.7945794579457948,\r\n\t-1.7929792979297927,\r\n\t-1.7913791379137916,\r\n\t-1.7897789778977895,\r\n\t-1.7881788178817883,\r\n\t-1.7865786578657863,\r\n\t-1.7849784978497851,\r\n\t-1.783378337833783,\r\n\t-1.781778177817782,\r\n\t-1.7801780178017799,\r\n\t-1.7785778577857787,\r\n\t-1.7769776977697767,\r\n\t-1.7753775377537755,\r\n\t-1.7737773777377734,\r\n\t-1.7721772177217723,\r\n\t-1.7705770577057702,\r\n\t-1.768976897689769,\r\n\t-1.767376737673767,\r\n\t-1.7657765776577659,\r\n\t-1.7641764176417638,\r\n\t-1.7625762576257626,\r\n\t-1.7609760976097606,\r\n\t-1.7593759375937594,\r\n\t-1.7577757775777574,\r\n\t-1.7561756175617562,\r\n\t-1.7545754575457542,\r\n\t-1.752975297529753,\r\n\t-1.751375137513751,\r\n\t-1.7497749774977498,\r\n\t-1.7481748174817477,\r\n\t-1.7465746574657466,\r\n\t-1.7449744974497445,\r\n\t-1.7433743374337434,\r\n\t-1.7417741774177413,\r\n\t-1.7401740174017402,\r\n\t-1.738573857385738,\r\n\t-1.736973697369737,\r\n\t-1.735373537353735,\r\n\t-1.7337733773377337,\r\n\t-1.7321732173217317,\r\n\t-1.7305730573057305,\r\n\t-1.7289728972897285,\r\n\t-1.7273727372737273,\r\n\t-1.7257725772577253,\r\n\t-1.724172417241724,\r\n\t-1.722572257225722,\r\n\t-1.7209720972097209,\r\n\t-1.7193719371937188,\r\n\t-1.7177717771777177,\r\n\t-1.7161716171617156,\r\n\t-1.7145714571457145,\r\n\t-1.7129712971297124,\r\n\t-1.7113711371137112,\r\n\t-1.7097709770977092,\r\n\t-1.708170817081708,\r\n\t-1.706570657065706,\r\n\t-1.7049704970497048,\r\n\t-1.7033703370337028,\r\n\t-1.7017701770177016,\r\n\t-1.7001700170016996,\r\n\t-1.6985698569856984,\r\n\t-1.6969696969696964,\r\n\t-1.6953695369536952,\r\n\t-1.6937693769376931,\r\n\t-1.692169216921692,\r\n\t-1.69056905690569,\r\n\t-1.6889688968896888,\r\n\t-1.6873687368736876,\r\n\t-1.6857685768576856,\r\n\t-1.6841684168416844,\r\n\t-1.6825682568256823,\r\n\t-1.6809680968096812,\r\n\t-1.6793679367936791,\r\n\t-1.677767776777678,\r\n\t-1.676167616761676,\r\n\t-1.6745674567456748,\r\n\t-1.6729672967296727,\r\n\t-1.6713671367136715,\r\n\t-1.6697669766976695,\r\n\t-1.6681668166816683,\r\n\t-1.6665666566656663,\r\n\t-1.6649664966496651,\r\n\t-1.663366336633663,\r\n\t-1.661766176617662,\r\n\t-1.6601660166016599,\r\n\t-1.6585658565856587,\r\n\t-1.6569656965696566,\r\n\t-1.6553655365536555,\r\n\t-1.6537653765376534,\r\n\t-1.6521652165216523,\r\n\t-1.6505650565056502,\r\n\t-1.648964896489649,\r\n\t-1.647364736473647,\r\n\t-1.6457645764576458,\r\n\t-1.6441644164416438,\r\n\t-1.6425642564256426,\r\n\t-1.6409640964096406,\r\n\t-1.6393639363936394,\r\n\t-1.6377637763776374,\r\n\t-1.6361636163616362,\r\n\t-1.6345634563456342,\r\n\t-1.632963296329633,\r\n\t-1.631363136313631,\r\n\t-1.6297629762976298,\r\n\t-1.6281628162816277,\r\n\t-1.6265626562656266,\r\n\t-1.6249624962496245,\r\n\t-1.6233623362336234,\r\n\t-1.6217621762176213,\r\n\t-1.6201620162016201,\r\n\t-1.618561856185618,\r\n\t-1.616961696169617,\r\n\t-1.6153615361536149,\r\n\t-1.6137613761376137,\r\n\t-1.6121612161216117,\r\n\t-1.6105610561056105,\r\n\t-1.6089608960896085,\r\n\t-1.6073607360736073,\r\n\t-1.6057605760576052,\r\n\t-1.604160416041604,\r\n\t-1.602560256025602,\r\n\t-1.6009600960096009,\r\n\t-1.5993599359935988,\r\n\t-1.5977597759775977,\r\n\t-1.5961596159615956,\r\n\t-1.5945594559455945,\r\n\t-1.5929592959295924,\r\n\t-1.5913591359135912,\r\n\t-1.5897589758975892,\r\n\t-1.588158815881588,\r\n\t-1.586558655865586,\r\n\t-1.5849584958495848,\r\n\t-1.5833583358335828,\r\n\t-1.5817581758175816,\r\n\t-1.5801580158015796,\r\n\t-1.5785578557855784,\r\n\t-1.5769576957695763,\r\n\t-1.5753575357535752,\r\n\t-1.5737573757375731,\r\n\t-1.572157215721572,\r\n\t-1.57055705570557,\r\n\t-1.5689568956895688,\r\n\t-1.5673567356735667,\r\n\t-1.5657565756575655,\r\n\t-1.5641564156415644,\r\n\t-1.5625562556255623,\r\n\t-1.5609560956095612,\r\n\t-1.5593559355935591,\r\n\t-1.557755775577558,\r\n\t-1.556155615561556,\r\n\t-1.5545554555455547,\r\n\t-1.5529552955295527,\r\n\t-1.5513551355135515,\r\n\t-1.5497549754975495,\r\n\t-1.5481548154815483,\r\n\t-1.5465546554655463,\r\n\t-1.544954495449545,\r\n\t-1.543354335433543,\r\n\t-1.541754175417542,\r\n\t-1.5401540154015398,\r\n\t-1.5385538553855387,\r\n\t-1.5369536953695366,\r\n\t-1.5353535353535355,\r\n\t-1.5337533753375334,\r\n\t-1.5321532153215323,\r\n\t-1.5305530553055302,\r\n\t-1.528952895289529,\r\n\t-1.527352735273527,\r\n\t-1.5257525752575258,\r\n\t-1.5241524152415238,\r\n\t-1.5225522552255226,\r\n\t-1.5209520952095206,\r\n\t-1.5193519351935194,\r\n\t-1.5177517751775174,\r\n\t-1.5161516151615162,\r\n\t-1.5145514551455141,\r\n\t-1.512951295129513,\r\n\t-1.511351135113511,\r\n\t-1.5097509750975098,\r\n\t-1.5081508150815077,\r\n\t-1.5065506550655066,\r\n\t-1.5049504950495045,\r\n\t-1.5033503350335033,\r\n\t-1.5017501750175013,\r\n\t-1.5001500150015001,\r\n\t-1.498549854985498,\r\n\t-1.496949694969497,\r\n\t-1.4953495349534949,\r\n\t-1.4937493749374937,\r\n\t-1.4921492149214917,\r\n\t-1.4905490549054905,\r\n\t-1.4889488948894885,\r\n\t-1.4873487348734873,\r\n\t-1.4857485748574852,\r\n\t-1.484148414841484,\r\n\t-1.482548254825482,\r\n\t-1.4809480948094809,\r\n\t-1.4793479347934788,\r\n\t-1.4777477747774777,\r\n\t-1.4761476147614756,\r\n\t-1.4745474547454744,\r\n\t-1.4729472947294724,\r\n\t-1.4713471347134712,\r\n\t-1.4697469746974692,\r\n\t-1.468146814681468,\r\n\t-1.466546654665466,\r\n\t-1.4649464946494648,\r\n\t-1.4633463346334628,\r\n\t-1.4617461746174616,\r\n\t-1.4601460146014595,\r\n\t-1.4585458545854584,\r\n\t-1.4569456945694563,\r\n\t-1.4553455345534552,\r\n\t-1.4537453745374531,\r\n\t-1.452145214521452,\r\n\t-1.45054505450545,\r\n\t-1.4489448944894487,\r\n\t-1.4473447344734467,\r\n\t-1.4457445744574455,\r\n\t-1.4441444144414444,\r\n\t-1.4425442544254423,\r\n\t-1.4409440944094412,\r\n\t-1.439343934393439,\r\n\t-1.437743774377438,\r\n\t-1.436143614361436,\r\n\t-1.4345434543454347,\r\n\t-1.4329432943294327,\r\n\t-1.4313431343134315,\r\n\t-1.4297429742974295,\r\n\t-1.4281428142814283,\r\n\t-1.4265426542654263,\r\n\t-1.424942494249425,\r\n\t-1.423342334233423,\r\n\t-1.4217421742174219,\r\n\t-1.4201420142014198,\r\n\t-1.4185418541854187,\r\n\t-1.4169416941694166,\r\n\t-1.4153415341534155,\r\n\t-1.4137413741374134,\r\n\t-1.4121412141214122,\r\n\t-1.4105410541054102,\r\n\t-1.408940894089409,\r\n\t-1.407340734073407,\r\n\t-1.4057405740574058,\r\n\t-1.4041404140414038,\r\n\t-1.4025402540254026,\r\n\t-1.4009400940094006,\r\n\t-1.3993399339933994,\r\n\t-1.3977397739773973,\r\n\t-1.3961396139613962,\r\n\t-1.3945394539453941,\r\n\t-1.392939293929393,\r\n\t-1.391339133913391,\r\n\t-1.3897389738973898,\r\n\t-1.3881388138813877,\r\n\t-1.3865386538653866,\r\n\t-1.3849384938493845,\r\n\t-1.3833383338333833,\r\n\t-1.3817381738173813,\r\n\t-1.3801380138013801,\r\n\t-1.378537853785378,\r\n\t-1.376937693769377,\r\n\t-1.3753375337533749,\r\n\t-1.3737373737373737,\r\n\t-1.3721372137213717,\r\n\t-1.3705370537053705,\r\n\t-1.3689368936893684,\r\n\t-1.3673367336733673,\r\n\t-1.3657365736573652,\r\n\t-1.364136413641364,\r\n\t-1.362536253625362,\r\n\t-1.3609360936093609,\r\n\t-1.3593359335933588,\r\n\t-1.3577357735773576,\r\n\t-1.3561356135613556,\r\n\t-1.3545354535453544,\r\n\t-1.3529352935293524,\r\n\t-1.3513351335133512,\r\n\t-1.3497349734973492,\r\n\t-1.348134813481348,\r\n\t-1.346534653465346,\r\n\t-1.3449344934493448,\r\n\t-1.3433343334333427,\r\n\t-1.3417341734173416,\r\n\t-1.3401340134013395,\r\n\t-1.3385338533853384,\r\n\t-1.3369336933693363,\r\n\t-1.3353335333533352,\r\n\t-1.333733373337333,\r\n\t-1.332133213321332,\r\n\t-1.33053305330533,\r\n\t-1.3289328932893287,\r\n\t-1.3273327332733267,\r\n\t-1.3257325732573255,\r\n\t-1.3241324132413244,\r\n\t-1.3225322532253223,\r\n\t-1.3209320932093211,\r\n\t-1.319331933193319,\r\n\t-1.317731773177318,\r\n\t-1.3161316131613159,\r\n\t-1.3145314531453147,\r\n\t-1.3129312931293127,\r\n\t-1.3113311331133115,\r\n\t-1.3097309730973095,\r\n\t-1.3081308130813083,\r\n\t-1.3065306530653062,\r\n\t-1.304930493049305,\r\n\t-1.303330333033303,\r\n\t-1.3017301730173019,\r\n\t-1.3001300130012998,\r\n\t-1.2985298529852987,\r\n\t-1.2969296929692966,\r\n\t-1.2953295329532954,\r\n\t-1.2937293729372934,\r\n\t-1.2921292129212922,\r\n\t-1.2905290529052902,\r\n\t-1.288928892889289,\r\n\t-1.287328732873287,\r\n\t-1.2857285728572858,\r\n\t-1.2841284128412838,\r\n\t-1.2825282528252826,\r\n\t-1.2809280928092805,\r\n\t-1.2793279327932794,\r\n\t-1.2777277727772773,\r\n\t-1.2761276127612762,\r\n\t-1.2745274527452741,\r\n\t-1.272927292729273,\r\n\t-1.271327132713271,\r\n\t-1.2697269726972698,\r\n\t-1.2681268126812677,\r\n\t-1.2665266526652665,\r\n\t-1.2649264926492645,\r\n\t-1.2633263326332633,\r\n\t-1.2617261726172613,\r\n\t-1.2601260126012601,\r\n\t-1.258525852585258,\r\n\t-1.256925692569257,\r\n\t-1.2553255325532549,\r\n\t-1.2537253725372537,\r\n\t-1.2521252125212516,\r\n\t-1.2505250525052505,\r\n\t-1.2489248924892484,\r\n\t-1.2473247324732473,\r\n\t-1.2457245724572452,\r\n\t-1.244124412441244,\r\n\t-1.242524252425242,\r\n\t-1.2409240924092408,\r\n\t-1.2393239323932388,\r\n\t-1.2377237723772376,\r\n\t-1.2361236123612356,\r\n\t-1.2345234523452344,\r\n\t-1.2329232923292324,\r\n\t-1.2313231323132312,\r\n\t-1.2297229722972292,\r\n\t-1.228122812281228,\r\n\t-1.226522652265226,\r\n\t-1.2249224922492248,\r\n\t-1.2233223322332227,\r\n\t-1.2217221722172216,\r\n\t-1.2201220122012195,\r\n\t-1.2185218521852184,\r\n\t-1.2169216921692163,\r\n\t-1.2153215321532151,\r\n\t-1.213721372137213,\r\n\t-1.212121212121212,\r\n\t-1.2105210521052099,\r\n\t-1.2089208920892087,\r\n\t-1.2073207320732067,\r\n\t-1.2057205720572055,\r\n\t-1.2041204120412035,\r\n\t-1.2025202520252023,\r\n\t-1.2009200920092011,\r\n\t-1.199319931993199,\r\n\t-1.197719771977198,\r\n\t-1.1961196119611959,\r\n\t-1.1945194519451947,\r\n\t-1.1929192919291927,\r\n\t-1.1913191319131915,\r\n\t-1.1897189718971894,\r\n\t-1.1881188118811883,\r\n\t-1.1865186518651862,\r\n\t-1.184918491849185,\r\n\t-1.183318331833183,\r\n\t-1.1817181718171819,\r\n\t-1.1801180118011798,\r\n\t-1.1785178517851786,\r\n\t-1.1769176917691766,\r\n\t-1.1753175317531754,\r\n\t-1.1737173717371734,\r\n\t-1.1721172117211722,\r\n\t-1.1705170517051702,\r\n\t-1.168916891689169,\r\n\t-1.167316731673167,\r\n\t-1.1657165716571658,\r\n\t-1.1641164116411638,\r\n\t-1.1625162516251626,\r\n\t-1.1609160916091605,\r\n\t-1.1593159315931594,\r\n\t-1.1577157715771573,\r\n\t-1.1561156115611562,\r\n\t-1.1545154515451541,\r\n\t-1.152915291529153,\r\n\t-1.151315131513151,\r\n\t-1.1497149714971497,\r\n\t-1.1481148114811477,\r\n\t-1.1465146514651465,\r\n\t-1.1449144914491445,\r\n\t-1.1433143314331433,\r\n\t-1.1417141714171413,\r\n\t-1.14011401140114,\r\n\t-1.138513851385138,\r\n\t-1.136913691369137,\r\n\t-1.1353135313531348,\r\n\t-1.1337133713371337,\r\n\t-1.1321132113211316,\r\n\t-1.1305130513051305,\r\n\t-1.1289128912891284,\r\n\t-1.1273127312731273,\r\n\t-1.1257125712571252,\r\n\t-1.124112411241124,\r\n\t-1.122512251225122,\r\n\t-1.1209120912091208,\r\n\t-1.1193119311931188,\r\n\t-1.1177117711771176,\r\n\t-1.1161116111611156,\r\n\t-1.1145114511451144,\r\n\t-1.1129112911291124,\r\n\t-1.1113111311131112,\r\n\t-1.1097109710971091,\r\n\t-1.108110811081108,\r\n\t-1.106510651065106,\r\n\t-1.1049104910491048,\r\n\t-1.1033103310331027,\r\n\t-1.1017101710171016,\r\n\t-1.1001100110010995,\r\n\t-1.0985098509850983,\r\n\t-1.0969096909690963,\r\n\t-1.0953095309530951,\r\n\t-1.093709370937093,\r\n\t-1.092109210921092,\r\n\t-1.0905090509050899,\r\n\t-1.0889088908890887,\r\n\t-1.0873087308730867,\r\n\t-1.0857085708570855,\r\n\t-1.0841084108410834,\r\n\t-1.0825082508250823,\r\n\t-1.0809080908090811,\r\n\t-1.079307930793079,\r\n\t-1.077707770777078,\r\n\t-1.0761076107610759,\r\n\t-1.0745074507450747,\r\n\t-1.0729072907290726,\r\n\t-1.0713071307130715,\r\n\t-1.0697069706970694,\r\n\t-1.0681068106810683,\r\n\t-1.0665066506650662,\r\n\t-1.064906490649065,\r\n\t-1.063306330633063,\r\n\t-1.0617061706170619,\r\n\t-1.0601060106010598,\r\n\t-1.0585058505850586,\r\n\t-1.0569056905690566,\r\n\t-1.0553055305530554,\r\n\t-1.0537053705370534,\r\n\t-1.0521052105210522,\r\n\t-1.0505050505050502,\r\n\t-1.048904890489049,\r\n\t-1.047304730473047,\r\n\t-1.0457045704570458,\r\n\t-1.0441044104410437,\r\n\t-1.0425042504250426,\r\n\t-1.0409040904090405,\r\n\t-1.0393039303930394,\r\n\t-1.0377037703770373,\r\n\t-1.0361036103610362,\r\n\t-1.034503450345034,\r\n\t-1.032903290329033,\r\n\t-1.031303130313031,\r\n\t-1.0297029702970297,\r\n\t-1.0281028102810277,\r\n\t-1.0265026502650265,\r\n\t-1.0249024902490245,\r\n\t-1.0233023302330233,\r\n\t-1.0217021702170213,\r\n\t-1.02010201020102,\r\n\t-1.018501850185018,\r\n\t-1.0169016901690169,\r\n\t-1.0153015301530148,\r\n\t-1.0137013701370137,\r\n\t-1.0121012101210116,\r\n\t-1.0105010501050105,\r\n\t-1.0089008900890084,\r\n\t-1.0073007300730072,\r\n\t-1.0057005700570052,\r\n\t-1.004100410041004,\r\n\t-1.002500250025002,\r\n\t-1.0009000900090008,\r\n\t-0.9992999299929988,\r\n\t-0.9976997699769976,\r\n\t-0.9960996099609956,\r\n\t-0.9944994499449944,\r\n\t-0.9928992899289923,\r\n\t-0.9912991299129912,\r\n\t-0.9896989698969891,\r\n\t-0.988098809880988,\r\n\t-0.9864986498649859,\r\n\t-0.9848984898489848,\r\n\t-0.9832983298329827,\r\n\t-0.9816981698169815,\r\n\t-0.9800980098009795,\r\n\t-0.9784978497849783,\r\n\t-0.9768976897689763,\r\n\t-0.9752975297529751,\r\n\t-0.9736973697369731,\r\n\t-0.9720972097209719,\r\n\t-0.9704970497049699,\r\n\t-0.9688968896889687,\r\n\t-0.9672967296729666,\r\n\t-0.9656965696569655,\r\n\t-0.9640964096409634,\r\n\t-0.9624962496249623,\r\n\t-0.9608960896089602,\r\n\t-0.9592959295929591,\r\n\t-0.9576957695769579,\r\n\t-0.9560956095609559,\r\n\t-0.9544954495449547,\r\n\t-0.9528952895289526,\r\n\t-0.9512951295129515,\r\n\t-0.9496949694969494,\r\n\t-0.9480948094809483,\r\n\t-0.9464946494649462,\r\n\t-0.944894489448945,\r\n\t-0.943294329432943,\r\n\t-0.9416941694169418,\r\n\t-0.9400940094009398,\r\n\t-0.9384938493849386,\r\n\t-0.9368936893689366,\r\n\t-0.9352935293529354,\r\n\t-0.9336933693369334,\r\n\t-0.9320932093209322,\r\n\t-0.9304930493049302,\r\n\t-0.928892889288929,\r\n\t-0.9272927292729269,\r\n\t-0.9256925692569258,\r\n\t-0.9240924092409237,\r\n\t-0.9224922492249226,\r\n\t-0.9208920892089205,\r\n\t-0.9192919291929194,\r\n\t-0.9176917691769173,\r\n\t-0.9160916091609161,\r\n\t-0.9144914491449141,\r\n\t-0.9128912891289129,\r\n\t-0.9112911291129109,\r\n\t-0.9096909690969097,\r\n\t-0.9080908090809077,\r\n\t-0.9064906490649065,\r\n\t-0.9048904890489045,\r\n\t-0.9032903290329033,\r\n\t-0.9016901690169012,\r\n\t-0.9000900090009001,\r\n\t-0.898489848984898,\r\n\t-0.8968896889688969,\r\n\t-0.8952895289528948,\r\n\t-0.8936893689368937,\r\n\t-0.8920892089208916,\r\n\t-0.8904890489048904,\r\n\t-0.8888888888888884,\r\n\t-0.8872887288728872,\r\n\t-0.8856885688568852,\r\n\t-0.884088408840884,\r\n\t-0.882488248824882,\r\n\t-0.8808880888088808,\r\n\t-0.8792879287928788,\r\n\t-0.8776877687768776,\r\n\t-0.8760876087608755,\r\n\t-0.8744874487448744,\r\n\t-0.8728872887288723,\r\n\t-0.8712871287128712,\r\n\t-0.8696869686968691,\r\n\t-0.868086808680868,\r\n\t-0.8664866486648659,\r\n\t-0.8648864886488647,\r\n\t-0.8632863286328627,\r\n\t-0.8616861686168615,\r\n\t-0.8600860086008595,\r\n\t-0.8584858485848583,\r\n\t-0.8568856885688563,\r\n\t-0.8552855285528551,\r\n\t-0.8536853685368531,\r\n\t-0.8520852085208519,\r\n\t-0.8504850485048498,\r\n\t-0.8488848884888487,\r\n\t-0.8472847284728466,\r\n\t-0.8456845684568455,\r\n\t-0.8440844084408434,\r\n\t-0.8424842484248423,\r\n\t-0.8408840884088402,\r\n\t-0.839283928392839,\r\n\t-0.8376837683768379,\r\n\t-0.8360836083608358,\r\n\t-0.8344834483448347,\r\n\t-0.8328832883288326,\r\n\t-0.8312831283128315,\r\n\t-0.8296829682968294,\r\n\t-0.8280828082808283,\r\n\t-0.8264826482648262,\r\n\t-0.824882488248825,\r\n\t-0.823282328232823,\r\n\t-0.8216821682168218,\r\n\t-0.8200820082008198,\r\n\t-0.8184818481848186,\r\n\t-0.8168816881688166,\r\n\t-0.8152815281528154,\r\n\t-0.8136813681368134,\r\n\t-0.8120812081208122,\r\n\t-0.8104810481048101,\r\n\t-0.808880888088809,\r\n\t-0.8072807280728069,\r\n\t-0.8056805680568058,\r\n\t-0.8040804080408037,\r\n\t-0.8024802480248026,\r\n\t-0.8008800880088005,\r\n\t-0.7992799279927993,\r\n\t-0.7976797679767973,\r\n\t-0.7960796079607961,\r\n\t-0.7944794479447941,\r\n\t-0.7928792879287929,\r\n\t-0.7912791279127909,\r\n\t-0.7896789678967897,\r\n\t-0.7880788078807877,\r\n\t-0.7864786478647865,\r\n\t-0.7848784878487844,\r\n\t-0.7832783278327833,\r\n\t-0.7816781678167812,\r\n\t-0.7800780078007801,\r\n\t-0.778477847784778,\r\n\t-0.7768776877687769,\r\n\t-0.7752775277527748,\r\n\t-0.7736773677367736,\r\n\t-0.7720772077207716,\r\n\t-0.7704770477047704,\r\n\t-0.7688768876887684,\r\n\t-0.7672767276727672,\r\n\t-0.7656765676567652,\r\n\t-0.764076407640764,\r\n\t-0.762476247624762,\r\n\t-0.7608760876087608,\r\n\t-0.7592759275927587,\r\n\t-0.7576757675767576,\r\n\t-0.7560756075607555,\r\n\t-0.7544754475447544,\r\n\t-0.7528752875287523,\r\n\t-0.7512751275127512,\r\n\t-0.7496749674967491,\r\n\t-0.748074807480748,\r\n\t-0.7464746474647459,\r\n\t-0.7448744874487447,\r\n\t-0.7432743274327427,\r\n\t-0.7416741674167415,\r\n\t-0.7400740074007395,\r\n\t-0.7384738473847383,\r\n\t-0.7368736873687363,\r\n\t-0.7352735273527351,\r\n\t-0.733673367336733,\r\n\t-0.7320732073207319,\r\n\t-0.7304730473047298,\r\n\t-0.7288728872887287,\r\n\t-0.7272727272727266,\r\n\t-0.7256725672567255,\r\n\t-0.7240724072407234,\r\n\t-0.7224722472247223,\r\n\t-0.7208720872087202,\r\n\t-0.719271927192719,\r\n\t-0.717671767176717,\r\n\t-0.7160716071607158,\r\n\t-0.7144714471447147,\r\n\t-0.7128712871287126,\r\n\t-0.7112711271127115,\r\n\t-0.7096709670967094,\r\n\t-0.7080708070807082,\r\n\t-0.7064706470647062,\r\n\t-0.704870487048705,\r\n\t-0.703270327032703,\r\n\t-0.7016701670167018,\r\n\t-0.7000700070006998,\r\n\t-0.6984698469846986,\r\n\t-0.6968696869686966,\r\n\t-0.6952695269526954,\r\n\t-0.6936693669366933,\r\n\t-0.6920692069206922,\r\n\t-0.6904690469046901,\r\n\t-0.688868886888689,\r\n\t-0.6872687268726869,\r\n\t-0.6856685668566858,\r\n\t-0.6840684068406837,\r\n\t-0.6824682468246825,\r\n\t-0.6808680868086805,\r\n\t-0.6792679267926793,\r\n\t-0.6776677667766773,\r\n\t-0.6760676067606761,\r\n\t-0.6744674467446741,\r\n\t-0.6728672867286729,\r\n\t-0.6712671267126709,\r\n\t-0.6696669666966697,\r\n\t-0.6680668066806676,\r\n\t-0.6664666466646665,\r\n\t-0.6648664866486644,\r\n\t-0.6632663266326633,\r\n\t-0.6616661666166612,\r\n\t-0.6600660066006601,\r\n\t-0.658465846584658,\r\n\t-0.6568656865686568,\r\n\t-0.6552655265526548,\r\n\t-0.6536653665366536,\r\n\t-0.6520652065206516,\r\n\t-0.6504650465046504,\r\n\t-0.6488648864886484,\r\n\t-0.6472647264726472,\r\n\t-0.6456645664566452,\r\n\t-0.644064406440644,\r\n\t-0.642464246424642,\r\n\t-0.6408640864086408,\r\n\t-0.6392639263926387,\r\n\t-0.6376637663766376,\r\n\t-0.6360636063606355,\r\n\t-0.6344634463446344,\r\n\t-0.6328632863286323,\r\n\t-0.6312631263126312,\r\n\t-0.6296629662966291,\r\n\t-0.6280628062806279,\r\n\t-0.6264626462646259,\r\n\t-0.6248624862486247,\r\n\t-0.6232623262326227,\r\n\t-0.6216621662166215,\r\n\t-0.6200620062006195,\r\n\t-0.6184618461846183,\r\n\t-0.6168616861686163,\r\n\t-0.6152615261526151,\r\n\t-0.613661366136613,\r\n\t-0.6120612061206119,\r\n\t-0.6104610461046098,\r\n\t-0.6088608860886087,\r\n\t-0.6072607260726066,\r\n\t-0.6056605660566055,\r\n\t-0.6040604060406034,\r\n\t-0.6024602460246022,\r\n\t-0.6008600860086002,\r\n\t-0.599259925992599,\r\n\t-0.597659765976597,\r\n\t-0.5960596059605958,\r\n\t-0.5944594459445947,\r\n\t-0.5928592859285926,\r\n\t-0.5912591259125914,\r\n\t-0.5896589658965894,\r\n\t-0.5880588058805882,\r\n\t-0.5864586458645862,\r\n\t-0.584858485848585,\r\n\t-0.583258325832583,\r\n\t-0.5816581658165818,\r\n\t-0.5800580058005798,\r\n\t-0.5784578457845786,\r\n\t-0.5768576857685765,\r\n\t-0.5752575257525754,\r\n\t-0.5736573657365733,\r\n\t-0.5720572057205722,\r\n\t-0.5704570457045701,\r\n\t-0.568856885688569,\r\n\t-0.5672567256725669,\r\n\t-0.5656565656565657,\r\n\t-0.5640564056405637,\r\n\t-0.5624562456245625,\r\n\t-0.5608560856085605,\r\n\t-0.5592559255925593,\r\n\t-0.5576557655765573,\r\n\t-0.5560556055605561,\r\n\t-0.5544554455445541,\r\n\t-0.5528552855285529,\r\n\t-0.5512551255125508,\r\n\t-0.5496549654965497,\r\n\t-0.5480548054805476,\r\n\t-0.5464546454645465,\r\n\t-0.5448544854485444,\r\n\t-0.5432543254325433,\r\n\t-0.5416541654165412,\r\n\t-0.54005400540054,\r\n\t-0.538453845384538,\r\n\t-0.5368536853685368,\r\n\t-0.5352535253525348,\r\n\t-0.5336533653365336,\r\n\t-0.5320532053205316,\r\n\t-0.5304530453045304,\r\n\t-0.5288528852885284,\r\n\t-0.5272527252725272,\r\n\t-0.5256525652565252,\r\n\t-0.524052405240524,\r\n\t-0.5224522452245219,\r\n\t-0.5208520852085208,\r\n\t-0.5192519251925187,\r\n\t-0.5176517651765176,\r\n\t-0.5160516051605155,\r\n\t-0.5144514451445144,\r\n\t-0.5128512851285123,\r\n\t-0.5112511251125111,\r\n\t-0.5096509650965091,\r\n\t-0.5080508050805079,\r\n\t-0.5064506450645059,\r\n\t-0.5048504850485047,\r\n\t-0.5032503250325027,\r\n\t-0.5016501650165015,\r\n\t-0.5000500050004995,\r\n\t-0.4984498449844983,\r\n\t-0.49684968496849624,\r\n\t-0.4952495249524951,\r\n\t-0.49364936493649303,\r\n\t-0.49204920492049187,\r\n\t-0.4904490449044898,\r\n\t-0.48884888488848866,\r\n\t-0.4872487248724866,\r\n\t-0.48564856485648544,\r\n\t-0.4840484048404834,\r\n\t-0.48244824482448223,\r\n\t-0.4808480848084802,\r\n\t-0.479247924792479,\r\n\t-0.47764776477647697,\r\n\t-0.4760476047604758,\r\n\t-0.47444744474447464,\r\n\t-0.4728472847284726,\r\n\t-0.47124712471247143,\r\n\t-0.4696469646964694,\r\n\t-0.4680468046804682,\r\n\t-0.46644664466446617,\r\n\t-0.464846484648465,\r\n\t-0.46324632463246296,\r\n\t-0.4616461646164618,\r\n\t-0.46004600460045975,\r\n\t-0.4584458445844586,\r\n\t-0.45684568456845653,\r\n\t-0.45524552455245537,\r\n\t-0.4536453645364533,\r\n\t-0.45204520452045216,\r\n\t-0.4504450445044501,\r\n\t-0.44884488448844895,\r\n\t-0.4472447244724469,\r\n\t-0.44564456445644574,\r\n\t-0.4440444044404437,\r\n\t-0.4424442444244425,\r\n\t-0.4408440844084405,\r\n\t-0.4392439243924393,\r\n\t-0.43764376437643726,\r\n\t-0.4360436043604361,\r\n\t-0.43444344434443405,\r\n\t-0.4328432843284329,\r\n\t-0.43124312431243084,\r\n\t-0.4296429642964297,\r\n\t-0.4280428042804276,\r\n\t-0.42644264426442646,\r\n\t-0.4248424842484244,\r\n\t-0.42324232423242325,\r\n\t-0.4216421642164212,\r\n\t-0.42004200420042004,\r\n\t-0.418441844184418,\r\n\t-0.4168416841684168,\r\n\t-0.4152415241524148,\r\n\t-0.4136413641364136,\r\n\t-0.41204120412041156,\r\n\t-0.4104410441044104,\r\n\t-0.40884088408840835,\r\n\t-0.4072407240724072,\r\n\t-0.40564056405640514,\r\n\t-0.404040404040404,\r\n\t-0.4024402440244019,\r\n\t-0.40084008400840077,\r\n\t-0.3992399239923987,\r\n\t-0.39763976397639755,\r\n\t-0.3960396039603955,\r\n\t-0.39443944394439434,\r\n\t-0.3928392839283923,\r\n\t-0.39123912391239113,\r\n\t-0.3896389638963891,\r\n\t-0.3880388038803879,\r\n\t-0.38643864386438587,\r\n\t-0.3848384838483847,\r\n\t-0.38323832383238265,\r\n\t-0.3816381638163815,\r\n\t-0.38003800380037944,\r\n\t-0.3784378437843783,\r\n\t-0.37683768376837623,\r\n\t-0.37523752375237507,\r\n\t-0.373637363736373,\r\n\t-0.37203720372037186,\r\n\t-0.3704370437043698,\r\n\t-0.36883688368836864,\r\n\t-0.3672367236723666,\r\n\t-0.36563656365636543,\r\n\t-0.3640364036403634,\r\n\t-0.3624362436243622,\r\n\t-0.36083608360836017,\r\n\t-0.359235923592359,\r\n\t-0.35763576357635696,\r\n\t-0.3560356035603558,\r\n\t-0.35443544354435375,\r\n\t-0.3528352835283526,\r\n\t-0.3512351235123514,\r\n\t-0.34963496349634937,\r\n\t-0.3480348034803482,\r\n\t-0.34643464346434616,\r\n\t-0.344834483448345,\r\n\t-0.34323432343234295,\r\n\t-0.3416341634163418,\r\n\t-0.34003400340033973,\r\n\t-0.3384338433843386,\r\n\t-0.3368336833683365,\r\n\t-0.33523352335233536,\r\n\t-0.3336333633363333,\r\n\t-0.33203320332033215,\r\n\t-0.3304330433043301,\r\n\t-0.32883288328832894,\r\n\t-0.3272327232723269,\r\n\t-0.3256325632563257,\r\n\t-0.3240324032403237,\r\n\t-0.3224322432243225,\r\n\t-0.32083208320832046,\r\n\t-0.3192319231923193,\r\n\t-0.31763176317631725,\r\n\t-0.3160316031603161,\r\n\t-0.31443144314431404,\r\n\t-0.3128312831283129,\r\n\t-0.3112311231123108,\r\n\t-0.30963096309630966,\r\n\t-0.3080308030803076,\r\n\t-0.30643064306430645,\r\n\t-0.3048304830483044,\r\n\t-0.30323032303230324,\r\n\t-0.3016301630163012,\r\n\t-0.3000300030003,\r\n\t-0.298429842984298,\r\n\t-0.2968296829682968,\r\n\t-0.29522952295229477,\r\n\t-0.2936293629362936,\r\n\t-0.29202920292029155,\r\n\t-0.2904290429042904,\r\n\t-0.28882888288828834,\r\n\t-0.2872287228722872,\r\n\t-0.28562856285628513,\r\n\t-0.28402840284028397,\r\n\t-0.2824282428242819,\r\n\t-0.28082808280828075,\r\n\t-0.2792279227922787,\r\n\t-0.27762776277627754,\r\n\t-0.2760276027602755,\r\n\t-0.27442744274427433,\r\n\t-0.2728272827282723,\r\n\t-0.2712271227122711,\r\n\t-0.26962696269626907,\r\n\t-0.2680268026802679,\r\n\t-0.26642664266426586,\r\n\t-0.2648264826482647,\r\n\t-0.26322632263226264,\r\n\t-0.2616261626162615,\r\n\t-0.26002600260025943,\r\n\t-0.25842584258425827,\r\n\t-0.2568256825682562,\r\n\t-0.25522552255225506,\r\n\t-0.253625362536253,\r\n\t-0.25202520252025185,\r\n\t-0.2504250425042498,\r\n\t-0.24882488248824863,\r\n\t-0.24722472247224658,\r\n\t-0.24562456245624542,\r\n\t-0.24402440244024337,\r\n\t-0.2424242424242422,\r\n\t-0.24082408240824016,\r\n\t-0.239223922392239,\r\n\t-0.23762376237623695,\r\n\t-0.23602360236023578,\r\n\t-0.23442344234423373,\r\n\t-0.23282328232823257,\r\n\t-0.2312231223122314,\r\n\t-0.22962296229622936,\r\n\t-0.2280228022802282,\r\n\t-0.22642264226422615,\r\n\t-0.224822482248225,\r\n\t-0.22322232223222294,\r\n\t-0.22162216221622177,\r\n\t-0.22002200220021972,\r\n\t-0.21842184218421856,\r\n\t-0.2168216821682165,\r\n\t-0.21522152215221535,\r\n\t-0.2136213621362133,\r\n\t-0.21202120212021214,\r\n\t-0.2104210421042101,\r\n\t-0.20882088208820893,\r\n\t-0.20722072207220688,\r\n\t-0.2056205620562057,\r\n\t-0.20402040204020366,\r\n\t-0.2024202420242025,\r\n\t-0.20082008200820045,\r\n\t-0.1992199219921993,\r\n\t-0.19761976197619724,\r\n\t-0.19601960196019608,\r\n\t-0.19441944194419403,\r\n\t-0.19281928192819286,\r\n\t-0.19121912191219081,\r\n\t-0.18961896189618965,\r\n\t-0.1880188018801876,\r\n\t-0.18641864186418644,\r\n\t-0.1848184818481844,\r\n\t-0.18321832183218323,\r\n\t-0.18161816181618118,\r\n\t-0.18001800180018002,\r\n\t-0.17841784178417797,\r\n\t-0.1768176817681768,\r\n\t-0.17521752175217475,\r\n\t-0.1736173617361736,\r\n\t-0.17201720172017154,\r\n\t-0.17041704170417038,\r\n\t-0.16881688168816833,\r\n\t-0.16721672167216717,\r\n\t-0.16561656165616512,\r\n\t-0.16401640164016396,\r\n\t-0.1624162416241619,\r\n\t-0.16081608160816074,\r\n\t-0.1592159215921587,\r\n\t-0.15761576157615753,\r\n\t-0.15601560156015548,\r\n\t-0.15441544154415432,\r\n\t-0.15281528152815227,\r\n\t-0.1512151215121511,\r\n\t-0.14961496149614906,\r\n\t-0.1480148014801479,\r\n\t-0.14641464146414584,\r\n\t-0.14481448144814468,\r\n\t-0.14321432143214263,\r\n\t-0.14161416141614147,\r\n\t-0.14001400140013942,\r\n\t-0.13841384138413826,\r\n\t-0.1368136813681362,\r\n\t-0.13521352135213505,\r\n\t-0.133613361336133,\r\n\t-0.13201320132013183,\r\n\t-0.13041304130412978,\r\n\t-0.12881288128812862,\r\n\t-0.12721272127212657,\r\n\t-0.1256125612561254,\r\n\t-0.12401240124012336,\r\n\t-0.1224122412241222,\r\n\t-0.12081208120812015,\r\n\t-0.11921192119211899,\r\n\t-0.11761176117611694,\r\n\t-0.11601160116011577,\r\n\t-0.11441144114411372,\r\n\t-0.11281128112811256,\r\n\t-0.11121112111211051,\r\n\t-0.10961096109610935,\r\n\t-0.10801080108010819,\r\n\t-0.10641064106410614,\r\n\t-0.10481048104810498,\r\n\t-0.10321032103210293,\r\n\t-0.10161016101610176,\r\n\t-0.10001000100009971,\r\n\t-0.09840984098409855,\r\n\t-0.0968096809680965,\r\n\t-0.09520952095209534,\r\n\t-0.09360936093609329,\r\n\t-0.09200920092009213,\r\n\t-0.09040904090409008,\r\n\t-0.08880888088808891,\r\n\t-0.08720872087208686,\r\n\t-0.0856085608560857,\r\n\t-0.08400840084008365,\r\n\t-0.08240824082408249,\r\n\t-0.08080808080808044,\r\n\t-0.07920792079207928,\r\n\t-0.07760776077607723,\r\n\t-0.07600760076007607,\r\n\t-0.07440744074407402,\r\n\t-0.07280728072807285,\r\n\t-0.0712071207120708,\r\n\t-0.06960696069606964,\r\n\t-0.06800680068006759,\r\n\t-0.06640664066406643,\r\n\t-0.06480648064806438,\r\n\t-0.06320632063206322,\r\n\t-0.06160616061606117,\r\n\t-0.060006000600060005,\r\n\t-0.058405840584057955,\r\n\t-0.05680568056805679,\r\n\t-0.05520552055205474,\r\n\t-0.05360536053605358,\r\n\t-0.05200520052005153,\r\n\t-0.05040504050405037,\r\n\t-0.04880488048804832,\r\n\t-0.04720472047204716,\r\n\t-0.04560456045604511,\r\n\t-0.044004400440043945,\r\n\t-0.042404240424041895,\r\n\t-0.04080408040804073,\r\n\t-0.03920392039203868,\r\n\t-0.03760376037603752,\r\n\t-0.03600360036003547,\r\n\t-0.03440344034403431,\r\n\t-0.03280328032803226,\r\n\t-0.031203120312031096,\r\n\t-0.029602960296029046,\r\n\t-0.028002800280027884,\r\n\t-0.026402640264025834,\r\n\t-0.024802480248024672,\r\n\t-0.023202320232022622,\r\n\t-0.02160216021602146,\r\n\t-0.02000200020001941,\r\n\t-0.018401840184018248,\r\n\t-0.016801680168016198,\r\n\t-0.015201520152015036,\r\n\t-0.013601360136012985,\r\n\t-0.012001200120011823,\r\n\t-0.010401040104009773,\r\n\t-0.008800880088008611,\r\n\t-0.007200720072006561,\r\n\t-0.005600560056005399,\r\n\t-0.004000400040003349,\r\n\t-0.002400240024002187,\r\n\t-0.0008000800080001369,\r\n\t0.0008000800080019133,\r\n\t0.002400240024002187,\r\n\t0.004000400040004237,\r\n\t0.005600560056006287,\r\n\t0.0072007200720083375,\r\n\t0.008800880088008611,\r\n\t0.010401040104010661,\r\n\t0.012001200120012712,\r\n\t0.013601360136012985,\r\n\t0.015201520152015036,\r\n\t0.016801680168017086,\r\n\t0.018401840184019136,\r\n\t0.02000200020001941,\r\n\t0.02160216021602146,\r\n\t0.02320232023202351,\r\n\t0.02480248024802556,\r\n\t0.026402640264025834,\r\n\t0.028002800280027884,\r\n\t0.029602960296029934,\r\n\t0.031203120312031984,\r\n\t0.03280328032803226,\r\n\t0.03440344034403431,\r\n\t0.03600360036003636,\r\n\t0.03760376037603841,\r\n\t0.03920392039203868,\r\n\t0.04080408040804073,\r\n\t0.04240424042404278,\r\n\t0.04400440044004483,\r\n\t0.04560456045604511,\r\n\t0.04720472047204716,\r\n\t0.04880488048804921,\r\n\t0.05040504050405126,\r\n\t0.05200520052005153,\r\n\t0.05360536053605358,\r\n\t0.05520552055205563,\r\n\t0.05680568056805768,\r\n\t0.058405840584057955,\r\n\t0.060006000600060005,\r\n\t0.061606160616062056,\r\n\t0.0632063206320641,\r\n\t0.06480648064806438,\r\n\t0.06640664066406643,\r\n\t0.06800680068006848,\r\n\t0.06960696069607053,\r\n\t0.0712071207120708,\r\n\t0.07280728072807285,\r\n\t0.0744074407440749,\r\n\t0.07600760076007695,\r\n\t0.07760776077607723,\r\n\t0.07920792079207928,\r\n\t0.08080808080808133,\r\n\t0.08240824082408338,\r\n\t0.08400840084008365,\r\n\t0.0856085608560857,\r\n\t0.08720872087208775,\r\n\t0.0888088808880898,\r\n\t0.09040904090409008,\r\n\t0.09200920092009213,\r\n\t0.09360936093609418,\r\n\t0.09520952095209623,\r\n\t0.0968096809680965,\r\n\t0.09840984098409855,\r\n\t0.1000100010001006,\r\n\t0.10161016101610265,\r\n\t0.10321032103210293,\r\n\t0.10481048104810498,\r\n\t0.10641064106410703,\r\n\t0.10801080108010908,\r\n\t0.10961096109610935,\r\n\t0.1112111211121114,\r\n\t0.11281128112811345,\r\n\t0.1144114411441155,\r\n\t0.11601160116011577,\r\n\t0.11761176117611782,\r\n\t0.11921192119211987,\r\n\t0.12081208120812192,\r\n\t0.1224122412241222,\r\n\t0.12401240124012425,\r\n\t0.1256125612561263,\r\n\t0.12721272127212835,\r\n\t0.12881288128812862,\r\n\t0.13041304130413067,\r\n\t0.13201320132013272,\r\n\t0.133613361336133,\r\n\t0.13521352135213505,\r\n\t0.1368136813681371,\r\n\t0.13841384138413915,\r\n\t0.14001400140013942,\r\n\t0.14161416141614147,\r\n\t0.14321432143214352,\r\n\t0.14481448144814557,\r\n\t0.14641464146414584,\r\n\t0.1480148014801479,\r\n\t0.14961496149614995,\r\n\t0.151215121512152,\r\n\t0.15281528152815227,\r\n\t0.15441544154415432,\r\n\t0.15601560156015637,\r\n\t0.15761576157615842,\r\n\t0.1592159215921587,\r\n\t0.16081608160816074,\r\n\t0.1624162416241628,\r\n\t0.16401640164016484,\r\n\t0.16561656165616512,\r\n\t0.16721672167216717,\r\n\t0.16881688168816922,\r\n\t0.17041704170417127,\r\n\t0.17201720172017154,\r\n\t0.1736173617361736,\r\n\t0.17521752175217564,\r\n\t0.1768176817681777,\r\n\t0.17841784178417797,\r\n\t0.18001800180018002,\r\n\t0.18161816181618207,\r\n\t0.18321832183218412,\r\n\t0.1848184818481844,\r\n\t0.18641864186418644,\r\n\t0.1880188018801885,\r\n\t0.18961896189619054,\r\n\t0.19121912191219081,\r\n\t0.19281928192819286,\r\n\t0.19441944194419492,\r\n\t0.19601960196019697,\r\n\t0.19761976197619724,\r\n\t0.1992199219921993,\r\n\t0.20082008200820134,\r\n\t0.2024202420242034,\r\n\t0.20402040204020366,\r\n\t0.2056205620562057,\r\n\t0.20722072207220776,\r\n\t0.2088208820882098,\r\n\t0.2104210421042101,\r\n\t0.21202120212021214,\r\n\t0.2136213621362142,\r\n\t0.21522152215221624,\r\n\t0.2168216821682165,\r\n\t0.21842184218421856,\r\n\t0.2200220022002206,\r\n\t0.22162216221622266,\r\n\t0.22322232223222294,\r\n\t0.224822482248225,\r\n\t0.22642264226422704,\r\n\t0.2280228022802291,\r\n\t0.22962296229622936,\r\n\t0.2312231223122314,\r\n\t0.23282328232823346,\r\n\t0.2344234423442355,\r\n\t0.23602360236023578,\r\n\t0.23762376237623783,\r\n\t0.23922392239223988,\r\n\t0.24082408240824194,\r\n\t0.2424242424242422,\r\n\t0.24402440244024426,\r\n\t0.2456245624562463,\r\n\t0.24722472247224836,\r\n\t0.24882488248824863,\r\n\t0.2504250425042507,\r\n\t0.25202520252025273,\r\n\t0.253625362536253,\r\n\t0.25522552255225506,\r\n\t0.2568256825682571,\r\n\t0.25842584258425916,\r\n\t0.26002600260025943,\r\n\t0.2616261626162615,\r\n\t0.26322632263226353,\r\n\t0.2648264826482656,\r\n\t0.26642664266426586,\r\n\t0.2680268026802679,\r\n\t0.26962696269626996,\r\n\t0.271227122712272,\r\n\t0.2728272827282723,\r\n\t0.27442744274427433,\r\n\t0.2760276027602764,\r\n\t0.27762776277627843,\r\n\t0.2792279227922787,\r\n\t0.28082808280828075,\r\n\t0.2824282428242828,\r\n\t0.28402840284028485,\r\n\t0.28562856285628513,\r\n\t0.2872287228722872,\r\n\t0.28882888288828923,\r\n\t0.2904290429042913,\r\n\t0.29202920292029155,\r\n\t0.2936293629362936,\r\n\t0.29522952295229565,\r\n\t0.2968296829682977,\r\n\t0.298429842984298,\r\n\t0.3000300030003,\r\n\t0.3016301630163021,\r\n\t0.3032303230323041,\r\n\t0.3048304830483044,\r\n\t0.30643064306430645,\r\n\t0.3080308030803085,\r\n\t0.30963096309631055,\r\n\t0.3112311231123108,\r\n\t0.3128312831283129,\r\n\t0.3144314431443149,\r\n\t0.316031603160317,\r\n\t0.31763176317631725,\r\n\t0.3192319231923193,\r\n\t0.32083208320832135,\r\n\t0.3224322432243234,\r\n\t0.3240324032403237,\r\n\t0.3256325632563257,\r\n\t0.3272327232723278,\r\n\t0.3288328832883298,\r\n\t0.3304330433043301,\r\n\t0.33203320332033215,\r\n\t0.3336333633363342,\r\n\t0.33523352335233625,\r\n\t0.3368336833683365,\r\n\t0.3384338433843386,\r\n\t0.3400340034003406,\r\n\t0.3416341634163427,\r\n\t0.34323432343234295,\r\n\t0.344834483448345,\r\n\t0.34643464346434705,\r\n\t0.3480348034803491,\r\n\t0.34963496349634937,\r\n\t0.3512351235123514,\r\n\t0.35283528352835347,\r\n\t0.3544354435443555,\r\n\t0.3560356035603558,\r\n\t0.35763576357635785,\r\n\t0.3592359235923599,\r\n\t0.36083608360836195,\r\n\t0.3624362436243622,\r\n\t0.36403640364036427,\r\n\t0.3656365636563663,\r\n\t0.36723672367236837,\r\n\t0.36883688368836864,\r\n\t0.3704370437043707,\r\n\t0.37203720372037274,\r\n\t0.3736373637363748,\r\n\t0.37523752375237507,\r\n\t0.3768376837683771,\r\n\t0.37843784378437917,\r\n\t0.38003800380037944,\r\n\t0.3816381638163815,\r\n\t0.38323832383238354,\r\n\t0.3848384838483856,\r\n\t0.38643864386438587,\r\n\t0.3880388038803879,\r\n\t0.38963896389638997,\r\n\t0.391239123912392,\r\n\t0.3928392839283923,\r\n\t0.39443944394439434,\r\n\t0.3960396039603964,\r\n\t0.39763976397639844,\r\n\t0.3992399239923987,\r\n\t0.40084008400840077,\r\n\t0.4024402440244028,\r\n\t0.40404040404040487,\r\n\t0.40564056405640514,\r\n\t0.4072407240724072,\r\n\t0.40884088408840924,\r\n\t0.4104410441044113,\r\n\t0.41204120412041156,\r\n\t0.4136413641364136,\r\n\t0.41524152415241566,\r\n\t0.4168416841684177,\r\n\t0.418441844184418,\r\n\t0.42004200420042004,\r\n\t0.4216421642164221,\r\n\t0.42324232423242414,\r\n\t0.4248424842484244,\r\n\t0.42644264426442646,\r\n\t0.4280428042804285,\r\n\t0.42964296429643056,\r\n\t0.43124312431243084,\r\n\t0.4328432843284329,\r\n\t0.43444344434443494,\r\n\t0.436043604360437,\r\n\t0.43764376437643726,\r\n\t0.4392439243924393,\r\n\t0.44084408440844136,\r\n\t0.4424442444244434,\r\n\t0.4440444044404437,\r\n\t0.44564456445644574,\r\n\t0.4472447244724478,\r\n\t0.44884488448844984,\r\n\t0.4504450445044501,\r\n\t0.45204520452045216,\r\n\t0.4536453645364542,\r\n\t0.45524552455245626,\r\n\t0.45684568456845653,\r\n\t0.4584458445844586,\r\n\t0.46004600460046063,\r\n\t0.4616461646164627,\r\n\t0.46324632463246296,\r\n\t0.464846484648465,\r\n\t0.46644664466446706,\r\n\t0.4680468046804691,\r\n\t0.4696469646964694,\r\n\t0.47124712471247143,\r\n\t0.4728472847284735,\r\n\t0.47444744474447553,\r\n\t0.4760476047604758,\r\n\t0.47764776477647786,\r\n\t0.4792479247924799,\r\n\t0.48084808480848196,\r\n\t0.48244824482448223,\r\n\t0.4840484048404843,\r\n\t0.48564856485648633,\r\n\t0.4872487248724884,\r\n\t0.48884888488848866,\r\n\t0.4904490449044907,\r\n\t0.49204920492049276,\r\n\t0.4936493649364948,\r\n\t0.4952495249524951,\r\n\t0.49684968496849713,\r\n\t0.4984498449844992,\r\n\t0.5000500050004995,\r\n\t0.5016501650165015,\r\n\t0.5032503250325036,\r\n\t0.5048504850485056,\r\n\t0.5064506450645059,\r\n\t0.5080508050805079,\r\n\t0.50965096509651,\r\n\t0.511251125112512,\r\n\t0.5128512851285123,\r\n\t0.5144514451445144,\r\n\t0.5160516051605164,\r\n\t0.5176517651765185,\r\n\t0.5192519251925187,\r\n\t0.5208520852085208,\r\n\t0.5224522452245228,\r\n\t0.5240524052405249,\r\n\t0.5256525652565252,\r\n\t0.5272527252725272,\r\n\t0.5288528852885293,\r\n\t0.5304530453045313,\r\n\t0.5320532053205316,\r\n\t0.5336533653365336,\r\n\t0.5352535253525357,\r\n\t0.5368536853685377,\r\n\t0.538453845384538,\r\n\t0.54005400540054,\r\n\t0.5416541654165421,\r\n\t0.5432543254325441,\r\n\t0.5448544854485444,\r\n\t0.5464546454645465,\r\n\t0.5480548054805485,\r\n\t0.5496549654965506,\r\n\t0.5512551255125508,\r\n\t0.5528552855285529,\r\n\t0.554455445544555,\r\n\t0.556055605560557,\r\n\t0.5576557655765573,\r\n\t0.5592559255925593,\r\n\t0.5608560856085614,\r\n\t0.5624562456245634,\r\n\t0.5640564056405637,\r\n\t0.5656565656565657,\r\n\t0.5672567256725678,\r\n\t0.5688568856885698,\r\n\t0.5704570457045701,\r\n\t0.5720572057205722,\r\n\t0.5736573657365742,\r\n\t0.5752575257525763,\r\n\t0.5768576857685765,\r\n\t0.5784578457845786,\r\n\t0.5800580058005806,\r\n\t0.5816581658165827,\r\n\t0.583258325832583,\r\n\t0.584858485848585,\r\n\t0.5864586458645871,\r\n\t0.5880588058805891,\r\n\t0.5896589658965894,\r\n\t0.5912591259125914,\r\n\t0.5928592859285935,\r\n\t0.5944594459445955,\r\n\t0.5960596059605958,\r\n\t0.5976597659765979,\r\n\t0.5992599259925999,\r\n\t0.600860086008602,\r\n\t0.6024602460246022,\r\n\t0.6040604060406043,\r\n\t0.6056605660566063,\r\n\t0.6072607260726084,\r\n\t0.6088608860886087,\r\n\t0.6104610461046107,\r\n\t0.6120612061206128,\r\n\t0.6136613661366148,\r\n\t0.6152615261526151,\r\n\t0.6168616861686171,\r\n\t0.6184618461846192,\r\n\t0.6200620062006195,\r\n\t0.6216621662166215,\r\n\t0.6232623262326236,\r\n\t0.6248624862486256,\r\n\t0.6264626462646259,\r\n\t0.6280628062806279,\r\n\t0.62966296629663,\r\n\t0.631263126312632,\r\n\t0.6328632863286323,\r\n\t0.6344634463446344,\r\n\t0.6360636063606364,\r\n\t0.6376637663766385,\r\n\t0.6392639263926387,\r\n\t0.6408640864086408,\r\n\t0.6424642464246428,\r\n\t0.6440644064406449,\r\n\t0.6456645664566452,\r\n\t0.6472647264726472,\r\n\t0.6488648864886493,\r\n\t0.6504650465046513,\r\n\t0.6520652065206516,\r\n\t0.6536653665366536,\r\n\t0.6552655265526557,\r\n\t0.6568656865686577,\r\n\t0.658465846584658,\r\n\t0.6600660066006601,\r\n\t0.6616661666166621,\r\n\t0.6632663266326642,\r\n\t0.6648664866486644,\r\n\t0.6664666466646665,\r\n\t0.6680668066806685,\r\n\t0.6696669666966706,\r\n\t0.6712671267126709,\r\n\t0.6728672867286729,\r\n\t0.674467446744675,\r\n\t0.676067606760677,\r\n\t0.6776677667766773,\r\n\t0.6792679267926793,\r\n\t0.6808680868086814,\r\n\t0.6824682468246834,\r\n\t0.6840684068406837,\r\n\t0.6856685668566858,\r\n\t0.6872687268726878,\r\n\t0.6888688868886899,\r\n\t0.6904690469046901,\r\n\t0.6920692069206922,\r\n\t0.6936693669366942,\r\n\t0.6952695269526963,\r\n\t0.6968696869686966,\r\n\t0.6984698469846986,\r\n\t0.7000700070007007,\r\n\t0.7016701670167027,\r\n\t0.703270327032703,\r\n\t0.704870487048705,\r\n\t0.7064706470647071,\r\n\t0.7080708070807091,\r\n\t0.7096709670967094,\r\n\t0.7112711271127115,\r\n\t0.7128712871287135,\r\n\t0.7144714471447156,\r\n\t0.7160716071607158,\r\n\t0.7176717671767179,\r\n\t0.7192719271927199,\r\n\t0.720872087208722,\r\n\t0.7224722472247223,\r\n\t0.7240724072407243,\r\n\t0.7256725672567264,\r\n\t0.7272727272727284,\r\n\t0.7288728872887287,\r\n\t0.7304730473047307,\r\n\t0.7320732073207328,\r\n\t0.7336733673367348,\r\n\t0.7352735273527351,\r\n\t0.7368736873687372,\r\n\t0.7384738473847392,\r\n\t0.7400740074007395,\r\n\t0.7416741674167415,\r\n\t0.7432743274327436,\r\n\t0.7448744874487456,\r\n\t0.7464746474647459,\r\n\t0.748074807480748,\r\n\t0.74967496749675,\r\n\t0.751275127512752,\r\n\t0.7528752875287523,\r\n\t0.7544754475447544,\r\n\t0.7560756075607564,\r\n\t0.7576757675767585,\r\n\t0.7592759275927587,\r\n\t0.7608760876087608,\r\n\t0.7624762476247628,\r\n\t0.7640764076407649,\r\n\t0.7656765676567652,\r\n\t0.7672767276727672,\r\n\t0.7688768876887693,\r\n\t0.7704770477047713,\r\n\t0.7720772077207716,\r\n\t0.7736773677367736,\r\n\t0.7752775277527757,\r\n\t0.7768776877687777,\r\n\t0.778477847784778,\r\n\t0.7800780078007801,\r\n\t0.7816781678167821,\r\n\t0.7832783278327842,\r\n\t0.7848784878487844,\r\n\t0.7864786478647865,\r\n\t0.7880788078807885,\r\n\t0.7896789678967906,\r\n\t0.7912791279127909,\r\n\t0.7928792879287929,\r\n\t0.794479447944795,\r\n\t0.796079607960797,\r\n\t0.7976797679767973,\r\n\t0.7992799279927993,\r\n\t0.8008800880088014,\r\n\t0.8024802480248034,\r\n\t0.8040804080408037,\r\n\t0.8056805680568058,\r\n\t0.8072807280728078,\r\n\t0.8088808880888099,\r\n\t0.8104810481048101,\r\n\t0.8120812081208122,\r\n\t0.8136813681368142,\r\n\t0.8152815281528163,\r\n\t0.8168816881688166,\r\n\t0.8184818481848186,\r\n\t0.8200820082008207,\r\n\t0.8216821682168227,\r\n\t0.823282328232823,\r\n\t0.824882488248825,\r\n\t0.8264826482648271,\r\n\t0.8280828082808291,\r\n\t0.8296829682968294,\r\n\t0.8312831283128315,\r\n\t0.8328832883288335,\r\n\t0.8344834483448356,\r\n\t0.8360836083608358,\r\n\t0.8376837683768379,\r\n\t0.8392839283928399,\r\n\t0.840884088408842,\r\n\t0.8424842484248423,\r\n\t0.8440844084408443,\r\n\t0.8456845684568464,\r\n\t0.8472847284728484,\r\n\t0.8488848884888487,\r\n\t0.8504850485048507,\r\n\t0.8520852085208528,\r\n\t0.8536853685368548,\r\n\t0.8552855285528551,\r\n\t0.8568856885688572,\r\n\t0.8584858485848592,\r\n\t0.8600860086008613,\r\n\t0.8616861686168615,\r\n\t0.8632863286328636,\r\n\t0.8648864886488656,\r\n\t0.8664866486648659,\r\n\t0.868086808680868,\r\n\t0.86968696869687,\r\n\t0.8712871287128721,\r\n\t0.8728872887288723,\r\n\t0.8744874487448744,\r\n\t0.8760876087608764,\r\n\t0.8776877687768785,\r\n\t0.8792879287928788,\r\n\t0.8808880888088808,\r\n\t0.8824882488248829,\r\n\t0.8840884088408849,\r\n\t0.8856885688568852,\r\n\t0.8872887288728872,\r\n\t0.8888888888888893,\r\n\t0.8904890489048913,\r\n\t0.8920892089208916,\r\n\t0.8936893689368937,\r\n\t0.8952895289528957,\r\n\t0.8968896889688978,\r\n\t0.898489848984898,\r\n\t0.9000900090009001,\r\n\t0.9016901690169021,\r\n\t0.9032903290329042,\r\n\t0.9048904890489045,\r\n\t0.9064906490649065,\r\n\t0.9080908090809086,\r\n\t0.9096909690969106,\r\n\t0.9112911291129109,\r\n\t0.9128912891289129,\r\n\t0.914491449144915,\r\n\t0.916091609160917,\r\n\t0.9176917691769173,\r\n\t0.9192919291929194,\r\n\t0.9208920892089214,\r\n\t0.9224922492249235,\r\n\t0.9240924092409237,\r\n\t0.9256925692569258,\r\n\t0.9272927292729278,\r\n\t0.9288928892889299,\r\n\t0.9304930493049302,\r\n\t0.9320932093209322,\r\n\t0.9336933693369343,\r\n\t0.9352935293529363,\r\n\t0.9368936893689366,\r\n\t0.9384938493849386,\r\n\t0.9400940094009407,\r\n\t0.9416941694169427,\r\n\t0.943294329432943,\r\n\t0.944894489448945,\r\n\t0.9464946494649471,\r\n\t0.9480948094809492,\r\n\t0.9496949694969494,\r\n\t0.9512951295129515,\r\n\t0.9528952895289535,\r\n\t0.9544954495449556,\r\n\t0.9560956095609559,\r\n\t0.9576957695769579,\r\n\t0.95929592959296,\r\n\t0.960896089608962,\r\n\t0.9624962496249623,\r\n\t0.9640964096409643,\r\n\t0.9656965696569664,\r\n\t0.9672967296729684,\r\n\t0.9688968896889687,\r\n\t0.9704970497049707,\r\n\t0.9720972097209728,\r\n\t0.9736973697369748,\r\n\t0.9752975297529751,\r\n\t0.9768976897689772,\r\n\t0.9784978497849792,\r\n\t0.9800980098009813,\r\n\t0.9816981698169815,\r\n\t0.9832983298329836,\r\n\t0.9848984898489856,\r\n\t0.9864986498649859,\r\n\t0.988098809880988,\r\n\t0.98969896989699,\r\n\t0.9912991299129921,\r\n\t0.9928992899289923,\r\n\t0.9944994499449944,\r\n\t0.9960996099609964,\r\n\t0.9976997699769985,\r\n\t0.9992999299929988,\r\n\t1.0009000900090008,\r\n\t1.0025002500250029,\r\n\t1.004100410041005,\r\n\t1.0057005700570052,\r\n\t1.0073007300730072,\r\n\t1.0089008900890093,\r\n\t1.0105010501050113,\r\n\t1.0121012101210116,\r\n\t1.0137013701370137,\r\n\t1.0153015301530157,\r\n\t1.0169016901690178,\r\n\t1.018501850185018,\r\n\t1.02010201020102,\r\n\t1.0217021702170221,\r\n\t1.0233023302330242,\r\n\t1.0249024902490245,\r\n\t1.0265026502650265,\r\n\t1.0281028102810286,\r\n\t1.0297029702970306,\r\n\t1.031303130313031,\r\n\t1.032903290329033,\r\n\t1.034503450345035,\r\n\t1.036103610361037,\r\n\t1.0377037703770373,\r\n\t1.0393039303930394,\r\n\t1.0409040904090414,\r\n\t1.0425042504250435,\r\n\t1.0441044104410437,\r\n\t1.0457045704570458,\r\n\t1.0473047304730478,\r\n\t1.04890489048905,\r\n\t1.0505050505050502,\r\n\t1.0521052105210522,\r\n\t1.0537053705370543,\r\n\t1.0553055305530563,\r\n\t1.0569056905690566,\r\n\t1.0585058505850586,\r\n\t1.0601060106010607,\r\n\t1.0617061706170627,\r\n\t1.063306330633063,\r\n\t1.064906490649065,\r\n\t1.0665066506650671,\r\n\t1.0681068106810692,\r\n\t1.0697069706970694,\r\n\t1.0713071307130715,\r\n\t1.0729072907290735,\r\n\t1.0745074507450756,\r\n\t1.0761076107610759,\r\n\t1.077707770777078,\r\n\t1.07930793079308,\r\n\t1.080908090809082,\r\n\t1.0825082508250823,\r\n\t1.0841084108410843,\r\n\t1.0857085708570864,\r\n\t1.0873087308730884,\r\n\t1.0889088908890887,\r\n\t1.0905090509050908,\r\n\t1.0921092109210928,\r\n\t1.0937093709370949,\r\n\t1.0953095309530951,\r\n\t1.0969096909690972,\r\n\t1.0985098509850992,\r\n\t1.1001100110011013,\r\n\t1.1017101710171016,\r\n\t1.1033103310331036,\r\n\t1.1049104910491057,\r\n\t1.106510651065106,\r\n\t1.108110811081108,\r\n\t1.10971097109711,\r\n\t1.111311131113112,\r\n\t1.1129112911291124,\r\n\t1.1145114511451144,\r\n\t1.1161116111611165,\r\n\t1.1177117711771185,\r\n\t1.1193119311931188,\r\n\t1.1209120912091208,\r\n\t1.1225122512251229,\r\n\t1.124112411241125,\r\n\t1.1257125712571252,\r\n\t1.1273127312731273,\r\n\t1.1289128912891293,\r\n\t1.1305130513051314,\r\n\t1.1321132113211316,\r\n\t1.1337133713371337,\r\n\t1.1353135313531357,\r\n\t1.1369136913691378,\r\n\t1.138513851385138,\r\n\t1.14011401140114,\r\n\t1.1417141714171422,\r\n\t1.1433143314331442,\r\n\t1.1449144914491445,\r\n\t1.1465146514651465,\r\n\t1.1481148114811486,\r\n\t1.1497149714971506,\r\n\t1.151315131513151,\r\n\t1.152915291529153,\r\n\t1.154515451545155,\r\n\t1.156115611561157,\r\n\t1.1577157715771573,\r\n\t1.1593159315931594,\r\n\t1.1609160916091614,\r\n\t1.1625162516251635,\r\n\t1.1641164116411638,\r\n\t1.1657165716571658,\r\n\t1.1673167316731679,\r\n\t1.16891689168917,\r\n\t1.1705170517051702,\r\n\t1.1721172117211722,\r\n\t1.1737173717371743,\r\n\t1.1753175317531763,\r\n\t1.1769176917691766,\r\n\t1.1785178517851786,\r\n\t1.1801180118011807,\r\n\t1.1817181718171827,\r\n\t1.183318331833183,\r\n\t1.184918491849185,\r\n\t1.1865186518651871,\r\n\t1.1881188118811892,\r\n\t1.1897189718971894,\r\n\t1.1913191319131915,\r\n\t1.1929192919291935,\r\n\t1.1945194519451956,\r\n\t1.1961196119611959,\r\n\t1.197719771977198,\r\n\t1.1993199319932,\r\n\t1.200920092009202,\r\n\t1.2025202520252023,\r\n\t1.2041204120412043,\r\n\t1.2057205720572064,\r\n\t1.2073207320732084,\r\n\t1.2089208920892087,\r\n\t1.2105210521052108,\r\n\t1.2121212121212128,\r\n\t1.2137213721372149,\r\n\t1.2153215321532151,\r\n\t1.2169216921692172,\r\n\t1.2185218521852192,\r\n\t1.2201220122012213,\r\n\t1.2217221722172216,\r\n\t1.2233223322332236,\r\n\t1.2249224922492257,\r\n\t1.226522652265226,\r\n\t1.228122812281228,\r\n\t1.22972297229723,\r\n\t1.231323132313232,\r\n\t1.2329232923292324,\r\n\t1.2345234523452344,\r\n\t1.2361236123612365,\r\n\t1.2377237723772385,\r\n\t1.2393239323932388,\r\n\t1.2409240924092408,\r\n\t1.242524252425243,\r\n\t1.244124412441245,\r\n\t1.2457245724572452,\r\n\t1.2473247324732473,\r\n\t1.2489248924892493,\r\n\t1.2505250525052514,\r\n\t1.2521252125212516,\r\n\t1.2537253725372537,\r\n\t1.2553255325532557,\r\n\t1.2569256925692578,\r\n\t1.258525852585258,\r\n\t1.2601260126012601,\r\n\t1.2617261726172622,\r\n\t1.2633263326332642,\r\n\t1.2649264926492645,\r\n\t1.2665266526652665,\r\n\t1.2681268126812686,\r\n\t1.2697269726972706,\r\n\t1.271327132713271,\r\n\t1.272927292729273,\r\n\t1.274527452745275,\r\n\t1.276127612761277,\r\n\t1.2777277727772773,\r\n\t1.2793279327932794,\r\n\t1.2809280928092814,\r\n\t1.2825282528252835,\r\n\t1.2841284128412838,\r\n\t1.2857285728572858,\r\n\t1.2873287328732879,\r\n\t1.28892889288929,\r\n\t1.2905290529052902,\r\n\t1.2921292129212922,\r\n\t1.2937293729372943,\r\n\t1.2953295329532963,\r\n\t1.2969296929692966,\r\n\t1.2985298529852987,\r\n\t1.3001300130013007,\r\n\t1.3017301730173028,\r\n\t1.303330333033303,\r\n\t1.304930493049305,\r\n\t1.3065306530653071,\r\n\t1.3081308130813092,\r\n\t1.3097309730973095,\r\n\t1.3113311331133115,\r\n\t1.3129312931293136,\r\n\t1.3145314531453156,\r\n\t1.3161316131613159,\r\n\t1.317731773177318,\r\n\t1.31933193319332,\r\n\t1.320932093209322,\r\n\t1.3225322532253223,\r\n\t1.3241324132413244,\r\n\t1.3257325732573264,\r\n\t1.3273327332733285,\r\n\t1.3289328932893287,\r\n\t1.3305330533053308,\r\n\t1.3321332133213328,\r\n\t1.3337333733373349,\r\n\t1.3353335333533352,\r\n\t1.3369336933693372,\r\n\t1.3385338533853393,\r\n\t1.3401340134013413,\r\n\t1.3417341734173416,\r\n\t1.3433343334333436,\r\n\t1.3449344934493457,\r\n\t1.346534653465346,\r\n\t1.348134813481348,\r\n\t1.34973497349735,\r\n\t1.351335133513352,\r\n\t1.3529352935293524,\r\n\t1.3545354535453544,\r\n\t1.3561356135613565,\r\n\t1.3577357735773585,\r\n\t1.3593359335933588,\r\n\t1.3609360936093609,\r\n\t1.362536253625363,\r\n\t1.364136413641365,\r\n\t1.3657365736573652,\r\n\t1.3673367336733673,\r\n\t1.3689368936893693,\r\n\t1.3705370537053714,\r\n\t1.3721372137213717,\r\n\t1.3737373737373737,\r\n\t1.3753375337533758,\r\n\t1.3769376937693778,\r\n\t1.378537853785378,\r\n\t1.3801380138013801,\r\n\t1.3817381738173822,\r\n\t1.3833383338333842,\r\n\t1.3849384938493845,\r\n\t1.3865386538653866,\r\n\t1.3881388138813886,\r\n\t1.3897389738973907,\r\n\t1.391339133913391,\r\n\t1.392939293929393,\r\n\t1.394539453945395,\r\n\t1.396139613961397,\r\n\t1.3977397739773973,\r\n\t1.3993399339933994,\r\n\t1.4009400940094014,\r\n\t1.4025402540254035,\r\n\t1.4041404140414038,\r\n\t1.4057405740574058,\r\n\t1.4073407340734079,\r\n\t1.40894089408941,\r\n\t1.4105410541054102,\r\n\t1.4121412141214122,\r\n\t1.4137413741374143,\r\n\t1.4153415341534163,\r\n\t1.4169416941694166,\r\n\t1.4185418541854187,\r\n\t1.4201420142014207,\r\n\t1.4217421742174228,\r\n\t1.423342334233423,\r\n\t1.424942494249425,\r\n\t1.4265426542654271,\r\n\t1.4281428142814292,\r\n\t1.4297429742974295,\r\n\t1.4313431343134315,\r\n\t1.4329432943294336,\r\n\t1.4345434543454356,\r\n\t1.436143614361436,\r\n\t1.437743774377438,\r\n\t1.43934393439344,\r\n\t1.440944094409442,\r\n\t1.4425442544254423,\r\n\t1.4441444144414444,\r\n\t1.4457445744574464,\r\n\t1.4473447344734485,\r\n\t1.4489448944894487,\r\n\t1.4505450545054508,\r\n\t1.4521452145214528,\r\n\t1.453745374537455,\r\n\t1.4553455345534552,\r\n\t1.4569456945694572,\r\n\t1.4585458545854593,\r\n\t1.4601460146014613,\r\n\t1.4617461746174616,\r\n\t1.4633463346334636,\r\n\t1.4649464946494657,\r\n\t1.4665466546654677,\r\n\t1.468146814681468,\r\n\t1.46974697469747,\r\n\t1.4713471347134721,\r\n\t1.4729472947294724,\r\n\t1.4745474547454744,\r\n\t1.4761476147614765,\r\n\t1.4777477747774785,\r\n\t1.4793479347934788,\r\n\t1.4809480948094809,\r\n\t1.482548254825483,\r\n\t1.484148414841485,\r\n\t1.4857485748574852,\r\n\t1.4873487348734873,\r\n\t1.4889488948894893,\r\n\t1.4905490549054914,\r\n\t1.4921492149214917,\r\n\t1.4937493749374937,\r\n\t1.4953495349534958,\r\n\t1.4969496949694978,\r\n\t1.498549854985498,\r\n\t1.5001500150015001,\r\n\t1.5017501750175022,\r\n\t1.5033503350335042,\r\n\t1.5049504950495045,\r\n\t1.5065506550655066,\r\n\t1.5081508150815086,\r\n\t1.5097509750975107,\r\n\t1.511351135113511,\r\n\t1.512951295129513,\r\n\t1.514551455145515,\r\n\t1.516151615161517,\r\n\t1.5177517751775174,\r\n\t1.5193519351935194,\r\n\t1.5209520952095215,\r\n\t1.5225522552255235,\r\n\t1.5241524152415238,\r\n\t1.5257525752575258,\r\n\t1.5273527352735279,\r\n\t1.52895289528953,\r\n\t1.5305530553055302,\r\n\t1.5321532153215323,\r\n\t1.5337533753375343,\r\n\t1.5353535353535364,\r\n\t1.5369536953695366,\r\n\t1.5385538553855387,\r\n\t1.5401540154015407,\r\n\t1.5417541754175428,\r\n\t1.543354335433543,\r\n\t1.544954495449545,\r\n\t1.5465546554655472,\r\n\t1.5481548154815492,\r\n\t1.5497549754975495,\r\n\t1.5513551355135515,\r\n\t1.5529552955295536,\r\n\t1.5545554555455556,\r\n\t1.556155615561556,\r\n\t1.557755775577558,\r\n\t1.55935593559356,\r\n\t1.560956095609562,\r\n\t1.5625562556255623,\r\n\t1.5641564156415644,\r\n\t1.5657565756575664,\r\n\t1.5673567356735685,\r\n\t1.5689568956895688,\r\n\t1.5705570557055708,\r\n\t1.5721572157215729,\r\n\t1.573757375737575,\r\n\t1.5753575357535752,\r\n\t1.5769576957695772,\r\n\t1.5785578557855793,\r\n\t1.5801580158015813,\r\n\t1.5817581758175816,\r\n\t1.5833583358335837,\r\n\t1.5849584958495857,\r\n\t1.5865586558655878,\r\n\t1.588158815881588,\r\n\t1.58975897589759,\r\n\t1.5913591359135921,\r\n\t1.5929592959295924,\r\n\t1.5945594559455945,\r\n\t1.5961596159615965,\r\n\t1.5977597759775986,\r\n\t1.5993599359935988,\r\n\t1.6009600960096009,\r\n\t1.602560256025603,\r\n\t1.604160416041605,\r\n\t1.6057605760576052,\r\n\t1.6073607360736073,\r\n\t1.6089608960896093,\r\n\t1.6105610561056114,\r\n\t1.6121612161216117,\r\n\t1.6137613761376137,\r\n\t1.6153615361536158,\r\n\t1.6169616961696178,\r\n\t1.618561856185618,\r\n\t1.6201620162016201,\r\n\t1.6217621762176222,\r\n\t1.6233623362336242,\r\n\t1.6249624962496245,\r\n\t1.6265626562656266,\r\n\t1.6281628162816286,\r\n\t1.6297629762976307,\r\n\t1.631363136313631,\r\n\t1.632963296329633,\r\n\t1.634563456345635,\r\n\t1.636163616361637,\r\n\t1.6377637763776374,\r\n\t1.6393639363936394,\r\n\t1.6409640964096415,\r\n\t1.6425642564256435,\r\n\t1.6441644164416438,\r\n\t1.6457645764576458,\r\n\t1.647364736473648,\r\n\t1.64896489648965,\r\n\t1.6505650565056502,\r\n\t1.6521652165216523,\r\n\t1.6537653765376543,\r\n\t1.6553655365536564,\r\n\t1.6569656965696566,\r\n\t1.6585658565856587,\r\n\t1.6601660166016607,\r\n\t1.6617661766176628,\r\n\t1.663366336633663,\r\n\t1.6649664966496651,\r\n\t1.6665666566656672,\r\n\t1.6681668166816692,\r\n\t1.6697669766976695,\r\n\t1.6713671367136715,\r\n\t1.6729672967296736,\r\n\t1.6745674567456756,\r\n\t1.676167616761676,\r\n\t1.677767776777678,\r\n\t1.67936793679368,\r\n\t1.680968096809682,\r\n\t1.6825682568256823,\r\n\t1.6841684168416844,\r\n\t1.6857685768576864,\r\n\t1.6873687368736885,\r\n\t1.6889688968896888,\r\n\t1.6905690569056908,\r\n\t1.6921692169216929,\r\n\t1.693769376937695,\r\n\t1.6953695369536952,\r\n\t1.6969696969696972,\r\n\t1.6985698569856993,\r\n\t1.7001700170017013,\r\n\t1.7017701770177016,\r\n\t1.7033703370337037,\r\n\t1.7049704970497057,\r\n\t1.7065706570657078,\r\n\t1.708170817081708,\r\n\t1.70977097709771,\r\n\t1.7113711371137121,\r\n\t1.7129712971297124,\r\n\t1.7145714571457145,\r\n\t1.7161716171617165,\r\n\t1.7177717771777186,\r\n\t1.7193719371937188,\r\n\t1.7209720972097209,\r\n\t1.722572257225723,\r\n\t1.724172417241725,\r\n\t1.7257725772577253,\r\n\t1.7273727372737273,\r\n\t1.7289728972897294,\r\n\t1.7305730573057314,\r\n\t1.7321732173217317,\r\n\t1.7337733773377337,\r\n\t1.7353735373537358,\r\n\t1.7369736973697378,\r\n\t1.738573857385738,\r\n\t1.7401740174017402,\r\n\t1.7417741774177422,\r\n\t1.7433743374337443,\r\n\t1.7449744974497445,\r\n\t1.7465746574657466,\r\n\t1.7481748174817486,\r\n\t1.7497749774977507,\r\n\t1.751375137513751,\r\n\t1.752975297529753,\r\n\t1.754575457545755,\r\n\t1.756175617561757,\r\n\t1.7577757775777574,\r\n\t1.7593759375937594,\r\n\t1.7609760976097615,\r\n\t1.7625762576257635,\r\n\t1.7641764176417638,\r\n\t1.7657765776577659,\r\n\t1.767376737673768,\r\n\t1.76897689768977,\r\n\t1.7705770577057702,\r\n\t1.7721772177217723,\r\n\t1.7737773777377743,\r\n\t1.7753775377537764,\r\n\t1.7769776977697767,\r\n\t1.7785778577857787,\r\n\t1.7801780178017808,\r\n\t1.7817781778177828,\r\n\t1.783378337833783,\r\n\t1.7849784978497851,\r\n\t1.7865786578657872,\r\n\t1.7881788178817892,\r\n\t1.7897789778977895,\r\n\t1.7913791379137916,\r\n\t1.7929792979297936,\r\n\t1.7945794579457957,\r\n\t1.796179617961796,\r\n\t1.797779777977798,\r\n\t1.7993799379938,\r\n\t1.800980098009802,\r\n\t1.8025802580258024,\r\n\t1.8041804180418044,\r\n\t1.8057805780578065,\r\n\t1.8073807380738085,\r\n\t1.8089808980898088,\r\n\t1.8105810581058108,\r\n\t1.8121812181218129,\r\n\t1.813781378137815,\r\n\t1.8153815381538152,\r\n\t1.8169816981698172,\r\n\t1.8185818581858193,\r\n\t1.8201820182018214,\r\n\t1.8217821782178216,\r\n\t1.8233823382338237,\r\n\t1.8249824982498257,\r\n\t1.8265826582658278,\r\n\t1.828182818281828,\r\n\t1.82978297829783,\r\n\t1.8313831383138321,\r\n\t1.8329832983298324,\r\n\t1.8345834583458345,\r\n\t1.8361836183618365,\r\n\t1.8377837783778386,\r\n\t1.8393839383938388,\r\n\t1.840984098409841,\r\n\t1.842584258425843,\r\n\t1.844184418441845,\r\n\t1.8457845784578453,\r\n\t1.8473847384738473,\r\n\t1.8489848984898494,\r\n\t1.8505850585058514,\r\n\t1.8521852185218517,\r\n\t1.8537853785378537,\r\n\t1.8553855385538558,\r\n\t1.8569856985698578,\r\n\t1.8585858585858581,\r\n\t1.8601860186018602,\r\n\t1.8617861786178622,\r\n\t1.8633863386338643,\r\n\t1.8649864986498645,\r\n\t1.8665866586658666,\r\n\t1.8681868186818686,\r\n\t1.8697869786978707,\r\n\t1.871387138713871,\r\n\t1.872987298729873,\r\n\t1.874587458745875,\r\n\t1.8761876187618771,\r\n\t1.8777877787778774,\r\n\t1.8793879387938794,\r\n\t1.8809880988098815,\r\n\t1.8825882588258835,\r\n\t1.8841884188418838,\r\n\t1.8857885788578859,\r\n\t1.887388738873888,\r\n\t1.88898889888989,\r\n\t1.8905890589058902,\r\n\t1.8921892189218923,\r\n\t1.8937893789378943,\r\n\t1.8953895389538964,\r\n\t1.8969896989698967,\r\n\t1.8985898589858987,\r\n\t1.9001900190019008,\r\n\t1.9017901790179028,\r\n\t1.903390339033903,\r\n\t1.9049904990499051,\r\n\t1.9065906590659072,\r\n\t1.9081908190819092,\r\n\t1.9097909790979095,\r\n\t1.9113911391139116,\r\n\t1.9129912991299136,\r\n\t1.9145914591459157,\r\n\t1.916191619161916,\r\n\t1.917791779177918,\r\n\t1.91939193919392,\r\n\t1.920992099209922,\r\n\t1.9225922592259224,\r\n\t1.9241924192419244,\r\n\t1.9257925792579265,\r\n\t1.9273927392739285,\r\n\t1.9289928992899288,\r\n\t1.9305930593059308,\r\n\t1.9321932193219329,\r\n\t1.933793379337935,\r\n\t1.9353935393539352,\r\n\t1.9369936993699373,\r\n\t1.9385938593859393,\r\n\t1.9401940194019414,\r\n\t1.9417941794179416,\r\n\t1.9433943394339437,\r\n\t1.9449944994499457,\r\n\t1.9465946594659478,\r\n\t1.948194819481948,\r\n\t1.94979497949795,\r\n\t1.9513951395139522,\r\n\t1.9529952995299524,\r\n\t1.9545954595459545,\r\n\t1.9561956195619565,\r\n\t1.9577957795779586,\r\n\t1.9593959395939589,\r\n\t1.960996099609961,\r\n\t1.962596259625963,\r\n\t1.964196419641965,\r\n\t1.9657965796579653,\r\n\t1.9673967396739673,\r\n\t1.9689968996899694,\r\n\t1.9705970597059714,\r\n\t1.9721972197219717,\r\n\t1.9737973797379738,\r\n\t1.9753975397539758,\r\n\t1.9769976997699779,\r\n\t1.9785978597859781,\r\n\t1.9801980198019802,\r\n\t1.9817981798179822,\r\n\t1.9833983398339843,\r\n\t1.9849984998499846,\r\n\t1.9865986598659866,\r\n\t1.9881988198819887,\r\n\t1.9897989798979907,\r\n\t1.991399139913991,\r\n\t1.992999299929993,\r\n\t1.994599459945995,\r\n\t1.9961996199619971,\r\n\t1.9977997799779974,\r\n\t1.9993999399939995,\r\n\t2.0010001000100015,\r\n\t2.0026002600260036,\r\n\t2.004200420042004,\r\n\t2.005800580058006,\r\n\t2.007400740074008,\r\n\t2.00900090009001,\r\n\t2.0106010601060103,\r\n\t2.0122012201220123,\r\n\t2.0138013801380144,\r\n\t2.0154015401540164,\r\n\t2.0170017001700167,\r\n\t2.0186018601860187,\r\n\t2.0202020202020208,\r\n\t2.021802180218023,\r\n\t2.023402340234023,\r\n\t2.025002500250025,\r\n\t2.026602660266027,\r\n\t2.0282028202820293,\r\n\t2.0298029802980295,\r\n\t2.0314031403140316,\r\n\t2.0330033003300336,\r\n\t2.0346034603460357,\r\n\t2.036203620362036,\r\n\t2.037803780378038,\r\n\t2.03940394039404,\r\n\t2.041004100410042,\r\n\t2.0426042604260424,\r\n\t2.0442044204420444,\r\n\t2.0458045804580465,\r\n\t2.0474047404740485,\r\n\t2.049004900490049,\r\n\t2.050605060506051,\r\n\t2.052205220522053,\r\n\t2.053805380538055,\r\n\t2.055405540554055,\r\n\t2.0570057005700573,\r\n\t2.0586058605860593,\r\n\t2.0602060206020614,\r\n\t2.0618061806180616,\r\n\t2.0634063406340637,\r\n\t2.0650065006500657,\r\n\t2.066606660666068,\r\n\t2.068206820682068,\r\n\t2.06980698069807,\r\n\t2.071407140714072,\r\n\t2.073007300730074,\r\n\t2.0746074607460745,\r\n\t2.0762076207620765,\r\n\t2.0778077807780786,\r\n\t2.079407940794079,\r\n\t2.081008100810081,\r\n\t2.082608260826083,\r\n\t2.084208420842085,\r\n\t2.0858085808580853,\r\n\t2.0874087408740873,\r\n\t2.0890089008900894,\r\n\t2.0906090609060914,\r\n\t2.0922092209220917,\r\n\t2.0938093809380938,\r\n\t2.095409540954096,\r\n\t2.097009700970098,\r\n\t2.098609860986098,\r\n\t2.1002100210021,\r\n\t2.1018101810181022,\r\n\t2.1034103410341043,\r\n\t2.1050105010501046,\r\n\t2.1066106610661066,\r\n\t2.1082108210821087,\r\n\t2.1098109810981107,\r\n\t2.111411141114111,\r\n\t2.113011301130113,\r\n\t2.114611461146115,\r\n\t2.116211621162117,\r\n\t2.1178117811781174,\r\n\t2.1194119411941195,\r\n\t2.1210121012101215,\r\n\t2.1226122612261236,\r\n\t2.124212421242124,\r\n\t2.125812581258126,\r\n\t2.127412741274128,\r\n\t2.12901290129013,\r\n\t2.1306130613061303,\r\n\t2.1322132213221323,\r\n\t2.1338133813381344,\r\n\t2.1354135413541364,\r\n\t2.1370137013701367,\r\n\t2.1386138613861387,\r\n\t2.140214021402141,\r\n\t2.141814181418143,\r\n\t2.143414341434143,\r\n\t2.145014501450145,\r\n\t2.146614661466147,\r\n\t2.1482148214821493,\r\n\t2.1498149814981495,\r\n\t2.1514151415141516,\r\n\t2.1530153015301536,\r\n\t2.1546154615461557,\r\n\t2.156215621562156,\r\n\t2.157815781578158,\r\n\t2.15941594159416,\r\n\t2.161016101610162,\r\n\t2.1626162616261624,\r\n\t2.1642164216421644,\r\n\t2.1658165816581665,\r\n\t2.1674167416741685,\r\n\t2.169016901690169,\r\n\t2.170617061706171,\r\n\t2.172217221722173,\r\n\t2.173817381738175,\r\n\t2.1754175417541752,\r\n\t2.1770177017701773,\r\n\t2.1786178617861793,\r\n\t2.1802180218021814,\r\n\t2.1818181818181817,\r\n\t2.1834183418341837,\r\n\t2.1850185018501858,\r\n\t2.186618661866188,\r\n\t2.188218821882188,\r\n\t2.18981898189819,\r\n\t2.191419141914192,\r\n\t2.1930193019301942,\r\n\t2.1946194619461945,\r\n\t2.1962196219621966,\r\n\t2.1978197819781986,\r\n\t2.199419941994199,\r\n\t2.201020102010201,\r\n\t2.202620262026203,\r\n\t2.204220422042205,\r\n\t2.2058205820582053,\r\n\t2.2074207420742074,\r\n\t2.2090209020902094,\r\n\t2.2106210621062115,\r\n\t2.2122212221222117,\r\n\t2.213821382138214,\r\n\t2.215421542154216,\r\n\t2.217021702170218,\r\n\t2.218621862186218,\r\n\t2.22022202220222,\r\n\t2.2218221822182223,\r\n\t2.2234223422342243,\r\n\t2.2250225022502246,\r\n\t2.2266226622662266,\r\n\t2.2282228222822287,\r\n\t2.2298229822982307,\r\n\t2.231423142314231,\r\n\t2.233023302330233,\r\n\t2.234623462346235,\r\n\t2.236223622362237,\r\n\t2.2378237823782374,\r\n\t2.2394239423942395,\r\n\t2.2410241024102415,\r\n\t2.2426242624262436,\r\n\t2.244224422442244,\r\n\t2.245824582458246,\r\n\t2.247424742474248,\r\n\t2.24902490249025,\r\n\t2.2506250625062503,\r\n\t2.2522252225222523,\r\n\t2.2538253825382544,\r\n\t2.2554255425542564,\r\n\t2.2570257025702567,\r\n\t2.2586258625862587,\r\n\t2.260226022602261,\r\n\t2.261826182618263,\r\n\t2.263426342634263,\r\n\t2.265026502650265,\r\n\t2.2666266626662672,\r\n\t2.2682268226822693,\r\n\t2.2698269826982695,\r\n\t2.2714271427142716,\r\n\t2.2730273027302736,\r\n\t2.2746274627462757,\r\n\t2.276227622762276,\r\n\t2.277827782778278,\r\n\t2.27942794279428,\r\n\t2.281028102810282,\r\n\t2.2826282628262824,\r\n\t2.2842284228422844,\r\n\t2.2858285828582865,\r\n\t2.2874287428742885,\r\n\t2.289028902890289,\r\n\t2.290629062906291,\r\n\t2.292229222922293,\r\n\t2.293829382938295,\r\n\t2.2954295429542952,\r\n\t2.2970297029702973,\r\n\t2.2986298629862993,\r\n\t2.3002300230023014,\r\n\t2.3018301830183017,\r\n\t2.3034303430343037,\r\n\t2.3050305030503058,\r\n\t2.306630663066308,\r\n\t2.308230823082308,\r\n\t2.30983098309831,\r\n\t2.311431143114312,\r\n\t2.3130313031303142,\r\n\t2.3146314631463145,\r\n\t2.3162316231623166,\r\n\t2.3178317831783186,\r\n\t2.319431943194319,\r\n\t2.321032103210321,\r\n\t2.322632263226323,\r\n\t2.324232423242325,\r\n\t2.3258325832583253,\r\n\t2.3274327432743274,\r\n\t2.3290329032903294,\r\n\t2.3306330633063315,\r\n\t2.3322332233223317,\r\n\t2.333833383338334,\r\n\t2.335433543354336,\r\n\t2.337033703370338,\r\n\t2.338633863386338,\r\n\t2.34023402340234,\r\n\t2.3418341834183423,\r\n\t2.3434343434343443,\r\n\t2.3450345034503446,\r\n\t2.3466346634663466,\r\n\t2.3482348234823487,\r\n\t2.3498349834983507,\r\n\t2.351435143514351,\r\n\t2.353035303530353,\r\n\t2.354635463546355,\r\n\t2.356235623562357,\r\n\t2.3578357835783574,\r\n\t2.3594359435943595,\r\n\t2.3610361036103615,\r\n\t2.3626362636263636,\r\n\t2.364236423642364,\r\n\t2.365836583658366,\r\n\t2.367436743674368,\r\n\t2.36903690369037,\r\n\t2.3706370637063703,\r\n\t2.3722372237223723,\r\n\t2.3738373837383744,\r\n\t2.3754375437543764,\r\n\t2.3770377037703767,\r\n\t2.3786378637863788,\r\n\t2.380238023802381,\r\n\t2.381838183818383,\r\n\t2.383438343834383,\r\n\t2.385038503850385,\r\n\t2.3866386638663872,\r\n\t2.3882388238823893,\r\n\t2.3898389838983896,\r\n\t2.3914391439143916,\r\n\t2.3930393039303937,\r\n\t2.3946394639463957,\r\n\t2.396239623962396,\r\n\t2.397839783978398,\r\n\t2.3994399439944,\r\n\t2.401040104010402,\r\n\t2.4026402640264024,\r\n\t2.4042404240424045,\r\n\t2.4058405840584065,\r\n\t2.4074407440744086,\r\n\t2.409040904090409,\r\n\t2.410641064106411,\r\n\t2.412241224122413,\r\n\t2.413841384138415,\r\n\t2.4154415441544153,\r\n\t2.4170417041704173,\r\n\t2.4186418641864194,\r\n\t2.4202420242024214,\r\n\t2.4218421842184217,\r\n\t2.4234423442344237,\r\n\t2.425042504250426,\r\n\t2.426642664266428,\r\n\t2.428242824282428,\r\n\t2.42984298429843,\r\n\t2.431443144314432,\r\n\t2.4330433043304343,\r\n\t2.4346434643464345,\r\n\t2.4362436243624366,\r\n\t2.4378437843784386,\r\n\t2.439443944394439,\r\n\t2.441044104410441,\r\n\t2.442644264426443,\r\n\t2.444244424442445,\r\n\t2.4458445844584453,\r\n\t2.4474447444744474,\r\n\t2.4490449044904494,\r\n\t2.4506450645064515,\r\n\t2.4522452245224517,\r\n\t2.453845384538454,\r\n\t2.455445544554456,\r\n\t2.457045704570458,\r\n\t2.458645864586458,\r\n\t2.4602460246024602,\r\n\t2.4618461846184623,\r\n\t2.4634463446344643,\r\n\t2.4650465046504646,\r\n\t2.4666466646664666,\r\n\t2.4682468246824687,\r\n\t2.4698469846984707,\r\n\t2.471447144714471,\r\n\t2.473047304730473,\r\n\t2.474647464746475,\r\n\t2.476247624762477,\r\n\t2.4778477847784774,\r\n\t2.4794479447944795,\r\n\t2.4810481048104815,\r\n\t2.4826482648264836,\r\n\t2.484248424842484,\r\n\t2.485848584858486,\r\n\t2.487448744874488,\r\n\t2.48904890489049,\r\n\t2.4906490649064903,\r\n\t2.4922492249224923,\r\n\t2.4938493849384944,\r\n\t2.4954495449544964,\r\n\t2.4970497049704967,\r\n\t2.4986498649864988,\r\n\t2.500250025002501,\r\n\t2.501850185018503,\r\n\t2.503450345034503,\r\n\t2.505050505050505,\r\n\t2.5066506650665072,\r\n\t2.5082508250825093,\r\n\t2.5098509850985096,\r\n\t2.5114511451145116,\r\n\t2.5130513051305137,\r\n\t2.5146514651465157,\r\n\t2.516251625162516,\r\n\t2.517851785178518,\r\n\t2.51945194519452,\r\n\t2.521052105210522,\r\n\t2.5226522652265224,\r\n\t2.5242524252425245,\r\n\t2.5258525852585265,\r\n\t2.5274527452745286,\r\n\t2.529052905290529,\r\n\t2.530653065306531,\r\n\t2.532253225322533,\r\n\t2.533853385338535,\r\n\t2.5354535453545353,\r\n\t2.5370537053705373,\r\n\t2.5386538653865394,\r\n\t2.5402540254025414,\r\n\t2.5418541854185417,\r\n\t2.5434543454345437,\r\n\t2.545054505450546,\r\n\t2.546654665466548,\r\n\t2.548254825482548,\r\n\t2.54985498549855,\r\n\t2.551455145514552,\r\n\t2.5530553055305543,\r\n\t2.5546554655465545,\r\n\t2.5562556255625566,\r\n\t2.5578557855785586,\r\n\t2.5594559455945607,\r\n\t2.561056105610561,\r\n\t2.562656265626563,\r\n\t2.564256425642565,\r\n\t2.5658565856585653,\r\n\t2.5674567456745674,\r\n\t2.5690569056905694,\r\n\t2.5706570657065715,\r\n\t2.5722572257225718,\r\n\t2.573857385738574,\r\n\t2.575457545754576,\r\n\t2.577057705770578,\r\n\t2.578657865786578,\r\n\t2.5802580258025802,\r\n\t2.5818581858185823,\r\n\t2.5834583458345843,\r\n\t2.5850585058505846,\r\n\t2.5866586658665867,\r\n\t2.5882588258825887,\r\n\t2.5898589858985908,\r\n\t2.591459145914591,\r\n\t2.593059305930593,\r\n\t2.594659465946595,\r\n\t2.596259625962597,\r\n\t2.5978597859785975,\r\n\t2.5994599459945995,\r\n\t2.6010601060106016,\r\n\t2.6026602660266036,\r\n\t2.604260426042604,\r\n\t2.605860586058606,\r\n\t2.607460746074608,\r\n\t2.60906090609061,\r\n\t2.6106610661066103,\r\n\t2.6122612261226124,\r\n\t2.6138613861386144,\r\n\t2.6154615461546165,\r\n\t2.6170617061706167,\r\n\t2.618661866186619,\r\n\t2.620262026202621,\r\n\t2.621862186218623,\r\n\t2.623462346234623,\r\n\t2.625062506250625,\r\n\t2.6266626662666273,\r\n\t2.6282628262826293,\r\n\t2.6298629862986296,\r\n\t2.6314631463146316,\r\n\t2.6330633063306337,\r\n\t2.6346634663466357,\r\n\t2.636263626362636,\r\n\t2.637863786378638,\r\n\t2.63946394639464,\r\n\t2.641064106410642,\r\n\t2.6426642664266424,\r\n\t2.6442644264426445,\r\n\t2.6458645864586465,\r\n\t2.6474647464746486,\r\n\t2.649064906490649,\r\n\t2.650665066506651,\r\n\t2.652265226522653,\r\n\t2.653865386538655,\r\n\t2.6554655465546553,\r\n\t2.6570657065706573,\r\n\t2.6586658665866594,\r\n\t2.6602660266026614,\r\n\t2.6618661866186617,\r\n\t2.6634663466346638,\r\n\t2.665066506650666,\r\n\t2.666666666666668,\r\n\t2.668266826682668,\r\n\t2.66986698669867,\r\n\t2.6714671467146722,\r\n\t2.6730673067306743,\r\n\t2.6746674667466745,\r\n\t2.6762676267626766,\r\n\t2.6778677867786786,\r\n\t2.6794679467946807,\r\n\t2.681068106810681,\r\n\t2.682668266826683,\r\n\t2.684268426842685,\r\n\t2.6858685868586853,\r\n\t2.6874687468746874,\r\n\t2.6890689068906894,\r\n\t2.6906690669066915,\r\n\t2.6922692269226918,\r\n\t2.693869386938694,\r\n\t2.695469546954696,\r\n\t2.697069706970698,\r\n\t2.698669866986698,\r\n\t2.7002700270027002,\r\n\t2.7018701870187023,\r\n\t2.7034703470347043,\r\n\t2.7050705070507046,\r\n\t2.7066706670667067,\r\n\t2.7082708270827087,\r\n\t2.7098709870987108,\r\n\t2.711471147114711,\r\n\t2.713071307130713,\r\n\t2.714671467146715,\r\n\t2.716271627162717,\r\n\t2.7178717871787175,\r\n\t2.7194719471947195,\r\n\t2.7210721072107216,\r\n\t2.7226722672267236,\r\n\t2.724272427242724,\r\n\t2.725872587258726,\r\n\t2.727472747274728,\r\n\t2.72907290729073,\r\n\t2.7306730673067303,\r\n\t2.7322732273227324,\r\n\t2.7338733873387344,\r\n\t2.7354735473547365,\r\n\t2.7370737073707367,\r\n\t2.738673867386739,\r\n\t2.740274027402741,\r\n\t2.741874187418743,\r\n\t2.743474347434743,\r\n\t2.745074507450745,\r\n\t2.7466746674667473,\r\n\t2.7482748274827493,\r\n\t2.7498749874987496,\r\n\t2.7514751475147516,\r\n\t2.7530753075307537,\r\n\t2.7546754675467557,\r\n\t2.756275627562756,\r\n\t2.757875787578758,\r\n\t2.75947594759476,\r\n\t2.761076107610762,\r\n\t2.7626762676267624,\r\n\t2.7642764276427645,\r\n\t2.7658765876587665,\r\n\t2.7674767476747686,\r\n\t2.769076907690769,\r\n\t2.770677067706771,\r\n\t2.772277227722773,\r\n\t2.773877387738775,\r\n\t2.7754775477547753,\r\n\t2.7770777077707773,\r\n\t2.7786778677867794,\r\n\t2.7802780278027814,\r\n\t2.7818781878187817,\r\n\t2.7834783478347838,\r\n\t2.785078507850786,\r\n\t2.786678667866788,\r\n\t2.788278827882788,\r\n\t2.78987898789879,\r\n\t2.7914791479147922,\r\n\t2.7930793079307943,\r\n\t2.7946794679467946,\r\n\t2.7962796279627966,\r\n\t2.7978797879787987,\r\n\t2.7994799479948007,\r\n\t2.801080108010801,\r\n\t2.802680268026803,\r\n\t2.804280428042805,\r\n\t2.8058805880588054,\r\n\t2.8074807480748074,\r\n\t2.8090809080908095,\r\n\t2.8106810681068115,\r\n\t2.812281228122812,\r\n\t2.813881388138814,\r\n\t2.815481548154816,\r\n\t2.817081708170818,\r\n\t2.818681868186818,\r\n\t2.8202820282028203,\r\n\t2.8218821882188223,\r\n\t2.8234823482348244,\r\n\t2.8250825082508246,\r\n\t2.8266826682668267,\r\n\t2.8282828282828287,\r\n\t2.829882988298831,\r\n\t2.831483148314831,\r\n\t2.833083308330833,\r\n\t2.834683468346835,\r\n\t2.836283628362837,\r\n\t2.8378837883788375,\r\n\t2.8394839483948395,\r\n\t2.8410841084108416,\r\n\t2.8426842684268436,\r\n\t2.844284428442844,\r\n\t2.845884588458846,\r\n\t2.847484748474848,\r\n\t2.84908490849085,\r\n\t2.8506850685068503,\r\n\t2.8522852285228524,\r\n\t2.8538853885388544,\r\n\t2.8554855485548565,\r\n\t2.8570857085708568,\r\n\t2.858685868586859,\r\n\t2.860286028602861,\r\n\t2.861886188618863,\r\n\t2.863486348634863,\r\n\t2.8650865086508652,\r\n\t2.8666866686668673,\r\n\t2.8682868286828693,\r\n\t2.8698869886988696,\r\n\t2.8714871487148717,\r\n\t2.8730873087308737,\r\n\t2.8746874687468758,\r\n\t2.876287628762876,\r\n\t2.877887788778878,\r\n\t2.87948794879488,\r\n\t2.881088108810882,\r\n\t2.8826882688268824,\r\n\t2.8842884288428845,\r\n\t2.8858885888588865,\r\n\t2.8874887488748886,\r\n\t2.889088908890889,\r\n\t2.890689068906891,\r\n\t2.892289228922893,\r\n\t2.893889388938895,\r\n\t2.8954895489548953,\r\n\t2.8970897089708973,\r\n\t2.8986898689868994,\r\n\t2.9002900290029014,\r\n\t2.9018901890189017,\r\n\t2.9034903490349038,\r\n\t2.905090509050906,\r\n\t2.906690669066908,\r\n\t2.908290829082908,\r\n\t2.90989098909891,\r\n\t2.9114911491149122,\r\n\t2.9130913091309143,\r\n\t2.9146914691469146,\r\n\t2.9162916291629166,\r\n\t2.9178917891789187,\r\n\t2.9194919491949207,\r\n\t2.921092109210921,\r\n\t2.922692269226923,\r\n\t2.924292429242925,\r\n\t2.9258925892589254,\r\n\t2.9274927492749274,\r\n\t2.9290929092909295,\r\n\t2.9306930693069315,\r\n\t2.932293229322932,\r\n\t2.933893389338934,\r\n\t2.935493549354936,\r\n\t2.937093709370938,\r\n\t2.938693869386938,\r\n\t2.9402940294029403,\r\n\t2.9418941894189423,\r\n\t2.9434943494349444,\r\n\t2.9450945094509446,\r\n\t2.9466946694669467,\r\n\t2.9482948294829487,\r\n\t2.949894989498951,\r\n\t2.951495149514951,\r\n\t2.953095309530953,\r\n\t2.954695469546955,\r\n\t2.956295629562957,\r\n\t2.9578957895789575,\r\n\t2.9594959495949595,\r\n\t2.9610961096109616,\r\n\t2.9626962696269636,\r\n\t2.964296429642964,\r\n\t2.965896589658966,\r\n\t2.967496749674968,\r\n\t2.96909690969097,\r\n\t2.9706970697069703,\r\n\t2.9722972297229724,\r\n\t2.9738973897389744,\r\n\t2.9754975497549765,\r\n\t2.9770977097709768,\r\n\t2.978697869786979,\r\n\t2.980298029802981,\r\n\t2.981898189818983,\r\n\t2.983498349834983,\r\n\t2.9850985098509852,\r\n\t2.9866986698669873,\r\n\t2.9882988298829893,\r\n\t2.9898989898989896,\r\n\t2.9914991499149917,\r\n\t2.9930993099309937,\r\n\t2.9946994699469958,\r\n\t2.996299629962996,\r\n\t2.997899789978998,\r\n\t2.999499949995,\r\n\t3.001100110011002,\r\n\t3.0027002700270025,\r\n\t3.0043004300430045,\r\n\t3.0059005900590066,\r\n\t3.0075007500750086,\r\n\t3.009100910091009,\r\n\t3.010701070107011,\r\n\t3.012301230123013,\r\n\t3.013901390139015,\r\n\t3.0155015501550153,\r\n\t3.0171017101710174,\r\n\t3.0187018701870194,\r\n\t3.0203020302030215,\r\n\t3.0219021902190217,\r\n\t3.023502350235024,\r\n\t3.025102510251026,\r\n\t3.026702670267028,\r\n\t3.028302830283028,\r\n\t3.02990299029903,\r\n\t3.0315031503150323,\r\n\t3.0331033103310343,\r\n\t3.0347034703470346,\r\n\t3.0363036303630366,\r\n\t3.0379037903790387,\r\n\t3.0395039503950407,\r\n\t3.041104110411041,\r\n\t3.042704270427043,\r\n\t3.044304430443045,\r\n\t3.0459045904590454,\r\n\t3.0475047504750474,\r\n\t3.0491049104910495,\r\n\t3.0507050705070515,\r\n\t3.052305230523052,\r\n\t3.053905390539054,\r\n\t3.055505550555056,\r\n\t3.057105710571058,\r\n\t3.0587058705870582,\r\n\t3.0603060306030603,\r\n\t3.0619061906190623,\r\n\t3.0635063506350644,\r\n\t3.0651065106510647,\r\n\t3.0667066706670667,\r\n\t3.0683068306830688,\r\n\t3.069906990699071,\r\n\t3.071507150715071,\r\n\t3.073107310731073,\r\n\t3.074707470747075,\r\n\t3.0763076307630772,\r\n\t3.0779077907790775,\r\n\t3.0795079507950796,\r\n\t3.0811081108110816,\r\n\t3.0827082708270837,\r\n\t3.084308430843084,\r\n\t3.085908590859086,\r\n\t3.087508750875088,\r\n\t3.08910891089109,\r\n\t3.0907090709070904,\r\n\t3.0923092309230924,\r\n\t3.0939093909390945,\r\n\t3.0955095509550965,\r\n\t3.0971097109710968,\r\n\t3.098709870987099,\r\n\t3.100310031003101,\r\n\t3.101910191019103,\r\n\t3.103510351035103,\r\n\t3.1051105110511052,\r\n\t3.1067106710671073,\r\n\t3.1083108310831093,\r\n\t3.1099109910991096,\r\n\t3.1115111511151117,\r\n\t3.1131113111311137,\r\n\t3.1147114711471158,\r\n\t3.116311631163116,\r\n\t3.117911791179118,\r\n\t3.11951195119512,\r\n\t3.121112111211122,\r\n\t3.1227122712271225,\r\n\t3.1243124312431245,\r\n\t3.1259125912591266,\r\n\t3.1275127512751286,\r\n\t3.129112911291129,\r\n\t3.130713071307131,\r\n\t3.132313231323133,\r\n\t3.133913391339135,\r\n\t3.1355135513551353,\r\n\t3.1371137113711374,\r\n\t3.1387138713871394,\r\n\t3.1403140314031415,\r\n\t3.1419141914191417,\r\n\t3.143514351435144,\r\n\t3.145114511451146,\r\n\t3.146714671467148,\r\n\t3.148314831483148,\r\n\t3.14991499149915,\r\n\t3.1515151515151523,\r\n\t3.1531153115311543,\r\n\t3.1547154715471546,\r\n\t3.1563156315631566,\r\n\t3.1579157915791587,\r\n\t3.1595159515951607,\r\n\t3.161116111611161,\r\n\t3.162716271627163,\r\n\t3.164316431643165,\r\n\t3.165916591659167,\r\n\t3.1675167516751674,\r\n\t3.1691169116911695,\r\n\t3.1707170717071715,\r\n\t3.172317231723172,\r\n\t3.173917391739174,\r\n\t3.175517551755176,\r\n\t3.177117711771178,\r\n\t3.1787178717871782,\r\n\t3.1803180318031803,\r\n\t3.1819181918191823,\r\n\t3.1835183518351844,\r\n\t3.1851185118511847,\r\n\t3.1867186718671867,\r\n\t3.1883188318831888,\r\n\t3.189918991899191,\r\n\t3.191519151915191,\r\n\t3.193119311931193,\r\n\t3.194719471947195,\r\n\t3.1963196319631972,\r\n\t3.1979197919791975,\r\n\t3.1995199519951996,\r\n\t3.2011201120112016,\r\n\t3.2027202720272037,\r\n\t3.204320432043204,\r\n\t3.205920592059206,\r\n\t3.207520752075208,\r\n\t3.20912091209121,\r\n\t3.2107210721072104,\r\n\t3.2123212321232124,\r\n\t3.2139213921392145,\r\n\t3.2155215521552165,\r\n\t3.217121712171217,\r\n\t3.218721872187219,\r\n\t3.220322032203221,\r\n\t3.221922192219223,\r\n\t3.223522352235223,\r\n\t3.2251225122512253,\r\n\t3.2267226722672273,\r\n\t3.2283228322832294,\r\n\t3.2299229922992296,\r\n\t3.2315231523152317,\r\n\t3.2331233123312337,\r\n\t3.234723472347236,\r\n\t3.236323632363236,\r\n\t3.237923792379238,\r\n\t3.23952395239524,\r\n\t3.241124112411242,\r\n\t3.2427242724272425,\r\n\t3.2443244324432445,\r\n\t3.2459245924592466,\r\n\t3.2475247524752486,\r\n\t3.249124912491249,\r\n\t3.250725072507251,\r\n\t3.252325232523253,\r\n\t3.253925392539255,\r\n\t3.2555255525552553,\r\n\t3.2571257125712574,\r\n\t3.2587258725872594,\r\n\t3.2603260326032615,\r\n\t3.2619261926192618,\r\n\t3.263526352635264,\r\n\t3.265126512651266,\r\n\t3.266726672667268,\r\n\t3.268326832683268,\r\n\t3.2699269926992702,\r\n\t3.2715271527152723,\r\n\t3.2731273127312743,\r\n\t3.2747274727472746,\r\n\t3.2763276327632767,\r\n\t3.2779277927792787,\r\n\t3.2795279527952808,\r\n\t3.281128112811281,\r\n\t3.282728272827283,\r\n\t3.284328432843285,\r\n\t3.285928592859287,\r\n\t3.2875287528752875,\r\n\t3.2891289128912895,\r\n\t3.2907290729072916,\r\n\t3.292329232923292,\r\n\t3.293929392939294,\r\n\t3.295529552955296,\r\n\t3.297129712971298,\r\n\t3.2987298729872983,\r\n\t3.3003300330033003,\r\n\t3.3019301930193024,\r\n\t3.3035303530353044,\r\n\t3.3051305130513047,\r\n\t3.3067306730673067,\r\n\t3.3083308330833088,\r\n\t3.309930993099311,\r\n\t3.311531153115311,\r\n\t3.313131313131313,\r\n\t3.314731473147315,\r\n\t3.3163316331633172,\r\n\t3.3179317931793175,\r\n\t3.3195319531953196,\r\n\t3.3211321132113216,\r\n\t3.3227322732273237,\r\n\t3.324332433243324,\r\n\t3.325932593259326,\r\n\t3.327532753275328,\r\n\t3.32913291329133,\r\n\t3.3307330733073304,\r\n\t3.3323332333233324,\r\n\t3.3339333933393345,\r\n\t3.3355335533553365,\r\n\t3.337133713371337,\r\n\t3.338733873387339,\r\n\t3.340334033403341,\r\n\t3.341934193419343,\r\n\t3.343534353435343,\r\n\t3.3451345134513453,\r\n\t3.3467346734673473,\r\n\t3.3483348334833494,\r\n\t3.3499349934993496,\r\n\t3.3515351535153517,\r\n\t3.3531353135313537,\r\n\t3.354735473547356,\r\n\t3.356335633563356,\r\n\t3.357935793579358,\r\n\t3.35953595359536,\r\n\t3.361136113611362,\r\n\t3.3627362736273625,\r\n\t3.3643364336433645,\r\n\t3.3659365936593666,\r\n\t3.3675367536753686,\r\n\t3.369136913691369,\r\n\t3.370737073707371,\r\n\t3.372337233723373,\r\n\t3.373937393739375,\r\n\t3.3755375537553753,\r\n\t3.3771377137713774,\r\n\t3.3787378737873794,\r\n\t3.3803380338033815,\r\n\t3.3819381938193818,\r\n\t3.383538353835384,\r\n\t3.385138513851386,\r\n\t3.386738673867388,\r\n\t3.388338833883388,\r\n\t3.3899389938993902,\r\n\t3.3915391539153923,\r\n\t3.3931393139313943,\r\n\t3.3947394739473946,\r\n\t3.3963396339633967,\r\n\t3.3979397939793987,\r\n\t3.3995399539954008,\r\n\t3.401140114011401,\r\n\t3.402740274027403,\r\n\t3.404340434043405,\r\n\t3.405940594059407,\r\n\t3.4075407540754075,\r\n\t3.4091409140914095,\r\n\t3.4107410741074116,\r\n\t3.412341234123412,\r\n\t3.413941394139414,\r\n\t3.415541554155416,\r\n\t3.417141714171418,\r\n\t3.4187418741874183,\r\n\t3.4203420342034203,\r\n\t3.4219421942194224,\r\n\t3.4235423542354244,\r\n\t3.4251425142514247,\r\n\t3.4267426742674267,\r\n\t3.428342834283429,\r\n\t3.429942994299431,\r\n\t3.431543154315431,\r\n\t3.433143314331433,\r\n\t3.434743474347435,\r\n\t3.4363436343634373,\r\n\t3.4379437943794375,\r\n\t3.4395439543954396,\r\n\t3.4411441144114416,\r\n\t3.4427442744274437,\r\n\t3.444344434443444,\r\n\t3.445944594459446,\r\n\t3.447544754475448,\r\n\t3.44914491449145,\r\n\t3.4507450745074504,\r\n\t3.4523452345234524,\r\n\t3.4539453945394545,\r\n\t3.4555455545554565,\r\n\t3.457145714571457,\r\n\t3.458745874587459,\r\n\t3.460346034603461,\r\n\t3.461946194619463,\r\n\t3.4635463546354632,\r\n\t3.4651465146514653,\r\n\t3.4667466746674673,\r\n\t3.4683468346834694,\r\n\t3.4699469946994697,\r\n\t3.4715471547154717,\r\n\t3.4731473147314738,\r\n\t3.474747474747476,\r\n\t3.476347634763476,\r\n\t3.477947794779478,\r\n\t3.47954795479548,\r\n\t3.4811481148114822,\r\n\t3.4827482748274825,\r\n\t3.4843484348434846,\r\n\t3.4859485948594866,\r\n\t3.4875487548754887,\r\n\t3.489148914891489,\r\n\t3.490749074907491,\r\n\t3.492349234923493,\r\n\t3.493949394939495,\r\n\t3.4955495549554954,\r\n\t3.4971497149714974,\r\n\t3.4987498749874995,\r\n\t3.5003500350035015,\r\n\t3.5019501950195018,\r\n\t3.503550355035504,\r\n\t3.505150515051506,\r\n\t3.506750675067508,\r\n\t3.508350835083508,\r\n\t3.5099509950995103,\r\n\t3.5115511551155123,\r\n\t3.5131513151315144,\r\n\t3.5147514751475146,\r\n\t3.5163516351635167,\r\n\t3.5179517951795187,\r\n\t3.5195519551955208,\r\n\t3.521152115211521,\r\n\t3.522752275227523,\r\n\t3.524352435243525,\r\n\t3.525952595259527,\r\n\t3.5275527552755275,\r\n\t3.5291529152915295,\r\n\t3.5307530753075316,\r\n\t3.532353235323532,\r\n\t3.533953395339534,\r\n\t3.535553555355536,\r\n\t3.537153715371538,\r\n\t3.5387538753875383,\r\n\t3.5403540354035403,\r\n\t3.5419541954195424,\r\n\t3.5435543554355444,\r\n\t3.5451545154515447,\r\n\t3.5467546754675467,\r\n\t3.548354835483549,\r\n\t3.549954995499551,\r\n\t3.551555155515551,\r\n\t3.553155315531553,\r\n\t3.554755475547555,\r\n\t3.5563556355635573,\r\n\t3.5579557955795575,\r\n\t3.5595559555955596,\r\n\t3.5611561156115616,\r\n\t3.5627562756275637,\r\n\t3.564356435643564,\r\n\t3.565956595659566,\r\n\t3.567556755675568,\r\n\t3.56915691569157,\r\n\t3.5707570757075704,\r\n\t3.5723572357235724,\r\n\t3.5739573957395745,\r\n\t3.5755575557555765,\r\n\t3.577157715771577,\r\n\t3.578757875787579,\r\n\t3.580358035803581,\r\n\t3.581958195819583,\r\n\t3.5835583558355832,\r\n\t3.5851585158515853,\r\n\t3.5867586758675873,\r\n\t3.5883588358835894,\r\n\t3.5899589958995897,\r\n\t3.5915591559155917,\r\n\t3.5931593159315938,\r\n\t3.594759475947596,\r\n\t3.596359635963596,\r\n\t3.597959795979598,\r\n\t3.5995599559956,\r\n\t3.6011601160116022,\r\n\t3.6027602760276025,\r\n\t3.6043604360436046,\r\n\t3.6059605960596066,\r\n\t3.6075607560756087,\r\n\t3.609160916091609,\r\n\t3.610761076107611,\r\n\t3.612361236123613,\r\n\t3.613961396139615,\r\n\t3.6155615561556154,\r\n\t3.6171617161716174,\r\n\t3.6187618761876195,\r\n\t3.6203620362036215,\r\n\t3.621962196219622,\r\n\t3.623562356235624,\r\n\t3.625162516251626,\r\n\t3.626762676267628,\r\n\t3.628362836283628,\r\n\t3.6299629962996303,\r\n\t3.6315631563156323,\r\n\t3.6331633163316344,\r\n\t3.6347634763476346,\r\n\t3.6363636363636367,\r\n\t3.6379637963796387,\r\n\t3.639563956395641,\r\n\t3.641164116411641,\r\n\t3.642764276427643,\r\n\t3.644364436443645,\r\n\t3.645964596459647,\r\n\t3.6475647564756475,\r\n\t3.6491649164916495,\r\n\t3.6507650765076516,\r\n\t3.652365236523652,\r\n\t3.653965396539654,\r\n\t3.655565556555656,\r\n\t3.657165716571658,\r\n\t3.6587658765876583,\r\n\t3.6603660366036603,\r\n\t3.6619661966196624,\r\n\t3.6635663566356644,\r\n\t3.6651665166516647,\r\n\t3.6667666766676668,\r\n\t3.668366836683669,\r\n\t3.669966996699671,\r\n\t3.671567156715671,\r\n\t3.673167316731673,\r\n\t3.6747674767476752,\r\n\t3.6763676367636773,\r\n\t3.6779677967796776,\r\n\t3.6795679567956796,\r\n\t3.6811681168116817,\r\n\t3.6827682768276837,\r\n\t3.684368436843684,\r\n\t3.685968596859686,\r\n\t3.687568756875688,\r\n\t3.68916891689169,\r\n\t3.6907690769076904,\r\n\t3.6923692369236925,\r\n\t3.6939693969396945,\r\n\t3.6955695569556966,\r\n\t3.697169716971697,\r\n\t3.698769876987699,\r\n\t3.700370037003701,\r\n\t3.701970197019703,\r\n\t3.7035703570357033,\r\n\t3.7051705170517053,\r\n\t3.7067706770677074,\r\n\t3.7083708370837094,\r\n\t3.7099709970997097,\r\n\t3.7115711571157117,\r\n\t3.7131713171317138,\r\n\t3.714771477147716,\r\n\t3.716371637163716,\r\n\t3.717971797179718,\r\n\t3.71957195719572,\r\n\t3.7211721172117223,\r\n\t3.7227722772277225,\r\n\t3.7243724372437246,\r\n\t3.7259725972597266,\r\n\t3.7275727572757287,\r\n\t3.729172917291729,\r\n\t3.730773077307731,\r\n\t3.732373237323733,\r\n\t3.733973397339735,\r\n\t3.7355735573557354,\r\n\t3.7371737173717374,\r\n\t3.7387738773877395,\r\n\t3.7403740374037415,\r\n\t3.741974197419742,\r\n\t3.743574357435744,\r\n\t3.745174517451746,\r\n\t3.746774677467748,\r\n\t3.7483748374837482,\r\n\t3.7499749974997503,\r\n\t3.7515751575157523,\r\n\t3.7531753175317544,\r\n\t3.7547754775477546,\r\n\t3.7563756375637567,\r\n\t3.7579757975797587,\r\n\t3.759575957595761,\r\n\t3.761176117611761,\r\n\t3.762776277627763,\r\n\t3.764376437643765,\r\n\t3.7659765976597672,\r\n\t3.7675767576757675,\r\n\t3.7691769176917695,\r\n\t3.7707770777077716,\r\n\t3.7723772377237736,\r\n\t3.773977397739774,\r\n\t3.775577557755776,\r\n\t3.777177717771778,\r\n\t3.7787778777877783,\r\n\t3.7803780378037803,\r\n\t3.7819781978197824,\r\n\t3.7835783578357844,\r\n\t3.7851785178517847,\r\n\t3.7867786778677868,\r\n\t3.788378837883789,\r\n\t3.789978997899791,\r\n\t3.791579157915791,\r\n\t3.793179317931793,\r\n\t3.7947794779477952,\r\n\t3.7963796379637973,\r\n\t3.7979797979797976,\r\n\t3.7995799579957996,\r\n\t3.8011801180118017,\r\n\t3.8027802780278037,\r\n\t3.804380438043804,\r\n\t3.805980598059806,\r\n\t3.807580758075808,\r\n\t3.80918091809181,\r\n\t3.8107810781078104,\r\n\t3.8123812381238125,\r\n\t3.8139813981398145,\r\n\t3.8155815581558166,\r\n\t3.817181718171817,\r\n\t3.818781878187819,\r\n\t3.820382038203821,\r\n\t3.821982198219823,\r\n\t3.8235823582358233,\r\n\t3.8251825182518253,\r\n\t3.8267826782678274,\r\n\t3.8283828382838294,\r\n\t3.8299829982998297,\r\n\t3.8315831583158317,\r\n\t3.833183318331834,\r\n\t3.834783478347836,\r\n\t3.836383638363836,\r\n\t3.837983798379838,\r\n\t3.83958395839584,\r\n\t3.8411841184118423,\r\n\t3.8427842784278425,\r\n\t3.8443844384438446,\r\n\t3.8459845984598466,\r\n\t3.8475847584758487,\r\n\t3.849184918491849,\r\n\t3.850785078507851,\r\n\t3.852385238523853,\r\n\t3.853985398539855,\r\n\t3.8555855585558554,\r\n\t3.8571857185718574,\r\n\t3.8587858785878595,\r\n\t3.8603860386038615,\r\n\t3.861986198619862,\r\n\t3.863586358635864,\r\n\t3.865186518651866,\r\n\t3.866786678667868,\r\n\t3.8683868386838682,\r\n\t3.8699869986998703,\r\n\t3.8715871587158723,\r\n\t3.8731873187318744,\r\n\t3.8747874787478747,\r\n\t3.8763876387638767,\r\n\t3.8779877987798788,\r\n\t3.879587958795881,\r\n\t3.881188118811881,\r\n\t3.882788278827883,\r\n\t3.884388438843885,\r\n\t3.8859885988598872,\r\n\t3.8875887588758875,\r\n\t3.8891889188918896,\r\n\t3.8907890789078916,\r\n\t3.8923892389238937,\r\n\t3.893989398939894,\r\n\t3.895589558955896,\r\n\t3.897189718971898,\r\n\t3.8987898789878983,\r\n\t3.9003900390039004,\r\n\t3.9019901990199024,\r\n\t3.9035903590359045,\r\n\t3.9051905190519047,\r\n\t3.906790679067907,\r\n\t3.908390839083909,\r\n\t3.909990999099911,\r\n\t3.911591159115911,\r\n\t3.913191319131913,\r\n\t3.9147914791479153,\r\n\t3.9163916391639173,\r\n\t3.9179917991799176,\r\n\t3.9195919591959196,\r\n\t3.9211921192119217,\r\n\t3.9227922792279237,\r\n\t3.924392439243924,\r\n\t3.925992599259926,\r\n\t3.927592759275928,\r\n\t3.92919291929193,\r\n\t3.9307930793079304,\r\n\t3.9323932393239325,\r\n\t3.9339933993399345,\r\n\t3.9355935593559366,\r\n\t3.937193719371937,\r\n\t3.938793879387939,\r\n\t3.940394039403941,\r\n\t3.941994199419943,\r\n\t3.9435943594359433,\r\n\t3.9451945194519453,\r\n\t3.9467946794679474,\r\n\t3.9483948394839494,\r\n\t3.9499949994999497,\r\n\t3.9515951595159517,\r\n\t3.953195319531954,\r\n\t3.954795479547956,\r\n\t3.956395639563956,\r\n\t3.957995799579958,\r\n\t3.9595959595959602,\r\n\t3.9611961196119623,\r\n\t3.9627962796279625,\r\n\t3.9643964396439646,\r\n\t3.9659965996599666,\r\n\t3.9675967596759687,\r\n\t3.969196919691969,\r\n\t3.970797079707971,\r\n\t3.972397239723973,\r\n\t3.973997399739975,\r\n\t3.9755975597559754,\r\n\t3.9771977197719774,\r\n\t3.9787978797879795,\r\n\t3.9803980398039815,\r\n\t3.981998199819982,\r\n\t3.983598359835984,\r\n\t3.985198519851986,\r\n\t3.986798679867988,\r\n\t3.9883988398839882,\r\n\t3.9899989998999903,\r\n\t3.9915991599159923,\r\n\t3.9931993199319944,\r\n\t3.9947994799479947,\r\n\t3.9963996399639967,\r\n\t3.9979997999799988,\r\n\t3.999599959996001,\r\n\t4.001200120012001,\r\n\t4.002800280028003,\r\n\t4.004400440044005,\r\n\t4.006000600060007,\r\n\t4.0076007600760075,\r\n\t4.00920092009201,\r\n\t4.010801080108012,\r\n\t4.012401240124014,\r\n\t4.014001400140014,\r\n\t4.015601560156016,\r\n\t4.017201720172018,\r\n\t4.018801880188018,\r\n\t4.02040204020402,\r\n\t4.022002200220022,\r\n\t4.0236023602360245,\r\n\t4.025202520252025,\r\n\t4.026802680268027,\r\n\t4.028402840284029,\r\n\t4.030003000300031,\r\n\t4.031603160316031,\r\n\t4.033203320332033,\r\n\t4.034803480348035,\r\n\t4.036403640364037,\r\n\t4.038003800380038,\r\n\t4.03960396039604,\r\n\t4.041204120412042,\r\n\t4.042804280428044,\r\n\t4.044404440444044,\r\n\t4.046004600460046,\r\n\t4.047604760476048,\r\n\t4.04920492049205,\r\n\t4.05080508050805,\r\n\t4.0524052405240525,\r\n\t4.0540054005400545,\r\n\t4.055605560556057,\r\n\t4.057205720572057,\r\n\t4.058805880588059,\r\n\t4.060406040604061,\r\n\t4.062006200620063,\r\n\t4.063606360636063,\r\n\t4.065206520652065,\r\n\t4.066806680668067,\r\n\t4.068406840684069,\r\n\t4.07000700070007,\r\n\t4.071607160716072,\r\n\t4.073207320732074,\r\n\t4.074807480748076,\r\n\t4.076407640764076,\r\n\t4.078007800780078,\r\n\t4.07960796079608,\r\n\t4.081208120812082,\r\n\t4.082808280828083,\r\n\t4.084408440844085,\r\n\t4.086008600860087,\r\n\t4.087608760876089,\r\n\t4.089208920892089,\r\n\t4.090809080908091,\r\n\t4.092409240924093,\r\n\t4.094009400940095,\r\n\t4.095609560956095,\r\n\t4.0972097209720975,\r\n\t4.0988098809880995,\r\n\t4.100410041004102,\r\n\t4.102010201020102,\r\n\t4.103610361036104,\r\n\t4.105210521052106,\r\n\t4.106810681068108,\r\n\t4.108410841084108,\r\n\t4.11001100110011,\r\n\t4.111611161116112,\r\n\t4.113211321132114,\r\n\t4.114811481148115,\r\n\t4.116411641164117,\r\n\t4.118011801180119,\r\n\t4.119611961196121,\r\n\t4.121212121212121,\r\n\t4.122812281228123,\r\n\t4.124412441244125,\r\n\t4.126012601260127,\r\n\t4.1276127612761275,\r\n\t4.12921292129213,\r\n\t4.130813081308132,\r\n\t4.132413241324134,\r\n\t4.134013401340134,\r\n\t4.135613561356136,\r\n\t4.137213721372138,\r\n\t4.138813881388138,\r\n\t4.14041404140414,\r\n\t4.142014201420142,\r\n\t4.1436143614361445,\r\n\t4.145214521452145,\r\n\t4.146814681468147,\r\n\t4.148414841484149,\r\n\t4.150015001500151,\r\n\t4.151615161516151,\r\n\t4.153215321532153,\r\n\t4.154815481548155,\r\n\t4.156415641564157,\r\n\t4.158015801580158,\r\n\t4.15961596159616,\r\n\t4.161216121612162,\r\n\t4.162816281628164,\r\n\t4.164416441644164,\r\n\t4.166016601660166,\r\n\t4.167616761676168,\r\n\t4.16921692169217,\r\n\t4.1708170817081704,\r\n\t4.1724172417241725,\r\n\t4.1740174017401745,\r\n\t4.175617561756177,\r\n\t4.177217721772177,\r\n\t4.178817881788179,\r\n\t4.180418041804181,\r\n\t4.182018201820183,\r\n\t4.183618361836183,\r\n\t4.185218521852185,\r\n\t4.186818681868187,\r\n\t4.1884188418841894,\r\n\t4.19001900190019,\r\n\t4.191619161916192,\r\n\t4.193219321932194,\r\n\t4.194819481948196,\r\n\t4.196419641964196,\r\n\t4.198019801980198,\r\n\t4.1996199619962,\r\n\t4.201220122012202,\r\n\t4.202820282028203,\r\n\t4.204420442044205,\r\n\t4.206020602060207,\r\n\t4.207620762076209,\r\n\t4.209220922092209,\r\n\t4.210821082108211,\r\n\t4.212421242124213,\r\n\t4.214021402140215,\r\n\t4.215621562156215,\r\n\t4.2172217221722175,\r\n\t4.2188218821882195,\r\n\t4.220422042204222,\r\n\t4.222022202220222,\r\n\t4.223622362236224,\r\n\t4.225222522252226,\r\n\t4.226822682268228,\r\n\t4.228422842284228,\r\n\t4.23002300230023,\r\n\t4.231623162316232,\r\n\t4.233223322332234,\r\n\t4.234823482348235,\r\n\t4.236423642364237,\r\n\t4.238023802380239,\r\n\t4.239623962396241,\r\n\t4.241224122412241,\r\n\t4.242824282428243,\r\n\t4.244424442444245,\r\n\t4.246024602460247,\r\n\t4.2476247624762475,\r\n\t4.24922492249225,\r\n\t4.250825082508252,\r\n\t4.252425242524254,\r\n\t4.254025402540254,\r\n\t4.255625562556256,\r\n\t4.257225722572258,\r\n\t4.25882588258826,\r\n\t4.26042604260426,\r\n\t4.262026202620262,\r\n\t4.2636263626362645,\r\n\t4.265226522652265,\r\n\t4.266826682668267,\r\n\t4.268426842684269,\r\n\t4.270027002700271,\r\n\t4.271627162716271,\r\n\t4.273227322732273,\r\n\t4.274827482748275,\r\n\t4.276427642764277,\r\n\t4.278027802780278,\r\n\t4.27962796279628,\r\n\t4.281228122812282,\r\n\t4.282828282828284,\r\n\t4.284428442844284,\r\n\t4.286028602860286,\r\n\t4.287628762876288,\r\n\t4.28922892289229,\r\n\t4.2908290829082905,\r\n\t4.2924292429242925,\r\n\t4.294029402940295,\r\n\t4.295629562956297,\r\n\t4.297229722972297,\r\n\t4.298829882988299,\r\n\t4.300430043004301,\r\n\t4.302030203020303,\r\n\t4.303630363036303,\r\n\t4.305230523052305,\r\n\t4.306830683068307,\r\n\t4.3084308430843095,\r\n\t4.31003100310031,\r\n\t4.311631163116312,\r\n\t4.313231323132314,\r\n\t4.314831483148316,\r\n\t4.316431643164316,\r\n\t4.318031803180318,\r\n\t4.31963196319632,\r\n\t4.321232123212322,\r\n\t4.322832283228323,\r\n\t4.324432443244325,\r\n\t4.326032603260327,\r\n\t4.327632763276329,\r\n\t4.329232923292329,\r\n\t4.330833083308331,\r\n\t4.332433243324333,\r\n\t4.334033403340335,\r\n\t4.335633563356335,\r\n\t4.3372337233723375,\r\n\t4.3388338833883395,\r\n\t4.340434043404342,\r\n\t4.342034203420342,\r\n\t4.343634363436344,\r\n\t4.345234523452346,\r\n\t4.346834683468348,\r\n\t4.348434843484348,\r\n\t4.35003500350035,\r\n\t4.351635163516352,\r\n\t4.353235323532354,\r\n\t4.354835483548355,\r\n\t4.356435643564357,\r\n\t4.358035803580359,\r\n\t4.359635963596361,\r\n\t4.361236123612361,\r\n\t4.362836283628363,\r\n\t4.364436443644365,\r\n\t4.366036603660367,\r\n\t4.3676367636763676,\r\n\t4.36923692369237,\r\n\t4.370837083708372,\r\n\t4.372437243724374,\r\n\t4.374037403740374,\r\n\t4.375637563756376,\r\n\t4.377237723772378,\r\n\t4.37883788378838,\r\n\t4.38043804380438,\r\n\t4.3820382038203824,\r\n\t4.3836383638363845,\r\n\t4.385238523852385,\r\n\t4.386838683868387,\r\n\t4.388438843884389,\r\n\t4.390039003900391,\r\n\t4.391639163916391,\r\n\t4.393239323932393,\r\n\t4.394839483948395,\r\n\t4.396439643964397,\r\n\t4.398039803980398,\r\n\t4.3996399639964,\r\n\t4.401240124012402,\r\n\t4.402840284028404,\r\n\t4.404440444044404,\r\n\t4.406040604060406,\r\n\t4.407640764076408,\r\n\t4.40924092409241,\r\n\t4.4108410841084105,\r\n\t4.4124412441244125,\r\n\t4.414041404140415,\r\n\t4.415641564156417,\r\n\t4.417241724172417,\r\n\t4.418841884188419,\r\n\t4.420442044204421,\r\n\t4.422042204220423,\r\n\t4.423642364236423,\r\n\t4.425242524252425,\r\n\t4.426842684268427,\r\n\t4.4284428442844295,\r\n\t4.43004300430043,\r\n\t4.431643164316432,\r\n\t4.433243324332434,\r\n\t4.434843484348436,\r\n\t4.436443644364436,\r\n\t4.438043804380438,\r\n\t4.43964396439644,\r\n\t4.441244124412442,\r\n\t4.442844284428443,\r\n\t4.444444444444445,\r\n\t4.446044604460447,\r\n\t4.447644764476449,\r\n\t4.449244924492449,\r\n\t4.450845084508451,\r\n\t4.452445244524453,\r\n\t4.454045404540455,\r\n\t4.455645564556455,\r\n\t4.4572457245724575,\r\n\t4.4588458845884595,\r\n\t4.460446044604462,\r\n\t4.462046204620462,\r\n\t4.463646364636464,\r\n\t4.465246524652466,\r\n\t4.466846684668468,\r\n\t4.468446844684468,\r\n\t4.47004700470047,\r\n\t4.471647164716472,\r\n\t4.473247324732474,\r\n\t4.474847484748475,\r\n\t4.476447644764477,\r\n\t4.478047804780479,\r\n\t4.479647964796481,\r\n\t4.481248124812481,\r\n\t4.482848284828483,\r\n\t4.484448444844485,\r\n\t4.486048604860487,\r\n\t4.487648764876488,\r\n\t4.48924892489249,\r\n\t4.490849084908492,\r\n\t4.492449244924494,\r\n\t4.494049404940494,\r\n\t4.495649564956496,\r\n\t4.497249724972498,\r\n\t4.4988498849885,\r\n\t4.5004500450045,\r\n\t4.5020502050205025,\r\n\t4.5036503650365045,\r\n\t4.505250525052505,\r\n\t4.506850685068507,\r\n\t4.508450845084509,\r\n\t4.510051005100511,\r\n\t4.511651165116511,\r\n\t4.513251325132513,\r\n\t4.514851485148515,\r\n\t4.516451645164517,\r\n\t4.518051805180518,\r\n\t4.51965196519652,\r\n\t4.521252125212522,\r\n\t4.522852285228524,\r\n\t4.524452445244524,\r\n\t4.526052605260526,\r\n\t4.527652765276528,\r\n\t4.52925292529253,\r\n\t4.5308530853085305,\r\n\t4.5324532453245325,\r\n\t4.534053405340535,\r\n\t4.535653565356537,\r\n\t4.537253725372537,\r\n\t4.538853885388539,\r\n\t4.540454045404541,\r\n\t4.542054205420543,\r\n\t4.543654365436543,\r\n\t4.545254525452545,\r\n\t4.546854685468547,\r\n\t4.5484548454845495,\r\n\t4.55005500550055,\r\n\t4.551655165516552,\r\n\t4.553255325532554,\r\n\t4.554855485548556,\r\n\t4.556455645564556,\r\n\t4.558055805580558,\r\n\t4.55965596559656,\r\n\t4.561256125612562,\r\n\t4.562856285628563,\r\n\t4.564456445644565,\r\n\t4.566056605660567,\r\n\t4.567656765676569,\r\n\t4.569256925692569,\r\n\t4.570857085708571,\r\n\t4.572457245724573,\r\n\t4.574057405740575,\r\n\t4.5756575657565755,\r\n\t4.5772577257725775,\r\n\t4.5788578857885796,\r\n\t4.580458045804582,\r\n\t4.582058205820582,\r\n\t4.583658365836584,\r\n\t4.585258525852586,\r\n\t4.586858685868588,\r\n\t4.588458845884588,\r\n\t4.59005900590059,\r\n\t4.591659165916592,\r\n\t4.5932593259325945,\r\n\t4.594859485948595,\r\n\t4.596459645964597,\r\n\t4.598059805980599,\r\n\t4.599659965996601,\r\n\t4.601260126012601,\r\n\t4.602860286028603,\r\n\t4.604460446044605,\r\n\t4.606060606060607,\r\n\t4.607660766076608,\r\n\t4.60926092609261,\r\n\t4.610861086108612,\r\n\t4.612461246124614,\r\n\t4.614061406140614,\r\n\t4.615661566156616,\r\n\t4.617261726172618,\r\n\t4.61886188618862,\r\n\t4.62046204620462,\r\n\t4.6220622062206225,\r\n\t4.6236623662366245,\r\n\t4.625262526252625,\r\n\t4.626862686268627,\r\n\t4.628462846284629,\r\n\t4.630063006300631,\r\n\t4.631663166316631,\r\n\t4.633263326332633,\r\n\t4.634863486348635,\r\n\t4.636463646364637,\r\n\t4.638063806380638,\r\n\t4.63966396639664,\r\n\t4.641264126412642,\r\n\t4.642864286428644,\r\n\t4.644464446444644,\r\n\t4.646064606460646,\r\n\t4.647664766476648,\r\n\t4.64926492649265,\r\n\t4.6508650865086505,\r\n\t4.6524652465246525,\r\n\t4.654065406540655,\r\n\t4.655665566556657,\r\n\t4.657265726572657,\r\n\t4.658865886588659,\r\n\t4.660466046604661,\r\n\t4.662066206620663,\r\n\t4.663666366636663,\r\n\t4.665266526652665,\r\n\t4.666866686668667,\r\n\t4.6684668466846695,\r\n\t4.67006700670067,\r\n\t4.671667166716672,\r\n\t4.673267326732674,\r\n\t4.674867486748676,\r\n\t4.676467646764676,\r\n\t4.678067806780678,\r\n\t4.67966796679668,\r\n\t4.681268126812682,\r\n\t4.682868286828683,\r\n\t4.684468446844685,\r\n\t4.686068606860687,\r\n\t4.687668766876689,\r\n\t4.689268926892689,\r\n\t4.690869086908691,\r\n\t4.692469246924693,\r\n\t4.694069406940695,\r\n\t4.6956695669566955,\r\n\t4.6972697269726975,\r\n\t4.6988698869887,\r\n\t4.700470047004702,\r\n\t4.702070207020702,\r\n\t4.703670367036704,\r\n\t4.705270527052706,\r\n\t4.706870687068708,\r\n\t4.708470847084708,\r\n\t4.71007100710071,\r\n\t4.711671167116712,\r\n\t4.7132713271327145,\r\n\t4.714871487148715,\r\n\t4.716471647164717,\r\n\t4.718071807180719,\r\n\t4.719671967196721,\r\n\t4.721272127212721,\r\n\t4.722872287228723,\r\n\t4.724472447244725,\r\n\t4.726072607260727,\r\n\t4.727672767276728,\r\n\t4.72927292729273,\r\n\t4.730873087308732,\r\n\t4.732473247324734,\r\n\t4.734073407340734,\r\n\t4.735673567356736,\r\n\t4.737273727372738,\r\n\t4.73887388738874,\r\n\t4.74047404740474,\r\n\t4.7420742074207425,\r\n\t4.7436743674367445,\r\n\t4.745274527452745,\r\n\t4.746874687468747,\r\n\t4.748474847484749,\r\n\t4.750075007500751,\r\n\t4.751675167516751,\r\n\t4.753275327532753,\r\n\t4.754875487548755,\r\n\t4.756475647564757,\r\n\t4.758075807580758,\r\n\t4.75967596759676,\r\n\t4.761276127612762,\r\n\t4.762876287628764,\r\n\t4.764476447644764,\r\n\t4.766076607660766,\r\n\t4.767676767676768,\r\n\t4.76927692769277,\r\n\t4.7708770877087705,\r\n\t4.7724772477247726,\r\n\t4.774077407740775,\r\n\t4.775677567756777,\r\n\t4.777277727772777,\r\n\t4.778877887788779,\r\n\t4.780478047804781,\r\n\t4.782078207820783,\r\n\t4.783678367836783,\r\n\t4.785278527852785,\r\n\t4.7868786878687875,\r\n\t4.7884788478847895,\r\n\t4.79007900790079,\r\n\t4.791679167916792,\r\n\t4.793279327932794,\r\n\t4.794879487948796,\r\n\t4.796479647964796,\r\n\t4.798079807980798,\r\n\t4.7996799679968,\r\n\t4.801280128012802,\r\n\t4.802880288028803,\r\n\t4.804480448044805,\r\n\t4.806080608060807,\r\n\t4.807680768076809,\r\n\t4.809280928092809,\r\n\t4.810881088108811,\r\n\t4.812481248124813,\r\n\t4.814081408140815,\r\n\t4.8156815681568155,\r\n\t4.8172817281728175,\r\n\t4.81888188818882,\r\n\t4.820482048204822,\r\n\t4.822082208220822,\r\n\t4.823682368236824,\r\n\t4.825282528252826,\r\n\t4.826882688268828,\r\n\t4.828482848284828,\r\n\t4.83008300830083,\r\n\t4.831683168316832,\r\n\t4.8332833283328345,\r\n\t4.834883488348835,\r\n\t4.836483648364837,\r\n\t4.838083808380839,\r\n\t4.839683968396841,\r\n\t4.841284128412841,\r\n\t4.842884288428843,\r\n\t4.844484448444845,\r\n\t4.846084608460847,\r\n\t4.847684768476848,\r\n\t4.84928492849285,\r\n\t4.850885088508852,\r\n\t4.852485248524854,\r\n\t4.854085408540854,\r\n\t4.855685568556856,\r\n\t4.857285728572858,\r\n\t4.85888588858886,\r\n\t4.86048604860486,\r\n\t4.8620862086208625,\r\n\t4.8636863686368645,\r\n\t4.865286528652867,\r\n\t4.866886688668867,\r\n\t4.868486848684869,\r\n\t4.870087008700871,\r\n\t4.871687168716871,\r\n\t4.873287328732873,\r\n\t4.874887488748875,\r\n\t4.876487648764877,\r\n\t4.878087808780878,\r\n\t4.87968796879688,\r\n\t4.881288128812882,\r\n\t4.882888288828884,\r\n\t4.884488448844884,\r\n\t4.886088608860886,\r\n\t4.887688768876888,\r\n\t4.88928892889289,\r\n\t4.8908890889088905,\r\n\t4.892489248924893,\r\n\t4.894089408940895,\r\n\t4.895689568956897,\r\n\t4.897289728972897,\r\n\t4.898889888988899,\r\n\t4.900490049004901,\r\n\t4.902090209020903,\r\n\t4.903690369036903,\r\n\t4.905290529052905,\r\n\t4.9068906890689075,\r\n\t4.9084908490849095,\r\n\t4.91009100910091,\r\n\t4.911691169116912,\r\n\t4.913291329132914,\r\n\t4.914891489148916,\r\n\t4.916491649164916,\r\n\t4.918091809180918,\r\n\t4.91969196919692,\r\n\t4.921292129212922,\r\n\t4.922892289228923,\r\n\t4.924492449244925,\r\n\t4.926092609260927,\r\n\t4.927692769276929,\r\n\t4.929292929292929,\r\n\t4.930893089308931,\r\n\t4.932493249324933,\r\n\t4.934093409340935,\r\n\t4.9356935693569355,\r\n\t4.9372937293729375,\r\n\t4.93889388938894,\r\n\t4.940494049404942,\r\n\t4.942094209420942,\r\n\t4.943694369436944,\r\n\t4.945294529452946,\r\n\t4.946894689468948,\r\n\t4.948494849484948,\r\n\t4.95009500950095,\r\n\t4.951695169516952,\r\n\t4.9532953295329545,\r\n\t4.954895489548955,\r\n\t4.956495649564957,\r\n\t4.958095809580959,\r\n\t4.959695969596961,\r\n\t4.961296129612961,\r\n\t4.962896289628963,\r\n\t4.964496449644965,\r\n\t4.966096609660967,\r\n\t4.967696769676968,\r\n\t4.96929692969297,\r\n\t4.970897089708972,\r\n\t4.972497249724974,\r\n\t4.974097409740974,\r\n\t4.975697569756976,\r\n\t4.977297729772978,\r\n\t4.97889788978898,\r\n\t4.9804980498049805,\r\n\t4.9820982098209825,\r\n\t4.9836983698369846,\r\n\t4.985298529852987,\r\n\t4.986898689868987,\r\n\t4.988498849884989,\r\n\t4.990099009900991,\r\n\t4.991699169916991,\r\n\t4.993299329932993,\r\n\t4.994899489948995,\r\n\t4.996499649964997,\r\n\t4.998099809980998,\r\n\t4.999699969997,\r\n\t5.001300130013002,\r\n\t5.002900290029004,\r\n\t5.004500450045004,\r\n\t5.006100610061006,\r\n\t5.007700770077008,\r\n\t5.00930093009301,\r\n\t5.0109010901090105,\r\n\t5.012501250125013,\r\n\t5.014101410141015,\r\n\t5.015701570157017,\r\n\t5.017301730173017,\r\n\t5.018901890189019,\r\n\t5.020502050205021,\r\n\t5.022102210221023,\r\n\t5.023702370237023,\r\n\t5.025302530253025,\r\n\t5.0269026902690275,\r\n\t5.0285028502850295,\r\n\t5.03010301030103,\r\n\t5.031703170317032,\r\n\t5.033303330333034,\r\n\t5.034903490349036,\r\n\t5.036503650365036,\r\n\t5.038103810381038,\r\n\t5.03970397039704,\r\n\t5.041304130413042,\r\n\t5.042904290429043,\r\n\t5.044504450445045,\r\n\t5.046104610461047,\r\n\t5.047704770477049,\r\n\t5.049304930493049,\r\n\t5.050905090509051,\r\n\t5.052505250525053,\r\n\t5.054105410541055,\r\n\t5.0557055705570555,\r\n\t5.0573057305730575,\r\n\t5.05890589058906,\r\n\t5.060506050605062,\r\n\t5.062106210621062,\r\n\t5.063706370637064,\r\n\t5.065306530653066,\r\n\t5.066906690669068,\r\n\t5.068506850685068,\r\n\t5.07010701070107,\r\n\t5.071707170717072,\r\n\t5.0733073307330745,\r\n\t5.074907490749075,\r\n\t5.076507650765077,\r\n\t5.078107810781079,\r\n\t5.079707970797081,\r\n\t5.081308130813081,\r\n\t5.082908290829083,\r\n\t5.084508450845085,\r\n\t5.086108610861087,\r\n\t5.087708770877088,\r\n\t5.08930893089309,\r\n\t5.090909090909092,\r\n\t5.092509250925094,\r\n\t5.094109410941094,\r\n\t5.095709570957096,\r\n\t5.097309730973098,\r\n\t5.0989098909891,\r\n\t5.1005100510051005,\r\n\t5.1021102110211025,\r\n\t5.103710371037105,\r\n\t5.105310531053107,\r\n\t5.106910691069107,\r\n\t5.108510851085109,\r\n\t5.110111011101111,\r\n\t5.111711171117111,\r\n\t5.113311331133113,\r\n\t5.114911491149115,\r\n\t5.116511651165117,\r\n\t5.118111811181118,\r\n\t5.11971197119712,\r\n\t5.121312131213122,\r\n\t5.122912291229124,\r\n\t5.124512451245124,\r\n\t5.126112611261126,\r\n\t5.127712771277128,\r\n\t5.12931293129313,\r\n\t5.1309130913091305,\r\n\t5.132513251325133,\r\n\t5.134113411341135,\r\n\t5.135713571357137,\r\n\t5.137313731373137,\r\n\t5.138913891389139,\r\n\t5.140514051405141,\r\n\t5.142114211421143,\r\n\t5.143714371437143,\r\n\t5.145314531453145,\r\n\t5.1469146914691475,\r\n\t5.1485148514851495,\r\n\t5.15011501150115,\r\n\t5.151715171517152,\r\n\t5.153315331533154,\r\n\t5.154915491549156,\r\n\t5.156515651565156,\r\n\t5.158115811581158,\r\n\t5.15971597159716,\r\n\t5.161316131613162,\r\n\t5.162916291629163,\r\n\t5.164516451645165,\r\n\t5.166116611661167,\r\n\t5.167716771677169,\r\n\t5.169316931693169,\r\n\t5.170917091709171,\r\n\t5.172517251725173,\r\n\t5.174117411741175,\r\n\t5.1757175717571755,\r\n\t5.177317731773178,\r\n\t5.17891789178918,\r\n\t5.180518051805182,\r\n\t5.182118211821182,\r\n\t5.183718371837184,\r\n\t5.185318531853186,\r\n\t5.186918691869188,\r\n\t5.188518851885188,\r\n\t5.19011901190119,\r\n\t5.1917191719171925,\r\n\t5.1933193319331945,\r\n\t5.194919491949195,\r\n\t5.196519651965197,\r\n\t5.198119811981199,\r\n\t5.199719971997201,\r\n\t5.201320132013201,\r\n\t5.202920292029203,\r\n\t5.204520452045205,\r\n\t5.206120612061207,\r\n\t5.207720772077208,\r\n\t5.20932093209321,\r\n\t5.210921092109212,\r\n\t5.212521252125214,\r\n\t5.214121412141214,\r\n\t5.215721572157216,\r\n\t5.217321732173218,\r\n\t5.21892189218922,\r\n\t5.2205220522052205,\r\n\t5.2221222122212225,\r\n\t5.223722372237225,\r\n\t5.225322532253227,\r\n\t5.226922692269227,\r\n\t5.228522852285229,\r\n\t5.230123012301231,\r\n\t5.231723172317231,\r\n\t5.233323332333233,\r\n\t5.234923492349235,\r\n\t5.236523652365237,\r\n\t5.238123812381238,\r\n\t5.23972397239724,\r\n\t5.241324132413242,\r\n\t5.242924292429244,\r\n\t5.244524452445244,\r\n\t5.246124612461246,\r\n\t5.247724772477248,\r\n\t5.24932493249325,\r\n\t5.2509250925092505,\r\n\t5.252525252525253,\r\n\t5.254125412541255,\r\n\t5.255725572557257,\r\n\t5.257325732573257,\r\n\t5.258925892589259,\r\n\t5.260526052605261,\r\n\t5.262126212621263,\r\n\t5.263726372637263,\r\n\t5.2653265326532654,\r\n\t5.2669266926692675,\r\n\t5.2685268526852695,\r\n\t5.27012701270127,\r\n\t5.271727172717272,\r\n\t5.273327332733274,\r\n\t5.274927492749276,\r\n\t5.276527652765276,\r\n\t5.278127812781278,\r\n\t5.27972797279728,\r\n\t5.281328132813282,\r\n\t5.282928292829283,\r\n\t5.284528452845285,\r\n\t5.286128612861287,\r\n\t5.287728772877289,\r\n\t5.289328932893289,\r\n\t5.290929092909291,\r\n\t5.292529252925293,\r\n\t5.294129412941295,\r\n\t5.2957295729572955,\r\n\t5.297329732973298,\r\n\t5.2989298929893,\r\n\t5.300530053005302,\r\n\t5.302130213021302,\r\n\t5.303730373037304,\r\n\t5.305330533053306,\r\n\t5.306930693069308,\r\n\t5.308530853085308,\r\n\t5.31013101310131,\r\n\t5.3117311731173125,\r\n\t5.3133313331333145,\r\n\t5.314931493149315,\r\n\t5.316531653165317,\r\n\t5.318131813181319,\r\n\t5.319731973197321,\r\n\t5.321332133213321,\r\n\t5.322932293229323,\r\n\t5.324532453245325,\r\n\t5.326132613261327,\r\n\t5.327732773277328,\r\n\t5.32933293329333,\r\n\t5.330933093309332,\r\n\t5.332533253325334,\r\n\t5.334133413341334,\r\n\t5.335733573357336,\r\n\t5.337333733373338,\r\n\t5.33893389338934,\r\n\t5.3405340534053405,\r\n\t5.3421342134213425,\r\n\t5.343734373437345,\r\n\t5.345334533453347,\r\n\t5.346934693469347,\r\n\t5.348534853485349,\r\n\t5.350135013501351,\r\n\t5.351735173517351,\r\n\t5.353335333533353,\r\n\t5.354935493549355,\r\n\t5.356535653565357,\r\n\t5.358135813581358,\r\n\t5.35973597359736,\r\n\t5.361336133613362,\r\n\t5.362936293629364,\r\n\t5.364536453645364,\r\n\t5.366136613661366,\r\n\t5.367736773677368,\r\n\t5.36933693369337,\r\n\t5.370937093709371,\r\n\t5.372537253725373,\r\n\t5.374137413741375,\r\n\t5.375737573757377,\r\n\t5.377337733773377,\r\n\t5.378937893789379,\r\n\t5.380538053805381,\r\n\t5.382138213821383,\r\n\t5.383738373837383,\r\n\t5.3853385338533855,\r\n\t5.3869386938693875,\r\n\t5.38853885388539,\r\n\t5.39013901390139,\r\n\t5.391739173917392,\r\n\t5.393339333933394,\r\n\t5.394939493949396,\r\n\t5.396539653965396,\r\n\t5.398139813981398,\r\n\t5.3997399739974,\r\n\t5.401340134013402,\r\n\t5.402940294029403,\r\n\t5.404540454045405,\r\n\t5.406140614061407,\r\n\t5.407740774077409,\r\n\t5.409340934093409,\r\n\t5.410941094109411,\r\n\t5.412541254125413,\r\n\t5.414141414141415,\r\n\t5.4157415741574155,\r\n\t5.417341734173418,\r\n\t5.41894189418942,\r\n\t5.420542054205422,\r\n\t5.422142214221422,\r\n\t5.423742374237424,\r\n\t5.425342534253426,\r\n\t5.426942694269428,\r\n\t5.428542854285428,\r\n\t5.43014301430143,\r\n\t5.4317431743174325,\r\n\t5.4333433343334345,\r\n\t5.434943494349435,\r\n\t5.436543654365437,\r\n\t5.438143814381439,\r\n\t5.439743974397441,\r\n\t5.441344134413441,\r\n\t5.442944294429443,\r\n\t5.444544454445445,\r\n\t5.446144614461447,\r\n\t5.447744774477448,\r\n\t5.44934493449345,\r\n\t5.450945094509452,\r\n\t5.452545254525454,\r\n\t5.454145414541454,\r\n\t5.455745574557456,\r\n\t5.457345734573458,\r\n\t5.45894589458946,\r\n\t5.4605460546054605,\r\n\t5.4621462146214625,\r\n\t5.463746374637465,\r\n\t5.465346534653467,\r\n\t5.466946694669467,\r\n\t5.468546854685469,\r\n\t5.470147014701471,\r\n\t5.471747174717473,\r\n\t5.473347334733473,\r\n\t5.474947494749475,\r\n\t5.4765476547654774,\r\n\t5.478147814781478,\r\n\t5.47974797479748,\r\n\t5.481348134813482,\r\n\t5.482948294829484,\r\n\t5.484548454845484,\r\n\t5.486148614861486,\r\n\t5.487748774877488,\r\n\t5.48934893489349,\r\n\t5.490949094909491,\r\n\t5.492549254925493,\r\n\t5.494149414941495,\r\n\t5.495749574957497,\r\n\t5.497349734973497,\r\n\t5.498949894989499,\r\n\t5.500550055005501,\r\n\t5.502150215021503,\r\n\t5.503750375037503,\r\n\t5.5053505350535055,\r\n\t5.5069506950695075,\r\n\t5.50855085508551,\r\n\t5.51015101510151,\r\n\t5.511751175117512,\r\n\t5.513351335133514,\r\n\t5.514951495149516,\r\n\t5.516551655165516,\r\n\t5.518151815181518,\r\n\t5.51975197519752,\r\n\t5.521352135213522,\r\n\t5.522952295229523,\r\n\t5.524552455245525,\r\n\t5.526152615261527,\r\n\t5.527752775277529,\r\n\t5.529352935293529,\r\n\t5.530953095309531,\r\n\t5.532553255325533,\r\n\t5.534153415341535,\r\n\t5.5357535753575355,\r\n\t5.537353735373538,\r\n\t5.53895389538954,\r\n\t5.540554055405542,\r\n\t5.542154215421542,\r\n\t5.543754375437544,\r\n\t5.545354535453546,\r\n\t5.546954695469548,\r\n\t5.548554855485548,\r\n\t5.55015501550155,\r\n\t5.5517551755175525,\r\n\t5.5533553355335545,\r\n\t5.554955495549555,\r\n\t5.556555655565557,\r\n\t5.558155815581559,\r\n\t5.559755975597561,\r\n\t5.561356135613561,\r\n\t5.562956295629563,\r\n\t5.564556455645565,\r\n\t5.566156615661567,\r\n\t5.567756775677568,\r\n\t5.56935693569357,\r\n\t5.570957095709572,\r\n\t5.572557255725574,\r\n\t5.574157415741574,\r\n\t5.575757575757576,\r\n\t5.577357735773578,\r\n\t5.57895789578958,\r\n\t5.5805580558055805,\r\n\t5.582158215821583,\r\n\t5.583758375837585,\r\n\t5.585358535853587,\r\n\t5.586958695869587,\r\n\t5.588558855885589,\r\n\t5.590159015901591,\r\n\t5.591759175917593,\r\n\t5.593359335933593,\r\n\t5.594959495949595,\r\n\t5.5965596559655975,\r\n\t5.598159815981598,\r\n\t5.5997599759976,\r\n\t5.601360136013602,\r\n\t5.602960296029604,\r\n\t5.604560456045604,\r\n\t5.606160616061606,\r\n\t5.607760776077608,\r\n\t5.60936093609361,\r\n\t5.610961096109611,\r\n\t5.612561256125613,\r\n\t5.614161416141615,\r\n\t5.615761576157617,\r\n\t5.617361736173617,\r\n\t5.618961896189619,\r\n\t5.620562056205621,\r\n\t5.622162216221623,\r\n\t5.623762376237623,\r\n\t5.6253625362536255,\r\n\t5.6269626962696275,\r\n\t5.62856285628563,\r\n\t5.63016301630163,\r\n\t5.631763176317632,\r\n\t5.633363336333634,\r\n\t5.634963496349636,\r\n\t5.636563656365636,\r\n\t5.638163816381638,\r\n\t5.63976397639764,\r\n\t5.641364136413642,\r\n\t5.642964296429643,\r\n\t5.644564456445645,\r\n\t5.646164616461647,\r\n\t5.647764776477649,\r\n\t5.649364936493649,\r\n\t5.650965096509651,\r\n\t5.652565256525653,\r\n\t5.654165416541655,\r\n\t5.6557655765576555,\r\n\t5.657365736573658,\r\n\t5.65896589658966,\r\n\t5.660566056605662,\r\n\t5.662166216621662,\r\n\t5.663766376637664,\r\n\t5.665366536653666,\r\n\t5.666966696669668,\r\n\t5.668566856685668,\r\n\t5.6701670167016704,\r\n\t5.6717671767176725,\r\n\t5.6733673367336745,\r\n\t5.674967496749675,\r\n\t5.676567656765677,\r\n\t5.678167816781679,\r\n\t5.679767976797681,\r\n\t5.681368136813681,\r\n\t5.682968296829683,\r\n\t5.684568456845685,\r\n\t5.686168616861687,\r\n\t5.687768776877688,\r\n\t5.68936893689369,\r\n\t5.690969096909692,\r\n\t5.692569256925694,\r\n\t5.694169416941694,\r\n\t5.695769576957696,\r\n\t5.697369736973698,\r\n\t5.6989698969897,\r\n\t5.7005700570057005,\r\n\t5.702170217021703,\r\n\t5.703770377037705,\r\n\t5.705370537053707,\r\n\t5.706970697069707,\r\n\t5.708570857085709,\r\n\t5.710171017101711,\r\n\t5.711771177117713,\r\n\t5.713371337133713,\r\n\t5.714971497149715,\r\n\t5.7165716571657175,\r\n\t5.718171817181718,\r\n\t5.71977197719772,\r\n\t5.721372137213722,\r\n\t5.722972297229724,\r\n\t5.724572457245724,\r\n\t5.726172617261726,\r\n\t5.727772777277728,\r\n\t5.72937293729373,\r\n\t5.730973097309731,\r\n\t5.732573257325733,\r\n\t5.734173417341735,\r\n\t5.735773577357737,\r\n\t5.737373737373737,\r\n\t5.738973897389739,\r\n\t5.740574057405741,\r\n\t5.742174217421743,\r\n\t5.743774377437743,\r\n\t5.7453745374537455,\r\n\t5.7469746974697475,\r\n\t5.74857485748575,\r\n\t5.75017501750175,\r\n\t5.751775177517752,\r\n\t5.753375337533754,\r\n\t5.754975497549756,\r\n\t5.756575657565756,\r\n\t5.758175817581758,\r\n\t5.75977597759776,\r\n\t5.761376137613762,\r\n\t5.762976297629763,\r\n\t5.764576457645765,\r\n\t5.766176617661767,\r\n\t5.767776777677769,\r\n\t5.769376937693769,\r\n\t5.770977097709771,\r\n\t5.772577257725773,\r\n\t5.774177417741775,\r\n\t5.775777577757776,\r\n\t5.777377737773778,\r\n\t5.77897789778978,\r\n\t5.780578057805782,\r\n\t5.782178217821782,\r\n\t5.783778377837784,\r\n\t5.785378537853786,\r\n\t5.786978697869788,\r\n\t5.788578857885788,\r\n\t5.7901790179017905,\r\n\t5.7917791779177925,\r\n\t5.793379337933795,\r\n\t5.794979497949795,\r\n\t5.796579657965797,\r\n\t5.798179817981799,\r\n\t5.799779977997801,\r\n\t5.801380138013801,\r\n\t5.802980298029803,\r\n\t5.804580458045805,\r\n\t5.806180618061807,\r\n\t5.807780778077808,\r\n\t5.80938093809381,\r\n\t5.810981098109812,\r\n\t5.812581258125814,\r\n\t5.814181418141814,\r\n\t5.815781578157816,\r\n\t5.817381738173818,\r\n\t5.81898189818982,\r\n\t5.8205820582058205,\r\n\t5.822182218221823,\r\n\t5.823782378237825,\r\n\t5.825382538253827,\r\n\t5.826982698269827,\r\n\t5.828582858285829,\r\n\t5.830183018301831,\r\n\t5.831783178317833,\r\n\t5.833383338333833,\r\n\t5.834983498349835,\r\n\t5.8365836583658375,\r\n\t5.838183818381838,\r\n\t5.83978397839784,\r\n\t5.841384138413842,\r\n\t5.842984298429844,\r\n\t5.844584458445844,\r\n\t5.846184618461846,\r\n\t5.847784778477848,\r\n\t5.84938493849385,\r\n\t5.850985098509851,\r\n\t5.852585258525853,\r\n\t5.854185418541855,\r\n\t5.855785578557857,\r\n\t5.857385738573857,\r\n\t5.858985898589859,\r\n\t5.860586058605861,\r\n\t5.862186218621863,\r\n\t5.8637863786378635,\r\n\t5.8653865386538655,\r\n\t5.8669866986698676,\r\n\t5.86858685868587,\r\n\t5.87018701870187,\r\n\t5.871787178717872,\r\n\t5.873387338733874,\r\n\t5.874987498749876,\r\n\t5.876587658765876,\r\n\t5.878187818781878,\r\n\t5.87978797879788,\r\n\t5.8813881388138824,\r\n\t5.882988298829883,\r\n\t5.884588458845885,\r\n\t5.886188618861887,\r\n\t5.887788778877889,\r\n\t5.889388938893889,\r\n\t5.890989098909891,\r\n\t5.892589258925893,\r\n\t5.894189418941895,\r\n\t5.895789578957896,\r\n\t5.897389738973898,\r\n\t5.8989898989899,\r\n\t5.900590059005902,\r\n\t5.902190219021902,\r\n\t5.903790379037904,\r\n\t5.905390539053906,\r\n\t5.906990699069908,\r\n\t5.908590859085908,\r\n\t5.9101910191019105,\r\n\t5.9117911791179125,\r\n\t5.913391339133915,\r\n\t5.914991499149915,\r\n\t5.916591659165917,\r\n\t5.918191819181919,\r\n\t5.919791979197921,\r\n\t5.921392139213921,\r\n\t5.922992299229923,\r\n\t5.924592459245925,\r\n\t5.926192619261927,\r\n\t5.927792779277928,\r\n\t5.92939293929393,\r\n\t5.930993099309932,\r\n\t5.932593259325934,\r\n\t5.934193419341934,\r\n\t5.935793579357936,\r\n\t5.937393739373938,\r\n\t5.93899389938994,\r\n\t5.9405940594059405,\r\n\t5.942194219421943,\r\n\t5.943794379437945,\r\n\t5.945394539453947,\r\n\t5.946994699469947,\r\n\t5.948594859485949,\r\n\t5.950195019501951,\r\n\t5.951795179517953,\r\n\t5.953395339533953,\r\n\t5.954995499549955,\r\n\t5.9565956595659575,\r\n\t5.958195819581958,\r\n\t5.95979597959796,\r\n\t5.961396139613962,\r\n\t5.962996299629964,\r\n\t5.964596459645964,\r\n\t5.966196619661966,\r\n\t5.967796779677968,\r\n\t5.96939693969397,\r\n\t5.970997099709971,\r\n\t5.972597259725973,\r\n\t5.974197419741975,\r\n\t5.975797579757977,\r\n\t5.977397739773977,\r\n\t5.978997899789979,\r\n\t5.980598059805981,\r\n\t5.982198219821983,\r\n\t5.9837983798379835,\r\n\t5.9853985398539855,\r\n\t5.986998699869988,\r\n\t5.98859885988599,\r\n\t5.99019901990199,\r\n\t5.991799179917992,\r\n\t5.993399339933994,\r\n\t5.994999499949996,\r\n\t5.996599659965996,\r\n\t5.998199819981998,\r\n\t5.999799979998,\r\n\t6.0014001400140025,\r\n\t6.003000300030003,\r\n\t6.004600460046005,\r\n\t6.006200620062007,\r\n\t6.007800780078009,\r\n\t6.009400940094009,\r\n\t6.011001100110011,\r\n\t6.012601260126013,\r\n\t6.014201420142015,\r\n\t6.015801580158016,\r\n\t6.017401740174018,\r\n\t6.01900190019002,\r\n\t6.020602060206022,\r\n\t6.022202220222022,\r\n\t6.023802380238024,\r\n\t6.025402540254026,\r\n\t6.027002700270028,\r\n\t6.028602860286028,\r\n\t6.0302030203020305,\r\n\t6.0318031803180325,\r\n\t6.033403340334035,\r\n\t6.035003500350035,\r\n\t6.036603660366037,\r\n\t6.038203820382039,\r\n\t6.039803980398041,\r\n\t6.041404140414041,\r\n\t6.043004300430043,\r\n\t6.044604460446045,\r\n\t6.046204620462047,\r\n\t6.047804780478048,\r\n\t6.04940494049405,\r\n\t6.051005100510052,\r\n\t6.052605260526054,\r\n\t6.054205420542054,\r\n\t6.055805580558056,\r\n\t6.057405740574058,\r\n\t6.05900590059006,\r\n\t6.0606060606060606,\r\n\t6.062206220622063,\r\n\t6.063806380638065,\r\n\t6.065406540654067,\r\n\t6.067006700670067,\r\n\t6.068606860686069,\r\n\t6.070207020702071,\r\n\t6.071807180718073,\r\n\t6.073407340734073,\r\n\t6.0750075007500755,\r\n\t6.0766076607660775,\r\n\t6.0782078207820796,\r\n\t6.07980798079808,\r\n\t6.081408140814082,\r\n\t6.083008300830084,\r\n\t6.084608460846084,\r\n\t6.086208620862086,\r\n\t6.087808780878088,\r\n\t6.08940894089409,\r\n\t6.091009100910091,\r\n\t6.092609260926093,\r\n\t6.094209420942095,\r\n\t6.095809580958097,\r\n\t6.097409740974097,\r\n\t6.099009900990099,\r\n\t6.100610061006101,\r\n\t6.102210221022103,\r\n\t6.1038103810381035,\r\n\t6.1054105410541055,\r\n\t6.107010701070108,\r\n\t6.10861086108611,\r\n\t6.11021102110211,\r\n\t6.111811181118112,\r\n\t6.113411341134114,\r\n\t6.115011501150116,\r\n\t6.116611661166116,\r\n\t6.118211821182118,\r\n\t6.11981198119812,\r\n\t6.1214121412141225,\r\n\t6.123012301230123,\r\n\t6.124612461246125,\r\n\t6.126212621262127,\r\n\t6.127812781278129,\r\n\t6.129412941294129,\r\n\t6.131013101310131,\r\n\t6.132613261326133,\r\n\t6.134213421342135,\r\n\t6.135813581358136,\r\n\t6.137413741374138,\r\n\t6.13901390139014,\r\n\t6.140614061406142,\r\n\t6.142214221422142,\r\n\t6.143814381438144,\r\n\t6.145414541454146,\r\n\t6.147014701470148,\r\n\t6.148614861486148,\r\n\t6.1502150215021505,\r\n\t6.1518151815181525,\r\n\t6.153415341534155,\r\n\t6.155015501550155,\r\n\t6.156615661566157,\r\n\t6.158215821582159,\r\n\t6.159815981598161,\r\n\t6.161416141614161,\r\n\t6.163016301630163,\r\n\t6.164616461646165,\r\n\t6.166216621662167,\r\n\t6.167816781678168,\r\n\t6.16941694169417,\r\n\t6.171017101710172,\r\n\t6.172617261726174,\r\n\t6.174217421742174,\r\n\t6.175817581758176,\r\n\t6.177417741774178,\r\n\t6.17901790179018,\r\n\t6.180618061806181,\r\n\t6.182218221822183,\r\n\t6.183818381838185,\r\n\t6.185418541854187,\r\n\t6.187018701870187,\r\n\t6.188618861886189,\r\n\t6.190219021902191,\r\n\t6.191819181918193,\r\n\t6.193419341934193,\r\n\t6.1950195019501955,\r\n\t6.1966196619661975,\r\n\t6.1982198219822,\r\n\t6.1998199819982,\r\n\t6.201420142014202,\r\n\t6.203020302030204,\r\n\t6.204620462046204,\r\n\t6.206220622062206,\r\n\t6.207820782078208,\r\n\t6.20942094209421,\r\n\t6.211021102110211,\r\n\t6.212621262126213,\r\n\t6.214221422142215,\r\n\t6.215821582158217,\r\n\t6.217421742174217,\r\n\t6.219021902190219,\r\n\t6.220622062206221,\r\n\t6.222222222222223,\r\n\t6.2238223822382235,\r\n\t6.2254225422542255,\r\n\t6.227022702270228,\r\n\t6.22862286228623,\r\n\t6.23022302230223,\r\n\t6.231823182318232,\r\n\t6.233423342334234,\r\n\t6.235023502350236,\r\n\t6.236623662366236,\r\n\t6.238223822382238,\r\n\t6.23982398239824,\r\n\t6.2414241424142425,\r\n\t6.243024302430243,\r\n\t6.244624462446245,\r\n\t6.246224622462247,\r\n\t6.247824782478249,\r\n\t6.249424942494249,\r\n\t6.251025102510251,\r\n\t6.252625262526253,\r\n\t6.254225422542255,\r\n\t6.255825582558256,\r\n\t6.257425742574258,\r\n\t6.25902590259026,\r\n\t6.260626062606262,\r\n\t6.262226222622262,\r\n\t6.263826382638264,\r\n\t6.265426542654266,\r\n\t6.267026702670268,\r\n\t6.2686268626862685,\r\n\t6.2702270227022705,\r\n\t6.2718271827182726,\r\n\t6.273427342734275,\r\n\t6.275027502750275,\r\n\t6.276627662766277,\r\n\t6.278227822782279,\r\n\t6.279827982798281,\r\n\t6.281428142814281,\r\n\t6.283028302830283,\r\n\t6.284628462846285,\r\n\t6.2862286228622875,\r\n\t6.287828782878288,\r\n\t6.28942894289429,\r\n\t6.291029102910292,\r\n\t6.292629262926294,\r\n\t6.294229422942294,\r\n\t6.295829582958296,\r\n\t6.297429742974298,\r\n\t6.2990299029903,\r\n\t6.300630063006301,\r\n\t6.302230223022303,\r\n\t6.303830383038305,\r\n\t6.305430543054307,\r\n\t6.307030703070307,\r\n\t6.308630863086309,\r\n\t6.310231023102311,\r\n\t6.311831183118313,\r\n\t6.313431343134313,\r\n\t6.3150315031503155,\r\n\t6.3166316631663175,\r\n\t6.31823182318232,\r\n\t6.31983198319832,\r\n\t6.321432143214322,\r\n\t6.323032303230324,\r\n\t6.324632463246324,\r\n\t6.326232623262326,\r\n\t6.327832783278328,\r\n\t6.32943294329433,\r\n\t6.331033103310331,\r\n\t6.332633263326333,\r\n\t6.334233423342335,\r\n\t6.335833583358337,\r\n\t6.337433743374337,\r\n\t6.339033903390339,\r\n\t6.340634063406341,\r\n\t6.342234223422343,\r\n\t6.3438343834383435,\r\n\t6.3454345434543455,\r\n\t6.347034703470348,\r\n\t6.34863486348635,\r\n\t6.35023502350235,\r\n\t6.351835183518352,\r\n\t6.353435343534354,\r\n\t6.355035503550356,\r\n\t6.356635663566356,\r\n\t6.358235823582358,\r\n\t6.35983598359836,\r\n\t6.3614361436143625,\r\n\t6.363036303630363,\r\n\t6.364636463646365,\r\n\t6.366236623662367,\r\n\t6.367836783678369,\r\n\t6.369436943694369,\r\n\t6.371037103710371,\r\n\t6.372637263726373,\r\n\t6.374237423742375,\r\n\t6.375837583758376,\r\n\t6.377437743774378,\r\n\t6.37903790379038,\r\n\t6.380638063806382,\r\n\t6.382238223822382,\r\n\t6.383838383838384,\r\n\t6.385438543854386,\r\n\t6.387038703870388,\r\n\t6.3886388638863885,\r\n\t6.3902390239023905,\r\n\t6.391839183918393,\r\n\t6.393439343934395,\r\n\t6.395039503950395,\r\n\t6.396639663966397,\r\n\t6.398239823982399,\r\n\t6.399839983998401,\r\n\t6.401440144014401,\r\n\t6.403040304030403,\r\n\t6.404640464046405,\r\n\t6.4062406240624075,\r\n\t6.407840784078408,\r\n\t6.40944094409441,\r\n\t6.411041104110412,\r\n\t6.412641264126414,\r\n\t6.414241424142414,\r\n\t6.415841584158416,\r\n\t6.417441744174418,\r\n\t6.41904190419042,\r\n\t6.420642064206421,\r\n\t6.422242224222423,\r\n\t6.423842384238425,\r\n\t6.425442544254427,\r\n\t6.427042704270427,\r\n\t6.428642864286429,\r\n\t6.430243024302431,\r\n\t6.431843184318433,\r\n\t6.433443344334433,\r\n\t6.4350435043504355,\r\n\t6.4366436643664375,\r\n\t6.43824382438244,\r\n\t6.43984398439844,\r\n\t6.441444144414442,\r\n\t6.443044304430444,\r\n\t6.444644464446444,\r\n\t6.446244624462446,\r\n\t6.447844784478448,\r\n\t6.44944494449445,\r\n\t6.451045104510451,\r\n\t6.452645264526453,\r\n\t6.454245424542455,\r\n\t6.455845584558457,\r\n\t6.457445744574457,\r\n\t6.459045904590459,\r\n\t6.460646064606461,\r\n\t6.462246224622463,\r\n\t6.4638463846384635,\r\n\t6.4654465446544656,\r\n\t6.467046704670468,\r\n\t6.46864686468647,\r\n\t6.47024702470247,\r\n\t6.471847184718472,\r\n\t6.473447344734474,\r\n\t6.475047504750476,\r\n\t6.476647664766476,\r\n\t6.478247824782478,\r\n\t6.4798479847984805,\r\n\t6.4814481448144825,\r\n\t6.483048304830483,\r\n\t6.484648464846485,\r\n\t6.486248624862487,\r\n\t6.487848784878489,\r\n\t6.489448944894489,\r\n\t6.491049104910491,\r\n\t6.492649264926493,\r\n\t6.494249424942495,\r\n\t6.495849584958496,\r\n\t6.497449744974498,\r\n\t6.4990499049905,\r\n\t6.500650065006502,\r\n\t6.502250225022502,\r\n\t6.503850385038504,\r\n\t6.505450545054506,\r\n\t6.507050705070508,\r\n\t6.5086508650865085,\r\n\t6.5102510251025105,\r\n\t6.511851185118513,\r\n\t6.513451345134515,\r\n\t6.515051505150515,\r\n\t6.516651665166517,\r\n\t6.518251825182519,\r\n\t6.519851985198521,\r\n\t6.521452145214521,\r\n\t6.523052305230523,\r\n\t6.524652465246525,\r\n\t6.5262526252625275,\r\n\t6.527852785278528,\r\n\t6.52945294529453,\r\n\t6.531053105310532,\r\n\t6.532653265326534,\r\n\t6.534253425342534,\r\n\t6.535853585358536,\r\n\t6.537453745374538,\r\n\t6.53905390539054,\r\n\t6.540654065406541,\r\n\t6.542254225422543,\r\n\t6.543854385438545,\r\n\t6.545454545454547,\r\n\t6.547054705470547,\r\n\t6.548654865486549,\r\n\t6.550255025502551,\r\n\t6.551855185518553,\r\n\t6.5534553455345534,\r\n\t6.5550555055505555,\r\n\t6.5566556655665575,\r\n\t6.55825582558256,\r\n\t6.55985598559856,\r\n\t6.561456145614562,\r\n\t6.563056305630564,\r\n\t6.564656465646566,\r\n\t6.566256625662566,\r\n\t6.567856785678568,\r\n\t6.56945694569457,\r\n\t6.571057105710571,\r\n\t6.572657265726573,\r\n\t6.574257425742575,\r\n\t6.575857585758577,\r\n\t6.577457745774577,\r\n\t6.579057905790579,\r\n\t6.580658065806581,\r\n\t6.582258225822583,\r\n\t6.5838583858385835,\r\n\t6.585458545854586,\r\n\t6.587058705870588,\r\n\t6.58865886588659,\r\n\t6.59025902590259,\r\n\t6.591859185918592,\r\n\t6.593459345934594,\r\n\t6.595059505950596,\r\n\t6.596659665966596,\r\n\t6.598259825982598,\r\n\t6.5998599859986005,\r\n\t6.6014601460146025,\r\n\t6.603060306030603,\r\n\t6.604660466046605,\r\n\t6.606260626062607,\r\n\t6.607860786078609,\r\n\t6.609460946094609,\r\n\t6.611061106110611,\r\n\t6.612661266126613,\r\n\t6.614261426142615,\r\n\t6.615861586158616,\r\n\t6.617461746174618,\r\n\t6.61906190619062,\r\n\t6.620662066206622,\r\n\t6.622262226222622,\r\n\t6.623862386238624,\r\n\t6.625462546254626,\r\n\t6.627062706270628,\r\n\t6.6286628662866285,\r\n\t6.6302630263026305,\r\n\t6.631863186318633,\r\n\t6.633463346334635,\r\n\t6.635063506350635,\r\n\t6.636663666366637,\r\n\t6.638263826382639,\r\n\t6.639863986398641,\r\n\t6.641464146414641,\r\n\t6.643064306430643,\r\n\t6.644664466446645,\r\n\t6.6462646264626475,\r\n\t6.647864786478648,\r\n\t6.64946494649465,\r\n\t6.651065106510652,\r\n\t6.652665266526654,\r\n\t6.654265426542654,\r\n\t6.655865586558656,\r\n\t6.657465746574658,\r\n\t6.65906590659066,\r\n\t6.660666066606661,\r\n\t6.662266226622663,\r\n\t6.663866386638665,\r\n\t6.665466546654667,\r\n\t6.667066706670667,\r\n\t6.668666866686669,\r\n\t6.670267026702671,\r\n\t6.671867186718673,\r\n\t6.6734673467346735,\r\n\t6.6750675067506755,\r\n\t6.6766676667666776,\r\n\t6.67826782678268,\r\n\t6.67986798679868,\r\n\t6.681468146814682,\r\n\t6.683068306830684,\r\n\t6.684668466846686,\r\n\t6.686268626862686,\r\n\t6.687868786878688,\r\n\t6.68946894689469,\r\n\t6.691069106910691,\r\n\t6.692669266926693,\r\n\t6.694269426942695,\r\n\t6.695869586958697,\r\n\t6.697469746974697,\r\n\t6.699069906990699,\r\n\t6.700670067006701,\r\n\t6.702270227022703,\r\n\t6.7038703870387035,\r\n\t6.705470547054706,\r\n\t6.707070707070708,\r\n\t6.70867086708671,\r\n\t6.71027102710271,\r\n\t6.711871187118712,\r\n\t6.713471347134714,\r\n\t6.715071507150716,\r\n\t6.716671667166716,\r\n\t6.718271827182718,\r\n\t6.7198719871987205,\r\n\t6.7214721472147225,\r\n\t6.723072307230723,\r\n\t6.724672467246725,\r\n\t6.726272627262727,\r\n\t6.727872787278729,\r\n\t6.729472947294729,\r\n\t6.731073107310731,\r\n\t6.732673267326733,\r\n\t6.734273427342735,\r\n\t6.735873587358736,\r\n\t6.737473747374738,\r\n\t6.73907390739074,\r\n\t6.740674067406742,\r\n\t6.742274227422742,\r\n\t6.743874387438744,\r\n\t6.745474547454746,\r\n\t6.747074707470748,\r\n\t6.7486748674867485,\r\n\t6.7502750275027505,\r\n\t6.751875187518753,\r\n\t6.753475347534755,\r\n\t6.755075507550755,\r\n\t6.756675667566757,\r\n\t6.758275827582759,\r\n\t6.759875987598761,\r\n\t6.761476147614761,\r\n\t6.763076307630763,\r\n\t6.7646764676467654,\r\n\t6.7662766276627675,\r\n\t6.767876787678768,\r\n\t6.76947694769477,\r\n\t6.771077107710772,\r\n\t6.772677267726774,\r\n\t6.774277427742774,\r\n\t6.775877587758776,\r\n\t6.777477747774778,\r\n\t6.77907790779078,\r\n\t6.780678067806781,\r\n\t6.782278227822783,\r\n\t6.783878387838785,\r\n\t6.785478547854787,\r\n\t6.787078707870787,\r\n\t6.788678867886789,\r\n\t6.790279027902791,\r\n\t6.791879187918793,\r\n\t6.7934793479347935,\r\n\t6.7950795079507955,\r\n\t6.796679667966798,\r\n\t6.7982798279828,\r\n\t6.7998799879988,\r\n\t6.801480148014802,\r\n\t6.803080308030804,\r\n\t6.804680468046806,\r\n\t6.806280628062806,\r\n\t6.807880788078808,\r\n\t6.80948094809481,\r\n\t6.811081108110811,\r\n\t6.812681268126813,\r\n\t6.814281428142815,\r\n\t6.815881588158817,\r\n\t6.817481748174817,\r\n\t6.819081908190819,\r\n\t6.820682068206821,\r\n\t6.822282228222823,\r\n\t6.8238823882388235,\r\n\t6.825482548254826,\r\n\t6.827082708270828,\r\n\t6.82868286828683,\r\n\t6.83028302830283,\r\n\t6.831883188318832,\r\n\t6.833483348334834,\r\n\t6.835083508350836,\r\n\t6.836683668366836,\r\n\t6.838283828382838,\r\n\t6.8398839883988405,\r\n\t6.8414841484148425,\r\n\t6.843084308430843,\r\n\t6.844684468446845,\r\n\t6.846284628462847,\r\n\t6.847884788478849,\r\n\t6.849484948494849,\r\n\t6.851085108510851,\r\n\t6.852685268526853,\r\n\t6.854285428542855,\r\n\t6.855885588558856,\r\n\t6.857485748574858,\r\n\t6.85908590859086,\r\n\t6.860686068606862,\r\n\t6.862286228622862,\r\n\t6.863886388638864,\r\n\t6.865486548654866,\r\n\t6.867086708670868,\r\n\t6.8686868686868685,\r\n\t6.870287028702871,\r\n\t6.871887188718873,\r\n\t6.873487348734875,\r\n\t6.875087508750875,\r\n\t6.876687668766877,\r\n\t6.878287828782879,\r\n\t6.879887988798881,\r\n\t6.881488148814881,\r\n\t6.883088308830883,\r\n\t6.8846884688468855,\r\n\t6.8862886288628875,\r\n\t6.887888788878888,\r\n\t6.88948894889489,\r\n\t6.891089108910892,\r\n\t6.892689268926894,\r\n\t6.894289428942894,\r\n\t6.895889588958896,\r\n\t6.897489748974898,\r\n\t6.8990899089909,\r\n\t6.900690069006901,\r\n\t6.902290229022903,\r\n\t6.903890389038905,\r\n\t6.905490549054907,\r\n\t6.907090709070907,\r\n\t6.908690869086909,\r\n\t6.910291029102911,\r\n\t6.911891189118913,\r\n\t6.9134913491349135,\r\n\t6.9150915091509155,\r\n\t6.916691669166918,\r\n\t6.91829182918292,\r\n\t6.91989198919892,\r\n\t6.921492149214922,\r\n\t6.923092309230924,\r\n\t6.924692469246926,\r\n\t6.926292629262926,\r\n\t6.927892789278928,\r\n\t6.92949294929493,\r\n\t6.931093109310931,\r\n\t6.932693269326933,\r\n\t6.934293429342935,\r\n\t6.935893589358937,\r\n\t6.937493749374937,\r\n\t6.939093909390939,\r\n\t6.940694069406941,\r\n\t6.942294229422943,\r\n\t6.9438943894389435,\r\n\t6.945494549454946,\r\n\t6.947094709470948,\r\n\t6.94869486948695,\r\n\t6.95029502950295,\r\n\t6.951895189518952,\r\n\t6.953495349534954,\r\n\t6.955095509550956,\r\n\t6.956695669566956,\r\n\t6.9582958295829584,\r\n\t6.9598959895989605,\r\n\t6.9614961496149625,\r\n\t6.963096309630963,\r\n\t6.964696469646965,\r\n\t6.966296629662967,\r\n\t6.967896789678969,\r\n\t6.969496949694969,\r\n\t6.971097109710971,\r\n\t6.972697269726973,\r\n\t6.974297429742975,\r\n\t6.975897589758976,\r\n\t6.977497749774978,\r\n\t6.97909790979098,\r\n\t6.980698069806982,\r\n\t6.982298229822982,\r\n\t6.983898389838984,\r\n\t6.985498549854986,\r\n\t6.987098709870988,\r\n\t6.9886988698869885,\r\n\t6.990299029902991,\r\n\t6.991899189918993,\r\n\t6.993499349934995,\r\n\t6.995099509950995,\r\n\t6.996699669966997,\r\n\t6.998299829982999,\r\n\t6.999899989999001,\r\n\t7.001500150015001,\r\n\t7.003100310031003,\r\n\t7.0047004700470055,\r\n\t7.0063006300630075,\r\n\t7.007900790079008,\r\n\t7.00950095009501,\r\n\t7.011101110111012,\r\n\t7.012701270127014,\r\n\t7.014301430143014,\r\n\t7.015901590159016,\r\n\t7.017501750175018,\r\n\t7.01910191019102,\r\n\t7.020702070207021,\r\n\t7.022302230223023,\r\n\t7.023902390239025,\r\n\t7.025502550255027,\r\n\t7.027102710271027,\r\n\t7.028702870287029,\r\n\t7.030303030303031,\r\n\t7.031903190319033,\r\n\t7.0335033503350335,\r\n\t7.0351035103510355,\r\n\t7.036703670367038,\r\n\t7.03830383038304,\r\n\t7.03990399039904,\r\n\t7.041504150415042,\r\n\t7.043104310431044,\r\n\t7.044704470447046,\r\n\t7.046304630463046,\r\n\t7.047904790479048,\r\n\t7.04950495049505,\r\n\t7.051105110511051,\r\n\t7.052705270527053,\r\n\t7.054305430543055,\r\n\t7.055905590559057,\r\n\t7.057505750575057,\r\n\t7.059105910591059,\r\n\t7.060706070607061,\r\n\t7.062306230623063,\r\n\t7.063906390639064,\r\n\t7.065506550655066,\r\n\t7.067106710671068,\r\n\t7.06870687068707,\r\n\t7.07030703070307,\r\n\t7.071907190719072,\r\n\t7.073507350735074,\r\n\t7.075107510751076,\r\n\t7.076707670767076,\r\n\t7.0783078307830785,\r\n\t7.0799079907990805,\r\n\t7.081508150815083,\r\n\t7.083108310831083,\r\n\t7.084708470847085,\r\n\t7.086308630863087,\r\n\t7.087908790879089,\r\n\t7.089508950895089,\r\n\t7.091109110911091,\r\n\t7.092709270927093,\r\n\t7.094309430943095,\r\n\t7.095909590959096,\r\n\t7.097509750975098,\r\n\t7.0991099109911,\r\n\t7.100710071007102,\r\n\t7.102310231023102,\r\n\t7.103910391039104,\r\n\t7.105510551055106,\r\n\t7.107110711071108,\r\n\t7.1087108710871085,\r\n\t7.110311031103111,\r\n\t7.111911191119113,\r\n\t7.113511351135115,\r\n\t7.115111511151115,\r\n\t7.116711671167117,\r\n\t7.118311831183119,\r\n\t7.119911991199121,\r\n\t7.121512151215121,\r\n\t7.123112311231123,\r\n\t7.1247124712471255,\r\n\t7.1263126312631275,\r\n\t7.127912791279128,\r\n\t7.12951295129513,\r\n\t7.131113111311132,\r\n\t7.132713271327134,\r\n\t7.134313431343134,\r\n\t7.135913591359136,\r\n\t7.137513751375138,\r\n\t7.13911391139114,\r\n\t7.140714071407141,\r\n\t7.142314231423143,\r\n\t7.143914391439145,\r\n\t7.145514551455147,\r\n\t7.147114711471147,\r\n\t7.148714871487149,\r\n\t7.150315031503151,\r\n\t7.151915191519153,\r\n\t7.1535153515351535,\r\n\t7.1551155115511555,\r\n\t7.156715671567158,\r\n\t7.15831583158316,\r\n\t7.15991599159916,\r\n\t7.161516151615162,\r\n\t7.163116311631164,\r\n\t7.164716471647166,\r\n\t7.166316631663166,\r\n\t7.167916791679168,\r\n\t7.1695169516951704,\r\n\t7.1711171117111725,\r\n\t7.172717271727173,\r\n\t7.174317431743175,\r\n\t7.175917591759177,\r\n\t7.177517751775177,\r\n\t7.179117911791179,\r\n\t7.180718071807181,\r\n\t7.182318231823183,\r\n\t7.183918391839184,\r\n\t7.185518551855186,\r\n\t7.187118711871188,\r\n\t7.18871887188719,\r\n\t7.19031903190319,\r\n\t7.191919191919192,\r\n\t7.193519351935194,\r\n\t7.195119511951196,\r\n\t7.196719671967196,\r\n\t7.1983198319831985,\r\n\t7.1999199919992005,\r\n\t7.201520152015203,\r\n\t7.203120312031203,\r\n\t7.204720472047205,\r\n\t7.206320632063207,\r\n\t7.207920792079209,\r\n\t7.209520952095209,\r\n\t7.211121112111211,\r\n\t7.212721272127213,\r\n\t7.214321432143215,\r\n\t7.215921592159216,\r\n\t7.217521752175218,\r\n\t7.21912191219122,\r\n\t7.220722072207222,\r\n\t7.222322232223222,\r\n\t7.223922392239224,\r\n\t7.225522552255226,\r\n\t7.227122712271228,\r\n\t7.2287228722872285,\r\n\t7.230323032303231,\r\n\t7.231923192319233,\r\n\t7.233523352335235,\r\n\t7.235123512351235,\r\n\t7.236723672367237,\r\n\t7.238323832383239,\r\n\t7.239923992399241,\r\n\t7.241524152415241,\r\n\t7.243124312431243,\r\n\t7.2447244724472455,\r\n\t7.2463246324632475,\r\n\t7.247924792479248,\r\n\t7.24952495249525,\r\n\t7.251125112511252,\r\n\t7.252725272527254,\r\n\t7.254325432543254,\r\n\t7.255925592559256,\r\n\t7.257525752575258,\r\n\t7.25912591259126,\r\n\t7.260726072607261,\r\n\t7.262326232623263,\r\n\t7.263926392639265,\r\n\t7.265526552655267,\r\n\t7.267126712671267,\r\n\t7.268726872687269,\r\n\t7.270327032703271,\r\n\t7.271927192719273,\r\n\t7.2735273527352735,\r\n\t7.275127512751276,\r\n\t7.276727672767278,\r\n\t7.27832783278328,\r\n\t7.27992799279928,\r\n\t7.281528152815282,\r\n\t7.283128312831284,\r\n\t7.284728472847286,\r\n\t7.286328632863286,\r\n\t7.287928792879288,\r\n\t7.2895289528952905,\r\n\t7.2911291129112925,\r\n\t7.292729272927293,\r\n\t7.294329432943295,\r\n\t7.295929592959297,\r\n\t7.297529752975297,\r\n\t7.299129912991299,\r\n\t7.300730073007301,\r\n\t7.302330233023303,\r\n\t7.303930393039304,\r\n\t7.305530553055306,\r\n\t7.307130713071308,\r\n\t7.30873087308731,\r\n\t7.31033103310331,\r\n\t7.311931193119312,\r\n\t7.313531353135314,\r\n\t7.315131513151316,\r\n\t7.316731673167316,\r\n\t7.3183318331833185,\r\n\t7.3199319931993205,\r\n\t7.321532153215323,\r\n\t7.323132313231323,\r\n\t7.324732473247325,\r\n\t7.326332633263327,\r\n\t7.327932793279329,\r\n\t7.329532953295329,\r\n\t7.331133113311331,\r\n\t7.332733273327333,\r\n\t7.334333433343335,\r\n\t7.335933593359336,\r\n\t7.337533753375338,\r\n\t7.33913391339134,\r\n\t7.340734073407342,\r\n\t7.342334233423342,\r\n\t7.343934393439344,\r\n\t7.345534553455346,\r\n\t7.347134713471348,\r\n\t7.3487348734873486,\r\n\t7.350335033503351,\r\n\t7.351935193519353,\r\n\t7.353535353535355,\r\n\t7.355135513551355,\r\n\t7.356735673567357,\r\n\t7.358335833583359,\r\n\t7.359935993599361,\r\n\t7.361536153615361,\r\n\t7.3631363136313634,\r\n\t7.3647364736473655,\r\n\t7.3663366336633676,\r\n\t7.367936793679368,\r\n\t7.36953695369537,\r\n\t7.371137113711372,\r\n\t7.372737273727374,\r\n\t7.374337433743374,\r\n\t7.375937593759376,\r\n\t7.377537753775378,\r\n\t7.37913791379138,\r\n\t7.380738073807381,\r\n\t7.382338233823383,\r\n\t7.383938393839385,\r\n\t7.385538553855387,\r\n\t7.387138713871387,\r\n\t7.388738873887389,\r\n\t7.390339033903391,\r\n\t7.391939193919393,\r\n\t7.3935393539353935,\r\n\t7.395139513951396,\r\n\t7.396739673967398,\r\n\t7.3983398339834,\r\n\t7.3999399939994,\r\n\t7.401540154015402,\r\n\t7.403140314031404,\r\n\t7.404740474047406,\r\n\t7.406340634063406,\r\n\t7.407940794079408,\r\n\t7.4095409540954105,\r\n\t7.4111411141114125,\r\n\t7.412741274127413,\r\n\t7.414341434143415,\r\n\t7.415941594159417,\r\n\t7.417541754175417,\r\n\t7.419141914191419,\r\n\t7.420742074207421,\r\n\t7.422342234223423,\r\n\t7.423942394239424,\r\n\t7.425542554255426,\r\n\t7.427142714271428,\r\n\t7.42874287428743,\r\n\t7.43034303430343,\r\n\t7.431943194319432,\r\n\t7.433543354335434,\r\n\t7.435143514351436,\r\n\t7.436743674367436,\r\n\t7.4383438343834385,\r\n\t7.4399439943994405,\r\n\t7.441544154415443,\r\n\t7.443144314431443,\r\n\t7.444744474447445,\r\n\t7.446344634463447,\r\n\t7.447944794479449,\r\n\t7.449544954495449,\r\n\t7.451145114511451,\r\n\t7.452745274527453,\r\n\t7.454345434543455,\r\n\t7.455945594559456,\r\n\t7.457545754575458,\r\n\t7.45914591459146,\r\n\t7.460746074607462,\r\n\t7.462346234623462,\r\n\t7.463946394639464,\r\n\t7.465546554655466,\r\n\t7.467146714671468,\r\n\t7.468746874687469,\r\n\t7.470347034703471,\r\n\t7.471947194719473,\r\n\t7.473547354735475,\r\n\t7.475147514751475,\r\n\t7.476747674767477,\r\n\t7.478347834783479,\r\n\t7.479947994799481,\r\n\t7.481548154815481,\r\n\t7.4831483148314835,\r\n\t7.4847484748474855,\r\n\t7.486348634863488,\r\n\t7.487948794879488,\r\n\t7.48954895489549,\r\n\t7.491149114911492,\r\n\t7.492749274927494,\r\n\t7.494349434943494,\r\n\t7.495949594959496,\r\n\t7.497549754975498,\r\n\t7.4991499149915,\r\n\t7.500750075007501,\r\n\t7.502350235023503,\r\n\t7.503950395039505,\r\n\t7.505550555055507,\r\n\t7.507150715071507,\r\n\t7.508750875087509,\r\n\t7.510351035103511,\r\n\t7.511951195119513,\r\n\t7.5135513551355135,\r\n\t7.515151515151516,\r\n\t7.516751675167518,\r\n\t7.51835183518352,\r\n\t7.51995199519952,\r\n\t7.521552155215522,\r\n\t7.523152315231524,\r\n\t7.524752475247526,\r\n\t7.526352635263526,\r\n\t7.527952795279528,\r\n\t7.5295529552955305,\r\n\t7.5311531153115325,\r\n\t7.532753275327533,\r\n\t7.534353435343535,\r\n\t7.535953595359537,\r\n\t7.537553755375537,\r\n\t7.539153915391539,\r\n\t7.540754075407541,\r\n\t7.542354235423543,\r\n\t7.543954395439544,\r\n\t7.545554555455546,\r\n\t7.547154715471548,\r\n\t7.54875487548755,\r\n\t7.55035503550355,\r\n\t7.551955195519552,\r\n\t7.553555355535554,\r\n\t7.555155515551556,\r\n\t7.5567556755675565,\r\n\t7.5583558355835585,\r\n\t7.5599559955995606,\r\n\t7.561556155615563,\r\n\t7.563156315631563,\r\n\t7.564756475647565,\r\n\t7.566356635663567,\r\n\t7.567956795679569,\r\n\t7.569556955695569,\r\n\t7.571157115711571,\r\n\t7.572757275727573,\r\n\t7.5743574357435755,\r\n\t7.575957595759576,\r\n\t7.577557755775578,\r\n\t7.57915791579158,\r\n\t7.580758075807582,\r\n\t7.582358235823582,\r\n\t7.583958395839584,\r\n\t7.585558555855586,\r\n\t7.587158715871588,\r\n\t7.588758875887589,\r\n\t7.590359035903591,\r\n\t7.591959195919593,\r\n\t7.593559355935595,\r\n\t7.595159515951595,\r\n\t7.596759675967597,\r\n\t7.598359835983599,\r\n\t7.599959995999601,\r\n\t7.601560156015601,\r\n\t7.6031603160316035,\r\n\t7.6047604760476055,\r\n\t7.606360636063608,\r\n\t7.607960796079608,\r\n\t7.60956095609561,\r\n\t7.611161116111612,\r\n\t7.612761276127614,\r\n\t7.614361436143614,\r\n\t7.615961596159616,\r\n\t7.617561756175618,\r\n\t7.61916191619162,\r\n\t7.620762076207621,\r\n\t7.622362236223623,\r\n\t7.623962396239625,\r\n\t7.625562556255627,\r\n\t7.627162716271627,\r\n\t7.628762876287629,\r\n\t7.630363036303631,\r\n\t7.631963196319633,\r\n\t7.6335633563356335,\r\n\t7.635163516351636,\r\n\t7.636763676367638,\r\n\t7.63836383638364,\r\n\t7.63996399639964,\r\n\t7.641564156415642,\r\n\t7.643164316431644,\r\n\t7.644764476447646,\r\n\t7.646364636463646,\r\n\t7.647964796479648,\r\n\t7.6495649564956505,\r\n\t7.6511651165116525,\r\n\t7.652765276527653,\r\n\t7.654365436543655,\r\n\t7.655965596559657,\r\n\t7.657565756575657,\r\n\t7.659165916591659,\r\n\t7.660766076607661,\r\n\t7.662366236623663,\r\n\t7.663966396639664,\r\n\t7.665566556655666,\r\n\t7.667166716671668,\r\n\t7.66876687668767,\r\n\t7.67036703670367,\r\n\t7.671967196719672,\r\n\t7.673567356735674,\r\n\t7.675167516751676,\r\n\t7.6767676767676765,\r\n\t7.6783678367836785,\r\n\t7.679967996799681,\r\n\t7.681568156815683,\r\n\t7.683168316831683,\r\n\t7.684768476847685,\r\n\t7.686368636863687,\r\n\t7.687968796879689,\r\n\t7.689568956895689,\r\n\t7.691169116911691,\r\n\t7.692769276927693,\r\n\t7.6943694369436955,\r\n\t7.695969596959696,\r\n\t7.697569756975698,\r\n\t7.6991699169917,\r\n\t7.700770077007702,\r\n\t7.702370237023702,\r\n\t7.703970397039704,\r\n\t7.705570557055706,\r\n\t7.707170717071708,\r\n\t7.708770877087709,\r\n\t7.710371037103711,\r\n\t7.711971197119713,\r\n\t7.713571357135715,\r\n\t7.715171517151715,\r\n\t7.716771677167717,\r\n\t7.718371837183719,\r\n\t7.719971997199721,\r\n\t7.721572157215721,\r\n\t7.7231723172317235,\r\n\t7.7247724772477255,\r\n\t7.726372637263728,\r\n\t7.727972797279728,\r\n\t7.72957295729573,\r\n\t7.731173117311732,\r\n\t7.732773277327734,\r\n\t7.734373437343734,\r\n\t7.735973597359736,\r\n\t7.737573757375738,\r\n\t7.73917391739174,\r\n\t7.740774077407741,\r\n\t7.742374237423743,\r\n\t7.743974397439745,\r\n\t7.745574557455747,\r\n\t7.747174717471747,\r\n\t7.748774877487749,\r\n\t7.750375037503751,\r\n\t7.751975197519753,\r\n\t7.7535753575357536,\r\n\t7.755175517551756,\r\n\t7.756775677567758,\r\n\t7.75837583758376,\r\n\t7.75997599759976,\r\n\t7.761576157615762,\r\n\t7.763176317631764,\r\n\t7.764776477647766,\r\n\t7.766376637663766,\r\n\t7.7679767976797685,\r\n\t7.7695769576957705,\r\n\t7.7711771177117726,\r\n\t7.772777277727773,\r\n\t7.774377437743775,\r\n\t7.775977597759777,\r\n\t7.777577757775779,\r\n\t7.779177917791779,\r\n\t7.780778077807781,\r\n\t7.782378237823783,\r\n\t7.783978397839784,\r\n\t7.785578557855786,\r\n\t7.787178717871788,\r\n\t7.78877887788779,\r\n\t7.79037903790379,\r\n\t7.791979197919792,\r\n\t7.793579357935794,\r\n\t7.795179517951796,\r\n\t7.7967796779677965,\r\n\t7.7983798379837985,\r\n\t7.799979997999801,\r\n\t7.801580158015803,\r\n\t7.803180318031803,\r\n\t7.804780478047805,\r\n\t7.806380638063807,\r\n\t7.807980798079809,\r\n\t7.809580958095809,\r\n\t7.811181118111811,\r\n\t7.812781278127813,\r\n\t7.8143814381438155,\r\n\t7.815981598159816,\r\n\t7.817581758175818,\r\n\t7.81918191819182,\r\n\t7.820782078207822,\r\n\t7.822382238223822,\r\n\t7.823982398239824,\r\n\t7.825582558255826,\r\n\t7.827182718271828,\r\n\t7.828782878287829,\r\n\t7.830383038303831,\r\n\t7.831983198319833,\r\n\t7.833583358335835,\r\n\t7.835183518351835,\r\n\t7.836783678367837,\r\n\t7.838383838383839,\r\n\t7.839983998399841,\r\n\t7.841584158415841,\r\n\t7.8431843184318435,\r\n\t7.8447844784478455,\r\n\t7.846384638463848,\r\n\t7.847984798479848,\r\n\t7.84958495849585,\r\n\t7.851185118511852,\r\n\t7.852785278527854,\r\n\t7.854385438543854,\r\n\t7.855985598559856,\r\n\t7.857585758575858,\r\n\t7.85918591859186,\r\n\t7.860786078607861,\r\n\t7.862386238623863,\r\n\t7.863986398639865,\r\n\t7.865586558655867,\r\n\t7.867186718671867,\r\n\t7.868786878687869,\r\n\t7.870387038703871,\r\n\t7.871987198719873,\r\n\t7.873587358735874,\r\n\t7.875187518751876,\r\n\t7.876787678767878,\r\n\t7.87838783878388,\r\n\t7.87998799879988,\r\n\t7.881588158815882,\r\n\t7.883188318831884,\r\n\t7.884788478847886,\r\n\t7.886388638863886,\r\n\t7.8879887988798885,\r\n\t7.8895889588958905,\r\n\t7.891189118911893,\r\n\t7.892789278927893,\r\n\t7.894389438943895,\r\n\t7.895989598959897,\r\n\t7.897589758975899,\r\n\t7.899189918991899,\r\n\t7.900790079007901,\r\n\t7.902390239023903,\r\n\t7.903990399039904,\r\n\t7.905590559055906,\r\n\t7.907190719071908,\r\n\t7.90879087908791,\r\n\t7.91039103910391,\r\n\t7.911991199119912,\r\n\t7.913591359135914,\r\n\t7.915191519151916,\r\n\t7.9167916791679165,\r\n\t7.9183918391839185,\r\n\t7.919991999199921,\r\n\t7.921592159215923,\r\n\t7.923192319231923,\r\n\t7.924792479247925,\r\n\t7.926392639263927,\r\n\t7.927992799279929,\r\n\t7.929592959295929,\r\n\t7.931193119311931,\r\n\t7.932793279327933,\r\n\t7.9343934393439355,\r\n\t7.935993599359936,\r\n\t7.937593759375938,\r\n\t7.93919391939194,\r\n\t7.940794079407942,\r\n\t7.942394239423942,\r\n\t7.943994399439944,\r\n\t7.945594559455946,\r\n\t7.947194719471948,\r\n\t7.948794879487949,\r\n\t7.950395039503951,\r\n\t7.951995199519953,\r\n\t7.953595359535955,\r\n\t7.955195519551955,\r\n\t7.956795679567957,\r\n\t7.958395839583959,\r\n\t7.959995999599961,\r\n\t7.9615961596159615,\r\n\t7.9631963196319635,\r\n\t7.9647964796479656,\r\n\t7.966396639663968,\r\n\t7.967996799679968,\r\n\t7.96959695969597,\r\n\t7.971197119711972,\r\n\t7.972797279727974,\r\n\t7.974397439743974,\r\n\t7.975997599759976,\r\n\t7.977597759775978,\r\n\t7.9791979197919805,\r\n\t7.980798079807981,\r\n\t7.982398239823983,\r\n\t7.983998399839985,\r\n\t7.985598559855987,\r\n\t7.987198719871987,\r\n\t7.988798879887989,\r\n\t7.990399039903991,\r\n\t7.991999199919993,\r\n\t7.993599359935994,\r\n\t7.995199519951996,\r\n\t7.996799679967998,\r\n\t7.998399839984,\r\n\t8.0\r\n]\r\n\r\nmodule.exports = { X, Y };","/**\r\n * Performs binary search on a sorted array of floating-point numbers.\r\n * Returns the index of the largest element that is smaller than the search value.\r\n * If no such element exists, returns -1.\r\n *\r\n * @param {number[]} array - The sorted array of floating-point numbers.\r\n * @param {number} value - The value to search for.\r\n * @returns {number} The index of the largest element smaller than the search value.\r\n */\r\nfunction binarySearch(array, value) {\r\n    let indexLeft = 0;\r\n    let indexRight = array.length - 1;\r\n    let indexResult = -1;\r\n\r\n    while (indexLeft <= indexRight) {\r\n        const indexMiddle = Math.floor((indexLeft + indexRight) / 2);\r\n\r\n        if (array[indexMiddle] < value) {\r\n            indexResult = indexMiddle; // If the current value is smaller, it may be the result\r\n            indexLeft = indexMiddle + 1; // Continue searching to the right\r\n        } else {\r\n            indexRight = indexMiddle - 1; // If the current value is greater or equal, search to the left\r\n        }\r\n    }\r\n\r\n    return indexResult;\r\n}\r\n\r\n\r\nmodule.exports = { binarySearch };","const { X, Y } = require('./normal-cdf-data');\r\nconst { binarySearch } = require('./util');\r\n\r\n/**\r\n * Computes the inverse cumulative distribution function of a normal distribution.\r\n *\r\n * @param {number} value - The point to evaluate.\r\n */\r\nfunction inverseNormalCDF(value) {\r\n    if (value <= X[0]) {\r\n        return Y[0]\r\n    }\r\n    else if (X[X.lenght - 1] <= value) {\r\n        return Y[Y.lenght - 1]\r\n    }\r\n    else {\r\n        const indexLeft = binarySearch(X, value)\r\n        if (indexLeft == X.lenght - 1) {\r\n            return Y[Y.lenght -1]\r\n        }\r\n        else {\r\n            const indexRight = indexLeft + 1;\r\n            return ((value - X[indexLeft])*Y[indexRight] + (X[indexRight] - value)*Y[indexLeft]) / (X[indexRight] - X[indexLeft])\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = { inverseNormalCDF };","const { getRandomGenerator } = require('./seed');\r\nconst baseGenerator  = require('./base-generator');\r\nconst { inverseNormalCDF } = require('./util/inverse-normal-cdf');\r\n\r\n/**\r\n * Generates random integers or arrays of random integers for a normal distirbution.\r\n *\r\n * @param {number} [loc=0.0] - The mean of the normal distribution to sample. 0.0 by default.\r\n * @param {number} [scale=1.0] - The standard deviation of the normal distribution to sample. 1.0 by default.\r\n * @param {number|Array|null} [size=null] - The shape of the output:\r\n *   - If `null`, a single integer is returned.\r\n *   - If a number, a 1D array of the specified size is returned.\r\n *   - If an array (e.g., [m, n]), a multidimensional array of the specified shape is returned.\r\n * @throws {Error} If `low` is greater than or equal to `high`.\r\n * @returns {number|Array} A random integer, an array of random integers, or a multidimensional array.\r\n *\r\n * @example\r\n * // Single random integer between 0 and 9\r\n * randint(10); // e.g., 3\r\n *\r\n * // Single random integer between 5 and 15\r\n * randint(5, 15); // e.g., 12\r\n *\r\n * // 1D array of 5 random integers between 0 and 9\r\n * randint(0, 10, 5); // e.g., [2, 8, 6, 3, 7]\r\n *\r\n * // 2D array (3x4) of random integers between 1 and 6\r\n * randint(1, 7, [3, 4]); // e.g., [[4, 6, 1, 3], [5, 1, 2, 6], [3, 4, 5, 1]]\r\n */\r\nfunction normal(loc=0.0, scale = 1.0, size = null) {\r\n    if (typeof loc !== \"number\" || typeof scale !== \"number\") {\r\n        throw new Error(\"loc and scale must be numbers\");\r\n    }\r\n    if (scale <= 0.0) {\r\n        throw new Error(\"standard deviation must be a positive number\");\r\n    }\r\n    return baseGenerator(() => scale*inverseNormalCDF(getRandomGenerator()()) + loc, size);\r\n}\r\n\r\nmodule.exports = normal;\r\n","const { getRandomGenerator } = require('./seed');\r\nconst baseGenerator  = require('./base-generator');\r\n\r\n/**\r\n * Generates random samples from a Cauchy distribution.\r\n *\r\n * @param {number} median - Location parameter (median of the distribution).\r\n * @param {number} gamma - Scale parameter (dispersion of the distribution, must be > 0).\r\n * @param {number|Array|null} [size=null] - The shape of the output:\r\n *   - If `null`, a single value is returned.\r\n *   - If a number, a 1D array of the specified size is returned.\r\n *   - If an array (e.g., [m, n]), a multidimensional array of the specified shape is returned.\r\n * @returns {number|Array} A single value, an array, or a multidimensional array of random values from the Cauchy distribution.\r\n */\r\nfunction cauchy(median, gamma, size = null) {\r\n    if (gamma <= 0) {\r\n        throw new Error(\"Scale parameter gamma must be greater than 0\");\r\n    }\r\n    // Use the base generator for handling size\r\n    return baseGenerator(() => median + gamma * Math.tan(Math.PI * (getRandomGenerator()() - 0.5)), size);\r\n}\r\n\r\nmodule.exports = cauchy;\r\n","const { getRandomGenerator } = require('./seed');\r\nconst baseGenerator  = require('./base-generator');\r\n\r\n/**\r\n * Generates random samples from an exponential distribution.\r\n *\r\n * @param {number} lambda - The rate parameter (must be > 0).\r\n * @param {number|Array|null} [size=null] - The shape of the output:\r\n *   - If `null`, a single value is returned.\r\n *   - If a number, a 1D array of the specified size is returned.\r\n *   - If an array (e.g., [m, n]), a multidimensional array of the specified shape is returned.\r\n * @returns {number|Array} A single value, an array, or a multidimensional array of random values from the exponential distribution.\r\n */\r\nfunction exponential(lambda, size = null) {\r\n    if (lambda <= 0) {\r\n        throw new Error(\"Rate parameter lambda must be greater than 0\");\r\n    }\r\n    // Use the base generator for handling size\r\n    return baseGenerator(() => -Math.log(1 - getRandomGenerator()()) / lambda, size);\r\n}\r\n\r\nmodule.exports = exponential;\r\n","const randint = require('./randint');\r\n\r\nfunction swap(array, i, j) {\r\n    const temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n};\r\n/**\r\n * Shuffles the elements of an array along the first axis in-place.\r\n *\r\n * For N-dimensional arrays, this function only shuffles the order of the top-level sub-arrays.\r\n * The content and order within each sub-array remain unchanged.\r\n *\r\n * @param {Array} array - The array to shuffle. Must be N-dimensional.\r\n * @param {function} - A random number generator function returning values in [0, 1).\r\n * @returns {Array} A new shuffled array if a deep copy is required, otherwise in-place modification.\r\n */\r\nfunction shuffle(array) {\r\n    if (!Array.isArray(array)) {\r\n        throw new Error(\"Input must be an array.\");\r\n    }\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n        const j = randint(i+1); // Random index from 0 to i\r\n        swap(array, i, j);\r\n    }\r\n    return array;\r\n}\r\n\r\nmodule.exports = shuffle;\r\n","const shuffle = require('./shuffle')\r\n\r\n/**\r\n * Generates a random permutation of an array or a range of integers.\r\n *\r\n * @param {Array|number} x - If an array, it is shuffled and returned. \r\n *   If a number `n`, returns a random permutation of integers `[0, 1, ..., n-1]`.\r\n * @returns {Array} A randomly permuted array.\r\n */\r\nfunction permutation(x) {\r\n    if (typeof x === \"number\") {\r\n        if (x <= 0 || !Number.isInteger(x)) {\r\n            throw new Error(\"If x is a number, it must be a positive integer.\");\r\n        }\r\n        // Create an array [0, 1, ..., x-1]\r\n        x = Array.from({ length: x }, (_, i) => i);\r\n    } else if (!Array.isArray(x)) {\r\n        throw new Error(\"Input must be an array or a positive integer.\");\r\n    }\r\n    // Shuffle the array in-place\r\n    shuffle(x)\r\n\r\n    return x;\r\n}\r\n\r\nmodule.exports = permutation;\r\n","function _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nexport { _extends as default };","export var DEFAULT_CONFIG = {\n  // minimum relative difference between two compared values,\n  // used by all comparison functions\n  relTol: 1e-12,\n  // minimum absolute difference between two compared values,\n  // used by all comparison functions\n  absTol: 1e-15,\n  // type of default matrix output. Choose 'matrix' (default) or 'array'\n  matrix: 'Matrix',\n  // type of default number output. Choose 'number' (default) 'BigNumber', 'bigint', or 'Fraction'\n  number: 'number',\n  // type of fallback used for config { number: 'bigint' } when a value cannot be represented\n  // in the configured numeric type. Choose 'number' (default) or 'BigNumber'.\n  numberFallback: 'number',\n  // number of significant digits in BigNumbers\n  precision: 64,\n  // predictable output type of functions. When true, output type depends only\n  // on the input types. When false (default), output type can vary depending\n  // on input values. For example `math.sqrt(-4)` returns `complex('2i')` when\n  // predictable is false, and returns `NaN` when true.\n  predictable: false,\n  // random seed for seeded pseudo random number generation\n  // null = randomly seed\n  randomSeed: null\n};","import { hasOwnProperty } from './object.js';\n\n/**\n * Get a property of a plain object\n * Throws an error in case the object is not a plain object or the\n * property is not defined on the object itself\n * @param {Object} object\n * @param {string} prop\n * @return {*} Returns the property value when safe\n */\nfunction getSafeProperty(object, prop) {\n  // only allow getting safe properties of a plain object\n  if (isSafeProperty(object, prop)) {\n    return object[prop];\n  }\n  if (typeof object[prop] === 'function' && isSafeMethod(object, prop)) {\n    throw new Error('Cannot access method \"' + prop + '\" as a property');\n  }\n  throw new Error('No access to property \"' + prop + '\"');\n}\n\n/**\n * Set a property on a plain object.\n * Throws an error in case the object is not a plain object or the\n * property would override an inherited property like .constructor or .toString\n * @param {Object} object\n * @param {string} prop\n * @param {*} value\n * @return {*} Returns the value\n */\n// TODO: merge this function into access.js?\nfunction setSafeProperty(object, prop, value) {\n  // only allow setting safe properties of a plain object\n  if (isSafeProperty(object, prop)) {\n    object[prop] = value;\n    return value;\n  }\n  throw new Error('No access to property \"' + prop + '\"');\n}\n\n/**\n * Test whether a property is safe to use on an object or Array.\n * For example .toString and .constructor are not safe\n * @param {Object | Array} object\n * @param {string} prop\n * @return {boolean} Returns true when safe\n */\nfunction isSafeProperty(object, prop) {\n  if (!isPlainObject(object) && !Array.isArray(object)) {\n    return false;\n  }\n  // SAFE: whitelisted\n  // e.g length\n  if (hasOwnProperty(safeNativeProperties, prop)) {\n    return true;\n  }\n  // UNSAFE: inherited from Object prototype\n  // e.g constructor\n  if (prop in Object.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Object.prototype is a root object\n    return false;\n  }\n  // UNSAFE: inherited from Function prototype\n  // e.g call, apply\n  if (prop in Function.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Function.prototype is a root object\n    return false;\n  }\n  return true;\n}\n\n/**\n * Validate whether a method is safe.\n * Throws an error when that's not the case.\n * @param {Object} object\n * @param {string} method\n * @return {function} Returns the method when valid\n */\nfunction getSafeMethod(object, method) {\n  if (!isSafeMethod(object, method)) {\n    throw new Error('No access to method \"' + method + '\"');\n  }\n  return object[method];\n}\n\n/**\n * Check whether a method is safe.\n * Throws an error when that's not the case (for example for `constructor`).\n * @param {Object} object\n * @param {string} method\n * @return {boolean} Returns true when safe, false otherwise\n */\nfunction isSafeMethod(object, method) {\n  if (object === null || object === undefined || typeof object[method] !== 'function') {\n    return false;\n  }\n  // UNSAFE: ghosted\n  // e.g overridden toString\n  // Note that IE10 doesn't support __proto__ and we can't do this check there.\n  if (hasOwnProperty(object, method) && Object.getPrototypeOf && method in Object.getPrototypeOf(object)) {\n    return false;\n  }\n  // SAFE: whitelisted\n  // e.g toString\n  if (hasOwnProperty(safeNativeMethods, method)) {\n    return true;\n  }\n  // UNSAFE: inherited from Object prototype\n  // e.g constructor\n  if (method in Object.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Object.prototype is a root object\n    return false;\n  }\n  // UNSAFE: inherited from Function prototype\n  // e.g call, apply\n  if (method in Function.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Function.prototype is a root object\n    return false;\n  }\n  return true;\n}\nfunction isPlainObject(object) {\n  return typeof object === 'object' && object && object.constructor === Object;\n}\nvar safeNativeProperties = {\n  length: true,\n  name: true\n};\nvar safeNativeMethods = {\n  toString: true,\n  valueOf: true,\n  toLocaleString: true\n};\nexport { getSafeProperty };\nexport { setSafeProperty };\nexport { isSafeProperty };\nexport { getSafeMethod };\nexport { isSafeMethod };\nexport { isPlainObject };","import { getSafeProperty, isSafeProperty, setSafeProperty } from './customs.js';\nimport { isMap, isObject } from './is.js';\n\n/**\n * A map facade on a bare object.\n *\n * The small number of methods needed to implement a scope,\n * forwarding on to the SafeProperty functions. Over time, the codebase\n * will stop using this method, as all objects will be Maps, rather than\n * more security prone objects.\n */\nexport class ObjectWrappingMap {\n  constructor(object) {\n    this.wrappedObject = object;\n    this[Symbol.iterator] = this.entries;\n  }\n  keys() {\n    return Object.keys(this.wrappedObject).filter(key => this.has(key)).values();\n  }\n  get(key) {\n    return getSafeProperty(this.wrappedObject, key);\n  }\n  set(key, value) {\n    setSafeProperty(this.wrappedObject, key, value);\n    return this;\n  }\n  has(key) {\n    return isSafeProperty(this.wrappedObject, key) && key in this.wrappedObject;\n  }\n  entries() {\n    return mapIterator(this.keys(), key => [key, this.get(key)]);\n  }\n  forEach(callback) {\n    for (var key of this.keys()) {\n      callback(this.get(key), key, this);\n    }\n  }\n  delete(key) {\n    if (isSafeProperty(this.wrappedObject, key)) {\n      delete this.wrappedObject[key];\n    }\n  }\n  clear() {\n    for (var key of this.keys()) {\n      this.delete(key);\n    }\n  }\n  get size() {\n    return Object.keys(this.wrappedObject).length;\n  }\n}\n\n/**\n * Create a map with two partitions: a and b.\n * The set with bKeys determines which keys/values are read/written to map b,\n * all other values are read/written to map a\n *\n * For example:\n *\n *   const a = new Map()\n *   const b = new Map()\n *   const p = new PartitionedMap(a, b, new Set(['x', 'y']))\n *\n * In this case, values `x` and `y` are read/written to map `b`,\n * all other values are read/written to map `a`.\n */\nexport class PartitionedMap {\n  /**\n   * @param {Map} a\n   * @param {Map} b\n   * @param {Set} bKeys\n   */\n  constructor(a, b, bKeys) {\n    this.a = a;\n    this.b = b;\n    this.bKeys = bKeys;\n    this[Symbol.iterator] = this.entries;\n  }\n  get(key) {\n    return this.bKeys.has(key) ? this.b.get(key) : this.a.get(key);\n  }\n  set(key, value) {\n    if (this.bKeys.has(key)) {\n      this.b.set(key, value);\n    } else {\n      this.a.set(key, value);\n    }\n    return this;\n  }\n  has(key) {\n    return this.b.has(key) || this.a.has(key);\n  }\n  keys() {\n    return new Set([...this.a.keys(), ...this.b.keys()])[Symbol.iterator]();\n  }\n  entries() {\n    return mapIterator(this.keys(), key => [key, this.get(key)]);\n  }\n  forEach(callback) {\n    for (var key of this.keys()) {\n      callback(this.get(key), key, this);\n    }\n  }\n  delete(key) {\n    return this.bKeys.has(key) ? this.b.delete(key) : this.a.delete(key);\n  }\n  clear() {\n    this.a.clear();\n    this.b.clear();\n  }\n  get size() {\n    return [...this.keys()].length;\n  }\n}\n\n/**\n * Create a new iterator that maps over the provided iterator, applying a mapping function to each item\n */\nfunction mapIterator(it, callback) {\n  return {\n    next: () => {\n      var n = it.next();\n      return n.done ? n : {\n        value: callback(n.value),\n        done: false\n      };\n    }\n  };\n}\n\n/**\n * Creates an empty map, or whatever your platform's polyfill is.\n *\n * @returns an empty Map or Map like object.\n */\nexport function createEmptyMap() {\n  return new Map();\n}\n\n/**\n * Creates a Map from the given object.\n *\n * @param { Map | { [key: string]: unknown } | undefined } mapOrObject\n * @returns\n */\nexport function createMap(mapOrObject) {\n  if (!mapOrObject) {\n    return createEmptyMap();\n  }\n  if (isMap(mapOrObject)) {\n    return mapOrObject;\n  }\n  if (isObject(mapOrObject)) {\n    return new ObjectWrappingMap(mapOrObject);\n  }\n  throw new Error('createMap can create maps from objects or Maps');\n}\n\n/**\n * Unwraps a map into an object.\n *\n * @param {Map} map\n * @returns { [key: string]: unknown }\n */\nexport function toObject(map) {\n  if (map instanceof ObjectWrappingMap) {\n    return map.wrappedObject;\n  }\n  var object = {};\n  for (var key of map.keys()) {\n    var value = map.get(key);\n    setSafeProperty(object, key, value);\n  }\n  return object;\n}\n\n/**\n * Copies the contents of key-value pairs from each `objects` in to `map`.\n *\n * Object is `objects` can be a `Map` or object.\n *\n * This is the `Map` analog to `Object.assign`.\n */\nexport function assign(map) {\n  for (var _len = arguments.length, objects = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    objects[_key - 1] = arguments[_key];\n  }\n  for (var args of objects) {\n    if (!args) {\n      continue;\n    }\n    if (isMap(args)) {\n      for (var key of args.keys()) {\n        map.set(key, args.get(key));\n      }\n    } else if (isObject(args)) {\n      for (var _key2 of Object.keys(args)) {\n        map.set(_key2, args[_key2]);\n      }\n    }\n  }\n  return map;\n}","// type checks for all known types\n//\n// note that:\n//\n// - check by duck-typing on a property like `isUnit`, instead of checking instanceof.\n//   instanceof cannot be used because that would not allow to pass data from\n//   one instance of math.js to another since each has it's own instance of Unit.\n// - check the `isUnit` property via the constructor, so there will be no\n//   matches for \"fake\" instances like plain objects with a property `isUnit`.\n//   That is important for security reasons.\n// - It must not be possible to override the type checks used internally,\n//   for security reasons, so these functions are not exposed in the expression\n//   parser.\n\nimport { ObjectWrappingMap } from './map.js';\nexport function isNumber(x) {\n  return typeof x === 'number';\n}\nexport function isBigNumber(x) {\n  if (!x || typeof x !== 'object' || typeof x.constructor !== 'function') {\n    return false;\n  }\n  if (x.isBigNumber === true && typeof x.constructor.prototype === 'object' && x.constructor.prototype.isBigNumber === true) {\n    return true;\n  }\n  if (typeof x.constructor.isDecimal === 'function' && x.constructor.isDecimal(x) === true) {\n    return true;\n  }\n  return false;\n}\nexport function isBigInt(x) {\n  return typeof x === 'bigint';\n}\nexport function isComplex(x) {\n  return x && typeof x === 'object' && Object.getPrototypeOf(x).isComplex === true || false;\n}\nexport function isFraction(x) {\n  return x && typeof x === 'object' && Object.getPrototypeOf(x).isFraction === true || false;\n}\nexport function isUnit(x) {\n  return x && x.constructor.prototype.isUnit === true || false;\n}\nexport function isString(x) {\n  return typeof x === 'string';\n}\nexport var isArray = Array.isArray;\nexport function isMatrix(x) {\n  return x && x.constructor.prototype.isMatrix === true || false;\n}\n\n/**\n * Test whether a value is a collection: an Array or Matrix\n * @param {*} x\n * @returns {boolean} isCollection\n */\nexport function isCollection(x) {\n  return Array.isArray(x) || isMatrix(x);\n}\nexport function isDenseMatrix(x) {\n  return x && x.isDenseMatrix && x.constructor.prototype.isMatrix === true || false;\n}\nexport function isSparseMatrix(x) {\n  return x && x.isSparseMatrix && x.constructor.prototype.isMatrix === true || false;\n}\nexport function isRange(x) {\n  return x && x.constructor.prototype.isRange === true || false;\n}\nexport function isIndex(x) {\n  return x && x.constructor.prototype.isIndex === true || false;\n}\nexport function isBoolean(x) {\n  return typeof x === 'boolean';\n}\nexport function isResultSet(x) {\n  return x && x.constructor.prototype.isResultSet === true || false;\n}\nexport function isHelp(x) {\n  return x && x.constructor.prototype.isHelp === true || false;\n}\nexport function isFunction(x) {\n  return typeof x === 'function';\n}\nexport function isDate(x) {\n  return x instanceof Date;\n}\nexport function isRegExp(x) {\n  return x instanceof RegExp;\n}\nexport function isObject(x) {\n  return !!(x && typeof x === 'object' && x.constructor === Object && !isComplex(x) && !isFraction(x));\n}\n\n/**\n * Returns `true` if the passed object appears to be a Map (i.e. duck typing).\n *\n * Methods looked for are `get`, `set`, `keys` and `has`.\n *\n * @param {Map | object} object\n * @returns\n */\nexport function isMap(object) {\n  // We can use the fast instanceof, or a slower duck typing check.\n  // The duck typing method needs to cover enough methods to not be confused with DenseMatrix.\n  if (!object) {\n    return false;\n  }\n  return object instanceof Map || object instanceof ObjectWrappingMap || typeof object.set === 'function' && typeof object.get === 'function' && typeof object.keys === 'function' && typeof object.has === 'function';\n}\nexport function isPartitionedMap(object) {\n  return isMap(object) && isMap(object.a) && isMap(object.b);\n}\nexport function isObjectWrappingMap(object) {\n  return isMap(object) && isObject(object.wrappedObject);\n}\nexport function isNull(x) {\n  return x === null;\n}\nexport function isUndefined(x) {\n  return x === undefined;\n}\nexport function isAccessorNode(x) {\n  return x && x.isAccessorNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isArrayNode(x) {\n  return x && x.isArrayNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isAssignmentNode(x) {\n  return x && x.isAssignmentNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isBlockNode(x) {\n  return x && x.isBlockNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isConditionalNode(x) {\n  return x && x.isConditionalNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isConstantNode(x) {\n  return x && x.isConstantNode === true && x.constructor.prototype.isNode === true || false;\n}\n\n/* Very specialized: returns true for those nodes which in the numerator of\n   a fraction means that the division in that fraction has precedence over implicit\n   multiplication, e.g. -2/3 x parses as (-2/3) x and 3/4 x parses as (3/4) x but\n   6!/8 x parses as 6! / (8x). It is located here because it is shared between\n   parse.js and OperatorNode.js (for parsing and printing, respectively).\n\n   This should *not* be exported from mathjs, unlike most of the tests here.\n   Its name does not start with 'is' to prevent utils/snapshot.js from thinking\n   it should be exported.\n*/\nexport function rule2Node(node) {\n  return isConstantNode(node) || isOperatorNode(node) && node.args.length === 1 && isConstantNode(node.args[0]) && '-+~'.includes(node.op);\n}\nexport function isFunctionAssignmentNode(x) {\n  return x && x.isFunctionAssignmentNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isFunctionNode(x) {\n  return x && x.isFunctionNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isIndexNode(x) {\n  return x && x.isIndexNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isNode(x) {\n  return x && x.isNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isObjectNode(x) {\n  return x && x.isObjectNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isOperatorNode(x) {\n  return x && x.isOperatorNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isParenthesisNode(x) {\n  return x && x.isParenthesisNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isRangeNode(x) {\n  return x && x.isRangeNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isRelationalNode(x) {\n  return x && x.isRelationalNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isSymbolNode(x) {\n  return x && x.isSymbolNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isChain(x) {\n  return x && x.constructor.prototype.isChain === true || false;\n}\nexport function typeOf(x) {\n  var t = typeof x;\n  if (t === 'object') {\n    if (x === null) return 'null';\n    if (isBigNumber(x)) return 'BigNumber'; // Special: weird mashup with Decimal\n    if (x.constructor && x.constructor.name) return x.constructor.name;\n    return 'Object'; // just in case\n  }\n  return t; // can be 'string', 'number', 'boolean', 'function', 'bigint', ...\n}","import { isBigNumber, isObject } from './is.js';\n\n/**\n * Clone an object\n *\n *     clone(x)\n *\n * Can clone any primitive type, array, and object.\n * If x has a function clone, this function will be invoked to clone the object.\n *\n * @param {*} x\n * @return {*} clone\n */\nexport function clone(x) {\n  var type = typeof x;\n\n  // immutable primitive types\n  if (type === 'number' || type === 'bigint' || type === 'string' || type === 'boolean' || x === null || x === undefined) {\n    return x;\n  }\n\n  // use clone function of the object when available\n  if (typeof x.clone === 'function') {\n    return x.clone();\n  }\n\n  // array\n  if (Array.isArray(x)) {\n    return x.map(function (value) {\n      return clone(value);\n    });\n  }\n  if (x instanceof Date) return new Date(x.valueOf());\n  if (isBigNumber(x)) return x; // bignumbers are immutable\n\n  // object\n  if (isObject(x)) {\n    return mapObject(x, clone);\n  }\n  if (type === 'function') {\n    // we assume that the function is immutable\n    return x;\n  }\n  throw new TypeError(\"Cannot clone: unknown type of value (value: \".concat(x, \")\"));\n}\n\n/**\n * Apply map to all properties of an object\n * @param {Object} object\n * @param {function} callback\n * @return {Object} Returns a copy of the object with mapped properties\n */\nexport function mapObject(object, callback) {\n  var clone = {};\n  for (var key in object) {\n    if (hasOwnProperty(object, key)) {\n      clone[key] = callback(object[key]);\n    }\n  }\n  return clone;\n}\n\n/**\n * Extend object a with the properties of object b\n * @param {Object} a\n * @param {Object} b\n * @return {Object} a\n */\nexport function extend(a, b) {\n  for (var prop in b) {\n    if (hasOwnProperty(b, prop)) {\n      a[prop] = b[prop];\n    }\n  }\n  return a;\n}\n\n/**\n * Deep extend an object a with the properties of object b\n * @param {Object} a\n * @param {Object} b\n * @returns {Object}\n */\nexport function deepExtend(a, b) {\n  // TODO: add support for Arrays to deepExtend\n  if (Array.isArray(b)) {\n    throw new TypeError('Arrays are not supported by deepExtend');\n  }\n  for (var prop in b) {\n    // We check against prop not being in Object.prototype or Function.prototype\n    // to prevent polluting for example Object.__proto__.\n    if (hasOwnProperty(b, prop) && !(prop in Object.prototype) && !(prop in Function.prototype)) {\n      if (b[prop] && b[prop].constructor === Object) {\n        if (a[prop] === undefined) {\n          a[prop] = {};\n        }\n        if (a[prop] && a[prop].constructor === Object) {\n          deepExtend(a[prop], b[prop]);\n        } else {\n          a[prop] = b[prop];\n        }\n      } else if (Array.isArray(b[prop])) {\n        throw new TypeError('Arrays are not supported by deepExtend');\n      } else {\n        a[prop] = b[prop];\n      }\n    }\n  }\n  return a;\n}\n\n/**\n * Deep test equality of all fields in two pairs of arrays or objects.\n * Compares values and functions strictly (ie. 2 is not the same as '2').\n * @param {Array | Object} a\n * @param {Array | Object} b\n * @returns {boolean}\n */\nexport function deepStrictEqual(a, b) {\n  var prop, i, len;\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b)) {\n      return false;\n    }\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (i = 0, len = a.length; i < len; i++) {\n      if (!deepStrictEqual(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  } else if (typeof a === 'function') {\n    return a === b;\n  } else if (a instanceof Object) {\n    if (Array.isArray(b) || !(b instanceof Object)) {\n      return false;\n    }\n    for (prop in a) {\n      // noinspection JSUnfilteredForInLoop\n      if (!(prop in b) || !deepStrictEqual(a[prop], b[prop])) {\n        return false;\n      }\n    }\n    for (prop in b) {\n      // noinspection JSUnfilteredForInLoop\n      if (!(prop in a)) {\n        return false;\n      }\n    }\n    return true;\n  } else {\n    return a === b;\n  }\n}\n\n/**\n * Recursively flatten a nested object.\n * @param {Object} nestedObject\n * @return {Object} Returns the flattened object\n */\nexport function deepFlatten(nestedObject) {\n  var flattenedObject = {};\n  _deepFlatten(nestedObject, flattenedObject);\n  return flattenedObject;\n}\n\n// helper function used by deepFlatten\nfunction _deepFlatten(nestedObject, flattenedObject) {\n  for (var prop in nestedObject) {\n    if (hasOwnProperty(nestedObject, prop)) {\n      var value = nestedObject[prop];\n      if (typeof value === 'object' && value !== null) {\n        _deepFlatten(value, flattenedObject);\n      } else {\n        flattenedObject[prop] = value;\n      }\n    }\n  }\n}\n\n/**\n * Test whether the current JavaScript engine supports Object.defineProperty\n * @returns {boolean} returns true if supported\n */\nexport function canDefineProperty() {\n  // test needed for broken IE8 implementation\n  try {\n    if (Object.defineProperty) {\n      Object.defineProperty({}, 'x', {\n        get: function get() {\n          return null;\n        }\n      });\n      return true;\n    }\n  } catch (e) {}\n  return false;\n}\n\n/**\n * Attach a lazy loading property to a constant.\n * The given function `fn` is called once when the property is first requested.\n *\n * @param {Object} object         Object where to add the property\n * @param {string} prop           Property name\n * @param {Function} valueResolver Function returning the property value. Called\n *                                without arguments.\n */\nexport function lazy(object, prop, valueResolver) {\n  var _uninitialized = true;\n  var _value;\n  Object.defineProperty(object, prop, {\n    get: function get() {\n      if (_uninitialized) {\n        _value = valueResolver();\n        _uninitialized = false;\n      }\n      return _value;\n    },\n    set: function set(value) {\n      _value = value;\n      _uninitialized = false;\n    },\n    configurable: true,\n    enumerable: true\n  });\n}\n\n/**\n * Traverse a path into an object.\n * When a namespace is missing, it will be created\n * @param {Object} object\n * @param {string | string[]} path   A dot separated string like 'name.space'\n * @return {Object} Returns the object at the end of the path\n */\nexport function traverse(object, path) {\n  if (path && typeof path === 'string') {\n    return traverse(object, path.split('.'));\n  }\n  var obj = object;\n  if (path) {\n    for (var i = 0; i < path.length; i++) {\n      var key = path[i];\n      if (!(key in obj)) {\n        obj[key] = {};\n      }\n      obj = obj[key];\n    }\n  }\n  return obj;\n}\n\n/**\n * A safe hasOwnProperty\n * @param {Object} object\n * @param {string} property\n */\nexport function hasOwnProperty(object, property) {\n  return object && Object.hasOwnProperty.call(object, property);\n}\n\n/**\n * Test whether an object is a factory. a factory has fields:\n *\n * - factory: function (type: Object, config: Object, load: function, typed: function [, math: Object])   (required)\n * - name: string (optional)\n * - path: string    A dot separated path (optional)\n * - math: boolean   If true (false by default), the math namespace is passed\n *                   as fifth argument of the factory function\n *\n * @param {*} object\n * @returns {boolean}\n */\nexport function isLegacyFactory(object) {\n  return object && typeof object.factory === 'function';\n}\n\n/**\n * Get a nested property from an object\n * @param {Object} object\n * @param {string | string[]} path\n * @returns {Object}\n */\nexport function get(object, path) {\n  if (typeof path === 'string') {\n    if (isPath(path)) {\n      return get(object, path.split('.'));\n    } else {\n      return object[path];\n    }\n  }\n  var child = object;\n  for (var i = 0; i < path.length; i++) {\n    var key = path[i];\n    child = child ? child[key] : undefined;\n  }\n  return child;\n}\n\n/**\n * Set a nested property in an object\n * Mutates the object itself\n * If the path doesn't exist, it will be created\n * @param {Object} object\n * @param {string | string[]} path\n * @param {*} value\n * @returns {Object}\n */\nexport function set(object, path, value) {\n  if (typeof path === 'string') {\n    if (isPath(path)) {\n      return set(object, path.split('.'), value);\n    } else {\n      object[path] = value;\n      return object;\n    }\n  }\n  var child = object;\n  for (var i = 0; i < path.length - 1; i++) {\n    var key = path[i];\n    if (child[key] === undefined) {\n      child[key] = {};\n    }\n    child = child[key];\n  }\n  if (path.length > 0) {\n    var lastKey = path[path.length - 1];\n    child[lastKey] = value;\n  }\n  return object;\n}\n\n/**\n * Create an object composed of the picked object properties\n * @param {Object} object\n * @param {string[]} properties\n * @param {function} [transform] Optional value to transform a value when picking it\n * @return {Object}\n */\nexport function pick(object, properties, transform) {\n  var copy = {};\n  for (var i = 0; i < properties.length; i++) {\n    var key = properties[i];\n    var value = get(object, key);\n    if (value !== undefined) {\n      set(copy, key, transform ? transform(value, key) : value);\n    }\n  }\n  return copy;\n}\n\n/**\n * Shallow version of pick, creating an object composed of the picked object properties\n * but not for nested properties\n * @param {Object} object\n * @param {string[]} properties\n * @return {Object}\n */\nexport function pickShallow(object, properties) {\n  var copy = {};\n  for (var i = 0; i < properties.length; i++) {\n    var key = properties[i];\n    var value = object[key];\n    if (value !== undefined) {\n      copy[key] = value;\n    }\n  }\n  return copy;\n}\n\n// helper function to test whether a string contains a path like 'user.name'\nfunction isPath(str) {\n  return str.includes('.');\n}","import { clone, deepExtend } from '../../utils/object.js';\nimport { DEFAULT_CONFIG } from '../config.js';\nexport var MATRIX_OPTIONS = ['Matrix', 'Array']; // valid values for option matrix\nexport var NUMBER_OPTIONS = ['number', 'BigNumber', 'Fraction']; // valid values for option number\n\nexport function configFactory(config, emit) {\n  /**\n   * Set configuration options for math.js, and get current options.\n   * Will emit a 'config' event, with arguments (curr, prev, changes).\n   *\n   * This function is only available on a mathjs instance created using `create`.\n   *\n   * Syntax:\n   *\n   *     math.config(config: Object): Object\n   *\n   * Examples:\n   *\n   *\n   *     import { create, all } from 'mathjs'\n   *\n   *     // create a mathjs instance\n   *     const math = create(all)\n   *\n   *     math.config().number                // outputs 'number'\n   *     math.evaluate('0.4')                // outputs number 0.4\n   *     math.config({number: 'Fraction'})\n   *     math.evaluate('0.4')                // outputs Fraction 2/5\n   *\n   * @param {Object} [options] Available options:\n   *                            {number} relTol\n   *                              Minimum relative difference between two\n   *                              compared values, used by all comparison functions.\n   *                            {number} absTol\n   *                              Minimum absolute difference between two\n   *                              compared values, used by all comparison functions.\n   *                            {string} matrix\n   *                              A string 'Matrix' (default) or 'Array'.\n   *                            {string} number\n   *                              A string 'number' (default), 'BigNumber', 'bigint', or 'Fraction'\n   *                            {number} precision\n   *                              The number of significant digits for BigNumbers.\n   *                              Not applicable for Numbers.\n   *                            {string} parenthesis\n   *                              How to display parentheses in LaTeX and string\n   *                              output.\n   *                            {string} randomSeed\n   *                              Random seed for seeded pseudo random number generator.\n   *                              Set to null to randomly seed.\n   * @return {Object} Returns the current configuration\n   */\n  function _config(options) {\n    if (options) {\n      if (options.epsilon !== undefined) {\n        // this if is only for backwards compatibility, it can be removed in the future.\n        console.warn('Warning: The configuration option \"epsilon\" is deprecated. Use \"relTol\" and \"absTol\" instead.');\n        var optionsFix = clone(options);\n        optionsFix.relTol = options.epsilon;\n        optionsFix.absTol = options.epsilon * 1e-3;\n        delete optionsFix.epsilon;\n        return _config(optionsFix);\n      }\n      var prev = clone(config);\n\n      // validate some of the options\n      validateOption(options, 'matrix', MATRIX_OPTIONS);\n      validateOption(options, 'number', NUMBER_OPTIONS);\n\n      // merge options\n      deepExtend(config, options);\n      var curr = clone(config);\n      var changes = clone(options);\n\n      // emit 'config' event\n      emit('config', curr, prev, changes);\n      return curr;\n    } else {\n      return clone(config);\n    }\n  }\n\n  // attach the valid options to the function so they can be extended\n  _config.MATRIX_OPTIONS = MATRIX_OPTIONS;\n  _config.NUMBER_OPTIONS = NUMBER_OPTIONS;\n\n  // attach the config properties as readonly properties to the config function\n  Object.keys(DEFAULT_CONFIG).forEach(key => {\n    Object.defineProperty(_config, key, {\n      get: () => config[key],\n      enumerable: true,\n      configurable: true\n    });\n  });\n  return _config;\n}\n\n/**\n * Validate an option\n * @param {Object} options         Object with options\n * @param {string} name            Name of the option to validate\n * @param {Array.<string>} values  Array with valid values for this option\n */\nfunction validateOption(options, name, values) {\n  if (options[name] !== undefined && !values.includes(options[name])) {\n    // unknown value\n    console.warn('Warning: Unknown value \"' + options[name] + '\" for configuration option \"' + name + '\". ' + 'Available options: ' + values.map(value => JSON.stringify(value)).join(', ') + '.');\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport { DEFAULT_CONFIG } from '../core/config.js';\nimport { MATRIX_OPTIONS, NUMBER_OPTIONS } from '../core/function/config.js';\n\n// create a read-only version of config\nexport var config = function config(options) {\n  if (options) {\n    throw new Error('The global config is readonly. \\n' + 'Please create a mathjs instance if you want to change the default configuration. \\n' + 'Example:\\n' + '\\n' + '  import { create, all } from \\'mathjs\\';\\n' + '  const mathjs = create(all);\\n' + '  mathjs.config({ number: \\'BigNumber\\' });\\n');\n  }\n  return Object.freeze(DEFAULT_CONFIG);\n};\n_extends(config, DEFAULT_CONFIG, {\n  MATRIX_OPTIONS,\n  NUMBER_OPTIONS\n});","function ok() {\n  return true;\n}\nfunction notOk() {\n  return false;\n}\nfunction undef() {\n  return undefined;\n}\nconst NOT_TYPED_FUNCTION = 'Argument is not a typed-function.';\n\n/**\n * @typedef {{\n *   params: Param[],\n *   fn: function,\n *   test: function,\n *   implementation: function\n * }} Signature\n *\n * @typedef {{\n *   types: Type[],\n *   hasAny: boolean,\n *   hasConversion: boolean,\n *   restParam: boolean\n * }} Param\n *\n * @typedef {{\n *   name: string,\n *   typeIndex: number,\n *   test: function,\n *   isAny: boolean,\n *   conversion?: ConversionDef,\n *   conversionIndex: number,\n * }} Type\n *\n * @typedef {{\n *   from: string,\n *   to: string,\n *   convert: function (*) : *\n * }} ConversionDef\n *\n * @typedef {{\n *   name: string,\n *   test: function(*) : boolean,\n *   isAny?: boolean\n * }} TypeDef\n */\n\n/**\n * @returns {() => function}\n */\nfunction create() {\n  // data type tests\n\n  /**\n   * Returns true if the argument is a non-null \"plain\" object\n   */\n  function isPlainObject(x) {\n    return typeof x === 'object' && x !== null && x.constructor === Object;\n  }\n  const _types = [{\n    name: 'number',\n    test: function (x) {\n      return typeof x === 'number';\n    }\n  }, {\n    name: 'string',\n    test: function (x) {\n      return typeof x === 'string';\n    }\n  }, {\n    name: 'boolean',\n    test: function (x) {\n      return typeof x === 'boolean';\n    }\n  }, {\n    name: 'Function',\n    test: function (x) {\n      return typeof x === 'function';\n    }\n  }, {\n    name: 'Array',\n    test: Array.isArray\n  }, {\n    name: 'Date',\n    test: function (x) {\n      return x instanceof Date;\n    }\n  }, {\n    name: 'RegExp',\n    test: function (x) {\n      return x instanceof RegExp;\n    }\n  }, {\n    name: 'Object',\n    test: isPlainObject\n  }, {\n    name: 'null',\n    test: function (x) {\n      return x === null;\n    }\n  }, {\n    name: 'undefined',\n    test: function (x) {\n      return x === undefined;\n    }\n  }];\n  const anyType = {\n    name: 'any',\n    test: ok,\n    isAny: true\n  };\n\n  // Data structures to track the types. As these are local variables in\n  // create(), each typed universe will get its own copy, but the variables\n  // will only be accessible through the (closures of the) functions supplied\n  // as properties of the typed object, not directly.\n  // These will be initialized in clear() below\n  let typeMap; // primary store of all types\n  let typeList; // Array of just type names, for the sake of ordering\n\n  // And similar data structures for the type conversions:\n  let nConversions = 0;\n  // the actual conversions are stored on a property of the destination types\n\n  // This is a temporary object, will be replaced with a function at the end\n  let typed = {\n    createCount: 0\n  };\n\n  /**\n   * Takes a type name and returns the corresponding official type object\n   * for that type.\n   *\n   * @param {string} typeName\n   * @returns {TypeDef} type\n   */\n  function findType(typeName) {\n    const type = typeMap.get(typeName);\n    if (type) {\n      return type;\n    }\n    // Remainder is error handling\n    let message = 'Unknown type \"' + typeName + '\"';\n    const name = typeName.toLowerCase();\n    let otherName;\n    for (otherName of typeList) {\n      if (otherName.toLowerCase() === name) {\n        message += '. Did you mean \"' + otherName + '\" ?';\n        break;\n      }\n    }\n    throw new TypeError(message);\n  }\n\n  /**\n   * Adds an array `types` of type definitions to this typed instance.\n   * Each type definition should be an object with properties:\n   * 'name' - a string giving the name of the type; 'test' - function\n   * returning a boolean that tests membership in the type; and optionally\n   * 'isAny' - true only for the 'any' type.\n   *\n   * The second optional argument, `before`, gives the name of a type that\n   * these types should be added before. The new types are added in the\n   * order specified.\n   * @param {TypeDef[]} types\n   * @param {string | boolean} [beforeSpec='any'] before\n   */\n  function addTypes(types) {\n    let beforeSpec = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'any';\n    const beforeIndex = beforeSpec ? findType(beforeSpec).index : typeList.length;\n    const newTypes = [];\n    for (let i = 0; i < types.length; ++i) {\n      if (!types[i] || typeof types[i].name !== 'string' || typeof types[i].test !== 'function') {\n        throw new TypeError('Object with properties {name: string, test: function} expected');\n      }\n      const typeName = types[i].name;\n      if (typeMap.has(typeName)) {\n        throw new TypeError('Duplicate type name \"' + typeName + '\"');\n      }\n      newTypes.push(typeName);\n      typeMap.set(typeName, {\n        name: typeName,\n        test: types[i].test,\n        isAny: types[i].isAny,\n        index: beforeIndex + i,\n        conversionsTo: [] // Newly added type can't have any conversions to it\n      });\n    }\n    // update the typeList\n    const affectedTypes = typeList.slice(beforeIndex);\n    typeList = typeList.slice(0, beforeIndex).concat(newTypes).concat(affectedTypes);\n    // Fix the indices\n    for (let i = beforeIndex + newTypes.length; i < typeList.length; ++i) {\n      typeMap.get(typeList[i]).index = i;\n    }\n  }\n\n  /**\n   * Removes all types and conversions from this typed instance.\n   * May cause previously constructed typed-functions to throw\n   * strange errors when they are called with types that do not\n   * match any of their signatures.\n   */\n  function clear() {\n    typeMap = new Map();\n    typeList = [];\n    nConversions = 0;\n    addTypes([anyType], false);\n  }\n\n  // initialize the types to the default list\n  clear();\n  addTypes(_types);\n\n  /**\n   * Removes all conversions, leaving the types alone.\n   */\n  function clearConversions() {\n    let typeName;\n    for (typeName of typeList) {\n      typeMap.get(typeName).conversionsTo = [];\n    }\n    nConversions = 0;\n  }\n\n  /**\n   * Find the type names that match a value.\n   * @param {*} value\n   * @return {string[]} Array of names of types for which\n   *                  the type test matches the value.\n   */\n  function findTypeNames(value) {\n    const matches = typeList.filter(name => {\n      const type = typeMap.get(name);\n      return !type.isAny && type.test(value);\n    });\n    if (matches.length) {\n      return matches;\n    }\n    return ['any'];\n  }\n\n  /**\n   * Check if an entity is a typed function created by any instance\n   * @param {any} entity\n   * @returns {boolean}\n   */\n  function isTypedFunction(entity) {\n    return entity && typeof entity === 'function' && '_typedFunctionData' in entity;\n  }\n\n  /**\n   * Find a specific signature from a (composed) typed function, for example:\n   *\n   *   typed.findSignature(fn, ['number', 'string'])\n   *   typed.findSignature(fn, 'number, string')\n   *   typed.findSignature(fn, 'number,string', {exact: true})\n   *\n   * This function findSignature will by default return the best match to\n   * the given signature, possibly employing type conversions.\n   *\n   * The (optional) third argument is a plain object giving options\n   * controlling the signature search. Currently the only implemented\n   * option is `exact`: if specified as true (default is false), only\n   * exact matches will be returned (i.e. signatures for which `fn` was\n   * directly defined). Note that a (possibly different) type matching\n   * `any`, or one or more instances of TYPE matching `...TYPE` are\n   * considered exact matches in this regard, as no conversions are used.\n   *\n   * This function returns a \"signature\" object, as does `typed.resolve()`,\n   * which is a plain object with four keys: `params` (the array of parameters\n   * for this signature), `fn` (the originally supplied function for this\n   * signature), `test` (a generated function that determines if an argument\n   * list matches this signature, and `implementation` (the function to call\n   * on a matching argument list, that performs conversions if necessary and\n   * then calls the originally supplied function).\n   *\n   * @param {Function} fn                   A typed-function\n   * @param {string | string[]} signature\n   *     Signature to be found, can be an array or a comma separated string.\n   * @param {object} options  Controls the signature search as documented\n   * @return {{ params: Param[], fn: function, test: function, implementation: function }}\n   *     Returns the matching signature, or throws an error when no signature\n   *     is found.\n   */\n  function findSignature(fn, signature, options) {\n    if (!isTypedFunction(fn)) {\n      throw new TypeError(NOT_TYPED_FUNCTION);\n    }\n\n    // Canonicalize input\n    const exact = options && options.exact;\n    const stringSignature = Array.isArray(signature) ? signature.join(',') : signature;\n    const params = parseSignature(stringSignature);\n    const canonicalSignature = stringifyParams(params);\n\n    // First hope we get lucky and exactly match a signature\n    if (!exact || canonicalSignature in fn.signatures) {\n      // OK, we can check the internal signatures\n      const match = fn._typedFunctionData.signatureMap.get(canonicalSignature);\n      if (match) {\n        return match;\n      }\n    }\n\n    // Oh well, we did not; so we have to go back and check the parameters\n    // one by one, in order to catch things like `any` and rest params.\n    // Note here we can assume there is at least one parameter, because\n    // the empty signature would have matched successfully above.\n    const nParams = params.length;\n    let remainingSignatures;\n    if (exact) {\n      remainingSignatures = [];\n      let name;\n      for (name in fn.signatures) {\n        remainingSignatures.push(fn._typedFunctionData.signatureMap.get(name));\n      }\n    } else {\n      remainingSignatures = fn._typedFunctionData.signatures;\n    }\n    for (let i = 0; i < nParams; ++i) {\n      const want = params[i];\n      const filteredSignatures = [];\n      let possibility;\n      for (possibility of remainingSignatures) {\n        const have = getParamAtIndex(possibility.params, i);\n        if (!have || want.restParam && !have.restParam) {\n          continue;\n        }\n        if (!have.hasAny) {\n          // have to check all of the wanted types are available\n          const haveTypes = paramTypeSet(have);\n          if (want.types.some(wtype => !haveTypes.has(wtype.name))) {\n            continue;\n          }\n        }\n        // OK, this looks good\n        filteredSignatures.push(possibility);\n      }\n      remainingSignatures = filteredSignatures;\n      if (remainingSignatures.length === 0) break;\n    }\n    // Return the first remaining signature that was totally matched:\n    let candidate;\n    for (candidate of remainingSignatures) {\n      if (candidate.params.length <= nParams) {\n        return candidate;\n      }\n    }\n    throw new TypeError('Signature not found (signature: ' + (fn.name || 'unnamed') + '(' + stringifyParams(params, ', ') + '))');\n  }\n\n  /**\n   * Find the proper function to call for a specific signature from\n   * a (composed) typed function, for example:\n   *\n   *   typed.find(fn, ['number', 'string'])\n   *   typed.find(fn, 'number, string')\n   *   typed.find(fn, 'number,string', {exact: true})\n   *\n   * This function find will by default return the best match to\n   * the given signature, possibly employing type conversions (and returning\n   * a function that will perform those conversions as needed). The\n   * (optional) third argument is a plain object giving options contolling\n   * the signature search. Currently only the option `exact` is implemented,\n   * which defaults to \"false\". If `exact` is specified as true, then only\n   * exact matches will be returned (i.e. signatures for which `fn` was\n   * directly defined). Uses of `any` and `...TYPE` are considered exact if\n   * no conversions are necessary to apply the corresponding function.\n   *\n   * @param {Function} fn                   A typed-function\n   * @param {string | string[]} signature\n   *     Signature to be found, can be an array or a comma separated string.\n   * @param {object} options  Controls the signature match as documented\n   * @return {function}\n   *     Returns the function to call for the given signature, or throws an\n   *     error if no match is found.\n   */\n  function find(fn, signature, options) {\n    return findSignature(fn, signature, options).implementation;\n  }\n\n  /**\n   * Convert a given value to another data type, specified by type name.\n   *\n   * @param {*} value\n   * @param {string} typeName\n   */\n  function convert(value, typeName) {\n    // check conversion is needed\n    const type = findType(typeName);\n    if (type.test(value)) {\n      return value;\n    }\n    const conversions = type.conversionsTo;\n    if (conversions.length === 0) {\n      throw new Error('There are no conversions to ' + typeName + ' defined.');\n    }\n    for (let i = 0; i < conversions.length; i++) {\n      const fromType = findType(conversions[i].from);\n      if (fromType.test(value)) {\n        return conversions[i].convert(value);\n      }\n    }\n    throw new Error('Cannot convert ' + value + ' to ' + typeName);\n  }\n\n  /**\n   * Stringify parameters in a normalized way\n   * @param {Param[]} params\n   * @param {string} [','] separator\n   * @return {string}\n   */\n  function stringifyParams(params) {\n    let separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ',';\n    return params.map(p => p.name).join(separator);\n  }\n\n  /**\n   * Parse a parameter, like \"...number | boolean\"\n   * @param {string} param\n   * @return {Param} param\n   */\n  function parseParam(param) {\n    const restParam = param.indexOf('...') === 0;\n    const types = !restParam ? param : param.length > 3 ? param.slice(3) : 'any';\n    const typeDefs = types.split('|').map(s => findType(s.trim()));\n    let hasAny = false;\n    let paramName = restParam ? '...' : '';\n    const exactTypes = typeDefs.map(function (type) {\n      hasAny = type.isAny || hasAny;\n      paramName += type.name + '|';\n      return {\n        name: type.name,\n        typeIndex: type.index,\n        test: type.test,\n        isAny: type.isAny,\n        conversion: null,\n        conversionIndex: -1\n      };\n    });\n    return {\n      types: exactTypes,\n      name: paramName.slice(0, -1),\n      // remove trailing '|' from above\n      hasAny,\n      hasConversion: false,\n      restParam\n    };\n  }\n\n  /**\n   * Expands a parsed parameter with the types available from currently\n   * defined conversions.\n   * @param {Param} param\n   * @return {Param} param\n   */\n  function expandParam(param) {\n    const typeNames = param.types.map(t => t.name);\n    const matchingConversions = availableConversions(typeNames);\n    let hasAny = param.hasAny;\n    let newName = param.name;\n    const convertibleTypes = matchingConversions.map(function (conversion) {\n      const type = findType(conversion.from);\n      hasAny = type.isAny || hasAny;\n      newName += '|' + conversion.from;\n      return {\n        name: conversion.from,\n        typeIndex: type.index,\n        test: type.test,\n        isAny: type.isAny,\n        conversion,\n        conversionIndex: conversion.index\n      };\n    });\n    return {\n      types: param.types.concat(convertibleTypes),\n      name: newName,\n      hasAny,\n      hasConversion: convertibleTypes.length > 0,\n      restParam: param.restParam\n    };\n  }\n\n  /**\n   * Return the set of type names in a parameter.\n   * Caches the result for efficiency\n   *\n   * @param {Param} param\n   * @return {Set<string>} typenames\n   */\n  function paramTypeSet(param) {\n    if (!param.typeSet) {\n      param.typeSet = new Set();\n      param.types.forEach(type => param.typeSet.add(type.name));\n    }\n    return param.typeSet;\n  }\n\n  /**\n   * Parse a signature with comma separated parameters,\n   * like \"number | boolean, ...string\"\n   *\n   * @param {string} signature\n   * @return {Param[]} params\n   */\n  function parseSignature(rawSignature) {\n    const params = [];\n    if (typeof rawSignature !== 'string') {\n      throw new TypeError('Signatures must be strings');\n    }\n    const signature = rawSignature.trim();\n    if (signature === '') {\n      return params;\n    }\n    const rawParams = signature.split(',');\n    for (let i = 0; i < rawParams.length; ++i) {\n      const parsedParam = parseParam(rawParams[i].trim());\n      if (parsedParam.restParam && i !== rawParams.length - 1) {\n        throw new SyntaxError('Unexpected rest parameter \"' + rawParams[i] + '\": ' + 'only allowed for the last parameter');\n      }\n      // if invalid, short-circuit (all the types may have been filtered)\n      if (parsedParam.types.length === 0) {\n        return null;\n      }\n      params.push(parsedParam);\n    }\n    return params;\n  }\n\n  /**\n   * Test whether a set of params contains a restParam\n   * @param {Param[]} params\n   * @return {boolean} Returns true when the last parameter is a restParam\n   */\n  function hasRestParam(params) {\n    const param = last(params);\n    return param ? param.restParam : false;\n  }\n\n  /**\n   * Create a type test for a single parameter, which can have one or multiple\n   * types.\n   * @param {Param} param\n   * @return {function(x: *) : boolean} Returns a test function\n   */\n  function compileTest(param) {\n    if (!param || param.types.length === 0) {\n      // nothing to do\n      return ok;\n    } else if (param.types.length === 1) {\n      return findType(param.types[0].name).test;\n    } else if (param.types.length === 2) {\n      const test0 = findType(param.types[0].name).test;\n      const test1 = findType(param.types[1].name).test;\n      return function or(x) {\n        return test0(x) || test1(x);\n      };\n    } else {\n      // param.types.length > 2\n      const tests = param.types.map(function (type) {\n        return findType(type.name).test;\n      });\n      return function or(x) {\n        for (let i = 0; i < tests.length; i++) {\n          if (tests[i](x)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n  }\n\n  /**\n   * Create a test for all parameters of a signature\n   * @param {Param[]} params\n   * @return {function(args: Array<*>) : boolean}\n   */\n  function compileTests(params) {\n    let tests, test0, test1;\n    if (hasRestParam(params)) {\n      // variable arguments like '...number'\n      tests = initial(params).map(compileTest);\n      const varIndex = tests.length;\n      const lastTest = compileTest(last(params));\n      const testRestParam = function (args) {\n        for (let i = varIndex; i < args.length; i++) {\n          if (!lastTest(args[i])) {\n            return false;\n          }\n        }\n        return true;\n      };\n      return function testArgs(args) {\n        for (let i = 0; i < tests.length; i++) {\n          if (!tests[i](args[i])) {\n            return false;\n          }\n        }\n        return testRestParam(args) && args.length >= varIndex + 1;\n      };\n    } else {\n      // no variable arguments\n      if (params.length === 0) {\n        return function testArgs(args) {\n          return args.length === 0;\n        };\n      } else if (params.length === 1) {\n        test0 = compileTest(params[0]);\n        return function testArgs(args) {\n          return test0(args[0]) && args.length === 1;\n        };\n      } else if (params.length === 2) {\n        test0 = compileTest(params[0]);\n        test1 = compileTest(params[1]);\n        return function testArgs(args) {\n          return test0(args[0]) && test1(args[1]) && args.length === 2;\n        };\n      } else {\n        // arguments.length > 2\n        tests = params.map(compileTest);\n        return function testArgs(args) {\n          for (let i = 0; i < tests.length; i++) {\n            if (!tests[i](args[i])) {\n              return false;\n            }\n          }\n          return args.length === tests.length;\n        };\n      }\n    }\n  }\n\n  /**\n   * Find the parameter at a specific index of a Params list.\n   * Handles rest parameters.\n   * @param {Param[]} params\n   * @param {number} index\n   * @return {Param | null} Returns the matching parameter when found,\n   *                        null otherwise.\n   */\n  function getParamAtIndex(params, index) {\n    return index < params.length ? params[index] : hasRestParam(params) ? last(params) : null;\n  }\n\n  /**\n   * Get all type names of a parameter\n   * @param {Params[]} params\n   * @param {number} index\n   * @return {string[]} Returns an array with type names\n   */\n  function getTypeSetAtIndex(params, index) {\n    const param = getParamAtIndex(params, index);\n    if (!param) {\n      return new Set();\n    }\n    return paramTypeSet(param);\n  }\n\n  /**\n   * Test whether a type is an exact type or conversion\n   * @param {Type} type\n   * @return {boolean} Returns true when\n   */\n  function isExactType(type) {\n    return type.conversion === null || type.conversion === undefined;\n  }\n\n  /**\n   * Helper function for creating error messages: create an array with\n   * all available types on a specific argument index.\n   * @param {Signature[]} signatures\n   * @param {number} index\n   * @return {string[]} Returns an array with available types\n   */\n  function mergeExpectedParams(signatures, index) {\n    const typeSet = new Set();\n    signatures.forEach(signature => {\n      const paramSet = getTypeSetAtIndex(signature.params, index);\n      let name;\n      for (name of paramSet) {\n        typeSet.add(name);\n      }\n    });\n    return typeSet.has('any') ? ['any'] : Array.from(typeSet);\n  }\n\n  /**\n   * Create\n   * @param {string} name             The name of the function\n   * @param {array.<*>} args          The actual arguments passed to the function\n   * @param {Signature[]} signatures  A list with available signatures\n   * @return {TypeError} Returns a type error with additional data\n   *                     attached to it in the property `data`\n   */\n  function createError(name, args, signatures) {\n    let err, expected;\n    const _name = name || 'unnamed';\n\n    // test for wrong type at some index\n    let matchingSignatures = signatures;\n    let index;\n    for (index = 0; index < args.length; index++) {\n      const nextMatchingDefs = [];\n      matchingSignatures.forEach(signature => {\n        const param = getParamAtIndex(signature.params, index);\n        const test = compileTest(param);\n        if ((index < signature.params.length || hasRestParam(signature.params)) && test(args[index])) {\n          nextMatchingDefs.push(signature);\n        }\n      });\n      if (nextMatchingDefs.length === 0) {\n        // no matching signatures anymore, throw error \"wrong type\"\n        expected = mergeExpectedParams(matchingSignatures, index);\n        if (expected.length > 0) {\n          const actualTypes = findTypeNames(args[index]);\n          err = new TypeError('Unexpected type of argument in function ' + _name + ' (expected: ' + expected.join(' or ') + ', actual: ' + actualTypes.join(' | ') + ', index: ' + index + ')');\n          err.data = {\n            category: 'wrongType',\n            fn: _name,\n            index,\n            actual: actualTypes,\n            expected\n          };\n          return err;\n        }\n      } else {\n        matchingSignatures = nextMatchingDefs;\n      }\n    }\n\n    // test for too few arguments\n    const lengths = matchingSignatures.map(function (signature) {\n      return hasRestParam(signature.params) ? Infinity : signature.params.length;\n    });\n    if (args.length < Math.min.apply(null, lengths)) {\n      expected = mergeExpectedParams(matchingSignatures, index);\n      err = new TypeError('Too few arguments in function ' + _name + ' (expected: ' + expected.join(' or ') + ', index: ' + args.length + ')');\n      err.data = {\n        category: 'tooFewArgs',\n        fn: _name,\n        index: args.length,\n        expected\n      };\n      return err;\n    }\n\n    // test for too many arguments\n    const maxLength = Math.max.apply(null, lengths);\n    if (args.length > maxLength) {\n      err = new TypeError('Too many arguments in function ' + _name + ' (expected: ' + maxLength + ', actual: ' + args.length + ')');\n      err.data = {\n        category: 'tooManyArgs',\n        fn: _name,\n        index: args.length,\n        expectedLength: maxLength\n      };\n      return err;\n    }\n\n    // Generic error\n    const argTypes = [];\n    for (let i = 0; i < args.length; ++i) {\n      argTypes.push(findTypeNames(args[i]).join('|'));\n    }\n    err = new TypeError('Arguments of type \"' + argTypes.join(', ') + '\" do not match any of the defined signatures of function ' + _name + '.');\n    err.data = {\n      category: 'mismatch',\n      actual: argTypes\n    };\n    return err;\n  }\n\n  /**\n   * Find the lowest index of all exact types of a parameter (no conversions)\n   * @param {Param} param\n   * @return {number} Returns the index of the lowest type in typed.types\n   */\n  function getLowestTypeIndex(param) {\n    let min = typeList.length + 1;\n    for (let i = 0; i < param.types.length; i++) {\n      if (isExactType(param.types[i])) {\n        min = Math.min(min, param.types[i].typeIndex);\n      }\n    }\n    return min;\n  }\n\n  /**\n   * Find the lowest index of the conversion of all types of the parameter\n   * having a conversion\n   * @param {Param} param\n   * @return {number} Returns the lowest index of the conversions of this type\n   */\n  function getLowestConversionIndex(param) {\n    let min = nConversions + 1;\n    for (let i = 0; i < param.types.length; i++) {\n      if (!isExactType(param.types[i])) {\n        min = Math.min(min, param.types[i].conversionIndex);\n      }\n    }\n    return min;\n  }\n\n  /**\n   * Compare two params\n   * @param {Param} param1\n   * @param {Param} param2\n   * @return {number} returns -1 when param1 must get a lower\n   *                  index than param2, 1 when the opposite,\n   *                  or zero when both are equal\n   */\n  function compareParams(param1, param2) {\n    // We compare a number of metrics on a param in turn:\n    // 1) 'any' parameters are the least preferred\n    if (param1.hasAny) {\n      if (!param2.hasAny) {\n        return 1;\n      }\n    } else if (param2.hasAny) {\n      return -1;\n    }\n\n    // 2) Prefer non-rest to rest parameters\n    if (param1.restParam) {\n      if (!param2.restParam) {\n        return 1;\n      }\n    } else if (param2.restParam) {\n      return -1;\n    }\n\n    // 3) Prefer exact type match to conversions\n    if (param1.hasConversion) {\n      if (!param2.hasConversion) {\n        return 1;\n      }\n    } else if (param2.hasConversion) {\n      return -1;\n    }\n\n    // 4) Prefer lower type index:\n    const typeDiff = getLowestTypeIndex(param1) - getLowestTypeIndex(param2);\n    if (typeDiff < 0) {\n      return -1;\n    }\n    if (typeDiff > 0) {\n      return 1;\n    }\n\n    // 5) Prefer lower conversion index\n    const convDiff = getLowestConversionIndex(param1) - getLowestConversionIndex(param2);\n    if (convDiff < 0) {\n      return -1;\n    }\n    if (convDiff > 0) {\n      return 1;\n    }\n\n    // Don't have a basis for preference\n    return 0;\n  }\n\n  /**\n   * Compare two signatures\n   * @param {Signature} signature1\n   * @param {Signature} signature2\n   * @return {number} returns a negative number when param1 must get a lower\n   *                  index than param2, a positive number when the opposite,\n   *                  or zero when both are equal\n   */\n  function compareSignatures(signature1, signature2) {\n    const pars1 = signature1.params;\n    const pars2 = signature2.params;\n    const last1 = last(pars1);\n    const last2 = last(pars2);\n    const hasRest1 = hasRestParam(pars1);\n    const hasRest2 = hasRestParam(pars2);\n    // We compare a number of metrics on signatures in turn:\n    // 1) An \"any rest param\" is least preferred\n    if (hasRest1 && last1.hasAny) {\n      if (!hasRest2 || !last2.hasAny) {\n        return 1;\n      }\n    } else if (hasRest2 && last2.hasAny) {\n      return -1;\n    }\n\n    // 2) Minimize the number of 'any' parameters\n    let any1 = 0;\n    let conv1 = 0;\n    let par;\n    for (par of pars1) {\n      if (par.hasAny) ++any1;\n      if (par.hasConversion) ++conv1;\n    }\n    let any2 = 0;\n    let conv2 = 0;\n    for (par of pars2) {\n      if (par.hasAny) ++any2;\n      if (par.hasConversion) ++conv2;\n    }\n    if (any1 !== any2) {\n      return any1 - any2;\n    }\n\n    // 3) A conversion rest param is less preferred\n    if (hasRest1 && last1.hasConversion) {\n      if (!hasRest2 || !last2.hasConversion) {\n        return 1;\n      }\n    } else if (hasRest2 && last2.hasConversion) {\n      return -1;\n    }\n\n    // 4) Minimize the number of conversions\n    if (conv1 !== conv2) {\n      return conv1 - conv2;\n    }\n\n    // 5) Prefer no rest param\n    if (hasRest1) {\n      if (!hasRest2) {\n        return 1;\n      }\n    } else if (hasRest2) {\n      return -1;\n    }\n\n    // 6) Prefer shorter with rest param, longer without\n    const lengthCriterion = (pars1.length - pars2.length) * (hasRest1 ? -1 : 1);\n    if (lengthCriterion !== 0) {\n      return lengthCriterion;\n    }\n\n    // Signatures are identical in each of the above metrics.\n    // In particular, they are the same length.\n    // We can therefore compare the parameters one by one.\n    // First we count which signature has more preferred parameters.\n    const comparisons = [];\n    let tc = 0;\n    for (let i = 0; i < pars1.length; ++i) {\n      const thisComparison = compareParams(pars1[i], pars2[i]);\n      comparisons.push(thisComparison);\n      tc += thisComparison;\n    }\n    if (tc !== 0) {\n      return tc;\n    }\n\n    // They have the same number of preferred parameters, so go by the\n    // earliest parameter in which we have a preference.\n    // In other words, dispatch is driven somewhat more by earlier\n    // parameters than later ones.\n    let c;\n    for (c of comparisons) {\n      if (c !== 0) {\n        return c;\n      }\n    }\n\n    // It's a tossup:\n    return 0;\n  }\n\n  /**\n   * Produce a list of all conversions from distinct types to one of\n   * the given types.\n   *\n   * @param {string[]} typeNames\n   * @return {ConversionDef[]} Returns the conversions that are available\n   *                        resulting in any given type (if any)\n   */\n  function availableConversions(typeNames) {\n    if (typeNames.length === 0) {\n      return [];\n    }\n    const types = typeNames.map(findType);\n    if (typeNames.length > 1) {\n      types.sort((t1, t2) => t1.index - t2.index);\n    }\n    let matches = types[0].conversionsTo;\n    if (typeNames.length === 1) {\n      return matches;\n    }\n    matches = matches.concat([]); // shallow copy the matches\n    // Since the types are now in index order, we just want the first\n    // occurrence of any from type:\n    const knownTypes = new Set(typeNames);\n    for (let i = 1; i < types.length; ++i) {\n      let newMatch;\n      for (newMatch of types[i].conversionsTo) {\n        if (!knownTypes.has(newMatch.from)) {\n          matches.push(newMatch);\n          knownTypes.add(newMatch.from);\n        }\n      }\n    }\n    return matches;\n  }\n\n  /**\n   * Preprocess arguments before calling the original function:\n   * - if needed convert the parameters\n   * - in case of rest parameters, move the rest parameters into an Array\n   * @param {Param[]} params\n   * @param {function} fn\n   * @return {function} Returns a wrapped function\n   */\n  function compileArgsPreprocessing(params, fn) {\n    let fnConvert = fn;\n\n    // TODO: can we make this wrapper function smarter/simpler?\n\n    if (params.some(p => p.hasConversion)) {\n      const restParam = hasRestParam(params);\n      const compiledConversions = params.map(compileArgConversion);\n      fnConvert = function convertArgs() {\n        const args = [];\n        const last = restParam ? arguments.length - 1 : arguments.length;\n        for (let i = 0; i < last; i++) {\n          args[i] = compiledConversions[i](arguments[i]);\n        }\n        if (restParam) {\n          args[last] = arguments[last].map(compiledConversions[last]);\n        }\n        return fn.apply(this, args);\n      };\n    }\n    let fnPreprocess = fnConvert;\n    if (hasRestParam(params)) {\n      const offset = params.length - 1;\n      fnPreprocess = function preprocessRestParams() {\n        return fnConvert.apply(this, slice(arguments, 0, offset).concat([slice(arguments, offset)]));\n      };\n    }\n    return fnPreprocess;\n  }\n\n  /**\n   * Compile conversion for a parameter to the right type\n   * @param {Param} param\n   * @return {function} Returns the wrapped function that will convert arguments\n   *\n   */\n  function compileArgConversion(param) {\n    let test0, test1, conversion0, conversion1;\n    const tests = [];\n    const conversions = [];\n    param.types.forEach(function (type) {\n      if (type.conversion) {\n        tests.push(findType(type.conversion.from).test);\n        conversions.push(type.conversion.convert);\n      }\n    });\n\n    // create optimized conversion functions depending on the number of conversions\n    switch (conversions.length) {\n      case 0:\n        return function convertArg(arg) {\n          return arg;\n        };\n      case 1:\n        test0 = tests[0];\n        conversion0 = conversions[0];\n        return function convertArg(arg) {\n          if (test0(arg)) {\n            return conversion0(arg);\n          }\n          return arg;\n        };\n      case 2:\n        test0 = tests[0];\n        test1 = tests[1];\n        conversion0 = conversions[0];\n        conversion1 = conversions[1];\n        return function convertArg(arg) {\n          if (test0(arg)) {\n            return conversion0(arg);\n          }\n          if (test1(arg)) {\n            return conversion1(arg);\n          }\n          return arg;\n        };\n      default:\n        return function convertArg(arg) {\n          for (let i = 0; i < conversions.length; i++) {\n            if (tests[i](arg)) {\n              return conversions[i](arg);\n            }\n          }\n          return arg;\n        };\n    }\n  }\n\n  /**\n   * Split params with union types in to separate params.\n   *\n   * For example:\n   *\n   *     splitParams([['Array', 'Object'], ['string', 'RegExp'])\n   *     // returns:\n   *     // [\n   *     //   ['Array', 'string'],\n   *     //   ['Array', 'RegExp'],\n   *     //   ['Object', 'string'],\n   *     //   ['Object', 'RegExp']\n   *     // ]\n   *\n   * @param {Param[]} params\n   * @return {Param[]}\n   */\n  function splitParams(params) {\n    function _splitParams(params, index, paramsSoFar) {\n      if (index < params.length) {\n        const param = params[index];\n        let resultingParams = [];\n        if (param.restParam) {\n          // split the types of a rest parameter in two:\n          // one with only exact types, and one with exact types and conversions\n          const exactTypes = param.types.filter(isExactType);\n          if (exactTypes.length < param.types.length) {\n            resultingParams.push({\n              types: exactTypes,\n              name: '...' + exactTypes.map(t => t.name).join('|'),\n              hasAny: exactTypes.some(t => t.isAny),\n              hasConversion: false,\n              restParam: true\n            });\n          }\n          resultingParams.push(param);\n        } else {\n          // split all the types of a regular parameter into one type per param\n          resultingParams = param.types.map(function (type) {\n            return {\n              types: [type],\n              name: type.name,\n              hasAny: type.isAny,\n              hasConversion: type.conversion,\n              restParam: false\n            };\n          });\n        }\n\n        // recurse over the groups with types\n        return flatMap(resultingParams, function (nextParam) {\n          return _splitParams(params, index + 1, paramsSoFar.concat([nextParam]));\n        });\n      } else {\n        // we've reached the end of the parameters.\n        return [paramsSoFar];\n      }\n    }\n    return _splitParams(params, 0, []);\n  }\n\n  /**\n   * Test whether two param lists represent conflicting signatures\n   * @param {Param[]} params1\n   * @param {Param[]} params2\n   * @return {boolean} Returns true when the signatures conflict, false otherwise.\n   */\n  function conflicting(params1, params2) {\n    const ii = Math.max(params1.length, params2.length);\n    for (let i = 0; i < ii; i++) {\n      const typeSet1 = getTypeSetAtIndex(params1, i);\n      const typeSet2 = getTypeSetAtIndex(params2, i);\n      let overlap = false;\n      let name;\n      for (name of typeSet2) {\n        if (typeSet1.has(name)) {\n          overlap = true;\n          break;\n        }\n      }\n      if (!overlap) {\n        return false;\n      }\n    }\n    const len1 = params1.length;\n    const len2 = params2.length;\n    const restParam1 = hasRestParam(params1);\n    const restParam2 = hasRestParam(params2);\n    return restParam1 ? restParam2 ? len1 === len2 : len2 >= len1 : restParam2 ? len1 >= len2 : len1 === len2;\n  }\n\n  /**\n   * Helper function for `resolveReferences` that returns a copy of\n   * functionList wihe any prior resolutions cleared out, in case we are\n   * recycling signatures from a prior typed function construction.\n   *\n   * @param {Array.<function|typed-reference>} functionList\n   * @return {Array.<function|typed-reference>}\n   */\n  function clearResolutions(functionList) {\n    return functionList.map(fn => {\n      if (isReferToSelf(fn)) {\n        return referToSelf(fn.referToSelf.callback);\n      }\n      if (isReferTo(fn)) {\n        return makeReferTo(fn.referTo.references, fn.referTo.callback);\n      }\n      return fn;\n    });\n  }\n\n  /**\n   * Take a list of references, a list of functions functionList, and a\n   * signatureMap indexing signatures into functionList, and return\n   * the list of resolutions, or a false-y value if they don't all\n   * resolve in a valid way (yet).\n   *\n   * @param {string[]} references\n   * @param {Array<function|typed-reference} functionList\n   * @param {Object.<string, integer>} signatureMap\n   * @return {function[] | false} resolutions\n   */\n  function collectResolutions(references, functionList, signatureMap) {\n    const resolvedReferences = [];\n    let reference;\n    for (reference of references) {\n      let resolution = signatureMap[reference];\n      if (typeof resolution !== 'number') {\n        throw new TypeError('No definition for referenced signature \"' + reference + '\"');\n      }\n      resolution = functionList[resolution];\n      if (typeof resolution !== 'function') {\n        return false;\n      }\n      resolvedReferences.push(resolution);\n    }\n    return resolvedReferences;\n  }\n\n  /**\n   * Resolve any references in the functionList for the typed function\n   * itself. The signatureMap tells which index in the functionList a\n   * given signature should be mapped to (for use in resolving typed.referTo)\n   * and self provides the destions of a typed.referToSelf.\n   *\n   * @param {Array<function | typed-reference-object>} functionList\n   * @param {Object.<string, function>} signatureMap\n   * @param {function} self  The typed-function itself\n   * @return {Array<function>} The list of resolved functions\n   */\n  function resolveReferences(functionList, signatureMap, self) {\n    const resolvedFunctions = clearResolutions(functionList);\n    const isResolved = new Array(resolvedFunctions.length).fill(false);\n    let leftUnresolved = true;\n    while (leftUnresolved) {\n      leftUnresolved = false;\n      let nothingResolved = true;\n      for (let i = 0; i < resolvedFunctions.length; ++i) {\n        if (isResolved[i]) continue;\n        const fn = resolvedFunctions[i];\n        if (isReferToSelf(fn)) {\n          resolvedFunctions[i] = fn.referToSelf.callback(self);\n          // Preserve reference in case signature is reused someday:\n          resolvedFunctions[i].referToSelf = fn.referToSelf;\n          isResolved[i] = true;\n          nothingResolved = false;\n        } else if (isReferTo(fn)) {\n          const resolvedReferences = collectResolutions(fn.referTo.references, resolvedFunctions, signatureMap);\n          if (resolvedReferences) {\n            resolvedFunctions[i] = fn.referTo.callback.apply(this, resolvedReferences);\n            // Preserve reference in case signature is reused someday:\n            resolvedFunctions[i].referTo = fn.referTo;\n            isResolved[i] = true;\n            nothingResolved = false;\n          } else {\n            leftUnresolved = true;\n          }\n        }\n      }\n      if (nothingResolved && leftUnresolved) {\n        throw new SyntaxError('Circular reference detected in resolving typed.referTo');\n      }\n    }\n    return resolvedFunctions;\n  }\n\n  /**\n   * Validate whether any of the function bodies contains a self-reference\n   * usage like `this(...)` or `this.signatures`. This self-referencing is\n   * deprecated since typed-function v3. It has been replaced with\n   * the functions typed.referTo and typed.referToSelf.\n   * @param {Object.<string, function>} signaturesMap\n   */\n  function validateDeprecatedThis(signaturesMap) {\n    // TODO: remove this deprecation warning logic some day (it's introduced in v3)\n\n    // match occurrences like 'this(' and 'this.signatures'\n    const deprecatedThisRegex = /\\bthis(\\(|\\.signatures\\b)/;\n    Object.keys(signaturesMap).forEach(signature => {\n      const fn = signaturesMap[signature];\n      if (deprecatedThisRegex.test(fn.toString())) {\n        throw new SyntaxError('Using `this` to self-reference a function ' + 'is deprecated since typed-function@3. ' + 'Use typed.referTo and typed.referToSelf instead.');\n      }\n    });\n  }\n\n  /**\n   * Create a typed function\n   * @param {String} name               The name for the typed function\n   * @param {Object.<string, function>} rawSignaturesMap\n   *                                    An object with one or\n   *                                    multiple signatures as key, and the\n   *                                    function corresponding to the\n   *                                    signature as value.\n   * @return {function}  Returns the created typed function.\n   */\n  function createTypedFunction(name, rawSignaturesMap) {\n    typed.createCount++;\n    if (Object.keys(rawSignaturesMap).length === 0) {\n      throw new SyntaxError('No signatures provided');\n    }\n    if (typed.warnAgainstDeprecatedThis) {\n      validateDeprecatedThis(rawSignaturesMap);\n    }\n\n    // Main processing loop for signatures\n    const parsedParams = [];\n    const originalFunctions = [];\n    const signaturesMap = {};\n    const preliminarySignatures = []; // may have duplicates from conversions\n    let signature;\n    for (signature in rawSignaturesMap) {\n      // A) Protect against polluted Object prototype:\n      if (!Object.prototype.hasOwnProperty.call(rawSignaturesMap, signature)) {\n        continue;\n      }\n      // B) Parse the signature\n      const params = parseSignature(signature);\n      if (!params) continue;\n      // C) Check for conflicts\n      parsedParams.forEach(function (pp) {\n        if (conflicting(pp, params)) {\n          throw new TypeError('Conflicting signatures \"' + stringifyParams(pp) + '\" and \"' + stringifyParams(params) + '\".');\n        }\n      });\n      parsedParams.push(params);\n      // D) Store the provided function and add conversions\n      const functionIndex = originalFunctions.length;\n      originalFunctions.push(rawSignaturesMap[signature]);\n      const conversionParams = params.map(expandParam);\n      // E) Split the signatures and collect them up\n      let sp;\n      for (sp of splitParams(conversionParams)) {\n        const spName = stringifyParams(sp);\n        preliminarySignatures.push({\n          params: sp,\n          name: spName,\n          fn: functionIndex\n        });\n        if (sp.every(p => !p.hasConversion)) {\n          signaturesMap[spName] = functionIndex;\n        }\n      }\n    }\n    preliminarySignatures.sort(compareSignatures);\n\n    // Note the forward reference to theTypedFn\n    const resolvedFunctions = resolveReferences(originalFunctions, signaturesMap, theTypedFn);\n\n    // Fill in the proper function for each signature\n    let s;\n    for (s in signaturesMap) {\n      if (Object.prototype.hasOwnProperty.call(signaturesMap, s)) {\n        signaturesMap[s] = resolvedFunctions[signaturesMap[s]];\n      }\n    }\n    const signatures = [];\n    const internalSignatureMap = new Map(); // benchmarks faster than object\n    for (s of preliminarySignatures) {\n      // Note it's only safe to eliminate duplicates like this\n      // _after_ the signature sorting step above; otherwise we might\n      // remove the wrong one.\n      if (!internalSignatureMap.has(s.name)) {\n        s.fn = resolvedFunctions[s.fn];\n        signatures.push(s);\n        internalSignatureMap.set(s.name, s);\n      }\n    }\n\n    // we create a highly optimized checks for the first couple of signatures with max 2 arguments\n    const ok0 = signatures[0] && signatures[0].params.length <= 2 && !hasRestParam(signatures[0].params);\n    const ok1 = signatures[1] && signatures[1].params.length <= 2 && !hasRestParam(signatures[1].params);\n    const ok2 = signatures[2] && signatures[2].params.length <= 2 && !hasRestParam(signatures[2].params);\n    const ok3 = signatures[3] && signatures[3].params.length <= 2 && !hasRestParam(signatures[3].params);\n    const ok4 = signatures[4] && signatures[4].params.length <= 2 && !hasRestParam(signatures[4].params);\n    const ok5 = signatures[5] && signatures[5].params.length <= 2 && !hasRestParam(signatures[5].params);\n    const allOk = ok0 && ok1 && ok2 && ok3 && ok4 && ok5;\n\n    // compile the tests\n    for (let i = 0; i < signatures.length; ++i) {\n      signatures[i].test = compileTests(signatures[i].params);\n    }\n    const test00 = ok0 ? compileTest(signatures[0].params[0]) : notOk;\n    const test10 = ok1 ? compileTest(signatures[1].params[0]) : notOk;\n    const test20 = ok2 ? compileTest(signatures[2].params[0]) : notOk;\n    const test30 = ok3 ? compileTest(signatures[3].params[0]) : notOk;\n    const test40 = ok4 ? compileTest(signatures[4].params[0]) : notOk;\n    const test50 = ok5 ? compileTest(signatures[5].params[0]) : notOk;\n    const test01 = ok0 ? compileTest(signatures[0].params[1]) : notOk;\n    const test11 = ok1 ? compileTest(signatures[1].params[1]) : notOk;\n    const test21 = ok2 ? compileTest(signatures[2].params[1]) : notOk;\n    const test31 = ok3 ? compileTest(signatures[3].params[1]) : notOk;\n    const test41 = ok4 ? compileTest(signatures[4].params[1]) : notOk;\n    const test51 = ok5 ? compileTest(signatures[5].params[1]) : notOk;\n\n    // compile the functions\n    for (let i = 0; i < signatures.length; ++i) {\n      signatures[i].implementation = compileArgsPreprocessing(signatures[i].params, signatures[i].fn);\n    }\n    const fn0 = ok0 ? signatures[0].implementation : undef;\n    const fn1 = ok1 ? signatures[1].implementation : undef;\n    const fn2 = ok2 ? signatures[2].implementation : undef;\n    const fn3 = ok3 ? signatures[3].implementation : undef;\n    const fn4 = ok4 ? signatures[4].implementation : undef;\n    const fn5 = ok5 ? signatures[5].implementation : undef;\n    const len0 = ok0 ? signatures[0].params.length : -1;\n    const len1 = ok1 ? signatures[1].params.length : -1;\n    const len2 = ok2 ? signatures[2].params.length : -1;\n    const len3 = ok3 ? signatures[3].params.length : -1;\n    const len4 = ok4 ? signatures[4].params.length : -1;\n    const len5 = ok5 ? signatures[5].params.length : -1;\n\n    // simple and generic, but also slow\n    const iStart = allOk ? 6 : 0;\n    const iEnd = signatures.length;\n    // de-reference ahead for execution speed:\n    const tests = signatures.map(s => s.test);\n    const fns = signatures.map(s => s.implementation);\n    const generic = function generic() {\n      'use strict';\n\n      for (let i = iStart; i < iEnd; i++) {\n        if (tests[i](arguments)) {\n          return fns[i].apply(this, arguments);\n        }\n      }\n      return typed.onMismatch(name, arguments, signatures);\n    };\n\n    // create the typed function\n    // fast, specialized version. Falls back to the slower, generic one if needed\n    function theTypedFn(arg0, arg1) {\n      'use strict';\n\n      if (arguments.length === len0 && test00(arg0) && test01(arg1)) {\n        return fn0.apply(this, arguments);\n      }\n      if (arguments.length === len1 && test10(arg0) && test11(arg1)) {\n        return fn1.apply(this, arguments);\n      }\n      if (arguments.length === len2 && test20(arg0) && test21(arg1)) {\n        return fn2.apply(this, arguments);\n      }\n      if (arguments.length === len3 && test30(arg0) && test31(arg1)) {\n        return fn3.apply(this, arguments);\n      }\n      if (arguments.length === len4 && test40(arg0) && test41(arg1)) {\n        return fn4.apply(this, arguments);\n      }\n      if (arguments.length === len5 && test50(arg0) && test51(arg1)) {\n        return fn5.apply(this, arguments);\n      }\n      return generic.apply(this, arguments);\n    }\n\n    // attach name the typed function\n    try {\n      Object.defineProperty(theTypedFn, 'name', {\n        value: name\n      });\n    } catch (err) {\n      // old browsers do not support Object.defineProperty and some don't support setting the name property\n      // the function name is not essential for the functioning, it's mostly useful for debugging,\n      // so it's fine to have unnamed functions.\n    }\n\n    // attach signatures to the function.\n    // This property is close to the original collection of signatures\n    // used to create the typed-function, just with unions split:\n    theTypedFn.signatures = signaturesMap;\n\n    // Store internal data for functions like resolve, find, etc.\n    // Also serves as the flag that this is a typed-function\n    theTypedFn._typedFunctionData = {\n      signatures,\n      signatureMap: internalSignatureMap\n    };\n    return theTypedFn;\n  }\n\n  /**\n   * Action to take on mismatch\n   * @param {string} name      Name of function that was attempted to be called\n   * @param {Array} args       Actual arguments to the call\n   * @param {Array} signatures Known signatures of the named typed-function\n   */\n  function _onMismatch(name, args, signatures) {\n    throw createError(name, args, signatures);\n  }\n\n  /**\n   * Return all but the last items of an array or function Arguments\n   * @param {Array | Arguments} arr\n   * @return {Array}\n   */\n  function initial(arr) {\n    return slice(arr, 0, arr.length - 1);\n  }\n\n  /**\n   * return the last item of an array or function Arguments\n   * @param {Array | Arguments} arr\n   * @return {*}\n   */\n  function last(arr) {\n    return arr[arr.length - 1];\n  }\n\n  /**\n   * Slice an array or function Arguments\n   * @param {Array | Arguments | IArguments} arr\n   * @param {number} start\n   * @param {number} [end]\n   * @return {Array}\n   */\n  function slice(arr, start, end) {\n    return Array.prototype.slice.call(arr, start, end);\n  }\n\n  /**\n   * Return the first item from an array for which test(arr[i]) returns true\n   * @param {Array} arr\n   * @param {function} test\n   * @return {* | undefined} Returns the first matching item\n   *                         or undefined when there is no match\n   */\n  function findInArray(arr, test) {\n    for (let i = 0; i < arr.length; i++) {\n      if (test(arr[i])) {\n        return arr[i];\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Flat map the result invoking a callback for every item in an array.\n   * https://gist.github.com/samgiles/762ee337dff48623e729\n   * @param {Array} arr\n   * @param {function} callback\n   * @return {Array}\n   */\n  function flatMap(arr, callback) {\n    return Array.prototype.concat.apply([], arr.map(callback));\n  }\n\n  /**\n   * Create a reference callback to one or multiple signatures\n   *\n   * Syntax:\n   *\n   *     typed.referTo(signature1, signature2, ..., function callback(fn1, fn2, ...) {\n   *       // ...\n   *     })\n   *\n   * @returns {{referTo: {references: string[], callback}}}\n   */\n  function referTo() {\n    const references = initial(arguments).map(s => stringifyParams(parseSignature(s)));\n    const callback = last(arguments);\n    if (typeof callback !== 'function') {\n      throw new TypeError('Callback function expected as last argument');\n    }\n    return makeReferTo(references, callback);\n  }\n  function makeReferTo(references, callback) {\n    return {\n      referTo: {\n        references,\n        callback\n      }\n    };\n  }\n\n  /**\n   * Create a reference callback to the typed-function itself\n   *\n   * @param {(self: function) => function} callback\n   * @returns {{referToSelf: { callback: function }}}\n   */\n  function referToSelf(callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('Callback function expected as first argument');\n    }\n    return {\n      referToSelf: {\n        callback\n      }\n    };\n  }\n\n  /**\n   * Test whether something is a referTo object, holding a list with reference\n   * signatures and a callback.\n   *\n   * @param {Object | function} objectOrFn\n   * @returns {boolean}\n   */\n  function isReferTo(objectOrFn) {\n    return objectOrFn && typeof objectOrFn.referTo === 'object' && Array.isArray(objectOrFn.referTo.references) && typeof objectOrFn.referTo.callback === 'function';\n  }\n\n  /**\n   * Test whether something is a referToSelf object, holding a callback where\n   * to pass `self`.\n   *\n   * @param {Object | function} objectOrFn\n   * @returns {boolean}\n   */\n  function isReferToSelf(objectOrFn) {\n    return objectOrFn && typeof objectOrFn.referToSelf === 'object' && typeof objectOrFn.referToSelf.callback === 'function';\n  }\n\n  /**\n   * Check if name is (A) new, (B) a match, or (C) a mismatch; and throw\n   * an error in case (C).\n   *\n   * @param { string | undefined } nameSoFar\n   * @param { string | undefined } newName\n   * @returns { string } updated name\n   */\n  function checkName(nameSoFar, newName) {\n    if (!nameSoFar) {\n      return newName;\n    }\n    if (newName && newName !== nameSoFar) {\n      const err = new Error('Function names do not match (expected: ' + nameSoFar + ', actual: ' + newName + ')');\n      err.data = {\n        actual: newName,\n        expected: nameSoFar\n      };\n      throw err;\n    }\n    return nameSoFar;\n  }\n\n  /**\n   * Retrieve the implied name from an object with signature keys\n   * and function values, checking whether all value names match\n   *\n   * @param { {string: function} } obj\n   */\n  function getObjectName(obj) {\n    let name;\n    for (const key in obj) {\n      // Only pay attention to own properties, and only if their values\n      // are typed functions or functions with a signature property\n      if (Object.prototype.hasOwnProperty.call(obj, key) && (isTypedFunction(obj[key]) || typeof obj[key].signature === 'string')) {\n        name = checkName(name, obj[key].name);\n      }\n    }\n    return name;\n  }\n\n  /**\n   * Copy all of the signatures from the second argument into the first,\n   * which is modified by side effect, checking for conflicts\n   *\n   * @param {Object.<string, function|typed-reference>} dest\n   * @param {Object.<string, function|typed-reference>} source\n   */\n  function mergeSignatures(dest, source) {\n    let key;\n    for (key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        if (key in dest) {\n          if (source[key] !== dest[key]) {\n            const err = new Error('Signature \"' + key + '\" is defined twice');\n            err.data = {\n              signature: key,\n              sourceFunction: source[key],\n              destFunction: dest[key]\n            };\n            throw err;\n          }\n          // else: both signatures point to the same function, that's fine\n        }\n        dest[key] = source[key];\n      }\n    }\n  }\n  const saveTyped = typed;\n\n  /**\n   * Originally the main function was a typed function itself, but then\n   * it might not be able to generate error messages if the client\n   * replaced the type system with different names.\n   *\n   * Main entry: typed([name], functions/objects with signatures...)\n   *\n   * Assembles and returns a new typed-function from the given items\n   * that provide signatures and implementations, each of which may be\n   * * a plain object mapping (string) signatures to implementing functions,\n   * * a previously constructed typed function, or\n   * * any other single function with a string-valued property `signature`.\n    * The name of the resulting typed-function will be given by the\n   * string-valued name argument if present, or if not, by the name\n   * of any of the arguments that have one, as long as any that do are\n   * consistent with each other. If no name is specified, the name will be\n   * an empty string.\n   *\n   * @param {string} maybeName [optional]\n   * @param {(function|object)[]} signature providers\n   * @returns {typed-function}\n   */\n  typed = function (maybeName) {\n    const named = typeof maybeName === 'string';\n    const start = named ? 1 : 0;\n    let name = named ? maybeName : '';\n    const allSignatures = {};\n    for (let i = start; i < arguments.length; ++i) {\n      const item = arguments[i];\n      let theseSignatures = {};\n      let thisName;\n      if (typeof item === 'function') {\n        thisName = item.name;\n        if (typeof item.signature === 'string') {\n          // Case 1: Ordinary function with a string 'signature' property\n          theseSignatures[item.signature] = item;\n        } else if (isTypedFunction(item)) {\n          // Case 2: Existing typed function\n          theseSignatures = item.signatures;\n        }\n      } else if (isPlainObject(item)) {\n        // Case 3: Plain object, assume keys = signatures, values = functions\n        theseSignatures = item;\n        if (!named) {\n          thisName = getObjectName(item);\n        }\n      }\n      if (Object.keys(theseSignatures).length === 0) {\n        const err = new TypeError('Argument to \\'typed\\' at index ' + i + ' is not a (typed) function, ' + 'nor an object with signatures as keys and functions as values.');\n        err.data = {\n          index: i,\n          argument: item\n        };\n        throw err;\n      }\n      if (!named) {\n        name = checkName(name, thisName);\n      }\n      mergeSignatures(allSignatures, theseSignatures);\n    }\n    return createTypedFunction(name || '', allSignatures);\n  };\n  typed.create = create;\n  typed.createCount = saveTyped.createCount;\n  typed.onMismatch = _onMismatch;\n  typed.throwMismatchError = _onMismatch;\n  typed.createError = createError;\n  typed.clear = clear;\n  typed.clearConversions = clearConversions;\n  typed.addTypes = addTypes;\n  typed._findType = findType; // For unit testing only\n  typed.referTo = referTo;\n  typed.referToSelf = referToSelf;\n  typed.convert = convert;\n  typed.findSignature = findSignature;\n  typed.find = find;\n  typed.isTypedFunction = isTypedFunction;\n  typed.warnAgainstDeprecatedThis = true;\n\n  /**\n   * add a type (convenience wrapper for typed.addTypes)\n   * @param {{name: string, test: function}} type\n   * @param {boolean} [beforeObjectTest=true]\n   *                          If true, the new test will be inserted before\n   *                          the test with name 'Object' (if any), since\n   *                          tests for Object match Array and classes too.\n   */\n  typed.addType = function (type, beforeObjectTest) {\n    let before = 'any';\n    if (beforeObjectTest !== false && typeMap.has('Object')) {\n      before = 'Object';\n    }\n    typed.addTypes([type], before);\n  };\n\n  /**\n   * Verify that the ConversionDef conversion has a valid format.\n   *\n   * @param {conversionDef} conversion\n   * @return {void}\n   * @throws {TypeError|SyntaxError}\n   */\n  function _validateConversion(conversion) {\n    if (!conversion || typeof conversion.from !== 'string' || typeof conversion.to !== 'string' || typeof conversion.convert !== 'function') {\n      throw new TypeError('Object with properties {from: string, to: string, convert: function} expected');\n    }\n    if (conversion.to === conversion.from) {\n      throw new SyntaxError('Illegal to define conversion from \"' + conversion.from + '\" to itself.');\n    }\n  }\n\n  /**\n   * Add a conversion\n   *\n   * @param {ConversionDef} conversion\n   * @param {{override: boolean}} [options]\n   * @returns {void}\n   * @throws {TypeError}\n   */\n  typed.addConversion = function (conversion) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      override: false\n    };\n    _validateConversion(conversion);\n    const to = findType(conversion.to);\n    const existing = to.conversionsTo.find(other => other.from === conversion.from);\n    if (existing) {\n      if (options && options.override) {\n        typed.removeConversion({\n          from: existing.from,\n          to: conversion.to,\n          convert: existing.convert\n        });\n      } else {\n        throw new Error('There is already a conversion from \"' + conversion.from + '\" to \"' + to.name + '\"');\n      }\n    }\n    to.conversionsTo.push({\n      from: conversion.from,\n      convert: conversion.convert,\n      index: nConversions++\n    });\n  };\n\n  /**\n   * Convenience wrapper to call addConversion on each conversion in a list.\n   *\n   * @param {ConversionDef[]} conversions\n   * @param {{override: boolean}} [options]\n   * @returns {void}\n   * @throws {TypeError}\n   */\n  typed.addConversions = function (conversions, options) {\n    conversions.forEach(conversion => typed.addConversion(conversion, options));\n  };\n\n  /**\n   * Remove the specified conversion. The format is the same as for\n   * addConversion, and the convert function must match or an error\n   * is thrown.\n   *\n   * @param {{from: string, to: string, convert: function}} conversion\n   * @returns {void}\n   * @throws {TypeError|SyntaxError|Error}\n   */\n  typed.removeConversion = function (conversion) {\n    _validateConversion(conversion);\n    const to = findType(conversion.to);\n    const existingConversion = findInArray(to.conversionsTo, c => c.from === conversion.from);\n    if (!existingConversion) {\n      throw new Error('Attempt to remove nonexistent conversion from ' + conversion.from + ' to ' + conversion.to);\n    }\n    if (existingConversion.convert !== conversion.convert) {\n      throw new Error('Conversion to remove does not match existing conversion');\n    }\n    const index = to.conversionsTo.indexOf(existingConversion);\n    to.conversionsTo.splice(index, 1);\n  };\n\n  /**\n   * Produce the specific signature that a typed function\n   * will execute on the given arguments. Here, a \"signature\" is an\n   * object with properties 'params', 'test', 'fn', and 'implementation'.\n   * This last property is a function that converts params as necessary\n   * and then calls 'fn'. Returns null if there is no matching signature.\n   * @param {typed-function} tf\n   * @param {any[]} argList\n   * @returns {{params: string, test: function, fn: function, implementation: function}}\n   */\n  typed.resolve = function (tf, argList) {\n    if (!isTypedFunction(tf)) {\n      throw new TypeError(NOT_TYPED_FUNCTION);\n    }\n    const sigs = tf._typedFunctionData.signatures;\n    for (let i = 0; i < sigs.length; ++i) {\n      if (sigs[i].test(argList)) {\n        return sigs[i];\n      }\n    }\n    return null;\n  };\n  return typed;\n}\nexport default create();\n//# sourceMappingURL=typed-function.mjs.map","import { pickShallow } from './object.js';\n\n/**\n * Create a factory function, which can be used to inject dependencies.\n *\n * The created functions are memoized, a consecutive call of the factory\n * with the exact same inputs will return the same function instance.\n * The memoized cache is exposed on `factory.cache` and can be cleared\n * if needed.\n *\n * Example:\n *\n *     const name = 'log'\n *     const dependencies = ['config', 'typed', 'divideScalar', 'Complex']\n *\n *     export const createLog = factory(name, dependencies, ({ typed, config, divideScalar, Complex }) => {\n *       // ... create the function log here and return it\n *     }\n *\n * @param {string} name           Name of the function to be created\n * @param {string[]} dependencies The names of all required dependencies\n * @param {function} create       Callback function called with an object with all dependencies\n * @param {Object} [meta]         Optional object with meta information that will be attached\n *                                to the created factory function as property `meta`.\n * @returns {function}\n */\nexport function factory(name, dependencies, create, meta) {\n  function assertAndCreate(scope) {\n    // we only pass the requested dependencies to the factory function\n    // to prevent functions to rely on dependencies that are not explicitly\n    // requested.\n    var deps = pickShallow(scope, dependencies.map(stripOptionalNotation));\n    assertDependencies(name, dependencies, scope);\n    return create(deps);\n  }\n  assertAndCreate.isFactory = true;\n  assertAndCreate.fn = name;\n  assertAndCreate.dependencies = dependencies.slice().sort();\n  if (meta) {\n    assertAndCreate.meta = meta;\n  }\n  return assertAndCreate;\n}\n\n/**\n * Sort all factories such that when loading in order, the dependencies are resolved.\n *\n * @param {Array} factories\n * @returns {Array} Returns a new array with the sorted factories.\n */\nexport function sortFactories(factories) {\n  var factoriesByName = {};\n  factories.forEach(factory => {\n    factoriesByName[factory.fn] = factory;\n  });\n  function containsDependency(factory, dependency) {\n    // TODO: detect circular references\n    if (isFactory(factory)) {\n      if (factory.dependencies.includes(dependency.fn || dependency.name)) {\n        return true;\n      }\n      if (factory.dependencies.some(d => containsDependency(factoriesByName[d], dependency))) {\n        return true;\n      }\n    }\n    return false;\n  }\n  var sorted = [];\n  function addFactory(factory) {\n    var index = 0;\n    while (index < sorted.length && !containsDependency(sorted[index], factory)) {\n      index++;\n    }\n    sorted.splice(index, 0, factory);\n  }\n\n  // sort regular factory functions\n  factories.filter(isFactory).forEach(addFactory);\n\n  // sort legacy factory functions AFTER the regular factory functions\n  factories.filter(factory => !isFactory(factory)).forEach(addFactory);\n  return sorted;\n}\n\n// TODO: comment or cleanup if unused in the end\nexport function create(factories) {\n  var scope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  sortFactories(factories).forEach(factory => factory(scope));\n  return scope;\n}\n\n/**\n * Test whether an object is a factory. This is the case when it has\n * properties name, dependencies, and a function create.\n * @param {*} obj\n * @returns {boolean}\n */\nexport function isFactory(obj) {\n  return typeof obj === 'function' && typeof obj.fn === 'string' && Array.isArray(obj.dependencies);\n}\n\n/**\n * Assert that all dependencies of a list with dependencies are available in the provided scope.\n *\n * Will throw an exception when there are dependencies missing.\n *\n * @param {string} name   Name for the function to be created. Used to generate a useful error message\n * @param {string[]} dependencies\n * @param {Object} scope\n */\nexport function assertDependencies(name, dependencies, scope) {\n  var allDefined = dependencies.filter(dependency => !isOptionalDependency(dependency)) // filter optionals\n  .every(dependency => scope[dependency] !== undefined);\n  if (!allDefined) {\n    var missingDependencies = dependencies.filter(dependency => scope[dependency] === undefined);\n\n    // TODO: create a custom error class for this, a MathjsError or something like that\n    throw new Error(\"Cannot create function \\\"\".concat(name, \"\\\", \") + \"some dependencies are missing: \".concat(missingDependencies.map(d => \"\\\"\".concat(d, \"\\\"\")).join(', '), \".\"));\n  }\n}\nexport function isOptionalDependency(dependency) {\n  return dependency && dependency[0] === '?';\n}\nexport function stripOptionalNotation(dependency) {\n  return dependency && dependency[0] === '?' ? dependency.slice(1) : dependency;\n}","import { isBigNumber, isNumber, isObject } from './is.js';\n\n/**\n * @typedef {{sign: '+' | '-' | '', coefficients: number[], exponent: number}} SplitValue\n */\n\n/**\n * Check if a number is integer\n * @param {number | boolean} value\n * @return {boolean} isInteger\n */\nexport function isInteger(value) {\n  if (typeof value === 'boolean') {\n    return true;\n  }\n  return isFinite(value) ? value === Math.round(value) : false;\n}\n\n/**\n * Check if a string contains an integer\n * @param {string} str\n * @return {boolean} isInteger\n */\nexport function isIntegerStr(str) {\n  // regex matching strings like \"123\" and \"-123\"\n  return /^-?\\d+$/.test(str);\n}\n\n/**\n * Ensure the number type is compatible with the provided value.\n * If not, return 'number' instead.\n *\n * For example:\n *\n *     safeNumberType('2.3', { number: 'bigint', numberFallback: 'number' })\n *\n * will return 'number' and not 'bigint' because trying to create a bigint with\n * value 2.3 would throw an exception.\n *\n * @param {string} numberStr\n * @param {{\n *   number: 'number' | 'BigNumber' | 'bigint' | 'Fraction'\n *   numberFallback: 'number' | 'BigNumber'\n * }} config\n * @returns {'number' | 'BigNumber' | 'bigint' | 'Fraction'}\n */\nexport function safeNumberType(numberStr, config) {\n  if (config.number === 'bigint' && !isIntegerStr(numberStr)) {\n    return config.numberFallback;\n  }\n  return config.number;\n}\n\n/**\n * Calculate the sign of a number\n * @param {number} x\n * @returns {number}\n */\nexport var sign = Math.sign || function (x) {\n  if (x > 0) {\n    return 1;\n  } else if (x < 0) {\n    return -1;\n  } else {\n    return 0;\n  }\n};\n\n/**\n * Calculate the base-2 logarithm of a number\n * @param {number} x\n * @returns {number}\n */\nexport var log2 = Math.log2 || function log2(x) {\n  return Math.log(x) / Math.LN2;\n};\n\n/**\n * Calculate the base-10 logarithm of a number\n * @param {number} x\n * @returns {number}\n */\nexport var log10 = Math.log10 || function log10(x) {\n  return Math.log(x) / Math.LN10;\n};\n\n/**\n * Calculate the natural logarithm of a number + 1\n * @param {number} x\n * @returns {number}\n */\nexport var log1p = Math.log1p || function (x) {\n  return Math.log(x + 1);\n};\n\n/**\n * Calculate cubic root for a number\n *\n * Code from es6-shim.js:\n *   https://github.com/paulmillr/es6-shim/blob/master/es6-shim.js#L1564-L1577\n *\n * @param {number} x\n * @returns {number} Returns the cubic root of x\n */\nexport var cbrt = Math.cbrt || function cbrt(x) {\n  if (x === 0) {\n    return x;\n  }\n  var negate = x < 0;\n  var result;\n  if (negate) {\n    x = -x;\n  }\n  if (isFinite(x)) {\n    result = Math.exp(Math.log(x) / 3);\n    // from https://en.wikipedia.org/wiki/Cube_root#Numerical_methods\n    result = (x / (result * result) + 2 * result) / 3;\n  } else {\n    result = x;\n  }\n  return negate ? -result : result;\n};\n\n/**\n * Calculates exponentiation minus 1\n * @param {number} x\n * @return {number} res\n */\nexport var expm1 = Math.expm1 || function expm1(x) {\n  return x >= 2e-4 || x <= -2e-4 ? Math.exp(x) - 1 : x + x * x / 2 + x * x * x / 6;\n};\n\n/**\n * Formats a number in a given base\n * @param {number} n\n * @param {number} base\n * @param {number} size\n * @returns {string}\n */\nfunction formatNumberToBase(n, base, size) {\n  var prefixes = {\n    2: '0b',\n    8: '0o',\n    16: '0x'\n  };\n  var prefix = prefixes[base];\n  var suffix = '';\n  if (size) {\n    if (size < 1) {\n      throw new Error('size must be in greater than 0');\n    }\n    if (!isInteger(size)) {\n      throw new Error('size must be an integer');\n    }\n    if (n > 2 ** (size - 1) - 1 || n < -(2 ** (size - 1))) {\n      throw new Error(\"Value must be in range [-2^\".concat(size - 1, \", 2^\").concat(size - 1, \"-1]\"));\n    }\n    if (!isInteger(n)) {\n      throw new Error('Value must be an integer');\n    }\n    if (n < 0) {\n      n = n + 2 ** size;\n    }\n    suffix = \"i\".concat(size);\n  }\n  var sign = '';\n  if (n < 0) {\n    n = -n;\n    sign = '-';\n  }\n  return \"\".concat(sign).concat(prefix).concat(n.toString(base)).concat(suffix);\n}\n\n/**\n * Convert a number to a formatted string representation.\n *\n * Syntax:\n *\n *    format(value)\n *    format(value, options)\n *    format(value, precision)\n *    format(value, fn)\n *\n * Where:\n *\n *    {number} value   The value to be formatted\n *    {Object} options An object with formatting options. Available options:\n *                     {string} notation\n *                         Number notation. Choose from:\n *                         'fixed'          Always use regular number notation.\n *                                          For example '123.40' and '14000000'\n *                         'exponential'    Always use exponential notation.\n *                                          For example '1.234e+2' and '1.4e+7'\n *                         'engineering'    Always use engineering notation.\n *                                          For example '123.4e+0' and '14.0e+6'\n *                         'auto' (default) Regular number notation for numbers\n *                                          having an absolute value between\n *                                          `lowerExp` and `upperExp` bounds, and\n *                                          uses exponential notation elsewhere.\n *                                          Lower bound is included, upper bound\n *                                          is excluded.\n *                                          For example '123.4' and '1.4e7'.\n *                         'bin', 'oct, or\n *                         'hex'            Format the number using binary, octal,\n *                                          or hexadecimal notation.\n *                                          For example '0b1101' and '0x10fe'.\n *                     {number} wordSize    The word size in bits to use for formatting\n *                                          in binary, octal, or hexadecimal notation.\n *                                          To be used only with 'bin', 'oct', or 'hex'\n *                                          values for 'notation' option. When this option\n *                                          is defined the value is formatted as a signed\n *                                          twos complement integer of the given word size\n *                                          and the size suffix is appended to the output.\n *                                          For example\n *                                          format(-1, {notation: 'hex', wordSize: 8}) === '0xffi8'.\n *                                          Default value is undefined.\n *                     {number} precision   A number between 0 and 16 to round\n *                                          the digits of the number.\n *                                          In case of notations 'exponential',\n *                                          'engineering', and 'auto',\n *                                          `precision` defines the total\n *                                          number of significant digits returned.\n *                                          In case of notation 'fixed',\n *                                          `precision` defines the number of\n *                                          significant digits after the decimal\n *                                          point.\n *                                          `precision` is undefined by default,\n *                                          not rounding any digits.\n *                     {number} lowerExp    Exponent determining the lower boundary\n *                                          for formatting a value with an exponent\n *                                          when `notation='auto`.\n *                                          Default value is `-3`.\n *                     {number} upperExp    Exponent determining the upper boundary\n *                                          for formatting a value with an exponent\n *                                          when `notation='auto`.\n *                                          Default value is `5`.\n *    {Function} fn    A custom formatting function. Can be used to override the\n *                     built-in notations. Function `fn` is called with `value` as\n *                     parameter and must return a string. Is useful for example to\n *                     format all values inside a matrix in a particular way.\n *\n * Examples:\n *\n *    format(6.4)                                        // '6.4'\n *    format(1240000)                                    // '1.24e6'\n *    format(1/3)                                        // '0.3333333333333333'\n *    format(1/3, 3)                                     // '0.333'\n *    format(21385, 2)                                   // '21000'\n *    format(12.071, {notation: 'fixed'})                // '12'\n *    format(2.3,    {notation: 'fixed', precision: 2})  // '2.30'\n *    format(52.8,   {notation: 'exponential'})          // '5.28e+1'\n *    format(12345678, {notation: 'engineering'})        // '12.345678e+6'\n *\n * @param {number} value\n * @param {Object | Function | number} [options]\n * @return {string} str The formatted value\n */\nexport function format(value, options) {\n  if (typeof options === 'function') {\n    // handle format(value, fn)\n    return options(value);\n  }\n\n  // handle special cases\n  if (value === Infinity) {\n    return 'Infinity';\n  } else if (value === -Infinity) {\n    return '-Infinity';\n  } else if (isNaN(value)) {\n    return 'NaN';\n  }\n  var {\n    notation,\n    precision,\n    wordSize\n  } = normalizeFormatOptions(options);\n\n  // handle the various notations\n  switch (notation) {\n    case 'fixed':\n      return toFixed(value, precision);\n    case 'exponential':\n      return toExponential(value, precision);\n    case 'engineering':\n      return toEngineering(value, precision);\n    case 'bin':\n      return formatNumberToBase(value, 2, wordSize);\n    case 'oct':\n      return formatNumberToBase(value, 8, wordSize);\n    case 'hex':\n      return formatNumberToBase(value, 16, wordSize);\n    case 'auto':\n      // remove trailing zeros after the decimal point\n      return toPrecision(value, precision, options).replace(/((\\.\\d*?)(0+))($|e)/, function () {\n        var digits = arguments[2];\n        var e = arguments[4];\n        return digits !== '.' ? digits + e : e;\n      });\n    default:\n      throw new Error('Unknown notation \"' + notation + '\". ' + 'Choose \"auto\", \"exponential\", \"fixed\", \"bin\", \"oct\", or \"hex.');\n  }\n}\n\n/**\n * Normalize format options into an object:\n *   {\n *     notation: string,\n *     precision: number | undefined,\n *     wordSize: number | undefined\n *   }\n */\nexport function normalizeFormatOptions(options) {\n  // default values for options\n  var notation = 'auto';\n  var precision;\n  var wordSize;\n  if (options !== undefined) {\n    if (isNumber(options)) {\n      precision = options;\n    } else if (isBigNumber(options)) {\n      precision = options.toNumber();\n    } else if (isObject(options)) {\n      if (options.precision !== undefined) {\n        precision = _toNumberOrThrow(options.precision, () => {\n          throw new Error('Option \"precision\" must be a number or BigNumber');\n        });\n      }\n      if (options.wordSize !== undefined) {\n        wordSize = _toNumberOrThrow(options.wordSize, () => {\n          throw new Error('Option \"wordSize\" must be a number or BigNumber');\n        });\n      }\n      if (options.notation) {\n        notation = options.notation;\n      }\n    } else {\n      throw new Error('Unsupported type of options, number, BigNumber, or object expected');\n    }\n  }\n  return {\n    notation,\n    precision,\n    wordSize\n  };\n}\n\n/**\n * Split a number into sign, coefficients, and exponent\n * @param {number | string} value\n * @return {SplitValue}\n *              Returns an object containing sign, coefficients, and exponent\n */\nexport function splitNumber(value) {\n  // parse the input value\n  var match = String(value).toLowerCase().match(/^(-?)(\\d+\\.?\\d*)(e([+-]?\\d+))?$/);\n  if (!match) {\n    throw new SyntaxError('Invalid number ' + value);\n  }\n  var sign = match[1];\n  var digits = match[2];\n  var exponent = parseFloat(match[4] || '0');\n  var dot = digits.indexOf('.');\n  exponent += dot !== -1 ? dot - 1 : digits.length - 1;\n  var coefficients = digits.replace('.', '') // remove the dot (must be removed before removing leading zeros)\n  .replace(/^0*/, function (zeros) {\n    // remove leading zeros, add their count to the exponent\n    exponent -= zeros.length;\n    return '';\n  }).replace(/0*$/, '') // remove trailing zeros\n  .split('').map(function (d) {\n    return parseInt(d);\n  });\n  if (coefficients.length === 0) {\n    coefficients.push(0);\n    exponent++;\n  }\n  return {\n    sign,\n    coefficients,\n    exponent\n  };\n}\n\n/**\n * Format a number in engineering notation. Like '1.23e+6', '2.3e+0', '3.500e-3'\n * @param {number | string} value\n * @param {number} [precision]        Optional number of significant figures to return.\n */\nexport function toEngineering(value, precision) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  }\n  var split = splitNumber(value);\n  var rounded = roundDigits(split, precision);\n  var e = rounded.exponent;\n  var c = rounded.coefficients;\n\n  // find nearest lower multiple of 3 for exponent\n  var newExp = e % 3 === 0 ? e : e < 0 ? e - 3 - e % 3 : e - e % 3;\n  if (isNumber(precision)) {\n    // add zeroes to give correct sig figs\n    while (precision > c.length || e - newExp + 1 > c.length) {\n      c.push(0);\n    }\n  } else {\n    // concatenate coefficients with necessary zeros\n    // add zeros if necessary (for example: 1e+8 -> 100e+6)\n    var missingZeros = Math.abs(e - newExp) - (c.length - 1);\n    for (var i = 0; i < missingZeros; i++) {\n      c.push(0);\n    }\n  }\n\n  // find difference in exponents\n  var expDiff = Math.abs(e - newExp);\n  var decimalIdx = 1;\n\n  // push decimal index over by expDiff times\n  while (expDiff > 0) {\n    decimalIdx++;\n    expDiff--;\n  }\n\n  // if all coefficient values are zero after the decimal point and precision is unset, don't add a decimal value.\n  // otherwise concat with the rest of the coefficients\n  var decimals = c.slice(decimalIdx).join('');\n  var decimalVal = isNumber(precision) && decimals.length || decimals.match(/[1-9]/) ? '.' + decimals : '';\n  var str = c.slice(0, decimalIdx).join('') + decimalVal + 'e' + (e >= 0 ? '+' : '') + newExp.toString();\n  return rounded.sign + str;\n}\n\n/**\n * Format a number with fixed notation.\n * @param {number | string} value\n * @param {number} [precision=undefined]  Optional number of decimals after the\n *                                        decimal point. null by default.\n */\nexport function toFixed(value, precision) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  }\n  var splitValue = splitNumber(value);\n  var rounded = typeof precision === 'number' ? roundDigits(splitValue, splitValue.exponent + 1 + precision) : splitValue;\n  var c = rounded.coefficients;\n  var p = rounded.exponent + 1; // exponent may have changed\n\n  // append zeros if needed\n  var pp = p + (precision || 0);\n  if (c.length < pp) {\n    c = c.concat(zeros(pp - c.length));\n  }\n\n  // prepend zeros if needed\n  if (p < 0) {\n    c = zeros(-p + 1).concat(c);\n    p = 1;\n  }\n\n  // insert a dot if needed\n  if (p < c.length) {\n    c.splice(p, 0, p === 0 ? '0.' : '.');\n  }\n  return rounded.sign + c.join('');\n}\n\n/**\n * Format a number in exponential notation. Like '1.23e+5', '2.3e+0', '3.500e-3'\n * @param {number | string} value\n * @param {number} [precision]  Number of digits in formatted output.\n *                              If not provided, the maximum available digits\n *                              is used.\n */\nexport function toExponential(value, precision) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  }\n\n  // round if needed, else create a clone\n  var split = splitNumber(value);\n  var rounded = precision ? roundDigits(split, precision) : split;\n  var c = rounded.coefficients;\n  var e = rounded.exponent;\n\n  // append zeros if needed\n  if (c.length < precision) {\n    c = c.concat(zeros(precision - c.length));\n  }\n\n  // format as `C.CCCe+EEE` or `C.CCCe-EEE`\n  var first = c.shift();\n  return rounded.sign + first + (c.length > 0 ? '.' + c.join('') : '') + 'e' + (e >= 0 ? '+' : '') + e;\n}\n\n/**\n * Format a number with a certain precision\n * @param {number | string} value\n * @param {number} [precision=undefined] Optional number of digits.\n * @param {{lowerExp: number | undefined, upperExp: number | undefined}} [options]\n *                                       By default:\n *                                         lowerExp = -3 (incl)\n *                                         upper = +5 (excl)\n * @return {string}\n */\nexport function toPrecision(value, precision, options) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  }\n\n  // determine lower and upper bound for exponential notation.\n  var lowerExp = _toNumberOrDefault(options === null || options === void 0 ? void 0 : options.lowerExp, -3);\n  var upperExp = _toNumberOrDefault(options === null || options === void 0 ? void 0 : options.upperExp, 5);\n  var split = splitNumber(value);\n  var rounded = precision ? roundDigits(split, precision) : split;\n  if (rounded.exponent < lowerExp || rounded.exponent >= upperExp) {\n    // exponential notation\n    return toExponential(value, precision);\n  } else {\n    var c = rounded.coefficients;\n    var e = rounded.exponent;\n\n    // append trailing zeros\n    if (c.length < precision) {\n      c = c.concat(zeros(precision - c.length));\n    }\n\n    // append trailing zeros\n    // TODO: simplify the next statement\n    c = c.concat(zeros(e - c.length + 1 + (c.length < precision ? precision - c.length : 0)));\n\n    // prepend zeros\n    c = zeros(-e).concat(c);\n    var dot = e > 0 ? e : 0;\n    if (dot < c.length - 1) {\n      c.splice(dot + 1, 0, '.');\n    }\n    return rounded.sign + c.join('');\n  }\n}\n\n/**\n * Round the number of digits of a number *\n * @param {SplitValue} split       A value split with .splitNumber(value)\n * @param {number} precision  A positive integer\n * @return {SplitValue}\n *              Returns an object containing sign, coefficients, and exponent\n *              with rounded digits\n */\nexport function roundDigits(split, precision) {\n  // create a clone\n  var rounded = {\n    sign: split.sign,\n    coefficients: split.coefficients,\n    exponent: split.exponent\n  };\n  var c = rounded.coefficients;\n\n  // prepend zeros if needed\n  while (precision <= 0) {\n    c.unshift(0);\n    rounded.exponent++;\n    precision++;\n  }\n  if (c.length > precision) {\n    var removed = c.splice(precision, c.length - precision);\n    if (removed[0] >= 5) {\n      var i = precision - 1;\n      c[i]++;\n      while (c[i] === 10) {\n        c.pop();\n        if (i === 0) {\n          c.unshift(0);\n          rounded.exponent++;\n          i++;\n        }\n        i--;\n        c[i]++;\n      }\n    }\n  }\n  return rounded;\n}\n\n/**\n * Create an array filled with zeros.\n * @param {number} length\n * @return {Array}\n */\nfunction zeros(length) {\n  var arr = [];\n  for (var i = 0; i < length; i++) {\n    arr.push(0);\n  }\n  return arr;\n}\n\n/**\n * Count the number of significant digits of a number.\n *\n * For example:\n *   2.34 returns 3\n *   0.0034 returns 2\n *   120.5e+30 returns 4\n *\n * @param {number} value\n * @return {number} digits   Number of significant digits\n */\nexport function digits(value) {\n  return value.toExponential().replace(/e.*$/, '') // remove exponential notation\n  .replace(/^0\\.?0*|\\./, '') // remove decimal point and leading zeros\n  .length;\n}\n\n/**\n * Minimum number added to one that makes the result different than one\n */\nexport var DBL_EPSILON = Number.EPSILON || 2.2204460492503130808472633361816E-16;\n\n/**\n * Compares two floating point numbers.\n * @param {number} a - First value to compare\n * @param {number} b - Second value to compare\n * @param {number} [relTol=1e-09] - The relative tolerance, indicating the maximum allowed difference relative to the larger absolute value. Must be greater than 0.\n * @param {number} [absTol=1e-12] - The minimum absolute tolerance, useful for comparisons near zero. Must be at least 0.\n * @return {boolean} whether the two numbers are nearly equal\n *\n * @throws {Error} If `relTol` is less than or equal to 0.\n * @throws {Error} If `absTol` is less than 0.\n *\n * @example\n * nearlyEqual(1.000000001, 1.0, 1e-8);            // true\n * nearlyEqual(1.000000002, 1.0, 0);            // false\n * nearlyEqual(1.0, 1.009, undefined, 0.01);       // true\n * nearlyEqual(0.000000001, 0.0, undefined, 1e-8); // true\n */\nexport function nearlyEqual(a, b) {\n  var relTol = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1e-8;\n  var absTol = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  if (relTol <= 0) {\n    throw new Error('Relative tolerance must be greater than 0');\n  }\n  if (absTol < 0) {\n    throw new Error('Absolute tolerance must be at least 0');\n  }\n\n  // NaN\n  if (isNaN(a) || isNaN(b)) {\n    return false;\n  }\n  if (!isFinite(a) || !isFinite(b)) {\n    return a === b;\n  }\n  if (a === b) {\n    return true;\n  }\n\n  // abs(a-b) <= max(rel_tol * max(abs(a), abs(b)), abs_tol)\n  return Math.abs(a - b) <= Math.max(relTol * Math.max(Math.abs(a), Math.abs(b)), absTol);\n}\n\n/**\n * Calculate the hyperbolic arccos of a number\n * @param {number} x\n * @return {number}\n */\nexport var acosh = Math.acosh || function (x) {\n  return Math.log(Math.sqrt(x * x - 1) + x);\n};\nexport var asinh = Math.asinh || function (x) {\n  return Math.log(Math.sqrt(x * x + 1) + x);\n};\n\n/**\n * Calculate the hyperbolic arctangent of a number\n * @param {number} x\n * @return {number}\n */\nexport var atanh = Math.atanh || function (x) {\n  return Math.log((1 + x) / (1 - x)) / 2;\n};\n\n/**\n * Calculate the hyperbolic cosine of a number\n * @param {number} x\n * @returns {number}\n */\nexport var cosh = Math.cosh || function (x) {\n  return (Math.exp(x) + Math.exp(-x)) / 2;\n};\n\n/**\n * Calculate the hyperbolic sine of a number\n * @param {number} x\n * @returns {number}\n */\nexport var sinh = Math.sinh || function (x) {\n  return (Math.exp(x) - Math.exp(-x)) / 2;\n};\n\n/**\n * Calculate the hyperbolic tangent of a number\n * @param {number} x\n * @returns {number}\n */\nexport var tanh = Math.tanh || function (x) {\n  var e = Math.exp(2 * x);\n  return (e - 1) / (e + 1);\n};\n\n/**\n * Returns a value with the magnitude of x and the sign of y.\n * @param {number} x\n * @param {number} y\n * @returns {number}\n */\nexport function copysign(x, y) {\n  var signx = x > 0 ? true : x < 0 ? false : 1 / x === Infinity;\n  var signy = y > 0 ? true : y < 0 ? false : 1 / y === Infinity;\n  return signx ^ signy ? -x : x;\n}\nfunction _toNumberOrThrow(value, onError) {\n  if (isNumber(value)) {\n    return value;\n  } else if (isBigNumber(value)) {\n    return value.toNumber();\n  } else {\n    onError();\n  }\n}\nfunction _toNumberOrDefault(value, defaultValue) {\n  if (isNumber(value)) {\n    return value;\n  } else if (isBigNumber(value)) {\n    return value.toNumber();\n  } else {\n    return defaultValue;\n  }\n}","/**\n * Create a typed-function which checks the types of the arguments and\n * can match them against multiple provided signatures. The typed-function\n * automatically converts inputs in order to find a matching signature.\n * Typed functions throw informative errors in case of wrong input arguments.\n *\n * See the library [typed-function](https://github.com/josdejong/typed-function)\n * for detailed documentation.\n *\n * Syntax:\n *\n *     math.typed(name, signatures) : function\n *     math.typed(signatures) : function\n *\n * Examples:\n *\n *     // create a typed function with multiple types per argument (type union)\n *     const fn2 = typed({\n *       'number | boolean': function (b) {\n *         return 'b is a number or boolean'\n *       },\n *       'string, number | boolean': function (a, b) {\n *         return 'a is a string, b is a number or boolean'\n *       }\n *     })\n *\n *     // create a typed function with an any type argument\n *     const log = typed({\n *       'string, any': function (event, data) {\n *         console.log('event: ' + event + ', data: ' + JSON.stringify(data))\n *       }\n *     })\n *\n * @param {string} [name]                          Optional name for the typed-function\n * @param {Object<string, function>} signatures   Object with one or multiple function signatures\n * @returns {function} The created typed-function.\n */\n\nimport typedFunction from 'typed-function';\nimport { factory } from '../../utils/factory.js';\nimport { isAccessorNode, isArray, isArrayNode, isAssignmentNode, isBigInt, isBigNumber, isBlockNode, isBoolean, isChain, isCollection, isComplex, isConditionalNode, isConstantNode, isDate, isDenseMatrix, isFraction, isFunction, isFunctionAssignmentNode, isFunctionNode, isHelp, isIndex, isIndexNode, isMap, isMatrix, isNode, isNull, isNumber, isObject, isObjectNode, isOperatorNode, isParenthesisNode, isRange, isRangeNode, isRegExp, isRelationalNode, isResultSet, isSparseMatrix, isString, isSymbolNode, isUndefined, isUnit } from '../../utils/is.js';\nimport { digits } from '../../utils/number.js';\n\n// returns a new instance of typed-function\nvar _createTyped2 = function _createTyped() {\n  // initially, return the original instance of typed-function\n  // consecutively, return a new instance from typed.create.\n  _createTyped2 = typedFunction.create;\n  return typedFunction;\n};\nvar dependencies = ['?BigNumber', '?Complex', '?DenseMatrix', '?Fraction'];\n\n/**\n * Factory function for creating a new typed instance\n * @param {Object} dependencies   Object with data types like Complex and BigNumber\n * @returns {Function}\n */\nexport var createTyped = /* #__PURE__ */factory('typed', dependencies, function createTyped(_ref) {\n  var {\n    BigNumber,\n    Complex,\n    DenseMatrix,\n    Fraction\n  } = _ref;\n  // TODO: typed-function must be able to silently ignore signatures with unknown data types\n\n  // get a new instance of typed-function\n  var typed = _createTyped2();\n\n  // define all types. The order of the types determines in which order function\n  // arguments are type-checked (so for performance it's important to put the\n  // most used types first).\n  typed.clear();\n  typed.addTypes([{\n    name: 'number',\n    test: isNumber\n  }, {\n    name: 'Complex',\n    test: isComplex\n  }, {\n    name: 'BigNumber',\n    test: isBigNumber\n  }, {\n    name: 'bigint',\n    test: isBigInt\n  }, {\n    name: 'Fraction',\n    test: isFraction\n  }, {\n    name: 'Unit',\n    test: isUnit\n  },\n  // The following type matches a valid variable name, i.e., an alphanumeric\n  // string starting with an alphabetic character. It is used (at least)\n  // in the definition of the derivative() function, as the argument telling\n  // what to differentiate over must (currently) be a variable.\n  // TODO: deprecate the identifier type (it's not used anymore, see https://github.com/josdejong/mathjs/issues/3253)\n  {\n    name: 'identifier',\n    test: s => isString && /^(?:[A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C8A\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CD\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7DC\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDDC0-\\uDDF3\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD23\\uDD4A-\\uDD65\\uDD6F-\\uDD85\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDEC2-\\uDEC4\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45\\uDF70-\\uDF81\\uDFB0-\\uDFC4\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC71\\uDC72\\uDC75\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE3F\\uDE40\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61\\uDF80-\\uDF89\\uDF8B\\uDF8E\\uDF90-\\uDFB5\\uDFB7\\uDFD1\\uDFD3]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDEB8\\uDF00-\\uDF1A\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCDF\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEB0-\\uDEF8\\uDFC0-\\uDFE0]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDEE0-\\uDEF2\\uDF02\\uDF04-\\uDF10\\uDF12-\\uDF33\\uDFB0]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD80E\\uD80F\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883\\uD885-\\uD887][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2F\\uDC41-\\uDC46\\uDC60-\\uDFFF]|\\uD810[\\uDC00-\\uDFFA]|\\uD811[\\uDC00-\\uDE46]|\\uD818[\\uDD00-\\uDD1D]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE70-\\uDEBE\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDD40-\\uDD6C\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDCFF-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD32\\uDD50-\\uDD52\\uDD55\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD837[\\uDF00-\\uDF1E\\uDF25-\\uDF2A]|\\uD838[\\uDC30-\\uDC6D\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB]|\\uD839[\\uDCD0-\\uDCEB\\uDDD0-\\uDDED\\uDDF0\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43\\uDD4B]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF39\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0\\uDFF0-\\uDFFF]|\\uD87B[\\uDC00-\\uDE5D]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A\\uDF50-\\uDFFF]|\\uD888[\\uDC00-\\uDFAF])(?:[0-9A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C8A\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CD\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7DC\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDDC0-\\uDDF3\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD23\\uDD4A-\\uDD65\\uDD6F-\\uDD85\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDEC2-\\uDEC4\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45\\uDF70-\\uDF81\\uDFB0-\\uDFC4\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC71\\uDC72\\uDC75\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE3F\\uDE40\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61\\uDF80-\\uDF89\\uDF8B\\uDF8E\\uDF90-\\uDFB5\\uDFB7\\uDFD1\\uDFD3]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDEB8\\uDF00-\\uDF1A\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCDF\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEB0-\\uDEF8\\uDFC0-\\uDFE0]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDEE0-\\uDEF2\\uDF02\\uDF04-\\uDF10\\uDF12-\\uDF33\\uDFB0]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD80E\\uD80F\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883\\uD885-\\uD887][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2F\\uDC41-\\uDC46\\uDC60-\\uDFFF]|\\uD810[\\uDC00-\\uDFFA]|\\uD811[\\uDC00-\\uDE46]|\\uD818[\\uDD00-\\uDD1D]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE70-\\uDEBE\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDD40-\\uDD6C\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDCFF-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD32\\uDD50-\\uDD52\\uDD55\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD837[\\uDF00-\\uDF1E\\uDF25-\\uDF2A]|\\uD838[\\uDC30-\\uDC6D\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB]|\\uD839[\\uDCD0-\\uDCEB\\uDDD0-\\uDDED\\uDDF0\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43\\uDD4B]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF39\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0\\uDFF0-\\uDFFF]|\\uD87B[\\uDC00-\\uDE5D]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A\\uDF50-\\uDFFF]|\\uD888[\\uDC00-\\uDFAF])*$/.test(s)\n  }, {\n    name: 'string',\n    test: isString\n  }, {\n    name: 'Chain',\n    test: isChain\n  }, {\n    name: 'Array',\n    test: isArray\n  }, {\n    name: 'Matrix',\n    test: isMatrix\n  }, {\n    name: 'DenseMatrix',\n    test: isDenseMatrix\n  }, {\n    name: 'SparseMatrix',\n    test: isSparseMatrix\n  }, {\n    name: 'Range',\n    test: isRange\n  }, {\n    name: 'Index',\n    test: isIndex\n  }, {\n    name: 'boolean',\n    test: isBoolean\n  }, {\n    name: 'ResultSet',\n    test: isResultSet\n  }, {\n    name: 'Help',\n    test: isHelp\n  }, {\n    name: 'function',\n    test: isFunction\n  }, {\n    name: 'Date',\n    test: isDate\n  }, {\n    name: 'RegExp',\n    test: isRegExp\n  }, {\n    name: 'null',\n    test: isNull\n  }, {\n    name: 'undefined',\n    test: isUndefined\n  }, {\n    name: 'AccessorNode',\n    test: isAccessorNode\n  }, {\n    name: 'ArrayNode',\n    test: isArrayNode\n  }, {\n    name: 'AssignmentNode',\n    test: isAssignmentNode\n  }, {\n    name: 'BlockNode',\n    test: isBlockNode\n  }, {\n    name: 'ConditionalNode',\n    test: isConditionalNode\n  }, {\n    name: 'ConstantNode',\n    test: isConstantNode\n  }, {\n    name: 'FunctionNode',\n    test: isFunctionNode\n  }, {\n    name: 'FunctionAssignmentNode',\n    test: isFunctionAssignmentNode\n  }, {\n    name: 'IndexNode',\n    test: isIndexNode\n  }, {\n    name: 'Node',\n    test: isNode\n  }, {\n    name: 'ObjectNode',\n    test: isObjectNode\n  }, {\n    name: 'OperatorNode',\n    test: isOperatorNode\n  }, {\n    name: 'ParenthesisNode',\n    test: isParenthesisNode\n  }, {\n    name: 'RangeNode',\n    test: isRangeNode\n  }, {\n    name: 'RelationalNode',\n    test: isRelationalNode\n  }, {\n    name: 'SymbolNode',\n    test: isSymbolNode\n  }, {\n    name: 'Map',\n    test: isMap\n  }, {\n    name: 'Object',\n    test: isObject\n  } // order 'Object' last, it matches on other classes too\n  ]);\n  typed.addConversions([{\n    from: 'number',\n    to: 'BigNumber',\n    convert: function convert(x) {\n      if (!BigNumber) {\n        throwNoBignumber(x);\n      }\n\n      // note: conversion from number to BigNumber can fail if x has >15 digits\n      if (digits(x) > 15) {\n        throw new TypeError('Cannot implicitly convert a number with >15 significant digits to BigNumber ' + '(value: ' + x + '). ' + 'Use function bignumber(x) to convert to BigNumber.');\n      }\n      return new BigNumber(x);\n    }\n  }, {\n    from: 'number',\n    to: 'Complex',\n    convert: function convert(x) {\n      if (!Complex) {\n        throwNoComplex(x);\n      }\n      return new Complex(x, 0);\n    }\n  }, {\n    from: 'BigNumber',\n    to: 'Complex',\n    convert: function convert(x) {\n      if (!Complex) {\n        throwNoComplex(x);\n      }\n      return new Complex(x.toNumber(), 0);\n    }\n  }, {\n    from: 'bigint',\n    to: 'number',\n    convert: function convert(x) {\n      if (x > Number.MAX_SAFE_INTEGER) {\n        throw new TypeError('Cannot implicitly convert bigint to number: ' + 'value exceeds the max safe integer value (value: ' + x + ')');\n      }\n      return Number(x);\n    }\n  }, {\n    from: 'bigint',\n    to: 'BigNumber',\n    convert: function convert(x) {\n      if (!BigNumber) {\n        throwNoBignumber(x);\n      }\n      return new BigNumber(x.toString());\n    }\n  }, {\n    from: 'bigint',\n    to: 'Fraction',\n    convert: function convert(x) {\n      if (!Fraction) {\n        throwNoFraction(x);\n      }\n      return new Fraction(x);\n    }\n  }, {\n    from: 'Fraction',\n    to: 'BigNumber',\n    convert: function convert(x) {\n      throw new TypeError('Cannot implicitly convert a Fraction to BigNumber or vice versa. ' + 'Use function bignumber(x) to convert to BigNumber or fraction(x) to convert to Fraction.');\n    }\n  }, {\n    from: 'Fraction',\n    to: 'Complex',\n    convert: function convert(x) {\n      if (!Complex) {\n        throwNoComplex(x);\n      }\n      return new Complex(x.valueOf(), 0);\n    }\n  }, {\n    from: 'number',\n    to: 'Fraction',\n    convert: function convert(x) {\n      if (!Fraction) {\n        throwNoFraction(x);\n      }\n      var f = new Fraction(x);\n      if (f.valueOf() !== x) {\n        throw new TypeError('Cannot implicitly convert a number to a Fraction when there will be a loss of precision ' + '(value: ' + x + '). ' + 'Use function fraction(x) to convert to Fraction.');\n      }\n      return f;\n    }\n  }, {\n    // FIXME: add conversion from Fraction to number, for example for `sqrt(fraction(1,3))`\n    //  from: 'Fraction',\n    //  to: 'number',\n    //  convert: function (x) {\n    //    return x.valueOf()\n    //  }\n    // }, {\n    from: 'string',\n    to: 'number',\n    convert: function convert(x) {\n      var n = Number(x);\n      if (isNaN(n)) {\n        throw new Error('Cannot convert \"' + x + '\" to a number');\n      }\n      return n;\n    }\n  }, {\n    from: 'string',\n    to: 'BigNumber',\n    convert: function convert(x) {\n      if (!BigNumber) {\n        throwNoBignumber(x);\n      }\n      try {\n        return new BigNumber(x);\n      } catch (err) {\n        throw new Error('Cannot convert \"' + x + '\" to BigNumber');\n      }\n    }\n  }, {\n    from: 'string',\n    to: 'bigint',\n    convert: function convert(x) {\n      try {\n        return BigInt(x);\n      } catch (err) {\n        throw new Error('Cannot convert \"' + x + '\" to BigInt');\n      }\n    }\n  }, {\n    from: 'string',\n    to: 'Fraction',\n    convert: function convert(x) {\n      if (!Fraction) {\n        throwNoFraction(x);\n      }\n      try {\n        return new Fraction(x);\n      } catch (err) {\n        throw new Error('Cannot convert \"' + x + '\" to Fraction');\n      }\n    }\n  }, {\n    from: 'string',\n    to: 'Complex',\n    convert: function convert(x) {\n      if (!Complex) {\n        throwNoComplex(x);\n      }\n      try {\n        return new Complex(x);\n      } catch (err) {\n        throw new Error('Cannot convert \"' + x + '\" to Complex');\n      }\n    }\n  }, {\n    from: 'boolean',\n    to: 'number',\n    convert: function convert(x) {\n      return +x;\n    }\n  }, {\n    from: 'boolean',\n    to: 'BigNumber',\n    convert: function convert(x) {\n      if (!BigNumber) {\n        throwNoBignumber(x);\n      }\n      return new BigNumber(+x);\n    }\n  }, {\n    from: 'boolean',\n    to: 'bigint',\n    convert: function convert(x) {\n      return BigInt(+x);\n    }\n  }, {\n    from: 'boolean',\n    to: 'Fraction',\n    convert: function convert(x) {\n      if (!Fraction) {\n        throwNoFraction(x);\n      }\n      return new Fraction(+x);\n    }\n  }, {\n    from: 'boolean',\n    to: 'string',\n    convert: function convert(x) {\n      return String(x);\n    }\n  }, {\n    from: 'Array',\n    to: 'Matrix',\n    convert: function convert(array) {\n      if (!DenseMatrix) {\n        throwNoMatrix();\n      }\n      return new DenseMatrix(array);\n    }\n  }, {\n    from: 'Matrix',\n    to: 'Array',\n    convert: function convert(matrix) {\n      return matrix.valueOf();\n    }\n  }]);\n\n  // Provide a suggestion on how to call a function elementwise\n  // This was added primarily as guidance for the v10 -> v11 transition,\n  // and could potentially be removed in the future if it no longer seems\n  // to be helpful.\n  typed.onMismatch = (name, args, signatures) => {\n    var usualError = typed.createError(name, args, signatures);\n    if (['wrongType', 'mismatch'].includes(usualError.data.category) && args.length === 1 && isCollection(args[0]) &&\n    // check if the function can be unary:\n    signatures.some(sig => !sig.params.includes(','))) {\n      var err = new TypeError(\"Function '\".concat(name, \"' doesn't apply to matrices. To call it \") + \"elementwise on a matrix 'M', try 'map(M, \".concat(name, \")'.\"));\n      err.data = usualError.data;\n      throw err;\n    }\n    throw usualError;\n  };\n\n  // Provide a suggestion on how to call a function elementwise\n  // This was added primarily as guidance for the v10 -> v11 transition,\n  // and could potentially be removed in the future if it no longer seems\n  // to be helpful.\n  typed.onMismatch = (name, args, signatures) => {\n    var usualError = typed.createError(name, args, signatures);\n    if (['wrongType', 'mismatch'].includes(usualError.data.category) && args.length === 1 && isCollection(args[0]) &&\n    // check if the function can be unary:\n    signatures.some(sig => !sig.params.includes(','))) {\n      var err = new TypeError(\"Function '\".concat(name, \"' doesn't apply to matrices. To call it \") + \"elementwise on a matrix 'M', try 'map(M, \".concat(name, \")'.\"));\n      err.data = usualError.data;\n      throw err;\n    }\n    throw usualError;\n  };\n  return typed;\n});\nfunction throwNoBignumber(x) {\n  throw new Error(\"Cannot convert value \".concat(x, \" into a BigNumber: no class 'BigNumber' provided\"));\n}\nfunction throwNoComplex(x) {\n  throw new Error(\"Cannot convert value \".concat(x, \" into a Complex number: no class 'Complex' provided\"));\n}\nfunction throwNoMatrix() {\n  throw new Error('Cannot convert array into a Matrix: no class \\'DenseMatrix\\' provided');\n}\nfunction throwNoFraction(x) {\n  throw new Error(\"Cannot convert value \".concat(x, \" into a Fraction, no class 'Fraction' provided.\"));\n}","/*!\r\n *  decimal.js v10.4.3\r\n *  An arbitrary-precision Decimal type for JavaScript.\r\n *  https://github.com/MikeMcl/decimal.js\r\n *  Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *  MIT Licence\r\n */\r\n\r\n\r\n// -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n  // The maximum exponent magnitude.\r\n  // The limit on the value of `toExpNeg`, `toExpPos`, `minE` and `maxE`.\r\nvar EXP_LIMIT = 9e15,                      // 0 to 9e15\r\n\r\n  // The limit on the value of `precision`, and on the value of the first argument to\r\n  // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n  MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n  // Base conversion alphabet.\r\n  NUMERALS = '0123456789abcdef',\r\n\r\n  // The natural logarithm of 10 (1025 digits).\r\n  LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058',\r\n\r\n  // Pi (1025 digits).\r\n  PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789',\r\n\r\n\r\n  // The initial configuration properties of the Decimal constructor.\r\n  DEFAULTS = {\r\n\r\n    // These values must be integers within the stated ranges (inclusive).\r\n    // Most of these values can be changed at run-time using the `Decimal.config` method.\r\n\r\n    // The maximum number of significant digits of the result of a calculation or base conversion.\r\n    // E.g. `Decimal.config({ precision: 20 });`\r\n    precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n    // The rounding mode used when rounding to `precision`.\r\n    //\r\n    // ROUND_UP         0 Away from zero.\r\n    // ROUND_DOWN       1 Towards zero.\r\n    // ROUND_CEIL       2 Towards +Infinity.\r\n    // ROUND_FLOOR      3 Towards -Infinity.\r\n    // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    //\r\n    // E.g.\r\n    // `Decimal.rounding = 4;`\r\n    // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n    rounding: 4,                           // 0 to 8\r\n\r\n    // The modulo mode used when calculating the modulus: a mod n.\r\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n    // The remainder (r) is calculated as: r = a - n * q.\r\n    //\r\n    // UP         0 The remainder is positive if the dividend is negative, else is negative.\r\n    // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).\r\n    // FLOOR      3 The remainder has the same sign as the divisor (Python %).\r\n    // HALF_EVEN  6 The IEEE 754 remainder function.\r\n    // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.\r\n    //\r\n    // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian\r\n    // division (9) are commonly used for the modulus operation. The other rounding modes can also\r\n    // be used, but they may not give useful results.\r\n    modulo: 1,                             // 0 to 9\r\n\r\n    // The exponent value at and beneath which `toString` returns exponential notation.\r\n    // JavaScript numbers: -7\r\n    toExpNeg: -7,                          // 0 to -EXP_LIMIT\r\n\r\n    // The exponent value at and above which `toString` returns exponential notation.\r\n    // JavaScript numbers: 21\r\n    toExpPos:  21,                         // 0 to EXP_LIMIT\r\n\r\n    // The minimum exponent value, beneath which underflow to zero occurs.\r\n    // JavaScript numbers: -324  (5e-324)\r\n    minE: -EXP_LIMIT,                      // -1 to -EXP_LIMIT\r\n\r\n    // The maximum exponent value, above which overflow to Infinity occurs.\r\n    // JavaScript numbers: 308  (1.7976931348623157e+308)\r\n    maxE: EXP_LIMIT,                       // 1 to EXP_LIMIT\r\n\r\n    // Whether to use cryptographically-secure random number generation, if available.\r\n    crypto: false                          // true/false\r\n  },\r\n\r\n\r\n// ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n  inexact, quadrant,\r\n  external = true,\r\n\r\n  decimalError = '[DecimalError] ',\r\n  invalidArgument = decimalError + 'Invalid argument: ',\r\n  precisionLimitExceeded = decimalError + 'Precision limit exceeded',\r\n  cryptoUnavailable = decimalError + 'crypto unavailable',\r\n  tag = '[object Decimal]',\r\n\r\n  mathfloor = Math.floor,\r\n  mathpow = Math.pow,\r\n\r\n  isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\r\n  isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\r\n  isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\r\n  isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n  BASE = 1e7,\r\n  LOG_BASE = 7,\r\n  MAX_SAFE_INTEGER = 9007199254740991,\r\n\r\n  LN10_PRECISION = LN10.length - 1,\r\n  PI_PRECISION = PI.length - 1,\r\n\r\n  // Decimal.prototype object\r\n  P = { toStringTag: tag };\r\n\r\n\r\n// Decimal prototype methods\r\n\r\n\r\n/*\r\n *  absoluteValue             abs\r\n *  ceil\r\n *  clampedTo                 clamp\r\n *  comparedTo                cmp\r\n *  cosine                    cos\r\n *  cubeRoot                  cbrt\r\n *  decimalPlaces             dp\r\n *  dividedBy                 div\r\n *  dividedToIntegerBy        divToInt\r\n *  equals                    eq\r\n *  floor\r\n *  greaterThan               gt\r\n *  greaterThanOrEqualTo      gte\r\n *  hyperbolicCosine          cosh\r\n *  hyperbolicSine            sinh\r\n *  hyperbolicTangent         tanh\r\n *  inverseCosine             acos\r\n *  inverseHyperbolicCosine   acosh\r\n *  inverseHyperbolicSine     asinh\r\n *  inverseHyperbolicTangent  atanh\r\n *  inverseSine               asin\r\n *  inverseTangent            atan\r\n *  isFinite\r\n *  isInteger                 isInt\r\n *  isNaN\r\n *  isNegative                isNeg\r\n *  isPositive                isPos\r\n *  isZero\r\n *  lessThan                  lt\r\n *  lessThanOrEqualTo         lte\r\n *  logarithm                 log\r\n *  [maximum]                 [max]\r\n *  [minimum]                 [min]\r\n *  minus                     sub\r\n *  modulo                    mod\r\n *  naturalExponential        exp\r\n *  naturalLogarithm          ln\r\n *  negated                   neg\r\n *  plus                      add\r\n *  precision                 sd\r\n *  round\r\n *  sine                      sin\r\n *  squareRoot                sqrt\r\n *  tangent                   tan\r\n *  times                     mul\r\n *  toBinary\r\n *  toDecimalPlaces           toDP\r\n *  toExponential\r\n *  toFixed\r\n *  toFraction\r\n *  toHexadecimal             toHex\r\n *  toNearest\r\n *  toNumber\r\n *  toOctal\r\n *  toPower                   pow\r\n *  toPrecision\r\n *  toSignificantDigits       toSD\r\n *  toString\r\n *  truncated                 trunc\r\n *  valueOf                   toJSON\r\n */\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the absolute value of this Decimal.\r\n *\r\n */\r\nP.absoluteValue = P.abs = function () {\r\n  var x = new this.constructor(this);\r\n  if (x.s < 0) x.s = 1;\r\n  return finalise(x);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n * direction of positive Infinity.\r\n *\r\n */\r\nP.ceil = function () {\r\n  return finalise(new this.constructor(this), this.e + 1, 2);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal clamped to the range\r\n * delineated by `min` and `max`.\r\n *\r\n * min {number|string|Decimal}\r\n * max {number|string|Decimal}\r\n *\r\n */\r\nP.clampedTo = P.clamp = function (min, max) {\r\n  var k,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n  min = new Ctor(min);\r\n  max = new Ctor(max);\r\n  if (!min.s || !max.s) return new Ctor(NaN);\r\n  if (min.gt(max)) throw Error(invalidArgument + max);\r\n  k = x.cmp(min);\r\n  return k < 0 ? min : x.cmp(max) > 0 ? max : new Ctor(x);\r\n};\r\n\r\n\r\n/*\r\n * Return\r\n *   1    if the value of this Decimal is greater than the value of `y`,\r\n *  -1    if the value of this Decimal is less than the value of `y`,\r\n *   0    if they have the same value,\r\n *   NaN  if the value of either Decimal is NaN.\r\n *\r\n */\r\nP.comparedTo = P.cmp = function (y) {\r\n  var i, j, xdL, ydL,\r\n    x = this,\r\n    xd = x.d,\r\n    yd = (y = new x.constructor(y)).d,\r\n    xs = x.s,\r\n    ys = y.s;\r\n\r\n  // Either NaN or ±Infinity?\r\n  if (!xd || !yd) {\r\n    return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\r\n  }\r\n\r\n  // Either zero?\r\n  if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;\r\n\r\n  // Signs differ?\r\n  if (xs !== ys) return xs;\r\n\r\n  // Compare exponents.\r\n  if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;\r\n\r\n  xdL = xd.length;\r\n  ydL = yd.length;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n    if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\r\n  }\r\n\r\n  // Compare lengths.\r\n  return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the cosine of the value in radians of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-1, 1]\r\n *\r\n * cos(0)         = 1\r\n * cos(-0)        = 1\r\n * cos(Infinity)  = NaN\r\n * cos(-Infinity) = NaN\r\n * cos(NaN)       = NaN\r\n *\r\n */\r\nP.cosine = P.cos = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.d) return new Ctor(NaN);\r\n\r\n  // cos(0) = cos(-0) = 1\r\n  if (!x.d[0]) return new Ctor(1);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n  Ctor.rounding = 1;\r\n\r\n  x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n *\r\n * Return a new Decimal whose value is the cube root of the value of this Decimal, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n *  cbrt(0)  =  0\r\n *  cbrt(-0) = -0\r\n *  cbrt(1)  =  1\r\n *  cbrt(-1) = -1\r\n *  cbrt(N)  =  N\r\n *  cbrt(-I) = -I\r\n *  cbrt(I)  =  I\r\n *\r\n * Math.cbrt(x) = (x < 0 ? -Math.pow(-x, 1/3) : Math.pow(x, 1/3))\r\n *\r\n */\r\nP.cubeRoot = P.cbrt = function () {\r\n  var e, m, n, r, rep, s, sd, t, t3, t3plusx,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n  external = false;\r\n\r\n  // Initial estimate.\r\n  s = x.s * mathpow(x.s * x, 1 / 3);\r\n\r\n   // Math.cbrt underflow/overflow?\r\n   // Pass x to Math.pow as integer, then adjust the exponent of the result.\r\n  if (!s || Math.abs(s) == 1 / 0) {\r\n    n = digitsToString(x.d);\r\n    e = x.e;\r\n\r\n    // Adjust n exponent so it is a multiple of 3 away from x exponent.\r\n    if (s = (e - n.length + 1) % 3) n += (s == 1 || s == -2 ? '0' : '00');\r\n    s = mathpow(n, 1 / 3);\r\n\r\n    // Rarely, e may be one less than the result exponent value.\r\n    e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\r\n\r\n    if (s == 1 / 0) {\r\n      n = '5e' + e;\r\n    } else {\r\n      n = s.toExponential();\r\n      n = n.slice(0, n.indexOf('e') + 1) + e;\r\n    }\r\n\r\n    r = new Ctor(n);\r\n    r.s = x.s;\r\n  } else {\r\n    r = new Ctor(s.toString());\r\n  }\r\n\r\n  sd = (e = Ctor.precision) + 3;\r\n\r\n  // Halley's method.\r\n  // TODO? Compare Newton's method.\r\n  for (;;) {\r\n    t = r;\r\n    t3 = t.times(t).times(t);\r\n    t3plusx = t3.plus(x);\r\n    r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\r\n\r\n    // TODO? Replace with for-loop and checkRoundingDigits.\r\n    if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n      n = n.slice(sd - 3, sd + 1);\r\n\r\n      // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or 4999\r\n      // , i.e. approaching a rounding boundary, continue the iteration.\r\n      if (n == '9999' || !rep && n == '4999') {\r\n\r\n        // On the first iteration only, check to see if rounding up gives the exact result as the\r\n        // nines may infinitely repeat.\r\n        if (!rep) {\r\n          finalise(t, e + 1, 0);\r\n\r\n          if (t.times(t).times(t).eq(x)) {\r\n            r = t;\r\n            break;\r\n          }\r\n        }\r\n\r\n        sd += 4;\r\n        rep = 1;\r\n      } else {\r\n\r\n        // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n        // If not, then there are further digits and m will be truthy.\r\n        if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n          // Truncate to the first rounding digit.\r\n          finalise(r, e + 1, 1);\r\n          m = !r.times(r).times(r).eq(x);\r\n        }\r\n\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  external = true;\r\n\r\n  return finalise(r, e, Ctor.rounding, m);\r\n};\r\n\r\n\r\n/*\r\n * Return the number of decimal places of the value of this Decimal.\r\n *\r\n */\r\nP.decimalPlaces = P.dp = function () {\r\n  var w,\r\n    d = this.d,\r\n    n = NaN;\r\n\r\n  if (d) {\r\n    w = d.length - 1;\r\n    n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last word.\r\n    w = d[w];\r\n    if (w) for (; w % 10 == 0; w /= 10) n--;\r\n    if (n < 0) n = 0;\r\n  }\r\n\r\n  return n;\r\n};\r\n\r\n\r\n/*\r\n *  n / 0 = I\r\n *  n / N = N\r\n *  n / I = 0\r\n *  0 / n = 0\r\n *  0 / 0 = N\r\n *  0 / N = N\r\n *  0 / I = 0\r\n *  N / n = N\r\n *  N / 0 = N\r\n *  N / N = N\r\n *  N / I = N\r\n *  I / n = I\r\n *  I / 0 = I\r\n *  I / N = N\r\n *  I / I = N\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal divided by `y`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.dividedBy = P.div = function (y) {\r\n  return divide(this, new this.constructor(y));\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n * by the value of `y`, rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.dividedToIntegerBy = P.divToInt = function (y) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n  return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n *\r\n */\r\nP.equals = P.eq = function (y) {\r\n  return this.cmp(y) === 0;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n * direction of negative Infinity.\r\n *\r\n */\r\nP.floor = function () {\r\n  return finalise(new this.constructor(this), this.e + 1, 3);\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n * false.\r\n *\r\n */\r\nP.greaterThan = P.gt = function (y) {\r\n  return this.cmp(y) > 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n * otherwise return false.\r\n *\r\n */\r\nP.greaterThanOrEqualTo = P.gte = function (y) {\r\n  var k = this.cmp(y);\r\n  return k == 1 || k === 0;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic cosine of the value in radians of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [1, Infinity]\r\n *\r\n * cosh(x) = 1 + x^2/2! + x^4/4! + x^6/6! + ...\r\n *\r\n * cosh(0)         = 1\r\n * cosh(-0)        = 1\r\n * cosh(Infinity)  = Infinity\r\n * cosh(-Infinity) = Infinity\r\n * cosh(NaN)       = NaN\r\n *\r\n *  x        time taken (ms)   result\r\n * 1000      9                 9.8503555700852349694e+433\r\n * 10000     25                4.4034091128314607936e+4342\r\n * 100000    171               1.4033316802130615897e+43429\r\n * 1000000   3817              1.5166076984010437725e+434294\r\n * 10000000  abandoned after 2 minute wait\r\n *\r\n * TODO? Compare performance of cosh(x) = 0.5 * (exp(x) + exp(-x))\r\n *\r\n */\r\nP.hyperbolicCosine = P.cosh = function () {\r\n  var k, n, pr, rm, len,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    one = new Ctor(1);\r\n\r\n  if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);\r\n  if (x.isZero()) return one;\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n  Ctor.rounding = 1;\r\n  len = x.d.length;\r\n\r\n  // Argument reduction: cos(4x) = 1 - 8cos^2(x) + 8cos^4(x) + 1\r\n  // i.e. cos(x) = 1 - cos^2(x/4)(8 - 8cos^2(x/4))\r\n\r\n  // Estimate the optimum number of times to use the argument reduction.\r\n  // TODO? Estimation reused from cosine() and may not be optimal here.\r\n  if (len < 32) {\r\n    k = Math.ceil(len / 3);\r\n    n = (1 / tinyPow(4, k)).toString();\r\n  } else {\r\n    k = 16;\r\n    n = '2.3283064365386962890625e-10';\r\n  }\r\n\r\n  x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\r\n\r\n  // Reverse argument reduction\r\n  var cosh2_x,\r\n    i = k,\r\n    d8 = new Ctor(8);\r\n  for (; i--;) {\r\n    cosh2_x = x.times(x);\r\n    x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\r\n  }\r\n\r\n  return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic sine of the value in radians of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * sinh(x) = x + x^3/3! + x^5/5! + x^7/7! + ...\r\n *\r\n * sinh(0)         = 0\r\n * sinh(-0)        = -0\r\n * sinh(Infinity)  = Infinity\r\n * sinh(-Infinity) = -Infinity\r\n * sinh(NaN)       = NaN\r\n *\r\n * x        time taken (ms)\r\n * 10       2 ms\r\n * 100      5 ms\r\n * 1000     14 ms\r\n * 10000    82 ms\r\n * 100000   886 ms            1.4033316802130615897e+43429\r\n * 200000   2613 ms\r\n * 300000   5407 ms\r\n * 400000   8824 ms\r\n * 500000   13026 ms          8.7080643612718084129e+217146\r\n * 1000000  48543 ms\r\n *\r\n * TODO? Compare performance of sinh(x) = 0.5 * (exp(x) - exp(-x))\r\n *\r\n */\r\nP.hyperbolicSine = P.sinh = function () {\r\n  var k, pr, rm, len,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n  Ctor.rounding = 1;\r\n  len = x.d.length;\r\n\r\n  if (len < 3) {\r\n    x = taylorSeries(Ctor, 2, x, x, true);\r\n  } else {\r\n\r\n    // Alternative argument reduction: sinh(3x) = sinh(x)(3 + 4sinh^2(x))\r\n    // i.e. sinh(x) = sinh(x/3)(3 + 4sinh^2(x/3))\r\n    // 3 multiplications and 1 addition\r\n\r\n    // Argument reduction: sinh(5x) = sinh(x)(5 + sinh^2(x)(20 + 16sinh^2(x)))\r\n    // i.e. sinh(x) = sinh(x/5)(5 + sinh^2(x/5)(20 + 16sinh^2(x/5)))\r\n    // 4 multiplications and 2 additions\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    k = 1.4 * Math.sqrt(len);\r\n    k = k > 16 ? 16 : k | 0;\r\n\r\n    x = x.times(1 / tinyPow(5, k));\r\n    x = taylorSeries(Ctor, 2, x, x, true);\r\n\r\n    // Reverse argument reduction\r\n    var sinh2_x,\r\n      d5 = new Ctor(5),\r\n      d16 = new Ctor(16),\r\n      d20 = new Ctor(20);\r\n    for (; k--;) {\r\n      sinh2_x = x.times(x);\r\n      x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\r\n    }\r\n  }\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic tangent of the value in radians of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-1, 1]\r\n *\r\n * tanh(x) = sinh(x) / cosh(x)\r\n *\r\n * tanh(0)         = 0\r\n * tanh(-0)        = -0\r\n * tanh(Infinity)  = 1\r\n * tanh(-Infinity) = -1\r\n * tanh(NaN)       = NaN\r\n *\r\n */\r\nP.hyperbolicTangent = P.tanh = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(x.s);\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + 7;\r\n  Ctor.rounding = 1;\r\n\r\n  return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arccosine (inverse cosine) in radians of the value of\r\n * this Decimal.\r\n *\r\n * Domain: [-1, 1]\r\n * Range: [0, pi]\r\n *\r\n * acos(x) = pi/2 - asin(x)\r\n *\r\n * acos(0)       = pi/2\r\n * acos(-0)      = pi/2\r\n * acos(1)       = 0\r\n * acos(-1)      = pi\r\n * acos(1/2)     = pi/3\r\n * acos(-1/2)    = 2*pi/3\r\n * acos(|x| > 1) = NaN\r\n * acos(NaN)     = NaN\r\n *\r\n */\r\nP.inverseCosine = P.acos = function () {\r\n  var halfPi,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    k = x.abs().cmp(1),\r\n    pr = Ctor.precision,\r\n    rm = Ctor.rounding;\r\n\r\n  if (k !== -1) {\r\n    return k === 0\r\n      // |x| is 1\r\n      ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0)\r\n      // |x| > 1 or x is NaN\r\n      : new Ctor(NaN);\r\n  }\r\n\r\n  if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n  // TODO? Special case acos(0.5) = pi/3 and acos(-0.5) = 2*pi/3\r\n\r\n  Ctor.precision = pr + 6;\r\n  Ctor.rounding = 1;\r\n\r\n  x = x.asin();\r\n  halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return halfPi.minus(x);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic cosine in radians of the\r\n * value of this Decimal.\r\n *\r\n * Domain: [1, Infinity]\r\n * Range: [0, Infinity]\r\n *\r\n * acosh(x) = ln(x + sqrt(x^2 - 1))\r\n *\r\n * acosh(x < 1)     = NaN\r\n * acosh(NaN)       = NaN\r\n * acosh(Infinity)  = Infinity\r\n * acosh(-Infinity) = NaN\r\n * acosh(0)         = NaN\r\n * acosh(-0)        = NaN\r\n * acosh(1)         = 0\r\n * acosh(-1)        = NaN\r\n *\r\n */\r\nP.inverseHyperbolicCosine = P.acosh = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);\r\n  if (!x.isFinite()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\r\n  Ctor.rounding = 1;\r\n  external = false;\r\n\r\n  x = x.times(x).minus(1).sqrt().plus(x);\r\n\r\n  external = true;\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.ln();\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic sine in radians of the value\r\n * of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * asinh(x) = ln(x + sqrt(x^2 + 1))\r\n *\r\n * asinh(NaN)       = NaN\r\n * asinh(Infinity)  = Infinity\r\n * asinh(-Infinity) = -Infinity\r\n * asinh(0)         = 0\r\n * asinh(-0)        = -0\r\n *\r\n */\r\nP.inverseHyperbolicSine = P.asinh = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\r\n  Ctor.rounding = 1;\r\n  external = false;\r\n\r\n  x = x.times(x).plus(1).sqrt().plus(x);\r\n\r\n  external = true;\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.ln();\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic tangent in radians of the\r\n * value of this Decimal.\r\n *\r\n * Domain: [-1, 1]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * atanh(x) = 0.5 * ln((1 + x) / (1 - x))\r\n *\r\n * atanh(|x| > 1)   = NaN\r\n * atanh(NaN)       = NaN\r\n * atanh(Infinity)  = NaN\r\n * atanh(-Infinity) = NaN\r\n * atanh(0)         = 0\r\n * atanh(-0)        = -0\r\n * atanh(1)         = Infinity\r\n * atanh(-1)        = -Infinity\r\n *\r\n */\r\nP.inverseHyperbolicTangent = P.atanh = function () {\r\n  var pr, rm, wpr, xsd,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(NaN);\r\n  if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  xsd = x.sd();\r\n\r\n  if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);\r\n\r\n  Ctor.precision = wpr = xsd - x.e;\r\n\r\n  x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\r\n\r\n  Ctor.precision = pr + 4;\r\n  Ctor.rounding = 1;\r\n\r\n  x = x.ln();\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.times(0.5);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arcsine (inverse sine) in radians of the value of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-pi/2, pi/2]\r\n *\r\n * asin(x) = 2*atan(x/(1 + sqrt(1 - x^2)))\r\n *\r\n * asin(0)       = 0\r\n * asin(-0)      = -0\r\n * asin(1/2)     = pi/6\r\n * asin(-1/2)    = -pi/6\r\n * asin(1)       = pi/2\r\n * asin(-1)      = -pi/2\r\n * asin(|x| > 1) = NaN\r\n * asin(NaN)     = NaN\r\n *\r\n * TODO? Compare performance of Taylor series.\r\n *\r\n */\r\nP.inverseSine = P.asin = function () {\r\n  var halfPi, k,\r\n    pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  k = x.abs().cmp(1);\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  if (k !== -1) {\r\n\r\n    // |x| is 1\r\n    if (k === 0) {\r\n      halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n      halfPi.s = x.s;\r\n      return halfPi;\r\n    }\r\n\r\n    // |x| > 1 or x is NaN\r\n    return new Ctor(NaN);\r\n  }\r\n\r\n  // TODO? Special case asin(1/2) = pi/6 and asin(-1/2) = -pi/6\r\n\r\n  Ctor.precision = pr + 6;\r\n  Ctor.rounding = 1;\r\n\r\n  x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.times(2);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arctangent (inverse tangent) in radians of the value\r\n * of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-pi/2, pi/2]\r\n *\r\n * atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n *\r\n * atan(0)         = 0\r\n * atan(-0)        = -0\r\n * atan(1)         = pi/4\r\n * atan(-1)        = -pi/4\r\n * atan(Infinity)  = pi/2\r\n * atan(-Infinity) = -pi/2\r\n * atan(NaN)       = NaN\r\n *\r\n */\r\nP.inverseTangent = P.atan = function () {\r\n  var i, j, k, n, px, t, r, wpr, x2,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    pr = Ctor.precision,\r\n    rm = Ctor.rounding;\r\n\r\n  if (!x.isFinite()) {\r\n    if (!x.s) return new Ctor(NaN);\r\n    if (pr + 4 <= PI_PRECISION) {\r\n      r = getPi(Ctor, pr + 4, rm).times(0.5);\r\n      r.s = x.s;\r\n      return r;\r\n    }\r\n  } else if (x.isZero()) {\r\n    return new Ctor(x);\r\n  } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\r\n    r = getPi(Ctor, pr + 4, rm).times(0.25);\r\n    r.s = x.s;\r\n    return r;\r\n  }\r\n\r\n  Ctor.precision = wpr = pr + 10;\r\n  Ctor.rounding = 1;\r\n\r\n  // TODO? if (x >= 1 && pr <= PI_PRECISION) atan(x) = halfPi * x.s - atan(1 / x);\r\n\r\n  // Argument reduction\r\n  // Ensure |x| < 0.42\r\n  // atan(x) = 2 * atan(x / (1 + sqrt(1 + x^2)))\r\n\r\n  k = Math.min(28, wpr / LOG_BASE + 2 | 0);\r\n\r\n  for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));\r\n\r\n  external = false;\r\n\r\n  j = Math.ceil(wpr / LOG_BASE);\r\n  n = 1;\r\n  x2 = x.times(x);\r\n  r = new Ctor(x);\r\n  px = x;\r\n\r\n  // atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n  for (; i !== -1;) {\r\n    px = px.times(x2);\r\n    t = r.minus(px.div(n += 2));\r\n\r\n    px = px.times(x2);\r\n    r = t.plus(px.div(n += 2));\r\n\r\n    if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);\r\n  }\r\n\r\n  if (k) r = r.times(2 << (k - 1));\r\n\r\n  external = true;\r\n\r\n  return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is a finite number, otherwise return false.\r\n *\r\n */\r\nP.isFinite = function () {\r\n  return !!this.d;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is an integer, otherwise return false.\r\n *\r\n */\r\nP.isInteger = P.isInt = function () {\r\n  return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is NaN, otherwise return false.\r\n *\r\n */\r\nP.isNaN = function () {\r\n  return !this.s;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is negative, otherwise return false.\r\n *\r\n */\r\nP.isNegative = P.isNeg = function () {\r\n  return this.s < 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is positive, otherwise return false.\r\n *\r\n */\r\nP.isPositive = P.isPos = function () {\r\n  return this.s > 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is 0 or -0, otherwise return false.\r\n *\r\n */\r\nP.isZero = function () {\r\n  return !!this.d && this.d[0] === 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n *\r\n */\r\nP.lessThan = P.lt = function (y) {\r\n  return this.cmp(y) < 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n *\r\n */\r\nP.lessThanOrEqualTo = P.lte = function (y) {\r\n  return this.cmp(y) < 1;\r\n};\r\n\r\n\r\n/*\r\n * Return the logarithm of the value of this Decimal to the specified base, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * If no base is specified, return log[10](arg).\r\n *\r\n * log[base](arg) = ln(arg) / ln(base)\r\n *\r\n * The result will always be correctly rounded if the base of the log is 10, and 'almost always'\r\n * otherwise:\r\n *\r\n * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen\r\n * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error\r\n * between the result and the correctly rounded result will be one ulp (unit in the last place).\r\n *\r\n * log[-b](a)       = NaN\r\n * log[0](a)        = NaN\r\n * log[1](a)        = NaN\r\n * log[NaN](a)      = NaN\r\n * log[Infinity](a) = NaN\r\n * log[b](0)        = -Infinity\r\n * log[b](-0)       = -Infinity\r\n * log[b](-a)       = NaN\r\n * log[b](1)        = 0\r\n * log[b](Infinity) = Infinity\r\n * log[b](NaN)      = NaN\r\n *\r\n * [base] {number|string|Decimal} The base of the logarithm.\r\n *\r\n */\r\nP.logarithm = P.log = function (base) {\r\n  var isBase10, d, denominator, k, inf, num, sd, r,\r\n    arg = this,\r\n    Ctor = arg.constructor,\r\n    pr = Ctor.precision,\r\n    rm = Ctor.rounding,\r\n    guard = 5;\r\n\r\n  // Default base is 10.\r\n  if (base == null) {\r\n    base = new Ctor(10);\r\n    isBase10 = true;\r\n  } else {\r\n    base = new Ctor(base);\r\n    d = base.d;\r\n\r\n    // Return NaN if base is negative, or non-finite, or is 0 or 1.\r\n    if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);\r\n\r\n    isBase10 = base.eq(10);\r\n  }\r\n\r\n  d = arg.d;\r\n\r\n  // Is arg negative, non-finite, 0 or 1?\r\n  if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\r\n    return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\r\n  }\r\n\r\n  // The result will have a non-terminating decimal expansion if base is 10 and arg is not an\r\n  // integer power of 10.\r\n  if (isBase10) {\r\n    if (d.length > 1) {\r\n      inf = true;\r\n    } else {\r\n      for (k = d[0]; k % 10 === 0;) k /= 10;\r\n      inf = k !== 1;\r\n    }\r\n  }\r\n\r\n  external = false;\r\n  sd = pr + guard;\r\n  num = naturalLogarithm(arg, sd);\r\n  denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n\r\n  // The result will have 5 rounding digits.\r\n  r = divide(num, denominator, sd, 1);\r\n\r\n  // If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,\r\n  // calculate 10 further digits.\r\n  //\r\n  // If the result is known to have an infinite decimal expansion, repeat this until it is clear\r\n  // that the result is above or below the boundary. Otherwise, if after calculating the 10\r\n  // further digits, the last 14 are nines, round up and assume the result is exact.\r\n  // Also assume the result is exact if the last 14 are zero.\r\n  //\r\n  // Example of a result that will be incorrectly rounded:\r\n  // log[1048576](4503599627370502) = 2.60000000000000009610279511444746...\r\n  // The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7, but it\r\n  // will be given as 2.6 as there are 15 zeros immediately after the requested decimal place, so\r\n  // the exact result would be assumed to be 2.6, which rounded using ROUND_CEIL to 1 decimal\r\n  // place is still 2.6.\r\n  if (checkRoundingDigits(r.d, k = pr, rm)) {\r\n\r\n    do {\r\n      sd += 10;\r\n      num = naturalLogarithm(arg, sd);\r\n      denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n      r = divide(num, denominator, sd, 1);\r\n\r\n      if (!inf) {\r\n\r\n        // Check for 14 nines from the 2nd rounding digit, as the first may be 4.\r\n        if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\r\n          r = finalise(r, pr + 1, 0);\r\n        }\r\n\r\n        break;\r\n      }\r\n    } while (checkRoundingDigits(r.d, k += 10, rm));\r\n  }\r\n\r\n  external = true;\r\n\r\n  return finalise(r, pr, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the maximum of the arguments and the value of this Decimal.\r\n *\r\n * arguments {number|string|Decimal}\r\n *\r\nP.max = function () {\r\n  Array.prototype.push.call(arguments, this);\r\n  return maxOrMin(this.constructor, arguments, 'lt');\r\n};\r\n */\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the minimum of the arguments and the value of this Decimal.\r\n *\r\n * arguments {number|string|Decimal}\r\n *\r\nP.min = function () {\r\n  Array.prototype.push.call(arguments, this);\r\n  return maxOrMin(this.constructor, arguments, 'gt');\r\n};\r\n */\r\n\r\n\r\n/*\r\n *  n - 0 = n\r\n *  n - N = N\r\n *  n - I = -I\r\n *  0 - n = -n\r\n *  0 - 0 = 0\r\n *  0 - N = N\r\n *  0 - I = -I\r\n *  N - n = N\r\n *  N - 0 = N\r\n *  N - N = N\r\n *  N - I = N\r\n *  I - n = I\r\n *  I - 0 = I\r\n *  I - N = N\r\n *  I - I = N\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal minus `y`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.minus = P.sub = function (y) {\r\n  var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  y = new Ctor(y);\r\n\r\n  // If either is not finite...\r\n  if (!x.d || !y.d) {\r\n\r\n    // Return NaN if either is NaN.\r\n    if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n    // Return y negated if x is finite and y is ±Infinity.\r\n    else if (x.d) y.s = -y.s;\r\n\r\n    // Return x if y is finite and x is ±Infinity.\r\n    // Return x if both are ±Infinity with different signs.\r\n    // Return NaN if both are ±Infinity with the same sign.\r\n    else y = new Ctor(y.d || x.s !== y.s ? x : NaN);\r\n\r\n    return y;\r\n  }\r\n\r\n  // If signs differ...\r\n  if (x.s != y.s) {\r\n    y.s = -y.s;\r\n    return x.plus(y);\r\n  }\r\n\r\n  xd = x.d;\r\n  yd = y.d;\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  // If either is zero...\r\n  if (!xd[0] || !yd[0]) {\r\n\r\n    // Return y negated if x is zero and y is non-zero.\r\n    if (yd[0]) y.s = -y.s;\r\n\r\n    // Return x if y is zero and x is non-zero.\r\n    else if (xd[0]) y = new Ctor(x);\r\n\r\n    // Return zero if both are zero.\r\n    // From IEEE 754 (2008) 6.3: 0 - 0 = -0 - -0 = -0 when rounding to -Infinity.\r\n    else return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  }\r\n\r\n  // x and y are finite, non-zero numbers with the same sign.\r\n\r\n  // Calculate base 1e7 exponents.\r\n  e = mathfloor(y.e / LOG_BASE);\r\n  xe = mathfloor(x.e / LOG_BASE);\r\n\r\n  xd = xd.slice();\r\n  k = xe - e;\r\n\r\n  // If base 1e7 exponents differ...\r\n  if (k) {\r\n    xLTy = k < 0;\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      k = -k;\r\n      len = yd.length;\r\n    } else {\r\n      d = yd;\r\n      e = xe;\r\n      len = xd.length;\r\n    }\r\n\r\n    // Numbers with massively different exponents would result in a very high number of\r\n    // zeros needing to be prepended, but this can be avoided while still ensuring correct\r\n    // rounding by limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n    i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n    if (k > i) {\r\n      k = i;\r\n      d.length = 1;\r\n    }\r\n\r\n    // Prepend zeros to equalise exponents.\r\n    d.reverse();\r\n    for (i = k; i--;) d.push(0);\r\n    d.reverse();\r\n\r\n  // Base 1e7 exponents equal.\r\n  } else {\r\n\r\n    // Check digits to determine which is the bigger number.\r\n\r\n    i = xd.length;\r\n    len = yd.length;\r\n    xLTy = i < len;\r\n    if (xLTy) len = i;\r\n\r\n    for (i = 0; i < len; i++) {\r\n      if (xd[i] != yd[i]) {\r\n        xLTy = xd[i] < yd[i];\r\n        break;\r\n      }\r\n    }\r\n\r\n    k = 0;\r\n  }\r\n\r\n  if (xLTy) {\r\n    d = xd;\r\n    xd = yd;\r\n    yd = d;\r\n    y.s = -y.s;\r\n  }\r\n\r\n  len = xd.length;\r\n\r\n  // Append zeros to `xd` if shorter.\r\n  // Don't add zeros to `yd` if shorter as subtraction only needs to start at `yd` length.\r\n  for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n  // Subtract yd from xd.\r\n  for (i = yd.length; i > k;) {\r\n\r\n    if (xd[--i] < yd[i]) {\r\n      for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n      --xd[j];\r\n      xd[i] += BASE;\r\n    }\r\n\r\n    xd[i] -= yd[i];\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (; xd[--len] === 0;) xd.pop();\r\n\r\n  // Remove leading zeros and adjust exponent accordingly.\r\n  for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n  // Zero?\r\n  if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n  y.d = xd;\r\n  y.e = getBase10Exponent(xd, e);\r\n\r\n  return external ? finalise(y, pr, rm) : y;\r\n};\r\n\r\n\r\n/*\r\n *   n % 0 =  N\r\n *   n % N =  N\r\n *   n % I =  n\r\n *   0 % n =  0\r\n *  -0 % n = -0\r\n *   0 % 0 =  N\r\n *   0 % N =  N\r\n *   0 % I =  0\r\n *   N % n =  N\r\n *   N % 0 =  N\r\n *   N % N =  N\r\n *   N % I =  N\r\n *   I % n =  N\r\n *   I % 0 =  N\r\n *   I % N =  N\r\n *   I % I =  N\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal modulo `y`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * The result depends on the modulo mode.\r\n *\r\n */\r\nP.modulo = P.mod = function (y) {\r\n  var q,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  y = new Ctor(y);\r\n\r\n  // Return NaN if x is ±Infinity or NaN, or y is NaN or ±0.\r\n  if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);\r\n\r\n  // Return x if y is ±Infinity or x is ±0.\r\n  if (!y.d || x.d && !x.d[0]) {\r\n    return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\r\n  }\r\n\r\n  // Prevent rounding of intermediate calculations.\r\n  external = false;\r\n\r\n  if (Ctor.modulo == 9) {\r\n\r\n    // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n    // result = x - q * y    where  0 <= result < abs(y)\r\n    q = divide(x, y.abs(), 0, 3, 1);\r\n    q.s *= y.s;\r\n  } else {\r\n    q = divide(x, y, 0, Ctor.modulo, 1);\r\n  }\r\n\r\n  q = q.times(y);\r\n\r\n  external = true;\r\n\r\n  return x.minus(q);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n * i.e. the base e raised to the power the value of this Decimal, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.naturalExponential = P.exp = function () {\r\n  return naturalExponential(this);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n * rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.naturalLogarithm = P.ln = function () {\r\n  return naturalLogarithm(this);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n * -1.\r\n *\r\n */\r\nP.negated = P.neg = function () {\r\n  var x = new this.constructor(this);\r\n  x.s = -x.s;\r\n  return finalise(x);\r\n};\r\n\r\n\r\n/*\r\n *  n + 0 = n\r\n *  n + N = N\r\n *  n + I = I\r\n *  0 + n = n\r\n *  0 + 0 = 0\r\n *  0 + N = N\r\n *  0 + I = I\r\n *  N + n = N\r\n *  N + 0 = N\r\n *  N + N = N\r\n *  N + I = N\r\n *  I + n = I\r\n *  I + 0 = I\r\n *  I + N = N\r\n *  I + I = I\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal plus `y`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.plus = P.add = function (y) {\r\n  var carry, d, e, i, k, len, pr, rm, xd, yd,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  y = new Ctor(y);\r\n\r\n  // If either is not finite...\r\n  if (!x.d || !y.d) {\r\n\r\n    // Return NaN if either is NaN.\r\n    if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n    // Return x if y is finite and x is ±Infinity.\r\n    // Return x if both are ±Infinity with the same sign.\r\n    // Return NaN if both are ±Infinity with different signs.\r\n    // Return y if x is finite and y is ±Infinity.\r\n    else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);\r\n\r\n    return y;\r\n  }\r\n\r\n   // If signs differ...\r\n  if (x.s != y.s) {\r\n    y.s = -y.s;\r\n    return x.minus(y);\r\n  }\r\n\r\n  xd = x.d;\r\n  yd = y.d;\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  // If either is zero...\r\n  if (!xd[0] || !yd[0]) {\r\n\r\n    // Return x if y is zero.\r\n    // Return y if y is non-zero.\r\n    if (!yd[0]) y = new Ctor(x);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  }\r\n\r\n  // x and y are finite, non-zero numbers with the same sign.\r\n\r\n  // Calculate base 1e7 exponents.\r\n  k = mathfloor(x.e / LOG_BASE);\r\n  e = mathfloor(y.e / LOG_BASE);\r\n\r\n  xd = xd.slice();\r\n  i = k - e;\r\n\r\n  // If base 1e7 exponents differ...\r\n  if (i) {\r\n\r\n    if (i < 0) {\r\n      d = xd;\r\n      i = -i;\r\n      len = yd.length;\r\n    } else {\r\n      d = yd;\r\n      e = k;\r\n      len = xd.length;\r\n    }\r\n\r\n    // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n    k = Math.ceil(pr / LOG_BASE);\r\n    len = k > len ? k + 1 : len + 1;\r\n\r\n    if (i > len) {\r\n      i = len;\r\n      d.length = 1;\r\n    }\r\n\r\n    // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n    d.reverse();\r\n    for (; i--;) d.push(0);\r\n    d.reverse();\r\n  }\r\n\r\n  len = xd.length;\r\n  i = yd.length;\r\n\r\n  // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n  if (len - i < 0) {\r\n    i = len;\r\n    d = yd;\r\n    yd = xd;\r\n    xd = d;\r\n  }\r\n\r\n  // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n  for (carry = 0; i;) {\r\n    carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n    xd[i] %= BASE;\r\n  }\r\n\r\n  if (carry) {\r\n    xd.unshift(carry);\r\n    ++e;\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n  for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n  y.d = xd;\r\n  y.e = getBase10Exponent(xd, e);\r\n\r\n  return external ? finalise(y, pr, rm) : y;\r\n};\r\n\r\n\r\n/*\r\n * Return the number of significant digits of the value of this Decimal.\r\n *\r\n * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n *\r\n */\r\nP.precision = P.sd = function (z) {\r\n  var k,\r\n    x = this;\r\n\r\n  if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n  if (x.d) {\r\n    k = getPrecision(x.d);\r\n    if (z && x.e + 1 > k) k = x.e + 1;\r\n  } else {\r\n    k = NaN;\r\n  }\r\n\r\n  return k;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n * rounding mode `rounding`.\r\n *\r\n */\r\nP.round = function () {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sine of the value in radians of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-1, 1]\r\n *\r\n * sin(x) = x - x^3/3! + x^5/5! - ...\r\n *\r\n * sin(0)         = 0\r\n * sin(-0)        = -0\r\n * sin(Infinity)  = NaN\r\n * sin(-Infinity) = NaN\r\n * sin(NaN)       = NaN\r\n *\r\n */\r\nP.sine = P.sin = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(NaN);\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n  Ctor.rounding = 1;\r\n\r\n  x = sine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the square root of this Decimal, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n *  sqrt(-n) =  N\r\n *  sqrt(N)  =  N\r\n *  sqrt(-I) =  N\r\n *  sqrt(I)  =  I\r\n *  sqrt(0)  =  0\r\n *  sqrt(-0) = -0\r\n *\r\n */\r\nP.squareRoot = P.sqrt = function () {\r\n  var m, n, sd, r, rep, t,\r\n    x = this,\r\n    d = x.d,\r\n    e = x.e,\r\n    s = x.s,\r\n    Ctor = x.constructor;\r\n\r\n  // Negative/NaN/Infinity/zero?\r\n  if (s !== 1 || !d || !d[0]) {\r\n    return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\r\n  }\r\n\r\n  external = false;\r\n\r\n  // Initial estimate.\r\n  s = Math.sqrt(+x);\r\n\r\n  // Math.sqrt underflow/overflow?\r\n  // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n  if (s == 0 || s == 1 / 0) {\r\n    n = digitsToString(d);\r\n\r\n    if ((n.length + e) % 2 == 0) n += '0';\r\n    s = Math.sqrt(n);\r\n    e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n    if (s == 1 / 0) {\r\n      n = '5e' + e;\r\n    } else {\r\n      n = s.toExponential();\r\n      n = n.slice(0, n.indexOf('e') + 1) + e;\r\n    }\r\n\r\n    r = new Ctor(n);\r\n  } else {\r\n    r = new Ctor(s.toString());\r\n  }\r\n\r\n  sd = (e = Ctor.precision) + 3;\r\n\r\n  // Newton-Raphson iteration.\r\n  for (;;) {\r\n    t = r;\r\n    r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\r\n\r\n    // TODO? Replace with for-loop and checkRoundingDigits.\r\n    if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n      n = n.slice(sd - 3, sd + 1);\r\n\r\n      // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n      // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n      if (n == '9999' || !rep && n == '4999') {\r\n\r\n        // On the first iteration only, check to see if rounding up gives the exact result as the\r\n        // nines may infinitely repeat.\r\n        if (!rep) {\r\n          finalise(t, e + 1, 0);\r\n\r\n          if (t.times(t).eq(x)) {\r\n            r = t;\r\n            break;\r\n          }\r\n        }\r\n\r\n        sd += 4;\r\n        rep = 1;\r\n      } else {\r\n\r\n        // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n        // If not, then there are further digits and m will be truthy.\r\n        if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n          // Truncate to the first rounding digit.\r\n          finalise(r, e + 1, 1);\r\n          m = !r.times(r).eq(x);\r\n        }\r\n\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  external = true;\r\n\r\n  return finalise(r, e, Ctor.rounding, m);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the tangent of the value in radians of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * tan(0)         = 0\r\n * tan(-0)        = -0\r\n * tan(Infinity)  = NaN\r\n * tan(-Infinity) = NaN\r\n * tan(NaN)       = NaN\r\n *\r\n */\r\nP.tangent = P.tan = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(NaN);\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + 10;\r\n  Ctor.rounding = 1;\r\n\r\n  x = x.sin();\r\n  x.s = 1;\r\n  x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n *  n * 0 = 0\r\n *  n * N = N\r\n *  n * I = I\r\n *  0 * n = 0\r\n *  0 * 0 = 0\r\n *  0 * N = N\r\n *  0 * I = N\r\n *  N * n = N\r\n *  N * 0 = N\r\n *  N * N = N\r\n *  N * I = N\r\n *  I * n = I\r\n *  I * 0 = N\r\n *  I * N = N\r\n *  I * I = I\r\n *\r\n * Return a new Decimal whose value is this Decimal times `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.times = P.mul = function (y) {\r\n  var carry, e, i, k, r, rL, t, xdL, ydL,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    xd = x.d,\r\n    yd = (y = new Ctor(y)).d;\r\n\r\n  y.s *= x.s;\r\n\r\n   // If either is NaN, ±Infinity or ±0...\r\n  if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n    return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd\r\n\r\n      // Return NaN if either is NaN.\r\n      // Return NaN if x is ±0 and y is ±Infinity, or y is ±0 and x is ±Infinity.\r\n      ? NaN\r\n\r\n      // Return ±Infinity if either is ±Infinity.\r\n      // Return ±0 if either is ±0.\r\n      : !xd || !yd ? y.s / 0 : y.s * 0);\r\n  }\r\n\r\n  e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\r\n  xdL = xd.length;\r\n  ydL = yd.length;\r\n\r\n  // Ensure xd points to the longer array.\r\n  if (xdL < ydL) {\r\n    r = xd;\r\n    xd = yd;\r\n    yd = r;\r\n    rL = xdL;\r\n    xdL = ydL;\r\n    ydL = rL;\r\n  }\r\n\r\n  // Initialise the result array with zeros.\r\n  r = [];\r\n  rL = xdL + ydL;\r\n  for (i = rL; i--;) r.push(0);\r\n\r\n  // Multiply!\r\n  for (i = ydL; --i >= 0;) {\r\n    carry = 0;\r\n    for (k = xdL + i; k > i;) {\r\n      t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n      r[k--] = t % BASE | 0;\r\n      carry = t / BASE | 0;\r\n    }\r\n\r\n    r[k] = (r[k] + carry) % BASE | 0;\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (; !r[--rL];) r.pop();\r\n\r\n  if (carry) ++e;\r\n  else r.shift();\r\n\r\n  y.d = r;\r\n  y.e = getBase10Exponent(r, e);\r\n\r\n  return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in base 2, round to `sd` significant\r\n * digits using rounding mode `rm`.\r\n *\r\n * If the optional `sd` argument is present then return binary exponential notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toBinary = function (sd, rm) {\r\n  return toStringBinary(this, 2, sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n *\r\n * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n *\r\n * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toDecimalPlaces = P.toDP = function (dp, rm) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  x = new Ctor(x);\r\n  if (dp === void 0) return x;\r\n\r\n  checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n  if (rm === void 0) rm = Ctor.rounding;\r\n  else checkInt32(rm, 0, 8);\r\n\r\n  return finalise(x, dp + x.e + 1, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in exponential notation rounded to\r\n * `dp` fixed decimal places using rounding mode `rounding`.\r\n *\r\n * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toExponential = function (dp, rm) {\r\n  var str,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (dp === void 0) {\r\n    str = finiteToString(x, true);\r\n  } else {\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    x = finalise(new Ctor(x), dp + 1, rm);\r\n    str = finiteToString(x, true, dp + 1);\r\n  }\r\n\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n * omitted.\r\n *\r\n * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n *\r\n * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n * (-0).toFixed(3) is '0.000'.\r\n * (-0.5).toFixed(0) is '-0'.\r\n *\r\n */\r\nP.toFixed = function (dp, rm) {\r\n  var str, y,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (dp === void 0) {\r\n    str = finiteToString(x);\r\n  } else {\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    y = finalise(new Ctor(x), dp + x.e + 1, rm);\r\n    str = finiteToString(y, false, dp + y.e + 1);\r\n  }\r\n\r\n  // To determine whether to add the minus sign look at the value before it was rounded,\r\n  // i.e. look at `x` rather than `y`.\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return an array representing the value of this Decimal as a simple fraction with an integer\r\n * numerator and an integer denominator.\r\n *\r\n * The denominator will be a positive non-zero value less than or equal to the specified maximum\r\n * denominator. If a maximum denominator is not specified, the denominator will be the lowest\r\n * value necessary to represent the number exactly.\r\n *\r\n * [maxD] {number|string|Decimal} Maximum denominator. Integer >= 1 and < Infinity.\r\n *\r\n */\r\nP.toFraction = function (maxD) {\r\n  var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r,\r\n    x = this,\r\n    xd = x.d,\r\n    Ctor = x.constructor;\r\n\r\n  if (!xd) return new Ctor(x);\r\n\r\n  n1 = d0 = new Ctor(1);\r\n  d1 = n0 = new Ctor(0);\r\n\r\n  d = new Ctor(d1);\r\n  e = d.e = getPrecision(xd) - x.e - 1;\r\n  k = e % LOG_BASE;\r\n  d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\r\n\r\n  if (maxD == null) {\r\n\r\n    // d is 10**e, the minimum max-denominator needed.\r\n    maxD = e > 0 ? d : n1;\r\n  } else {\r\n    n = new Ctor(maxD);\r\n    if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);\r\n    maxD = n.gt(d) ? (e > 0 ? d : n1) : n;\r\n  }\r\n\r\n  external = false;\r\n  n = new Ctor(digitsToString(xd));\r\n  pr = Ctor.precision;\r\n  Ctor.precision = e = xd.length * LOG_BASE * 2;\r\n\r\n  for (;;)  {\r\n    q = divide(n, d, 0, 1, 1);\r\n    d2 = d0.plus(q.times(d1));\r\n    if (d2.cmp(maxD) == 1) break;\r\n    d0 = d1;\r\n    d1 = d2;\r\n    d2 = n1;\r\n    n1 = n0.plus(q.times(d2));\r\n    n0 = d2;\r\n    d2 = d;\r\n    d = n.minus(q.times(d2));\r\n    n = d2;\r\n  }\r\n\r\n  d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\r\n  n0 = n0.plus(d2.times(n1));\r\n  d0 = d0.plus(d2.times(d1));\r\n  n0.s = n1.s = x.s;\r\n\r\n  // Determine which fraction is closer to x, n0/d0 or n1/d1?\r\n  r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1\r\n      ? [n1, d1] : [n0, d0];\r\n\r\n  Ctor.precision = pr;\r\n  external = true;\r\n\r\n  return r;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in base 16, round to `sd` significant\r\n * digits using rounding mode `rm`.\r\n *\r\n * If the optional `sd` argument is present then return binary exponential notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toHexadecimal = P.toHex = function (sd, rm) {\r\n  return toStringBinary(this, 16, sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Returns a new Decimal whose value is the nearest multiple of `y` in the direction of rounding\r\n * mode `rm`, or `Decimal.rounding` if `rm` is omitted, to the value of this Decimal.\r\n *\r\n * The return value will always have the same sign as this Decimal, unless either this Decimal\r\n * or `y` is NaN, in which case the return value will be also be NaN.\r\n *\r\n * The return value is not affected by the value of `precision`.\r\n *\r\n * y {number|string|Decimal} The magnitude to round to a multiple of.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n * 'toNearest() rounding mode not an integer: {rm}'\r\n * 'toNearest() rounding mode out of range: {rm}'\r\n *\r\n */\r\nP.toNearest = function (y, rm) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  x = new Ctor(x);\r\n\r\n  if (y == null) {\r\n\r\n    // If x is not finite, return x.\r\n    if (!x.d) return x;\r\n\r\n    y = new Ctor(1);\r\n    rm = Ctor.rounding;\r\n  } else {\r\n    y = new Ctor(y);\r\n    if (rm === void 0) {\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    // If x is not finite, return x if y is not NaN, else NaN.\r\n    if (!x.d) return y.s ? x : y;\r\n\r\n    // If y is not finite, return Infinity with the sign of x if y is Infinity, else NaN.\r\n    if (!y.d) {\r\n      if (y.s) y.s = x.s;\r\n      return y;\r\n    }\r\n  }\r\n\r\n  // If y is not zero, calculate the nearest multiple of y to x.\r\n  if (y.d[0]) {\r\n    external = false;\r\n    x = divide(x, y, 0, rm, 1).times(y);\r\n    external = true;\r\n    finalise(x);\r\n\r\n  // If y is zero, return zero with the sign of x.\r\n  } else {\r\n    y.s = x.s;\r\n    x = y;\r\n  }\r\n\r\n  return x;\r\n};\r\n\r\n\r\n/*\r\n * Return the value of this Decimal converted to a number primitive.\r\n * Zero keeps its sign.\r\n *\r\n */\r\nP.toNumber = function () {\r\n  return +this;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in base 8, round to `sd` significant\r\n * digits using rounding mode `rm`.\r\n *\r\n * If the optional `sd` argument is present then return binary exponential notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toOctal = function (sd, rm) {\r\n  return toStringBinary(this, 8, sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal raised to the power `y`, rounded\r\n * to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * ECMAScript compliant.\r\n *\r\n *   pow(x, NaN)                           = NaN\r\n *   pow(x, ±0)                            = 1\r\n\r\n *   pow(NaN, non-zero)                    = NaN\r\n *   pow(abs(x) > 1, +Infinity)            = +Infinity\r\n *   pow(abs(x) > 1, -Infinity)            = +0\r\n *   pow(abs(x) == 1, ±Infinity)           = NaN\r\n *   pow(abs(x) < 1, +Infinity)            = +0\r\n *   pow(abs(x) < 1, -Infinity)            = +Infinity\r\n *   pow(+Infinity, y > 0)                 = +Infinity\r\n *   pow(+Infinity, y < 0)                 = +0\r\n *   pow(-Infinity, odd integer > 0)       = -Infinity\r\n *   pow(-Infinity, even integer > 0)      = +Infinity\r\n *   pow(-Infinity, odd integer < 0)       = -0\r\n *   pow(-Infinity, even integer < 0)      = +0\r\n *   pow(+0, y > 0)                        = +0\r\n *   pow(+0, y < 0)                        = +Infinity\r\n *   pow(-0, odd integer > 0)              = -0\r\n *   pow(-0, even integer > 0)             = +0\r\n *   pow(-0, odd integer < 0)              = -Infinity\r\n *   pow(-0, even integer < 0)             = +Infinity\r\n *   pow(finite x < 0, finite non-integer) = NaN\r\n *\r\n * For non-integer or very large exponents pow(x, y) is calculated using\r\n *\r\n *   x^y = exp(y*ln(x))\r\n *\r\n * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the\r\n * probability of an incorrectly rounded result\r\n * P([49]9{14} | [50]0{14}) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14\r\n * i.e. 1 in 250,000,000,000,000\r\n *\r\n * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).\r\n *\r\n * y {number|string|Decimal} The power to which to raise this Decimal.\r\n *\r\n */\r\nP.toPower = P.pow = function (y) {\r\n  var e, k, pr, r, rm, s,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    yn = +(y = new Ctor(y));\r\n\r\n  // Either ±Infinity, NaN or ±0?\r\n  if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));\r\n\r\n  x = new Ctor(x);\r\n\r\n  if (x.eq(1)) return x;\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  if (y.eq(1)) return finalise(x, pr, rm);\r\n\r\n  // y exponent\r\n  e = mathfloor(y.e / LOG_BASE);\r\n\r\n  // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n  if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n    r = intPow(Ctor, x, k, pr);\r\n    return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\r\n  }\r\n\r\n  s = x.s;\r\n\r\n  // if x is negative\r\n  if (s < 0) {\r\n\r\n    // if y is not an integer\r\n    if (e < y.d.length - 1) return new Ctor(NaN);\r\n\r\n    // Result is positive if x is negative and the last digit of integer y is even.\r\n    if ((y.d[e] & 1) == 0) s = 1;\r\n\r\n    // if x.eq(-1)\r\n    if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\r\n      x.s = s;\r\n      return x;\r\n    }\r\n  }\r\n\r\n  // Estimate result exponent.\r\n  // x^y = 10^e,  where e = y * log10(x)\r\n  // log10(x) = log10(x_significand) + x_exponent\r\n  // log10(x_significand) = ln(x_significand) / ln(10)\r\n  k = mathpow(+x, yn);\r\n  e = k == 0 || !isFinite(k)\r\n    ? mathfloor(yn * (Math.log('0.' + digitsToString(x.d)) / Math.LN10 + x.e + 1))\r\n    : new Ctor(k + '').e;\r\n\r\n  // Exponent estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e: -1.\r\n\r\n  // Overflow/underflow?\r\n  if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);\r\n\r\n  external = false;\r\n  Ctor.rounding = x.s = 1;\r\n\r\n  // Estimate the extra guard digits needed to ensure five correct rounding digits from\r\n  // naturalLogarithm(x). Example of failure without these extra digits (precision: 10):\r\n  // new Decimal(2.32456).pow('2087987436534566.46411')\r\n  // should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815\r\n  k = Math.min(12, (e + '').length);\r\n\r\n  // r = x^y = exp(y*ln(x))\r\n  r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\r\n\r\n  // r may be Infinity, e.g. (0.9999999999999999).pow(-1e+40)\r\n  if (r.d) {\r\n\r\n    // Truncate to the required precision plus five rounding digits.\r\n    r = finalise(r, pr + 5, 1);\r\n\r\n    // If the rounding digits are [49]9999 or [50]0000 increase the precision by 10 and recalculate\r\n    // the result.\r\n    if (checkRoundingDigits(r.d, pr, rm)) {\r\n      e = pr + 10;\r\n\r\n      // Truncate to the increased precision plus five rounding digits.\r\n      r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\r\n\r\n      // Check for 14 nines from the 2nd rounding digit (the first rounding digit may be 4 or 9).\r\n      if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\r\n        r = finalise(r, pr + 1, 0);\r\n      }\r\n    }\r\n  }\r\n\r\n  r.s = s;\r\n  external = true;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(r, pr, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n * the integer part of the value in normal notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toPrecision = function (sd, rm) {\r\n  var str,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (sd === void 0) {\r\n    str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n  } else {\r\n    checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    x = finalise(new Ctor(x), sd, rm);\r\n    str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\r\n  }\r\n\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n * omitted.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n * 'toSD() digits out of range: {sd}'\r\n * 'toSD() digits not an integer: {sd}'\r\n * 'toSD() rounding mode not an integer: {rm}'\r\n * 'toSD() rounding mode out of range: {rm}'\r\n *\r\n */\r\nP.toSignificantDigits = P.toSD = function (sd, rm) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (sd === void 0) {\r\n    sd = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n  } else {\r\n    checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n  }\r\n\r\n  return finalise(new Ctor(x), sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal.\r\n *\r\n * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n *\r\n */\r\nP.toString = function () {\r\n  var x = this,\r\n    Ctor = x.constructor,\r\n    str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.\r\n *\r\n */\r\nP.truncated = P.trunc = function () {\r\n  return finalise(new this.constructor(this), this.e + 1, 1);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal.\r\n * Unlike `toString`, negative zero will include the minus sign.\r\n *\r\n */\r\nP.valueOf = P.toJSON = function () {\r\n  var x = this,\r\n    Ctor = x.constructor,\r\n    str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n  return x.isNeg() ? '-' + str : str;\r\n};\r\n\r\n\r\n// Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n/*\r\n *  digitsToString           P.cubeRoot, P.logarithm, P.squareRoot, P.toFraction, P.toPower,\r\n *                           finiteToString, naturalExponential, naturalLogarithm\r\n *  checkInt32               P.toDecimalPlaces, P.toExponential, P.toFixed, P.toNearest,\r\n *                           P.toPrecision, P.toSignificantDigits, toStringBinary, random\r\n *  checkRoundingDigits      P.logarithm, P.toPower, naturalExponential, naturalLogarithm\r\n *  convertBase              toStringBinary, parseOther\r\n *  cos                      P.cos\r\n *  divide                   P.atanh, P.cubeRoot, P.dividedBy, P.dividedToIntegerBy,\r\n *                           P.logarithm, P.modulo, P.squareRoot, P.tan, P.tanh, P.toFraction,\r\n *                           P.toNearest, toStringBinary, naturalExponential, naturalLogarithm,\r\n *                           taylorSeries, atan2, parseOther\r\n *  finalise                 P.absoluteValue, P.atan, P.atanh, P.ceil, P.cos, P.cosh,\r\n *                           P.cubeRoot, P.dividedToIntegerBy, P.floor, P.logarithm, P.minus,\r\n *                           P.modulo, P.negated, P.plus, P.round, P.sin, P.sinh, P.squareRoot,\r\n *                           P.tan, P.times, P.toDecimalPlaces, P.toExponential, P.toFixed,\r\n *                           P.toNearest, P.toPower, P.toPrecision, P.toSignificantDigits,\r\n *                           P.truncated, divide, getLn10, getPi, naturalExponential,\r\n *                           naturalLogarithm, ceil, floor, round, trunc\r\n *  finiteToString           P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf,\r\n *                           toStringBinary\r\n *  getBase10Exponent        P.minus, P.plus, P.times, parseOther\r\n *  getLn10                  P.logarithm, naturalLogarithm\r\n *  getPi                    P.acos, P.asin, P.atan, toLessThanHalfPi, atan2\r\n *  getPrecision             P.precision, P.toFraction\r\n *  getZeroString            digitsToString, finiteToString\r\n *  intPow                   P.toPower, parseOther\r\n *  isOdd                    toLessThanHalfPi\r\n *  maxOrMin                 max, min\r\n *  naturalExponential       P.naturalExponential, P.toPower\r\n *  naturalLogarithm         P.acosh, P.asinh, P.atanh, P.logarithm, P.naturalLogarithm,\r\n *                           P.toPower, naturalExponential\r\n *  nonFiniteToString        finiteToString, toStringBinary\r\n *  parseDecimal             Decimal\r\n *  parseOther               Decimal\r\n *  sin                      P.sin\r\n *  taylorSeries             P.cosh, P.sinh, cos, sin\r\n *  toLessThanHalfPi         P.cos, P.sin\r\n *  toStringBinary           P.toBinary, P.toHexadecimal, P.toOctal\r\n *  truncate                 intPow\r\n *\r\n *  Throws:                  P.logarithm, P.precision, P.toFraction, checkInt32, getLn10, getPi,\r\n *                           naturalLogarithm, config, parseOther, random, Decimal\r\n */\r\n\r\n\r\nfunction digitsToString(d) {\r\n  var i, k, ws,\r\n    indexOfLastWord = d.length - 1,\r\n    str = '',\r\n    w = d[0];\r\n\r\n  if (indexOfLastWord > 0) {\r\n    str += w;\r\n    for (i = 1; i < indexOfLastWord; i++) {\r\n      ws = d[i] + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n      str += ws;\r\n    }\r\n\r\n    w = d[i];\r\n    ws = w + '';\r\n    k = LOG_BASE - ws.length;\r\n    if (k) str += getZeroString(k);\r\n  } else if (w === 0) {\r\n    return '0';\r\n  }\r\n\r\n  // Remove trailing zeros of last w.\r\n  for (; w % 10 === 0;) w /= 10;\r\n\r\n  return str + w;\r\n}\r\n\r\n\r\nfunction checkInt32(i, min, max) {\r\n  if (i !== ~~i || i < min || i > max) {\r\n    throw Error(invalidArgument + i);\r\n  }\r\n}\r\n\r\n\r\n/*\r\n * Check 5 rounding digits if `repeating` is null, 4 otherwise.\r\n * `repeating == null` if caller is `log` or `pow`,\r\n * `repeating != null` if caller is `naturalLogarithm` or `naturalExponential`.\r\n */\r\nfunction checkRoundingDigits(d, i, rm, repeating) {\r\n  var di, k, r, rd;\r\n\r\n  // Get the length of the first word of the array d.\r\n  for (k = d[0]; k >= 10; k /= 10) --i;\r\n\r\n  // Is the rounding digit in the first word of d?\r\n  if (--i < 0) {\r\n    i += LOG_BASE;\r\n    di = 0;\r\n  } else {\r\n    di = Math.ceil((i + 1) / LOG_BASE);\r\n    i %= LOG_BASE;\r\n  }\r\n\r\n  // i is the index (0 - 6) of the rounding digit.\r\n  // E.g. if within the word 3487563 the first rounding digit is 5,\r\n  // then i = 4, k = 1000, rd = 3487563 % 1000 = 563\r\n  k = mathpow(10, LOG_BASE - i);\r\n  rd = d[di] % k | 0;\r\n\r\n  if (repeating == null) {\r\n    if (i < 3) {\r\n      if (i == 0) rd = rd / 100 | 0;\r\n      else if (i == 1) rd = rd / 10 | 0;\r\n      r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;\r\n    } else {\r\n      r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) &&\r\n        (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 ||\r\n          (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\r\n    }\r\n  } else {\r\n    if (i < 4) {\r\n      if (i == 0) rd = rd / 1000 | 0;\r\n      else if (i == 1) rd = rd / 100 | 0;\r\n      else if (i == 2) rd = rd / 10 | 0;\r\n      r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\r\n    } else {\r\n      r = ((repeating || rm < 4) && rd + 1 == k ||\r\n      (!repeating && rm > 3) && rd + 1 == k / 2) &&\r\n        (d[di + 1] / k / 1000 | 0) == mathpow(10, i - 3) - 1;\r\n    }\r\n  }\r\n\r\n  return r;\r\n}\r\n\r\n\r\n// Convert string of `baseIn` to an array of numbers of `baseOut`.\r\n// Eg. convertBase('255', 10, 16) returns [15, 15].\r\n// Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\r\nfunction convertBase(str, baseIn, baseOut) {\r\n  var j,\r\n    arr = [0],\r\n    arrL,\r\n    i = 0,\r\n    strL = str.length;\r\n\r\n  for (; i < strL;) {\r\n    for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;\r\n    arr[0] += NUMERALS.indexOf(str.charAt(i++));\r\n    for (j = 0; j < arr.length; j++) {\r\n      if (arr[j] > baseOut - 1) {\r\n        if (arr[j + 1] === void 0) arr[j + 1] = 0;\r\n        arr[j + 1] += arr[j] / baseOut | 0;\r\n        arr[j] %= baseOut;\r\n      }\r\n    }\r\n  }\r\n\r\n  return arr.reverse();\r\n}\r\n\r\n\r\n/*\r\n * cos(x) = 1 - x^2/2! + x^4/4! - ...\r\n * |x| < pi/2\r\n *\r\n */\r\nfunction cosine(Ctor, x) {\r\n  var k, len, y;\r\n\r\n  if (x.isZero()) return x;\r\n\r\n  // Argument reduction: cos(4x) = 8*(cos^4(x) - cos^2(x)) + 1\r\n  // i.e. cos(x) = 8*(cos^4(x/4) - cos^2(x/4)) + 1\r\n\r\n  // Estimate the optimum number of times to use the argument reduction.\r\n  len = x.d.length;\r\n  if (len < 32) {\r\n    k = Math.ceil(len / 3);\r\n    y = (1 / tinyPow(4, k)).toString();\r\n  } else {\r\n    k = 16;\r\n    y = '2.3283064365386962890625e-10';\r\n  }\r\n\r\n  Ctor.precision += k;\r\n\r\n  x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\r\n\r\n  // Reverse argument reduction\r\n  for (var i = k; i--;) {\r\n    var cos2x = x.times(x);\r\n    x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\r\n  }\r\n\r\n  Ctor.precision -= k;\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Perform division in the specified base.\r\n */\r\nvar divide = (function () {\r\n\r\n  // Assumes non-zero x and k, and hence non-zero result.\r\n  function multiplyInteger(x, k, base) {\r\n    var temp,\r\n      carry = 0,\r\n      i = x.length;\r\n\r\n    for (x = x.slice(); i--;) {\r\n      temp = x[i] * k + carry;\r\n      x[i] = temp % base | 0;\r\n      carry = temp / base | 0;\r\n    }\r\n\r\n    if (carry) x.unshift(carry);\r\n\r\n    return x;\r\n  }\r\n\r\n  function compare(a, b, aL, bL) {\r\n    var i, r;\r\n\r\n    if (aL != bL) {\r\n      r = aL > bL ? 1 : -1;\r\n    } else {\r\n      for (i = r = 0; i < aL; i++) {\r\n        if (a[i] != b[i]) {\r\n          r = a[i] > b[i] ? 1 : -1;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n  function subtract(a, b, aL, base) {\r\n    var i = 0;\r\n\r\n    // Subtract b from a.\r\n    for (; aL--;) {\r\n      a[aL] -= i;\r\n      i = a[aL] < b[aL] ? 1 : 0;\r\n      a[aL] = i * base + a[aL] - b[aL];\r\n    }\r\n\r\n    // Remove leading zeros.\r\n    for (; !a[0] && a.length > 1;) a.shift();\r\n  }\r\n\r\n  return function (x, y, pr, rm, dp, base) {\r\n    var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0,\r\n      yL, yz,\r\n      Ctor = x.constructor,\r\n      sign = x.s == y.s ? 1 : -1,\r\n      xd = x.d,\r\n      yd = y.d;\r\n\r\n    // Either NaN, Infinity or 0?\r\n    if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n      return new Ctor(// Return NaN if either NaN, or both Infinity or 0.\r\n        !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN :\r\n\r\n        // Return ±0 if x is 0 or y is ±Infinity, or return ±Infinity as y is 0.\r\n        xd && xd[0] == 0 || !yd ? sign * 0 : sign / 0);\r\n    }\r\n\r\n    if (base) {\r\n      logBase = 1;\r\n      e = x.e - y.e;\r\n    } else {\r\n      base = BASE;\r\n      logBase = LOG_BASE;\r\n      e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\r\n    }\r\n\r\n    yL = yd.length;\r\n    xL = xd.length;\r\n    q = new Ctor(sign);\r\n    qd = q.d = [];\r\n\r\n    // Result exponent may be one less than e.\r\n    // The digit array of a Decimal from toStringBinary may have trailing zeros.\r\n    for (i = 0; yd[i] == (xd[i] || 0); i++);\r\n\r\n    if (yd[i] > (xd[i] || 0)) e--;\r\n\r\n    if (pr == null) {\r\n      sd = pr = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else if (dp) {\r\n      sd = pr + (x.e - y.e) + 1;\r\n    } else {\r\n      sd = pr;\r\n    }\r\n\r\n    if (sd < 0) {\r\n      qd.push(1);\r\n      more = true;\r\n    } else {\r\n\r\n      // Convert precision in number of base 10 digits to base 1e7 digits.\r\n      sd = sd / logBase + 2 | 0;\r\n      i = 0;\r\n\r\n      // divisor < 1e7\r\n      if (yL == 1) {\r\n        k = 0;\r\n        yd = yd[0];\r\n        sd++;\r\n\r\n        // k is the carry.\r\n        for (; (i < xL || k) && sd--; i++) {\r\n          t = k * base + (xd[i] || 0);\r\n          qd[i] = t / yd | 0;\r\n          k = t % yd | 0;\r\n        }\r\n\r\n        more = k || i < xL;\r\n\r\n      // divisor >= 1e7\r\n      } else {\r\n\r\n        // Normalise xd and yd so highest order digit of yd is >= base/2\r\n        k = base / (yd[0] + 1) | 0;\r\n\r\n        if (k > 1) {\r\n          yd = multiplyInteger(yd, k, base);\r\n          xd = multiplyInteger(xd, k, base);\r\n          yL = yd.length;\r\n          xL = xd.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xd.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL;) rem[remL++] = 0;\r\n\r\n        yz = yd.slice();\r\n        yz.unshift(0);\r\n        yd0 = yd[0];\r\n\r\n        if (yd[1] >= base / 2) ++yd0;\r\n\r\n        do {\r\n          k = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yd, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, k.\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n            // k will be how many times the divisor goes into the current remainder.\r\n            k = rem0 / yd0 | 0;\r\n\r\n            //  Algorithm:\r\n            //  1. product = divisor * trial digit (k)\r\n            //  2. if product > remainder: product -= divisor, k--\r\n            //  3. remainder -= product\r\n            //  4. if product was < remainder at 2:\r\n            //    5. compare new remainder and divisor\r\n            //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n            if (k > 1) {\r\n              if (k >= base) k = base - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiplyInteger(yd, k, base);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              cmp = compare(prod, rem, prodL, remL);\r\n\r\n              // product > remainder.\r\n              if (cmp == 1) {\r\n                k--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yd, prodL, base);\r\n              }\r\n            } else {\r\n\r\n              // cmp is -1.\r\n              // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n              // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n              if (k == 0) cmp = k = 1;\r\n              prod = yd.slice();\r\n            }\r\n\r\n            prodL = prod.length;\r\n            if (prodL < remL) prod.unshift(0);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL, base);\r\n\r\n            // If product was < previous remainder.\r\n            if (cmp == -1) {\r\n              remL = rem.length;\r\n\r\n              // Compare divisor and new remainder.\r\n              cmp = compare(yd, rem, yL, remL);\r\n\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              if (cmp < 1) {\r\n                k++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yd, remL, base);\r\n              }\r\n            }\r\n\r\n            remL = rem.length;\r\n          } else if (cmp === 0) {\r\n            k++;\r\n            rem = [0];\r\n          }    // if cmp === 1, k will be 0\r\n\r\n          // Add the next digit, k, to the result array.\r\n          qd[i++] = k;\r\n\r\n          // Update the remainder.\r\n          if (cmp && rem[0]) {\r\n            rem[remL++] = xd[xi] || 0;\r\n          } else {\r\n            rem = [xd[xi]];\r\n            remL = 1;\r\n          }\r\n\r\n        } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n\r\n        more = rem[0] !== void 0;\r\n      }\r\n\r\n      // Leading zero?\r\n      if (!qd[0]) qd.shift();\r\n    }\r\n\r\n    // logBase is 1 when divide is being used for base conversion.\r\n    if (logBase == 1) {\r\n      q.e = e;\r\n      inexact = more;\r\n    } else {\r\n\r\n      // To calculate q.e, first get the number of digits of qd[0].\r\n      for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;\r\n      q.e = i + e * logBase - 1;\r\n\r\n      finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\r\n    }\r\n\r\n    return q;\r\n  };\r\n})();\r\n\r\n\r\n/*\r\n * Round `x` to `sd` significant digits using rounding mode `rm`.\r\n * Check for over/under-flow.\r\n */\r\n function finalise(x, sd, rm, isTruncated) {\r\n  var digits, i, j, k, rd, roundUp, w, xd, xdi,\r\n    Ctor = x.constructor;\r\n\r\n  // Don't round if sd is null or undefined.\r\n  out: if (sd != null) {\r\n    xd = x.d;\r\n\r\n    // Infinity/NaN.\r\n    if (!xd) return x;\r\n\r\n    // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n    // w: the word of xd containing rd, a base 1e7 number.\r\n    // xdi: the index of w within xd.\r\n    // digits: the number of digits of w.\r\n    // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n    // they had leading zeros)\r\n    // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n    // Get the length of the first word of the digits array xd.\r\n    for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;\r\n    i = sd - digits;\r\n\r\n    // Is the rounding digit in the first word of xd?\r\n    if (i < 0) {\r\n      i += LOG_BASE;\r\n      j = sd;\r\n      w = xd[xdi = 0];\r\n\r\n      // Get the rounding digit at index j of w.\r\n      rd = w / mathpow(10, digits - j - 1) % 10 | 0;\r\n    } else {\r\n      xdi = Math.ceil((i + 1) / LOG_BASE);\r\n      k = xd.length;\r\n      if (xdi >= k) {\r\n        if (isTruncated) {\r\n\r\n          // Needed by `naturalExponential`, `naturalLogarithm` and `squareRoot`.\r\n          for (; k++ <= xdi;) xd.push(0);\r\n          w = rd = 0;\r\n          digits = 1;\r\n          i %= LOG_BASE;\r\n          j = i - LOG_BASE + 1;\r\n        } else {\r\n          break out;\r\n        }\r\n      } else {\r\n        w = k = xd[xdi];\r\n\r\n        // Get the number of digits of w.\r\n        for (digits = 1; k >= 10; k /= 10) digits++;\r\n\r\n        // Get the index of rd within w.\r\n        i %= LOG_BASE;\r\n\r\n        // Get the index of rd within w, adjusted for leading zeros.\r\n        // The number of leading zeros of w is given by LOG_BASE - digits.\r\n        j = i - LOG_BASE + digits;\r\n\r\n        // Get the rounding digit at index j of w.\r\n        rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\r\n      }\r\n    }\r\n\r\n    // Are there any non-zero digits after the rounding digit?\r\n    isTruncated = isTruncated || sd < 0 ||\r\n      xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\r\n\r\n    // The expression `w % mathpow(10, digits - j - 1)` returns all the digits of w to the right\r\n    // of the digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression\r\n    // will give 714.\r\n\r\n    roundUp = rm < 4\r\n      ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n      : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 &&\r\n\r\n        // Check whether the digit to the left of the rounding digit is odd.\r\n        ((i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n          rm == (x.s < 0 ? 8 : 7));\r\n\r\n    if (sd < 1 || !xd[0]) {\r\n      xd.length = 0;\r\n      if (roundUp) {\r\n\r\n        // Convert sd to decimal places.\r\n        sd -= x.e + 1;\r\n\r\n        // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n        xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n        x.e = -sd || 0;\r\n      } else {\r\n\r\n        // Zero.\r\n        xd[0] = x.e = 0;\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n    // Remove excess digits.\r\n    if (i == 0) {\r\n      xd.length = xdi;\r\n      k = 1;\r\n      xdi--;\r\n    } else {\r\n      xd.length = xdi + 1;\r\n      k = mathpow(10, LOG_BASE - i);\r\n\r\n      // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n      // j > 0 means i > number of leading zeros of w.\r\n      xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\r\n    }\r\n\r\n    if (roundUp) {\r\n      for (;;) {\r\n\r\n        // Is the digit to be rounded up in the first word of xd?\r\n        if (xdi == 0) {\r\n\r\n          // i will be the length of xd[0] before k is added.\r\n          for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;\r\n          j = xd[0] += k;\r\n          for (k = 1; j >= 10; j /= 10) k++;\r\n\r\n          // if i != k the length has increased.\r\n          if (i != k) {\r\n            x.e++;\r\n            if (xd[0] == BASE) xd[0] = 1;\r\n          }\r\n\r\n          break;\r\n        } else {\r\n          xd[xdi] += k;\r\n          if (xd[xdi] != BASE) break;\r\n          xd[xdi--] = 0;\r\n          k = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n  }\r\n\r\n  if (external) {\r\n\r\n    // Overflow?\r\n    if (x.e > Ctor.maxE) {\r\n\r\n      // Infinity.\r\n      x.d = null;\r\n      x.e = NaN;\r\n\r\n    // Underflow?\r\n    } else if (x.e < Ctor.minE) {\r\n\r\n      // Zero.\r\n      x.e = 0;\r\n      x.d = [0];\r\n      // Ctor.underflow = true;\r\n    } // else Ctor.underflow = false;\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\nfunction finiteToString(x, isExp, sd) {\r\n  if (!x.isFinite()) return nonFiniteToString(x);\r\n  var k,\r\n    e = x.e,\r\n    str = digitsToString(x.d),\r\n    len = str.length;\r\n\r\n  if (isExp) {\r\n    if (sd && (k = sd - len) > 0) {\r\n      str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n    } else if (len > 1) {\r\n      str = str.charAt(0) + '.' + str.slice(1);\r\n    }\r\n\r\n    str = str + (x.e < 0 ? 'e' : 'e+') + x.e;\r\n  } else if (e < 0) {\r\n    str = '0.' + getZeroString(-e - 1) + str;\r\n    if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n  } else if (e >= len) {\r\n    str += getZeroString(e + 1 - len);\r\n    if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n  } else {\r\n    if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n    if (sd && (k = sd - len) > 0) {\r\n      if (e + 1 === len) str += '.';\r\n      str += getZeroString(k);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// Calculate the base 10 exponent from the base 1e7 exponent.\r\nfunction getBase10Exponent(digits, e) {\r\n  var w = digits[0];\r\n\r\n  // Add the number of digits of the first word of the digits array.\r\n  for ( e *= LOG_BASE; w >= 10; w /= 10) e++;\r\n  return e;\r\n}\r\n\r\n\r\nfunction getLn10(Ctor, sd, pr) {\r\n  if (sd > LN10_PRECISION) {\r\n\r\n    // Reset global state in case the exception is caught.\r\n    external = true;\r\n    if (pr) Ctor.precision = pr;\r\n    throw Error(precisionLimitExceeded);\r\n  }\r\n  return finalise(new Ctor(LN10), sd, 1, true);\r\n}\r\n\r\n\r\nfunction getPi(Ctor, sd, rm) {\r\n  if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);\r\n  return finalise(new Ctor(PI), sd, rm, true);\r\n}\r\n\r\n\r\nfunction getPrecision(digits) {\r\n  var w = digits.length - 1,\r\n    len = w * LOG_BASE + 1;\r\n\r\n  w = digits[w];\r\n\r\n  // If non-zero...\r\n  if (w) {\r\n\r\n    // Subtract the number of trailing zeros of the last word.\r\n    for (; w % 10 == 0; w /= 10) len--;\r\n\r\n    // Add the number of digits of the first word.\r\n    for (w = digits[0]; w >= 10; w /= 10) len++;\r\n  }\r\n\r\n  return len;\r\n}\r\n\r\n\r\nfunction getZeroString(k) {\r\n  var zs = '';\r\n  for (; k--;) zs += '0';\r\n  return zs;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of Decimal `x` to the power `n`, where `n` is an\r\n * integer of type number.\r\n *\r\n * Implements 'exponentiation by squaring'. Called by `pow` and `parseOther`.\r\n *\r\n */\r\nfunction intPow(Ctor, x, n, pr) {\r\n  var isTruncated,\r\n    r = new Ctor(1),\r\n\r\n    // Max n of 9007199254740991 takes 53 loop iterations.\r\n    // Maximum digits array length; leaves [28, 34] guard digits.\r\n    k = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n  external = false;\r\n\r\n  for (;;) {\r\n    if (n % 2) {\r\n      r = r.times(x);\r\n      if (truncate(r.d, k)) isTruncated = true;\r\n    }\r\n\r\n    n = mathfloor(n / 2);\r\n    if (n === 0) {\r\n\r\n      // To ensure correct rounding when r.d is truncated, increment the last word if it is zero.\r\n      n = r.d.length - 1;\r\n      if (isTruncated && r.d[n] === 0) ++r.d[n];\r\n      break;\r\n    }\r\n\r\n    x = x.times(x);\r\n    truncate(x.d, k);\r\n  }\r\n\r\n  external = true;\r\n\r\n  return r;\r\n}\r\n\r\n\r\nfunction isOdd(n) {\r\n  return n.d[n.d.length - 1] & 1;\r\n}\r\n\r\n\r\n/*\r\n * Handle `max` and `min`. `ltgt` is 'lt' or 'gt'.\r\n */\r\nfunction maxOrMin(Ctor, args, ltgt) {\r\n  var y,\r\n    x = new Ctor(args[0]),\r\n    i = 0;\r\n\r\n  for (; ++i < args.length;) {\r\n    y = new Ctor(args[i]);\r\n    if (!y.s) {\r\n      x = y;\r\n      break;\r\n    } else if (x[ltgt](y)) {\r\n      x = y;\r\n    }\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural exponential of `x` rounded to `sd` significant\r\n * digits.\r\n *\r\n * Taylor/Maclaurin series.\r\n *\r\n * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n *\r\n * Argument reduction:\r\n *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n *   exp(x) = exp(x / 2^k)^(2^k)\r\n *\r\n * Previously, the argument was initially reduced by\r\n * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n * found to be slower than just dividing repeatedly by 32 as above.\r\n *\r\n * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000\r\n * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000\r\n * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n *\r\n *  exp(Infinity)  = Infinity\r\n *  exp(-Infinity) = 0\r\n *  exp(NaN)       = NaN\r\n *  exp(±0)        = 1\r\n *\r\n *  exp(x) is non-terminating for any finite, non-zero x.\r\n *\r\n *  The result will always be correctly rounded.\r\n *\r\n */\r\nfunction naturalExponential(x, sd) {\r\n  var denominator, guard, j, pow, sum, t, wpr,\r\n    rep = 0,\r\n    i = 0,\r\n    k = 0,\r\n    Ctor = x.constructor,\r\n    rm = Ctor.rounding,\r\n    pr = Ctor.precision;\r\n\r\n  // 0/NaN/Infinity?\r\n  if (!x.d || !x.d[0] || x.e > 17) {\r\n\r\n    return new Ctor(x.d\r\n      ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0\r\n      : x.s ? x.s < 0 ? 0 : x : 0 / 0);\r\n  }\r\n\r\n  if (sd == null) {\r\n    external = false;\r\n    wpr = pr;\r\n  } else {\r\n    wpr = sd;\r\n  }\r\n\r\n  t = new Ctor(0.03125);\r\n\r\n  // while abs(x) >= 0.1\r\n  while (x.e > -2) {\r\n\r\n    // x = x / 2^5\r\n    x = x.times(t);\r\n    k += 5;\r\n  }\r\n\r\n  // Use 2 * log10(2^k) + 5 (empirically derived) to estimate the increase in precision\r\n  // necessary to ensure the first 4 rounding digits are correct.\r\n  guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n  wpr += guard;\r\n  denominator = pow = sum = new Ctor(1);\r\n  Ctor.precision = wpr;\r\n\r\n  for (;;) {\r\n    pow = finalise(pow.times(x), wpr, 1);\r\n    denominator = denominator.times(++i);\r\n    t = sum.plus(divide(pow, denominator, wpr, 1));\r\n\r\n    if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n      j = k;\r\n      while (j--) sum = finalise(sum.times(sum), wpr, 1);\r\n\r\n      // Check to see if the first 4 rounding digits are [49]999.\r\n      // If so, repeat the summation with a higher precision, otherwise\r\n      // e.g. with precision: 18, rounding: 1\r\n      // exp(18.404272462595034083567793919843761) = 98372560.1229999999 (should be 98372560.123)\r\n      // `wpr - guard` is the index of first rounding digit.\r\n      if (sd == null) {\r\n\r\n        if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n          Ctor.precision = wpr += 10;\r\n          denominator = pow = t = new Ctor(1);\r\n          i = 0;\r\n          rep++;\r\n        } else {\r\n          return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n        }\r\n      } else {\r\n        Ctor.precision = pr;\r\n        return sum;\r\n      }\r\n    }\r\n\r\n    sum = t;\r\n  }\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural logarithm of `x` rounded to `sd` significant\r\n * digits.\r\n *\r\n *  ln(-n)        = NaN\r\n *  ln(0)         = -Infinity\r\n *  ln(-0)        = -Infinity\r\n *  ln(1)         = 0\r\n *  ln(Infinity)  = Infinity\r\n *  ln(-Infinity) = NaN\r\n *  ln(NaN)       = NaN\r\n *\r\n *  ln(n) (n != 1) is non-terminating.\r\n *\r\n */\r\nfunction naturalLogarithm(y, sd) {\r\n  var c, c0, denominator, e, numerator, rep, sum, t, wpr, x1, x2,\r\n    n = 1,\r\n    guard = 10,\r\n    x = y,\r\n    xd = x.d,\r\n    Ctor = x.constructor,\r\n    rm = Ctor.rounding,\r\n    pr = Ctor.precision;\r\n\r\n  // Is x negative or Infinity, NaN, 0 or 1?\r\n  if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\r\n    return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\r\n  }\r\n\r\n  if (sd == null) {\r\n    external = false;\r\n    wpr = pr;\r\n  } else {\r\n    wpr = sd;\r\n  }\r\n\r\n  Ctor.precision = wpr += guard;\r\n  c = digitsToString(xd);\r\n  c0 = c.charAt(0);\r\n\r\n  if (Math.abs(e = x.e) < 1.5e15) {\r\n\r\n    // Argument reduction.\r\n    // The series converges faster the closer the argument is to 1, so using\r\n    // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n    // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n    // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n    // later be divided by this number, then separate out the power of 10 using\r\n    // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n    // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n    //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n    // max n is 6 (gives 0.7 - 1.3)\r\n    while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n      x = x.times(y);\r\n      c = digitsToString(x.d);\r\n      c0 = c.charAt(0);\r\n      n++;\r\n    }\r\n\r\n    e = x.e;\r\n\r\n    if (c0 > 1) {\r\n      x = new Ctor('0.' + c);\r\n      e++;\r\n    } else {\r\n      x = new Ctor(c0 + '.' + c.slice(1));\r\n    }\r\n  } else {\r\n\r\n    // The argument reduction method above may result in overflow if the argument y is a massive\r\n    // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n    // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n    t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n    x = naturalLogarithm(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n    Ctor.precision = pr;\r\n\r\n    return sd == null ? finalise(x, pr, rm, external = true) : x;\r\n  }\r\n\r\n  // x1 is x reduced to a value near 1.\r\n  x1 = x;\r\n\r\n  // Taylor series.\r\n  // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n  // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n  sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\r\n  x2 = finalise(x.times(x), wpr, 1);\r\n  denominator = 3;\r\n\r\n  for (;;) {\r\n    numerator = finalise(numerator.times(x2), wpr, 1);\r\n    t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));\r\n\r\n    if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n      sum = sum.times(2);\r\n\r\n      // Reverse the argument reduction. Check that e is not 0 because, besides preventing an\r\n      // unnecessary calculation, -0 + 0 = +0 and to ensure correct rounding -0 needs to stay -0.\r\n      if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n      sum = divide(sum, new Ctor(n), wpr, 1);\r\n\r\n      // Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has\r\n      // been repeated previously) and the first 4 rounding digits 9999?\r\n      // If so, restart the summation with a higher precision, otherwise\r\n      // e.g. with precision: 12, rounding: 1\r\n      // ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.\r\n      // `wpr - guard` is the index of first rounding digit.\r\n      if (sd == null) {\r\n        if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n          Ctor.precision = wpr += guard;\r\n          t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\r\n          x2 = finalise(x.times(x), wpr, 1);\r\n          denominator = rep = 1;\r\n        } else {\r\n          return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n        }\r\n      } else {\r\n        Ctor.precision = pr;\r\n        return sum;\r\n      }\r\n    }\r\n\r\n    sum = t;\r\n    denominator += 2;\r\n  }\r\n}\r\n\r\n\r\n// ±Infinity, NaN.\r\nfunction nonFiniteToString(x) {\r\n  // Unsigned.\r\n  return String(x.s * x.s / 0);\r\n}\r\n\r\n\r\n/*\r\n * Parse the value of a new Decimal `x` from string `str`.\r\n */\r\nfunction parseDecimal(x, str) {\r\n  var e, i, len;\r\n\r\n  // Decimal point?\r\n  if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n  // Exponential form?\r\n  if ((i = str.search(/e/i)) > 0) {\r\n\r\n    // Determine exponent.\r\n    if (e < 0) e = i;\r\n    e += +str.slice(i + 1);\r\n    str = str.substring(0, i);\r\n  } else if (e < 0) {\r\n\r\n    // Integer.\r\n    e = str.length;\r\n  }\r\n\r\n  // Determine leading zeros.\r\n  for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n  // Determine trailing zeros.\r\n  for (len = str.length; str.charCodeAt(len - 1) === 48; --len);\r\n  str = str.slice(i, len);\r\n\r\n  if (str) {\r\n    len -= i;\r\n    x.e = e = e - i - 1;\r\n    x.d = [];\r\n\r\n    // Transform base\r\n\r\n    // e is the base 10 exponent.\r\n    // i is where to slice str to get the first word of the digits array.\r\n    i = (e + 1) % LOG_BASE;\r\n    if (e < 0) i += LOG_BASE;\r\n\r\n    if (i < len) {\r\n      if (i) x.d.push(+str.slice(0, i));\r\n      for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n      str = str.slice(i);\r\n      i = LOG_BASE - str.length;\r\n    } else {\r\n      i -= len;\r\n    }\r\n\r\n    for (; i--;) str += '0';\r\n    x.d.push(+str);\r\n\r\n    if (external) {\r\n\r\n      // Overflow?\r\n      if (x.e > x.constructor.maxE) {\r\n\r\n        // Infinity.\r\n        x.d = null;\r\n        x.e = NaN;\r\n\r\n      // Underflow?\r\n      } else if (x.e < x.constructor.minE) {\r\n\r\n        // Zero.\r\n        x.e = 0;\r\n        x.d = [0];\r\n        // x.constructor.underflow = true;\r\n      } // else x.constructor.underflow = false;\r\n    }\r\n  } else {\r\n\r\n    // Zero.\r\n    x.e = 0;\r\n    x.d = [0];\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Parse the value of a new Decimal `x` from a string `str`, which is not a decimal value.\r\n */\r\nfunction parseOther(x, str) {\r\n  var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\r\n\r\n  if (str.indexOf('_') > -1) {\r\n    str = str.replace(/(\\d)_(?=\\d)/g, '$1');\r\n    if (isDecimal.test(str)) return parseDecimal(x, str);\r\n  } else if (str === 'Infinity' || str === 'NaN') {\r\n    if (!+str) x.s = NaN;\r\n    x.e = NaN;\r\n    x.d = null;\r\n    return x;\r\n  }\r\n\r\n  if (isHex.test(str))  {\r\n    base = 16;\r\n    str = str.toLowerCase();\r\n  } else if (isBinary.test(str))  {\r\n    base = 2;\r\n  } else if (isOctal.test(str))  {\r\n    base = 8;\r\n  } else {\r\n    throw Error(invalidArgument + str);\r\n  }\r\n\r\n  // Is there a binary exponent part?\r\n  i = str.search(/p/i);\r\n\r\n  if (i > 0) {\r\n    p = +str.slice(i + 1);\r\n    str = str.substring(2, i);\r\n  } else {\r\n    str = str.slice(2);\r\n  }\r\n\r\n  // Convert `str` as an integer then divide the result by `base` raised to a power such that the\r\n  // fraction part will be restored.\r\n  i = str.indexOf('.');\r\n  isFloat = i >= 0;\r\n  Ctor = x.constructor;\r\n\r\n  if (isFloat) {\r\n    str = str.replace('.', '');\r\n    len = str.length;\r\n    i = len - i;\r\n\r\n    // log[10](16) = 1.2041... , log[10](88) = 1.9444....\r\n    divisor = intPow(Ctor, new Ctor(base), i, i * 2);\r\n  }\r\n\r\n  xd = convertBase(str, base, BASE);\r\n  xe = xd.length - 1;\r\n\r\n  // Remove trailing zeros.\r\n  for (i = xe; xd[i] === 0; --i) xd.pop();\r\n  if (i < 0) return new Ctor(x.s * 0);\r\n  x.e = getBase10Exponent(xd, xe);\r\n  x.d = xd;\r\n  external = false;\r\n\r\n  // At what precision to perform the division to ensure exact conversion?\r\n  // maxDecimalIntegerPartDigitCount = ceil(log[10](b) * otherBaseIntegerPartDigitCount)\r\n  // log[10](2) = 0.30103, log[10](8) = 0.90309, log[10](16) = 1.20412\r\n  // E.g. ceil(1.2 * 3) = 4, so up to 4 decimal digits are needed to represent 3 hex int digits.\r\n  // maxDecimalFractionPartDigitCount = {Hex:4|Oct:3|Bin:1} * otherBaseFractionPartDigitCount\r\n  // Therefore using 4 * the number of digits of str will always be enough.\r\n  if (isFloat) x = divide(x, divisor, len * 4);\r\n\r\n  // Multiply by the binary exponent part if present.\r\n  if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\r\n  external = true;\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * sin(x) = x - x^3/3! + x^5/5! - ...\r\n * |x| < pi/2\r\n *\r\n */\r\nfunction sine(Ctor, x) {\r\n  var k,\r\n    len = x.d.length;\r\n\r\n  if (len < 3) {\r\n    return x.isZero() ? x : taylorSeries(Ctor, 2, x, x);\r\n  }\r\n\r\n  // Argument reduction: sin(5x) = 16*sin^5(x) - 20*sin^3(x) + 5*sin(x)\r\n  // i.e. sin(x) = 16*sin^5(x/5) - 20*sin^3(x/5) + 5*sin(x/5)\r\n  // and  sin(x) = sin(x/5)(5 + sin^2(x/5)(16sin^2(x/5) - 20))\r\n\r\n  // Estimate the optimum number of times to use the argument reduction.\r\n  k = 1.4 * Math.sqrt(len);\r\n  k = k > 16 ? 16 : k | 0;\r\n\r\n  x = x.times(1 / tinyPow(5, k));\r\n  x = taylorSeries(Ctor, 2, x, x);\r\n\r\n  // Reverse argument reduction\r\n  var sin2_x,\r\n    d5 = new Ctor(5),\r\n    d16 = new Ctor(16),\r\n    d20 = new Ctor(20);\r\n  for (; k--;) {\r\n    sin2_x = x.times(x);\r\n    x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n// Calculate Taylor series for `cos`, `cosh`, `sin` and `sinh`.\r\nfunction taylorSeries(Ctor, n, x, y, isHyperbolic) {\r\n  var j, t, u, x2,\r\n    i = 1,\r\n    pr = Ctor.precision,\r\n    k = Math.ceil(pr / LOG_BASE);\r\n\r\n  external = false;\r\n  x2 = x.times(x);\r\n  u = new Ctor(y);\r\n\r\n  for (;;) {\r\n    t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\r\n    u = isHyperbolic ? y.plus(t) : y.minus(t);\r\n    y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\r\n    t = u.plus(y);\r\n\r\n    if (t.d[k] !== void 0) {\r\n      for (j = k; t.d[j] === u.d[j] && j--;);\r\n      if (j == -1) break;\r\n    }\r\n\r\n    j = u;\r\n    u = y;\r\n    y = t;\r\n    t = j;\r\n    i++;\r\n  }\r\n\r\n  external = true;\r\n  t.d.length = k + 1;\r\n\r\n  return t;\r\n}\r\n\r\n\r\n// Exponent e must be positive and non-zero.\r\nfunction tinyPow(b, e) {\r\n  var n = b;\r\n  while (--e) n *= b;\r\n  return n;\r\n}\r\n\r\n\r\n// Return the absolute value of `x` reduced to less than or equal to half pi.\r\nfunction toLessThanHalfPi(Ctor, x) {\r\n  var t,\r\n    isNeg = x.s < 0,\r\n    pi = getPi(Ctor, Ctor.precision, 1),\r\n    halfPi = pi.times(0.5);\r\n\r\n  x = x.abs();\r\n\r\n  if (x.lte(halfPi)) {\r\n    quadrant = isNeg ? 4 : 1;\r\n    return x;\r\n  }\r\n\r\n  t = x.divToInt(pi);\r\n\r\n  if (t.isZero()) {\r\n    quadrant = isNeg ? 3 : 2;\r\n  } else {\r\n    x = x.minus(t.times(pi));\r\n\r\n    // 0 <= x < pi\r\n    if (x.lte(halfPi)) {\r\n      quadrant = isOdd(t) ? (isNeg ? 2 : 3) : (isNeg ? 4 : 1);\r\n      return x;\r\n    }\r\n\r\n    quadrant = isOdd(t) ? (isNeg ? 1 : 4) : (isNeg ? 3 : 2);\r\n  }\r\n\r\n  return x.minus(pi).abs();\r\n}\r\n\r\n\r\n/*\r\n * Return the value of Decimal `x` as a string in base `baseOut`.\r\n *\r\n * If the optional `sd` argument is present include a binary exponent suffix.\r\n */\r\nfunction toStringBinary(x, baseOut, sd, rm) {\r\n  var base, e, i, k, len, roundUp, str, xd, y,\r\n    Ctor = x.constructor,\r\n    isExp = sd !== void 0;\r\n\r\n  if (isExp) {\r\n    checkInt32(sd, 1, MAX_DIGITS);\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n  } else {\r\n    sd = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n  }\r\n\r\n  if (!x.isFinite()) {\r\n    str = nonFiniteToString(x);\r\n  } else {\r\n    str = finiteToString(x);\r\n    i = str.indexOf('.');\r\n\r\n    // Use exponential notation according to `toExpPos` and `toExpNeg`? No, but if required:\r\n    // maxBinaryExponent = floor((decimalExponent + 1) * log[2](10))\r\n    // minBinaryExponent = floor(decimalExponent * log[2](10))\r\n    // log[2](10) = 3.321928094887362347870319429489390175864\r\n\r\n    if (isExp) {\r\n      base = 2;\r\n      if (baseOut == 16) {\r\n        sd = sd * 4 - 3;\r\n      } else if (baseOut == 8) {\r\n        sd = sd * 3 - 2;\r\n      }\r\n    } else {\r\n      base = baseOut;\r\n    }\r\n\r\n    // Convert the number as an integer then divide the result by its base raised to a power such\r\n    // that the fraction part will be restored.\r\n\r\n    // Non-integer.\r\n    if (i >= 0) {\r\n      str = str.replace('.', '');\r\n      y = new Ctor(1);\r\n      y.e = str.length - i;\r\n      y.d = convertBase(finiteToString(y), 10, base);\r\n      y.e = y.d.length;\r\n    }\r\n\r\n    xd = convertBase(str, 10, base);\r\n    e = len = xd.length;\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] == 0;) xd.pop();\r\n\r\n    if (!xd[0]) {\r\n      str = isExp ? '0p+0' : '0';\r\n    } else {\r\n      if (i < 0) {\r\n        e--;\r\n      } else {\r\n        x = new Ctor(x);\r\n        x.d = xd;\r\n        x.e = e;\r\n        x = divide(x, y, sd, rm, 0, base);\r\n        xd = x.d;\r\n        e = x.e;\r\n        roundUp = inexact;\r\n      }\r\n\r\n      // The rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      i = xd[sd];\r\n      k = base / 2;\r\n      roundUp = roundUp || xd[sd + 1] !== void 0;\r\n\r\n      roundUp = rm < 4\r\n        ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2))\r\n        : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 ||\r\n          rm === (x.s < 0 ? 8 : 7));\r\n\r\n      xd.length = sd;\r\n\r\n      if (roundUp) {\r\n\r\n        // Rounding up may mean the previous digit has to be rounded up and so on.\r\n        for (; ++xd[--sd] > base - 1;) {\r\n          xd[sd] = 0;\r\n          if (!sd) {\r\n            ++e;\r\n            xd.unshift(1);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Determine trailing zeros.\r\n      for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n      // E.g. [4, 11, 15] becomes 4bf.\r\n      for (i = 0, str = ''; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n\r\n      // Add binary exponent suffix?\r\n      if (isExp) {\r\n        if (len > 1) {\r\n          if (baseOut == 16 || baseOut == 8) {\r\n            i = baseOut == 16 ? 4 : 3;\r\n            for (--len; len % i; len++) str += '0';\r\n            xd = convertBase(str, base, baseOut);\r\n            for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n            // xd[0] will always be be 1\r\n            for (i = 1, str = '1.'; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n          } else {\r\n            str = str.charAt(0) + '.' + str.slice(1);\r\n          }\r\n        }\r\n\r\n        str =  str + (e < 0 ? 'p' : 'p+') + e;\r\n      } else if (e < 0) {\r\n        for (; ++e;) str = '0' + str;\r\n        str = '0.' + str;\r\n      } else {\r\n        if (++e > len) for (e -= len; e-- ;) str += '0';\r\n        else if (e < len) str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    str = (baseOut == 16 ? '0x' : baseOut == 2 ? '0b' : baseOut == 8 ? '0o' : '') + str;\r\n  }\r\n\r\n  return x.s < 0 ? '-' + str : str;\r\n}\r\n\r\n\r\n// Does not strip trailing zeros.\r\nfunction truncate(arr, len) {\r\n  if (arr.length > len) {\r\n    arr.length = len;\r\n    return true;\r\n  }\r\n}\r\n\r\n\r\n// Decimal methods\r\n\r\n\r\n/*\r\n *  abs\r\n *  acos\r\n *  acosh\r\n *  add\r\n *  asin\r\n *  asinh\r\n *  atan\r\n *  atanh\r\n *  atan2\r\n *  cbrt\r\n *  ceil\r\n *  clamp\r\n *  clone\r\n *  config\r\n *  cos\r\n *  cosh\r\n *  div\r\n *  exp\r\n *  floor\r\n *  hypot\r\n *  ln\r\n *  log\r\n *  log2\r\n *  log10\r\n *  max\r\n *  min\r\n *  mod\r\n *  mul\r\n *  pow\r\n *  random\r\n *  round\r\n *  set\r\n *  sign\r\n *  sin\r\n *  sinh\r\n *  sqrt\r\n *  sub\r\n *  sum\r\n *  tan\r\n *  tanh\r\n *  trunc\r\n */\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the absolute value of `x`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction abs(x) {\r\n  return new this(x).abs();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arccosine in radians of `x`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction acos(x) {\r\n  return new this(x).acos();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic cosine of `x`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction acosh(x) {\r\n  return new this(x).acosh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sum of `x` and `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n * y {number|string|Decimal}\r\n *\r\n */\r\nfunction add(x, y) {\r\n  return new this(x).plus(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arcsine in radians of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction asin(x) {\r\n  return new this(x).asin();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic sine of `x`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction asinh(x) {\r\n  return new this(x).asinh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arctangent in radians of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction atan(x) {\r\n  return new this(x).atan();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic tangent of `x`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction atanh(x) {\r\n  return new this(x).atanh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arctangent in radians of `y/x` in the range -pi to pi\r\n * (inclusive), rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-pi, pi]\r\n *\r\n * y {number|string|Decimal} The y-coordinate.\r\n * x {number|string|Decimal} The x-coordinate.\r\n *\r\n * atan2(±0, -0)               = ±pi\r\n * atan2(±0, +0)               = ±0\r\n * atan2(±0, -x)               = ±pi for x > 0\r\n * atan2(±0, x)                = ±0 for x > 0\r\n * atan2(-y, ±0)               = -pi/2 for y > 0\r\n * atan2(y, ±0)                = pi/2 for y > 0\r\n * atan2(±y, -Infinity)        = ±pi for finite y > 0\r\n * atan2(±y, +Infinity)        = ±0 for finite y > 0\r\n * atan2(±Infinity, x)         = ±pi/2 for finite x\r\n * atan2(±Infinity, -Infinity) = ±3*pi/4\r\n * atan2(±Infinity, +Infinity) = ±pi/4\r\n * atan2(NaN, x) = NaN\r\n * atan2(y, NaN) = NaN\r\n *\r\n */\r\nfunction atan2(y, x) {\r\n  y = new this(y);\r\n  x = new this(x);\r\n  var r,\r\n    pr = this.precision,\r\n    rm = this.rounding,\r\n    wpr = pr + 4;\r\n\r\n  // Either NaN\r\n  if (!y.s || !x.s) {\r\n    r = new this(NaN);\r\n\r\n  // Both ±Infinity\r\n  } else if (!y.d && !x.d) {\r\n    r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\r\n    r.s = y.s;\r\n\r\n  // x is ±Infinity or y is ±0\r\n  } else if (!x.d || y.isZero()) {\r\n    r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\r\n    r.s = y.s;\r\n\r\n  // y is ±Infinity or x is ±0\r\n  } else if (!y.d || x.isZero()) {\r\n    r = getPi(this, wpr, 1).times(0.5);\r\n    r.s = y.s;\r\n\r\n  // Both non-zero and finite\r\n  } else if (x.s < 0) {\r\n    this.precision = wpr;\r\n    this.rounding = 1;\r\n    r = this.atan(divide(y, x, wpr, 1));\r\n    x = getPi(this, wpr, 1);\r\n    this.precision = pr;\r\n    this.rounding = rm;\r\n    r = y.s < 0 ? r.minus(x) : r.plus(x);\r\n  } else {\r\n    r = this.atan(divide(y, x, wpr, 1));\r\n  }\r\n\r\n  return r;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the cube root of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction cbrt(x) {\r\n  return new this(x).cbrt();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` rounded to an integer using `ROUND_CEIL`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction ceil(x) {\r\n  return finalise(x = new this(x), x.e + 1, 2);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` clamped to the range delineated by `min` and `max`.\r\n *\r\n * x {number|string|Decimal}\r\n * min {number|string|Decimal}\r\n * max {number|string|Decimal}\r\n *\r\n */\r\nfunction clamp(x, min, max) {\r\n  return new this(x).clamp(min, max);\r\n}\r\n\r\n\r\n/*\r\n * Configure global settings for a Decimal constructor.\r\n *\r\n * `obj` is an object with one or more of the following properties,\r\n *\r\n *   precision  {number}\r\n *   rounding   {number}\r\n *   toExpNeg   {number}\r\n *   toExpPos   {number}\r\n *   maxE       {number}\r\n *   minE       {number}\r\n *   modulo     {number}\r\n *   crypto     {boolean|number}\r\n *   defaults   {true}\r\n *\r\n * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n *\r\n */\r\nfunction config(obj) {\r\n  if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');\r\n  var i, p, v,\r\n    useDefaults = obj.defaults === true,\r\n    ps = [\r\n      'precision', 1, MAX_DIGITS,\r\n      'rounding', 0, 8,\r\n      'toExpNeg', -EXP_LIMIT, 0,\r\n      'toExpPos', 0, EXP_LIMIT,\r\n      'maxE', 0, EXP_LIMIT,\r\n      'minE', -EXP_LIMIT, 0,\r\n      'modulo', 0, 9\r\n    ];\r\n\r\n  for (i = 0; i < ps.length; i += 3) {\r\n    if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];\r\n    if ((v = obj[p]) !== void 0) {\r\n      if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n      else throw Error(invalidArgument + p + ': ' + v);\r\n    }\r\n  }\r\n\r\n  if (p = 'crypto', useDefaults) this[p] = DEFAULTS[p];\r\n  if ((v = obj[p]) !== void 0) {\r\n    if (v === true || v === false || v === 0 || v === 1) {\r\n      if (v) {\r\n        if (typeof crypto != 'undefined' && crypto &&\r\n          (crypto.getRandomValues || crypto.randomBytes)) {\r\n          this[p] = true;\r\n        } else {\r\n          throw Error(cryptoUnavailable);\r\n        }\r\n      } else {\r\n        this[p] = false;\r\n      }\r\n    } else {\r\n      throw Error(invalidArgument + p + ': ' + v);\r\n    }\r\n  }\r\n\r\n  return this;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the cosine of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction cos(x) {\r\n  return new this(x).cos();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic cosine of `x`, rounded to precision\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction cosh(x) {\r\n  return new this(x).cosh();\r\n}\r\n\r\n\r\n/*\r\n * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n * constructor.\r\n *\r\n */\r\nfunction clone(obj) {\r\n  var i, p, ps;\r\n\r\n  /*\r\n   * The Decimal constructor and exported function.\r\n   * Return a new Decimal instance.\r\n   *\r\n   * v {number|string|Decimal} A numeric value.\r\n   *\r\n   */\r\n  function Decimal(v) {\r\n    var e, i, t,\r\n      x = this;\r\n\r\n    // Decimal called without new.\r\n    if (!(x instanceof Decimal)) return new Decimal(v);\r\n\r\n    // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n    // which points to Object.\r\n    x.constructor = Decimal;\r\n\r\n    // Duplicate.\r\n    if (isDecimalInstance(v)) {\r\n      x.s = v.s;\r\n\r\n      if (external) {\r\n        if (!v.d || v.e > Decimal.maxE) {\r\n\r\n          // Infinity.\r\n          x.e = NaN;\r\n          x.d = null;\r\n        } else if (v.e < Decimal.minE) {\r\n\r\n          // Zero.\r\n          x.e = 0;\r\n          x.d = [0];\r\n        } else {\r\n          x.e = v.e;\r\n          x.d = v.d.slice();\r\n        }\r\n      } else {\r\n        x.e = v.e;\r\n        x.d = v.d ? v.d.slice() : v.d;\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    t = typeof v;\r\n\r\n    if (t === 'number') {\r\n      if (v === 0) {\r\n        x.s = 1 / v < 0 ? -1 : 1;\r\n        x.e = 0;\r\n        x.d = [0];\r\n        return;\r\n      }\r\n\r\n      if (v < 0) {\r\n        v = -v;\r\n        x.s = -1;\r\n      } else {\r\n        x.s = 1;\r\n      }\r\n\r\n      // Fast path for small integers.\r\n      if (v === ~~v && v < 1e7) {\r\n        for (e = 0, i = v; i >= 10; i /= 10) e++;\r\n\r\n        if (external) {\r\n          if (e > Decimal.maxE) {\r\n            x.e = NaN;\r\n            x.d = null;\r\n          } else if (e < Decimal.minE) {\r\n            x.e = 0;\r\n            x.d = [0];\r\n          } else {\r\n            x.e = e;\r\n            x.d = [v];\r\n          }\r\n        } else {\r\n          x.e = e;\r\n          x.d = [v];\r\n        }\r\n\r\n        return;\r\n\r\n      // Infinity, NaN.\r\n      } else if (v * 0 !== 0) {\r\n        if (!v) x.s = NaN;\r\n        x.e = NaN;\r\n        x.d = null;\r\n        return;\r\n      }\r\n\r\n      return parseDecimal(x, v.toString());\r\n\r\n    } else if (t !== 'string') {\r\n      throw Error(invalidArgument + v);\r\n    }\r\n\r\n    // Minus sign?\r\n    if ((i = v.charCodeAt(0)) === 45) {\r\n      v = v.slice(1);\r\n      x.s = -1;\r\n    } else {\r\n      // Plus sign?\r\n      if (i === 43) v = v.slice(1);\r\n      x.s = 1;\r\n    }\r\n\r\n    return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\r\n  }\r\n\r\n  Decimal.prototype = P;\r\n\r\n  Decimal.ROUND_UP = 0;\r\n  Decimal.ROUND_DOWN = 1;\r\n  Decimal.ROUND_CEIL = 2;\r\n  Decimal.ROUND_FLOOR = 3;\r\n  Decimal.ROUND_HALF_UP = 4;\r\n  Decimal.ROUND_HALF_DOWN = 5;\r\n  Decimal.ROUND_HALF_EVEN = 6;\r\n  Decimal.ROUND_HALF_CEIL = 7;\r\n  Decimal.ROUND_HALF_FLOOR = 8;\r\n  Decimal.EUCLID = 9;\r\n\r\n  Decimal.config = Decimal.set = config;\r\n  Decimal.clone = clone;\r\n  Decimal.isDecimal = isDecimalInstance;\r\n\r\n  Decimal.abs = abs;\r\n  Decimal.acos = acos;\r\n  Decimal.acosh = acosh;        // ES6\r\n  Decimal.add = add;\r\n  Decimal.asin = asin;\r\n  Decimal.asinh = asinh;        // ES6\r\n  Decimal.atan = atan;\r\n  Decimal.atanh = atanh;        // ES6\r\n  Decimal.atan2 = atan2;\r\n  Decimal.cbrt = cbrt;          // ES6\r\n  Decimal.ceil = ceil;\r\n  Decimal.clamp = clamp;\r\n  Decimal.cos = cos;\r\n  Decimal.cosh = cosh;          // ES6\r\n  Decimal.div = div;\r\n  Decimal.exp = exp;\r\n  Decimal.floor = floor;\r\n  Decimal.hypot = hypot;        // ES6\r\n  Decimal.ln = ln;\r\n  Decimal.log = log;\r\n  Decimal.log10 = log10;        // ES6\r\n  Decimal.log2 = log2;          // ES6\r\n  Decimal.max = max;\r\n  Decimal.min = min;\r\n  Decimal.mod = mod;\r\n  Decimal.mul = mul;\r\n  Decimal.pow = pow;\r\n  Decimal.random = random;\r\n  Decimal.round = round;\r\n  Decimal.sign = sign;          // ES6\r\n  Decimal.sin = sin;\r\n  Decimal.sinh = sinh;          // ES6\r\n  Decimal.sqrt = sqrt;\r\n  Decimal.sub = sub;\r\n  Decimal.sum = sum;\r\n  Decimal.tan = tan;\r\n  Decimal.tanh = tanh;          // ES6\r\n  Decimal.trunc = trunc;        // ES6\r\n\r\n  if (obj === void 0) obj = {};\r\n  if (obj) {\r\n    if (obj.defaults !== true) {\r\n      ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];\r\n      for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n    }\r\n  }\r\n\r\n  Decimal.config(obj);\r\n\r\n  return Decimal;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` divided by `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n * y {number|string|Decimal}\r\n *\r\n */\r\nfunction div(x, y) {\r\n  return new this(x).div(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural exponential of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} The power to which to raise the base of the natural log.\r\n *\r\n */\r\nfunction exp(x) {\r\n  return new this(x).exp();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` round to an integer using `ROUND_FLOOR`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction floor(x) {\r\n  return finalise(x = new this(x), x.e + 1, 3);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the square root of the sum of the squares of the arguments,\r\n * rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * hypot(a, b, ...) = sqrt(a^2 + b^2 + ...)\r\n *\r\n * arguments {number|string|Decimal}\r\n *\r\n */\r\nfunction hypot() {\r\n  var i, n,\r\n    t = new this(0);\r\n\r\n  external = false;\r\n\r\n  for (i = 0; i < arguments.length;) {\r\n    n = new this(arguments[i++]);\r\n    if (!n.d) {\r\n      if (n.s) {\r\n        external = true;\r\n        return new this(1 / 0);\r\n      }\r\n      t = n;\r\n    } else if (t.d) {\r\n      t = t.plus(n.times(n));\r\n    }\r\n  }\r\n\r\n  external = true;\r\n\r\n  return t.sqrt();\r\n}\r\n\r\n\r\n/*\r\n * Return true if object is a Decimal instance (where Decimal is any Decimal constructor),\r\n * otherwise return false.\r\n *\r\n */\r\nfunction isDecimalInstance(obj) {\r\n  return obj instanceof Decimal || obj && obj.toStringTag === tag || false;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural logarithm of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction ln(x) {\r\n  return new this(x).ln();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the log of `x` to the base `y`, or to base 10 if no base\r\n * is specified, rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * log[y](x)\r\n *\r\n * x {number|string|Decimal} The argument of the logarithm.\r\n * y {number|string|Decimal} The base of the logarithm.\r\n *\r\n */\r\nfunction log(x, y) {\r\n  return new this(x).log(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the base 2 logarithm of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction log2(x) {\r\n  return new this(x).log(2);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the base 10 logarithm of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction log10(x) {\r\n  return new this(x).log(10);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the maximum of the arguments.\r\n *\r\n * arguments {number|string|Decimal}\r\n *\r\n */\r\nfunction max() {\r\n  return maxOrMin(this, arguments, 'lt');\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the minimum of the arguments.\r\n *\r\n * arguments {number|string|Decimal}\r\n *\r\n */\r\nfunction min() {\r\n  return maxOrMin(this, arguments, 'gt');\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` modulo `y`, rounded to `precision` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n * y {number|string|Decimal}\r\n *\r\n */\r\nfunction mod(x, y) {\r\n  return new this(x).mod(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` multiplied by `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n * y {number|string|Decimal}\r\n *\r\n */\r\nfunction mul(x, y) {\r\n  return new this(x).mul(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` raised to the power `y`, rounded to precision\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} The base.\r\n * y {number|string|Decimal} The exponent.\r\n *\r\n */\r\nfunction pow(x, y) {\r\n  return new this(x).pow(y);\r\n}\r\n\r\n\r\n/*\r\n * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and with\r\n * `sd`, or `Decimal.precision` if `sd` is omitted, significant digits (or less if trailing zeros\r\n * are produced).\r\n *\r\n * [sd] {number} Significant digits. Integer, 0 to MAX_DIGITS inclusive.\r\n *\r\n */\r\nfunction random(sd) {\r\n  var d, e, k, n,\r\n    i = 0,\r\n    r = new this(1),\r\n    rd = [];\r\n\r\n  if (sd === void 0) sd = this.precision;\r\n  else checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n  k = Math.ceil(sd / LOG_BASE);\r\n\r\n  if (!this.crypto) {\r\n    for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;\r\n\r\n  // Browsers supporting crypto.getRandomValues.\r\n  } else if (crypto.getRandomValues) {\r\n    d = crypto.getRandomValues(new Uint32Array(k));\r\n\r\n    for (; i < k;) {\r\n      n = d[i];\r\n\r\n      // 0 <= n < 4294967296\r\n      // Probability n >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).\r\n      if (n >= 4.29e9) {\r\n        d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\r\n      } else {\r\n\r\n        // 0 <= n <= 4289999999\r\n        // 0 <= (n % 1e7) <= 9999999\r\n        rd[i++] = n % 1e7;\r\n      }\r\n    }\r\n\r\n  // Node.js supporting crypto.randomBytes.\r\n  } else if (crypto.randomBytes) {\r\n\r\n    // buffer\r\n    d = crypto.randomBytes(k *= 4);\r\n\r\n    for (; i < k;) {\r\n\r\n      // 0 <= n < 2147483648\r\n      n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 0x7f) << 24);\r\n\r\n      // Probability n >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).\r\n      if (n >= 2.14e9) {\r\n        crypto.randomBytes(4).copy(d, i);\r\n      } else {\r\n\r\n        // 0 <= n <= 2139999999\r\n        // 0 <= (n % 1e7) <= 9999999\r\n        rd.push(n % 1e7);\r\n        i += 4;\r\n      }\r\n    }\r\n\r\n    i = k / 4;\r\n  } else {\r\n    throw Error(cryptoUnavailable);\r\n  }\r\n\r\n  k = rd[--i];\r\n  sd %= LOG_BASE;\r\n\r\n  // Convert trailing digits to zeros according to sd.\r\n  if (k && sd) {\r\n    n = mathpow(10, LOG_BASE - sd);\r\n    rd[i] = (k / n | 0) * n;\r\n  }\r\n\r\n  // Remove trailing words which are zero.\r\n  for (; rd[i] === 0; i--) rd.pop();\r\n\r\n  // Zero?\r\n  if (i < 0) {\r\n    e = 0;\r\n    rd = [0];\r\n  } else {\r\n    e = -1;\r\n\r\n    // Remove leading words which are zero and adjust exponent accordingly.\r\n    for (; rd[0] === 0; e -= LOG_BASE) rd.shift();\r\n\r\n    // Count the digits of the first word of rd to determine leading zeros.\r\n    for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;\r\n\r\n    // Adjust the exponent for leading zeros of the first word of rd.\r\n    if (k < LOG_BASE) e -= LOG_BASE - k;\r\n  }\r\n\r\n  r.e = e;\r\n  r.d = rd;\r\n\r\n  return r;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` rounded to an integer using rounding mode `rounding`.\r\n *\r\n * To emulate `Math.round`, set rounding to 7 (ROUND_HALF_CEIL).\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction round(x) {\r\n  return finalise(x = new this(x), x.e + 1, this.rounding);\r\n}\r\n\r\n\r\n/*\r\n * Return\r\n *   1    if x > 0,\r\n *  -1    if x < 0,\r\n *   0    if x is 0,\r\n *  -0    if x is -0,\r\n *   NaN  otherwise\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction sign(x) {\r\n  x = new this(x);\r\n  return x.d ? (x.d[0] ? x.s : 0 * x.s) : x.s || NaN;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sine of `x`, rounded to `precision` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction sin(x) {\r\n  return new this(x).sin();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic sine of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction sinh(x) {\r\n  return new this(x).sinh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the square root of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction sqrt(x) {\r\n  return new this(x).sqrt();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` minus `y`, rounded to `precision` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n * y {number|string|Decimal}\r\n *\r\n */\r\nfunction sub(x, y) {\r\n  return new this(x).sub(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sum of the arguments, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * Only the result is rounded, not the intermediate calculations.\r\n *\r\n * arguments {number|string|Decimal}\r\n *\r\n */\r\nfunction sum() {\r\n  var i = 0,\r\n    args = arguments,\r\n    x = new this(args[i]);\r\n\r\n  external = false;\r\n  for (; x.s && ++i < args.length;) x = x.plus(args[i]);\r\n  external = true;\r\n\r\n  return finalise(x, this.precision, this.rounding);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the tangent of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction tan(x) {\r\n  return new this(x).tan();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic tangent of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction tanh(x) {\r\n  return new this(x).tanh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` truncated to an integer.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction trunc(x) {\r\n  return finalise(x = new this(x), x.e + 1, 1);\r\n}\r\n\r\n\r\nP[Symbol.for('nodejs.util.inspect.custom')] = P.toString;\r\nP[Symbol.toStringTag] = 'Decimal';\r\n\r\n// Create and configure initial Decimal constructor.\r\nexport var Decimal = P.constructor = clone(DEFAULTS);\r\n\r\n// Create the internal constants from their string values.\r\nLN10 = new Decimal(LN10);\r\nPI = new Decimal(PI);\r\n\r\nexport default Decimal;\r\n","import Decimal from 'decimal.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'BigNumber';\nvar dependencies = ['?on', 'config'];\nexport var createBigNumberClass = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    on,\n    config\n  } = _ref;\n  var BigNumber = Decimal.clone({\n    precision: config.precision,\n    modulo: Decimal.EUCLID\n  });\n  BigNumber.prototype = Object.create(BigNumber.prototype);\n\n  /**\n   * Attach type information\n   */\n  BigNumber.prototype.type = 'BigNumber';\n  BigNumber.prototype.isBigNumber = true;\n\n  /**\n   * Get a JSON representation of a BigNumber containing\n   * type information\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"BigNumber\", \"value\": \"0.2\"}`\n   */\n  BigNumber.prototype.toJSON = function () {\n    return {\n      mathjs: 'BigNumber',\n      value: this.toString()\n    };\n  };\n\n  /**\n   * Instantiate a BigNumber from a JSON object\n   * @param {Object} json  a JSON object structured as:\n   *                       `{\"mathjs\": \"BigNumber\", \"value\": \"0.2\"}`\n   * @return {BigNumber}\n   */\n  BigNumber.fromJSON = function (json) {\n    return new BigNumber(json.value);\n  };\n  if (on) {\n    // listen for changed in the configuration, automatically apply changed precision\n    on('config', function (curr, prev) {\n      if (curr.precision !== prev.precision) {\n        BigNumber.config({\n          precision: curr.precision\n        });\n      }\n    });\n  }\n  return BigNumber;\n}, {\n  isClass: true\n});","'use strict';\n\n/**\n *\n * This class allows the manipulation of complex numbers.\n * You can pass a complex number in different formats. Either as object, double, string or two integer parameters.\n *\n * Object form\n * { re: <real>, im: <imaginary> }\n * { arg: <angle>, abs: <radius> }\n * { phi: <angle>, r: <radius> }\n *\n * Array / Vector form\n * [ real, imaginary ]\n *\n * Double form\n * 99.3 - Single double value\n *\n * String form\n * '23.1337' - Simple real number\n * '15+3i' - a simple complex number\n * '3-i' - a simple complex number\n *\n * Example:\n *\n * const c = new Complex('99.3+8i');\n * c.mul({r: 3, i: 9}).div(4.9).sub(3, 2);\n *\n */\n\n\nconst cosh = Math.cosh || function (x) {\n  return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;\n};\n\nconst sinh = Math.sinh || function (x) {\n  return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;\n};\n\n/**\n * Calculates cos(x) - 1 using Taylor series if x is small (-¼π ≤ x ≤ ¼π).\n *\n * @param {number} x\n * @returns {number} cos(x) - 1\n */\nconst cosm1 = function (x) {\n\n  const b = Math.PI / 4;\n  if (-b > x || x > b) {\n    return Math.cos(x) - 1.0;\n  }\n\n  /* Calculate horner form of polynomial of taylor series in Q\n  let fac = 1, alt = 1, pol = {};\n  for (let i = 0; i <= 16; i++) {\n    fac*= i || 1;\n    if (i % 2 == 0) {\n      pol[i] = new Fraction(1, alt * fac);\n      alt = -alt;\n    }\n  }\n  console.log(new Polynomial(pol).toHorner()); // (((((((1/20922789888000x^2-1/87178291200)x^2+1/479001600)x^2-1/3628800)x^2+1/40320)x^2-1/720)x^2+1/24)x^2-1/2)x^2+1\n  */\n\n  const xx = x * x;\n  return xx * (\n    xx * (\n      xx * (\n        xx * (\n          xx * (\n            xx * (\n              xx * (\n                xx / 20922789888000\n                - 1 / 87178291200)\n              + 1 / 479001600)\n            - 1 / 3628800)\n          + 1 / 40320)\n        - 1 / 720)\n      + 1 / 24)\n    - 1 / 2);\n};\n\nconst hypot = function (x, y) {\n\n  x = Math.abs(x);\n  y = Math.abs(y);\n\n  // Ensure `x` is the larger value\n  if (x < y) [x, y] = [y, x];\n\n  // If both are below the threshold, use straightforward Pythagoras\n  if (x < 1e8) return Math.sqrt(x * x + y * y);\n\n  // For larger values, scale to avoid overflow\n  y /= x;\n  return x * Math.sqrt(1 + y * y);\n};\n\nconst parser_exit = function () {\n  throw SyntaxError('Invalid Param');\n};\n\n/**\n * Calculates log(sqrt(a^2+b^2)) in a way to avoid overflows\n *\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction logHypot(a, b) {\n\n  const _a = Math.abs(a);\n  const _b = Math.abs(b);\n\n  if (a === 0) {\n    return Math.log(_b);\n  }\n\n  if (b === 0) {\n    return Math.log(_a);\n  }\n\n  if (_a < 3000 && _b < 3000) {\n    return Math.log(a * a + b * b) * 0.5;\n  }\n\n  /* I got 4 ideas to compute this property without overflow:\n   *\n   * Testing 1000000 times with random samples for a,b ∈ [1, 1000000000] against a big decimal library to get an error estimate\n   *\n   * 1. Only eliminate the square root: (OVERALL ERROR: 3.9122483030951116e-11)\n\n   Math.log(a * a + b * b) / 2\n\n   *\n   *\n   * 2. Try to use the non-overflowing pythagoras: (OVERALL ERROR: 8.889760039210159e-10)\n\n   const fn = function(a, b) {\n   a = Math.abs(a);\n   b = Math.abs(b);\n   let t = Math.min(a, b);\n   a = Math.max(a, b);\n   t = t / a;\n\n   return Math.log(a) + Math.log(1 + t * t) / 2;\n   };\n\n   * 3. Abuse the identity cos(atan(y/x) = x / sqrt(x^2+y^2): (OVERALL ERROR: 3.4780178737037204e-10)\n\n   Math.log(a / Math.cos(Math.atan2(b, a)))\n\n   * 4. Use 3. and apply log rules: (OVERALL ERROR: 1.2014087502620896e-9)\n\n   Math.log(a) - Math.log(Math.cos(Math.atan2(b, a)))\n\n   */\n\n  a = a * 0.5;\n  b = b * 0.5;\n\n  return 0.5 * Math.log(a * a + b * b) + Math.LN2;\n}\n\nconst P = { 're': 0, 'im': 0 };\nconst parse = function (a, b) {\n\n  const z = P;\n\n  if (a === undefined || a === null) {\n    z['re'] =\n      z['im'] = 0;\n  } else if (b !== undefined) {\n    z['re'] = a;\n    z['im'] = b;\n  } else\n    switch (typeof a) {\n\n      case 'object':\n\n        if ('im' in a && 're' in a) {\n          z['re'] = a['re'];\n          z['im'] = a['im'];\n        } else if ('abs' in a && 'arg' in a) {\n          if (!isFinite(a['abs']) && isFinite(a['arg'])) {\n            return Complex['INFINITY'];\n          }\n          z['re'] = a['abs'] * Math.cos(a['arg']);\n          z['im'] = a['abs'] * Math.sin(a['arg']);\n        } else if ('r' in a && 'phi' in a) {\n          if (!isFinite(a['r']) && isFinite(a['phi'])) {\n            return Complex['INFINITY'];\n          }\n          z['re'] = a['r'] * Math.cos(a['phi']);\n          z['im'] = a['r'] * Math.sin(a['phi']);\n        } else if (a.length === 2) { // Quick array check\n          z['re'] = a[0];\n          z['im'] = a[1];\n        } else {\n          parser_exit();\n        }\n        break;\n\n      case 'string':\n\n        z['im'] = /* void */\n        z['re'] = 0;\n\n        const tokens = a.replace(/_/g, '')\n          .match(/\\d+\\.?\\d*e[+-]?\\d+|\\d+\\.?\\d*|\\.\\d+|./g);\n        let plus = 1;\n        let minus = 0;\n\n        if (tokens === null) {\n          parser_exit();\n        }\n\n        for (let i = 0; i < tokens.length; i++) {\n\n          const c = tokens[i];\n\n          if (c === ' ' || c === '\\t' || c === '\\n') {\n            /* void */\n          } else if (c === '+') {\n            plus++;\n          } else if (c === '-') {\n            minus++;\n          } else if (c === 'i' || c === 'I') {\n\n            if (plus + minus === 0) {\n              parser_exit();\n            }\n\n            if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {\n              z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);\n              i++;\n            } else {\n              z['im'] += parseFloat((minus % 2 ? '-' : '') + '1');\n            }\n            plus = minus = 0;\n\n          } else {\n\n            if (plus + minus === 0 || isNaN(c)) {\n              parser_exit();\n            }\n\n            if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I') {\n              z['im'] += parseFloat((minus % 2 ? '-' : '') + c);\n              i++;\n            } else {\n              z['re'] += parseFloat((minus % 2 ? '-' : '') + c);\n            }\n            plus = minus = 0;\n          }\n        }\n\n        // Still something on the stack\n        if (plus + minus > 0) {\n          parser_exit();\n        }\n        break;\n\n      case 'number':\n        z['im'] = 0;\n        z['re'] = a;\n        break;\n\n      default:\n        parser_exit();\n    }\n\n  if (isNaN(z['re']) || isNaN(z['im'])) {\n    // If a calculation is NaN, we treat it as NaN and don't throw\n    //parser_exit();\n  }\n\n  return z;\n};\n\n/**\n * @constructor\n * @returns {Complex}\n */\nfunction Complex(a, b) {\n\n  if (!(this instanceof Complex)) {\n    return new Complex(a, b);\n  }\n\n  const z = parse(a, b);\n\n  this['re'] = z['re'];\n  this['im'] = z['im'];\n}\n\nComplex.prototype = {\n\n  're': 0,\n  'im': 0,\n\n  /**\n   * Calculates the sign of a complex number, which is a normalized complex\n   *\n   * @returns {Complex}\n   */\n  'sign': function () {\n\n    const abs = hypot(this['re'], this['im']);\n\n    return new Complex(\n      this['re'] / abs,\n      this['im'] / abs);\n  },\n\n  /**\n   * Adds two complex numbers\n   *\n   * @returns {Complex}\n   */\n  'add': function (a, b) {\n\n    const z = parse(a, b);\n\n    const tInfin = this['isInfinite']();\n    const zInfin = !(isFinite(z['re']) && isFinite(z['im']));\n\n    if (tInfin || zInfin) {\n\n      if (tInfin && zInfin) {\n        // Infinity + Infinity = NaN\n        return Complex['NAN'];\n      }\n      // Infinity + z = Infinity { where z != Infinity }\n      return Complex['INFINITY'];\n    }\n\n    return new Complex(\n      this['re'] + z['re'],\n      this['im'] + z['im']);\n  },\n\n  /**\n   * Subtracts two complex numbers\n   *\n   * @returns {Complex}\n   */\n  'sub': function (a, b) {\n\n    const z = parse(a, b);\n\n    const tInfin = this['isInfinite']();\n    const zInfin = !(isFinite(z['re']) && isFinite(z['im']));\n\n    if (tInfin || zInfin) {\n\n      if (tInfin && zInfin) {\n        // Infinity - Infinity = NaN\n        return Complex['NAN'];\n      }\n      // Infinity - z = Infinity { where z != Infinity }\n      return Complex['INFINITY'];\n    }\n\n    return new Complex(\n      this['re'] - z['re'],\n      this['im'] - z['im']);\n  },\n\n  /**\n   * Multiplies two complex numbers\n   *\n   * @returns {Complex}\n   */\n  'mul': function (a, b) {\n\n    const z = parse(a, b);\n\n    const tInfin = this['isInfinite']();\n    const zInfin = !(isFinite(z['re']) && isFinite(z['im']));\n    const tIsZero = this['re'] === 0 && this['im'] === 0;\n    const zIsZero = z['re'] === 0 && z['im'] === 0;\n\n    // Infinity * 0 = NaN\n    if (tInfin && zIsZero || zInfin && tIsZero) {\n      return Complex['NAN'];\n    }\n\n    // Infinity * z = Infinity { where z != 0 }\n    if (tInfin || zInfin) {\n      return Complex['INFINITY'];\n    }\n\n    // Shortcut for real values\n    if (z['im'] === 0 && this['im'] === 0) {\n      return new Complex(this['re'] * z['re'], 0);\n    }\n\n    return new Complex(\n      this['re'] * z['re'] - this['im'] * z['im'],\n      this['re'] * z['im'] + this['im'] * z['re']);\n  },\n\n  /**\n   * Divides two complex numbers\n   *\n   * @returns {Complex}\n   */\n  'div': function (a, b) {\n\n    const z = parse(a, b);\n\n    const tInfin = this['isInfinite']();\n    const zInfin = !(isFinite(z['re']) && isFinite(z['im']));\n    const tIsZero = this['re'] === 0 && this['im'] === 0;\n    const zIsZero = z['re'] === 0 && z['im'] === 0;\n\n    // 0 / 0 = NaN and Infinity / Infinity = NaN\n    if (tIsZero && zIsZero || tInfin && zInfin) {\n      return Complex['NAN'];\n    }\n\n    // Infinity / 0 = Infinity\n    if (zIsZero || tInfin) {\n      return Complex['INFINITY'];\n    }\n\n    // 0 / Infinity = 0\n    if (tIsZero || zInfin) {\n      return Complex['ZERO'];\n    }\n\n    if (0 === z['im']) {\n      // Divisor is real\n      return new Complex(this['re'] / z['re'], this['im'] / z['re']);\n    }\n\n    if (Math.abs(z['re']) < Math.abs(z['im'])) {\n\n      const x = z['re'] / z['im'];\n      const t = z['re'] * x + z['im'];\n\n      return new Complex(\n        (this['re'] * x + this['im']) / t,\n        (this['im'] * x - this['re']) / t);\n\n    } else {\n\n      const x = z['im'] / z['re'];\n      const t = z['im'] * x + z['re'];\n\n      return new Complex(\n        (this['re'] + this['im'] * x) / t,\n        (this['im'] - this['re'] * x) / t);\n    }\n  },\n\n  /**\n   * Calculate the power of two complex numbers\n   *\n   * @returns {Complex}\n   */\n  'pow': function (a, b) {\n\n    const z = parse(a, b);\n\n    const tIsZero = this['re'] === 0 && this['im'] === 0;\n    const zIsZero = z['re'] === 0 && z['im'] === 0;\n\n    if (zIsZero) {\n      return Complex['ONE'];\n    }\n\n    // If the exponent is real\n    if (z['im'] === 0) {\n\n      if (this['im'] === 0 && this['re'] > 0) {\n\n        return new Complex(Math.pow(this['re'], z['re']), 0);\n\n      } else if (this['re'] === 0) { // If base is fully imaginary\n\n        switch ((z['re'] % 4 + 4) % 4) {\n          case 0:\n            return new Complex(Math.pow(this['im'], z['re']), 0);\n          case 1:\n            return new Complex(0, Math.pow(this['im'], z['re']));\n          case 2:\n            return new Complex(-Math.pow(this['im'], z['re']), 0);\n          case 3:\n            return new Complex(0, -Math.pow(this['im'], z['re']));\n        }\n      }\n    }\n\n    /* I couldn't find a good formula, so here is a derivation and optimization\n     *\n     * z_1^z_2 = (a + bi)^(c + di)\n     *         = exp((c + di) * log(a + bi)\n     *         = pow(a^2 + b^2, (c + di) / 2) * exp(i(c + di)atan2(b, a))\n     * =>...\n     * Re = (pow(a^2 + b^2, c / 2) * exp(-d * atan2(b, a))) * cos(d * log(a^2 + b^2) / 2 + c * atan2(b, a))\n     * Im = (pow(a^2 + b^2, c / 2) * exp(-d * atan2(b, a))) * sin(d * log(a^2 + b^2) / 2 + c * atan2(b, a))\n     *\n     * =>...\n     * Re = exp(c * log(sqrt(a^2 + b^2)) - d * atan2(b, a)) * cos(d * log(sqrt(a^2 + b^2)) + c * atan2(b, a))\n     * Im = exp(c * log(sqrt(a^2 + b^2)) - d * atan2(b, a)) * sin(d * log(sqrt(a^2 + b^2)) + c * atan2(b, a))\n     *\n     * =>\n     * Re = exp(c * logsq2 - d * arg(z_1)) * cos(d * logsq2 + c * arg(z_1))\n     * Im = exp(c * logsq2 - d * arg(z_1)) * sin(d * logsq2 + c * arg(z_1))\n     *\n     */\n\n    if (tIsZero && z['re'] > 0) { // Same behavior as Wolframalpha, Zero if real part is zero\n      return Complex['ZERO'];\n    }\n\n    const arg = Math.atan2(this['im'], this['re']);\n    const loh = logHypot(this['re'], this['im']);\n\n    let re = Math.exp(z['re'] * loh - z['im'] * arg);\n    let im = z['im'] * loh + z['re'] * arg;\n    return new Complex(\n      re * Math.cos(im),\n      re * Math.sin(im));\n  },\n\n  /**\n   * Calculate the complex square root\n   *\n   * @returns {Complex}\n   */\n  'sqrt': function () {\n\n    const a = this['re'];\n    const b = this['im'];\n\n    if (b === 0) {\n      // Real number case\n      if (a >= 0) {\n        return new Complex(Math.sqrt(a), 0);\n      } else {\n        return new Complex(0, Math.sqrt(-a));\n      }\n    }\n\n    const r = hypot(a, b);\n\n    let re = Math.sqrt(0.5 * (r + Math.abs(a))); // sqrt(2x) / 2 = sqrt(x / 2)\n    let im = Math.abs(b) / (2 * re);\n\n    if (a >= 0) {\n      return new Complex(re, b < 0 ? -im : im);\n    } else {\n      return new Complex(im, b < 0 ? -re : re);\n    }\n  },\n\n  /**\n   * Calculate the complex exponent\n   *\n   * @returns {Complex}\n   */\n  'exp': function () {\n\n    const er = Math.exp(this['re']);\n\n    if (this['im'] === 0) {\n      return new Complex(er, 0);\n    }\n    return new Complex(\n      er * Math.cos(this['im']),\n      er * Math.sin(this['im']));\n  },\n\n  /**\n   * Calculate the complex exponent and subtracts one.\n   *\n   * This may be more accurate than `Complex(x).exp().sub(1)` if\n   * `x` is small.\n   *\n   * @returns {Complex}\n   */\n  'expm1': function () {\n\n    /**\n     * exp(a + i*b) - 1\n     = exp(a) * (cos(b) + j*sin(b)) - 1\n     = expm1(a)*cos(b) + cosm1(b) + j*exp(a)*sin(b)\n     */\n\n    const a = this['re'];\n    const b = this['im'];\n\n    return new Complex(\n      Math.expm1(a) * Math.cos(b) + cosm1(b),\n      Math.exp(a) * Math.sin(b));\n  },\n\n  /**\n   * Calculate the natural log\n   *\n   * @returns {Complex}\n   */\n  'log': function () {\n\n    const a = this['re'];\n    const b = this['im'];\n\n    if (b === 0 && a > 0) {\n      return new Complex(Math.log(a), 0);\n    }\n\n    return new Complex(\n      logHypot(a, b),\n      Math.atan2(b, a));\n  },\n\n  /**\n   * Calculate the magnitude of the complex number\n   *\n   * @returns {number}\n   */\n  'abs': function () {\n\n    return hypot(this['re'], this['im']);\n  },\n\n  /**\n   * Calculate the angle of the complex number\n   *\n   * @returns {number}\n   */\n  'arg': function () {\n\n    return Math.atan2(this['im'], this['re']);\n  },\n\n  /**\n   * Calculate the sine of the complex number\n   *\n   * @returns {Complex}\n   */\n  'sin': function () {\n\n    // sin(z) = ( e^iz - e^-iz ) / 2i \n    //        = sin(a)cosh(b) + i cos(a)sinh(b)\n\n    const a = this['re'];\n    const b = this['im'];\n\n    return new Complex(\n      Math.sin(a) * cosh(b),\n      Math.cos(a) * sinh(b));\n  },\n\n  /**\n   * Calculate the cosine\n   *\n   * @returns {Complex}\n   */\n  'cos': function () {\n\n    // cos(z) = ( e^iz + e^-iz ) / 2 \n    //        = cos(a)cosh(b) - i sin(a)sinh(b)\n\n    const a = this['re'];\n    const b = this['im'];\n\n    return new Complex(\n      Math.cos(a) * cosh(b),\n      -Math.sin(a) * sinh(b));\n  },\n\n  /**\n   * Calculate the tangent\n   *\n   * @returns {Complex}\n   */\n  'tan': function () {\n\n    // tan(z) = sin(z) / cos(z) \n    //        = ( e^iz - e^-iz ) / ( i( e^iz + e^-iz ) )\n    //        = ( e^2iz - 1 ) / i( e^2iz + 1 )\n    //        = ( sin(2a) + i sinh(2b) ) / ( cos(2a) + cosh(2b) )\n\n    const a = 2 * this['re'];\n    const b = 2 * this['im'];\n    const d = Math.cos(a) + cosh(b);\n\n    return new Complex(\n      Math.sin(a) / d,\n      sinh(b) / d);\n  },\n\n  /**\n   * Calculate the cotangent\n   *\n   * @returns {Complex}\n   */\n  'cot': function () {\n\n    // cot(c) = i(e^(ci) + e^(-ci)) / (e^(ci) - e^(-ci))\n\n    const a = 2 * this['re'];\n    const b = 2 * this['im'];\n    const d = Math.cos(a) - cosh(b);\n\n    return new Complex(\n      -Math.sin(a) / d,\n      sinh(b) / d);\n  },\n\n  /**\n   * Calculate the secant\n   *\n   * @returns {Complex}\n   */\n  'sec': function () {\n\n    // sec(c) = 2 / (e^(ci) + e^(-ci))\n\n    const a = this['re'];\n    const b = this['im'];\n    const d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);\n\n    return new Complex(\n      Math.cos(a) * cosh(b) / d,\n      Math.sin(a) * sinh(b) / d);\n  },\n\n  /**\n   * Calculate the cosecans\n   *\n   * @returns {Complex}\n   */\n  'csc': function () {\n\n    // csc(c) = 2i / (e^(ci) - e^(-ci))\n\n    const a = this['re'];\n    const b = this['im'];\n    const d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);\n\n    return new Complex(\n      Math.sin(a) * cosh(b) / d,\n      -Math.cos(a) * sinh(b) / d);\n  },\n\n  /**\n   * Calculate the complex arcus sinus\n   *\n   * @returns {Complex}\n   */\n  'asin': function () {\n\n    // asin(c) = -i * log(ci + sqrt(1 - c^2))\n\n    const a = this['re'];\n    const b = this['im'];\n\n    const t1 = new Complex(\n      b * b - a * a + 1,\n      -2 * a * b)['sqrt']();\n\n    const t2 = new Complex(\n      t1['re'] - b,\n      t1['im'] + a)['log']();\n\n    return new Complex(t2['im'], -t2['re']);\n  },\n\n  /**\n   * Calculate the complex arcus cosinus\n   *\n   * @returns {Complex}\n   */\n  'acos': function () {\n\n    // acos(c) = i * log(c - i * sqrt(1 - c^2))\n\n    const a = this['re'];\n    const b = this['im'];\n\n    const t1 = new Complex(\n      b * b - a * a + 1,\n      -2 * a * b)['sqrt']();\n\n    const t2 = new Complex(\n      t1['re'] - b,\n      t1['im'] + a)['log']();\n\n    return new Complex(Math.PI / 2 - t2['im'], t2['re']);\n  },\n\n  /**\n   * Calculate the complex arcus tangent\n   *\n   * @returns {Complex}\n   */\n  'atan': function () {\n\n    // atan(c) = i / 2 log((i + x) / (i - x))\n\n    const a = this['re'];\n    const b = this['im'];\n\n    if (a === 0) {\n\n      if (b === 1) {\n        return new Complex(0, Infinity);\n      }\n\n      if (b === -1) {\n        return new Complex(0, -Infinity);\n      }\n    }\n\n    const d = a * a + (1.0 - b) * (1.0 - b);\n\n    const t1 = new Complex(\n      (1 - b * b - a * a) / d,\n      -2 * a / d).log();\n\n    return new Complex(-0.5 * t1['im'], 0.5 * t1['re']);\n  },\n\n  /**\n   * Calculate the complex arcus cotangent\n   *\n   * @returns {Complex}\n   */\n  'acot': function () {\n\n    // acot(c) = i / 2 log((c - i) / (c + i))\n\n    const a = this['re'];\n    const b = this['im'];\n\n    if (b === 0) {\n      return new Complex(Math.atan2(1, a), 0);\n    }\n\n    const d = a * a + b * b;\n    return (d !== 0)\n      ? new Complex(\n        a / d,\n        -b / d).atan()\n      : new Complex(\n        (a !== 0) ? a / 0 : 0,\n        (b !== 0) ? -b / 0 : 0).atan();\n  },\n\n  /**\n   * Calculate the complex arcus secant\n   *\n   * @returns {Complex}\n   */\n  'asec': function () {\n\n    // asec(c) = -i * log(1 / c + sqrt(1 - i / c^2))\n\n    const a = this['re'];\n    const b = this['im'];\n\n    if (a === 0 && b === 0) {\n      return new Complex(0, Infinity);\n    }\n\n    const d = a * a + b * b;\n    return (d !== 0)\n      ? new Complex(\n        a / d,\n        -b / d).acos()\n      : new Complex(\n        (a !== 0) ? a / 0 : 0,\n        (b !== 0) ? -b / 0 : 0).acos();\n  },\n\n  /**\n   * Calculate the complex arcus cosecans\n   *\n   * @returns {Complex}\n   */\n  'acsc': function () {\n\n    // acsc(c) = -i * log(i / c + sqrt(1 - 1 / c^2))\n\n    const a = this['re'];\n    const b = this['im'];\n\n    if (a === 0 && b === 0) {\n      return new Complex(Math.PI / 2, Infinity);\n    }\n\n    const d = a * a + b * b;\n    return (d !== 0)\n      ? new Complex(\n        a / d,\n        -b / d).asin()\n      : new Complex(\n        (a !== 0) ? a / 0 : 0,\n        (b !== 0) ? -b / 0 : 0).asin();\n  },\n\n  /**\n   * Calculate the complex sinh\n   *\n   * @returns {Complex}\n   */\n  'sinh': function () {\n\n    // sinh(c) = (e^c - e^-c) / 2\n\n    const a = this['re'];\n    const b = this['im'];\n\n    return new Complex(\n      sinh(a) * Math.cos(b),\n      cosh(a) * Math.sin(b));\n  },\n\n  /**\n   * Calculate the complex cosh\n   *\n   * @returns {Complex}\n   */\n  'cosh': function () {\n\n    // cosh(c) = (e^c + e^-c) / 2\n\n    const a = this['re'];\n    const b = this['im'];\n\n    return new Complex(\n      cosh(a) * Math.cos(b),\n      sinh(a) * Math.sin(b));\n  },\n\n  /**\n   * Calculate the complex tanh\n   *\n   * @returns {Complex}\n   */\n  'tanh': function () {\n\n    // tanh(c) = (e^c - e^-c) / (e^c + e^-c)\n\n    const a = 2 * this['re'];\n    const b = 2 * this['im'];\n    const d = cosh(a) + Math.cos(b);\n\n    return new Complex(\n      sinh(a) / d,\n      Math.sin(b) / d);\n  },\n\n  /**\n   * Calculate the complex coth\n   *\n   * @returns {Complex}\n   */\n  'coth': function () {\n\n    // coth(c) = (e^c + e^-c) / (e^c - e^-c)\n\n    const a = 2 * this['re'];\n    const b = 2 * this['im'];\n    const d = cosh(a) - Math.cos(b);\n\n    return new Complex(\n      sinh(a) / d,\n      -Math.sin(b) / d);\n  },\n\n  /**\n   * Calculate the complex coth\n   *\n   * @returns {Complex}\n   */\n  'csch': function () {\n\n    // csch(c) = 2 / (e^c - e^-c)\n\n    const a = this['re'];\n    const b = this['im'];\n    const d = Math.cos(2 * b) - cosh(2 * a);\n\n    return new Complex(\n      -2 * sinh(a) * Math.cos(b) / d,\n      2 * cosh(a) * Math.sin(b) / d);\n  },\n\n  /**\n   * Calculate the complex sech\n   *\n   * @returns {Complex}\n   */\n  'sech': function () {\n\n    // sech(c) = 2 / (e^c + e^-c)\n\n    const a = this['re'];\n    const b = this['im'];\n    const d = Math.cos(2 * b) + cosh(2 * a);\n\n    return new Complex(\n      2 * cosh(a) * Math.cos(b) / d,\n      -2 * sinh(a) * Math.sin(b) / d);\n  },\n\n  /**\n   * Calculate the complex asinh\n   *\n   * @returns {Complex}\n   */\n  'asinh': function () {\n\n    // asinh(c) = log(c + sqrt(c^2 + 1))\n\n    let tmp = this['im'];\n    this['im'] = -this['re'];\n    this['re'] = tmp;\n    const res = this['asin']();\n\n    this['re'] = -this['im'];\n    this['im'] = tmp;\n    tmp = res['re'];\n\n    res['re'] = -res['im'];\n    res['im'] = tmp;\n    return res;\n  },\n\n  /**\n   * Calculate the complex acosh\n   *\n   * @returns {Complex}\n   */\n  'acosh': function () {\n\n    // acosh(c) = log(c + sqrt(c^2 - 1))\n\n    const res = this['acos']();\n    if (res['im'] <= 0) {\n      const tmp = res['re'];\n      res['re'] = -res['im'];\n      res['im'] = tmp;\n    } else {\n      const tmp = res['im'];\n      res['im'] = -res['re'];\n      res['re'] = tmp;\n    }\n    return res;\n  },\n\n  /**\n   * Calculate the complex atanh\n   *\n   * @returns {Complex}\n   */\n  'atanh': function () {\n\n    // atanh(c) = log((1+c) / (1-c)) / 2\n\n    const a = this['re'];\n    const b = this['im'];\n\n    const noIM = a > 1 && b === 0;\n    const oneMinus = 1 - a;\n    const onePlus = 1 + a;\n    const d = oneMinus * oneMinus + b * b;\n\n    const x = (d !== 0)\n      ? new Complex(\n        (onePlus * oneMinus - b * b) / d,\n        (b * oneMinus + onePlus * b) / d)\n      : new Complex(\n        (a !== -1) ? (a / 0) : 0,\n        (b !== 0) ? (b / 0) : 0);\n\n    const temp = x['re'];\n    x['re'] = logHypot(x['re'], x['im']) / 2;\n    x['im'] = Math.atan2(x['im'], temp) / 2;\n    if (noIM) {\n      x['im'] = -x['im'];\n    }\n    return x;\n  },\n\n  /**\n   * Calculate the complex acoth\n   *\n   * @returns {Complex}\n   */\n  'acoth': function () {\n\n    // acoth(c) = log((c+1) / (c-1)) / 2\n\n    const a = this['re'];\n    const b = this['im'];\n\n    if (a === 0 && b === 0) {\n      return new Complex(0, Math.PI / 2);\n    }\n\n    const d = a * a + b * b;\n    return (d !== 0)\n      ? new Complex(\n        a / d,\n        -b / d).atanh()\n      : new Complex(\n        (a !== 0) ? a / 0 : 0,\n        (b !== 0) ? -b / 0 : 0).atanh();\n  },\n\n  /**\n   * Calculate the complex acsch\n   *\n   * @returns {Complex}\n   */\n  'acsch': function () {\n\n    // acsch(c) = log((1+sqrt(1+c^2))/c)\n\n    const a = this['re'];\n    const b = this['im'];\n\n    if (b === 0) {\n\n      return new Complex(\n        (a !== 0)\n          ? Math.log(a + Math.sqrt(a * a + 1))\n          : Infinity, 0);\n    }\n\n    const d = a * a + b * b;\n    return (d !== 0)\n      ? new Complex(\n        a / d,\n        -b / d).asinh()\n      : new Complex(\n        (a !== 0) ? a / 0 : 0,\n        (b !== 0) ? -b / 0 : 0).asinh();\n  },\n\n  /**\n   * Calculate the complex asech\n   *\n   * @returns {Complex}\n   */\n  'asech': function () {\n\n    // asech(c) = log((1+sqrt(1-c^2))/c)\n\n    const a = this['re'];\n    const b = this['im'];\n\n    if (this['isZero']()) {\n      return Complex['INFINITY'];\n    }\n\n    const d = a * a + b * b;\n    return (d !== 0)\n      ? new Complex(\n        a / d,\n        -b / d).acosh()\n      : new Complex(\n        (a !== 0) ? a / 0 : 0,\n        (b !== 0) ? -b / 0 : 0).acosh();\n  },\n\n  /**\n   * Calculate the complex inverse 1/z\n   *\n   * @returns {Complex}\n   */\n  'inverse': function () {\n\n    // 1 / 0 = Infinity and 1 / Infinity = 0\n    if (this['isZero']()) {\n      return Complex['INFINITY'];\n    }\n\n    if (this['isInfinite']()) {\n      return Complex['ZERO'];\n    }\n\n    const a = this['re'];\n    const b = this['im'];\n\n    const d = a * a + b * b;\n\n    return new Complex(a / d, -b / d);\n  },\n\n  /**\n   * Returns the complex conjugate\n   *\n   * @returns {Complex}\n   */\n  'conjugate': function () {\n\n    return new Complex(this['re'], -this['im']);\n  },\n\n  /**\n   * Gets the negated complex number\n   *\n   * @returns {Complex}\n   */\n  'neg': function () {\n\n    return new Complex(-this['re'], -this['im']);\n  },\n\n  /**\n   * Ceils the actual complex number\n   *\n   * @returns {Complex}\n   */\n  'ceil': function (places) {\n\n    places = Math.pow(10, places || 0);\n\n    return new Complex(\n      Math.ceil(this['re'] * places) / places,\n      Math.ceil(this['im'] * places) / places);\n  },\n\n  /**\n   * Floors the actual complex number\n   *\n   * @returns {Complex}\n   */\n  'floor': function (places) {\n\n    places = Math.pow(10, places || 0);\n\n    return new Complex(\n      Math.floor(this['re'] * places) / places,\n      Math.floor(this['im'] * places) / places);\n  },\n\n  /**\n   * Ceils the actual complex number\n   *\n   * @returns {Complex}\n   */\n  'round': function (places) {\n\n    places = Math.pow(10, places || 0);\n\n    return new Complex(\n      Math.round(this['re'] * places) / places,\n      Math.round(this['im'] * places) / places);\n  },\n\n  /**\n   * Compares two complex numbers\n   *\n   * **Note:** new Complex(Infinity).equals(Infinity) === false\n   *\n   * @returns {boolean}\n   */\n  'equals': function (a, b) {\n\n    const z = parse(a, b);\n\n    return Math.abs(z['re'] - this['re']) <= Complex['EPSILON'] &&\n      Math.abs(z['im'] - this['im']) <= Complex['EPSILON'];\n  },\n\n  /**\n   * Clones the actual object\n   *\n   * @returns {Complex}\n   */\n  'clone': function () {\n\n    return new Complex(this['re'], this['im']);\n  },\n\n  /**\n   * Gets a string of the actual complex number\n   *\n   * @returns {string}\n   */\n  'toString': function () {\n\n    let a = this['re'];\n    let b = this['im'];\n    let ret = \"\";\n\n    if (this['isNaN']()) {\n      return 'NaN';\n    }\n\n    if (this['isInfinite']()) {\n      return 'Infinity';\n    }\n\n    if (Math.abs(a) < Complex['EPSILON']) {\n      a = 0;\n    }\n\n    if (Math.abs(b) < Complex['EPSILON']) {\n      b = 0;\n    }\n\n    // If is real number\n    if (b === 0) {\n      return ret + a;\n    }\n\n    if (a !== 0) {\n      ret += a;\n      ret += \" \";\n      if (b < 0) {\n        b = -b;\n        ret += \"-\";\n      } else {\n        ret += \"+\";\n      }\n      ret += \" \";\n    } else if (b < 0) {\n      b = -b;\n      ret += \"-\";\n    }\n\n    if (1 !== b) { // b is the absolute imaginary part\n      ret += b;\n    }\n    return ret + \"i\";\n  },\n\n  /**\n   * Returns the actual number as a vector\n   *\n   * @returns {Array}\n   */\n  'toVector': function () {\n\n    return [this['re'], this['im']];\n  },\n\n  /**\n   * Returns the actual real value of the current object\n   *\n   * @returns {number|null}\n   */\n  'valueOf': function () {\n\n    if (this['im'] === 0) {\n      return this['re'];\n    }\n    return null;\n  },\n\n  /**\n   * Determines whether a complex number is not on the Riemann sphere.\n   *\n   * @returns {boolean}\n   */\n  'isNaN': function () {\n    return isNaN(this['re']) || isNaN(this['im']);\n  },\n\n  /**\n   * Determines whether or not a complex number is at the zero pole of the\n   * Riemann sphere.\n   *\n   * @returns {boolean}\n   */\n  'isZero': function () {\n    return this['im'] === 0 && this['re'] === 0;\n  },\n\n  /**\n   * Determines whether a complex number is not at the infinity pole of the\n   * Riemann sphere.\n   *\n   * @returns {boolean}\n   */\n  'isFinite': function () {\n    return isFinite(this['re']) && isFinite(this['im']);\n  },\n\n  /**\n   * Determines whether or not a complex number is at the infinity pole of the\n   * Riemann sphere.\n   *\n   * @returns {boolean}\n   */\n  'isInfinite': function () {\n    return !this['isFinite']();\n  }\n};\n\nComplex['ZERO'] = new Complex(0, 0);\nComplex['ONE'] = new Complex(1, 0);\nComplex['I'] = new Complex(0, 1);\nComplex['PI'] = new Complex(Math.PI, 0);\nComplex['E'] = new Complex(Math.E, 0);\nComplex['INFINITY'] = new Complex(Infinity, Infinity);\nComplex['NAN'] = new Complex(NaN, NaN);\nComplex['EPSILON'] = 1e-15;\nexport {\n  Complex as default, Complex\n};\n","import Complex from 'complex.js';\nimport { format } from '../../utils/number.js';\nimport { isNumber, isUnit } from '../../utils/is.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'Complex';\nvar dependencies = [];\nexport var createComplexClass = /* #__PURE__ */factory(name, dependencies, () => {\n  /**\n   * Attach type information\n   */\n  Object.defineProperty(Complex, 'name', {\n    value: 'Complex'\n  });\n  Complex.prototype.constructor = Complex;\n  Complex.prototype.type = 'Complex';\n  Complex.prototype.isComplex = true;\n\n  /**\n   * Get a JSON representation of the complex number\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"Complex\", \"re\": 2, \"im\": 3}`\n   */\n  Complex.prototype.toJSON = function () {\n    return {\n      mathjs: 'Complex',\n      re: this.re,\n      im: this.im\n    };\n  };\n\n  /*\n   * Return the value of the complex number in polar notation\n   * The angle phi will be set in the interval of [-pi, pi].\n   * @return {{r: number, phi: number}} Returns and object with properties r and phi.\n   */\n  Complex.prototype.toPolar = function () {\n    return {\n      r: this.abs(),\n      phi: this.arg()\n    };\n  };\n\n  /**\n   * Get a string representation of the complex number,\n   * with optional formatting options.\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @return {string} str\n   */\n  Complex.prototype.format = function (options) {\n    var str = '';\n    var im = this.im;\n    var re = this.re;\n    var strRe = format(this.re, options);\n    var strIm = format(this.im, options);\n\n    // round either re or im when smaller than the configured precision\n    var precision = isNumber(options) ? options : options ? options.precision : null;\n    if (precision !== null) {\n      var epsilon = Math.pow(10, -precision);\n      if (Math.abs(re / im) < epsilon) {\n        re = 0;\n      }\n      if (Math.abs(im / re) < epsilon) {\n        im = 0;\n      }\n    }\n    if (im === 0) {\n      // real value\n      str = strRe;\n    } else if (re === 0) {\n      // purely complex value\n      if (im === 1) {\n        str = 'i';\n      } else if (im === -1) {\n        str = '-i';\n      } else {\n        str = strIm + 'i';\n      }\n    } else {\n      // complex value\n      if (im < 0) {\n        if (im === -1) {\n          str = strRe + ' - i';\n        } else {\n          str = strRe + ' - ' + strIm.substring(1) + 'i';\n        }\n      } else {\n        if (im === 1) {\n          str = strRe + ' + i';\n        } else {\n          str = strRe + ' + ' + strIm + 'i';\n        }\n      }\n    }\n    return str;\n  };\n\n  /**\n   * Create a complex number from polar coordinates\n   *\n   * Usage:\n   *\n   *     Complex.fromPolar(r: number, phi: number) : Complex\n   *     Complex.fromPolar({r: number, phi: number}) : Complex\n   *\n   * @param {*} args...\n   * @return {Complex}\n   */\n  Complex.fromPolar = function (args) {\n    switch (arguments.length) {\n      case 1:\n        {\n          var arg = arguments[0];\n          if (typeof arg === 'object') {\n            return Complex(arg);\n          } else {\n            throw new TypeError('Input has to be an object with r and phi keys.');\n          }\n        }\n      case 2:\n        {\n          var r = arguments[0];\n          var phi = arguments[1];\n          if (isNumber(r)) {\n            if (isUnit(phi) && phi.hasBase('ANGLE')) {\n              // convert unit to a number in radians\n              phi = phi.toNumber('rad');\n            }\n            if (isNumber(phi)) {\n              return new Complex({\n                r,\n                phi\n              });\n            }\n            throw new TypeError('Phi is not a number nor an angle unit.');\n          } else {\n            throw new TypeError('Radius r is not a number.');\n          }\n        }\n      default:\n        throw new SyntaxError('Wrong number of arguments in function fromPolar');\n    }\n  };\n  Complex.prototype.valueOf = Complex.prototype.toString;\n\n  /**\n   * Create a Complex number from a JSON object\n   * @param {Object} json  A JSON Object structured as\n   *                       {\"mathjs\": \"Complex\", \"re\": 2, \"im\": 3}\n   *                       All properties are optional, default values\n   *                       for `re` and `im` are 0.\n   * @return {Complex} Returns a new Complex number\n   */\n  Complex.fromJSON = function (json) {\n    return new Complex(json);\n  };\n\n  /**\n   * Compare two complex numbers, `a` and `b`:\n   *\n   * - Returns 1 when the real part of `a` is larger than the real part of `b`\n   * - Returns -1 when the real part of `a` is smaller than the real part of `b`\n   * - Returns 1 when the real parts are equal\n   *   and the imaginary part of `a` is larger than the imaginary part of `b`\n   * - Returns -1 when the real parts are equal\n   *   and the imaginary part of `a` is smaller than the imaginary part of `b`\n   * - Returns 0 when both real and imaginary parts are equal.\n   *\n   * @params {Complex} a\n   * @params {Complex} b\n   * @returns {number} Returns the comparison result: -1, 0, or 1\n   */\n  Complex.compare = function (a, b) {\n    if (a.re > b.re) {\n      return 1;\n    }\n    if (a.re < b.re) {\n      return -1;\n    }\n    if (a.im > b.im) {\n      return 1;\n    }\n    if (a.im < b.im) {\n      return -1;\n    }\n    return 0;\n  };\n  return Complex;\n}, {\n  isClass: true\n});","'use strict';\n\n/**\n *\n * This class offers the possibility to calculate fractions.\n * You can pass a fraction in different formats. Either as array, as double, as string or as an integer.\n *\n * Array/Object form\n * [ 0 => <numerator>, 1 => <denominator> ]\n * { n => <numerator>, d => <denominator> }\n *\n * Integer form\n * - Single integer value as BigInt or Number\n *\n * Double form\n * - Single double value as Number\n *\n * String form\n * 123.456 - a simple double\n * 123/456 - a string fraction\n * 123.'456' - a double with repeating decimal places\n * 123.(456) - synonym\n * 123.45'6' - a double with repeating last place\n * 123.45(6) - synonym\n *\n * Example:\n * let f = new Fraction(\"9.4'31'\");\n * f.mul([-4, 3]).div(4.9);\n *\n */\n\n// Set Identity function to downgrade BigInt to Number if needed\nif (typeof BigInt === 'undefined') BigInt = function (n) { if (isNaN(n)) throw new Error(\"\"); return n; };\n\nconst C_ZERO = BigInt(0);\nconst C_ONE = BigInt(1);\nconst C_TWO = BigInt(2);\nconst C_FIVE = BigInt(5);\nconst C_TEN = BigInt(10);\n\n// Maximum search depth for cyclic rational numbers. 2000 should be more than enough.\n// Example: 1/7 = 0.(142857) has 6 repeating decimal places.\n// If MAX_CYCLE_LEN gets reduced, long cycles will not be detected and toString() only gets the first 10 digits\nconst MAX_CYCLE_LEN = 2000;\n\n// Parsed data to avoid calling \"new\" all the time\nconst P = {\n  \"s\": C_ONE,\n  \"n\": C_ZERO,\n  \"d\": C_ONE\n};\n\nfunction assign(n, s) {\n\n  try {\n    n = BigInt(n);\n  } catch (e) {\n    throw InvalidParameter();\n  }\n  return n * s;\n}\n\nfunction trunc(x) {\n  return typeof x === 'bigint' ? x : Math.floor(x);\n}\n\n// Creates a new Fraction internally without the need of the bulky constructor\nfunction newFraction(n, d) {\n\n  if (d === C_ZERO) {\n    throw DivisionByZero();\n  }\n\n  const f = Object.create(Fraction.prototype);\n  f[\"s\"] = n < C_ZERO ? -C_ONE : C_ONE;\n\n  n = n < C_ZERO ? -n : n;\n\n  const a = gcd(n, d);\n\n  f[\"n\"] = n / a;\n  f[\"d\"] = d / a;\n  return f;\n}\n\nfunction factorize(num) {\n\n  const factors = {};\n\n  let n = num;\n  let i = C_TWO;\n  let s = C_FIVE - C_ONE;\n\n  while (s <= n) {\n\n    while (n % i === C_ZERO) {\n      n /= i;\n      factors[i] = (factors[i] || C_ZERO) + C_ONE;\n    }\n    s += C_ONE + C_TWO * i++;\n  }\n\n  if (n !== num) {\n    if (n > 1)\n      factors[n] = (factors[n] || C_ZERO) + C_ONE;\n  } else {\n    factors[num] = (factors[num] || C_ZERO) + C_ONE;\n  }\n  return factors;\n}\n\nconst parse = function (p1, p2) {\n\n  let n = C_ZERO, d = C_ONE, s = C_ONE;\n\n  if (p1 === undefined || p1 === null) { // No argument\n    /* void */\n  } else if (p2 !== undefined) { // Two arguments\n\n    if (typeof p1 === \"bigint\") {\n      n = p1;\n    } else if (isNaN(p1)) {\n      throw InvalidParameter();\n    } else if (p1 % 1 !== 0) {\n      throw NonIntegerParameter();\n    } else {\n      n = BigInt(p1);\n    }\n\n    if (typeof p2 === \"bigint\") {\n      d = p2;\n    } else if (isNaN(p2)) {\n      throw InvalidParameter();\n    } else if (p2 % 1 !== 0) {\n      throw NonIntegerParameter();\n    } else {\n      d = BigInt(p2);\n    }\n\n    s = n * d;\n\n  } else if (typeof p1 === \"object\") {\n    if (\"d\" in p1 && \"n\" in p1) {\n      n = BigInt(p1[\"n\"]);\n      d = BigInt(p1[\"d\"]);\n      if (\"s\" in p1)\n        n *= BigInt(p1[\"s\"]);\n    } else if (0 in p1) {\n      n = BigInt(p1[0]);\n      if (1 in p1)\n        d = BigInt(p1[1]);\n    } else if (typeof p1 === \"bigint\") {\n      n = p1;\n    } else {\n      throw InvalidParameter();\n    }\n    s = n * d;\n  } else if (typeof p1 === \"number\") {\n\n    if (isNaN(p1)) {\n      throw InvalidParameter();\n    }\n\n    if (p1 < 0) {\n      s = -C_ONE;\n      p1 = -p1;\n    }\n\n    if (p1 % 1 === 0) {\n      n = BigInt(p1);\n    } else if (p1 > 0) { // check for != 0, scale would become NaN (log(0)), which converges really slow\n\n      let z = 1;\n\n      let A = 0, B = 1;\n      let C = 1, D = 1;\n\n      let N = 10000000;\n\n      if (p1 >= 1) {\n        z = 10 ** Math.floor(1 + Math.log10(p1));\n        p1 /= z;\n      }\n\n      // Using Farey Sequences\n\n      while (B <= N && D <= N) {\n        let M = (A + C) / (B + D);\n\n        if (p1 === M) {\n          if (B + D <= N) {\n            n = A + C;\n            d = B + D;\n          } else if (D > B) {\n            n = C;\n            d = D;\n          } else {\n            n = A;\n            d = B;\n          }\n          break;\n\n        } else {\n\n          if (p1 > M) {\n            A += C;\n            B += D;\n          } else {\n            C += A;\n            D += B;\n          }\n\n          if (B > N) {\n            n = C;\n            d = D;\n          } else {\n            n = A;\n            d = B;\n          }\n        }\n      }\n      n = BigInt(n) * BigInt(z);\n      d = BigInt(d);\n    }\n\n  } else if (typeof p1 === \"string\") {\n\n    let ndx = 0;\n\n    let v = C_ZERO, w = C_ZERO, x = C_ZERO, y = C_ONE, z = C_ONE;\n\n    let match = p1.replace(/_/g, '').match(/\\d+|./g);\n\n    if (match === null)\n      throw InvalidParameter();\n\n    if (match[ndx] === '-') {// Check for minus sign at the beginning\n      s = -C_ONE;\n      ndx++;\n    } else if (match[ndx] === '+') {// Check for plus sign at the beginning\n      ndx++;\n    }\n\n    if (match.length === ndx + 1) { // Check if it's just a simple number \"1234\"\n      w = assign(match[ndx++], s);\n    } else if (match[ndx + 1] === '.' || match[ndx] === '.') { // Check if it's a decimal number\n\n      if (match[ndx] !== '.') { // Handle 0.5 and .5\n        v = assign(match[ndx++], s);\n      }\n      ndx++;\n\n      // Check for decimal places\n      if (ndx + 1 === match.length || match[ndx + 1] === '(' && match[ndx + 3] === ')' || match[ndx + 1] === \"'\" && match[ndx + 3] === \"'\") {\n        w = assign(match[ndx], s);\n        y = C_TEN ** BigInt(match[ndx].length);\n        ndx++;\n      }\n\n      // Check for repeating places\n      if (match[ndx] === '(' && match[ndx + 2] === ')' || match[ndx] === \"'\" && match[ndx + 2] === \"'\") {\n        x = assign(match[ndx + 1], s);\n        z = C_TEN ** BigInt(match[ndx + 1].length) - C_ONE;\n        ndx += 3;\n      }\n\n    } else if (match[ndx + 1] === '/' || match[ndx + 1] === ':') { // Check for a simple fraction \"123/456\" or \"123:456\"\n      w = assign(match[ndx], s);\n      y = assign(match[ndx + 2], C_ONE);\n      ndx += 3;\n    } else if (match[ndx + 3] === '/' && match[ndx + 1] === ' ') { // Check for a complex fraction \"123 1/2\"\n      v = assign(match[ndx], s);\n      w = assign(match[ndx + 2], s);\n      y = assign(match[ndx + 4], C_ONE);\n      ndx += 5;\n    }\n\n    if (match.length <= ndx) { // Check for more tokens on the stack\n      d = y * z;\n      s = /* void */\n        n = x + d * v + z * w;\n    } else {\n      throw InvalidParameter();\n    }\n\n  } else if (typeof p1 === \"bigint\") {\n    n = p1;\n    s = p1;\n    d = C_ONE;\n  } else {\n    throw InvalidParameter();\n  }\n\n  if (d === C_ZERO) {\n    throw DivisionByZero();\n  }\n\n  P[\"s\"] = s < C_ZERO ? -C_ONE : C_ONE;\n  P[\"n\"] = n < C_ZERO ? -n : n;\n  P[\"d\"] = d < C_ZERO ? -d : d;\n};\n\nfunction modpow(b, e, m) {\n\n  let r = C_ONE;\n  for (; e > C_ZERO; b = (b * b) % m, e >>= C_ONE) {\n\n    if (e & C_ONE) {\n      r = (r * b) % m;\n    }\n  }\n  return r;\n}\n\nfunction cycleLen(n, d) {\n\n  for (; d % C_TWO === C_ZERO;\n    d /= C_TWO) {\n  }\n\n  for (; d % C_FIVE === C_ZERO;\n    d /= C_FIVE) {\n  }\n\n  if (d === C_ONE) // Catch non-cyclic numbers\n    return C_ZERO;\n\n  // If we would like to compute really large numbers quicker, we could make use of Fermat's little theorem:\n  // 10^(d-1) % d == 1\n  // However, we don't need such large numbers and MAX_CYCLE_LEN should be the capstone,\n  // as we want to translate the numbers to strings.\n\n  let rem = C_TEN % d;\n  let t = 1;\n\n  for (; rem !== C_ONE; t++) {\n    rem = rem * C_TEN % d;\n\n    if (t > MAX_CYCLE_LEN)\n      return C_ZERO; // Returning 0 here means that we don't print it as a cyclic number. It's likely that the answer is `d-1`\n  }\n  return BigInt(t);\n}\n\nfunction cycleStart(n, d, len) {\n\n  let rem1 = C_ONE;\n  let rem2 = modpow(C_TEN, len, d);\n\n  for (let t = 0; t < 300; t++) { // s < ~log10(Number.MAX_VALUE)\n    // Solve 10^s == 10^(s+t) (mod d)\n\n    if (rem1 === rem2)\n      return BigInt(t);\n\n    rem1 = rem1 * C_TEN % d;\n    rem2 = rem2 * C_TEN % d;\n  }\n  return 0;\n}\n\nfunction gcd(a, b) {\n\n  if (!a)\n    return b;\n  if (!b)\n    return a;\n\n  while (1) {\n    a %= b;\n    if (!a)\n      return b;\n    b %= a;\n    if (!b)\n      return a;\n  }\n}\n\n/**\n * Module constructor\n *\n * @constructor\n * @param {number|Fraction=} a\n * @param {number=} b\n */\nfunction Fraction(a, b) {\n\n  parse(a, b);\n\n  if (this instanceof Fraction) {\n    a = gcd(P[\"d\"], P[\"n\"]); // Abuse a\n    this[\"s\"] = P[\"s\"];\n    this[\"n\"] = P[\"n\"] / a;\n    this[\"d\"] = P[\"d\"] / a;\n  } else {\n    return newFraction(P['s'] * P['n'], P['d']);\n  }\n}\n\nvar DivisionByZero = function () { return new Error(\"Division by Zero\"); };\nvar InvalidParameter = function () { return new Error(\"Invalid argument\"); };\nvar NonIntegerParameter = function () { return new Error(\"Parameters must be integer\"); };\n\nFraction.prototype = {\n\n  \"s\": C_ONE,\n  \"n\": C_ZERO,\n  \"d\": C_ONE,\n\n  /**\n   * Calculates the absolute value\n   *\n   * Ex: new Fraction(-4).abs() => 4\n   **/\n  \"abs\": function () {\n\n    return newFraction(this[\"n\"], this[\"d\"]);\n  },\n\n  /**\n   * Inverts the sign of the current fraction\n   *\n   * Ex: new Fraction(-4).neg() => 4\n   **/\n  \"neg\": function () {\n\n    return newFraction(-this[\"s\"] * this[\"n\"], this[\"d\"]);\n  },\n\n  /**\n   * Adds two rational numbers\n   *\n   * Ex: new Fraction({n: 2, d: 3}).add(\"14.9\") => 467 / 30\n   **/\n  \"add\": function (a, b) {\n\n    parse(a, b);\n    return newFraction(\n      this[\"s\"] * this[\"n\"] * P[\"d\"] + P[\"s\"] * this[\"d\"] * P[\"n\"],\n      this[\"d\"] * P[\"d\"]\n    );\n  },\n\n  /**\n   * Subtracts two rational numbers\n   *\n   * Ex: new Fraction({n: 2, d: 3}).add(\"14.9\") => -427 / 30\n   **/\n  \"sub\": function (a, b) {\n\n    parse(a, b);\n    return newFraction(\n      this[\"s\"] * this[\"n\"] * P[\"d\"] - P[\"s\"] * this[\"d\"] * P[\"n\"],\n      this[\"d\"] * P[\"d\"]\n    );\n  },\n\n  /**\n   * Multiplies two rational numbers\n   *\n   * Ex: new Fraction(\"-17.(345)\").mul(3) => 5776 / 111\n   **/\n  \"mul\": function (a, b) {\n\n    parse(a, b);\n    return newFraction(\n      this[\"s\"] * P[\"s\"] * this[\"n\"] * P[\"n\"],\n      this[\"d\"] * P[\"d\"]\n    );\n  },\n\n  /**\n   * Divides two rational numbers\n   *\n   * Ex: new Fraction(\"-17.(345)\").inverse().div(3)\n   **/\n  \"div\": function (a, b) {\n\n    parse(a, b);\n    return newFraction(\n      this[\"s\"] * P[\"s\"] * this[\"n\"] * P[\"d\"],\n      this[\"d\"] * P[\"n\"]\n    );\n  },\n\n  /**\n   * Clones the actual object\n   *\n   * Ex: new Fraction(\"-17.(345)\").clone()\n   **/\n  \"clone\": function () {\n    return newFraction(this['s'] * this['n'], this['d']);\n  },\n\n  /**\n   * Calculates the modulo of two rational numbers - a more precise fmod\n   *\n   * Ex: new Fraction('4.(3)').mod([7, 8]) => (13/3) % (7/8) = (5/6)\n   * Ex: new Fraction(20, 10).mod().equals(0) ? \"is Integer\"\n   **/\n  \"mod\": function (a, b) {\n\n    if (a === undefined) {\n      return newFraction(this[\"s\"] * this[\"n\"] % this[\"d\"], C_ONE);\n    }\n\n    parse(a, b);\n    if (C_ZERO === P[\"n\"] * this[\"d\"]) {\n      throw DivisionByZero();\n    }\n\n    /*\n     * First silly attempt, kinda slow\n     *\n     return that[\"sub\"]({\n     \"n\": num[\"n\"] * Math.floor((this.n / this.d) / (num.n / num.d)),\n     \"d\": num[\"d\"],\n     \"s\": this[\"s\"]\n     });*/\n\n    /*\n     * New attempt: a1 / b1 = a2 / b2 * q + r\n     * => b2 * a1 = a2 * b1 * q + b1 * b2 * r\n     * => (b2 * a1 % a2 * b1) / (b1 * b2)\n     */\n    return newFraction(\n      this[\"s\"] * (P[\"d\"] * this[\"n\"]) % (P[\"n\"] * this[\"d\"]),\n      P[\"d\"] * this[\"d\"]\n    );\n  },\n\n  /**\n   * Calculates the fractional gcd of two rational numbers\n   *\n   * Ex: new Fraction(5,8).gcd(3,7) => 1/56\n   */\n  \"gcd\": function (a, b) {\n\n    parse(a, b);\n\n    // gcd(a / b, c / d) = gcd(a, c) / lcm(b, d)\n\n    return newFraction(gcd(P[\"n\"], this[\"n\"]) * gcd(P[\"d\"], this[\"d\"]), P[\"d\"] * this[\"d\"]);\n  },\n\n  /**\n   * Calculates the fractional lcm of two rational numbers\n   *\n   * Ex: new Fraction(5,8).lcm(3,7) => 15\n   */\n  \"lcm\": function (a, b) {\n\n    parse(a, b);\n\n    // lcm(a / b, c / d) = lcm(a, c) / gcd(b, d)\n\n    if (P[\"n\"] === C_ZERO && this[\"n\"] === C_ZERO) {\n      return newFraction(C_ZERO, C_ONE);\n    }\n    return newFraction(P[\"n\"] * this[\"n\"], gcd(P[\"n\"], this[\"n\"]) * gcd(P[\"d\"], this[\"d\"]));\n  },\n\n  /**\n   * Gets the inverse of the fraction, means numerator and denominator are exchanged\n   *\n   * Ex: new Fraction([-3, 4]).inverse() => -4 / 3\n   **/\n  \"inverse\": function () {\n    return newFraction(this[\"s\"] * this[\"d\"], this[\"n\"]);\n  },\n\n  /**\n   * Calculates the fraction to some integer exponent\n   *\n   * Ex: new Fraction(-1,2).pow(-3) => -8\n   */\n  \"pow\": function (a, b) {\n\n    parse(a, b);\n\n    // Trivial case when exp is an integer\n\n    if (P['d'] === C_ONE) {\n\n      if (P['s'] < C_ZERO) {\n        return newFraction((this['s'] * this[\"d\"]) ** P['n'], this[\"n\"] ** P['n']);\n      } else {\n        return newFraction((this['s'] * this[\"n\"]) ** P['n'], this[\"d\"] ** P['n']);\n      }\n    }\n\n    // Negative roots become complex\n    //     (-a/b)^(c/d) = x\n    // ⇔ (-1)^(c/d) * (a/b)^(c/d) = x\n    // ⇔ (cos(pi) + i*sin(pi))^(c/d) * (a/b)^(c/d) = x\n    // ⇔ (cos(c*pi/d) + i*sin(c*pi/d)) * (a/b)^(c/d) = x       # DeMoivre's formula\n    // From which follows that only for c=0 the root is non-complex\n    if (this['s'] < C_ZERO) return null;\n\n    // Now prime factor n and d\n    let N = factorize(this['n']);\n    let D = factorize(this['d']);\n\n    // Exponentiate and take root for n and d individually\n    let n = C_ONE;\n    let d = C_ONE;\n    for (let k in N) {\n      if (k === '1') continue;\n      if (k === '0') {\n        n = C_ZERO;\n        break;\n      }\n      N[k] *= P['n'];\n\n      if (N[k] % P['d'] === C_ZERO) {\n        N[k] /= P['d'];\n      } else return null;\n      n *= BigInt(k) ** N[k];\n    }\n\n    for (let k in D) {\n      if (k === '1') continue;\n      D[k] *= P['n'];\n\n      if (D[k] % P['d'] === C_ZERO) {\n        D[k] /= P['d'];\n      } else return null;\n      d *= BigInt(k) ** D[k];\n    }\n\n    if (P['s'] < C_ZERO) {\n      return newFraction(d, n);\n    }\n    return newFraction(n, d);\n  },\n\n  /**\n   * Calculates the logarithm of a fraction to a given rational base\n   *\n   * Ex: new Fraction(27, 8).log(9, 4) => 3/2\n   */\n  \"log\": function (a, b) {\n\n    parse(a, b);\n\n    if (this['s'] <= C_ZERO || P['s'] <= C_ZERO) return null;\n\n    const allPrimes = {};\n\n    const baseFactors = factorize(P['n']);\n    const T1 = factorize(P['d']);\n\n    const numberFactors = factorize(this['n']);\n    const T2 = factorize(this['d']);\n\n    for (const prime in T1) {\n      baseFactors[prime] = (baseFactors[prime] || C_ZERO) - T1[prime];\n    }\n    for (const prime in T2) {\n      numberFactors[prime] = (numberFactors[prime] || C_ZERO) - T2[prime];\n    }\n\n    for (const prime in baseFactors) {\n      if (prime === '1') continue;\n      allPrimes[prime] = true;\n    }\n    for (const prime in numberFactors) {\n      if (prime === '1') continue;\n      allPrimes[prime] = true;\n    }\n\n    let retN = null;\n    let retD = null;\n\n    // Iterate over all unique primes to determine if a consistent ratio exists\n    for (const prime in allPrimes) {\n\n      const baseExponent = baseFactors[prime] || C_ZERO;\n      const numberExponent = numberFactors[prime] || C_ZERO;\n\n      if (baseExponent === C_ZERO) {\n        if (numberExponent !== C_ZERO) {\n          return null; // Logarithm cannot be expressed as a rational number\n        }\n        continue; // Skip this prime since both exponents are zero\n      }\n\n      // Calculate the ratio of exponents for this prime\n      let curN = numberExponent;\n      let curD = baseExponent;\n\n      // Simplify the current ratio\n      const gcdValue = gcd(curN, curD);\n      curN /= gcdValue;\n      curD /= gcdValue;\n\n      // Check if this is the first ratio; otherwise, ensure ratios are consistent\n      if (retN === null && retD === null) {\n        retN = curN;\n        retD = curD;\n      } else if (curN * retD !== retN * curD) {\n        return null; // Ratios do not match, logarithm cannot be rational\n      }\n    }\n\n    return retN !== null && retD !== null\n      ? newFraction(retN, retD)\n      : null;\n  },\n\n  /**\n   * Check if two rational numbers are the same\n   *\n   * Ex: new Fraction(19.6).equals([98, 5]);\n   **/\n  \"equals\": function (a, b) {\n\n    parse(a, b);\n    return this[\"s\"] * this[\"n\"] * P[\"d\"] === P[\"s\"] * P[\"n\"] * this[\"d\"];\n  },\n\n  /**\n   * Check if this rational number is less than another\n   *\n   * Ex: new Fraction(19.6).lt([98, 5]);\n   **/\n  \"lt\": function (a, b) {\n\n    parse(a, b);\n    return this[\"s\"] * this[\"n\"] * P[\"d\"] < P[\"s\"] * P[\"n\"] * this[\"d\"];\n  },\n\n  /**\n   * Check if this rational number is less than or equal another\n   *\n   * Ex: new Fraction(19.6).lt([98, 5]);\n   **/\n  \"lte\": function (a, b) {\n\n    parse(a, b);\n    return this[\"s\"] * this[\"n\"] * P[\"d\"] <= P[\"s\"] * P[\"n\"] * this[\"d\"];\n  },\n\n  /**\n   * Check if this rational number is greater than another\n   *\n   * Ex: new Fraction(19.6).lt([98, 5]);\n   **/\n  \"gt\": function (a, b) {\n\n    parse(a, b);\n    return this[\"s\"] * this[\"n\"] * P[\"d\"] > P[\"s\"] * P[\"n\"] * this[\"d\"];\n  },\n\n  /**\n   * Check if this rational number is greater than or equal another\n   *\n   * Ex: new Fraction(19.6).lt([98, 5]);\n   **/\n  \"gte\": function (a, b) {\n\n    parse(a, b);\n    return this[\"s\"] * this[\"n\"] * P[\"d\"] >= P[\"s\"] * P[\"n\"] * this[\"d\"];\n  },\n\n  /**\n   * Compare two rational numbers\n   * < 0 iff this < that\n   * > 0 iff this > that\n   * = 0 iff this = that\n   *\n   * Ex: new Fraction(19.6).compare([98, 5]);\n   **/\n  \"compare\": function (a, b) {\n\n    parse(a, b);\n    let t = this[\"s\"] * this[\"n\"] * P[\"d\"] - P[\"s\"] * P[\"n\"] * this[\"d\"];\n\n    return (C_ZERO < t) - (t < C_ZERO);\n  },\n\n  /**\n   * Calculates the ceil of a rational number\n   *\n   * Ex: new Fraction('4.(3)').ceil() => (5 / 1)\n   **/\n  \"ceil\": function (places) {\n\n    places = C_TEN ** BigInt(places || 0);\n\n    return newFraction(trunc(this[\"s\"] * places * this[\"n\"] / this[\"d\"]) +\n      (places * this[\"n\"] % this[\"d\"] > C_ZERO && this[\"s\"] >= C_ZERO ? C_ONE : C_ZERO),\n      places);\n  },\n\n  /**\n   * Calculates the floor of a rational number\n   *\n   * Ex: new Fraction('4.(3)').floor() => (4 / 1)\n   **/\n  \"floor\": function (places) {\n\n    places = C_TEN ** BigInt(places || 0);\n\n    return newFraction(trunc(this[\"s\"] * places * this[\"n\"] / this[\"d\"]) -\n      (places * this[\"n\"] % this[\"d\"] > C_ZERO && this[\"s\"] < C_ZERO ? C_ONE : C_ZERO),\n      places);\n  },\n\n  /**\n   * Rounds a rational numbers\n   *\n   * Ex: new Fraction('4.(3)').round() => (4 / 1)\n   **/\n  \"round\": function (places) {\n\n    places = C_TEN ** BigInt(places || 0);\n\n    /* Derivation:\n\n    s >= 0:\n      round(n / d) = trunc(n / d) + (n % d) / d >= 0.5 ? 1 : 0\n                   = trunc(n / d) + 2(n % d) >= d ? 1 : 0\n    s < 0:\n      round(n / d) =-trunc(n / d) - (n % d) / d > 0.5 ? 1 : 0\n                   =-trunc(n / d) - 2(n % d) > d ? 1 : 0\n\n    =>:\n\n    round(s * n / d) = s * trunc(n / d) + s * (C + 2(n % d) > d ? 1 : 0)\n        where C = s >= 0 ? 1 : 0, to fix the >= for the positve case.\n    */\n\n    return newFraction(trunc(this[\"s\"] * places * this[\"n\"] / this[\"d\"]) +\n      this[\"s\"] * ((this[\"s\"] >= C_ZERO ? C_ONE : C_ZERO) + C_TWO * (places * this[\"n\"] % this[\"d\"]) > this[\"d\"] ? C_ONE : C_ZERO),\n      places);\n  },\n\n  /**\n    * Rounds a rational number to a multiple of another rational number\n    *\n    * Ex: new Fraction('0.9').roundTo(\"1/8\") => 7 / 8\n    **/\n  \"roundTo\": function (a, b) {\n\n    /*\n    k * x/y ≤ a/b < (k+1) * x/y\n    ⇔ k ≤ a/b / (x/y) < (k+1)\n    ⇔ k = floor(a/b * y/x)\n    ⇔ k = floor((a * y) / (b * x))\n    */\n\n    parse(a, b);\n\n    const n = this['n'] * P['d'];\n    const d = this['d'] * P['n'];\n    const r = n % d;\n\n    // round(n / d) = trunc(n / d) + 2(n % d) >= d ? 1 : 0\n    let k = trunc(n / d);\n    if (r + r >= d) {\n      k++;\n    }\n    return newFraction(this['s'] * k * P['n'], P['d']);\n  },\n\n  /**\n   * Check if two rational numbers are divisible\n   *\n   * Ex: new Fraction(19.6).divisible(1.5);\n   */\n  \"divisible\": function (a, b) {\n\n    parse(a, b);\n    return !(!(P[\"n\"] * this[\"d\"]) || ((this[\"n\"] * P[\"d\"]) % (P[\"n\"] * this[\"d\"])));\n  },\n\n  /**\n   * Returns a decimal representation of the fraction\n   *\n   * Ex: new Fraction(\"100.'91823'\").valueOf() => 100.91823918239183\n   **/\n  'valueOf': function () {\n    // Best we can do so far\n    return Number(this[\"s\"] * this[\"n\"]) / Number(this[\"d\"]);\n  },\n\n  /**\n   * Creates a string representation of a fraction with all digits\n   *\n   * Ex: new Fraction(\"100.'91823'\").toString() => \"100.(91823)\"\n   **/\n  'toString': function (dec) {\n\n    let N = this[\"n\"];\n    let D = this[\"d\"];\n\n    dec = dec || 15; // 15 = decimal places when no repetition\n\n    let cycLen = cycleLen(N, D); // Cycle length\n    let cycOff = cycleStart(N, D, cycLen); // Cycle start\n\n    let str = this['s'] < C_ZERO ? \"-\" : \"\";\n\n    // Append integer part\n    str += trunc(N / D);\n\n    N %= D;\n    N *= C_TEN;\n\n    if (N)\n      str += \".\";\n\n    if (cycLen) {\n\n      for (let i = cycOff; i--;) {\n        str += trunc(N / D);\n        N %= D;\n        N *= C_TEN;\n      }\n      str += \"(\";\n      for (let i = cycLen; i--;) {\n        str += trunc(N / D);\n        N %= D;\n        N *= C_TEN;\n      }\n      str += \")\";\n    } else {\n      for (let i = dec; N && i--;) {\n        str += trunc(N / D);\n        N %= D;\n        N *= C_TEN;\n      }\n    }\n    return str;\n  },\n\n  /**\n   * Returns a string-fraction representation of a Fraction object\n   *\n   * Ex: new Fraction(\"1.'3'\").toFraction() => \"4 1/3\"\n   **/\n  'toFraction': function (showMixed) {\n\n    let n = this[\"n\"];\n    let d = this[\"d\"];\n    let str = this['s'] < C_ZERO ? \"-\" : \"\";\n\n    if (d === C_ONE) {\n      str += n;\n    } else {\n      let whole = trunc(n / d);\n      if (showMixed && whole > C_ZERO) {\n        str += whole;\n        str += \" \";\n        n %= d;\n      }\n\n      str += n;\n      str += '/';\n      str += d;\n    }\n    return str;\n  },\n\n  /**\n   * Returns a latex representation of a Fraction object\n   *\n   * Ex: new Fraction(\"1.'3'\").toLatex() => \"\\frac{4}{3}\"\n   **/\n  'toLatex': function (showMixed) {\n\n    let n = this[\"n\"];\n    let d = this[\"d\"];\n    let str = this['s'] < C_ZERO ? \"-\" : \"\";\n\n    if (d === C_ONE) {\n      str += n;\n    } else {\n      let whole = trunc(n / d);\n      if (showMixed && whole > C_ZERO) {\n        str += whole;\n        n %= d;\n      }\n\n      str += \"\\\\frac{\";\n      str += n;\n      str += '}{';\n      str += d;\n      str += '}';\n    }\n    return str;\n  },\n\n  /**\n   * Returns an array of continued fraction elements\n   *\n   * Ex: new Fraction(\"7/8\").toContinued() => [0,1,7]\n   */\n  'toContinued': function () {\n\n    let a = this['n'];\n    let b = this['d'];\n    let res = [];\n\n    do {\n      res.push(trunc(a / b));\n      let t = a % b;\n      a = b;\n      b = t;\n    } while (a !== C_ONE);\n\n    return res;\n  },\n\n  \"simplify\": function (eps) {\n\n    const ieps = BigInt(1 / (eps || 0.001) | 0);\n\n    const thisABS = this['abs']();\n    const cont = thisABS['toContinued']();\n\n    for (let i = 1; i < cont.length; i++) {\n\n      let s = newFraction(cont[i - 1], C_ONE);\n      for (let k = i - 2; k >= 0; k--) {\n        s = s['inverse']()['add'](cont[k]);\n      }\n\n      let t = s['sub'](thisABS);\n      if (t['n'] * ieps < t['d']) { // More robust than Math.abs(t.valueOf()) < eps\n        return s['mul'](this['s']);\n      }\n    }\n    return this;\n  }\n};\nexport {\n  Fraction as default, Fraction\n};\n","import Fraction from 'fraction.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'Fraction';\nvar dependencies = [];\nexport var createFractionClass = /* #__PURE__ */factory(name, dependencies, () => {\n  /**\n   * Attach type information\n   */\n  Object.defineProperty(Fraction, 'name', {\n    value: 'Fraction'\n  });\n  Fraction.prototype.constructor = Fraction;\n  Fraction.prototype.type = 'Fraction';\n  Fraction.prototype.isFraction = true;\n\n  /**\n   * Get a JSON representation of a Fraction containing type information\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"Fraction\", \"n\": \"3\", \"d\": \"8\"}`\n   */\n  Fraction.prototype.toJSON = function () {\n    return {\n      mathjs: 'Fraction',\n      n: String(this.s * this.n),\n      d: String(this.d)\n    };\n  };\n\n  /**\n   * Instantiate a Fraction from a JSON object\n   * @param {Object} json  a JSON object structured as:\n   *                       `{\"mathjs\": \"Fraction\", \"n\": \"3\", \"d\": \"8\"}`\n   * @return {BigNumber}\n   */\n  Fraction.fromJSON = function (json) {\n    return new Fraction(json);\n  };\n  return Fraction;\n}, {\n  isClass: true\n});","import { factory } from '../../utils/factory.js';\nvar name = 'Matrix';\nvar dependencies = [];\nexport var createMatrixClass = /* #__PURE__ */factory(name, dependencies, () => {\n  /**\n   * @constructor Matrix\n   *\n   * A Matrix is a wrapper around an Array. A matrix can hold a multi dimensional\n   * array. A matrix can be constructed as:\n   *\n   *     let matrix = math.matrix(data)\n   *\n   * Matrix contains the functions to resize, get and set values, get the size,\n   * clone the matrix and to convert the matrix to a vector, array, or scalar.\n   * Furthermore, one can iterate over the matrix using map and forEach.\n   * The internal Array of the Matrix can be accessed using the function valueOf.\n   *\n   * Example usage:\n   *\n   *     let matrix = math.matrix([[1, 2], [3, 4]])\n   *     matix.size()              // [2, 2]\n   *     matrix.resize([3, 2], 5)\n   *     matrix.valueOf()          // [[1, 2], [3, 4], [5, 5]]\n   *     matrix.subset([1,2])       // 3 (indexes are zero-based)\n   *\n   */\n  function Matrix() {\n    if (!(this instanceof Matrix)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n  }\n\n  /**\n   * Attach type information\n   */\n  Matrix.prototype.type = 'Matrix';\n  Matrix.prototype.isMatrix = true;\n\n  /**\n   * Get the storage format used by the matrix.\n   *\n   * Usage:\n   *     const format = matrix.storage()   // retrieve storage format\n   *\n   * @return {string}           The storage format.\n   */\n  Matrix.prototype.storage = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke storage on a Matrix interface');\n  };\n\n  /**\n   * Get the datatype of the data stored in the matrix.\n   *\n   * Usage:\n   *     const format = matrix.datatype()    // retrieve matrix datatype\n   *\n   * @return {string}           The datatype.\n   */\n  Matrix.prototype.datatype = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke datatype on a Matrix interface');\n  };\n\n  /**\n   * Create a new Matrix With the type of the current matrix instance\n   * @param {Array | Object} data\n   * @param {string} [datatype]\n   */\n  Matrix.prototype.create = function (data, datatype) {\n    throw new Error('Cannot invoke create on a Matrix interface');\n  };\n\n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     const subset = matrix.subset(index)               // retrieve subset\n   *     const value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @param {Index} index\n   * @param {Array | Matrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n  Matrix.prototype.subset = function (index, replacement, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke subset on a Matrix interface');\n  };\n\n  /**\n   * Get a single element from the matrix.\n   * @param {number[]} index   Zero-based index\n   * @return {*} value\n   */\n  Matrix.prototype.get = function (index) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke get on a Matrix interface');\n  };\n\n  /**\n   * Replace a single element in the matrix.\n   * @param {number[]} index   Zero-based index\n   * @param {*} value\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be left undefined.\n   * @return {Matrix} self\n   */\n  Matrix.prototype.set = function (index, value, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke set on a Matrix interface');\n  };\n\n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n  Matrix.prototype.resize = function (size, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke resize on a Matrix interface');\n  };\n\n  /**\n   * Reshape the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (reshape in place).\n   *\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {boolean} [copy]          Return a reshaped copy of the matrix\n   *\n   * @return {Matrix}                 The reshaped matrix\n   */\n  Matrix.prototype.reshape = function (size, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke reshape on a Matrix interface');\n  };\n\n  /**\n   * Create a clone of the matrix\n   * @return {Matrix} clone\n   */\n  Matrix.prototype.clone = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke clone on a Matrix interface');\n  };\n\n  /**\n   * Retrieve the size of the matrix.\n   * @returns {number[]} size\n   */\n  Matrix.prototype.size = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke size on a Matrix interface');\n  };\n\n  /**\n   * Create a new matrix with the results of the callback function executed on\n   * each entry of the matrix.\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   *\n   * @return {Matrix} matrix\n   */\n  Matrix.prototype.map = function (callback, skipZeros) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke map on a Matrix interface');\n  };\n\n  /**\n   * Execute a callback function on each entry of the matrix.\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   */\n  Matrix.prototype.forEach = function (callback) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke forEach on a Matrix interface');\n  };\n\n  /**\n   * Iterate over the matrix elements\n   * @return {Iterable<{ value, index: number[] }>}\n   */\n  Matrix.prototype[Symbol.iterator] = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot iterate a Matrix interface');\n  };\n\n  /**\n   * Create an Array with a copy of the data of the Matrix\n   * @returns {Array} array\n   */\n  Matrix.prototype.toArray = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke toArray on a Matrix interface');\n  };\n\n  /**\n   * Get the primitive value of the Matrix: a multidimensional array\n   * @returns {Array} array\n   */\n  Matrix.prototype.valueOf = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke valueOf on a Matrix interface');\n  };\n\n  /**\n   * Get a string representation of the matrix, with optional formatting options.\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n  Matrix.prototype.format = function (options) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke format on a Matrix interface');\n  };\n\n  /**\n   * Get a string representation of the matrix\n   * @returns {string} str\n   */\n  Matrix.prototype.toString = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke toString on a Matrix interface');\n  };\n  return Matrix;\n}, {\n  isClass: true\n});","import { isBigNumber, isNumber } from '../is.js';\nimport { isInteger, normalizeFormatOptions } from '../number.js';\n\n/**\n * Formats a BigNumber in a given base\n * @param {BigNumber} n\n * @param {number} base\n * @param {number} size\n * @returns {string}\n */\nfunction formatBigNumberToBase(n, base, size) {\n  var BigNumberCtor = n.constructor;\n  var big2 = new BigNumberCtor(2);\n  var suffix = '';\n  if (size) {\n    if (size < 1) {\n      throw new Error('size must be in greater than 0');\n    }\n    if (!isInteger(size)) {\n      throw new Error('size must be an integer');\n    }\n    if (n.greaterThan(big2.pow(size - 1).sub(1)) || n.lessThan(big2.pow(size - 1).mul(-1))) {\n      throw new Error(\"Value must be in range [-2^\".concat(size - 1, \", 2^\").concat(size - 1, \"-1]\"));\n    }\n    if (!n.isInteger()) {\n      throw new Error('Value must be an integer');\n    }\n    if (n.lessThan(0)) {\n      n = n.add(big2.pow(size));\n    }\n    suffix = \"i\".concat(size);\n  }\n  switch (base) {\n    case 2:\n      return \"\".concat(n.toBinary()).concat(suffix);\n    case 8:\n      return \"\".concat(n.toOctal()).concat(suffix);\n    case 16:\n      return \"\".concat(n.toHexadecimal()).concat(suffix);\n    default:\n      throw new Error(\"Base \".concat(base, \" not supported \"));\n  }\n}\n\n/**\n * Convert a BigNumber to a formatted string representation.\n *\n * Syntax:\n *\n *    format(value)\n *    format(value, options)\n *    format(value, precision)\n *    format(value, fn)\n *\n * Where:\n *\n *    {number} value   The value to be formatted\n *    {Object} options An object with formatting options. Available options:\n *                     {string} notation\n *                         Number notation. Choose from:\n *                         'fixed'          Always use regular number notation.\n *                                          For example '123.40' and '14000000'\n *                         'exponential'    Always use exponential notation.\n *                                          For example '1.234e+2' and '1.4e+7'\n *                         'auto' (default) Regular number notation for numbers\n *                                          having an absolute value between\n *                                          `lower` and `upper` bounds, and uses\n *                                          exponential notation elsewhere.\n *                                          Lower bound is included, upper bound\n *                                          is excluded.\n *                                          For example '123.4' and '1.4e7'.\n *                         'bin', 'oct, or\n *                         'hex'            Format the number using binary, octal,\n *                                          or hexadecimal notation.\n *                                          For example '0b1101' and '0x10fe'.\n *                     {number} wordSize    The word size in bits to use for formatting\n *                                          in binary, octal, or hexadecimal notation.\n *                                          To be used only with 'bin', 'oct', or 'hex'\n *                                          values for 'notation' option. When this option\n *                                          is defined the value is formatted as a signed\n *                                          twos complement integer of the given word size\n *                                          and the size suffix is appended to the output.\n *                                          For example\n *                                          format(-1, {notation: 'hex', wordSize: 8}) === '0xffi8'.\n *                                          Default value is undefined.\n *                     {number} precision   A number between 0 and 16 to round\n *                                          the digits of the number.\n *                                          In case of notations 'exponential',\n *                                          'engineering', and 'auto',\n *                                          `precision` defines the total\n *                                          number of significant digits returned.\n *                                          In case of notation 'fixed',\n *                                          `precision` defines the number of\n *                                          significant digits after the decimal\n *                                          point.\n *                                          `precision` is undefined by default.\n *                     {number} lowerExp    Exponent determining the lower boundary\n *                                          for formatting a value with an exponent\n *                                          when `notation='auto`.\n *                                          Default value is `-3`.\n *                     {number} upperExp    Exponent determining the upper boundary\n *                                          for formatting a value with an exponent\n *                                          when `notation='auto`.\n *                                          Default value is `5`.\n *    {Function} fn    A custom formatting function. Can be used to override the\n *                     built-in notations. Function `fn` is called with `value` as\n *                     parameter and must return a string. Is useful for example to\n *                     format all values inside a matrix in a particular way.\n *\n * Examples:\n *\n *    format(6.4)                                        // '6.4'\n *    format(1240000)                                    // '1.24e6'\n *    format(1/3)                                        // '0.3333333333333333'\n *    format(1/3, 3)                                     // '0.333'\n *    format(21385, 2)                                   // '21000'\n *    format(12e8, {notation: 'fixed'})                  // returns '1200000000'\n *    format(2.3,    {notation: 'fixed', precision: 4})  // returns '2.3000'\n *    format(52.8,   {notation: 'exponential'})          // returns '5.28e+1'\n *    format(12400,  {notation: 'engineering'})          // returns '12.400e+3'\n *\n * @param {BigNumber} value\n * @param {Object | Function | number | BigNumber} [options]\n * @return {string} str The formatted value\n */\nexport function format(value, options) {\n  if (typeof options === 'function') {\n    // handle format(value, fn)\n    return options(value);\n  }\n\n  // handle special cases\n  if (!value.isFinite()) {\n    return value.isNaN() ? 'NaN' : value.gt(0) ? 'Infinity' : '-Infinity';\n  }\n  var {\n    notation,\n    precision,\n    wordSize\n  } = normalizeFormatOptions(options);\n\n  // handle the various notations\n  switch (notation) {\n    case 'fixed':\n      return toFixed(value, precision);\n    case 'exponential':\n      return toExponential(value, precision);\n    case 'engineering':\n      return toEngineering(value, precision);\n    case 'bin':\n      return formatBigNumberToBase(value, 2, wordSize);\n    case 'oct':\n      return formatBigNumberToBase(value, 8, wordSize);\n    case 'hex':\n      return formatBigNumberToBase(value, 16, wordSize);\n    case 'auto':\n      {\n        // determine lower and upper bound for exponential notation.\n        // TODO: implement support for upper and lower to be BigNumbers themselves\n        var lowerExp = _toNumberOrDefault(options === null || options === void 0 ? void 0 : options.lowerExp, -3);\n        var upperExp = _toNumberOrDefault(options === null || options === void 0 ? void 0 : options.upperExp, 5);\n\n        // handle special case zero\n        if (value.isZero()) return '0';\n\n        // determine whether or not to output exponential notation\n        var str;\n        var rounded = value.toSignificantDigits(precision);\n        var exp = rounded.e;\n        if (exp >= lowerExp && exp < upperExp) {\n          // normal number notation\n          str = rounded.toFixed();\n        } else {\n          // exponential notation\n          str = toExponential(value, precision);\n        }\n\n        // remove trailing zeros after the decimal point\n        return str.replace(/((\\.\\d*?)(0+))($|e)/, function () {\n          var digits = arguments[2];\n          var e = arguments[4];\n          return digits !== '.' ? digits + e : e;\n        });\n      }\n    default:\n      throw new Error('Unknown notation \"' + notation + '\". ' + 'Choose \"auto\", \"exponential\", \"fixed\", \"bin\", \"oct\", or \"hex.');\n  }\n}\n\n/**\n * Format a BigNumber in engineering notation. Like '1.23e+6', '2.3e+0', '3.500e-3'\n * @param {BigNumber} value\n * @param {number} [precision]        Optional number of significant figures to return.\n */\nexport function toEngineering(value, precision) {\n  // find nearest lower multiple of 3 for exponent\n  var e = value.e;\n  var newExp = e % 3 === 0 ? e : e < 0 ? e - 3 - e % 3 : e - e % 3;\n\n  // find difference in exponents, and calculate the value without exponent\n  var valueWithoutExp = value.mul(Math.pow(10, -newExp));\n  var valueStr = valueWithoutExp.toPrecision(precision);\n  if (valueStr.includes('e')) {\n    var BigNumber = value.constructor;\n    valueStr = new BigNumber(valueStr).toFixed();\n  }\n  return valueStr + 'e' + (e >= 0 ? '+' : '') + newExp.toString();\n}\n\n/**\n * Format a number in exponential notation. Like '1.23e+5', '2.3e+0', '3.500e-3'\n * @param {BigNumber} value\n * @param {number} [precision]  Number of digits in formatted output.\n *                              If not provided, the maximum available digits\n *                              is used.\n * @returns {string} str\n */\nexport function toExponential(value, precision) {\n  if (precision !== undefined) {\n    return value.toExponential(precision - 1); // Note the offset of one\n  } else {\n    return value.toExponential();\n  }\n}\n\n/**\n * Format a number with fixed notation.\n * @param {BigNumber} value\n * @param {number} [precision=undefined] Optional number of decimals after the\n *                                       decimal point. Undefined by default.\n */\nexport function toFixed(value, precision) {\n  return value.toFixed(precision);\n}\nfunction _toNumberOrDefault(value, defaultValue) {\n  if (isNumber(value)) {\n    return value;\n  } else if (isBigNumber(value)) {\n    return value.toNumber();\n  } else {\n    return defaultValue;\n  }\n}","import { isBigNumber, isString, typeOf } from './is.js';\nimport { format as formatNumber } from './number.js';\nimport { format as formatBigNumber } from './bignumber/formatter.js';\n\n/**\n * Check if a text ends with a certain string.\n * @param {string} text\n * @param {string} search\n */\nexport function endsWith(text, search) {\n  var start = text.length - search.length;\n  var end = text.length;\n  return text.substring(start, end) === search;\n}\n\n/**\n * Format a value of any type into a string.\n *\n * Usage:\n *     math.format(value)\n *     math.format(value, precision)\n *     math.format(value, options)\n *\n * When value is a function:\n *\n * - When the function has a property `syntax`, it returns this\n *   syntax description.\n * - In other cases, a string `'function'` is returned.\n *\n * When `value` is an Object:\n *\n * - When the object contains a property `format` being a function, this\n *   function is invoked as `value.format(options)` and the result is returned.\n * - When the object has its own `toString` method, this method is invoked\n *   and the result is returned.\n * - In other cases the function will loop over all object properties and\n *   return JSON object notation like '{\"a\": 2, \"b\": 3}'.\n *\n * Example usage:\n *     math.format(2/7)                // '0.2857142857142857'\n *     math.format(math.pi, 3)         // '3.14'\n *     math.format(new Complex(2, 3))  // '2 + 3i'\n *     math.format('hello')            // '\"hello\"'\n *\n * @param {*} value             Value to be stringified\n * @param {Object | number | Function} [options]\n *     Formatting options. See src/utils/number.js:format for a\n *     description of the available options controlling number output.\n *     This generic \"format\" also supports the option property `truncate: NN`\n *     giving the maximum number NN of characters to return (if there would\n *     have been more, they are deleted and replaced by an ellipsis).\n * @return {string} str\n */\nexport function format(value, options) {\n  var result = _format(value, options);\n  if (options && typeof options === 'object' && 'truncate' in options && result.length > options.truncate) {\n    return result.substring(0, options.truncate - 3) + '...';\n  }\n  return result;\n}\nfunction _format(value, options) {\n  if (typeof value === 'number') {\n    return formatNumber(value, options);\n  }\n  if (isBigNumber(value)) {\n    return formatBigNumber(value, options);\n  }\n\n  // note: we use unsafe duck-typing here to check for Fractions, this is\n  // ok here since we're only invoking toString or concatenating its values\n  if (looksLikeFraction(value)) {\n    if (!options || options.fraction !== 'decimal') {\n      // output as ratio, like '1/3'\n      return \"\".concat(value.s * value.n, \"/\").concat(value.d);\n    } else {\n      // output as decimal, like '0.(3)'\n      return value.toString();\n    }\n  }\n  if (Array.isArray(value)) {\n    return formatArray(value, options);\n  }\n  if (isString(value)) {\n    return stringify(value);\n  }\n  if (typeof value === 'function') {\n    return value.syntax ? String(value.syntax) : 'function';\n  }\n  if (value && typeof value === 'object') {\n    if (typeof value.format === 'function') {\n      return value.format(options);\n    } else if (value && value.toString(options) !== {}.toString()) {\n      // this object has a non-native toString method, use that one\n      return value.toString(options);\n    } else {\n      var entries = Object.keys(value).map(key => {\n        return stringify(key) + ': ' + format(value[key], options);\n      });\n      return '{' + entries.join(', ') + '}';\n    }\n  }\n  return String(value);\n}\n\n/**\n * Stringify a value into a string enclosed in double quotes.\n * Unescaped double quotes and backslashes inside the value are escaped.\n * @param {*} value\n * @return {string}\n */\nexport function stringify(value) {\n  var text = String(value);\n  var escaped = '';\n  var i = 0;\n  while (i < text.length) {\n    var c = text.charAt(i);\n    escaped += c in controlCharacters ? controlCharacters[c] : c;\n    i++;\n  }\n  return '\"' + escaped + '\"';\n}\nvar controlCharacters = {\n  '\"': '\\\\\"',\n  '\\\\': '\\\\\\\\',\n  '\\b': '\\\\b',\n  '\\f': '\\\\f',\n  '\\n': '\\\\n',\n  '\\r': '\\\\r',\n  '\\t': '\\\\t'\n};\n\n/**\n * Escape special HTML characters\n * @param {*} value\n * @return {string}\n */\nexport function escape(value) {\n  var text = String(value);\n  text = text.replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  return text;\n}\n\n/**\n * Recursively format an n-dimensional matrix\n * Example output: \"[[1, 2], [3, 4]]\"\n * @param {Array} array\n * @param {Object | number | Function} [options]  Formatting options. See\n *                                                lib/utils/number:format for a\n *                                                description of the available\n *                                                options.\n * @returns {string} str\n */\nfunction formatArray(array, options) {\n  if (Array.isArray(array)) {\n    var str = '[';\n    var len = array.length;\n    for (var i = 0; i < len; i++) {\n      if (i !== 0) {\n        str += ', ';\n      }\n      str += formatArray(array[i], options);\n    }\n    str += ']';\n    return str;\n  } else {\n    return format(array, options);\n  }\n}\n\n/**\n * Check whether a value looks like a Fraction (unsafe duck-type check)\n * @param {*} value\n * @return {boolean}\n */\nfunction looksLikeFraction(value) {\n  return value && typeof value === 'object' && typeof value.s === 'bigint' && typeof value.n === 'bigint' && typeof value.d === 'bigint' || false;\n}\n\n/**\n * Compare two strings\n * @param {string} x\n * @param {string} y\n * @returns {number}\n */\nexport function compareText(x, y) {\n  // we don't want to convert numbers to string, only accept string input\n  if (!isString(x)) {\n    throw new TypeError('Unexpected type of argument in function compareText ' + '(expected: string or Array or Matrix, actual: ' + typeOf(x) + ', index: 0)');\n  }\n  if (!isString(y)) {\n    throw new TypeError('Unexpected type of argument in function compareText ' + '(expected: string or Array or Matrix, actual: ' + typeOf(y) + ', index: 1)');\n  }\n  return x === y ? 0 : x > y ? 1 : -1;\n}","/**\n * Create a range error with the message:\n *     'Dimension mismatch (<actual size> != <expected size>)'\n * @param {number | number[]} actual        The actual size\n * @param {number | number[]} expected      The expected size\n * @param {string} [relation='!=']          Optional relation between actual\n *                                          and expected size: '!=', '<', etc.\n * @extends RangeError\n */\nexport function DimensionError(actual, expected, relation) {\n  if (!(this instanceof DimensionError)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n  this.actual = actual;\n  this.expected = expected;\n  this.relation = relation;\n  this.message = 'Dimension mismatch (' + (Array.isArray(actual) ? '[' + actual.join(', ') + ']' : actual) + ' ' + (this.relation || '!=') + ' ' + (Array.isArray(expected) ? '[' + expected.join(', ') + ']' : expected) + ')';\n  this.stack = new Error().stack;\n}\nDimensionError.prototype = new RangeError();\nDimensionError.prototype.constructor = RangeError;\nDimensionError.prototype.name = 'DimensionError';\nDimensionError.prototype.isDimensionError = true;","/**\n * Create a range error with the message:\n *     'Index out of range (index < min)'\n *     'Index out of range (index < max)'\n *\n * @param {number} index     The actual index\n * @param {number} [min=0]   Minimum index (included)\n * @param {number} [max]     Maximum index (excluded)\n * @extends RangeError\n */\nexport function IndexError(index, min, max) {\n  if (!(this instanceof IndexError)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n  this.index = index;\n  if (arguments.length < 3) {\n    this.min = 0;\n    this.max = min;\n  } else {\n    this.min = min;\n    this.max = max;\n  }\n  if (this.min !== undefined && this.index < this.min) {\n    this.message = 'Index out of range (' + this.index + ' < ' + this.min + ')';\n  } else if (this.max !== undefined && this.index >= this.max) {\n    this.message = 'Index out of range (' + this.index + ' > ' + (this.max - 1) + ')';\n  } else {\n    this.message = 'Index out of range (' + this.index + ')';\n  }\n  this.stack = new Error().stack;\n}\nIndexError.prototype = new RangeError();\nIndexError.prototype.constructor = RangeError;\nIndexError.prototype.name = 'IndexError';\nIndexError.prototype.isIndexError = true;","import _extends from \"@babel/runtime/helpers/extends\";\nimport { isInteger } from './number.js';\nimport { isNumber, isBigNumber, isArray, isString } from './is.js';\nimport { format } from './string.js';\nimport { DimensionError } from '../error/DimensionError.js';\nimport { IndexError } from '../error/IndexError.js';\nimport { deepStrictEqual } from './object.js';\n\n/**\n * Calculate the size of a multi dimensional array.\n * This function checks the size of the first entry, it does not validate\n * whether all dimensions match. (use function `validate` for that)\n * @param {Array} x\n * @Return {Number[]} size\n */\nexport function arraySize(x) {\n  var s = [];\n  while (Array.isArray(x)) {\n    s.push(x.length);\n    x = x[0];\n  }\n  return s;\n}\n\n/**\n * Recursively validate whether each element in a multi dimensional array\n * has a size corresponding to the provided size array.\n * @param {Array} array    Array to be validated\n * @param {number[]} size  Array with the size of each dimension\n * @param {number} dim   Current dimension\n * @throws DimensionError\n * @private\n */\nfunction _validate(array, size, dim) {\n  var i;\n  var len = array.length;\n  if (len !== size[dim]) {\n    throw new DimensionError(len, size[dim]);\n  }\n  if (dim < size.length - 1) {\n    // recursively validate each child array\n    var dimNext = dim + 1;\n    for (i = 0; i < len; i++) {\n      var child = array[i];\n      if (!Array.isArray(child)) {\n        throw new DimensionError(size.length - 1, size.length, '<');\n      }\n      _validate(array[i], size, dimNext);\n    }\n  } else {\n    // last dimension. none of the childs may be an array\n    for (i = 0; i < len; i++) {\n      if (Array.isArray(array[i])) {\n        throw new DimensionError(size.length + 1, size.length, '>');\n      }\n    }\n  }\n}\n\n/**\n * Validate whether each element in a multi dimensional array has\n * a size corresponding to the provided size array.\n * @param {Array} array    Array to be validated\n * @param {number[]} size  Array with the size of each dimension\n * @throws DimensionError\n */\nexport function validate(array, size) {\n  var isScalar = size.length === 0;\n  if (isScalar) {\n    // scalar\n    if (Array.isArray(array)) {\n      throw new DimensionError(array.length, 0);\n    }\n  } else {\n    // array\n    _validate(array, size, 0);\n  }\n}\n\n/**\n * Validate whether the source of the index matches the size of the Array\n * @param {Array | Matrix} array    Array to be validated\n * @param {Index} index  Index with the source information to validate\n * @throws DimensionError\n */\nexport function validateIndexSourceSize(value, index) {\n  var valueSize = value.isMatrix ? value._size : arraySize(value);\n  var sourceSize = index._sourceSize;\n  // checks if the source size is not null and matches the valueSize\n  sourceSize.forEach((sourceDim, i) => {\n    if (sourceDim !== null && sourceDim !== valueSize[i]) {\n      throw new DimensionError(sourceDim, valueSize[i]);\n    }\n  });\n}\n\n/**\n * Test whether index is an integer number with index >= 0 and index < length\n * when length is provided\n * @param {number} index    Zero-based index\n * @param {number} [length] Length of the array\n */\nexport function validateIndex(index, length) {\n  if (index !== undefined) {\n    if (!isNumber(index) || !isInteger(index)) {\n      throw new TypeError('Index must be an integer (value: ' + index + ')');\n    }\n    if (index < 0 || typeof length === 'number' && index >= length) {\n      throw new IndexError(index, length);\n    }\n  }\n}\n\n/**\n * Test if and index has empty values\n * @param {number} index    Zero-based index\n */\nexport function isEmptyIndex(index) {\n  for (var i = 0; i < index._dimensions.length; ++i) {\n    var dimension = index._dimensions[i];\n    if (dimension._data && isArray(dimension._data)) {\n      if (dimension._size[0] === 0) {\n        return true;\n      }\n    } else if (dimension.isRange) {\n      if (dimension.start === dimension.end) {\n        return true;\n      }\n    } else if (isString(dimension)) {\n      if (dimension.length === 0) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n/**\n * Resize a multi dimensional array. The resized array is returned.\n * @param {Array | number} array         Array to be resized\n * @param {number[]} size Array with the size of each dimension\n * @param {*} [defaultValue=0]  Value to be filled in in new entries,\n *                              zero by default. Specify for example `null`,\n *                              to clearly see entries that are not explicitly\n *                              set.\n * @return {Array} array         The resized array\n */\nexport function resize(array, size, defaultValue) {\n  // check the type of the arguments\n  if (!Array.isArray(size)) {\n    throw new TypeError('Array expected');\n  }\n  if (size.length === 0) {\n    throw new Error('Resizing to scalar is not supported');\n  }\n\n  // check whether size contains positive integers\n  size.forEach(function (value) {\n    if (!isNumber(value) || !isInteger(value) || value < 0) {\n      throw new TypeError('Invalid size, must contain positive integers ' + '(size: ' + format(size) + ')');\n    }\n  });\n\n  // convert number to an array\n  if (isNumber(array) || isBigNumber(array)) {\n    array = [array];\n  }\n\n  // recursively resize the array\n  var _defaultValue = defaultValue !== undefined ? defaultValue : 0;\n  _resize(array, size, 0, _defaultValue);\n  return array;\n}\n\n/**\n * Recursively resize a multi dimensional array\n * @param {Array} array         Array to be resized\n * @param {number[]} size       Array with the size of each dimension\n * @param {number} dim          Current dimension\n * @param {*} [defaultValue]    Value to be filled in in new entries,\n *                              undefined by default.\n * @private\n */\nfunction _resize(array, size, dim, defaultValue) {\n  var i;\n  var elem;\n  var oldLen = array.length;\n  var newLen = size[dim];\n  var minLen = Math.min(oldLen, newLen);\n\n  // apply new length\n  array.length = newLen;\n  if (dim < size.length - 1) {\n    // non-last dimension\n    var dimNext = dim + 1;\n\n    // resize existing child arrays\n    for (i = 0; i < minLen; i++) {\n      // resize child array\n      elem = array[i];\n      if (!Array.isArray(elem)) {\n        elem = [elem]; // add a dimension\n        array[i] = elem;\n      }\n      _resize(elem, size, dimNext, defaultValue);\n    }\n\n    // create new child arrays\n    for (i = minLen; i < newLen; i++) {\n      // get child array\n      elem = [];\n      array[i] = elem;\n\n      // resize new child array\n      _resize(elem, size, dimNext, defaultValue);\n    }\n  } else {\n    // last dimension\n\n    // remove dimensions of existing values\n    for (i = 0; i < minLen; i++) {\n      while (Array.isArray(array[i])) {\n        array[i] = array[i][0];\n      }\n    }\n\n    // fill new elements with the default value\n    for (i = minLen; i < newLen; i++) {\n      array[i] = defaultValue;\n    }\n  }\n}\n\n/**\n * Re-shape a multi dimensional array to fit the specified dimensions\n * @param {Array} array           Array to be reshaped\n * @param {number[]} sizes        List of sizes for each dimension\n * @returns {Array}               Array whose data has been formatted to fit the\n *                                specified dimensions\n *\n * @throws {DimensionError}       If the product of the new dimension sizes does\n *                                not equal that of the old ones\n */\nexport function reshape(array, sizes) {\n  var flatArray = flatten(array);\n  var currentLength = flatArray.length;\n  if (!Array.isArray(array) || !Array.isArray(sizes)) {\n    throw new TypeError('Array expected');\n  }\n  if (sizes.length === 0) {\n    throw new DimensionError(0, currentLength, '!=');\n  }\n  sizes = processSizesWildcard(sizes, currentLength);\n  var newLength = product(sizes);\n  if (currentLength !== newLength) {\n    throw new DimensionError(newLength, currentLength, '!=');\n  }\n  try {\n    return _reshape(flatArray, sizes);\n  } catch (e) {\n    if (e instanceof DimensionError) {\n      throw new DimensionError(newLength, currentLength, '!=');\n    }\n    throw e;\n  }\n}\n\n/**\n * Replaces the wildcard -1 in the sizes array.\n * @param {number[]} sizes  List of sizes for each dimension. At most on wildcard.\n * @param {number} currentLength  Number of elements in the array.\n * @throws {Error}                If more than one wildcard or unable to replace it.\n * @returns {number[]}      The sizes array with wildcard replaced.\n */\nexport function processSizesWildcard(sizes, currentLength) {\n  var newLength = product(sizes);\n  var processedSizes = sizes.slice();\n  var WILDCARD = -1;\n  var wildCardIndex = sizes.indexOf(WILDCARD);\n  var isMoreThanOneWildcard = sizes.indexOf(WILDCARD, wildCardIndex + 1) >= 0;\n  if (isMoreThanOneWildcard) {\n    throw new Error('More than one wildcard in sizes');\n  }\n  var hasWildcard = wildCardIndex >= 0;\n  var canReplaceWildcard = currentLength % newLength === 0;\n  if (hasWildcard) {\n    if (canReplaceWildcard) {\n      processedSizes[wildCardIndex] = -currentLength / newLength;\n    } else {\n      throw new Error('Could not replace wildcard, since ' + currentLength + ' is no multiple of ' + -newLength);\n    }\n  }\n  return processedSizes;\n}\n\n/**\n * Computes the product of all array elements.\n * @param {number[]} array Array of factors\n * @returns {number}            Product of all elements\n */\nfunction product(array) {\n  return array.reduce((prev, curr) => prev * curr, 1);\n}\n\n/**\n * Iteratively re-shape a multi dimensional array to fit the specified dimensions\n * @param {Array} array           Array to be reshaped\n * @param {number[]} sizes  List of sizes for each dimension\n * @returns {Array}               Array whose data has been formatted to fit the\n *                                specified dimensions\n */\n\nfunction _reshape(array, sizes) {\n  // testing if there are enough elements for the requested shape\n  var tmpArray = array;\n  var tmpArray2;\n  // for each dimensions starting by the last one and ignoring the first one\n  for (var sizeIndex = sizes.length - 1; sizeIndex > 0; sizeIndex--) {\n    var size = sizes[sizeIndex];\n    tmpArray2 = [];\n\n    // aggregate the elements of the current tmpArray in elements of the requested size\n    var length = tmpArray.length / size;\n    for (var i = 0; i < length; i++) {\n      tmpArray2.push(tmpArray.slice(i * size, (i + 1) * size));\n    }\n    // set it as the new tmpArray for the next loop turn or for return\n    tmpArray = tmpArray2;\n  }\n  return tmpArray;\n}\n\n/**\n * Squeeze a multi dimensional array\n * @param {Array} array\n * @param {Array} [size]\n * @returns {Array} returns the array itself\n */\nexport function squeeze(array, size) {\n  var s = size || arraySize(array);\n\n  // squeeze outer dimensions\n  while (Array.isArray(array) && array.length === 1) {\n    array = array[0];\n    s.shift();\n  }\n\n  // find the first dimension to be squeezed\n  var dims = s.length;\n  while (s[dims - 1] === 1) {\n    dims--;\n  }\n\n  // squeeze inner dimensions\n  if (dims < s.length) {\n    array = _squeeze(array, dims, 0);\n    s.length = dims;\n  }\n  return array;\n}\n\n/**\n * Recursively squeeze a multi dimensional array\n * @param {Array} array\n * @param {number} dims Required number of dimensions\n * @param {number} dim  Current dimension\n * @returns {Array | *} Returns the squeezed array\n * @private\n */\nfunction _squeeze(array, dims, dim) {\n  var i, ii;\n  if (dim < dims) {\n    var next = dim + 1;\n    for (i = 0, ii = array.length; i < ii; i++) {\n      array[i] = _squeeze(array[i], dims, next);\n    }\n  } else {\n    while (Array.isArray(array)) {\n      array = array[0];\n    }\n  }\n  return array;\n}\n\n/**\n * Unsqueeze a multi dimensional array: add dimensions when missing\n *\n * Paramter `size` will be mutated to match the new, unqueezed matrix size.\n *\n * @param {Array} array\n * @param {number} dims       Desired number of dimensions of the array\n * @param {number} [outer]    Number of outer dimensions to be added\n * @param {Array} [size] Current size of array.\n * @returns {Array} returns the array itself\n * @private\n */\nexport function unsqueeze(array, dims, outer, size) {\n  var s = size || arraySize(array);\n\n  // unsqueeze outer dimensions\n  if (outer) {\n    for (var i = 0; i < outer; i++) {\n      array = [array];\n      s.unshift(1);\n    }\n  }\n\n  // unsqueeze inner dimensions\n  array = _unsqueeze(array, dims, 0);\n  while (s.length < dims) {\n    s.push(1);\n  }\n  return array;\n}\n\n/**\n * Recursively unsqueeze a multi dimensional array\n * @param {Array} array\n * @param {number} dims Required number of dimensions\n * @param {number} dim  Current dimension\n * @returns {Array | *} Returns the squeezed array\n * @private\n */\nfunction _unsqueeze(array, dims, dim) {\n  var i, ii;\n  if (Array.isArray(array)) {\n    var next = dim + 1;\n    for (i = 0, ii = array.length; i < ii; i++) {\n      array[i] = _unsqueeze(array[i], dims, next);\n    }\n  } else {\n    for (var d = dim; d < dims; d++) {\n      array = [array];\n    }\n  }\n  return array;\n}\n/**\n * Flatten a multi dimensional array, put all elements in a one dimensional\n * array\n * @param {Array} array   A multi dimensional array\n * @return {Array}        The flattened array (1 dimensional)\n */\nexport function flatten(array) {\n  if (!Array.isArray(array)) {\n    // if not an array, return as is\n    return array;\n  }\n  var flat = [];\n  array.forEach(function callback(value) {\n    if (Array.isArray(value)) {\n      value.forEach(callback); // traverse through sub-arrays recursively\n    } else {\n      flat.push(value);\n    }\n  });\n  return flat;\n}\n\n/**\n * A safe map\n * @param {Array} array\n * @param {function} callback\n */\nexport function map(array, callback) {\n  return Array.prototype.map.call(array, callback);\n}\n\n/**\n * A safe forEach\n * @param {Array} array\n * @param {function} callback\n */\nexport function forEach(array, callback) {\n  Array.prototype.forEach.call(array, callback);\n}\n\n/**\n * A safe filter\n * @param {Array} array\n * @param {function} callback\n */\nexport function filter(array, callback) {\n  if (arraySize(array).length !== 1) {\n    throw new Error('Only one dimensional matrices supported');\n  }\n  return Array.prototype.filter.call(array, callback);\n}\n\n/**\n * Filter values in a callback given a regular expression\n * @param {Array} array\n * @param {RegExp} regexp\n * @return {Array} Returns the filtered array\n * @private\n */\nexport function filterRegExp(array, regexp) {\n  if (arraySize(array).length !== 1) {\n    throw new Error('Only one dimensional matrices supported');\n  }\n  return Array.prototype.filter.call(array, entry => regexp.test(entry));\n}\n\n/**\n * A safe join\n * @param {Array} array\n * @param {string} separator\n */\nexport function join(array, separator) {\n  return Array.prototype.join.call(array, separator);\n}\n\n/**\n * Assign a numeric identifier to every element of a sorted array\n * @param {Array} a  An array\n * @return {Array} An array of objects containing the original value and its identifier\n */\nexport function identify(a) {\n  if (!Array.isArray(a)) {\n    throw new TypeError('Array input expected');\n  }\n  if (a.length === 0) {\n    return a;\n  }\n  var b = [];\n  var count = 0;\n  b[0] = {\n    value: a[0],\n    identifier: 0\n  };\n  for (var i = 1; i < a.length; i++) {\n    if (a[i] === a[i - 1]) {\n      count++;\n    } else {\n      count = 0;\n    }\n    b.push({\n      value: a[i],\n      identifier: count\n    });\n  }\n  return b;\n}\n\n/**\n * Remove the numeric identifier from the elements\n * @param {array} a  An array\n * @return {array} An array of values without identifiers\n */\nexport function generalize(a) {\n  if (!Array.isArray(a)) {\n    throw new TypeError('Array input expected');\n  }\n  if (a.length === 0) {\n    return a;\n  }\n  var b = [];\n  for (var i = 0; i < a.length; i++) {\n    b.push(a[i].value);\n  }\n  return b;\n}\n\n/**\n * Check the datatype of a given object\n * This is a low level implementation that should only be used by\n * parent Matrix classes such as SparseMatrix or DenseMatrix\n * This method does not validate Array Matrix shape\n * @param {Array} array\n * @param {function} typeOf   Callback function to use to determine the type of a value\n * @return {string}\n */\nexport function getArrayDataType(array, typeOf) {\n  var type; // to hold type info\n  var length = 0; // to hold length value to ensure it has consistent sizes\n\n  for (var i = 0; i < array.length; i++) {\n    var item = array[i];\n    var _isArray = Array.isArray(item);\n\n    // Saving the target matrix row size\n    if (i === 0 && _isArray) {\n      length = item.length;\n    }\n\n    // If the current item is an array but the length does not equal the targetVectorSize\n    if (_isArray && item.length !== length) {\n      return undefined;\n    }\n    var itemType = _isArray ? getArrayDataType(item, typeOf) // recurse into a nested array\n    : typeOf(item);\n    if (type === undefined) {\n      type = itemType; // first item\n    } else if (type !== itemType) {\n      return 'mixed';\n    } else {\n      // we're good, everything has the same type so far\n    }\n  }\n  return type;\n}\n\n/**\n * Return the last item from an array\n * @param {array}\n * @returns {*}\n */\nexport function last(array) {\n  return array[array.length - 1];\n}\n\n/**\n * Get all but the last element of array.\n * @param {array}\n * @returns {*}\n */\nexport function initial(array) {\n  return array.slice(0, array.length - 1);\n}\n\n/**\n * Recursively concatenate two matrices.\n * The contents of the matrices is not cloned.\n * @param {Array} a             Multi dimensional array\n * @param {Array} b             Multi dimensional array\n * @param {number} concatDim    The dimension on which to concatenate (zero-based)\n * @param {number} dim          The current dim (zero-based)\n * @return {Array} c            The concatenated matrix\n * @private\n */\nfunction concatRecursive(a, b, concatDim, dim) {\n  if (dim < concatDim) {\n    // recurse into next dimension\n    if (a.length !== b.length) {\n      throw new DimensionError(a.length, b.length);\n    }\n    var c = [];\n    for (var i = 0; i < a.length; i++) {\n      c[i] = concatRecursive(a[i], b[i], concatDim, dim + 1);\n    }\n    return c;\n  } else {\n    // concatenate this dimension\n    return a.concat(b);\n  }\n}\n\n/**\n * Concatenates many arrays in the specified direction\n * @param {...Array} arrays All the arrays to concatenate\n * @param {number} concatDim The dimension on which to concatenate (zero-based)\n * @returns\n*/\nexport function concat() {\n  var arrays = Array.prototype.slice.call(arguments, 0, -1);\n  var concatDim = Array.prototype.slice.call(arguments, -1);\n  if (arrays.length === 1) {\n    return arrays[0];\n  }\n  if (arrays.length > 1) {\n    return arrays.slice(1).reduce(function (A, B) {\n      return concatRecursive(A, B, concatDim, 0);\n    }, arrays[0]);\n  } else {\n    throw new Error('Wrong number of arguments in function concat');\n  }\n}\n\n/**\n * Receives two or more sizes and get's the broadcasted size for both.\n * @param  {...number[]} sizes Sizes to broadcast together\n * @returns\n */\nexport function broadcastSizes() {\n  for (var _len = arguments.length, sizes = new Array(_len), _key = 0; _key < _len; _key++) {\n    sizes[_key] = arguments[_key];\n  }\n  var dimensions = sizes.map(s => s.length);\n  var N = Math.max(...dimensions);\n  var sizeMax = new Array(N).fill(null);\n  // check for every size\n  for (var i = 0; i < sizes.length; i++) {\n    var size = sizes[i];\n    var dim = dimensions[i];\n    for (var j = 0; j < dim; j++) {\n      var n = N - dim + j;\n      if (size[j] > sizeMax[n]) {\n        sizeMax[n] = size[j];\n      }\n    }\n  }\n  for (var _i = 0; _i < sizes.length; _i++) {\n    checkBroadcastingRules(sizes[_i], sizeMax);\n  }\n  return sizeMax;\n}\n\n/**\n * Checks if it's possible to broadcast a size to another size\n * @param {number[]} size The size of the array to check\n * @param {number[]} toSize The size of the array to validate if it can be broadcasted to\n */\nexport function checkBroadcastingRules(size, toSize) {\n  var N = toSize.length;\n  var dim = size.length;\n  for (var j = 0; j < dim; j++) {\n    var n = N - dim + j;\n    if (size[j] < toSize[n] && size[j] > 1 || size[j] > toSize[n]) {\n      throw new Error(\"shape missmatch: missmatch is found in arg with shape (\".concat(size, \") not possible to broadcast dimension \").concat(dim, \" with size \").concat(size[j], \" to size \").concat(toSize[n]));\n    }\n  }\n}\n\n/**\n * Broadcasts a single array to a certain size\n * @param {array} array Array to be broadcasted\n * @param {number[]} toSize Size to broadcast the array\n * @returns The broadcasted array\n */\nexport function broadcastTo(array, toSize) {\n  var Asize = arraySize(array);\n  if (deepStrictEqual(Asize, toSize)) {\n    return array;\n  }\n  checkBroadcastingRules(Asize, toSize);\n  var broadcastedSize = broadcastSizes(Asize, toSize);\n  var N = broadcastedSize.length;\n  var paddedSize = [...Array(N - Asize.length).fill(1), ...Asize];\n  var A = clone(array);\n  // reshape A if needed to make it ready for concat\n  if (Asize.length < N) {\n    A = reshape(A, paddedSize);\n    Asize = arraySize(A);\n  }\n\n  // stretches the array on each dimension to make it the same size as index\n  for (var dim = 0; dim < N; dim++) {\n    if (Asize[dim] < broadcastedSize[dim]) {\n      A = stretch(A, broadcastedSize[dim], dim);\n      Asize = arraySize(A);\n    }\n  }\n  return A;\n}\n\n/**\n * Broadcasts arrays and returns the broadcasted arrays in an array\n * @param  {...Array | any} arrays\n * @returns\n */\nexport function broadcastArrays() {\n  for (var _len2 = arguments.length, arrays = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    arrays[_key2] = arguments[_key2];\n  }\n  if (arrays.length === 0) {\n    throw new Error('Insuficient number of argumnets in function broadcastArrays');\n  }\n  if (arrays.length === 1) {\n    return arrays[0];\n  }\n  var sizes = arrays.map(function (array) {\n    return arraySize(array);\n  });\n  var broadcastedSize = broadcastSizes(...sizes);\n  var broadcastedArrays = [];\n  arrays.forEach(function (array) {\n    broadcastedArrays.push(broadcastTo(array, broadcastedSize));\n  });\n  return broadcastedArrays;\n}\n\n/**\n * stretches a matrix up to a certain size in a certain dimension\n * @param {Array} arrayToStretch\n * @param {number[]} sizeToStretch\n * @param {number} dimToStretch\n * @returns\n */\nexport function stretch(arrayToStretch, sizeToStretch, dimToStretch) {\n  return concat(...Array(sizeToStretch).fill(arrayToStretch), dimToStretch);\n}\n\n/**\n* Retrieves a single element from an array given an index.\n*\n* @param {Array} array - The array from which to retrieve the value.\n* @param {Array<number>} idx - An array of indices specifying the position of the desired element in each dimension.\n* @returns {*} - The value at the specified position in the array.\n*\n* @example\n* const arr = [[[1, 2], [3, 4]], [[5, 6], [7, 8]]];\n* const index = [1, 0, 1];\n* console.log(getValue(arr, index)); // 6\n*/\nexport function get(array, index) {\n  if (!Array.isArray(array)) {\n    throw new Error('Array expected');\n  }\n  var size = arraySize(array);\n  if (index.length !== size.length) {\n    throw new DimensionError(index.length, size.length);\n  }\n  for (var x = 0; x < index.length; x++) {\n    validateIndex(index[x], size[x]);\n  }\n  return index.reduce((acc, curr) => acc[curr], array);\n}\n\n/**\n * Recursive function to map a multi-dimensional array.\n *\n * @param {*} value - The current value being processed in the array.\n * @param {Array} index - The index of the current value being processed in the array.\n * @param {Array} array - The array being processed.\n * @param {Function} callback - Function that produces the element of the new Array, taking three arguments: the value of the element, the index of the element, and the Array being processed.\n * @returns {*} The new array with each element being the result of the callback function.\n */\nexport function recurse(value, index, array, callback) {\n  if (Array.isArray(value)) {\n    return value.map(function (child, i) {\n      // we create a copy of the index array and append the new index value\n      return recurse(child, index.concat(i), array, callback);\n    });\n  } else {\n    // invoke the callback function with the right number of arguments\n    return callback(value, index, array);\n  }\n}\n\n/**\n * Deep clones a multidimensional array\n * @param {Array} array\n * @returns cloned array\n */\nexport function clone(array) {\n  return _extends([], array);\n}","import typed from 'typed-function';\nimport { get, arraySize } from './array.js';\nimport { typeOf as _typeOf } from './is.js';\n\n/**\n * Simplifies a callback function by reducing its complexity and potentially improving its performance.\n *\n * @param {Function} callback The original callback function to simplify.\n * @param {Array|Matrix} array The array that will be used with the callback function.\n * @param {string} name The name of the function that is using the callback.\n * @returns {Function} Returns a simplified version of the callback function.\n */\nexport function optimizeCallback(callback, array, name) {\n  if (typed.isTypedFunction(callback)) {\n    var firstIndex = (array.isMatrix ? array.size() : arraySize(array)).map(() => 0);\n    var firstValue = array.isMatrix ? array.get(firstIndex) : get(array, firstIndex);\n    var hasSingleSignature = Object.keys(callback.signatures).length === 1;\n    var numberOfArguments = _findNumberOfArguments(callback, firstValue, firstIndex, array);\n    var fastCallback = hasSingleSignature ? Object.values(callback.signatures)[0] : callback;\n    if (numberOfArguments >= 1 && numberOfArguments <= 3) {\n      return function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        return _tryFunctionWithArgs(fastCallback, args.slice(0, numberOfArguments), name, callback.name);\n      };\n    }\n    return function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return _tryFunctionWithArgs(fastCallback, args, name, callback.name);\n    };\n  }\n  return callback;\n}\nfunction _findNumberOfArguments(callback, value, index, array) {\n  var testArgs = [value, index, array];\n  for (var i = 3; i > 0; i--) {\n    var args = testArgs.slice(0, i);\n    if (typed.resolve(callback, args) !== null) {\n      return i;\n    }\n  }\n}\n\n/**\n   * @param {function} func The selected function taken from one of the signatures of the callback function\n   * @param {Array} args List with arguments to apply to the selected signature\n   * @param {string} mappingFnName the name of the function that is using the callback\n   * @param {string} callbackName the name of the callback function\n   * @returns {*} Returns the return value of the invoked signature\n   * @throws {TypeError} Throws an error when no matching signature was found\n   */\nfunction _tryFunctionWithArgs(func, args, mappingFnName, callbackName) {\n  try {\n    return func(...args);\n  } catch (err) {\n    _createCallbackError(err, args, mappingFnName, callbackName);\n  }\n}\n\n/**\n * Creates and throws a detailed TypeError when a callback function fails.\n *\n * @param {Error} err The original error thrown by the callback function.\n * @param {Array} args The arguments that were passed to the callback function.\n * @param {string} mappingFnName The name of the function that is using the callback.\n * @param {string} callbackName The name of the callback function.\n * @throws {TypeError} Throws a detailed TypeError with enriched error message.\n */\nfunction _createCallbackError(err, args, mappingFnName, callbackName) {\n  var _err$data;\n  // Enrich the error message so the user understands that it took place inside the callback function\n  if (err instanceof TypeError && ((_err$data = err.data) === null || _err$data === void 0 ? void 0 : _err$data.category) === 'wrongType') {\n    var argsDesc = [];\n    argsDesc.push(\"value: \".concat(_typeOf(args[0])));\n    if (args.length >= 2) {\n      argsDesc.push(\"index: \".concat(_typeOf(args[1])));\n    }\n    if (args.length >= 3) {\n      argsDesc.push(\"array: \".concat(_typeOf(args[2])));\n    }\n    throw new TypeError(\"Function \".concat(mappingFnName, \" cannot apply callback arguments \") + \"\".concat(callbackName, \"(\").concat(argsDesc.join(', '), \") at index \").concat(JSON.stringify(args[1])));\n  } else {\n    throw new TypeError(\"Function \".concat(mappingFnName, \" cannot apply callback arguments \") + \"to function \".concat(callbackName, \": \").concat(err.message));\n  }\n}","// deno-lint-ignore-file no-this-alias\nimport { isArray, isBigNumber, isCollection, isIndex, isMatrix, isNumber, isString, typeOf } from '../../utils/is.js';\nimport { arraySize, getArrayDataType, processSizesWildcard, reshape, resize, unsqueeze, validate, validateIndex, broadcastTo, get } from '../../utils/array.js';\nimport { format } from '../../utils/string.js';\nimport { isInteger } from '../../utils/number.js';\nimport { clone, deepStrictEqual } from '../../utils/object.js';\nimport { DimensionError } from '../../error/DimensionError.js';\nimport { factory } from '../../utils/factory.js';\nimport { optimizeCallback } from '../../utils/optimizeCallback.js';\nvar name = 'DenseMatrix';\nvar dependencies = ['Matrix'];\nexport var createDenseMatrixClass = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    Matrix\n  } = _ref;\n  /**\n   * Dense Matrix implementation. A regular, dense matrix, supporting multi-dimensional matrices. This is the default matrix type.\n   * @class DenseMatrix\n   * @enum {{ value, index: number[] }}\n   */\n  function DenseMatrix(data, datatype) {\n    if (!(this instanceof DenseMatrix)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n    if (datatype && !isString(datatype)) {\n      throw new Error('Invalid datatype: ' + datatype);\n    }\n    if (isMatrix(data)) {\n      // check data is a DenseMatrix\n      if (data.type === 'DenseMatrix') {\n        // clone data & size\n        this._data = clone(data._data);\n        this._size = clone(data._size);\n        this._datatype = datatype || data._datatype;\n      } else {\n        // build data from existing matrix\n        this._data = data.toArray();\n        this._size = data.size();\n        this._datatype = datatype || data._datatype;\n      }\n    } else if (data && isArray(data.data) && isArray(data.size)) {\n      // initialize fields from JSON representation\n      this._data = data.data;\n      this._size = data.size;\n      // verify the dimensions of the array\n      validate(this._data, this._size);\n      this._datatype = datatype || data.datatype;\n    } else if (isArray(data)) {\n      // replace nested Matrices with Arrays\n      this._data = preprocess(data);\n      // get the dimensions of the array\n      this._size = arraySize(this._data);\n      // verify the dimensions of the array, TODO: compute size while processing array\n      validate(this._data, this._size);\n      // data type unknown\n      this._datatype = datatype;\n    } else if (data) {\n      // unsupported type\n      throw new TypeError('Unsupported type of data (' + typeOf(data) + ')');\n    } else {\n      // nothing provided\n      this._data = [];\n      this._size = [0];\n      this._datatype = datatype;\n    }\n  }\n  DenseMatrix.prototype = new Matrix();\n\n  /**\n   * Create a new DenseMatrix\n   */\n  DenseMatrix.prototype.createDenseMatrix = function (data, datatype) {\n    return new DenseMatrix(data, datatype);\n  };\n\n  /**\n   * Attach type information\n   */\n  Object.defineProperty(DenseMatrix, 'name', {\n    value: 'DenseMatrix'\n  });\n  DenseMatrix.prototype.constructor = DenseMatrix;\n  DenseMatrix.prototype.type = 'DenseMatrix';\n  DenseMatrix.prototype.isDenseMatrix = true;\n\n  /**\n   * Get the matrix type\n   *\n   * Usage:\n   *    const matrixType = matrix.getDataType()  // retrieves the matrix type\n   *\n   * @memberOf DenseMatrix\n   * @return {string}   type information; if multiple types are found from the Matrix, it will return \"mixed\"\n   */\n  DenseMatrix.prototype.getDataType = function () {\n    return getArrayDataType(this._data, typeOf);\n  };\n\n  /**\n   * Get the storage format used by the matrix.\n   *\n   * Usage:\n   *     const format = matrix.storage()  // retrieve storage format\n   *\n   * @memberof DenseMatrix\n   * @return {string}           The storage format.\n   */\n  DenseMatrix.prototype.storage = function () {\n    return 'dense';\n  };\n\n  /**\n   * Get the datatype of the data stored in the matrix.\n   *\n   * Usage:\n   *     const format = matrix.datatype()   // retrieve matrix datatype\n   *\n   * @memberof DenseMatrix\n   * @return {string}           The datatype.\n   */\n  DenseMatrix.prototype.datatype = function () {\n    return this._datatype;\n  };\n\n  /**\n   * Create a new DenseMatrix\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @param {string} [datatype]\n   */\n  DenseMatrix.prototype.create = function (data, datatype) {\n    return new DenseMatrix(data, datatype);\n  };\n\n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     const subset = matrix.subset(index)               // retrieve subset\n   *     const value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @memberof DenseMatrix\n   * @param {Index} index\n   * @param {Array | Matrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n  DenseMatrix.prototype.subset = function (index, replacement, defaultValue) {\n    switch (arguments.length) {\n      case 1:\n        return _get(this, index);\n\n      // intentional fall through\n      case 2:\n      case 3:\n        return _set(this, index, replacement, defaultValue);\n      default:\n        throw new SyntaxError('Wrong number of arguments');\n    }\n  };\n\n  /**\n   * Get a single element from the matrix.\n   * @memberof DenseMatrix\n   * @param {number[]} index   Zero-based index\n   * @return {*} value\n   */\n  DenseMatrix.prototype.get = function (index) {\n    return get(this._data, index);\n  };\n\n  /**\n   * Replace a single element in the matrix.\n   * @memberof DenseMatrix\n   * @param {number[]} index   Zero-based index\n   * @param {*} value\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be left undefined.\n   * @return {DenseMatrix} self\n   */\n  DenseMatrix.prototype.set = function (index, value, defaultValue) {\n    if (!isArray(index)) {\n      throw new TypeError('Array expected');\n    }\n    if (index.length < this._size.length) {\n      throw new DimensionError(index.length, this._size.length, '<');\n    }\n    var i, ii, indexI;\n\n    // enlarge matrix when needed\n    var size = index.map(function (i) {\n      return i + 1;\n    });\n    _fit(this, size, defaultValue);\n\n    // traverse over the dimensions\n    var data = this._data;\n    for (i = 0, ii = index.length - 1; i < ii; i++) {\n      indexI = index[i];\n      validateIndex(indexI, data.length);\n      data = data[indexI];\n    }\n\n    // set new value\n    indexI = index[index.length - 1];\n    validateIndex(indexI, data.length);\n    data[indexI] = value;\n    return this;\n  };\n\n  /**\n   * Get a submatrix of this matrix\n   * @memberof DenseMatrix\n   * @param {DenseMatrix} matrix\n   * @param {Index} index   Zero-based index\n   * @private\n   */\n  function _get(matrix, index) {\n    if (!isIndex(index)) {\n      throw new TypeError('Invalid index');\n    }\n    var isScalar = index.isScalar();\n    if (isScalar) {\n      // return a scalar\n      return matrix.get(index.min());\n    } else {\n      // validate dimensions\n      var size = index.size();\n      if (size.length !== matrix._size.length) {\n        throw new DimensionError(size.length, matrix._size.length);\n      }\n\n      // validate if any of the ranges in the index is out of range\n      var min = index.min();\n      var max = index.max();\n      for (var i = 0, ii = matrix._size.length; i < ii; i++) {\n        validateIndex(min[i], matrix._size[i]);\n        validateIndex(max[i], matrix._size[i]);\n      }\n\n      // retrieve submatrix\n      // TODO: more efficient when creating an empty matrix and setting _data and _size manually\n      return new DenseMatrix(_getSubmatrix(matrix._data, index, size.length, 0), matrix._datatype);\n    }\n  }\n\n  /**\n   * Recursively get a submatrix of a multi dimensional matrix.\n   * Index is not checked for correct number or length of dimensions.\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @param {Index} index\n   * @param {number} dims   Total number of dimensions\n   * @param {number} dim    Current dimension\n   * @return {Array} submatrix\n   * @private\n   */\n  function _getSubmatrix(data, index, dims, dim) {\n    var last = dim === dims - 1;\n    var range = index.dimension(dim);\n    if (last) {\n      return range.map(function (i) {\n        validateIndex(i, data.length);\n        return data[i];\n      }).valueOf();\n    } else {\n      return range.map(function (i) {\n        validateIndex(i, data.length);\n        var child = data[i];\n        return _getSubmatrix(child, index, dims, dim + 1);\n      }).valueOf();\n    }\n  }\n\n  /**\n   * Replace a submatrix in this matrix\n   * Indexes are zero-based.\n   * @memberof DenseMatrix\n   * @param {DenseMatrix} matrix\n   * @param {Index} index\n   * @param {DenseMatrix | Array | *} submatrix\n   * @param {*} defaultValue          Default value, filled in on new entries when\n   *                                  the matrix is resized.\n   * @return {DenseMatrix} matrix\n   * @private\n   */\n  function _set(matrix, index, submatrix, defaultValue) {\n    if (!index || index.isIndex !== true) {\n      throw new TypeError('Invalid index');\n    }\n\n    // get index size and check whether the index contains a single value\n    var iSize = index.size();\n    var isScalar = index.isScalar();\n\n    // calculate the size of the submatrix, and convert it into an Array if needed\n    var sSize;\n    if (isMatrix(submatrix)) {\n      sSize = submatrix.size();\n      submatrix = submatrix.valueOf();\n    } else {\n      sSize = arraySize(submatrix);\n    }\n    if (isScalar) {\n      // set a scalar\n\n      // check whether submatrix is a scalar\n      if (sSize.length !== 0) {\n        throw new TypeError('Scalar expected');\n      }\n      matrix.set(index.min(), submatrix, defaultValue);\n    } else {\n      // set a submatrix\n\n      // broadcast submatrix\n      if (!deepStrictEqual(sSize, iSize)) {\n        try {\n          if (sSize.length === 0) {\n            submatrix = broadcastTo([submatrix], iSize);\n          } else {\n            submatrix = broadcastTo(submatrix, iSize);\n          }\n          sSize = arraySize(submatrix);\n        } catch (_unused) {}\n      }\n\n      // validate dimensions\n      if (iSize.length < matrix._size.length) {\n        throw new DimensionError(iSize.length, matrix._size.length, '<');\n      }\n      if (sSize.length < iSize.length) {\n        // calculate number of missing outer dimensions\n        var i = 0;\n        var outer = 0;\n        while (iSize[i] === 1 && sSize[i] === 1) {\n          i++;\n        }\n        while (iSize[i] === 1) {\n          outer++;\n          i++;\n        }\n\n        // unsqueeze both outer and inner dimensions\n        submatrix = unsqueeze(submatrix, iSize.length, outer, sSize);\n      }\n\n      // check whether the size of the submatrix matches the index size\n      if (!deepStrictEqual(iSize, sSize)) {\n        throw new DimensionError(iSize, sSize, '>');\n      }\n\n      // enlarge matrix when needed\n      var size = index.max().map(function (i) {\n        return i + 1;\n      });\n      _fit(matrix, size, defaultValue);\n\n      // insert the sub matrix\n      var dims = iSize.length;\n      var dim = 0;\n      _setSubmatrix(matrix._data, index, submatrix, dims, dim);\n    }\n    return matrix;\n  }\n\n  /**\n   * Replace a submatrix of a multi dimensional matrix.\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @param {Index} index\n   * @param {Array} submatrix\n   * @param {number} dims   Total number of dimensions\n   * @param {number} dim\n   * @private\n   */\n  function _setSubmatrix(data, index, submatrix, dims, dim) {\n    var last = dim === dims - 1;\n    var range = index.dimension(dim);\n    if (last) {\n      range.forEach(function (dataIndex, subIndex) {\n        validateIndex(dataIndex);\n        data[dataIndex] = submatrix[subIndex[0]];\n      });\n    } else {\n      range.forEach(function (dataIndex, subIndex) {\n        validateIndex(dataIndex);\n        _setSubmatrix(data[dataIndex], index, submatrix[subIndex[0]], dims, dim + 1);\n      });\n    }\n  }\n\n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @memberof DenseMatrix\n   * @param {number[] || Matrix} size The new size the matrix should have.\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n  DenseMatrix.prototype.resize = function (size, defaultValue, copy) {\n    // validate arguments\n    if (!isCollection(size)) {\n      throw new TypeError('Array or Matrix expected');\n    }\n\n    // SparseMatrix input is always 2d, flatten this into 1d if it's indeed a vector\n    var sizeArray = size.valueOf().map(value => {\n      return Array.isArray(value) && value.length === 1 ? value[0] : value;\n    });\n\n    // matrix to resize\n    var m = copy ? this.clone() : this;\n    // resize matrix\n    return _resize(m, sizeArray, defaultValue);\n  };\n  function _resize(matrix, size, defaultValue) {\n    // check size\n    if (size.length === 0) {\n      // first value in matrix\n      var v = matrix._data;\n      // go deep\n      while (isArray(v)) {\n        v = v[0];\n      }\n      return v;\n    }\n    // resize matrix\n    matrix._size = size.slice(0); // copy the array\n    matrix._data = resize(matrix._data, matrix._size, defaultValue);\n    // return matrix\n    return matrix;\n  }\n\n  /**\n   * Reshape the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (reshape in place).\n   *\n   * NOTE: This might be better suited to copy by default, instead of modifying\n   *       in place. For now, it operates in place to remain consistent with\n   *       resize().\n   *\n   * @memberof DenseMatrix\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {boolean} [copy]          Return a reshaped copy of the matrix\n   *\n   * @return {Matrix}                 The reshaped matrix\n   */\n  DenseMatrix.prototype.reshape = function (size, copy) {\n    var m = copy ? this.clone() : this;\n    m._data = reshape(m._data, size);\n    var currentLength = m._size.reduce((length, size) => length * size);\n    m._size = processSizesWildcard(size, currentLength);\n    return m;\n  };\n\n  /**\n   * Enlarge the matrix when it is smaller than given size.\n   * If the matrix is larger or equal sized, nothing is done.\n   * @memberof DenseMatrix\n   * @param {DenseMatrix} matrix           The matrix to be resized\n   * @param {number[]} size\n   * @param {*} defaultValue          Default value, filled in on new entries.\n   * @private\n   */\n  function _fit(matrix, size, defaultValue) {\n    var\n    // copy the array\n    newSize = matrix._size.slice(0);\n    var changed = false;\n\n    // add dimensions when needed\n    while (newSize.length < size.length) {\n      newSize.push(0);\n      changed = true;\n    }\n\n    // enlarge size when needed\n    for (var i = 0, ii = size.length; i < ii; i++) {\n      if (size[i] > newSize[i]) {\n        newSize[i] = size[i];\n        changed = true;\n      }\n    }\n    if (changed) {\n      // resize only when size is changed\n      _resize(matrix, newSize, defaultValue);\n    }\n  }\n\n  /**\n   * Create a clone of the matrix\n   * @memberof DenseMatrix\n   * @return {DenseMatrix} clone\n   */\n  DenseMatrix.prototype.clone = function () {\n    var m = new DenseMatrix({\n      data: clone(this._data),\n      size: clone(this._size),\n      datatype: this._datatype\n    });\n    return m;\n  };\n\n  /**\n   * Retrieve the size of the matrix.\n   * @memberof DenseMatrix\n   * @returns {number[]} size\n   */\n  DenseMatrix.prototype.size = function () {\n    return this._size.slice(0); // return a clone of _size\n  };\n\n  /**\n   * Applies a callback function to a reference to each element of the matrix\n   * @memberof DenseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: an array, an integer index to that\n   *                              array, and the Matrix being traversed.\n   */\n  DenseMatrix.prototype._forEach = function (callback) {\n    // matrix instance\n    var me = this;\n    var s = me.size();\n\n    // if there is only one dimension, just loop through it\n    if (s.length === 1) {\n      for (var i = 0; i < s[0]; i++) {\n        callback(me._data, i, [i]);\n      }\n      return;\n    }\n\n    // keep track of the current index permutation\n    var index = Array(s.length).fill(0);\n\n    // store a reference of each dimension of the matrix for faster access\n    var data = Array(s.length - 1);\n    var last = data.length - 1;\n    data[0] = me._data[0];\n    for (var _i = 0; _i < last; _i++) {\n      data[_i + 1] = data[_i][0];\n    }\n    index[last] = -1;\n    while (true) {\n      var _i2 = void 0;\n      for (_i2 = last; _i2 >= 0; _i2--) {\n        // march index to the next permutation\n        index[_i2]++;\n        if (index[_i2] === s[_i2]) {\n          index[_i2] = 0;\n          continue;\n        }\n\n        // update references to matrix dimensions\n        data[_i2] = _i2 === 0 ? me._data[index[_i2]] : data[_i2 - 1][index[_i2]];\n        for (var j = _i2; j < last; j++) {\n          data[j + 1] = data[j][0];\n        }\n\n        // loop through the last dimension and map each value\n        for (var _j = 0; _j < s[data.length]; _j++) {\n          index[data.length] = _j;\n          callback(data[last], _j, index.slice(0));\n        }\n        break;\n      }\n      if (_i2 === -1) {\n        break;\n      }\n    }\n  };\n\n  /**\n   * Create a new matrix with the results of the callback function executed on\n   * each entry of the matrix.\n   * @memberof DenseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   *\n   * @return {DenseMatrix} matrix\n   */\n  DenseMatrix.prototype.map = function (callback) {\n    var me = this;\n    var result = new DenseMatrix(me);\n    var fastCallback = optimizeCallback(callback, me._data, 'map');\n    result._forEach(function (arr, i, index) {\n      arr[i] = fastCallback(arr[i], index, me);\n    });\n    return result;\n  };\n\n  /**\n   * Execute a callback function on each entry of the matrix.\n   * @memberof DenseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   */\n  DenseMatrix.prototype.forEach = function (callback) {\n    var me = this;\n    var fastCallback = optimizeCallback(callback, me._data, 'map');\n    me._forEach(function (arr, i, index) {\n      fastCallback(arr[i], index, me);\n    });\n  };\n\n  /**\n   * Iterate over the matrix elements\n   * @return {Iterable<{ value, index: number[] }>}\n   */\n  DenseMatrix.prototype[Symbol.iterator] = function* () {\n    var _recurse = function* recurse(value, index) {\n      if (isArray(value)) {\n        for (var i = 0; i < value.length; i++) {\n          yield* _recurse(value[i], index.concat(i));\n        }\n      } else {\n        yield {\n          value,\n          index\n        };\n      }\n    };\n    yield* _recurse(this._data, []);\n  };\n\n  /**\n   * Returns an array containing the rows of a 2D matrix\n   * @returns {Array<Matrix>}\n   */\n  DenseMatrix.prototype.rows = function () {\n    var result = [];\n    var s = this.size();\n    if (s.length !== 2) {\n      throw new TypeError('Rows can only be returned for a 2D matrix.');\n    }\n    var data = this._data;\n    for (var row of data) {\n      result.push(new DenseMatrix([row], this._datatype));\n    }\n    return result;\n  };\n\n  /**\n   * Returns an array containing the columns of a 2D matrix\n   * @returns {Array<Matrix>}\n   */\n  DenseMatrix.prototype.columns = function () {\n    var _this = this;\n    var result = [];\n    var s = this.size();\n    if (s.length !== 2) {\n      throw new TypeError('Rows can only be returned for a 2D matrix.');\n    }\n    var data = this._data;\n    var _loop = function _loop(i) {\n      var col = data.map(row => [row[i]]);\n      result.push(new DenseMatrix(col, _this._datatype));\n    };\n    for (var i = 0; i < s[1]; i++) {\n      _loop(i);\n    }\n    return result;\n  };\n\n  /**\n   * Create an Array with a copy of the data of the DenseMatrix\n   * @memberof DenseMatrix\n   * @returns {Array} array\n   */\n  DenseMatrix.prototype.toArray = function () {\n    return clone(this._data);\n  };\n\n  /**\n   * Get the primitive value of the DenseMatrix: a multidimensional array\n   * @memberof DenseMatrix\n   * @returns {Array} array\n   */\n  DenseMatrix.prototype.valueOf = function () {\n    return this._data;\n  };\n\n  /**\n   * Get a string representation of the matrix, with optional formatting options.\n   * @memberof DenseMatrix\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n  DenseMatrix.prototype.format = function (options) {\n    return format(this._data, options);\n  };\n\n  /**\n   * Get a string representation of the matrix\n   * @memberof DenseMatrix\n   * @returns {string} str\n   */\n  DenseMatrix.prototype.toString = function () {\n    return format(this._data);\n  };\n\n  /**\n   * Get a JSON representation of the matrix\n   * @memberof DenseMatrix\n   * @returns {Object}\n   */\n  DenseMatrix.prototype.toJSON = function () {\n    return {\n      mathjs: 'DenseMatrix',\n      data: this._data,\n      size: this._size,\n      datatype: this._datatype\n    };\n  };\n\n  /**\n   * Get the kth Matrix diagonal.\n   *\n   * @memberof DenseMatrix\n   * @param {number | BigNumber} [k=0]     The kth diagonal where the vector will retrieved.\n   *\n   * @returns {Matrix}                     The matrix with the diagonal values.\n   */\n  DenseMatrix.prototype.diagonal = function (k) {\n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if (isBigNumber(k)) {\n        k = k.toNumber();\n      }\n      // is must be an integer\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError('The parameter k must be an integer number');\n      }\n    } else {\n      // default value\n      k = 0;\n    }\n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0;\n\n    // rows & columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n\n    // number diagonal values\n    var n = Math.min(rows - kSub, columns - kSuper);\n\n    // x is a matrix get diagonal from matrix\n    var data = [];\n\n    // loop rows\n    for (var i = 0; i < n; i++) {\n      data[i] = this._data[i + kSub][i + kSuper];\n    }\n\n    // create DenseMatrix\n    return new DenseMatrix({\n      data,\n      size: [n],\n      datatype: this._datatype\n    });\n  };\n\n  /**\n   * Create a diagonal matrix.\n   *\n   * @memberof DenseMatrix\n   * @param {Array} size                     The matrix size.\n   * @param {number | Matrix | Array } value The values for the diagonal.\n   * @param {number | BigNumber} [k=0]       The kth diagonal where the vector will be filled in.\n   * @param {number} [defaultValue]          The default value for non-diagonal\n   * @param {string} [datatype]              The datatype for the diagonal\n   *\n   * @returns {DenseMatrix}\n   */\n  DenseMatrix.diagonal = function (size, value, k, defaultValue) {\n    if (!isArray(size)) {\n      throw new TypeError('Array expected, size parameter');\n    }\n    if (size.length !== 2) {\n      throw new Error('Only two dimensions matrix are supported');\n    }\n\n    // map size & validate\n    size = size.map(function (s) {\n      // check it is a big number\n      if (isBigNumber(s)) {\n        // convert it\n        s = s.toNumber();\n      }\n      // validate arguments\n      if (!isNumber(s) || !isInteger(s) || s < 1) {\n        throw new Error('Size values must be positive integers');\n      }\n      return s;\n    });\n\n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if (isBigNumber(k)) {\n        k = k.toNumber();\n      }\n      // is must be an integer\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError('The parameter k must be an integer number');\n      }\n    } else {\n      // default value\n      k = 0;\n    }\n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0;\n\n    // rows and columns\n    var rows = size[0];\n    var columns = size[1];\n\n    // number of non-zero items\n    var n = Math.min(rows - kSub, columns - kSuper);\n\n    // value extraction function\n    var _value;\n\n    // check value\n    if (isArray(value)) {\n      // validate array\n      if (value.length !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid value array length');\n      }\n      // define function\n      _value = function _value(i) {\n        // return value @ i\n        return value[i];\n      };\n    } else if (isMatrix(value)) {\n      // matrix size\n      var ms = value.size();\n      // validate matrix\n      if (ms.length !== 1 || ms[0] !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid matrix length');\n      }\n      // define function\n      _value = function _value(i) {\n        // return value @ i\n        return value.get([i]);\n      };\n    } else {\n      // define function\n      _value = function _value() {\n        // return value\n        return value;\n      };\n    }\n\n    // discover default value if needed\n    if (!defaultValue) {\n      // check first value in array\n      defaultValue = isBigNumber(_value(0)) ? _value(0).mul(0) // trick to create a BigNumber with value zero\n      : 0;\n    }\n\n    // empty array\n    var data = [];\n\n    // check we need to resize array\n    if (size.length > 0) {\n      // resize array\n      data = resize(data, size, defaultValue);\n      // fill diagonal\n      for (var d = 0; d < n; d++) {\n        data[d + kSub][d + kSuper] = _value(d);\n      }\n    }\n\n    // create DenseMatrix\n    return new DenseMatrix({\n      data,\n      size: [rows, columns]\n    });\n  };\n\n  /**\n   * Generate a matrix from a JSON object\n   * @memberof DenseMatrix\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"DenseMatrix\", data: [], size: []}`,\n   *                       where mathjs is optional\n   * @returns {DenseMatrix}\n   */\n  DenseMatrix.fromJSON = function (json) {\n    return new DenseMatrix(json);\n  };\n\n  /**\n   * Swap rows i and j in Matrix.\n   *\n   * @memberof DenseMatrix\n   * @param {number} i       Matrix row index 1\n   * @param {number} j       Matrix row index 2\n   *\n   * @return {Matrix}        The matrix reference\n   */\n  DenseMatrix.prototype.swapRows = function (i, j) {\n    // check index\n    if (!isNumber(i) || !isInteger(i) || !isNumber(j) || !isInteger(j)) {\n      throw new Error('Row index must be positive integers');\n    }\n    // check dimensions\n    if (this._size.length !== 2) {\n      throw new Error('Only two dimensional matrix is supported');\n    }\n    // validate index\n    validateIndex(i, this._size[0]);\n    validateIndex(j, this._size[0]);\n\n    // swap rows\n    DenseMatrix._swapRows(i, j, this._data);\n    // return current instance\n    return this;\n  };\n\n  /**\n   * Swap rows i and j in Dense Matrix data structure.\n   *\n   * @param {number} i       Matrix row index 1\n   * @param {number} j       Matrix row index 2\n   * @param {Array} data     Matrix data\n   */\n  DenseMatrix._swapRows = function (i, j, data) {\n    // swap values i <-> j\n    var vi = data[i];\n    data[i] = data[j];\n    data[j] = vi;\n  };\n\n  /**\n   * Preprocess data, which can be an Array or DenseMatrix with nested Arrays and\n   * Matrices. Clones all (nested) Arrays, and replaces all nested Matrices with Arrays\n   * @memberof DenseMatrix\n   * @param {Array | Matrix} data\n   * @return {Array} data\n   */\n  function preprocess(data) {\n    if (isMatrix(data)) {\n      return preprocess(data.valueOf());\n    }\n    if (isArray(data)) {\n      return data.map(preprocess);\n    }\n    return data;\n  }\n  return DenseMatrix;\n}, {\n  isClass: true\n});","import { isCollection, isMatrix } from './is.js';\nimport { IndexError } from '../error/IndexError.js';\nimport { arraySize } from './array.js';\nimport { _switch } from './switch.js';\n\n/**\n * Test whether an array contains collections\n * @param {Array} array\n * @returns {boolean} Returns true when the array contains one or multiple\n *                    collections (Arrays or Matrices). Returns false otherwise.\n */\nexport function containsCollections(array) {\n  for (var i = 0; i < array.length; i++) {\n    if (isCollection(array[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Recursively loop over all elements in a given multi dimensional array\n * and invoke the callback on each of the elements.\n * @param {Array | Matrix} array\n * @param {Function} callback     The callback method is invoked with one\n *                                parameter: the current element in the array\n */\nexport function deepForEach(array, callback) {\n  if (isMatrix(array)) {\n    array = array.valueOf();\n  }\n  for (var i = 0, ii = array.length; i < ii; i++) {\n    var value = array[i];\n    if (Array.isArray(value)) {\n      deepForEach(value, callback);\n    } else {\n      callback(value);\n    }\n  }\n}\n\n/**\n * Execute the callback function element wise for each element in array and any\n * nested array\n * Returns an array with the results\n * @param {Array | Matrix} array\n * @param {Function} callback   The callback is called with two parameters:\n *                              value1 and value2, which contain the current\n *                              element of both arrays.\n * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n *\n * @return {Array | Matrix} res\n */\nexport function deepMap(array, callback, skipZeros) {\n  if (array && typeof array.map === 'function') {\n    // TODO: replace array.map with a for loop to improve performance\n    return array.map(function (x) {\n      return deepMap(x, callback, skipZeros);\n    });\n  } else {\n    return callback(array);\n  }\n}\n\n/**\n * Reduce a given matrix or array to a new matrix or\n * array with one less dimension, applying the given\n * callback in the selected dimension.\n * @param {Array | Matrix} mat\n * @param {number} dim\n * @param {Function} callback\n * @return {Array | Matrix} res\n */\nexport function reduce(mat, dim, callback) {\n  var size = Array.isArray(mat) ? arraySize(mat) : mat.size();\n  if (dim < 0 || dim >= size.length) {\n    // TODO: would be more clear when throwing a DimensionError here\n    throw new IndexError(dim, size.length);\n  }\n  if (isMatrix(mat)) {\n    return mat.create(_reduce(mat.valueOf(), dim, callback), mat.datatype());\n  } else {\n    return _reduce(mat, dim, callback);\n  }\n}\n\n/**\n * Recursively reduce a matrix\n * @param {Array} mat\n * @param {number} dim\n * @param {Function} callback\n * @returns {Array} ret\n * @private\n */\nfunction _reduce(mat, dim, callback) {\n  var i, ret, val, tran;\n  if (dim <= 0) {\n    if (!Array.isArray(mat[0])) {\n      val = mat[0];\n      for (i = 1; i < mat.length; i++) {\n        val = callback(val, mat[i]);\n      }\n      return val;\n    } else {\n      tran = _switch(mat);\n      ret = [];\n      for (i = 0; i < tran.length; i++) {\n        ret[i] = _reduce(tran[i], dim - 1, callback);\n      }\n      return ret;\n    }\n  } else {\n    ret = [];\n    for (i = 0; i < mat.length; i++) {\n      ret[i] = _reduce(mat[i], dim - 1, callback);\n    }\n    return ret;\n  }\n}\n\n// TODO: document function scatter\nexport function scatter(a, j, w, x, u, mark, cindex, f, inverse, update, value) {\n  // a arrays\n  var avalues = a._values;\n  var aindex = a._index;\n  var aptr = a._ptr;\n\n  // vars\n  var k, k0, k1, i;\n\n  // check we need to process values (pattern matrix)\n  if (x) {\n    // values in j\n    for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n      // row\n      i = aindex[k];\n      // check value exists in current j\n      if (w[i] !== mark) {\n        // i is new entry in j\n        w[i] = mark;\n        // add i to pattern of C\n        cindex.push(i);\n        // x(i) = A, check we need to call function this time\n        if (update) {\n          // copy value to workspace calling callback function\n          x[i] = inverse ? f(avalues[k], value) : f(value, avalues[k]);\n          // function was called on current row\n          u[i] = mark;\n        } else {\n          // copy value to workspace\n          x[i] = avalues[k];\n        }\n      } else {\n        // i exists in C already\n        x[i] = inverse ? f(avalues[k], x[i]) : f(x[i], avalues[k]);\n        // function was called on current row\n        u[i] = mark;\n      }\n    }\n  } else {\n    // values in j\n    for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n      // row\n      i = aindex[k];\n      // check value exists in current j\n      if (w[i] !== mark) {\n        // i is new entry in j\n        w[i] = mark;\n        // add i to pattern of C\n        cindex.push(i);\n      } else {\n        // indicate function was called on current row\n        u[i] = mark;\n      }\n    }\n  }\n}","import { deepMap } from '../../utils/collection.js';\nimport { isInteger as isIntegerNumber } from '../../utils/number.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'isInteger';\nvar dependencies = ['typed'];\nexport var createIsInteger = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Test whether a value is an integer number.\n   * The function supports `number`, `BigNumber`, and `Fraction`.\n   *\n   * The function is evaluated element-wise in case of Array or Matrix input.\n   *\n   * Syntax:\n   *\n   *     math.isInteger(x)\n   *\n   * Examples:\n   *\n   *    math.isInteger(2)                     // returns true\n   *    math.isInteger(0)                     // returns true\n   *    math.isInteger(0.5)                   // returns false\n   *    math.isInteger(math.bignumber(500))   // returns true\n   *    math.isInteger(math.fraction(4))      // returns true\n   *    math.isInteger('3')                   // returns true\n   *    math.isInteger([3, 0.5, -2])          // returns [true, false, true]\n   *    math.isInteger(math.complex('2-4i'))  // throws an error\n   *\n   * See also:\n   *\n   *    isNumeric, isPositive, isNegative, isZero\n   *\n   * @param {number | BigNumber | bigint | Fraction | Array | Matrix} x   Value to be tested\n   * @return {boolean}  Returns true when `x` contains a numeric, integer value.\n   *                    Throws an error in case of an unknown data type.\n   */\n  return typed(name, {\n    number: isIntegerNumber,\n    // TODO: what to do with isInteger(add(0.1, 0.2))  ?\n\n    BigNumber: function BigNumber(x) {\n      return x.isInt();\n    },\n    bigint: function bigint(x) {\n      return true;\n    },\n    Fraction: function Fraction(x) {\n      return x.d === 1n;\n    },\n    'Array | Matrix': typed.referToSelf(self => x => deepMap(x, self))\n  });\n});","import { cbrt, expm1, isInteger, log10, log1p, log2, sign, toFixed } from '../../utils/number.js';\nvar n1 = 'number';\nvar n2 = 'number, number';\nexport function absNumber(a) {\n  return Math.abs(a);\n}\nabsNumber.signature = n1;\nexport function addNumber(a, b) {\n  return a + b;\n}\naddNumber.signature = n2;\nexport function subtractNumber(a, b) {\n  return a - b;\n}\nsubtractNumber.signature = n2;\nexport function multiplyNumber(a, b) {\n  return a * b;\n}\nmultiplyNumber.signature = n2;\nexport function divideNumber(a, b) {\n  return a / b;\n}\ndivideNumber.signature = n2;\nexport function unaryMinusNumber(x) {\n  return -x;\n}\nunaryMinusNumber.signature = n1;\nexport function unaryPlusNumber(x) {\n  return x;\n}\nunaryPlusNumber.signature = n1;\nexport function cbrtNumber(x) {\n  return cbrt(x);\n}\ncbrtNumber.signature = n1;\nexport function cubeNumber(x) {\n  return x * x * x;\n}\ncubeNumber.signature = n1;\nexport function expNumber(x) {\n  return Math.exp(x);\n}\nexpNumber.signature = n1;\nexport function expm1Number(x) {\n  return expm1(x);\n}\nexpm1Number.signature = n1;\n\n/**\n * Calculate gcd for numbers\n * @param {number} a\n * @param {number} b\n * @returns {number} Returns the greatest common denominator of a and b\n */\nexport function gcdNumber(a, b) {\n  if (!isInteger(a) || !isInteger(b)) {\n    throw new Error('Parameters in function gcd must be integer numbers');\n  }\n\n  // https://en.wikipedia.org/wiki/Euclidean_algorithm\n  var r;\n  while (b !== 0) {\n    r = a % b;\n    a = b;\n    b = r;\n  }\n  return a < 0 ? -a : a;\n}\ngcdNumber.signature = n2;\n\n/**\n * Calculate lcm for two numbers\n * @param {number} a\n * @param {number} b\n * @returns {number} Returns the least common multiple of a and b\n */\nexport function lcmNumber(a, b) {\n  if (!isInteger(a) || !isInteger(b)) {\n    throw new Error('Parameters in function lcm must be integer numbers');\n  }\n  if (a === 0 || b === 0) {\n    return 0;\n  }\n\n  // https://en.wikipedia.org/wiki/Euclidean_algorithm\n  // evaluate lcm here inline to reduce overhead\n  var t;\n  var prod = a * b;\n  while (b !== 0) {\n    t = b;\n    b = a % t;\n    a = t;\n  }\n  return Math.abs(prod / a);\n}\nlcmNumber.signature = n2;\n\n/**\n * Calculate the logarithm of a value, optionally to a given base.\n * @param {number} x\n * @param {number | null | undefined} base\n * @return {number}\n */\nexport function logNumber(x, y) {\n  if (y) {\n    return Math.log(x) / Math.log(y);\n  }\n  return Math.log(x);\n}\n\n/**\n * Calculate the 10-base logarithm of a number\n * @param {number} x\n * @return {number}\n */\nexport function log10Number(x) {\n  return log10(x);\n}\nlog10Number.signature = n1;\n\n/**\n * Calculate the 2-base logarithm of a number\n * @param {number} x\n * @return {number}\n */\nexport function log2Number(x) {\n  return log2(x);\n}\nlog2Number.signature = n1;\n\n/**\n * Calculate the natural logarithm of a `number+1`\n * @param {number} x\n * @returns {number}\n */\nexport function log1pNumber(x) {\n  return log1p(x);\n}\nlog1pNumber.signature = n1;\n\n/**\n * Calculate the modulus of two numbers\n * @param {number} x\n * @param {number} y\n * @returns {number} res\n * @private\n */\nexport function modNumber(x, y) {\n  // We don't use JavaScript's % operator here as this doesn't work\n  // correctly for x < 0 and x === 0\n  // see https://en.wikipedia.org/wiki/Modulo_operation\n  return y === 0 ? x : x - y * Math.floor(x / y);\n}\nmodNumber.signature = n2;\n\n/**\n * Calculate the nth root of a, solve x^root == a\n * http://rosettacode.org/wiki/Nth_root#JavaScript\n * @param {number} a\n * @param {number} [2] root\n * @private\n */\nexport function nthRootNumber(a) {\n  var root = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  var inv = root < 0;\n  if (inv) {\n    root = -root;\n  }\n  if (root === 0) {\n    throw new Error('Root must be non-zero');\n  }\n  if (a < 0 && Math.abs(root) % 2 !== 1) {\n    throw new Error('Root must be odd when a is negative.');\n  }\n\n  // edge cases zero and infinity\n  if (a === 0) {\n    return inv ? Infinity : 0;\n  }\n  if (!isFinite(a)) {\n    return inv ? 0 : a;\n  }\n  var x = Math.pow(Math.abs(a), 1 / root);\n  // If a < 0, we require that root is an odd integer,\n  // so (-1) ^ (1/root) = -1\n  x = a < 0 ? -x : x;\n  return inv ? 1 / x : x;\n\n  // Very nice algorithm, but fails with nthRoot(-2, 3).\n  // Newton's method has some well-known problems at times:\n  // https://en.wikipedia.org/wiki/Newton%27s_method#Failure_analysis\n  /*\n  let x = 1 // Initial guess\n  let xPrev = 1\n  let i = 0\n  const iMax = 10000\n  do {\n    const delta = (a / Math.pow(x, root - 1) - x) / root\n    xPrev = x\n    x = x + delta\n    i++\n  }\n  while (xPrev !== x && i < iMax)\n   if (xPrev !== x) {\n    throw new Error('Function nthRoot failed to converge')\n  }\n   return inv ? 1 / x : x\n  */\n}\nexport function signNumber(x) {\n  return sign(x);\n}\nsignNumber.signature = n1;\nexport function sqrtNumber(x) {\n  return Math.sqrt(x);\n}\nsqrtNumber.signature = n1;\nexport function squareNumber(x) {\n  return x * x;\n}\nsquareNumber.signature = n1;\n\n/**\n * Calculate xgcd for two numbers\n * @param {number} a\n * @param {number} b\n * @return {number} result\n * @private\n */\nexport function xgcdNumber(a, b) {\n  // source: https://en.wikipedia.org/wiki/Extended_Euclidean_algorithm\n  var t; // used to swap two variables\n  var q; // quotient\n  var r; // remainder\n  var x = 0;\n  var lastx = 1;\n  var y = 1;\n  var lasty = 0;\n  if (!isInteger(a) || !isInteger(b)) {\n    throw new Error('Parameters in function xgcd must be integer numbers');\n  }\n  while (b) {\n    q = Math.floor(a / b);\n    r = a - q * b;\n    t = x;\n    x = lastx - q * x;\n    lastx = t;\n    t = y;\n    y = lasty - q * y;\n    lasty = t;\n    a = b;\n    b = r;\n  }\n  var res;\n  if (a < 0) {\n    res = [-a, -lastx, -lasty];\n  } else {\n    res = [a, a ? lastx : 0, lasty];\n  }\n  return res;\n}\nxgcdNumber.signature = n2;\n\n/**\n * Calculates the power of x to y, x^y, for two numbers.\n * @param {number} x\n * @param {number} y\n * @return {number} res\n */\nexport function powNumber(x, y) {\n  // x^Infinity === 0 if -1 < x < 1\n  // A real number 0 is returned instead of complex(0)\n  if (x * x < 1 && y === Infinity || x * x > 1 && y === -Infinity) {\n    return 0;\n  }\n  return Math.pow(x, y);\n}\npowNumber.signature = n2;\n\n/**\n * round a number to the given number of decimals, or to zero if decimals is\n * not provided\n * @param {number} value\n * @param {number} decimals       number of decimals, between 0 and 15 (0 by default)\n * @return {number} roundedValue\n */\nexport function roundNumber(value) {\n  var decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  if (!isInteger(decimals) || decimals < 0 || decimals > 15) {\n    throw new Error('Number of decimals in function round must be an integer from 0 to 15 inclusive');\n  }\n  return parseFloat(toFixed(value, decimals));\n}\n\n/**\n * Calculate the norm of a number, the absolute value.\n * @param {number} x\n * @return {number}\n */\nexport function normNumber(x) {\n  return Math.abs(x);\n}\nnormNumber.signature = n1;","/**\n * Compares two BigNumbers.\n * @param {BigNumber} a - First value to compare\n * @param {BigNumber} b - Second value to compare\n * @param {number} [relTol=1e-09] - The relative tolerance, indicating the maximum allowed difference relative to the larger absolute value. Must be greater than 0.\n * @param {number} [absTol=0] - The minimum absolute tolerance, useful for comparisons near zero. Must be at least 0.\n * @returns {boolean} whether the two numbers are nearly equal\n * @throws {Error} If `relTol` is less than or equal to 0.\n * @throws {Error} If `absTol` is less than 0.\n *\n * @example\n * nearlyEqual(1.000000001, 1.0, 1e-9);            // true\n * nearlyEqual(1.000000002, 1.0, 0);            // false\n * nearlyEqual(1.0, 1.009, undefined, 0.02);       // true\n * nearlyEqual(0.000000001, 0.0, undefined, 1e-8); // true\n */\nexport function nearlyEqual(a, b) {\n  var relTol = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1e-9;\n  var absTol = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  if (relTol <= 0) {\n    throw new Error('Relative tolerance must be greater than 0');\n  }\n  if (absTol < 0) {\n    throw new Error('Absolute tolerance must be at least 0');\n  }\n  // NaN\n  if (a.isNaN() || b.isNaN()) {\n    return false;\n  }\n  if (!a.isFinite() || !b.isFinite()) {\n    return a.eq(b);\n  }\n  // use \"==\" operator, handles infinities\n  if (a.eq(b)) {\n    return true;\n  }\n  // abs(a-b) <= max(relTol * max(abs(a), abs(b)), absTol)\n  return a.minus(b).abs().lte(a.constructor.max(a.constructor.max(a.abs(), b.abs()).mul(relTol), absTol));\n}","import { nearlyEqual } from './number.js';\n\n/**\n * Test whether two complex values are equal provided a given relTol and absTol.\n * Does not use or change the global Complex.EPSILON setting\n * @param {Complex} x - The first complex number for comparison.\n * @param {Complex} y - The second complex number for comparison.\n * @param {number} relTol - The relative tolerance for comparison.\n * @param {number} absTol - The absolute tolerance for comparison.\n * @returns {boolean} - Returns true if the two complex numbers are equal within the given tolerances, otherwise returns false.\n */\nexport function complexEquals(x, y, relTol, absTol) {\n  return nearlyEqual(x.re, y.re, relTol, absTol) && nearlyEqual(x.im, y.im, relTol, absTol);\n}","import { factory } from '../../utils/factory.js';\nexport var createCompareUnits = /* #__PURE__ */factory('compareUnits', ['typed'], _ref => {\n  var {\n    typed\n  } = _ref;\n  return {\n    'Unit, Unit': typed.referToSelf(self => (x, y) => {\n      if (!x.equalBase(y)) {\n        throw new Error('Cannot compare units with different base');\n      }\n      return typed.find(self, [x.valueType(), y.valueType()])(x.value, y.value);\n    })\n  };\n});","import { nearlyEqual as bigNearlyEqual } from '../../utils/bignumber/nearlyEqual.js';\nimport { nearlyEqual } from '../../utils/number.js';\nimport { factory } from '../../utils/factory.js';\nimport { complexEquals } from '../../utils/complex.js';\nimport { createCompareUnits } from './compareUnits.js';\nvar name = 'equalScalar';\nvar dependencies = ['typed', 'config'];\nexport var createEqualScalar = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    config\n  } = _ref;\n  var compareUnits = createCompareUnits({\n    typed\n  });\n\n  /**\n   * Test whether two scalar values are nearly equal.\n   *\n   * @param  {number | BigNumber | bigint | Fraction | boolean | Complex | Unit} x   First value to compare\n   * @param  {number | BigNumber | bigint | Fraction | boolean | Complex} y          Second value to compare\n   * @return {boolean}                                                  Returns true when the compared values are equal, else returns false\n   * @private\n   */\n  return typed(name, {\n    'boolean, boolean': function boolean_boolean(x, y) {\n      return x === y;\n    },\n    'number, number': function number_number(x, y) {\n      return nearlyEqual(x, y, config.relTol, config.absTol);\n    },\n    'BigNumber, BigNumber': function BigNumber_BigNumber(x, y) {\n      return x.eq(y) || bigNearlyEqual(x, y, config.relTol, config.absTol);\n    },\n    'bigint, bigint': function bigint_bigint(x, y) {\n      return x === y;\n    },\n    'Fraction, Fraction': function Fraction_Fraction(x, y) {\n      return x.equals(y);\n    },\n    'Complex, Complex': function Complex_Complex(x, y) {\n      return complexEquals(x, y, config.relTol, config.absTol);\n    }\n  }, compareUnits);\n});\nexport var createEqualScalarNumber = factory(name, ['typed', 'config'], _ref2 => {\n  var {\n    typed,\n    config\n  } = _ref2;\n  return typed(name, {\n    'number, number': function number_number(x, y) {\n      return nearlyEqual(x, y, config.relTol, config.absTol);\n    }\n  });\n});","import { isArray, isBigNumber, isCollection, isIndex, isMatrix, isNumber, isString, typeOf } from '../../utils/is.js';\nimport { isInteger } from '../../utils/number.js';\nimport { format } from '../../utils/string.js';\nimport { clone, deepStrictEqual } from '../../utils/object.js';\nimport { arraySize, getArrayDataType, processSizesWildcard, unsqueeze, validateIndex } from '../../utils/array.js';\nimport { factory } from '../../utils/factory.js';\nimport { DimensionError } from '../../error/DimensionError.js';\nimport { optimizeCallback } from '../../utils/optimizeCallback.js';\nvar name = 'SparseMatrix';\nvar dependencies = ['typed', 'equalScalar', 'Matrix'];\nexport var createSparseMatrixClass = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    equalScalar,\n    Matrix\n  } = _ref;\n  /**\n   * Sparse Matrix implementation. This type implements\n   * a [Compressed Column Storage](https://en.wikipedia.org/wiki/Sparse_matrix#Compressed_sparse_column_(CSC_or_CCS))\n   * format for two-dimensional sparse matrices.\n   * @class SparseMatrix\n   */\n  function SparseMatrix(data, datatype) {\n    if (!(this instanceof SparseMatrix)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n    if (datatype && !isString(datatype)) {\n      throw new Error('Invalid datatype: ' + datatype);\n    }\n    if (isMatrix(data)) {\n      // create from matrix\n      _createFromMatrix(this, data, datatype);\n    } else if (data && isArray(data.index) && isArray(data.ptr) && isArray(data.size)) {\n      // initialize fields\n      this._values = data.values;\n      this._index = data.index;\n      this._ptr = data.ptr;\n      this._size = data.size;\n      this._datatype = datatype || data.datatype;\n    } else if (isArray(data)) {\n      // create from array\n      _createFromArray(this, data, datatype);\n    } else if (data) {\n      // unsupported type\n      throw new TypeError('Unsupported type of data (' + typeOf(data) + ')');\n    } else {\n      // nothing provided\n      this._values = [];\n      this._index = [];\n      this._ptr = [0];\n      this._size = [0, 0];\n      this._datatype = datatype;\n    }\n  }\n  function _createFromMatrix(matrix, source, datatype) {\n    // check matrix type\n    if (source.type === 'SparseMatrix') {\n      // clone arrays\n      matrix._values = source._values ? clone(source._values) : undefined;\n      matrix._index = clone(source._index);\n      matrix._ptr = clone(source._ptr);\n      matrix._size = clone(source._size);\n      matrix._datatype = datatype || source._datatype;\n    } else {\n      // build from matrix data\n      _createFromArray(matrix, source.valueOf(), datatype || source._datatype);\n    }\n  }\n  function _createFromArray(matrix, data, datatype) {\n    // initialize fields\n    matrix._values = [];\n    matrix._index = [];\n    matrix._ptr = [];\n    matrix._datatype = datatype;\n    // discover rows & columns, do not use math.size() to avoid looping array twice\n    var rows = data.length;\n    var columns = 0;\n\n    // equal signature to use\n    var eq = equalScalar;\n    // zero value\n    var zero = 0;\n    if (isString(datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [datatype, datatype]) || equalScalar;\n      // convert 0 to the same datatype\n      zero = typed.convert(0, datatype);\n    }\n\n    // check we have rows (empty array)\n    if (rows > 0) {\n      // column index\n      var j = 0;\n      do {\n        // store pointer to values index\n        matrix._ptr.push(matrix._index.length);\n        // loop rows\n        for (var i = 0; i < rows; i++) {\n          // current row\n          var row = data[i];\n          // check row is an array\n          if (isArray(row)) {\n            // update columns if needed (only on first column)\n            if (j === 0 && columns < row.length) {\n              columns = row.length;\n            }\n            // check row has column\n            if (j < row.length) {\n              // value\n              var v = row[j];\n              // check value != 0\n              if (!eq(v, zero)) {\n                // store value\n                matrix._values.push(v);\n                // index\n                matrix._index.push(i);\n              }\n            }\n          } else {\n            // update columns if needed (only on first column)\n            if (j === 0 && columns < 1) {\n              columns = 1;\n            }\n            // check value != 0 (row is a scalar)\n            if (!eq(row, zero)) {\n              // store value\n              matrix._values.push(row);\n              // index\n              matrix._index.push(i);\n            }\n          }\n        }\n        // increment index\n        j++;\n      } while (j < columns);\n    }\n    // store number of values in ptr\n    matrix._ptr.push(matrix._index.length);\n    // size\n    matrix._size = [rows, columns];\n  }\n  SparseMatrix.prototype = new Matrix();\n\n  /**\n   * Create a new SparseMatrix\n   */\n  SparseMatrix.prototype.createSparseMatrix = function (data, datatype) {\n    return new SparseMatrix(data, datatype);\n  };\n\n  /**\n   * Attach type information\n   */\n  Object.defineProperty(SparseMatrix, 'name', {\n    value: 'SparseMatrix'\n  });\n  SparseMatrix.prototype.constructor = SparseMatrix;\n  SparseMatrix.prototype.type = 'SparseMatrix';\n  SparseMatrix.prototype.isSparseMatrix = true;\n\n  /**\n   * Get the matrix type\n   *\n   * Usage:\n   *    const matrixType = matrix.getDataType()  // retrieves the matrix type\n   *\n   * @memberOf SparseMatrix\n   * @return {string}   type information; if multiple types are found from the Matrix, it will return \"mixed\"\n   */\n  SparseMatrix.prototype.getDataType = function () {\n    return getArrayDataType(this._values, typeOf);\n  };\n\n  /**\n   * Get the storage format used by the matrix.\n   *\n   * Usage:\n   *     const format = matrix.storage()   // retrieve storage format\n   *\n   * @memberof SparseMatrix\n   * @return {string}           The storage format.\n   */\n  SparseMatrix.prototype.storage = function () {\n    return 'sparse';\n  };\n\n  /**\n   * Get the datatype of the data stored in the matrix.\n   *\n   * Usage:\n   *     const format = matrix.datatype()    // retrieve matrix datatype\n   *\n   * @memberof SparseMatrix\n   * @return {string}           The datatype.\n   */\n  SparseMatrix.prototype.datatype = function () {\n    return this._datatype;\n  };\n\n  /**\n   * Create a new SparseMatrix\n   * @memberof SparseMatrix\n   * @param {Array} data\n   * @param {string} [datatype]\n   */\n  SparseMatrix.prototype.create = function (data, datatype) {\n    return new SparseMatrix(data, datatype);\n  };\n\n  /**\n   * Get the matrix density.\n   *\n   * Usage:\n   *     const density = matrix.density()                   // retrieve matrix density\n   *\n   * @memberof SparseMatrix\n   * @return {number}           The matrix density.\n   */\n  SparseMatrix.prototype.density = function () {\n    // rows & columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n    // calculate density\n    return rows !== 0 && columns !== 0 ? this._index.length / (rows * columns) : 0;\n  };\n\n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     const subset = matrix.subset(index)               // retrieve subset\n   *     const value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @memberof SparseMatrix\n   * @param {Index} index\n   * @param {Array | Matrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n  SparseMatrix.prototype.subset = function (index, replacement, defaultValue) {\n    // check it is a pattern matrix\n    if (!this._values) {\n      throw new Error('Cannot invoke subset on a Pattern only matrix');\n    }\n\n    // check arguments\n    switch (arguments.length) {\n      case 1:\n        return _getsubset(this, index);\n\n      // intentional fall through\n      case 2:\n      case 3:\n        return _setsubset(this, index, replacement, defaultValue);\n      default:\n        throw new SyntaxError('Wrong number of arguments');\n    }\n  };\n  function _getsubset(matrix, idx) {\n    // check idx\n    if (!isIndex(idx)) {\n      throw new TypeError('Invalid index');\n    }\n    var isScalar = idx.isScalar();\n    if (isScalar) {\n      // return a scalar\n      return matrix.get(idx.min());\n    }\n    // validate dimensions\n    var size = idx.size();\n    if (size.length !== matrix._size.length) {\n      throw new DimensionError(size.length, matrix._size.length);\n    }\n\n    // vars\n    var i, ii, k, kk;\n\n    // validate if any of the ranges in the index is out of range\n    var min = idx.min();\n    var max = idx.max();\n    for (i = 0, ii = matrix._size.length; i < ii; i++) {\n      validateIndex(min[i], matrix._size[i]);\n      validateIndex(max[i], matrix._size[i]);\n    }\n\n    // matrix arrays\n    var mvalues = matrix._values;\n    var mindex = matrix._index;\n    var mptr = matrix._ptr;\n\n    // rows & columns dimensions for result matrix\n    var rows = idx.dimension(0);\n    var columns = idx.dimension(1);\n\n    // workspace & permutation vector\n    var w = [];\n    var pv = [];\n\n    // loop rows in resulting matrix\n    rows.forEach(function (i, r) {\n      // update permutation vector\n      pv[i] = r[0];\n      // mark i in workspace\n      w[i] = true;\n    });\n\n    // result matrix arrays\n    var values = mvalues ? [] : undefined;\n    var index = [];\n    var ptr = [];\n\n    // loop columns in result matrix\n    columns.forEach(function (j) {\n      // update ptr\n      ptr.push(index.length);\n      // loop values in column j\n      for (k = mptr[j], kk = mptr[j + 1]; k < kk; k++) {\n        // row\n        i = mindex[k];\n        // check row is in result matrix\n        if (w[i] === true) {\n          // push index\n          index.push(pv[i]);\n          // check we need to process values\n          if (values) {\n            values.push(mvalues[k]);\n          }\n        }\n      }\n    });\n    // update ptr\n    ptr.push(index.length);\n\n    // return matrix\n    return new SparseMatrix({\n      values,\n      index,\n      ptr,\n      size,\n      datatype: matrix._datatype\n    });\n  }\n  function _setsubset(matrix, index, submatrix, defaultValue) {\n    // check index\n    if (!index || index.isIndex !== true) {\n      throw new TypeError('Invalid index');\n    }\n\n    // get index size and check whether the index contains a single value\n    var iSize = index.size();\n    var isScalar = index.isScalar();\n\n    // calculate the size of the submatrix, and convert it into an Array if needed\n    var sSize;\n    if (isMatrix(submatrix)) {\n      // submatrix size\n      sSize = submatrix.size();\n      // use array representation\n      submatrix = submatrix.toArray();\n    } else {\n      // get submatrix size (array, scalar)\n      sSize = arraySize(submatrix);\n    }\n\n    // check index is a scalar\n    if (isScalar) {\n      // verify submatrix is a scalar\n      if (sSize.length !== 0) {\n        throw new TypeError('Scalar expected');\n      }\n      // set value\n      matrix.set(index.min(), submatrix, defaultValue);\n    } else {\n      // validate dimensions, index size must be one or two dimensions\n      if (iSize.length !== 1 && iSize.length !== 2) {\n        throw new DimensionError(iSize.length, matrix._size.length, '<');\n      }\n\n      // check submatrix and index have the same dimensions\n      if (sSize.length < iSize.length) {\n        // calculate number of missing outer dimensions\n        var i = 0;\n        var outer = 0;\n        while (iSize[i] === 1 && sSize[i] === 1) {\n          i++;\n        }\n        while (iSize[i] === 1) {\n          outer++;\n          i++;\n        }\n        // unsqueeze both outer and inner dimensions\n        submatrix = unsqueeze(submatrix, iSize.length, outer, sSize);\n      }\n\n      // check whether the size of the submatrix matches the index size\n      if (!deepStrictEqual(iSize, sSize)) {\n        throw new DimensionError(iSize, sSize, '>');\n      }\n\n      // insert the sub matrix\n      if (iSize.length === 1) {\n        // if the replacement index only has 1 dimension, go trough each one and set its value\n        var range = index.dimension(0);\n        range.forEach(function (dataIndex, subIndex) {\n          validateIndex(dataIndex);\n          matrix.set([dataIndex, 0], submatrix[subIndex[0]], defaultValue);\n        });\n      } else {\n        // if the replacement index has 2 dimensions, go through each one and set the value in the correct index\n        var firstDimensionRange = index.dimension(0);\n        var secondDimensionRange = index.dimension(1);\n        firstDimensionRange.forEach(function (firstDataIndex, firstSubIndex) {\n          validateIndex(firstDataIndex);\n          secondDimensionRange.forEach(function (secondDataIndex, secondSubIndex) {\n            validateIndex(secondDataIndex);\n            matrix.set([firstDataIndex, secondDataIndex], submatrix[firstSubIndex[0]][secondSubIndex[0]], defaultValue);\n          });\n        });\n      }\n    }\n    return matrix;\n  }\n\n  /**\n   * Get a single element from the matrix.\n   * @memberof SparseMatrix\n   * @param {number[]} index   Zero-based index\n   * @return {*} value\n   */\n  SparseMatrix.prototype.get = function (index) {\n    if (!isArray(index)) {\n      throw new TypeError('Array expected');\n    }\n    if (index.length !== this._size.length) {\n      throw new DimensionError(index.length, this._size.length);\n    }\n\n    // check it is a pattern matrix\n    if (!this._values) {\n      throw new Error('Cannot invoke get on a Pattern only matrix');\n    }\n\n    // row and column\n    var i = index[0];\n    var j = index[1];\n\n    // check i, j are valid\n    validateIndex(i, this._size[0]);\n    validateIndex(j, this._size[1]);\n\n    // find value index\n    var k = _getValueIndex(i, this._ptr[j], this._ptr[j + 1], this._index);\n    // check k is prior to next column k and it is in the correct row\n    if (k < this._ptr[j + 1] && this._index[k] === i) {\n      return this._values[k];\n    }\n    return 0;\n  };\n\n  /**\n   * Replace a single element in the matrix.\n   * @memberof SparseMatrix\n   * @param {number[]} index   Zero-based index\n   * @param {*} v\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be set to zero.\n   * @return {SparseMatrix} self\n   */\n  SparseMatrix.prototype.set = function (index, v, defaultValue) {\n    if (!isArray(index)) {\n      throw new TypeError('Array expected');\n    }\n    if (index.length !== this._size.length) {\n      throw new DimensionError(index.length, this._size.length);\n    }\n\n    // check it is a pattern matrix\n    if (!this._values) {\n      throw new Error('Cannot invoke set on a Pattern only matrix');\n    }\n\n    // row and column\n    var i = index[0];\n    var j = index[1];\n\n    // rows & columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n\n    // equal signature to use\n    var eq = equalScalar;\n    // zero value\n    var zero = 0;\n    if (isString(this._datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [this._datatype, this._datatype]) || equalScalar;\n      // convert 0 to the same datatype\n      zero = typed.convert(0, this._datatype);\n    }\n\n    // check we need to resize matrix\n    if (i > rows - 1 || j > columns - 1) {\n      // resize matrix\n      _resize(this, Math.max(i + 1, rows), Math.max(j + 1, columns), defaultValue);\n      // update rows & columns\n      rows = this._size[0];\n      columns = this._size[1];\n    }\n\n    // check i, j are valid\n    validateIndex(i, rows);\n    validateIndex(j, columns);\n\n    // find value index\n    var k = _getValueIndex(i, this._ptr[j], this._ptr[j + 1], this._index);\n    // check k is prior to next column k and it is in the correct row\n    if (k < this._ptr[j + 1] && this._index[k] === i) {\n      // check value != 0\n      if (!eq(v, zero)) {\n        // update value\n        this._values[k] = v;\n      } else {\n        // remove value from matrix\n        _remove(k, j, this._values, this._index, this._ptr);\n      }\n    } else {\n      if (!eq(v, zero)) {\n        // insert value @ (i, j)\n        _insert(k, i, j, v, this._values, this._index, this._ptr);\n      }\n    }\n    return this;\n  };\n  function _getValueIndex(i, top, bottom, index) {\n    // check row is on the bottom side\n    if (bottom - top === 0) {\n      return bottom;\n    }\n    // loop rows [top, bottom[\n    for (var r = top; r < bottom; r++) {\n      // check we found value index\n      if (index[r] === i) {\n        return r;\n      }\n    }\n    // we did not find row\n    return top;\n  }\n  function _remove(k, j, values, index, ptr) {\n    // remove value @ k\n    values.splice(k, 1);\n    index.splice(k, 1);\n    // update pointers\n    for (var x = j + 1; x < ptr.length; x++) {\n      ptr[x]--;\n    }\n  }\n  function _insert(k, i, j, v, values, index, ptr) {\n    // insert value\n    values.splice(k, 0, v);\n    // update row for k\n    index.splice(k, 0, i);\n    // update column pointers\n    for (var x = j + 1; x < ptr.length; x++) {\n      ptr[x]++;\n    }\n  }\n\n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @memberof SparseMatrix\n   * @param {number[] | Matrix} size  The new size the matrix should have.\n   *                                  Since sparse matrices are always two-dimensional,\n   *                                  size must be two numbers in either an array or a matrix\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n  SparseMatrix.prototype.resize = function (size, defaultValue, copy) {\n    // validate arguments\n    if (!isCollection(size)) {\n      throw new TypeError('Array or Matrix expected');\n    }\n\n    // SparseMatrix input is always 2d, flatten this into 1d if it's indeed a vector\n    var sizeArray = size.valueOf().map(value => {\n      return Array.isArray(value) && value.length === 1 ? value[0] : value;\n    });\n    if (sizeArray.length !== 2) {\n      throw new Error('Only two dimensions matrix are supported');\n    }\n\n    // check sizes\n    sizeArray.forEach(function (value) {\n      if (!isNumber(value) || !isInteger(value) || value < 0) {\n        throw new TypeError('Invalid size, must contain positive integers ' + '(size: ' + format(sizeArray) + ')');\n      }\n    });\n\n    // matrix to resize\n    var m = copy ? this.clone() : this;\n    // resize matrix\n    return _resize(m, sizeArray[0], sizeArray[1], defaultValue);\n  };\n  function _resize(matrix, rows, columns, defaultValue) {\n    // value to insert at the time of growing matrix\n    var value = defaultValue || 0;\n\n    // equal signature to use\n    var eq = equalScalar;\n    // zero value\n    var zero = 0;\n    if (isString(matrix._datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [matrix._datatype, matrix._datatype]) || equalScalar;\n      // convert 0 to the same datatype\n      zero = typed.convert(0, matrix._datatype);\n      // convert value to the same datatype\n      value = typed.convert(value, matrix._datatype);\n    }\n\n    // should we insert the value?\n    var ins = !eq(value, zero);\n\n    // old columns and rows\n    var r = matrix._size[0];\n    var c = matrix._size[1];\n    var i, j, k;\n\n    // check we need to increase columns\n    if (columns > c) {\n      // loop new columns\n      for (j = c; j < columns; j++) {\n        // update matrix._ptr for current column\n        matrix._ptr[j] = matrix._values.length;\n        // check we need to insert matrix._values\n        if (ins) {\n          // loop rows\n          for (i = 0; i < r; i++) {\n            // add new matrix._values\n            matrix._values.push(value);\n            // update matrix._index\n            matrix._index.push(i);\n          }\n        }\n      }\n      // store number of matrix._values in matrix._ptr\n      matrix._ptr[columns] = matrix._values.length;\n    } else if (columns < c) {\n      // truncate matrix._ptr\n      matrix._ptr.splice(columns + 1, c - columns);\n      // truncate matrix._values and matrix._index\n      matrix._values.splice(matrix._ptr[columns], matrix._values.length);\n      matrix._index.splice(matrix._ptr[columns], matrix._index.length);\n    }\n    // update columns\n    c = columns;\n\n    // check we need to increase rows\n    if (rows > r) {\n      // check we have to insert values\n      if (ins) {\n        // inserts\n        var n = 0;\n        // loop columns\n        for (j = 0; j < c; j++) {\n          // update matrix._ptr for current column\n          matrix._ptr[j] = matrix._ptr[j] + n;\n          // where to insert matrix._values\n          k = matrix._ptr[j + 1] + n;\n          // pointer\n          var p = 0;\n          // loop new rows, initialize pointer\n          for (i = r; i < rows; i++, p++) {\n            // add value\n            matrix._values.splice(k + p, 0, value);\n            // update matrix._index\n            matrix._index.splice(k + p, 0, i);\n            // increment inserts\n            n++;\n          }\n        }\n        // store number of matrix._values in matrix._ptr\n        matrix._ptr[c] = matrix._values.length;\n      }\n    } else if (rows < r) {\n      // deletes\n      var d = 0;\n      // loop columns\n      for (j = 0; j < c; j++) {\n        // update matrix._ptr for current column\n        matrix._ptr[j] = matrix._ptr[j] - d;\n        // where matrix._values start for next column\n        var k0 = matrix._ptr[j];\n        var k1 = matrix._ptr[j + 1] - d;\n        // loop matrix._index\n        for (k = k0; k < k1; k++) {\n          // row\n          i = matrix._index[k];\n          // check we need to delete value and matrix._index\n          if (i > rows - 1) {\n            // remove value\n            matrix._values.splice(k, 1);\n            // remove item from matrix._index\n            matrix._index.splice(k, 1);\n            // increase deletes\n            d++;\n          }\n        }\n      }\n      // update matrix._ptr for current column\n      matrix._ptr[j] = matrix._values.length;\n    }\n    // update matrix._size\n    matrix._size[0] = rows;\n    matrix._size[1] = columns;\n    // return matrix\n    return matrix;\n  }\n\n  /**\n   * Reshape the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (reshape in place).\n   *\n   * NOTE: This might be better suited to copy by default, instead of modifying\n   *       in place. For now, it operates in place to remain consistent with\n   *       resize().\n   *\n   * @memberof SparseMatrix\n   * @param {number[]} sizes          The new size the matrix should have.\n   *                                  Since sparse matrices are always two-dimensional,\n   *                                  size must be two numbers in either an array or a matrix\n   * @param {boolean} [copy]          Return a reshaped copy of the matrix\n   *\n   * @return {Matrix}                 The reshaped matrix\n   */\n  SparseMatrix.prototype.reshape = function (sizes, copy) {\n    // validate arguments\n    if (!isArray(sizes)) {\n      throw new TypeError('Array expected');\n    }\n    if (sizes.length !== 2) {\n      throw new Error('Sparse matrices can only be reshaped in two dimensions');\n    }\n\n    // check sizes\n    sizes.forEach(function (value) {\n      if (!isNumber(value) || !isInteger(value) || value <= -2 || value === 0) {\n        throw new TypeError('Invalid size, must contain positive integers or -1 ' + '(size: ' + format(sizes) + ')');\n      }\n    });\n    var currentLength = this._size[0] * this._size[1];\n    sizes = processSizesWildcard(sizes, currentLength);\n    var newLength = sizes[0] * sizes[1];\n\n    // m * n must not change\n    if (currentLength !== newLength) {\n      throw new Error('Reshaping sparse matrix will result in the wrong number of elements');\n    }\n\n    // matrix to reshape\n    var m = copy ? this.clone() : this;\n\n    // return unchanged if the same shape\n    if (this._size[0] === sizes[0] && this._size[1] === sizes[1]) {\n      return m;\n    }\n\n    // Convert to COO format (generate a column index)\n    var colIndex = [];\n    for (var i = 0; i < m._ptr.length; i++) {\n      for (var j = 0; j < m._ptr[i + 1] - m._ptr[i]; j++) {\n        colIndex.push(i);\n      }\n    }\n\n    // Clone the values array\n    var values = m._values.slice();\n\n    // Clone the row index array\n    var rowIndex = m._index.slice();\n\n    // Transform the (row, column) indices\n    for (var _i = 0; _i < m._index.length; _i++) {\n      var r1 = rowIndex[_i];\n      var c1 = colIndex[_i];\n      var flat = r1 * m._size[1] + c1;\n      colIndex[_i] = flat % sizes[1];\n      rowIndex[_i] = Math.floor(flat / sizes[1]);\n    }\n\n    // Now reshaping is supposed to preserve the row-major order, BUT these sparse matrices are stored\n    // in column-major order, so we have to reorder the value array now. One option is to use a multisort,\n    // sorting several arrays based on some other array.\n\n    // OR, we could easily just:\n\n    // 1. Remove all values from the matrix\n    m._values.length = 0;\n    m._index.length = 0;\n    m._ptr.length = sizes[1] + 1;\n    m._size = sizes.slice();\n    for (var _i2 = 0; _i2 < m._ptr.length; _i2++) {\n      m._ptr[_i2] = 0;\n    }\n\n    // 2. Re-insert all elements in the proper order (simplified code from SparseMatrix.prototype.set)\n    // This step is probably the most time-consuming\n    for (var h = 0; h < values.length; h++) {\n      var _i3 = rowIndex[h];\n      var _j = colIndex[h];\n      var v = values[h];\n      var k = _getValueIndex(_i3, m._ptr[_j], m._ptr[_j + 1], m._index);\n      _insert(k, _i3, _j, v, m._values, m._index, m._ptr);\n    }\n\n    // The value indices are inserted out of order, but apparently that's... still OK?\n\n    return m;\n  };\n\n  /**\n   * Create a clone of the matrix\n   * @memberof SparseMatrix\n   * @return {SparseMatrix} clone\n   */\n  SparseMatrix.prototype.clone = function () {\n    var m = new SparseMatrix({\n      values: this._values ? clone(this._values) : undefined,\n      index: clone(this._index),\n      ptr: clone(this._ptr),\n      size: clone(this._size),\n      datatype: this._datatype\n    });\n    return m;\n  };\n\n  /**\n   * Retrieve the size of the matrix.\n   * @memberof SparseMatrix\n   * @returns {number[]} size\n   */\n  SparseMatrix.prototype.size = function () {\n    return this._size.slice(0); // copy the Array\n  };\n\n  /**\n   * Create a new matrix with the results of the callback function executed on\n   * each entry of the matrix.\n   * @memberof SparseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   *\n   * @return {SparseMatrix} matrix\n   */\n  SparseMatrix.prototype.map = function (callback, skipZeros) {\n    // check it is a pattern matrix\n    if (!this._values) {\n      throw new Error('Cannot invoke map on a Pattern only matrix');\n    }\n    // matrix instance\n    var me = this;\n    // rows and columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n    var fastCallback = optimizeCallback(callback, me, 'map');\n    // invoke callback\n    var invoke = function invoke(v, i, j) {\n      // invoke callback\n      return fastCallback(v, [i, j], me);\n    };\n    // invoke _map\n    return _map(this, 0, rows - 1, 0, columns - 1, invoke, skipZeros);\n  };\n\n  /**\n   * Create a new matrix with the results of the callback function executed on the interval\n   * [minRow..maxRow, minColumn..maxColumn].\n   */\n  function _map(matrix, minRow, maxRow, minColumn, maxColumn, callback, skipZeros) {\n    // result arrays\n    var values = [];\n    var index = [];\n    var ptr = [];\n\n    // equal signature to use\n    var eq = equalScalar;\n    // zero value\n    var zero = 0;\n    if (isString(matrix._datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [matrix._datatype, matrix._datatype]) || equalScalar;\n      // convert 0 to the same datatype\n      zero = typed.convert(0, matrix._datatype);\n    }\n\n    // invoke callback\n    var invoke = function invoke(v, x, y) {\n      // invoke callback\n      var value = callback(v, x, y);\n      // check value != 0\n      if (!eq(value, zero)) {\n        // store value\n        values.push(value);\n        // index\n        index.push(x);\n      }\n    };\n    // loop columns\n    for (var j = minColumn; j <= maxColumn; j++) {\n      // store pointer to values index\n      ptr.push(values.length);\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = matrix._ptr[j];\n      var k1 = matrix._ptr[j + 1];\n      if (skipZeros) {\n        // loop k within [k0, k1[\n        for (var k = k0; k < k1; k++) {\n          // row index\n          var i = matrix._index[k];\n          // check i is in range\n          if (i >= minRow && i <= maxRow) {\n            // value @ k\n            invoke(matrix._values[k], i - minRow, j - minColumn);\n          }\n        }\n      } else {\n        // create a cache holding all defined values\n        var _values = {};\n        for (var _k = k0; _k < k1; _k++) {\n          var _i4 = matrix._index[_k];\n          _values[_i4] = matrix._values[_k];\n        }\n\n        // loop over all rows (indexes can be unordered so we can't use that),\n        // and either read the value or zero\n        for (var _i5 = minRow; _i5 <= maxRow; _i5++) {\n          var value = _i5 in _values ? _values[_i5] : 0;\n          invoke(value, _i5 - minRow, j - minColumn);\n        }\n      }\n    }\n\n    // store number of values in ptr\n    ptr.push(values.length);\n    // return sparse matrix\n    return new SparseMatrix({\n      values,\n      index,\n      ptr,\n      size: [maxRow - minRow + 1, maxColumn - minColumn + 1]\n    });\n  }\n\n  /**\n   * Execute a callback function on each entry of the matrix.\n   * @memberof SparseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   *                              If false, the indices are guaranteed to be in order,\n   *                              if true, the indices can be unordered.\n   */\n  SparseMatrix.prototype.forEach = function (callback, skipZeros) {\n    // check it is a pattern matrix\n    if (!this._values) {\n      throw new Error('Cannot invoke forEach on a Pattern only matrix');\n    }\n    // matrix instance\n    var me = this;\n    // rows and columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n    var fastCallback = optimizeCallback(callback, me, 'forEach');\n    // loop columns\n    for (var j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = this._ptr[j];\n      var k1 = this._ptr[j + 1];\n      if (skipZeros) {\n        // loop k within [k0, k1[\n        for (var k = k0; k < k1; k++) {\n          // row index\n          var i = this._index[k];\n\n          // value @ k\n          fastCallback(this._values[k], [i, j], me);\n        }\n      } else {\n        // create a cache holding all defined values\n        var values = {};\n        for (var _k2 = k0; _k2 < k1; _k2++) {\n          var _i6 = this._index[_k2];\n          values[_i6] = this._values[_k2];\n        }\n\n        // loop over all rows (indexes can be unordered so we can't use that),\n        // and either read the value or zero\n        for (var _i7 = 0; _i7 < rows; _i7++) {\n          var value = _i7 in values ? values[_i7] : 0;\n          fastCallback(value, [_i7, j], me);\n        }\n      }\n    }\n  };\n\n  /**\n   * Iterate over the matrix elements, skipping zeros\n   * @return {Iterable<{ value, index: number[] }>}\n   */\n  SparseMatrix.prototype[Symbol.iterator] = function* () {\n    if (!this._values) {\n      throw new Error('Cannot iterate a Pattern only matrix');\n    }\n    var columns = this._size[1];\n    for (var j = 0; j < columns; j++) {\n      var k0 = this._ptr[j];\n      var k1 = this._ptr[j + 1];\n      for (var k = k0; k < k1; k++) {\n        // row index\n        var i = this._index[k];\n        yield {\n          value: this._values[k],\n          index: [i, j]\n        };\n      }\n    }\n  };\n\n  /**\n   * Create an Array with a copy of the data of the SparseMatrix\n   * @memberof SparseMatrix\n   * @returns {Array} array\n   */\n  SparseMatrix.prototype.toArray = function () {\n    return _toArray(this._values, this._index, this._ptr, this._size, true);\n  };\n\n  /**\n   * Get the primitive value of the SparseMatrix: a two dimensions array\n   * @memberof SparseMatrix\n   * @returns {Array} array\n   */\n  SparseMatrix.prototype.valueOf = function () {\n    return _toArray(this._values, this._index, this._ptr, this._size, false);\n  };\n  function _toArray(values, index, ptr, size, copy) {\n    // rows and columns\n    var rows = size[0];\n    var columns = size[1];\n    // result\n    var a = [];\n    // vars\n    var i, j;\n    // initialize array\n    for (i = 0; i < rows; i++) {\n      a[i] = [];\n      for (j = 0; j < columns; j++) {\n        a[i][j] = 0;\n      }\n    }\n\n    // loop columns\n    for (j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = ptr[j];\n      var k1 = ptr[j + 1];\n      // loop k within [k0, k1[\n      for (var k = k0; k < k1; k++) {\n        // row index\n        i = index[k];\n        // set value (use one for pattern matrix)\n        a[i][j] = values ? copy ? clone(values[k]) : values[k] : 1;\n      }\n    }\n    return a;\n  }\n\n  /**\n   * Get a string representation of the matrix, with optional formatting options.\n   * @memberof SparseMatrix\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n  SparseMatrix.prototype.format = function (options) {\n    // rows and columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n    // density\n    var density = this.density();\n    // rows & columns\n    var str = 'Sparse Matrix [' + format(rows, options) + ' x ' + format(columns, options) + '] density: ' + format(density, options) + '\\n';\n    // loop columns\n    for (var j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = this._ptr[j];\n      var k1 = this._ptr[j + 1];\n      // loop k within [k0, k1[\n      for (var k = k0; k < k1; k++) {\n        // row index\n        var i = this._index[k];\n        // append value\n        str += '\\n    (' + format(i, options) + ', ' + format(j, options) + ') ==> ' + (this._values ? format(this._values[k], options) : 'X');\n      }\n    }\n    return str;\n  };\n\n  /**\n   * Get a string representation of the matrix\n   * @memberof SparseMatrix\n   * @returns {string} str\n   */\n  SparseMatrix.prototype.toString = function () {\n    return format(this.toArray());\n  };\n\n  /**\n   * Get a JSON representation of the matrix\n   * @memberof SparseMatrix\n   * @returns {Object}\n   */\n  SparseMatrix.prototype.toJSON = function () {\n    return {\n      mathjs: 'SparseMatrix',\n      values: this._values,\n      index: this._index,\n      ptr: this._ptr,\n      size: this._size,\n      datatype: this._datatype\n    };\n  };\n\n  /**\n   * Get the kth Matrix diagonal.\n   *\n   * @memberof SparseMatrix\n   * @param {number | BigNumber} [k=0]     The kth diagonal where the vector will retrieved.\n   *\n   * @returns {Matrix}                     The matrix vector with the diagonal values.\n   */\n  SparseMatrix.prototype.diagonal = function (k) {\n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if (isBigNumber(k)) {\n        k = k.toNumber();\n      }\n      // is must be an integer\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError('The parameter k must be an integer number');\n      }\n    } else {\n      // default value\n      k = 0;\n    }\n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0;\n\n    // rows & columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n\n    // number diagonal values\n    var n = Math.min(rows - kSub, columns - kSuper);\n\n    // diagonal arrays\n    var values = [];\n    var index = [];\n    var ptr = [];\n    // initial ptr value\n    ptr[0] = 0;\n    // loop columns\n    for (var j = kSuper; j < columns && values.length < n; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = this._ptr[j];\n      var k1 = this._ptr[j + 1];\n      // loop x within [k0, k1[\n      for (var x = k0; x < k1; x++) {\n        // row index\n        var i = this._index[x];\n        // check row\n        if (i === j - kSuper + kSub) {\n          // value on this column\n          values.push(this._values[x]);\n          // store row\n          index[values.length - 1] = i - kSub;\n          // exit loop\n          break;\n        }\n      }\n    }\n    // close ptr\n    ptr.push(values.length);\n    // return matrix\n    return new SparseMatrix({\n      values,\n      index,\n      ptr,\n      size: [n, 1]\n    });\n  };\n\n  /**\n   * Generate a matrix from a JSON object\n   * @memberof SparseMatrix\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"SparseMatrix\", \"values\": [], \"index\": [], \"ptr\": [], \"size\": []}`,\n   *                       where mathjs is optional\n   * @returns {SparseMatrix}\n   */\n  SparseMatrix.fromJSON = function (json) {\n    return new SparseMatrix(json);\n  };\n\n  /**\n   * Create a diagonal matrix.\n   *\n   * @memberof SparseMatrix\n   * @param {Array} size                       The matrix size.\n   * @param {number | Array | Matrix } value   The values for the diagonal.\n   * @param {number | BigNumber} [k=0]         The kth diagonal where the vector will be filled in.\n   * @param {number} [defaultValue]            The default value for non-diagonal\n   * @param {string} [datatype]                The Matrix datatype, values must be of this datatype.\n   *\n   * @returns {SparseMatrix}\n   */\n  SparseMatrix.diagonal = function (size, value, k, defaultValue, datatype) {\n    if (!isArray(size)) {\n      throw new TypeError('Array expected, size parameter');\n    }\n    if (size.length !== 2) {\n      throw new Error('Only two dimensions matrix are supported');\n    }\n\n    // map size & validate\n    size = size.map(function (s) {\n      // check it is a big number\n      if (isBigNumber(s)) {\n        // convert it\n        s = s.toNumber();\n      }\n      // validate arguments\n      if (!isNumber(s) || !isInteger(s) || s < 1) {\n        throw new Error('Size values must be positive integers');\n      }\n      return s;\n    });\n\n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if (isBigNumber(k)) {\n        k = k.toNumber();\n      }\n      // is must be an integer\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError('The parameter k must be an integer number');\n      }\n    } else {\n      // default value\n      k = 0;\n    }\n\n    // equal signature to use\n    var eq = equalScalar;\n    // zero value\n    var zero = 0;\n    if (isString(datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [datatype, datatype]) || equalScalar;\n      // convert 0 to the same datatype\n      zero = typed.convert(0, datatype);\n    }\n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0;\n\n    // rows and columns\n    var rows = size[0];\n    var columns = size[1];\n\n    // number of non-zero items\n    var n = Math.min(rows - kSub, columns - kSuper);\n\n    // value extraction function\n    var _value;\n\n    // check value\n    if (isArray(value)) {\n      // validate array\n      if (value.length !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid value array length');\n      }\n      // define function\n      _value = function _value(i) {\n        // return value @ i\n        return value[i];\n      };\n    } else if (isMatrix(value)) {\n      // matrix size\n      var ms = value.size();\n      // validate matrix\n      if (ms.length !== 1 || ms[0] !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid matrix length');\n      }\n      // define function\n      _value = function _value(i) {\n        // return value @ i\n        return value.get([i]);\n      };\n    } else {\n      // define function\n      _value = function _value() {\n        // return value\n        return value;\n      };\n    }\n\n    // create arrays\n    var values = [];\n    var index = [];\n    var ptr = [];\n\n    // loop items\n    for (var j = 0; j < columns; j++) {\n      // number of rows with value\n      ptr.push(values.length);\n      // diagonal index\n      var i = j - kSuper;\n      // check we need to set diagonal value\n      if (i >= 0 && i < n) {\n        // get value @ i\n        var v = _value(i);\n        // check for zero\n        if (!eq(v, zero)) {\n          // column\n          index.push(i + kSub);\n          // add value\n          values.push(v);\n        }\n      }\n    }\n    // last value should be number of values\n    ptr.push(values.length);\n    // create SparseMatrix\n    return new SparseMatrix({\n      values,\n      index,\n      ptr,\n      size: [rows, columns]\n    });\n  };\n\n  /**\n   * Swap rows i and j in Matrix.\n   *\n   * @memberof SparseMatrix\n   * @param {number} i       Matrix row index 1\n   * @param {number} j       Matrix row index 2\n   *\n   * @return {Matrix}        The matrix reference\n   */\n  SparseMatrix.prototype.swapRows = function (i, j) {\n    // check index\n    if (!isNumber(i) || !isInteger(i) || !isNumber(j) || !isInteger(j)) {\n      throw new Error('Row index must be positive integers');\n    }\n    // check dimensions\n    if (this._size.length !== 2) {\n      throw new Error('Only two dimensional matrix is supported');\n    }\n    // validate index\n    validateIndex(i, this._size[0]);\n    validateIndex(j, this._size[0]);\n\n    // swap rows\n    SparseMatrix._swapRows(i, j, this._size[1], this._values, this._index, this._ptr);\n    // return current instance\n    return this;\n  };\n\n  /**\n   * Loop rows with data in column j.\n   *\n   * @param {number} j            Column\n   * @param {Array} values        Matrix values\n   * @param {Array} index         Matrix row indeces\n   * @param {Array} ptr           Matrix column pointers\n   * @param {Function} callback   Callback function invoked for every row in column j\n   */\n  SparseMatrix._forEachRow = function (j, values, index, ptr, callback) {\n    // indeces for column j\n    var k0 = ptr[j];\n    var k1 = ptr[j + 1];\n\n    // loop\n    for (var k = k0; k < k1; k++) {\n      // invoke callback\n      callback(index[k], values[k]);\n    }\n  };\n\n  /**\n   * Swap rows x and y in Sparse Matrix data structures.\n   *\n   * @param {number} x         Matrix row index 1\n   * @param {number} y         Matrix row index 2\n   * @param {number} columns   Number of columns in matrix\n   * @param {Array} values     Matrix values\n   * @param {Array} index      Matrix row indeces\n   * @param {Array} ptr        Matrix column pointers\n   */\n  SparseMatrix._swapRows = function (x, y, columns, values, index, ptr) {\n    // loop columns\n    for (var j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = ptr[j];\n      var k1 = ptr[j + 1];\n      // find value index @ x\n      var kx = _getValueIndex(x, k0, k1, index);\n      // find value index @ x\n      var ky = _getValueIndex(y, k0, k1, index);\n      // check both rows exist in matrix\n      if (kx < k1 && ky < k1 && index[kx] === x && index[ky] === y) {\n        // swap values (check for pattern matrix)\n        if (values) {\n          var v = values[kx];\n          values[kx] = values[ky];\n          values[ky] = v;\n        }\n        // next column\n        continue;\n      }\n      // check x row exist & no y row\n      if (kx < k1 && index[kx] === x && (ky >= k1 || index[ky] !== y)) {\n        // value @ x (check for pattern matrix)\n        var vx = values ? values[kx] : undefined;\n        // insert value @ y\n        index.splice(ky, 0, y);\n        if (values) {\n          values.splice(ky, 0, vx);\n        }\n        // remove value @ x (adjust array index if needed)\n        index.splice(ky <= kx ? kx + 1 : kx, 1);\n        if (values) {\n          values.splice(ky <= kx ? kx + 1 : kx, 1);\n        }\n        // next column\n        continue;\n      }\n      // check y row exist & no x row\n      if (ky < k1 && index[ky] === y && (kx >= k1 || index[kx] !== x)) {\n        // value @ y (check for pattern matrix)\n        var vy = values ? values[ky] : undefined;\n        // insert value @ x\n        index.splice(kx, 0, x);\n        if (values) {\n          values.splice(kx, 0, vy);\n        }\n        // remove value @ y (adjust array index if needed)\n        index.splice(kx <= ky ? ky + 1 : ky, 1);\n        if (values) {\n          values.splice(kx <= ky ? ky + 1 : ky, 1);\n        }\n      }\n    }\n  };\n  return SparseMatrix;\n}, {\n  isClass: true\n});","import { factory } from '../../../utils/factory.js';\nvar name = 'matrix';\nvar dependencies = ['typed', 'Matrix', 'DenseMatrix', 'SparseMatrix'];\nexport var createMatrix = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    Matrix,\n    DenseMatrix,\n    SparseMatrix\n  } = _ref;\n  /**\n   * Create a Matrix. The function creates a new `math.Matrix` object from\n   * an `Array`. A Matrix has utility functions to manipulate the data in the\n   * matrix, like getting the size and getting or setting values in the matrix.\n   * Supported storage formats are 'dense' and 'sparse'.\n   *\n   * Syntax:\n   *\n   *    math.matrix()                         // creates an empty matrix using default storage format (dense).\n   *    math.matrix(data)                     // creates a matrix with initial data using default storage format (dense).\n   *    math.matrix('dense')                  // creates an empty matrix using the given storage format.\n   *    math.matrix(data, 'dense')            // creates a matrix with initial data using the given storage format.\n   *    math.matrix(data, 'sparse')           // creates a sparse matrix with initial data.\n   *    math.matrix(data, 'sparse', 'number') // creates a sparse matrix with initial data, number data type.\n   *\n   * Examples:\n   *\n   *    let m = math.matrix([[1, 2], [3, 4]])\n   *    m.size()                        // Array [2, 2]\n   *    m.resize([3, 2], 5)\n   *    m.valueOf()                     // Array [[1, 2], [3, 4], [5, 5]]\n   *    m.get([1, 0])                    // number 3\n   *\n   * See also:\n   *\n   *    bignumber, boolean, complex, index, number, string, unit, sparse\n   *\n   * @param {Array | Matrix} [data]    A multi dimensional array\n   * @param {string} [format]          The Matrix storage format, either `'dense'` or `'sparse'`\n   * @param {string} [datatype]        Type of the values\n   *\n   * @return {Matrix} The created matrix\n   */\n  return typed(name, {\n    '': function _() {\n      return _create([]);\n    },\n    string: function string(format) {\n      return _create([], format);\n    },\n    'string, string': function string_string(format, datatype) {\n      return _create([], format, datatype);\n    },\n    Array: function Array(data) {\n      return _create(data);\n    },\n    Matrix: function Matrix(data) {\n      return _create(data, data.storage());\n    },\n    'Array | Matrix, string': _create,\n    'Array | Matrix, string, string': _create\n  });\n\n  /**\n   * Create a new Matrix with given storage format\n   * @param {Array} data\n   * @param {string} [format]\n   * @param {string} [datatype]\n   * @returns {Matrix} Returns a new Matrix\n   * @private\n   */\n  function _create(data, format, datatype) {\n    // get storage format constructor\n    if (format === 'dense' || format === 'default' || format === undefined) {\n      return new DenseMatrix(data, datatype);\n    }\n    if (format === 'sparse') {\n      return new SparseMatrix(data, datatype);\n    }\n    throw new TypeError('Unknown matrix type ' + JSON.stringify(format) + '.');\n  }\n});","import { factory } from '../../utils/factory.js';\nimport { addNumber } from '../../plain/number/index.js';\nvar name = 'addScalar';\nvar dependencies = ['typed'];\nexport var createAddScalar = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Add two scalar values, `x + y`.\n   * This function is meant for internal use: it is used by the public function\n   * `add`\n   *\n   * This function does not support collections (Array or Matrix).\n   *\n   * @param  {number | BigNumber | bigint | Fraction | Complex | Unit} x   First value to add\n   * @param  {number | BigNumber | bigint | Fraction | Complex} y          Second value to add\n   * @return {number | BigNumber | bigint | Fraction | Complex | Unit}     Sum of `x` and `y`\n   * @private\n   */\n  return typed(name, {\n    'number, number': addNumber,\n    'Complex, Complex': function Complex_Complex(x, y) {\n      return x.add(y);\n    },\n    'BigNumber, BigNumber': function BigNumber_BigNumber(x, y) {\n      return x.plus(y);\n    },\n    'bigint, bigint': function bigint_bigint(x, y) {\n      return x + y;\n    },\n    'Fraction, Fraction': function Fraction_Fraction(x, y) {\n      return x.add(y);\n    },\n    'Unit, Unit': typed.referToSelf(self => (x, y) => {\n      if (x.value === null || x.value === undefined) {\n        throw new Error('Parameter x contains a unit with undefined value');\n      }\n      if (y.value === null || y.value === undefined) {\n        throw new Error('Parameter y contains a unit with undefined value');\n      }\n      if (!x.equalBase(y)) throw new Error('Units do not match');\n      var res = x.clone();\n      res.value = typed.find(self, [res.valueType(), y.valueType()])(res.value, y.value);\n      res.fixPrefix = false;\n      return res;\n    })\n  });\n});","import { factory } from '../../../utils/factory.js';\nvar name = 'matAlgo11xS0s';\nvar dependencies = ['typed', 'equalScalar'];\nexport var createMatAlgo11xS0s = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    equalScalar\n  } = _ref;\n  /**\n   * Iterates over SparseMatrix S nonzero items and invokes the callback function f(Sij, b).\n   * Callback function invoked NZ times (number of nonzero items in S).\n   *\n   *\n   *          ┌  f(Sij, b)  ; S(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  0          ; otherwise\n   *\n   *\n   * @param {Matrix}   s                 The SparseMatrix instance (S)\n   * @param {Scalar}   b                 The Scalar value\n   * @param {Function} callback          The f(Aij,b) operation to invoke\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Sij)\n   *\n   * @return {Matrix}                    SparseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97626813\n   */\n  return function matAlgo11xS0s(s, b, callback, inverse) {\n    // sparse matrix arrays\n    var avalues = s._values;\n    var aindex = s._index;\n    var aptr = s._ptr;\n    var asize = s._size;\n    var adt = s._datatype;\n\n    // sparse matrix cannot be a Pattern matrix\n    if (!avalues) {\n      throw new Error('Cannot perform operation on Pattern Sparse Matrix and Scalar value');\n    }\n\n    // rows & columns\n    var rows = asize[0];\n    var columns = asize[1];\n\n    // datatype\n    var dt;\n    // equal signature to use\n    var eq = equalScalar;\n    // zero value\n    var zero = 0;\n    // callback signature to use\n    var cf = callback;\n\n    // process data types\n    if (typeof adt === 'string') {\n      // datatype\n      dt = adt;\n      // find signature that matches (dt, dt)\n      eq = typed.find(equalScalar, [dt, dt]);\n      // convert 0 to the same datatype\n      zero = typed.convert(0, dt);\n      // convert b to the same datatype\n      b = typed.convert(b, dt);\n      // callback\n      cf = typed.find(callback, [dt, dt]);\n    }\n\n    // result arrays\n    var cvalues = [];\n    var cindex = [];\n    var cptr = [];\n\n    // loop columns\n    for (var j = 0; j < columns; j++) {\n      // initialize ptr\n      cptr[j] = cindex.length;\n      // values in j\n      for (var k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        var i = aindex[k];\n        // invoke callback\n        var v = inverse ? cf(b, avalues[k]) : cf(avalues[k], b);\n        // check value is zero\n        if (!eq(v, zero)) {\n          // push index & value\n          cindex.push(i);\n          cvalues.push(v);\n        }\n      }\n    }\n    // update ptr\n    cptr[columns] = cindex.length;\n\n    // return sparse matrix\n    return s.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});","import { factory } from '../../../utils/factory.js';\nimport { clone } from '../../../utils/object.js';\nvar name = 'matAlgo14xDs';\nvar dependencies = ['typed'];\nexport var createMatAlgo14xDs = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Iterates over DenseMatrix items and invokes the callback function f(Aij..z, b).\n   * Callback function invoked MxN times.\n   *\n   * C(i,j,...z) = f(Aij..z, b)\n   *\n   * @param {Matrix}   a                 The DenseMatrix instance (A)\n   * @param {Scalar}   b                 The Scalar value\n   * @param {Function} callback          The f(Aij..z,b) operation to invoke\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Aij..z)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97659042\n   */\n  return function matAlgo14xDs(a, b, callback, inverse) {\n    // a arrays\n    var adata = a._data;\n    var asize = a._size;\n    var adt = a._datatype;\n\n    // datatype\n    var dt;\n    // callback signature to use\n    var cf = callback;\n\n    // process data types\n    if (typeof adt === 'string') {\n      // datatype\n      dt = adt;\n      // convert b to the same datatype\n      b = typed.convert(b, dt);\n      // callback\n      cf = typed.find(callback, [dt, dt]);\n    }\n\n    // populate cdata, iterate through dimensions\n    var cdata = asize.length > 0 ? _iterate(cf, 0, asize, asize[0], adata, b, inverse) : [];\n\n    // c matrix\n    return a.createDenseMatrix({\n      data: cdata,\n      size: clone(asize),\n      datatype: dt\n    });\n  };\n\n  // recursive function\n  function _iterate(f, level, s, n, av, bv, inverse) {\n    // initialize array for this level\n    var cv = [];\n    // check we reach the last level\n    if (level === s.length - 1) {\n      // loop arrays in last level\n      for (var i = 0; i < n; i++) {\n        // invoke callback and store value\n        cv[i] = inverse ? f(bv, av[i]) : f(av[i], bv);\n      }\n    } else {\n      // iterate current level\n      for (var j = 0; j < n; j++) {\n        // iterate next level\n        cv[j] = _iterate(f, level + 1, s, s[level + 1], av[j], bv, inverse);\n      }\n    }\n    return cv;\n  }\n});","import { factory } from '../../../utils/factory.js';\nimport { DimensionError } from '../../../error/DimensionError.js';\nvar name = 'matAlgo13xDD';\nvar dependencies = ['typed'];\nexport var createMatAlgo13xDD = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Iterates over DenseMatrix items and invokes the callback function f(Aij..z, Bij..z).\n   * Callback function invoked MxN times.\n   *\n   * C(i,j,...z) = f(Aij..z, Bij..z)\n   *\n   * @param {Matrix}   a                 The DenseMatrix instance (A)\n   * @param {Matrix}   b                 The DenseMatrix instance (B)\n   * @param {Function} callback          The f(Aij..z,Bij..z) operation to invoke\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97658658\n   */\n  return function matAlgo13xDD(a, b, callback) {\n    // a arrays\n    var adata = a._data;\n    var asize = a._size;\n    var adt = a._datatype;\n    // b arrays\n    var bdata = b._data;\n    var bsize = b._size;\n    var bdt = b._datatype;\n    // c arrays\n    var csize = [];\n\n    // validate dimensions\n    if (asize.length !== bsize.length) {\n      throw new DimensionError(asize.length, bsize.length);\n    }\n\n    // validate each one of the dimension sizes\n    for (var s = 0; s < asize.length; s++) {\n      // must match\n      if (asize[s] !== bsize[s]) {\n        throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n      }\n      // update dimension in c\n      csize[s] = asize[s];\n    }\n\n    // datatype\n    var dt;\n    // callback signature to use\n    var cf = callback;\n\n    // process data types\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt;\n      // callback\n      cf = typed.find(callback, [dt, dt]);\n    }\n\n    // populate cdata, iterate through dimensions\n    var cdata = csize.length > 0 ? _iterate(cf, 0, csize, csize[0], adata, bdata) : [];\n\n    // c matrix\n    return a.createDenseMatrix({\n      data: cdata,\n      size: csize,\n      datatype: dt\n    });\n  };\n\n  // recursive function\n  function _iterate(f, level, s, n, av, bv) {\n    // initialize array for this level\n    var cv = [];\n    // check we reach the last level\n    if (level === s.length - 1) {\n      // loop arrays in last level\n      for (var i = 0; i < n; i++) {\n        // invoke callback and store value\n        cv[i] = f(av[i], bv[i]);\n      }\n    } else {\n      // iterate current level\n      for (var j = 0; j < n; j++) {\n        // iterate next level\n        cv[j] = _iterate(f, level + 1, s, s[level + 1], av[j], bv[j]);\n      }\n    }\n    return cv;\n  }\n});","import { broadcastSizes, broadcastTo } from '../../../utils/array.js';\nimport { deepStrictEqual } from '../../../utils/object.js';\n\n/**\n* Broadcasts two matrices, and return both in an array\n* It checks if it's possible with broadcasting rules\n*\n* @param {Matrix}   A      First Matrix\n* @param {Matrix}   B      Second Matrix\n*\n* @return {Matrix[]}      [ broadcastedA, broadcastedB ]\n*/\n\nexport function broadcast(A, B) {\n  if (deepStrictEqual(A.size(), B.size())) {\n    // If matrices have the same size return them\n    return [A, B];\n  }\n\n  // calculate the broadcasted sizes\n  var newSize = broadcastSizes(A.size(), B.size());\n\n  // return the array with the two broadcasted matrices\n  return [A, B].map(M => _broadcastTo(M, newSize));\n}\n\n/**\n * Broadcasts a matrix to the given size.\n *\n * @param {Matrix} M - The matrix to be broadcasted.\n * @param {number[]} size - The desired size of the broadcasted matrix.\n * @returns {Matrix} The broadcasted matrix.\n * @throws {Error} If the size parameter is not an array of numbers.\n */\nfunction _broadcastTo(M, size) {\n  if (deepStrictEqual(M.size(), size)) {\n    return M;\n  }\n  return M.create(broadcastTo(M.valueOf(), size), M.datatype());\n}","import { factory } from '../../../utils/factory.js';\nimport { extend } from '../../../utils/object.js';\nimport { createMatAlgo13xDD } from './matAlgo13xDD.js';\nimport { createMatAlgo14xDs } from './matAlgo14xDs.js';\nimport { broadcast } from './broadcast.js';\nvar name = 'matrixAlgorithmSuite';\nvar dependencies = ['typed', 'matrix'];\nexport var createMatrixAlgorithmSuite = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix\n  } = _ref;\n  var matAlgo13xDD = createMatAlgo13xDD({\n    typed\n  });\n  var matAlgo14xDs = createMatAlgo14xDs({\n    typed\n  });\n\n  /**\n   * Return a signatures object with the usual boilerplate of\n   * matrix algorithms, based on a plain options object with the\n   * following properties:\n   *   elop: function -- the elementwise operation to use, defaults to self\n   *   SS: function -- the algorithm to apply for two sparse matrices\n   *   DS: function -- the algorithm to apply for a dense and a sparse matrix\n   *   SD: function -- algo for a sparse and a dense; defaults to SD flipped\n   *   Ss: function -- the algorithm to apply for a sparse matrix and scalar\n   *   sS: function -- algo for scalar and sparse; defaults to Ss flipped\n   *   scalar: string -- typed-function type for scalars, defaults to 'any'\n   *\n   * If Ss is not specified, no matrix-scalar signatures are generated.\n   *\n   * @param {object} options\n   * @return {Object<string, function>} signatures\n   */\n  return function matrixAlgorithmSuite(options) {\n    var elop = options.elop;\n    var SD = options.SD || options.DS;\n    var matrixSignatures;\n    if (elop) {\n      // First the dense ones\n      matrixSignatures = {\n        'DenseMatrix, DenseMatrix': (x, y) => matAlgo13xDD(...broadcast(x, y), elop),\n        'Array, Array': (x, y) => matAlgo13xDD(...broadcast(matrix(x), matrix(y)), elop).valueOf(),\n        'Array, DenseMatrix': (x, y) => matAlgo13xDD(...broadcast(matrix(x), y), elop),\n        'DenseMatrix, Array': (x, y) => matAlgo13xDD(...broadcast(x, matrix(y)), elop)\n      };\n      // Now incorporate sparse matrices\n      if (options.SS) {\n        matrixSignatures['SparseMatrix, SparseMatrix'] = (x, y) => options.SS(...broadcast(x, y), elop, false);\n      }\n      if (options.DS) {\n        matrixSignatures['DenseMatrix, SparseMatrix'] = (x, y) => options.DS(...broadcast(x, y), elop, false);\n        matrixSignatures['Array, SparseMatrix'] = (x, y) => options.DS(...broadcast(matrix(x), y), elop, false);\n      }\n      if (SD) {\n        matrixSignatures['SparseMatrix, DenseMatrix'] = (x, y) => SD(...broadcast(y, x), elop, true);\n        matrixSignatures['SparseMatrix, Array'] = (x, y) => SD(...broadcast(matrix(y), x), elop, true);\n      }\n    } else {\n      // No elop, use this\n      // First the dense ones\n      matrixSignatures = {\n        'DenseMatrix, DenseMatrix': typed.referToSelf(self => (x, y) => {\n          return matAlgo13xDD(...broadcast(x, y), self);\n        }),\n        'Array, Array': typed.referToSelf(self => (x, y) => {\n          return matAlgo13xDD(...broadcast(matrix(x), matrix(y)), self).valueOf();\n        }),\n        'Array, DenseMatrix': typed.referToSelf(self => (x, y) => {\n          return matAlgo13xDD(...broadcast(matrix(x), y), self);\n        }),\n        'DenseMatrix, Array': typed.referToSelf(self => (x, y) => {\n          return matAlgo13xDD(...broadcast(x, matrix(y)), self);\n        })\n      };\n      // Now incorporate sparse matrices\n      if (options.SS) {\n        matrixSignatures['SparseMatrix, SparseMatrix'] = typed.referToSelf(self => (x, y) => {\n          return options.SS(...broadcast(x, y), self, false);\n        });\n      }\n      if (options.DS) {\n        matrixSignatures['DenseMatrix, SparseMatrix'] = typed.referToSelf(self => (x, y) => {\n          return options.DS(...broadcast(x, y), self, false);\n        });\n        matrixSignatures['Array, SparseMatrix'] = typed.referToSelf(self => (x, y) => {\n          return options.DS(...broadcast(matrix(x), y), self, false);\n        });\n      }\n      if (SD) {\n        matrixSignatures['SparseMatrix, DenseMatrix'] = typed.referToSelf(self => (x, y) => {\n          return SD(...broadcast(y, x), self, true);\n        });\n        matrixSignatures['SparseMatrix, Array'] = typed.referToSelf(self => (x, y) => {\n          return SD(...broadcast(matrix(y), x), self, true);\n        });\n      }\n    }\n\n    // Now add the scalars\n    var scalar = options.scalar || 'any';\n    var Ds = options.Ds || options.Ss;\n    if (Ds) {\n      if (elop) {\n        matrixSignatures['DenseMatrix,' + scalar] = (x, y) => matAlgo14xDs(x, y, elop, false);\n        matrixSignatures[scalar + ', DenseMatrix'] = (x, y) => matAlgo14xDs(y, x, elop, true);\n        matrixSignatures['Array,' + scalar] = (x, y) => matAlgo14xDs(matrix(x), y, elop, false).valueOf();\n        matrixSignatures[scalar + ', Array'] = (x, y) => matAlgo14xDs(matrix(y), x, elop, true).valueOf();\n      } else {\n        matrixSignatures['DenseMatrix,' + scalar] = typed.referToSelf(self => (x, y) => {\n          return matAlgo14xDs(x, y, self, false);\n        });\n        matrixSignatures[scalar + ', DenseMatrix'] = typed.referToSelf(self => (x, y) => {\n          return matAlgo14xDs(y, x, self, true);\n        });\n        matrixSignatures['Array,' + scalar] = typed.referToSelf(self => (x, y) => {\n          return matAlgo14xDs(matrix(x), y, self, false).valueOf();\n        });\n        matrixSignatures[scalar + ', Array'] = typed.referToSelf(self => (x, y) => {\n          return matAlgo14xDs(matrix(y), x, self, true).valueOf();\n        });\n      }\n    }\n    var sS = options.sS !== undefined ? options.sS : options.Ss;\n    if (elop) {\n      if (options.Ss) {\n        matrixSignatures['SparseMatrix,' + scalar] = (x, y) => options.Ss(x, y, elop, false);\n      }\n      if (sS) {\n        matrixSignatures[scalar + ', SparseMatrix'] = (x, y) => sS(y, x, elop, true);\n      }\n    } else {\n      if (options.Ss) {\n        matrixSignatures['SparseMatrix,' + scalar] = typed.referToSelf(self => (x, y) => {\n          return options.Ss(x, y, self, false);\n        });\n      }\n      if (sS) {\n        matrixSignatures[scalar + ', SparseMatrix'] = typed.referToSelf(self => (x, y) => {\n          return sS(y, x, self, true);\n        });\n      }\n    }\n    // Also pull in the scalar signatures if the operator is a typed function\n    if (elop && elop.signatures) {\n      extend(matrixSignatures, elop.signatures);\n    }\n    return matrixSignatures;\n  };\n});","import { factory } from '../../../utils/factory.js';\nimport { DimensionError } from '../../../error/DimensionError.js';\nvar name = 'matAlgo01xDSid';\nvar dependencies = ['typed'];\nexport var createMatAlgo01xDSid = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Iterates over SparseMatrix nonzero items and invokes the callback function f(Dij, Sij).\n   * Callback function invoked NNZ times (number of nonzero items in SparseMatrix).\n   *\n   *\n   *          ┌  f(Dij, Sij)  ; S(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  Dij          ; otherwise\n   *\n   *\n   * @param {Matrix}   denseMatrix       The DenseMatrix instance (D)\n   * @param {Matrix}   sparseMatrix      The SparseMatrix instance (S)\n   * @param {Function} callback          The f(Dij,Sij) operation to invoke, where Dij = DenseMatrix(i,j) and Sij = SparseMatrix(i,j)\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(Sij,Dij)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97477571\n   */\n  return function algorithm1(denseMatrix, sparseMatrix, callback, inverse) {\n    // dense matrix arrays\n    var adata = denseMatrix._data;\n    var asize = denseMatrix._size;\n    var adt = denseMatrix._datatype || denseMatrix.getDataType();\n    // sparse matrix arrays\n    var bvalues = sparseMatrix._values;\n    var bindex = sparseMatrix._index;\n    var bptr = sparseMatrix._ptr;\n    var bsize = sparseMatrix._size;\n    var bdt = sparseMatrix._datatype || sparseMatrix._data === undefined ? sparseMatrix._datatype : sparseMatrix.getDataType();\n\n    // validate dimensions\n    if (asize.length !== bsize.length) {\n      throw new DimensionError(asize.length, bsize.length);\n    }\n\n    // check rows & columns\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n    }\n\n    // sparse matrix cannot be a Pattern matrix\n    if (!bvalues) {\n      throw new Error('Cannot perform operation on Dense Matrix and Pattern Sparse Matrix');\n    }\n\n    // rows & columns\n    var rows = asize[0];\n    var columns = asize[1];\n\n    // process data types\n    var dt = typeof adt === 'string' && adt !== 'mixed' && adt === bdt ? adt : undefined;\n    // callback function\n    var cf = dt ? typed.find(callback, [dt, dt]) : callback;\n\n    // vars\n    var i, j;\n\n    // result (DenseMatrix)\n    var cdata = [];\n    // initialize c\n    for (i = 0; i < rows; i++) {\n      cdata[i] = [];\n    }\n\n    // workspace\n    var x = [];\n    // marks indicating we have a value in x for a given column\n    var w = [];\n\n    // loop columns in b\n    for (j = 0; j < columns; j++) {\n      // column mark\n      var mark = j + 1;\n      // values in column j\n      for (var k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        i = bindex[k];\n        // update workspace\n        x[i] = inverse ? cf(bvalues[k], adata[i][j]) : cf(adata[i][j], bvalues[k]);\n        // mark i as updated\n        w[i] = mark;\n      }\n      // loop rows\n      for (i = 0; i < rows; i++) {\n        // check row is in workspace\n        if (w[i] === mark) {\n          // c[i][j] was already calculated\n          cdata[i][j] = x[i];\n        } else {\n          // item does not exist in S\n          cdata[i][j] = adata[i][j];\n        }\n      }\n    }\n\n    // return dense matrix\n    return denseMatrix.createDenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: adt === denseMatrix._datatype && bdt === sparseMatrix._datatype ? dt : undefined\n    });\n  };\n});","import { factory } from '../../../utils/factory.js';\nimport { DimensionError } from '../../../error/DimensionError.js';\nvar name = 'matAlgo04xSidSid';\nvar dependencies = ['typed', 'equalScalar'];\nexport var createMatAlgo04xSidSid = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    equalScalar\n  } = _ref;\n  /**\n   * Iterates over SparseMatrix A and SparseMatrix B nonzero items and invokes the callback function f(Aij, Bij).\n   * Callback function invoked MAX(NNZA, NNZB) times\n   *\n   *\n   *          ┌  f(Aij, Bij)  ; A(i,j) !== 0 && B(i,j) !== 0\n   * C(i,j) = ┤  A(i,j)       ; A(i,j) !== 0 && B(i,j) === 0\n   *          └  B(i,j)       ; A(i,j) === 0\n   *\n   *\n   * @param {Matrix}   a                 The SparseMatrix instance (A)\n   * @param {Matrix}   b                 The SparseMatrix instance (B)\n   * @param {Function} callback          The f(Aij,Bij) operation to invoke\n   *\n   * @return {Matrix}                    SparseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97620294\n   */\n  return function matAlgo04xSidSid(a, b, callback) {\n    // sparse matrix arrays\n    var avalues = a._values;\n    var aindex = a._index;\n    var aptr = a._ptr;\n    var asize = a._size;\n    var adt = a._datatype || a._data === undefined ? a._datatype : a.getDataType();\n    // sparse matrix arrays\n    var bvalues = b._values;\n    var bindex = b._index;\n    var bptr = b._ptr;\n    var bsize = b._size;\n    var bdt = b._datatype || b._data === undefined ? b._datatype : b.getDataType();\n\n    // validate dimensions\n    if (asize.length !== bsize.length) {\n      throw new DimensionError(asize.length, bsize.length);\n    }\n\n    // check rows & columns\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n    }\n\n    // rows & columns\n    var rows = asize[0];\n    var columns = asize[1];\n\n    // datatype\n    var dt;\n    // equal signature to use\n    var eq = equalScalar;\n    // zero value\n    var zero = 0;\n    // callback signature to use\n    var cf = callback;\n\n    // process data types\n    if (typeof adt === 'string' && adt === bdt && adt !== 'mixed') {\n      // datatype\n      dt = adt;\n      // find signature that matches (dt, dt)\n      eq = typed.find(equalScalar, [dt, dt]);\n      // convert 0 to the same datatype\n      zero = typed.convert(0, dt);\n      // callback\n      cf = typed.find(callback, [dt, dt]);\n    }\n\n    // result arrays\n    var cvalues = avalues && bvalues ? [] : undefined;\n    var cindex = [];\n    var cptr = [];\n\n    // workspace\n    var xa = avalues && bvalues ? [] : undefined;\n    var xb = avalues && bvalues ? [] : undefined;\n    // marks indicating we have a value in x for a given column\n    var wa = [];\n    var wb = [];\n\n    // vars\n    var i, j, k, k0, k1;\n\n    // loop columns\n    for (j = 0; j < columns; j++) {\n      // update cptr\n      cptr[j] = cindex.length;\n      // columns mark\n      var mark = j + 1;\n      // loop A(:,j)\n      for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        i = aindex[k];\n        // update c\n        cindex.push(i);\n        // update workspace\n        wa[i] = mark;\n        // check we need to process values\n        if (xa) {\n          xa[i] = avalues[k];\n        }\n      }\n      // loop B(:,j)\n      for (k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        i = bindex[k];\n        // check row exists in A\n        if (wa[i] === mark) {\n          // update record in xa @ i\n          if (xa) {\n            // invoke callback\n            var v = cf(xa[i], bvalues[k]);\n            // check for zero\n            if (!eq(v, zero)) {\n              // update workspace\n              xa[i] = v;\n            } else {\n              // remove mark (index will be removed later)\n              wa[i] = null;\n            }\n          }\n        } else {\n          // update c\n          cindex.push(i);\n          // update workspace\n          wb[i] = mark;\n          // check we need to process values\n          if (xb) {\n            xb[i] = bvalues[k];\n          }\n        }\n      }\n      // check we need to process values (non pattern matrix)\n      if (xa && xb) {\n        // initialize first index in j\n        k = cptr[j];\n        // loop index in j\n        while (k < cindex.length) {\n          // row\n          i = cindex[k];\n          // check workspace has value @ i\n          if (wa[i] === mark) {\n            // push value (Aij != 0 || (Aij != 0 && Bij != 0))\n            cvalues[k] = xa[i];\n            // increment pointer\n            k++;\n          } else if (wb[i] === mark) {\n            // push value (bij != 0)\n            cvalues[k] = xb[i];\n            // increment pointer\n            k++;\n          } else {\n            // remove index @ k\n            cindex.splice(k, 1);\n          }\n        }\n      }\n    }\n    // update cptr\n    cptr[columns] = cindex.length;\n\n    // return sparse matrix\n    return a.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [rows, columns],\n      datatype: adt === a._datatype && bdt === b._datatype ? dt : undefined\n    });\n  };\n});","import { factory } from '../../../utils/factory.js';\nvar name = 'matAlgo10xSids';\nvar dependencies = ['typed', 'DenseMatrix'];\nexport var createMatAlgo10xSids = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    DenseMatrix\n  } = _ref;\n  /**\n   * Iterates over SparseMatrix S nonzero items and invokes the callback function f(Sij, b).\n   * Callback function invoked NZ times (number of nonzero items in S).\n   *\n   *\n   *          ┌  f(Sij, b)  ; S(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  b          ; otherwise\n   *\n   *\n   * @param {Matrix}   s                 The SparseMatrix instance (S)\n   * @param {Scalar}   b                 The Scalar value\n   * @param {Function} callback          The f(Aij,b) operation to invoke\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Sij)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97626813\n   */\n  return function matAlgo10xSids(s, b, callback, inverse) {\n    // sparse matrix arrays\n    var avalues = s._values;\n    var aindex = s._index;\n    var aptr = s._ptr;\n    var asize = s._size;\n    var adt = s._datatype;\n\n    // sparse matrix cannot be a Pattern matrix\n    if (!avalues) {\n      throw new Error('Cannot perform operation on Pattern Sparse Matrix and Scalar value');\n    }\n\n    // rows & columns\n    var rows = asize[0];\n    var columns = asize[1];\n\n    // datatype\n    var dt;\n    // callback signature to use\n    var cf = callback;\n\n    // process data types\n    if (typeof adt === 'string') {\n      // datatype\n      dt = adt;\n      // convert b to the same datatype\n      b = typed.convert(b, dt);\n      // callback\n      cf = typed.find(callback, [dt, dt]);\n    }\n\n    // result arrays\n    var cdata = [];\n\n    // workspaces\n    var x = [];\n    // marks indicating we have a value in x for a given column\n    var w = [];\n\n    // loop columns\n    for (var j = 0; j < columns; j++) {\n      // columns mark\n      var mark = j + 1;\n      // values in j\n      for (var k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        var r = aindex[k];\n        // update workspace\n        x[r] = avalues[k];\n        w[r] = mark;\n      }\n      // loop rows\n      for (var i = 0; i < rows; i++) {\n        // initialize C on first column\n        if (j === 0) {\n          // create row array\n          cdata[i] = [];\n        }\n        // check sparse matrix has a value @ i,j\n        if (w[i] === mark) {\n          // invoke callback, update C\n          cdata[i][j] = inverse ? cf(b, x[i]) : cf(x[i], b);\n        } else {\n          // dense matrix value @ i, j\n          cdata[i][j] = b;\n        }\n      }\n    }\n\n    // return dense matrix\n    return new DenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});","import { factory } from '../../utils/factory.js';\nimport { multiplyNumber } from '../../plain/number/index.js';\nvar name = 'multiplyScalar';\nvar dependencies = ['typed'];\nexport var createMultiplyScalar = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Multiply two scalar values, `x * y`.\n   * This function is meant for internal use: it is used by the public function\n   * `multiply`\n   *\n   * This function does not support collections (Array or Matrix).\n   *\n   * @param  {number | BigNumber | bigint | Fraction | Complex | Unit} x   First value to multiply\n   * @param  {number | BigNumber | bigint | Fraction | Complex} y          Second value to multiply\n   * @return {number | BigNumber | bigint | Fraction | Complex | Unit}     Multiplication of `x` and `y`\n   * @private\n   */\n  return typed('multiplyScalar', {\n    'number, number': multiplyNumber,\n    'Complex, Complex': function Complex_Complex(x, y) {\n      return x.mul(y);\n    },\n    'BigNumber, BigNumber': function BigNumber_BigNumber(x, y) {\n      return x.times(y);\n    },\n    'bigint, bigint': function bigint_bigint(x, y) {\n      return x * y;\n    },\n    'Fraction, Fraction': function Fraction_Fraction(x, y) {\n      return x.mul(y);\n    },\n    'number | Fraction | BigNumber | Complex, Unit': (x, y) => y.multiply(x),\n    'Unit, number | Fraction | BigNumber | Complex | Unit': (x, y) => x.multiply(y)\n  });\n});","import { factory } from '../../utils/factory.js';\nimport { isMatrix } from '../../utils/is.js';\nimport { arraySize } from '../../utils/array.js';\nimport { createMatAlgo11xS0s } from '../../type/matrix/utils/matAlgo11xS0s.js';\nimport { createMatAlgo14xDs } from '../../type/matrix/utils/matAlgo14xDs.js';\nvar name = 'multiply';\nvar dependencies = ['typed', 'matrix', 'addScalar', 'multiplyScalar', 'equalScalar', 'dot'];\nexport var createMultiply = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    addScalar,\n    multiplyScalar,\n    equalScalar,\n    dot\n  } = _ref;\n  var matAlgo11xS0s = createMatAlgo11xS0s({\n    typed,\n    equalScalar\n  });\n  var matAlgo14xDs = createMatAlgo14xDs({\n    typed\n  });\n  function _validateMatrixDimensions(size1, size2) {\n    // check left operand dimensions\n    switch (size1.length) {\n      case 1:\n        // check size2\n        switch (size2.length) {\n          case 1:\n            // Vector x Vector\n            if (size1[0] !== size2[0]) {\n              // throw error\n              throw new RangeError('Dimension mismatch in multiplication. Vectors must have the same length');\n            }\n            break;\n          case 2:\n            // Vector x Matrix\n            if (size1[0] !== size2[0]) {\n              // throw error\n              throw new RangeError('Dimension mismatch in multiplication. Vector length (' + size1[0] + ') must match Matrix rows (' + size2[0] + ')');\n            }\n            break;\n          default:\n            throw new Error('Can only multiply a 1 or 2 dimensional matrix (Matrix B has ' + size2.length + ' dimensions)');\n        }\n        break;\n      case 2:\n        // check size2\n        switch (size2.length) {\n          case 1:\n            // Matrix x Vector\n            if (size1[1] !== size2[0]) {\n              // throw error\n              throw new RangeError('Dimension mismatch in multiplication. Matrix columns (' + size1[1] + ') must match Vector length (' + size2[0] + ')');\n            }\n            break;\n          case 2:\n            // Matrix x Matrix\n            if (size1[1] !== size2[0]) {\n              // throw error\n              throw new RangeError('Dimension mismatch in multiplication. Matrix A columns (' + size1[1] + ') must match Matrix B rows (' + size2[0] + ')');\n            }\n            break;\n          default:\n            throw new Error('Can only multiply a 1 or 2 dimensional matrix (Matrix B has ' + size2.length + ' dimensions)');\n        }\n        break;\n      default:\n        throw new Error('Can only multiply a 1 or 2 dimensional matrix (Matrix A has ' + size1.length + ' dimensions)');\n    }\n  }\n\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            Dense Vector   (N)\n   * @param {Matrix} b            Dense Vector   (N)\n   *\n   * @return {number}             Scalar value\n   */\n  function _multiplyVectorVector(a, b, n) {\n    // check empty vector\n    if (n === 0) {\n      throw new Error('Cannot multiply two empty vectors');\n    }\n    return dot(a, b);\n  }\n\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            Dense Vector   (M)\n   * @param {Matrix} b            Matrix         (MxN)\n   *\n   * @return {Matrix}             Dense Vector   (N)\n   */\n  function _multiplyVectorMatrix(a, b) {\n    // process storage\n    if (b.storage() !== 'dense') {\n      throw new Error('Support for SparseMatrix not implemented');\n    }\n    return _multiplyVectorDenseMatrix(a, b);\n  }\n\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            Dense Vector   (M)\n   * @param {Matrix} b            Dense Matrix   (MxN)\n   *\n   * @return {Matrix}             Dense Vector   (N)\n   */\n  function _multiplyVectorDenseMatrix(a, b) {\n    // a dense\n    var adata = a._data;\n    var asize = a._size;\n    var adt = a._datatype || a.getDataType();\n    // b dense\n    var bdata = b._data;\n    var bsize = b._size;\n    var bdt = b._datatype || b.getDataType();\n    // rows & columns\n    var alength = asize[0];\n    var bcolumns = bsize[1];\n\n    // datatype\n    var dt;\n    // addScalar signature to use\n    var af = addScalar;\n    // multiplyScalar signature to use\n    var mf = multiplyScalar;\n\n    // process data types\n    if (adt && bdt && adt === bdt && typeof adt === 'string' && adt !== 'mixed') {\n      // datatype\n      dt = adt;\n      // find signatures that matches (dt, dt)\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n    }\n\n    // result\n    var c = [];\n\n    // loop matrix columns\n    for (var j = 0; j < bcolumns; j++) {\n      // sum (do not initialize it with zero)\n      var sum = mf(adata[0], bdata[0][j]);\n      // loop vector\n      for (var i = 1; i < alength; i++) {\n        // multiply & accumulate\n        sum = af(sum, mf(adata[i], bdata[i][j]));\n      }\n      c[j] = sum;\n    }\n\n    // return matrix\n    return a.createDenseMatrix({\n      data: c,\n      size: [bcolumns],\n      datatype: adt === a._datatype && bdt === b._datatype ? dt : undefined\n    });\n  }\n\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            Matrix         (MxN)\n   * @param {Matrix} b            Dense Vector   (N)\n   *\n   * @return {Matrix}             Dense Vector   (M)\n   */\n  var _multiplyMatrixVector = typed('_multiplyMatrixVector', {\n    'DenseMatrix, any': _multiplyDenseMatrixVector,\n    'SparseMatrix, any': _multiplySparseMatrixVector\n  });\n\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            Matrix         (MxN)\n   * @param {Matrix} b            Matrix         (NxC)\n   *\n   * @return {Matrix}             Matrix         (MxC)\n   */\n  var _multiplyMatrixMatrix = typed('_multiplyMatrixMatrix', {\n    'DenseMatrix, DenseMatrix': _multiplyDenseMatrixDenseMatrix,\n    'DenseMatrix, SparseMatrix': _multiplyDenseMatrixSparseMatrix,\n    'SparseMatrix, DenseMatrix': _multiplySparseMatrixDenseMatrix,\n    'SparseMatrix, SparseMatrix': _multiplySparseMatrixSparseMatrix\n  });\n\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            DenseMatrix  (MxN)\n   * @param {Matrix} b            Dense Vector (N)\n   *\n   * @return {Matrix}             Dense Vector (M)\n   */\n  function _multiplyDenseMatrixVector(a, b) {\n    // a dense\n    var adata = a._data;\n    var asize = a._size;\n    var adt = a._datatype || a.getDataType();\n    // b dense\n    var bdata = b._data;\n    var bdt = b._datatype || b.getDataType();\n    // rows & columns\n    var arows = asize[0];\n    var acolumns = asize[1];\n\n    // datatype\n    var dt;\n    // addScalar signature to use\n    var af = addScalar;\n    // multiplyScalar signature to use\n    var mf = multiplyScalar;\n\n    // process data types\n    if (adt && bdt && adt === bdt && typeof adt === 'string' && adt !== 'mixed') {\n      // datatype\n      dt = adt;\n      // find signatures that matches (dt, dt)\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n    }\n\n    // result\n    var c = [];\n\n    // loop matrix a rows\n    for (var i = 0; i < arows; i++) {\n      // current row\n      var row = adata[i];\n      // sum (do not initialize it with zero)\n      var sum = mf(row[0], bdata[0]);\n      // loop matrix a columns\n      for (var j = 1; j < acolumns; j++) {\n        // multiply & accumulate\n        sum = af(sum, mf(row[j], bdata[j]));\n      }\n      c[i] = sum;\n    }\n\n    // return matrix\n    return a.createDenseMatrix({\n      data: c,\n      size: [arows],\n      datatype: adt === a._datatype && bdt === b._datatype ? dt : undefined\n    });\n  }\n\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            DenseMatrix    (MxN)\n   * @param {Matrix} b            DenseMatrix    (NxC)\n   *\n   * @return {Matrix}             DenseMatrix    (MxC)\n   */\n  function _multiplyDenseMatrixDenseMatrix(a, b) {\n    // getDataType()\n    // a dense\n    var adata = a._data;\n    var asize = a._size;\n    var adt = a._datatype || a.getDataType();\n    // b dense\n    var bdata = b._data;\n    var bsize = b._size;\n    var bdt = b._datatype || b.getDataType();\n    // rows & columns\n    var arows = asize[0];\n    var acolumns = asize[1];\n    var bcolumns = bsize[1];\n\n    // datatype\n    var dt;\n    // addScalar signature to use\n    var af = addScalar;\n    // multiplyScalar signature to use\n    var mf = multiplyScalar;\n\n    // process data types\n    if (adt && bdt && adt === bdt && typeof adt === 'string' && adt !== 'mixed' && adt !== 'mixed') {\n      // datatype\n      dt = adt;\n      // find signatures that matches (dt, dt)\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n    }\n\n    // result\n    var c = [];\n\n    // loop matrix a rows\n    for (var i = 0; i < arows; i++) {\n      // current row\n      var row = adata[i];\n      // initialize row array\n      c[i] = [];\n      // loop matrix b columns\n      for (var j = 0; j < bcolumns; j++) {\n        // sum (avoid initializing sum to zero)\n        var sum = mf(row[0], bdata[0][j]);\n        // loop matrix a columns\n        for (var x = 1; x < acolumns; x++) {\n          // multiply & accumulate\n          sum = af(sum, mf(row[x], bdata[x][j]));\n        }\n        c[i][j] = sum;\n      }\n    }\n\n    // return matrix\n    return a.createDenseMatrix({\n      data: c,\n      size: [arows, bcolumns],\n      datatype: adt === a._datatype && bdt === b._datatype ? dt : undefined\n    });\n  }\n\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            DenseMatrix    (MxN)\n   * @param {Matrix} b            SparseMatrix   (NxC)\n   *\n   * @return {Matrix}             SparseMatrix   (MxC)\n   */\n  function _multiplyDenseMatrixSparseMatrix(a, b) {\n    // a dense\n    var adata = a._data;\n    var asize = a._size;\n    var adt = a._datatype || a.getDataType();\n    // b sparse\n    var bvalues = b._values;\n    var bindex = b._index;\n    var bptr = b._ptr;\n    var bsize = b._size;\n    var bdt = b._datatype || b._data === undefined ? b._datatype : b.getDataType();\n    // validate b matrix\n    if (!bvalues) {\n      throw new Error('Cannot multiply Dense Matrix times Pattern only Matrix');\n    }\n    // rows & columns\n    var arows = asize[0];\n    var bcolumns = bsize[1];\n\n    // datatype\n    var dt;\n    // addScalar signature to use\n    var af = addScalar;\n    // multiplyScalar signature to use\n    var mf = multiplyScalar;\n    // equalScalar signature to use\n    var eq = equalScalar;\n    // zero value\n    var zero = 0;\n\n    // process data types\n    if (adt && bdt && adt === bdt && typeof adt === 'string' && adt !== 'mixed') {\n      // datatype\n      dt = adt;\n      // find signatures that matches (dt, dt)\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n      eq = typed.find(equalScalar, [dt, dt]);\n      // convert 0 to the same datatype\n      zero = typed.convert(0, dt);\n    }\n\n    // result\n    var cvalues = [];\n    var cindex = [];\n    var cptr = [];\n    // c matrix\n    var c = b.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [arows, bcolumns],\n      datatype: adt === a._datatype && bdt === b._datatype ? dt : undefined\n    });\n\n    // loop b columns\n    for (var jb = 0; jb < bcolumns; jb++) {\n      // update ptr\n      cptr[jb] = cindex.length;\n      // indeces in column jb\n      var kb0 = bptr[jb];\n      var kb1 = bptr[jb + 1];\n      // do not process column jb if no data exists\n      if (kb1 > kb0) {\n        // last row mark processed\n        var last = 0;\n        // loop a rows\n        for (var i = 0; i < arows; i++) {\n          // column mark\n          var mark = i + 1;\n          // C[i, jb]\n          var cij = void 0;\n          // values in b column j\n          for (var kb = kb0; kb < kb1; kb++) {\n            // row\n            var ib = bindex[kb];\n            // check value has been initialized\n            if (last !== mark) {\n              // first value in column jb\n              cij = mf(adata[i][ib], bvalues[kb]);\n              // update mark\n              last = mark;\n            } else {\n              // accumulate value\n              cij = af(cij, mf(adata[i][ib], bvalues[kb]));\n            }\n          }\n          // check column has been processed and value != 0\n          if (last === mark && !eq(cij, zero)) {\n            // push row & value\n            cindex.push(i);\n            cvalues.push(cij);\n          }\n        }\n      }\n    }\n    // update ptr\n    cptr[bcolumns] = cindex.length;\n\n    // return sparse matrix\n    return c;\n  }\n\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            SparseMatrix    (MxN)\n   * @param {Matrix} b            Dense Vector (N)\n   *\n   * @return {Matrix}             SparseMatrix    (M, 1)\n   */\n  function _multiplySparseMatrixVector(a, b) {\n    // a sparse\n    var avalues = a._values;\n    var aindex = a._index;\n    var aptr = a._ptr;\n    var adt = a._datatype || a._data === undefined ? a._datatype : a.getDataType();\n    // validate a matrix\n    if (!avalues) {\n      throw new Error('Cannot multiply Pattern only Matrix times Dense Matrix');\n    }\n    // b dense\n    var bdata = b._data;\n    var bdt = b._datatype || b.getDataType();\n    // rows & columns\n    var arows = a._size[0];\n    var brows = b._size[0];\n    // result\n    var cvalues = [];\n    var cindex = [];\n    var cptr = [];\n\n    // datatype\n    var dt;\n    // addScalar signature to use\n    var af = addScalar;\n    // multiplyScalar signature to use\n    var mf = multiplyScalar;\n    // equalScalar signature to use\n    var eq = equalScalar;\n    // zero value\n    var zero = 0;\n\n    // process data types\n    if (adt && bdt && adt === bdt && typeof adt === 'string' && adt !== 'mixed') {\n      // datatype\n      dt = adt;\n      // find signatures that matches (dt, dt)\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n      eq = typed.find(equalScalar, [dt, dt]);\n      // convert 0 to the same datatype\n      zero = typed.convert(0, dt);\n    }\n\n    // workspace\n    var x = [];\n    // vector with marks indicating a value x[i] exists in a given column\n    var w = [];\n\n    // update ptr\n    cptr[0] = 0;\n    // rows in b\n    for (var ib = 0; ib < brows; ib++) {\n      // b[ib]\n      var vbi = bdata[ib];\n      // check b[ib] != 0, avoid loops\n      if (!eq(vbi, zero)) {\n        // A values & index in ib column\n        for (var ka0 = aptr[ib], ka1 = aptr[ib + 1], ka = ka0; ka < ka1; ka++) {\n          // a row\n          var ia = aindex[ka];\n          // check value exists in current j\n          if (!w[ia]) {\n            // ia is new entry in j\n            w[ia] = true;\n            // add i to pattern of C\n            cindex.push(ia);\n            // x(ia) = A\n            x[ia] = mf(vbi, avalues[ka]);\n          } else {\n            // i exists in C already\n            x[ia] = af(x[ia], mf(vbi, avalues[ka]));\n          }\n        }\n      }\n    }\n    // copy values from x to column jb of c\n    for (var p1 = cindex.length, p = 0; p < p1; p++) {\n      // row\n      var ic = cindex[p];\n      // copy value\n      cvalues[p] = x[ic];\n    }\n    // update ptr\n    cptr[1] = cindex.length;\n\n    // matrix to return\n    return a.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [arows, 1],\n      datatype: adt === a._datatype && bdt === b._datatype ? dt : undefined\n    });\n  }\n\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            SparseMatrix      (MxN)\n   * @param {Matrix} b            DenseMatrix       (NxC)\n   *\n   * @return {Matrix}             SparseMatrix      (MxC)\n   */\n  function _multiplySparseMatrixDenseMatrix(a, b) {\n    // a sparse\n    var avalues = a._values;\n    var aindex = a._index;\n    var aptr = a._ptr;\n    var adt = a._datatype || a._data === undefined ? a._datatype : a.getDataType();\n    // validate a matrix\n    if (!avalues) {\n      throw new Error('Cannot multiply Pattern only Matrix times Dense Matrix');\n    }\n    // b dense\n    var bdata = b._data;\n    var bdt = b._datatype || b.getDataType();\n    // rows & columns\n    var arows = a._size[0];\n    var brows = b._size[0];\n    var bcolumns = b._size[1];\n\n    // datatype\n    var dt;\n    // addScalar signature to use\n    var af = addScalar;\n    // multiplyScalar signature to use\n    var mf = multiplyScalar;\n    // equalScalar signature to use\n    var eq = equalScalar;\n    // zero value\n    var zero = 0;\n\n    // process data types\n    if (adt && bdt && adt === bdt && typeof adt === 'string' && adt !== 'mixed') {\n      // datatype\n      dt = adt;\n      // find signatures that matches (dt, dt)\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n      eq = typed.find(equalScalar, [dt, dt]);\n      // convert 0 to the same datatype\n      zero = typed.convert(0, dt);\n    }\n\n    // result\n    var cvalues = [];\n    var cindex = [];\n    var cptr = [];\n    // c matrix\n    var c = a.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [arows, bcolumns],\n      datatype: adt === a._datatype && bdt === b._datatype ? dt : undefined\n    });\n\n    // workspace\n    var x = [];\n    // vector with marks indicating a value x[i] exists in a given column\n    var w = [];\n\n    // loop b columns\n    for (var jb = 0; jb < bcolumns; jb++) {\n      // update ptr\n      cptr[jb] = cindex.length;\n      // mark in workspace for current column\n      var mark = jb + 1;\n      // rows in jb\n      for (var ib = 0; ib < brows; ib++) {\n        // b[ib, jb]\n        var vbij = bdata[ib][jb];\n        // check b[ib, jb] != 0, avoid loops\n        if (!eq(vbij, zero)) {\n          // A values & index in ib column\n          for (var ka0 = aptr[ib], ka1 = aptr[ib + 1], ka = ka0; ka < ka1; ka++) {\n            // a row\n            var ia = aindex[ka];\n            // check value exists in current j\n            if (w[ia] !== mark) {\n              // ia is new entry in j\n              w[ia] = mark;\n              // add i to pattern of C\n              cindex.push(ia);\n              // x(ia) = A\n              x[ia] = mf(vbij, avalues[ka]);\n            } else {\n              // i exists in C already\n              x[ia] = af(x[ia], mf(vbij, avalues[ka]));\n            }\n          }\n        }\n      }\n      // copy values from x to column jb of c\n      for (var p0 = cptr[jb], p1 = cindex.length, p = p0; p < p1; p++) {\n        // row\n        var ic = cindex[p];\n        // copy value\n        cvalues[p] = x[ic];\n      }\n    }\n    // update ptr\n    cptr[bcolumns] = cindex.length;\n\n    // return sparse matrix\n    return c;\n  }\n\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            SparseMatrix      (MxN)\n   * @param {Matrix} b            SparseMatrix      (NxC)\n   *\n   * @return {Matrix}             SparseMatrix      (MxC)\n   */\n  function _multiplySparseMatrixSparseMatrix(a, b) {\n    // a sparse\n    var avalues = a._values;\n    var aindex = a._index;\n    var aptr = a._ptr;\n    var adt = a._datatype || a._data === undefined ? a._datatype : a.getDataType();\n    // b sparse\n    var bvalues = b._values;\n    var bindex = b._index;\n    var bptr = b._ptr;\n    var bdt = b._datatype || b._data === undefined ? b._datatype : b.getDataType();\n\n    // rows & columns\n    var arows = a._size[0];\n    var bcolumns = b._size[1];\n    // flag indicating both matrices (a & b) contain data\n    var values = avalues && bvalues;\n\n    // datatype\n    var dt;\n    // addScalar signature to use\n    var af = addScalar;\n    // multiplyScalar signature to use\n    var mf = multiplyScalar;\n\n    // process data types\n    if (adt && bdt && adt === bdt && typeof adt === 'string' && adt !== 'mixed') {\n      // datatype\n      dt = adt;\n      // find signatures that matches (dt, dt)\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n    }\n\n    // result\n    var cvalues = values ? [] : undefined;\n    var cindex = [];\n    var cptr = [];\n    // c matrix\n    var c = a.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [arows, bcolumns],\n      datatype: adt === a._datatype && bdt === b._datatype ? dt : undefined\n    });\n\n    // workspace\n    var x = values ? [] : undefined;\n    // vector with marks indicating a value x[i] exists in a given column\n    var w = [];\n    // variables\n    var ka, ka0, ka1, kb, kb0, kb1, ia, ib;\n    // loop b columns\n    for (var jb = 0; jb < bcolumns; jb++) {\n      // update ptr\n      cptr[jb] = cindex.length;\n      // mark in workspace for current column\n      var mark = jb + 1;\n      // B values & index in j\n      for (kb0 = bptr[jb], kb1 = bptr[jb + 1], kb = kb0; kb < kb1; kb++) {\n        // b row\n        ib = bindex[kb];\n        // check we need to process values\n        if (values) {\n          // loop values in a[:,ib]\n          for (ka0 = aptr[ib], ka1 = aptr[ib + 1], ka = ka0; ka < ka1; ka++) {\n            // row\n            ia = aindex[ka];\n            // check value exists in current j\n            if (w[ia] !== mark) {\n              // ia is new entry in j\n              w[ia] = mark;\n              // add i to pattern of C\n              cindex.push(ia);\n              // x(ia) = A\n              x[ia] = mf(bvalues[kb], avalues[ka]);\n            } else {\n              // i exists in C already\n              x[ia] = af(x[ia], mf(bvalues[kb], avalues[ka]));\n            }\n          }\n        } else {\n          // loop values in a[:,ib]\n          for (ka0 = aptr[ib], ka1 = aptr[ib + 1], ka = ka0; ka < ka1; ka++) {\n            // row\n            ia = aindex[ka];\n            // check value exists in current j\n            if (w[ia] !== mark) {\n              // ia is new entry in j\n              w[ia] = mark;\n              // add i to pattern of C\n              cindex.push(ia);\n            }\n          }\n        }\n      }\n      // check we need to process matrix values (pattern matrix)\n      if (values) {\n        // copy values from x to column jb of c\n        for (var p0 = cptr[jb], p1 = cindex.length, p = p0; p < p1; p++) {\n          // row\n          var ic = cindex[p];\n          // copy value\n          cvalues[p] = x[ic];\n        }\n      }\n    }\n    // update ptr\n    cptr[bcolumns] = cindex.length;\n\n    // return sparse matrix\n    return c;\n  }\n\n  /**\n   * Multiply two or more values, `x * y`.\n   * For matrices, the matrix product is calculated.\n   *\n   * Syntax:\n   *\n   *    math.multiply(x, y)\n   *    math.multiply(x, y, z, ...)\n   *\n   * Examples:\n   *\n   *    math.multiply(4, 5.2)        // returns number 20.8\n   *    math.multiply(2, 3, 4)       // returns number 24\n   *\n   *    const a = math.complex(2, 3)\n   *    const b = math.complex(4, 1)\n   *    math.multiply(a, b)          // returns Complex 5 + 14i\n   *\n   *    const c = [[1, 2], [4, 3]]\n   *    const d = [[1, 2, 3], [3, -4, 7]]\n   *    math.multiply(c, d)          // returns Array [[7, -6, 17], [13, -4, 33]]\n   *\n   *    const e = math.unit('2.1 km')\n   *    math.multiply(3, e)          // returns Unit 6.3 km\n   *\n   * See also:\n   *\n   *    divide, prod, cross, dot\n   *\n   * @param  {number | BigNumber | bigint | Fraction | Complex | Unit | Array | Matrix} x First value to multiply\n   * @param  {number | BigNumber | bigint | Fraction | Complex | Unit | Array | Matrix} y Second value to multiply\n   * @return {number | BigNumber | bigint | Fraction | Complex | Unit | Array | Matrix} Multiplication of `x` and `y`\n   */\n  return typed(name, multiplyScalar, {\n    // we extend the signatures of multiplyScalar with signatures dealing with matrices\n\n    'Array, Array': typed.referTo('Matrix, Matrix', selfMM => (x, y) => {\n      // check dimensions\n      _validateMatrixDimensions(arraySize(x), arraySize(y));\n\n      // use dense matrix implementation\n      var m = selfMM(matrix(x), matrix(y));\n      // return array or scalar\n      return isMatrix(m) ? m.valueOf() : m;\n    }),\n    'Matrix, Matrix': function Matrix_Matrix(x, y) {\n      // dimensions\n      var xsize = x.size();\n      var ysize = y.size();\n\n      // check dimensions\n      _validateMatrixDimensions(xsize, ysize);\n\n      // process dimensions\n      if (xsize.length === 1) {\n        // process y dimensions\n        if (ysize.length === 1) {\n          // Vector * Vector\n          return _multiplyVectorVector(x, y, xsize[0]);\n        }\n        // Vector * Matrix\n        return _multiplyVectorMatrix(x, y);\n      }\n      // process y dimensions\n      if (ysize.length === 1) {\n        // Matrix * Vector\n        return _multiplyMatrixVector(x, y);\n      }\n      // Matrix * Matrix\n      return _multiplyMatrixMatrix(x, y);\n    },\n    'Matrix, Array': typed.referTo('Matrix,Matrix', selfMM => (x, y) => selfMM(x, matrix(y))),\n    'Array, Matrix': typed.referToSelf(self => (x, y) => {\n      // use Matrix * Matrix implementation\n      return self(matrix(x, y.storage()), y);\n    }),\n    'SparseMatrix, any': function SparseMatrix_any(x, y) {\n      return matAlgo11xS0s(x, y, multiplyScalar, false);\n    },\n    'DenseMatrix, any': function DenseMatrix_any(x, y) {\n      return matAlgo14xDs(x, y, multiplyScalar, false);\n    },\n    'any, SparseMatrix': function any_SparseMatrix(x, y) {\n      return matAlgo11xS0s(y, x, multiplyScalar, true);\n    },\n    'any, DenseMatrix': function any_DenseMatrix(x, y) {\n      return matAlgo14xDs(y, x, multiplyScalar, true);\n    },\n    'Array, any': function Array_any(x, y) {\n      // use matrix implementation\n      return matAlgo14xDs(matrix(x), y, multiplyScalar, false).valueOf();\n    },\n    'any, Array': function any_Array(x, y) {\n      // use matrix implementation\n      return matAlgo14xDs(matrix(y), x, multiplyScalar, true).valueOf();\n    },\n    'any, any': multiplyScalar,\n    'any, any, ...any': typed.referToSelf(self => (x, y, rest) => {\n      var result = self(x, y);\n      for (var i = 0; i < rest.length; i++) {\n        result = self(result, rest[i]);\n      }\n      return result;\n    })\n  });\n});","import { factory } from '../../utils/factory.js';\nimport { deepMap } from '../../utils/collection.js';\nvar name = 'conj';\nvar dependencies = ['typed'];\nexport var createConj = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Compute the complex conjugate of a complex value.\n   * If `x = a+bi`, the complex conjugate of `x` is `a - bi`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.conj(x)\n   *\n   * Examples:\n   *\n   *    math.conj(math.complex('2 + 3i'))  // returns Complex 2 - 3i\n   *    math.conj(math.complex('2 - 3i'))  // returns Complex 2 + 3i\n   *    math.conj(math.complex('-5.2i'))  // returns Complex 5.2i\n   *\n   * See also:\n   *\n   *    re, im, arg, abs\n   *\n   * @param {number | BigNumber | Complex | Array | Matrix} x\n   *            A complex number or array with complex numbers\n   * @return {number | BigNumber | Complex | Array | Matrix}\n   *            The complex conjugate of x\n   */\n  return typed(name, {\n    'number | BigNumber | Fraction': x => x,\n    Complex: x => x.conjugate(),\n    'Array | Matrix': typed.referToSelf(self => x => deepMap(x, self))\n  });\n});","import { isBigNumber, isMatrix, isNumber } from '../../utils/is.js';\nimport { clone } from '../../utils/object.js';\nimport { arraySize, concat as _concat } from '../../utils/array.js';\nimport { IndexError } from '../../error/IndexError.js';\nimport { DimensionError } from '../../error/DimensionError.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'concat';\nvar dependencies = ['typed', 'matrix', 'isInteger'];\nexport var createConcat = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    isInteger\n  } = _ref;\n  /**\n   * Concatenate two or more matrices.\n   *\n   * Syntax:\n   *\n   *     math.concat(A, B, C, ...)\n   *     math.concat(A, B, C, ..., dim)\n   *\n   * Where:\n   *\n   * - `dim: number` is a zero-based dimension over which to concatenate the matrices.\n   *   By default the last dimension of the matrices.\n   *\n   * Examples:\n   *\n   *    const A = [[1, 2], [5, 6]]\n   *    const B = [[3, 4], [7, 8]]\n   *\n   *    math.concat(A, B)                  // returns [[1, 2, 3, 4], [5, 6, 7, 8]]\n   *    math.concat(A, B, 0)               // returns [[1, 2], [5, 6], [3, 4], [7, 8]]\n   *    math.concat('hello', ' ', 'world') // returns 'hello world'\n   *\n   * See also:\n   *\n   *    size, squeeze, subset, transpose\n   *\n   * @param {... Array | Matrix} args     Two or more matrices\n   * @return {Array | Matrix} Concatenated matrix\n   */\n  return typed(name, {\n    // TODO: change signature to '...Array | Matrix, dim?' when supported\n    '...Array | Matrix | number | BigNumber': function Array__Matrix__number__BigNumber(args) {\n      var i;\n      var len = args.length;\n      var dim = -1; // zero-based dimension\n      var prevDim;\n      var asMatrix = false;\n      var matrices = []; // contains multi dimensional arrays\n\n      for (i = 0; i < len; i++) {\n        var arg = args[i];\n\n        // test whether we need to return a Matrix (if not we return an Array)\n        if (isMatrix(arg)) {\n          asMatrix = true;\n        }\n        if (isNumber(arg) || isBigNumber(arg)) {\n          if (i !== len - 1) {\n            throw new Error('Dimension must be specified as last argument');\n          }\n\n          // last argument contains the dimension on which to concatenate\n          prevDim = dim;\n          dim = arg.valueOf(); // change BigNumber to number\n\n          if (!isInteger(dim)) {\n            throw new TypeError('Integer number expected for dimension');\n          }\n          if (dim < 0 || i > 0 && dim > prevDim) {\n            // TODO: would be more clear when throwing a DimensionError here\n            throw new IndexError(dim, prevDim + 1);\n          }\n        } else {\n          // this is a matrix or array\n          var m = clone(arg).valueOf();\n          var size = arraySize(m);\n          matrices[i] = m;\n          prevDim = dim;\n          dim = size.length - 1;\n\n          // verify whether each of the matrices has the same number of dimensions\n          if (i > 0 && dim !== prevDim) {\n            throw new DimensionError(prevDim + 1, dim + 1);\n          }\n        }\n      }\n      if (matrices.length === 0) {\n        throw new SyntaxError('At least one matrix expected');\n      }\n      var res = matrices.shift();\n      while (matrices.length) {\n        res = _concat(res, matrices.shift(), dim);\n      }\n      return asMatrix ? matrix(res) : res;\n    },\n    '...string': function string(args) {\n      return args.join('');\n    }\n  });\n});","export function noBignumber() {\n  throw new Error('No \"bignumber\" implementation available');\n}\nexport function noFraction() {\n  throw new Error('No \"fraction\" implementation available');\n}\nexport function noMatrix() {\n  throw new Error('No \"matrix\" implementation available');\n}\nexport function noIndex() {\n  throw new Error('No \"index\" implementation available');\n}\nexport function noSubset() {\n  throw new Error('No \"matrix\" implementation available');\n}","import { arraySize } from '../../utils/array.js';\nimport { factory } from '../../utils/factory.js';\nimport { noMatrix } from '../../utils/noop.js';\nvar name = 'size';\nvar dependencies = ['typed', 'config', '?matrix'];\nexport var createSize = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    matrix\n  } = _ref;\n  /**\n   * Calculate the size of a matrix or scalar.\n   *\n   * Syntax:\n   *\n   *     math.size(x)\n   *\n   * Examples:\n   *\n   *     math.size(2.3)                       // returns []\n   *     math.size('hello world')             // returns [11]\n   *\n   *     const A = [[1, 2, 3], [4, 5, 6]]\n   *     math.size(A)                         // returns [2, 3]\n   *     math.size(math.range(1,6).toArray()) // returns [5]\n   *\n   * See also:\n   *\n   *     count, resize, squeeze, subset\n   *\n   * @param {boolean | number | Complex | Unit | string | Array | Matrix} x  A matrix\n   * @return {Array | Matrix} A vector with size of `x`.\n   */\n  return typed(name, {\n    Matrix: function Matrix(x) {\n      return x.create(x.size(), 'number');\n    },\n    Array: arraySize,\n    string: function string(x) {\n      return config.matrix === 'Array' ? [x.length] : matrix([x.length], 'dense', 'number');\n    },\n    'number | Complex | BigNumber | Unit | boolean | null': function number__Complex__BigNumber__Unit__boolean__null(x) {\n      // scalar\n      return config.matrix === 'Array' ? [] : matrix ? matrix([], 'dense', 'number') : noMatrix();\n    }\n  });\n});","import { factory } from '../../utils/factory.js';\nimport { createMatAlgo01xDSid } from '../../type/matrix/utils/matAlgo01xDSid.js';\nimport { createMatAlgo04xSidSid } from '../../type/matrix/utils/matAlgo04xSidSid.js';\nimport { createMatAlgo10xSids } from '../../type/matrix/utils/matAlgo10xSids.js';\nimport { createMatrixAlgorithmSuite } from '../../type/matrix/utils/matrixAlgorithmSuite.js';\nvar name = 'add';\nvar dependencies = ['typed', 'matrix', 'addScalar', 'equalScalar', 'DenseMatrix', 'SparseMatrix', 'concat'];\nexport var createAdd = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    addScalar,\n    equalScalar,\n    DenseMatrix,\n    SparseMatrix,\n    concat\n  } = _ref;\n  var matAlgo01xDSid = createMatAlgo01xDSid({\n    typed\n  });\n  var matAlgo04xSidSid = createMatAlgo04xSidSid({\n    typed,\n    equalScalar\n  });\n  var matAlgo10xSids = createMatAlgo10xSids({\n    typed,\n    DenseMatrix\n  });\n  var matrixAlgorithmSuite = createMatrixAlgorithmSuite({\n    typed,\n    matrix,\n    concat\n  });\n  /**\n  * Add two or more values, `x + y`.\n  * For matrices, the function is evaluated element wise.\n  *\n  * Syntax:\n  *\n  *    math.add(x, y)\n  *    math.add(x, y, z, ...)\n  *\n  * Examples:\n  *\n  *    math.add(2, 3)               // returns number 5\n  *    math.add(2, 3, 4)            // returns number 9\n  *\n  *    const a = math.complex(2, 3)\n  *    const b = math.complex(-4, 1)\n  *    math.add(a, b)               // returns Complex -2 + 4i\n  *\n  *    math.add([1, 2, 3], 4)       // returns Array [5, 6, 7]\n  *\n  *    const c = math.unit('5 cm')\n  *    const d = math.unit('2.1 mm')\n  *    math.add(c, d)               // returns Unit 52.1 mm\n  *\n  *    math.add(\"2.3\", \"4\")         // returns number 6.3\n  *\n  * See also:\n  *\n  *    subtract, sum\n  *\n  * @param  {number | BigNumber | bigint | Fraction | Complex | Unit | Array | Matrix} x First value to add\n  * @param  {number | BigNumber | bigint | Fraction | Complex | Unit | Array | Matrix} y Second value to add\n  * @return {number | BigNumber | bigint | Fraction | Complex | Unit | Array | Matrix} Sum of `x` and `y`\n  */\n  return typed(name, {\n    'any, any': addScalar,\n    'any, any, ...any': typed.referToSelf(self => (x, y, rest) => {\n      var result = self(x, y);\n      for (var i = 0; i < rest.length; i++) {\n        result = self(result, rest[i]);\n      }\n      return result;\n    })\n  }, matrixAlgorithmSuite({\n    elop: addScalar,\n    DS: matAlgo01xDSid,\n    SS: matAlgo04xSidSid,\n    Ss: matAlgo10xSids\n  }));\n});","import { factory } from '../../utils/factory.js';\nimport { isMatrix } from '../../utils/is.js';\nvar name = 'dot';\nvar dependencies = ['typed', 'addScalar', 'multiplyScalar', 'conj', 'size'];\nexport var createDot = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    addScalar,\n    multiplyScalar,\n    conj,\n    size\n  } = _ref;\n  /**\n   * Calculate the dot product of two vectors. The dot product of\n   * `A = [a1, a2, ..., an]` and `B = [b1, b2, ..., bn]` is defined as:\n   *\n   *    dot(A, B) = conj(a1) * b1 + conj(a2) * b2 + ... + conj(an) * bn\n   *\n   * Syntax:\n   *\n   *    math.dot(x, y)\n   *\n   * Examples:\n   *\n   *    math.dot([2, 4, 1], [2, 2, 3])       // returns number 15\n   *    math.multiply([2, 4, 1], [2, 2, 3])  // returns number 15\n   *\n   * See also:\n   *\n   *    multiply, cross\n   *\n   * @param  {Array | Matrix} x     First vector\n   * @param  {Array | Matrix} y     Second vector\n   * @return {number}               Returns the dot product of `x` and `y`\n   */\n  return typed(name, {\n    'Array | DenseMatrix, Array | DenseMatrix': _denseDot,\n    'SparseMatrix, SparseMatrix': _sparseDot\n  });\n  function _validateDim(x, y) {\n    var xSize = _size(x);\n    var ySize = _size(y);\n    var xLen, yLen;\n    if (xSize.length === 1) {\n      xLen = xSize[0];\n    } else if (xSize.length === 2 && xSize[1] === 1) {\n      xLen = xSize[0];\n    } else {\n      throw new RangeError('Expected a column vector, instead got a matrix of size (' + xSize.join(', ') + ')');\n    }\n    if (ySize.length === 1) {\n      yLen = ySize[0];\n    } else if (ySize.length === 2 && ySize[1] === 1) {\n      yLen = ySize[0];\n    } else {\n      throw new RangeError('Expected a column vector, instead got a matrix of size (' + ySize.join(', ') + ')');\n    }\n    if (xLen !== yLen) throw new RangeError('Vectors must have equal length (' + xLen + ' != ' + yLen + ')');\n    if (xLen === 0) throw new RangeError('Cannot calculate the dot product of empty vectors');\n    return xLen;\n  }\n  function _denseDot(a, b) {\n    var N = _validateDim(a, b);\n    var adata = isMatrix(a) ? a._data : a;\n    var adt = isMatrix(a) ? a._datatype || a.getDataType() : undefined;\n    var bdata = isMatrix(b) ? b._data : b;\n    var bdt = isMatrix(b) ? b._datatype || b.getDataType() : undefined;\n\n    // are these 2-dimensional column vectors? (as opposed to 1-dimensional vectors)\n    var aIsColumn = _size(a).length === 2;\n    var bIsColumn = _size(b).length === 2;\n    var add = addScalar;\n    var mul = multiplyScalar;\n\n    // process data types\n    if (adt && bdt && adt === bdt && typeof adt === 'string' && adt !== 'mixed') {\n      var dt = adt;\n      // find signatures that matches (dt, dt)\n      add = typed.find(addScalar, [dt, dt]);\n      mul = typed.find(multiplyScalar, [dt, dt]);\n    }\n\n    // both vectors 1-dimensional\n    if (!aIsColumn && !bIsColumn) {\n      var c = mul(conj(adata[0]), bdata[0]);\n      for (var i = 1; i < N; i++) {\n        c = add(c, mul(conj(adata[i]), bdata[i]));\n      }\n      return c;\n    }\n\n    // a is 1-dim, b is column\n    if (!aIsColumn && bIsColumn) {\n      var _c = mul(conj(adata[0]), bdata[0][0]);\n      for (var _i = 1; _i < N; _i++) {\n        _c = add(_c, mul(conj(adata[_i]), bdata[_i][0]));\n      }\n      return _c;\n    }\n\n    // a is column, b is 1-dim\n    if (aIsColumn && !bIsColumn) {\n      var _c2 = mul(conj(adata[0][0]), bdata[0]);\n      for (var _i2 = 1; _i2 < N; _i2++) {\n        _c2 = add(_c2, mul(conj(adata[_i2][0]), bdata[_i2]));\n      }\n      return _c2;\n    }\n\n    // both vectors are column\n    if (aIsColumn && bIsColumn) {\n      var _c3 = mul(conj(adata[0][0]), bdata[0][0]);\n      for (var _i3 = 1; _i3 < N; _i3++) {\n        _c3 = add(_c3, mul(conj(adata[_i3][0]), bdata[_i3][0]));\n      }\n      return _c3;\n    }\n  }\n  function _sparseDot(x, y) {\n    _validateDim(x, y);\n    var xindex = x._index;\n    var xvalues = x._values;\n    var yindex = y._index;\n    var yvalues = y._values;\n\n    // TODO optimize add & mul using datatype\n    var c = 0;\n    var add = addScalar;\n    var mul = multiplyScalar;\n    var i = 0;\n    var j = 0;\n    while (i < xindex.length && j < yindex.length) {\n      var I = xindex[i];\n      var J = yindex[j];\n      if (I < J) {\n        i++;\n        continue;\n      }\n      if (I > J) {\n        j++;\n        continue;\n      }\n      if (I === J) {\n        c = add(c, mul(xvalues[i], yvalues[j]));\n        i++;\n        j++;\n      }\n    }\n    return c;\n  }\n\n  // TODO remove this once #1771 is fixed\n  function _size(x) {\n    return isMatrix(x) ? x.size() : size(x);\n  }\n});","/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\nimport { config } from './configReadonly.js';\nimport { createBigNumberClass, createComplexClass, createE, createFalse, createFineStructure, createFractionClass, createI, createInfinity, createLN10, createLOG10E, createMatrixClass, createNaN, createNull, createPhi, createRangeClass, createResultSet, createSQRT1_2,\n// eslint-disable-line camelcase\ncreateSackurTetrode, createTau, createTrue, createVersion, createDenseMatrixClass, createEfimovFactor, createLN2, createPi, createReplacer, createSQRT2, createTyped, createWeakMixingAngle, createAbs, createAcos, createAcot, createAcsc, createAddScalar, createArg, createAsech, createAsinh, createAtan, createAtanh, createBigint, createBitNot, createBoolean, createClone, createCombinations, createComplex, createConj, createCos, createCot, createCsc, createCube, createEqualScalar, createErf, createExp, createExpm1, createFilter, createFlatten, createForEach, createFormat, createGetMatrixDataType, createHex, createIm, createIsInteger, createIsNegative, createIsPositive, createIsZero, createLOG2E, createLgamma, createLog10, createLog2, createMap, createMultiplyScalar, createNot, createNumber, createOct, createPickRandom, createPrint, createRandom, createRe, createSec, createSign, createSin, createSparseMatrixClass, createSplitUnit, createSquare, createString, createSubtractScalar, createTan, createTypeOf, createAcosh, createAcsch, createApply, createAsec, createBignumber, createCombinationsWithRep, createCosh, createCsch, createIsNaN, createIsPrime, createRandomInt, createSech, createSinh, createSparse, createSqrt, createSqueeze, createTanh, createUnaryMinus, createAcoth, createBin, createCoth, createFraction, createIsNumeric, createMatrix, createMatrixFromFunction, createMode, createNumeric, createProd, createReshape, createSize, createTranspose, createXgcd, createZeros, createAsin, createCbrt, createConcat, createCount, createCtranspose, createDiag, createDivideScalar, createDotDivide, createEqual, createHasNumericValue, createIdentity, createKron, createLargerEq, createLeftShift, createLsolve, createMatrixFromColumns, createNthRoot, createOnes, createQr, createResize, createRightArithShift, createRound, createSmaller, createSubtract, createTo, createUnaryPlus, createUsolve, createXor, createAdd, createAtan2, createBitAnd, createBitOr, createBitXor, createCatalan, createCompare, createCompareText, createCumSum, createDeepEqual, createDiff, createDistance, createDot, createEqualText, createFloor, createGcd, createHypot, createImmutableDenseMatrixClass, createIndexClass, createLarger, createLog, createLsolveAll, createMatrixFromRows, createMin, createMod, createMultiply, createNthRoots, createOr, createPartitionSelect, createRightLogShift, createSlu, createSubset, createSum, createTrace, createUsolveAll, createZpk2tf, createCeil, createCompareNatural, createComposition, createCross, createDet, createDotMultiply, createFibonacciHeapClass, createFix, createIndex, createIntersect, createInvmod, createLcm, createLog1p, createMax, createSetCartesian, createSetDistinct, createSetIsSubset, createSetPowerset, createSmallerEq, createSort, createUnequal, createAnd, createRange, createRow, createSetDifference, createSetMultiplicity, createSetSymDifference, createSpaClass, createColumn, createInv, createLup, createPinv, createPow, createSetIntersect, createSetUnion, createSqrtm, createUnitClass, createVacuumImpedance, createWienDisplacement, createAtomicMass, createBohrMagneton, createBoltzmann, createConductanceQuantum, createCoulomb, createDeuteronMass, createDotPow, createElectricConstant, createElementaryCharge, createExpm, createFaraday, createFft, createGamma, createGravitationConstant, createHartreeEnergy, createIfft, createKlitzing, createLoschmidt, createMagneticConstant, createMolarMass, createMolarPlanckConstant, createNeutronMass, createNuclearMagneton, createPlanckCharge, createPlanckLength, createPlanckTemperature, createProtonMass, createQuantumOfCirculation, createReducedPlanckConstant, createRydberg, createSecondRadiation, createSpeedOfLight, createStefanBoltzmann, createThomsonCrossSection, createAvogadro, createBohrRadius, createCreateUnit, createDivide, createElectronMass, createFactorial, createFirstRadiation, createGravity, createInverseConductanceQuantum, createLusolve, createMagneticFluxQuantum, createMolarMassC12, createMultinomial, createPermutations, createPlanckMass, createPolynomialRoot, createSetSize, createSolveODE, createStirlingS2, createUnitFunction, createBellNumbers, createEigs, createFermiCoupling, createGasConstant, createKldivergence, createMean, createMolarVolume, createPlanckConstant, createQuantileSeq, createVariance, createClassicalElectronRadius, createMedian, createCorr, createFreqz, createMad, createStd, createZeta, createNorm, createRotationMatrix, createPlanckTime, createSchur, createRotate, createSylvester, createLyap } from '../factoriesAny.js';\nexport var BigNumber = /* #__PURE__ */createBigNumberClass({\n  config\n});\nexport var Complex = /* #__PURE__ */createComplexClass({});\nexport var e = /* #__PURE__ */createE({\n  BigNumber,\n  config\n});\nexport var _false = /* #__PURE__ */createFalse({});\nexport var fineStructure = /* #__PURE__ */createFineStructure({\n  BigNumber,\n  config\n});\nexport var Fraction = /* #__PURE__ */createFractionClass({});\nexport var i = /* #__PURE__ */createI({\n  Complex\n});\nexport var _Infinity = /* #__PURE__ */createInfinity({\n  BigNumber,\n  config\n});\nexport var LN10 = /* #__PURE__ */createLN10({\n  BigNumber,\n  config\n});\nexport var LOG10E = /* #__PURE__ */createLOG10E({\n  BigNumber,\n  config\n});\nexport var Matrix = /* #__PURE__ */createMatrixClass({});\nexport var _NaN = /* #__PURE__ */createNaN({\n  BigNumber,\n  config\n});\nexport var _null = /* #__PURE__ */createNull({});\nexport var phi = /* #__PURE__ */createPhi({\n  BigNumber,\n  config\n});\nexport var Range = /* #__PURE__ */createRangeClass({});\nexport var ResultSet = /* #__PURE__ */createResultSet({});\nexport var SQRT1_2 = /* #__PURE__ */createSQRT1_2({\n  BigNumber,\n  config\n});\nexport var sackurTetrode = /* #__PURE__ */createSackurTetrode({\n  BigNumber,\n  config\n});\nexport var tau = /* #__PURE__ */createTau({\n  BigNumber,\n  config\n});\nexport var _true = /* #__PURE__ */createTrue({});\nexport var version = /* #__PURE__ */createVersion({});\nexport var DenseMatrix = /* #__PURE__ */createDenseMatrixClass({\n  Matrix\n});\nexport var efimovFactor = /* #__PURE__ */createEfimovFactor({\n  BigNumber,\n  config\n});\nexport var LN2 = /* #__PURE__ */createLN2({\n  BigNumber,\n  config\n});\nexport var pi = /* #__PURE__ */createPi({\n  BigNumber,\n  config\n});\nexport var replacer = /* #__PURE__ */createReplacer({});\nexport var SQRT2 = /* #__PURE__ */createSQRT2({\n  BigNumber,\n  config\n});\nexport var typed = /* #__PURE__ */createTyped({\n  BigNumber,\n  Complex,\n  DenseMatrix,\n  Fraction\n});\nexport var weakMixingAngle = /* #__PURE__ */createWeakMixingAngle({\n  BigNumber,\n  config\n});\nexport var abs = /* #__PURE__ */createAbs({\n  typed\n});\nexport var acos = /* #__PURE__ */createAcos({\n  Complex,\n  config,\n  typed\n});\nexport var acot = /* #__PURE__ */createAcot({\n  BigNumber,\n  typed\n});\nexport var acsc = /* #__PURE__ */createAcsc({\n  BigNumber,\n  Complex,\n  config,\n  typed\n});\nexport var addScalar = /* #__PURE__ */createAddScalar({\n  typed\n});\nexport var arg = /* #__PURE__ */createArg({\n  typed\n});\nexport var asech = /* #__PURE__ */createAsech({\n  BigNumber,\n  Complex,\n  config,\n  typed\n});\nexport var asinh = /* #__PURE__ */createAsinh({\n  typed\n});\nexport var atan = /* #__PURE__ */createAtan({\n  typed\n});\nexport var atanh = /* #__PURE__ */createAtanh({\n  Complex,\n  config,\n  typed\n});\nexport var bigint = /* #__PURE__ */createBigint({\n  typed\n});\nexport var bitNot = /* #__PURE__ */createBitNot({\n  typed\n});\nexport var boolean = /* #__PURE__ */createBoolean({\n  typed\n});\nexport var clone = /* #__PURE__ */createClone({\n  typed\n});\nexport var combinations = /* #__PURE__ */createCombinations({\n  typed\n});\nexport var complex = /* #__PURE__ */createComplex({\n  Complex,\n  typed\n});\nexport var conj = /* #__PURE__ */createConj({\n  typed\n});\nexport var cos = /* #__PURE__ */createCos({\n  typed\n});\nexport var cot = /* #__PURE__ */createCot({\n  BigNumber,\n  typed\n});\nexport var csc = /* #__PURE__ */createCsc({\n  BigNumber,\n  typed\n});\nexport var cube = /* #__PURE__ */createCube({\n  typed\n});\nexport var equalScalar = /* #__PURE__ */createEqualScalar({\n  config,\n  typed\n});\nexport var erf = /* #__PURE__ */createErf({\n  typed\n});\nexport var exp = /* #__PURE__ */createExp({\n  typed\n});\nexport var expm1 = /* #__PURE__ */createExpm1({\n  Complex,\n  typed\n});\nexport var filter = /* #__PURE__ */createFilter({\n  typed\n});\nexport var flatten = /* #__PURE__ */createFlatten({\n  typed\n});\nexport var forEach = /* #__PURE__ */createForEach({\n  typed\n});\nexport var format = /* #__PURE__ */createFormat({\n  typed\n});\nexport var getMatrixDataType = /* #__PURE__ */createGetMatrixDataType({\n  typed\n});\nexport var hex = /* #__PURE__ */createHex({\n  format,\n  typed\n});\nexport var im = /* #__PURE__ */createIm({\n  typed\n});\nexport var isInteger = /* #__PURE__ */createIsInteger({\n  typed\n});\nexport var isNegative = /* #__PURE__ */createIsNegative({\n  config,\n  typed\n});\nexport var isPositive = /* #__PURE__ */createIsPositive({\n  config,\n  typed\n});\nexport var isZero = /* #__PURE__ */createIsZero({\n  equalScalar,\n  typed\n});\nexport var LOG2E = /* #__PURE__ */createLOG2E({\n  BigNumber,\n  config\n});\nexport var lgamma = /* #__PURE__ */createLgamma({\n  Complex,\n  typed\n});\nexport var log10 = /* #__PURE__ */createLog10({\n  Complex,\n  config,\n  typed\n});\nexport var log2 = /* #__PURE__ */createLog2({\n  Complex,\n  config,\n  typed\n});\nexport var map = /* #__PURE__ */createMap({\n  typed\n});\nexport var multiplyScalar = /* #__PURE__ */createMultiplyScalar({\n  typed\n});\nexport var not = /* #__PURE__ */createNot({\n  typed\n});\nexport var number = /* #__PURE__ */createNumber({\n  typed\n});\nexport var oct = /* #__PURE__ */createOct({\n  format,\n  typed\n});\nexport var pickRandom = /* #__PURE__ */createPickRandom({\n  config,\n  typed\n});\nexport var print = /* #__PURE__ */createPrint({\n  typed\n});\nexport var random = /* #__PURE__ */createRandom({\n  config,\n  typed\n});\nexport var re = /* #__PURE__ */createRe({\n  typed\n});\nexport var sec = /* #__PURE__ */createSec({\n  BigNumber,\n  typed\n});\nexport var sign = /* #__PURE__ */createSign({\n  BigNumber,\n  Fraction,\n  complex,\n  typed\n});\nexport var sin = /* #__PURE__ */createSin({\n  typed\n});\nexport var SparseMatrix = /* #__PURE__ */createSparseMatrixClass({\n  Matrix,\n  equalScalar,\n  typed\n});\nexport var splitUnit = /* #__PURE__ */createSplitUnit({\n  typed\n});\nexport var square = /* #__PURE__ */createSquare({\n  typed\n});\nexport var string = /* #__PURE__ */createString({\n  typed\n});\nexport var subtractScalar = /* #__PURE__ */createSubtractScalar({\n  typed\n});\nexport var tan = /* #__PURE__ */createTan({\n  typed\n});\nexport var typeOf = /* #__PURE__ */createTypeOf({\n  typed\n});\nexport var acosh = /* #__PURE__ */createAcosh({\n  Complex,\n  config,\n  typed\n});\nexport var acsch = /* #__PURE__ */createAcsch({\n  BigNumber,\n  typed\n});\nexport var apply = /* #__PURE__ */createApply({\n  isInteger,\n  typed\n});\nexport var asec = /* #__PURE__ */createAsec({\n  BigNumber,\n  Complex,\n  config,\n  typed\n});\nexport var bignumber = /* #__PURE__ */createBignumber({\n  BigNumber,\n  typed\n});\nexport var combinationsWithRep = /* #__PURE__ */createCombinationsWithRep({\n  typed\n});\nexport var cosh = /* #__PURE__ */createCosh({\n  typed\n});\nexport var csch = /* #__PURE__ */createCsch({\n  BigNumber,\n  typed\n});\nexport var isNaN = /* #__PURE__ */createIsNaN({\n  typed\n});\nexport var isPrime = /* #__PURE__ */createIsPrime({\n  typed\n});\nexport var randomInt = /* #__PURE__ */createRandomInt({\n  config,\n  typed\n});\nexport var sech = /* #__PURE__ */createSech({\n  BigNumber,\n  typed\n});\nexport var sinh = /* #__PURE__ */createSinh({\n  typed\n});\nexport var sparse = /* #__PURE__ */createSparse({\n  SparseMatrix,\n  typed\n});\nexport var sqrt = /* #__PURE__ */createSqrt({\n  Complex,\n  config,\n  typed\n});\nexport var squeeze = /* #__PURE__ */createSqueeze({\n  typed\n});\nexport var tanh = /* #__PURE__ */createTanh({\n  typed\n});\nexport var unaryMinus = /* #__PURE__ */createUnaryMinus({\n  typed\n});\nexport var acoth = /* #__PURE__ */createAcoth({\n  BigNumber,\n  Complex,\n  config,\n  typed\n});\nexport var bin = /* #__PURE__ */createBin({\n  format,\n  typed\n});\nexport var coth = /* #__PURE__ */createCoth({\n  BigNumber,\n  typed\n});\nexport var fraction = /* #__PURE__ */createFraction({\n  Fraction,\n  typed\n});\nexport var isNumeric = /* #__PURE__ */createIsNumeric({\n  typed\n});\nexport var matrix = /* #__PURE__ */createMatrix({\n  DenseMatrix,\n  Matrix,\n  SparseMatrix,\n  typed\n});\nexport var matrixFromFunction = /* #__PURE__ */createMatrixFromFunction({\n  isZero,\n  matrix,\n  typed\n});\nexport var mode = /* #__PURE__ */createMode({\n  isNaN,\n  isNumeric,\n  typed\n});\nexport var numeric = /* #__PURE__ */createNumeric({\n  bignumber,\n  fraction,\n  number\n});\nexport var prod = /* #__PURE__ */createProd({\n  config,\n  multiplyScalar,\n  numeric,\n  typed\n});\nexport var reshape = /* #__PURE__ */createReshape({\n  isInteger,\n  matrix,\n  typed\n});\nexport var size = /* #__PURE__ */createSize({\n  matrix,\n  config,\n  typed\n});\nexport var transpose = /* #__PURE__ */createTranspose({\n  matrix,\n  typed\n});\nexport var xgcd = /* #__PURE__ */createXgcd({\n  BigNumber,\n  config,\n  matrix,\n  typed\n});\nexport var zeros = /* #__PURE__ */createZeros({\n  BigNumber,\n  config,\n  matrix,\n  typed\n});\nexport var asin = /* #__PURE__ */createAsin({\n  Complex,\n  config,\n  typed\n});\nexport var cbrt = /* #__PURE__ */createCbrt({\n  BigNumber,\n  Complex,\n  Fraction,\n  config,\n  isNegative,\n  matrix,\n  typed,\n  unaryMinus\n});\nexport var concat = /* #__PURE__ */createConcat({\n  isInteger,\n  matrix,\n  typed\n});\nexport var count = /* #__PURE__ */createCount({\n  prod,\n  size,\n  typed\n});\nexport var ctranspose = /* #__PURE__ */createCtranspose({\n  conj,\n  transpose,\n  typed\n});\nexport var diag = /* #__PURE__ */createDiag({\n  DenseMatrix,\n  SparseMatrix,\n  matrix,\n  typed\n});\nexport var divideScalar = /* #__PURE__ */createDivideScalar({\n  numeric,\n  typed\n});\nexport var dotDivide = /* #__PURE__ */createDotDivide({\n  DenseMatrix,\n  SparseMatrix,\n  concat,\n  divideScalar,\n  equalScalar,\n  matrix,\n  typed\n});\nexport var equal = /* #__PURE__ */createEqual({\n  DenseMatrix,\n  SparseMatrix,\n  concat,\n  equalScalar,\n  matrix,\n  typed\n});\nexport var hasNumericValue = /* #__PURE__ */createHasNumericValue({\n  isNumeric,\n  typed\n});\nexport var identity = /* #__PURE__ */createIdentity({\n  BigNumber,\n  DenseMatrix,\n  SparseMatrix,\n  config,\n  matrix,\n  typed\n});\nexport var kron = /* #__PURE__ */createKron({\n  matrix,\n  multiplyScalar,\n  typed\n});\nexport var largerEq = /* #__PURE__ */createLargerEq({\n  DenseMatrix,\n  SparseMatrix,\n  concat,\n  config,\n  matrix,\n  typed\n});\nexport var leftShift = /* #__PURE__ */createLeftShift({\n  DenseMatrix,\n  concat,\n  equalScalar,\n  matrix,\n  typed,\n  zeros\n});\nexport var lsolve = /* #__PURE__ */createLsolve({\n  DenseMatrix,\n  divideScalar,\n  equalScalar,\n  matrix,\n  multiplyScalar,\n  subtractScalar,\n  typed\n});\nexport var matrixFromColumns = /* #__PURE__ */createMatrixFromColumns({\n  flatten,\n  matrix,\n  size,\n  typed\n});\nexport var nthRoot = /* #__PURE__ */createNthRoot({\n  BigNumber,\n  concat,\n  equalScalar,\n  matrix,\n  typed\n});\nexport var ones = /* #__PURE__ */createOnes({\n  BigNumber,\n  config,\n  matrix,\n  typed\n});\nexport var qr = /* #__PURE__ */createQr({\n  addScalar,\n  complex,\n  conj,\n  divideScalar,\n  equal,\n  identity,\n  isZero,\n  matrix,\n  multiplyScalar,\n  sign,\n  sqrt,\n  subtractScalar,\n  typed,\n  unaryMinus,\n  zeros\n});\nexport var resize = /* #__PURE__ */createResize({\n  config,\n  matrix\n});\nexport var rightArithShift = /* #__PURE__ */createRightArithShift({\n  DenseMatrix,\n  concat,\n  equalScalar,\n  matrix,\n  typed,\n  zeros\n});\nexport var round = /* #__PURE__ */createRound({\n  BigNumber,\n  DenseMatrix,\n  config,\n  equalScalar,\n  matrix,\n  typed,\n  zeros\n});\nexport var smaller = /* #__PURE__ */createSmaller({\n  DenseMatrix,\n  SparseMatrix,\n  concat,\n  config,\n  matrix,\n  typed\n});\nexport var subtract = /* #__PURE__ */createSubtract({\n  DenseMatrix,\n  concat,\n  equalScalar,\n  matrix,\n  subtractScalar,\n  typed,\n  unaryMinus\n});\nexport var to = /* #__PURE__ */createTo({\n  concat,\n  matrix,\n  typed\n});\nexport var unaryPlus = /* #__PURE__ */createUnaryPlus({\n  config,\n  numeric,\n  typed\n});\nexport var usolve = /* #__PURE__ */createUsolve({\n  DenseMatrix,\n  divideScalar,\n  equalScalar,\n  matrix,\n  multiplyScalar,\n  subtractScalar,\n  typed\n});\nexport var xor = /* #__PURE__ */createXor({\n  DenseMatrix,\n  SparseMatrix,\n  concat,\n  matrix,\n  typed\n});\nexport var add = /* #__PURE__ */createAdd({\n  DenseMatrix,\n  SparseMatrix,\n  addScalar,\n  concat,\n  equalScalar,\n  matrix,\n  typed\n});\nexport var atan2 = /* #__PURE__ */createAtan2({\n  BigNumber,\n  DenseMatrix,\n  concat,\n  equalScalar,\n  matrix,\n  typed\n});\nexport var bitAnd = /* #__PURE__ */createBitAnd({\n  concat,\n  equalScalar,\n  matrix,\n  typed\n});\nexport var bitOr = /* #__PURE__ */createBitOr({\n  DenseMatrix,\n  concat,\n  equalScalar,\n  matrix,\n  typed\n});\nexport var bitXor = /* #__PURE__ */createBitXor({\n  DenseMatrix,\n  SparseMatrix,\n  concat,\n  matrix,\n  typed\n});\nexport var catalan = /* #__PURE__ */createCatalan({\n  addScalar,\n  combinations,\n  divideScalar,\n  isInteger,\n  isNegative,\n  multiplyScalar,\n  typed\n});\nexport var compare = /* #__PURE__ */createCompare({\n  BigNumber,\n  DenseMatrix,\n  Fraction,\n  concat,\n  config,\n  equalScalar,\n  matrix,\n  typed\n});\nexport var compareText = /* #__PURE__ */createCompareText({\n  concat,\n  matrix,\n  typed\n});\nexport var cumsum = /* #__PURE__ */createCumSum({\n  add,\n  typed,\n  unaryPlus\n});\nexport var deepEqual = /* #__PURE__ */createDeepEqual({\n  equal,\n  typed\n});\nexport var diff = /* #__PURE__ */createDiff({\n  matrix,\n  number,\n  subtract,\n  typed\n});\nexport var distance = /* #__PURE__ */createDistance({\n  abs,\n  addScalar,\n  deepEqual,\n  divideScalar,\n  multiplyScalar,\n  sqrt,\n  subtractScalar,\n  typed\n});\nexport var dot = /* #__PURE__ */createDot({\n  addScalar,\n  conj,\n  multiplyScalar,\n  size,\n  typed\n});\nexport var equalText = /* #__PURE__ */createEqualText({\n  compareText,\n  isZero,\n  typed\n});\nexport var floor = /* #__PURE__ */createFloor({\n  DenseMatrix,\n  config,\n  equalScalar,\n  matrix,\n  round,\n  typed,\n  zeros\n});\nexport var gcd = /* #__PURE__ */createGcd({\n  BigNumber,\n  DenseMatrix,\n  concat,\n  config,\n  equalScalar,\n  matrix,\n  round,\n  typed,\n  zeros\n});\nexport var hypot = /* #__PURE__ */createHypot({\n  abs,\n  addScalar,\n  divideScalar,\n  isPositive,\n  multiplyScalar,\n  smaller,\n  sqrt,\n  typed\n});\nexport var ImmutableDenseMatrix = /* #__PURE__ */createImmutableDenseMatrixClass({\n  DenseMatrix,\n  smaller\n});\nexport var Index = /* #__PURE__ */createIndexClass({\n  ImmutableDenseMatrix,\n  getMatrixDataType\n});\nexport var larger = /* #__PURE__ */createLarger({\n  DenseMatrix,\n  SparseMatrix,\n  concat,\n  config,\n  matrix,\n  typed\n});\nexport var log = /* #__PURE__ */createLog({\n  Complex,\n  config,\n  divideScalar,\n  typeOf,\n  typed\n});\nexport var lsolveAll = /* #__PURE__ */createLsolveAll({\n  DenseMatrix,\n  divideScalar,\n  equalScalar,\n  matrix,\n  multiplyScalar,\n  subtractScalar,\n  typed\n});\nexport var matrixFromRows = /* #__PURE__ */createMatrixFromRows({\n  flatten,\n  matrix,\n  size,\n  typed\n});\nexport var min = /* #__PURE__ */createMin({\n  config,\n  numeric,\n  smaller,\n  typed\n});\nexport var mod = /* #__PURE__ */createMod({\n  DenseMatrix,\n  concat,\n  config,\n  equalScalar,\n  matrix,\n  round,\n  typed,\n  zeros\n});\nexport var multiply = /* #__PURE__ */createMultiply({\n  addScalar,\n  dot,\n  equalScalar,\n  matrix,\n  multiplyScalar,\n  typed\n});\nexport var nthRoots = /* #__PURE__ */createNthRoots({\n  Complex,\n  config,\n  divideScalar,\n  typed\n});\nexport var or = /* #__PURE__ */createOr({\n  DenseMatrix,\n  concat,\n  equalScalar,\n  matrix,\n  typed\n});\nexport var partitionSelect = /* #__PURE__ */createPartitionSelect({\n  compare,\n  isNaN,\n  isNumeric,\n  typed\n});\nexport var rightLogShift = /* #__PURE__ */createRightLogShift({\n  DenseMatrix,\n  concat,\n  equalScalar,\n  matrix,\n  typed,\n  zeros\n});\nexport var slu = /* #__PURE__ */createSlu({\n  SparseMatrix,\n  abs,\n  add,\n  divideScalar,\n  larger,\n  largerEq,\n  multiply,\n  subtract,\n  transpose,\n  typed\n});\nexport var subset = /* #__PURE__ */createSubset({\n  add,\n  matrix,\n  typed,\n  zeros\n});\nexport var sum = /* #__PURE__ */createSum({\n  add,\n  config,\n  numeric,\n  typed\n});\nexport var trace = /* #__PURE__ */createTrace({\n  add,\n  matrix,\n  typed\n});\nexport var usolveAll = /* #__PURE__ */createUsolveAll({\n  DenseMatrix,\n  divideScalar,\n  equalScalar,\n  matrix,\n  multiplyScalar,\n  subtractScalar,\n  typed\n});\nexport var zpk2tf = /* #__PURE__ */createZpk2tf({\n  Complex,\n  add,\n  multiply,\n  number,\n  typed\n});\nexport var ceil = /* #__PURE__ */createCeil({\n  DenseMatrix,\n  config,\n  equalScalar,\n  matrix,\n  round,\n  typed,\n  zeros\n});\nexport var compareNatural = /* #__PURE__ */createCompareNatural({\n  compare,\n  typed\n});\nexport var composition = /* #__PURE__ */createComposition({\n  addScalar,\n  combinations,\n  isInteger,\n  isNegative,\n  isPositive,\n  larger,\n  typed\n});\nexport var cross = /* #__PURE__ */createCross({\n  matrix,\n  multiply,\n  subtract,\n  typed\n});\nexport var det = /* #__PURE__ */createDet({\n  divideScalar,\n  isZero,\n  matrix,\n  multiply,\n  subtractScalar,\n  typed,\n  unaryMinus\n});\nexport var dotMultiply = /* #__PURE__ */createDotMultiply({\n  concat,\n  equalScalar,\n  matrix,\n  multiplyScalar,\n  typed\n});\nexport var FibonacciHeap = /* #__PURE__ */createFibonacciHeapClass({\n  larger,\n  smaller\n});\nexport var fix = /* #__PURE__ */createFix({\n  Complex,\n  DenseMatrix,\n  ceil,\n  equalScalar,\n  floor,\n  matrix,\n  typed,\n  zeros\n});\nexport var index = /* #__PURE__ */createIndex({\n  Index,\n  typed\n});\nexport var intersect = /* #__PURE__ */createIntersect({\n  abs,\n  add,\n  addScalar,\n  config,\n  divideScalar,\n  equalScalar,\n  flatten,\n  isNumeric,\n  isZero,\n  matrix,\n  multiply,\n  multiplyScalar,\n  smaller,\n  subtract,\n  typed\n});\nexport var invmod = /* #__PURE__ */createInvmod({\n  BigNumber,\n  add,\n  config,\n  equal,\n  isInteger,\n  mod,\n  smaller,\n  typed,\n  xgcd\n});\nexport var lcm = /* #__PURE__ */createLcm({\n  concat,\n  equalScalar,\n  matrix,\n  typed\n});\nexport var log1p = /* #__PURE__ */createLog1p({\n  Complex,\n  config,\n  divideScalar,\n  log,\n  typed\n});\nexport var max = /* #__PURE__ */createMax({\n  config,\n  larger,\n  numeric,\n  typed\n});\nexport var setCartesian = /* #__PURE__ */createSetCartesian({\n  DenseMatrix,\n  Index,\n  compareNatural,\n  size,\n  subset,\n  typed\n});\nexport var setDistinct = /* #__PURE__ */createSetDistinct({\n  DenseMatrix,\n  Index,\n  compareNatural,\n  size,\n  subset,\n  typed\n});\nexport var setIsSubset = /* #__PURE__ */createSetIsSubset({\n  Index,\n  compareNatural,\n  size,\n  subset,\n  typed\n});\nexport var setPowerset = /* #__PURE__ */createSetPowerset({\n  Index,\n  compareNatural,\n  size,\n  subset,\n  typed\n});\nexport var smallerEq = /* #__PURE__ */createSmallerEq({\n  DenseMatrix,\n  SparseMatrix,\n  concat,\n  config,\n  matrix,\n  typed\n});\nexport var sort = /* #__PURE__ */createSort({\n  compare,\n  compareNatural,\n  matrix,\n  typed\n});\nexport var unequal = /* #__PURE__ */createUnequal({\n  DenseMatrix,\n  SparseMatrix,\n  concat,\n  config,\n  equalScalar,\n  matrix,\n  typed\n});\nexport var and = /* #__PURE__ */createAnd({\n  concat,\n  equalScalar,\n  matrix,\n  not,\n  typed,\n  zeros\n});\nexport var range = /* #__PURE__ */createRange({\n  bignumber,\n  matrix,\n  add,\n  config,\n  isPositive,\n  larger,\n  largerEq,\n  smaller,\n  smallerEq,\n  typed\n});\nexport var row = /* #__PURE__ */createRow({\n  Index,\n  matrix,\n  range,\n  typed\n});\nexport var setDifference = /* #__PURE__ */createSetDifference({\n  DenseMatrix,\n  Index,\n  compareNatural,\n  size,\n  subset,\n  typed\n});\nexport var setMultiplicity = /* #__PURE__ */createSetMultiplicity({\n  Index,\n  compareNatural,\n  size,\n  subset,\n  typed\n});\nexport var setSymDifference = /* #__PURE__ */createSetSymDifference({\n  Index,\n  concat,\n  setDifference,\n  size,\n  subset,\n  typed\n});\nexport var Spa = /* #__PURE__ */createSpaClass({\n  FibonacciHeap,\n  addScalar,\n  equalScalar\n});\nexport var column = /* #__PURE__ */createColumn({\n  Index,\n  matrix,\n  range,\n  typed\n});\nexport var inv = /* #__PURE__ */createInv({\n  abs,\n  addScalar,\n  det,\n  divideScalar,\n  identity,\n  matrix,\n  multiply,\n  typed,\n  unaryMinus\n});\nexport var lup = /* #__PURE__ */createLup({\n  DenseMatrix,\n  Spa,\n  SparseMatrix,\n  abs,\n  addScalar,\n  divideScalar,\n  equalScalar,\n  larger,\n  matrix,\n  multiplyScalar,\n  subtractScalar,\n  typed,\n  unaryMinus\n});\nexport var pinv = /* #__PURE__ */createPinv({\n  Complex,\n  add,\n  ctranspose,\n  deepEqual,\n  divideScalar,\n  dot,\n  dotDivide,\n  equal,\n  inv,\n  matrix,\n  multiply,\n  typed\n});\nexport var pow = /* #__PURE__ */createPow({\n  Complex,\n  config,\n  fraction,\n  identity,\n  inv,\n  matrix,\n  multiply,\n  number,\n  typed\n});\nexport var setIntersect = /* #__PURE__ */createSetIntersect({\n  DenseMatrix,\n  Index,\n  compareNatural,\n  size,\n  subset,\n  typed\n});\nexport var setUnion = /* #__PURE__ */createSetUnion({\n  Index,\n  concat,\n  setIntersect,\n  setSymDifference,\n  size,\n  subset,\n  typed\n});\nexport var sqrtm = /* #__PURE__ */createSqrtm({\n  abs,\n  add,\n  identity,\n  inv,\n  map,\n  max,\n  multiply,\n  size,\n  sqrt,\n  subtract,\n  typed\n});\nexport var Unit = /* #__PURE__ */createUnitClass({\n  BigNumber,\n  Complex,\n  Fraction,\n  abs,\n  addScalar,\n  config,\n  divideScalar,\n  equal,\n  fix,\n  format,\n  isNumeric,\n  multiplyScalar,\n  number,\n  pow,\n  round,\n  subtractScalar\n});\nexport var vacuumImpedance = /* #__PURE__ */createVacuumImpedance({\n  BigNumber,\n  Unit,\n  config\n});\nexport var wienDisplacement = /* #__PURE__ */createWienDisplacement({\n  BigNumber,\n  Unit,\n  config\n});\nexport var atomicMass = /* #__PURE__ */createAtomicMass({\n  BigNumber,\n  Unit,\n  config\n});\nexport var bohrMagneton = /* #__PURE__ */createBohrMagneton({\n  BigNumber,\n  Unit,\n  config\n});\nexport var boltzmann = /* #__PURE__ */createBoltzmann({\n  BigNumber,\n  Unit,\n  config\n});\nexport var conductanceQuantum = /* #__PURE__ */createConductanceQuantum({\n  BigNumber,\n  Unit,\n  config\n});\nexport var coulomb = /* #__PURE__ */createCoulomb({\n  BigNumber,\n  Unit,\n  config\n});\nexport var deuteronMass = /* #__PURE__ */createDeuteronMass({\n  BigNumber,\n  Unit,\n  config\n});\nexport var dotPow = /* #__PURE__ */createDotPow({\n  DenseMatrix,\n  SparseMatrix,\n  concat,\n  equalScalar,\n  matrix,\n  pow,\n  typed\n});\nexport var electricConstant = /* #__PURE__ */createElectricConstant({\n  BigNumber,\n  Unit,\n  config\n});\nexport var elementaryCharge = /* #__PURE__ */createElementaryCharge({\n  BigNumber,\n  Unit,\n  config\n});\nexport var expm = /* #__PURE__ */createExpm({\n  abs,\n  add,\n  identity,\n  inv,\n  multiply,\n  typed\n});\nexport var faraday = /* #__PURE__ */createFaraday({\n  BigNumber,\n  Unit,\n  config\n});\nexport var fft = /* #__PURE__ */createFft({\n  addScalar,\n  ceil,\n  conj,\n  divideScalar,\n  dotDivide,\n  exp,\n  i,\n  log2,\n  matrix,\n  multiplyScalar,\n  pow,\n  tau,\n  typed\n});\nexport var gamma = /* #__PURE__ */createGamma({\n  BigNumber,\n  Complex,\n  config,\n  multiplyScalar,\n  pow,\n  typed\n});\nexport var gravitationConstant = /* #__PURE__ */createGravitationConstant({\n  BigNumber,\n  Unit,\n  config\n});\nexport var hartreeEnergy = /* #__PURE__ */createHartreeEnergy({\n  BigNumber,\n  Unit,\n  config\n});\nexport var ifft = /* #__PURE__ */createIfft({\n  conj,\n  dotDivide,\n  fft,\n  typed\n});\nexport var klitzing = /* #__PURE__ */createKlitzing({\n  BigNumber,\n  Unit,\n  config\n});\nexport var loschmidt = /* #__PURE__ */createLoschmidt({\n  BigNumber,\n  Unit,\n  config\n});\nexport var magneticConstant = /* #__PURE__ */createMagneticConstant({\n  BigNumber,\n  Unit,\n  config\n});\nexport var molarMass = /* #__PURE__ */createMolarMass({\n  BigNumber,\n  Unit,\n  config\n});\nexport var molarPlanckConstant = /* #__PURE__ */createMolarPlanckConstant({\n  BigNumber,\n  Unit,\n  config\n});\nexport var neutronMass = /* #__PURE__ */createNeutronMass({\n  BigNumber,\n  Unit,\n  config\n});\nexport var nuclearMagneton = /* #__PURE__ */createNuclearMagneton({\n  BigNumber,\n  Unit,\n  config\n});\nexport var planckCharge = /* #__PURE__ */createPlanckCharge({\n  BigNumber,\n  Unit,\n  config\n});\nexport var planckLength = /* #__PURE__ */createPlanckLength({\n  BigNumber,\n  Unit,\n  config\n});\nexport var planckTemperature = /* #__PURE__ */createPlanckTemperature({\n  BigNumber,\n  Unit,\n  config\n});\nexport var protonMass = /* #__PURE__ */createProtonMass({\n  BigNumber,\n  Unit,\n  config\n});\nexport var quantumOfCirculation = /* #__PURE__ */createQuantumOfCirculation({\n  BigNumber,\n  Unit,\n  config\n});\nexport var reducedPlanckConstant = /* #__PURE__ */createReducedPlanckConstant({\n  BigNumber,\n  Unit,\n  config\n});\nexport var rydberg = /* #__PURE__ */createRydberg({\n  BigNumber,\n  Unit,\n  config\n});\nexport var secondRadiation = /* #__PURE__ */createSecondRadiation({\n  BigNumber,\n  Unit,\n  config\n});\nexport var speedOfLight = /* #__PURE__ */createSpeedOfLight({\n  BigNumber,\n  Unit,\n  config\n});\nexport var stefanBoltzmann = /* #__PURE__ */createStefanBoltzmann({\n  BigNumber,\n  Unit,\n  config\n});\nexport var thomsonCrossSection = /* #__PURE__ */createThomsonCrossSection({\n  BigNumber,\n  Unit,\n  config\n});\nexport var avogadro = /* #__PURE__ */createAvogadro({\n  BigNumber,\n  Unit,\n  config\n});\nexport var bohrRadius = /* #__PURE__ */createBohrRadius({\n  BigNumber,\n  Unit,\n  config\n});\nexport var createUnit = /* #__PURE__ */createCreateUnit({\n  Unit,\n  typed\n});\nexport var divide = /* #__PURE__ */createDivide({\n  divideScalar,\n  equalScalar,\n  inv,\n  matrix,\n  multiply,\n  typed\n});\nexport var electronMass = /* #__PURE__ */createElectronMass({\n  BigNumber,\n  Unit,\n  config\n});\nexport var factorial = /* #__PURE__ */createFactorial({\n  gamma,\n  typed\n});\nexport var firstRadiation = /* #__PURE__ */createFirstRadiation({\n  BigNumber,\n  Unit,\n  config\n});\nexport var gravity = /* #__PURE__ */createGravity({\n  BigNumber,\n  Unit,\n  config\n});\nexport var inverseConductanceQuantum = /* #__PURE__ */createInverseConductanceQuantum({\n  BigNumber,\n  Unit,\n  config\n});\nexport var lusolve = /* #__PURE__ */createLusolve({\n  DenseMatrix,\n  lsolve,\n  lup,\n  matrix,\n  slu,\n  typed,\n  usolve\n});\nexport var magneticFluxQuantum = /* #__PURE__ */createMagneticFluxQuantum({\n  BigNumber,\n  Unit,\n  config\n});\nexport var molarMassC12 = /* #__PURE__ */createMolarMassC12({\n  BigNumber,\n  Unit,\n  config\n});\nexport var multinomial = /* #__PURE__ */createMultinomial({\n  add,\n  divide,\n  factorial,\n  isInteger,\n  isPositive,\n  multiply,\n  typed\n});\nexport var permutations = /* #__PURE__ */createPermutations({\n  factorial,\n  typed\n});\nexport var planckMass = /* #__PURE__ */createPlanckMass({\n  BigNumber,\n  Unit,\n  config\n});\nexport var polynomialRoot = /* #__PURE__ */createPolynomialRoot({\n  add,\n  cbrt,\n  divide,\n  equalScalar,\n  im,\n  isZero,\n  multiply,\n  re,\n  sqrt,\n  subtract,\n  typeOf,\n  typed,\n  unaryMinus\n});\nexport var setSize = /* #__PURE__ */createSetSize({\n  compareNatural,\n  typed\n});\nexport var solveODE = /* #__PURE__ */createSolveODE({\n  abs,\n  add,\n  bignumber,\n  divide,\n  isNegative,\n  isPositive,\n  larger,\n  map,\n  matrix,\n  max,\n  multiply,\n  smaller,\n  subtract,\n  typed,\n  unaryMinus\n});\nexport var stirlingS2 = /* #__PURE__ */createStirlingS2({\n  bignumber,\n  addScalar,\n  combinations,\n  divideScalar,\n  factorial,\n  isInteger,\n  isNegative,\n  larger,\n  multiplyScalar,\n  number,\n  pow,\n  subtractScalar,\n  typed\n});\nexport var unit = /* #__PURE__ */createUnitFunction({\n  Unit,\n  typed\n});\nexport var bellNumbers = /* #__PURE__ */createBellNumbers({\n  addScalar,\n  isInteger,\n  isNegative,\n  stirlingS2,\n  typed\n});\nexport var eigs = /* #__PURE__ */createEigs({\n  abs,\n  add,\n  addScalar,\n  atan,\n  bignumber,\n  column,\n  complex,\n  config,\n  cos,\n  diag,\n  divideScalar,\n  dot,\n  equal,\n  flatten,\n  im,\n  inv,\n  larger,\n  matrix,\n  matrixFromColumns,\n  multiply,\n  multiplyScalar,\n  number,\n  qr,\n  re,\n  reshape,\n  sin,\n  size,\n  smaller,\n  sqrt,\n  subtract,\n  typed,\n  usolve,\n  usolveAll\n});\nexport var fermiCoupling = /* #__PURE__ */createFermiCoupling({\n  BigNumber,\n  Unit,\n  config\n});\nexport var gasConstant = /* #__PURE__ */createGasConstant({\n  BigNumber,\n  Unit,\n  config\n});\nexport var kldivergence = /* #__PURE__ */createKldivergence({\n  divide,\n  dotDivide,\n  isNumeric,\n  log,\n  map,\n  matrix,\n  multiply,\n  sum,\n  typed\n});\nexport var mean = /* #__PURE__ */createMean({\n  add,\n  divide,\n  typed\n});\nexport var molarVolume = /* #__PURE__ */createMolarVolume({\n  BigNumber,\n  Unit,\n  config\n});\nexport var planckConstant = /* #__PURE__ */createPlanckConstant({\n  BigNumber,\n  Unit,\n  config\n});\nexport var quantileSeq = /* #__PURE__ */createQuantileSeq({\n  bignumber,\n  add,\n  compare,\n  divide,\n  isInteger,\n  larger,\n  multiply,\n  partitionSelect,\n  smaller,\n  smallerEq,\n  subtract,\n  typed\n});\nexport var variance = /* #__PURE__ */createVariance({\n  add,\n  apply,\n  divide,\n  isNaN,\n  multiply,\n  subtract,\n  typed\n});\nexport var classicalElectronRadius = /* #__PURE__ */createClassicalElectronRadius({\n  BigNumber,\n  Unit,\n  config\n});\nexport var median = /* #__PURE__ */createMedian({\n  add,\n  compare,\n  divide,\n  partitionSelect,\n  typed\n});\nexport var corr = /* #__PURE__ */createCorr({\n  add,\n  divide,\n  matrix,\n  mean,\n  multiply,\n  pow,\n  sqrt,\n  subtract,\n  sum,\n  typed\n});\nexport var freqz = /* #__PURE__ */createFreqz({\n  Complex,\n  add,\n  divide,\n  matrix,\n  multiply,\n  typed\n});\nexport var mad = /* #__PURE__ */createMad({\n  abs,\n  map,\n  median,\n  subtract,\n  typed\n});\nexport var std = /* #__PURE__ */createStd({\n  map,\n  sqrt,\n  typed,\n  variance\n});\nexport var zeta = /* #__PURE__ */createZeta({\n  BigNumber,\n  Complex,\n  add,\n  config,\n  divide,\n  equal,\n  factorial,\n  gamma,\n  isNegative,\n  multiply,\n  pi,\n  pow,\n  sin,\n  smallerEq,\n  subtract,\n  typed\n});\nexport var norm = /* #__PURE__ */createNorm({\n  abs,\n  add,\n  conj,\n  ctranspose,\n  eigs,\n  equalScalar,\n  larger,\n  matrix,\n  multiply,\n  pow,\n  smaller,\n  sqrt,\n  typed\n});\nexport var rotationMatrix = /* #__PURE__ */createRotationMatrix({\n  BigNumber,\n  DenseMatrix,\n  SparseMatrix,\n  addScalar,\n  config,\n  cos,\n  matrix,\n  multiplyScalar,\n  norm,\n  sin,\n  typed,\n  unaryMinus\n});\nexport var planckTime = /* #__PURE__ */createPlanckTime({\n  BigNumber,\n  Unit,\n  config\n});\nexport var schur = /* #__PURE__ */createSchur({\n  identity,\n  matrix,\n  multiply,\n  norm,\n  qr,\n  subtract,\n  typed\n});\nexport var rotate = /* #__PURE__ */createRotate({\n  multiply,\n  rotationMatrix,\n  typed\n});\nexport var sylvester = /* #__PURE__ */createSylvester({\n  abs,\n  add,\n  concat,\n  identity,\n  index,\n  lusolve,\n  matrix,\n  matrixFromColumns,\n  multiply,\n  range,\n  schur,\n  subset,\n  subtract,\n  transpose,\n  typed\n});\nexport var lyap = /* #__PURE__ */createLyap({\n  matrix,\n  multiply,\n  sylvester,\n  transpose,\n  typed\n});","import {add, multiply} from 'mathjs';\r\nconst choleskyDecomposition = require('./util/cholesky');\r\nconst normal = require('./normal');\r\n\r\n/**\r\n * Generates random samples from a multivariate normal distribution.\r\n *\r\n * @param {number[]} means - Array of means (μ) for each dimension.\r\n * @param {number[][]} covariance - Covariance matrix (Σ).\r\n * @param {number} [size=1] - Number of samples to generate.\r\n * @returns {number[][]} An array of samples, each sample is an array of length equal to `means.length`.\r\n *\r\n * @throws Will throw an error if the covariance matrix is not square or positive semi-definite.\r\n *\r\n * References:\r\n * - [Wikipedia: Multivariate Normal Distribution](https://en.wikipedia.org/wiki/Multivariate_normal_distribution)\r\n * - [Cholesky Decomposition](https://en.wikipedia.org/wiki/Cholesky_decomposition)\r\n */\r\nfunction multivariateNormal(means, covariance, size = null) {\r\n    if (!Array.isArray(means) || !Array.isArray(covariance)) {\r\n        throw new Error(\"Means and covariance must be arrays.\");\r\n    }\r\n\r\n    const n = means.length;\r\n    if (covariance.length !== n || covariance.some(row => row.length !== n)) {\r\n        throw new Error(\"Covariance matrix must be square and match the size of the means array.\");\r\n    }\r\n\r\n    // Cholesky decomposition of the covariance matrix\r\n    let cholesky;\r\n    try {\r\n        cholesky = choleskyDecomposition(covariance);\r\n    } catch (error) {\r\n        throw new Error(\"Covariance matrix is not positive semi-definite.\");\r\n    }\r\n\r\n    const samples = [];\r\n    for (let i = 0; i < size; i++) {\r\n        // Generate a standard normal sample\r\n        const standardNormal = normal(0.0, 1.0, n)\r\n\r\n        // Transform to multivariate normal: μ + L * Z\r\n        const transformed = add(means, multiply(cholesky, standardNormal));\r\n        samples.push(transformed);\r\n    }\r\n\r\n    return size === 1 ? samples[0] : samples; // Return a single sample if size === 1\r\n}\r\n\r\nmodule.exports = multivariateNormal;\r\n","\r\nconst baseGenerator = require('./base-generator')\r\nconst normal = require('./normal')\r\n/**\r\n * Generates random numbers following a Chi-squared distribution.\r\n *\r\n * @param {number} k - Degrees of freedom (must be a positive integer).\r\n * @param {number|Array|null} [size=null] - The shape of the output:\r\n *   - If `null`, a single number is returned.\r\n *   - If a number, a 1D array of the specified size is returned.\r\n *   - If an array (e.g., [m, n]), a multidimensional array of the specified shape is returned.\r\n * @returns {number|Array} A random number or an array of random numbers from the Chi-squared distribution.\r\n */\r\nfunction chisquare(k, size = null) {\r\n    if (!Number.isInteger(k) || k <= 0) {\r\n        throw new Error(\"Degrees of freedom (k) must be a positive integer.\");\r\n    }\r\n\r\n    const generateChi2 = () => {\r\n        let sum = 0;\r\n        for (let i = 0; i < k; i++) {\r\n            const z = normal();\r\n            sum += z * z;\r\n        }\r\n        return sum;\r\n    };\r\n\r\n    return baseGenerator(generateChi2, size);\r\n}\r\n\r\nmodule.exports = chisquare;\r\n","const { seed } = require('./src/functions/seed')\r\nconst randint = require('./src/functions/randint')\r\nconst uniform = require('./src/functions/uniform')\r\nconst normal = require('./src/functions/normal')\r\nconst cauchy = require('./src/functions/cauchy')\r\nconst exponential = require('./src/functions/exponential.js')\r\nconst shuffle = require('./src/functions/shuffle')\r\nconst permutation = require('./src/functions/permutation')\r\nconst multivariateNormal = require('./src/functions/multivariate-normal')\r\nconst chisquare = require('./src/functions/chisquare')\r\n\r\n\r\nmodule.exports = {\r\n    seed,\r\n    randint,\r\n    uniform,\r\n    normal,\r\n    cauchy,\r\n    exponential,\r\n    shuffle,\r\n    permutation,\r\n    multivariateNormal,\r\n    chisquare\r\n};\r\n","import React from 'react';\r\nimport { randint, uniform } from 'randlibjs';\r\n\r\nfunction RandLibLogo({size}) {\r\n    \r\n    let numberOfLayers = randint(3, 10)\r\n    const centers = []\r\n    const radius = []\r\n    for (let layer = 0; layer < numberOfLayers; layer ++) {\r\n        while (1 / (layer+1) / (layer+1) < uniform()) {\r\n            // Compute center and radius\r\n            const centerAngle = uniform(0, Math.PI/2)\r\n            const centerRadius = uniform(layer, layer+1) / numberOfLayers\r\n            const x = centerRadius * Math.cos(centerAngle)\r\n            const y = 1.0 - centerRadius * Math.sin(centerAngle)\r\n            centers.push([size * x, size * y])\r\n            const circleRadius = uniform(1/(layer+2)/(layer+2), 1/(layer+1)/(layer+1))\r\n            radius.push(size * circleRadius)\r\n        }\r\n    }\r\n    const baseRectangle = <rect x=\"0\" y=\"0\" width=\"32\" height=\"32\" rx=\"8\" ry=\"8\" fill=\"yellow\" />\r\n    return <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" aria-hidden=\"true\" role=\"img\" className=\"randlib-logo\" width={size} height={size} preserveAspectRatio=\"xMidYMid meet\" viewBox={`0 0 ${size} ${size}`}>\r\n    <defs>\r\n    <clipPath id=\"clip-rect\">\r\n      {baseRectangle}\r\n    </clipPath>\r\n  </defs>\r\n    {baseRectangle}\r\n    <g clipPath=\"url(#clip-rect)\">\r\n        <circle cx=\"0\" cy=\"32\" r=\"8\" fill=\"black\" />\r\n        {\r\n            centers.map((_, index) => {\r\n                const x = centers[index][0]\r\n                const y = centers[index][1]\r\n                const r = radius[index]\r\n                return <circle key={index} cx={x} cy={y} r={r} fill=\"black\" />\r\n            })\r\n        }\r\n    </g>\r\n  </svg>\r\n    \r\n}\r\nexport default RandLibLogo;","// src/App.js\nimport React, { useState } from \"react\";\nimport Histogram from \"./Histogram\";\nimport DistributorSelector from \"./DistributorSelector\";\nimport RandLibLogo from \"./RandlibLogo\"\nimport {\n  randint,\n  uniform,\n  normal,\n  cauchy,\n  exponential,\n  chisquare\n} from \"randlibjs\";\nimport \"./App.css\";\n\nconst DISTRIBUTIONS = [\n  { name: \"randint\", sampler: parameters => randint(parameters.low, parameters.high, parameters.size), parameters: { low: 0.0, high: 6.0 } },\n  { name: \"uniform\", sampler: parameters => uniform(parameters.low, parameters.high, parameters.size), parameters: { low: 0.0, high: 1.0 } },\n  { name: \"normal\", sampler: parameters => normal(parameters.loc, parameters.scale, parameters.size), parameters: { loc: 0.0, scale: 1.0 } },\n  { name: \"cauchy\", sampler: parameters => cauchy(parameters.median, parameters.gamma, parameters.size), parameters: { median: 0.0, gamma: 1.0 } },\n  { name: \"exponential\", sampler: parameters => exponential(parameters.lambda, parameters.size), parameters: { lambda: 1.0 } },\n  { name: \"chisquare\", sampler: parameters => chisquare(parameters.k, parameters.size), parameters: { k: 6.0 } },\n]\n\nconst DEFAULT_DISTRIBUTION = 0\n\nfunction computeHistogram(muestra, numCajas) {\n  muestra.sort((a, b) => a - b);\n  const min = muestra[0];\n  const max = muestra[muestra.length - 1];\n  const rango = max - min;\n  const tamanoCaja = rango / numCajas;\n  const cajas = Array(numCajas).fill(0);\n\n  muestra.forEach(valor => {\n    const indiceCaja = Math.min(Math.floor((valor - min) / tamanoCaja), numCajas - 1);\n    cajas[indiceCaja]++;\n  });\n\n  // Generate labels\n  const labels = [];\n  for (let i = 0; i < numCajas; i++) {\n    const start = min + i * tamanoCaja;\n    const end = start + tamanoCaja;\n    labels.push(`${start.toFixed(1)}-${end.toFixed(1)}`);\n  }\n\n  return {\n    labels,\n    values: cajas,\n  };\n}\n\nfunction getSamplerForDistribution(distributionName) {\n  return DISTRIBUTIONS.find(distribution => distribution.name === distributionName).sampler\n}\n\nfunction copyToClipboard(id) {\n  const codeElement = document.querySelector(id);\n  const range = document.createRange();\n  range.selectNode(codeElement);\n  window.getSelection().removeAllRanges();\n  window.getSelection().addRange(range);\n  try {\n    document.execCommand('copy');\n  } catch (err) {\n    // pass\n  }\n  window.getSelection().removeAllRanges();\n}\n\nconst App = () => {\n  const [selectedDistribution, setSelectedDistribution] = useState(DISTRIBUTIONS[DEFAULT_DISTRIBUTION].name);\n  const [selectedParameters, setSelectedParameters] = useState(DISTRIBUTIONS[DEFAULT_DISTRIBUTION].parameters);\n  const [sample, setSample] = useState(() => {\n    return getSamplerForDistribution(selectedDistribution)({ ...selectedParameters, size: 1000 })\n  });\n\n  // Functions\n  function handleDistributionSelect(e) {\n    const distributionName = e.target.value\n    setSelectedDistribution(distributionName)\n    const newSelectedDistribution = DISTRIBUTIONS.find(distribution => distribution.name === distributionName)\n    setSelectedParameters(newSelectedDistribution.parameters)\n    resample(newSelectedDistribution.name, newSelectedDistribution.parameters)\n  }\n  function handleParamChange(name, value) {\n    const newParameters = { ...selectedParameters, [name]: Number(value) }\n    setSelectedParameters(newParameters);\n    resample(selectedDistribution, newParameters)\n  };\n  function resample(distributionName, parameters) {\n    const sampler = getSamplerForDistribution(distributionName)\n    try {\n      const newSample = sampler({ ...parameters, size: 1000 })\n      setSample(newSample)\n    }\n    catch (error) {\n      setSample(null)\n      console.log(\"Parámetro incorrecto.\")\n    }\n  }\n\n  const bins = 100;\n  let histogramContent = null\n  if (sample) {\n    const histogram = computeHistogram(sample, bins);\n    histogramContent = <Histogram data={histogram} />\n  }\n  else {\n    histogramContent = <p>Incorrect parameters</p>\n  }\n\n  return (\n    <>\n    <div className=\"App\">\n      <div className=\"main\">\n        \n        <h1><RandLibLogo size={32}/><a href=\"https://www.npmjs.com/package/randlibjs\" className=\"library-link\">Randlibjs</a></h1>\n        <h2>Powerful Lightweight Random Number Generators</h2>\n        <p>\n          Randlibjs is a powerful JavaScript library designed to provide a wide range of random number distributions efficiently. Whether you need uniform, normal, exponential, or other distributions, Ranlib.js makes it easy to generate pseudo-random samples.\n        </p>\n        <p>\n          The library supports various statistical distributions, giving you flexibility for simulations, games, data analysis, and more. While the showcase here focuses on random number generation and histogram visualization, Randlibjs also offers additional powerful methods such as seeding, shuffling, and permutation for even greater control over your random processes.\n        </p>\n        <p>\n          Explore the full potential of random number generation with Randlibjs today!\n        </p>\n        <h2>Installation</h2>\n        <p>\n        To get started with Randlibjs, you can install it via npm. Simply run the following command in your terminal:\n        </p>\n        <div className=\"code-box\">\n          <code id=\"npm-command\">npm install randlibjs</code>\n        </div>\n        <button className=\"copy-btn\" onClick={() => copyToClipboard('#npm-command')}>Copy</button>\n    \n        <h2>Usage</h2>\n        <p>\n        After installing the library, you can import it into your project and start generating random numbers. Here's an example of how to generate random numbers using a standard normal distribution:\n        </p>\n        <div className=\"code-box\">\n          <code id=\"example-code\">\n            import normal from 'randlibjs';<br/><br/>\n\n            // Generate a sample from a standard normal distribution<br/>\n            const sample = normal(low=0.0, high=1.0, size=10);<br/><br/>\n            // Output result sample<br/>\n            console.log(sample);\n          </code>\n        </div>\n        <button className=\"copy-btn\" onClick={() => copyToClipboard('#example-code')}>Copy</button>\n      <div>\n      <h2>Showcase</h2>\n      <p>\n        On this page, you can interactively generate random numbers and visualize the results with a dynamic histogram. Simply select the distribution you want, adjust its parameters to suit your requirements, and watch the sample data update in real time.\n      </p>\n      {histogramContent}\n      </div>\n      <DistributorSelector distributions={DISTRIBUTIONS}\n        selectedDistribution={selectedDistribution}\n        handleDistributionSelect={handleDistributionSelect}\n        parameters={selectedParameters}\n        handleParamChange={handleParamChange}\n        resample={() => resample(selectedDistribution, selectedParameters)} />\n    </div>\n    <div>\n      <p>\n      Visit official Randlibjs npm page in <a href=\"https://www.npmjs.com/package/randlibjs\" className=\"library-link\">this link</a>.\n      </p>\n    </div>\n    </div >\n\n    <footer className=\"footer\">\n        <div className=\"text-center\">\n            <small className=\"copyright\">Designed by <a href=\"https://pereradrian.github.io\" target=\"_blank\">Adri Mu</a></small>\n        </div>\n    </footer>\n    </>\n  );\n};\n\nexport default App;\n","import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport './index.css'\nimport App from './App.jsx'\n\ncreateRoot(document.getElementById('root')).render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n)\n"],"names":["l","n","p","q","r","t","u","v","w","x","y","z","A","a","B","C","D","E","b","e","F","G","H","I","J","K","L","M","d","c","k","h","g","f","m","N","O","escape","P","Q","R","S","T","U","V","W","react_production_min","reactModule","require$$0","reactJsxRuntime_production_min","jsxRuntimeModule","exports","schedulerModule","aa","ca","require$$1","da","ea","fa","ha","ia","ja","ka","la","ma","oa","pa","qa","ra","sa","ta","ua","va","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ka","La","Ma","Na","Oa","Pa","Qa","Ra","Sa","Ta","Ua","Va","Wa","Xa","Ya","Za","ab","bb","cb","db","eb","fb","gb","hb","ib","jb","kb","lb","mb","nb","ob","pb","qb","rb","sb","tb","ub","vb","wb","xb","yb","zb","Ab","Bb","Cb","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","Nb","Ob","Pb","Qb","Rb","Sb","Tb","Ub","Vb","Wb","Xb","Yb","Zb","$b","ac","bc","cc","dc","ec","fc","gc","hc","ic","jc","kc","lc","mc","oc","nc","pc","qc","rc","sc","tc","uc","vc","wc","xc","yc","zc","Ac","Bc","Cc","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Pc","Qc","Rc","Sc","Tc","Uc","Vc","Wc","Xc","Yc","Zc","$c","ad","bd","cd","dd","ed","fd","gd","hd","id","jd","kd","ld","md","nd","od","pd","qd","rd","sd","td","ud","vd","wd","xd","yd","Ad","zd","Bd","Cd","Dd","Ed","Fd","Gd","Hd","Id","Jd","Kd","Ld","Md","Nd","Od","Pd","Qd","Rd","Sd","Td","Ud","Vd","Wd","Xd","Yd","Zd","$d","ae","be","ce","de","ee","fe","ge","he","ie","je","ke","le","me","ne","oe","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","Ae","Be","Ce","De","Ee","Fe","Ge","He","Ie","Je","Ke","Le","Me","Ne","Oe","Pe","Qe","Re","Se","Te","Ue","Ve","We","Xe","Ye","Ze","$e","af","bf","cf","df","ef","ff","gf","hf","jf","kf","lf","mf","nf","of","pf","qf","rf","sf","tf","uf","vf","wf","na","xa","$a","ba","xf","yf","zf","Af","Bf","Cf","Df","Ef","Ff","Gf","Hf","Jf","If","Kf","Lf","Mf","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","Vf","Wf","Xf","Yf","Zf","$f","ag","bg","cg","dg","eg","fg","gg","hg","ig","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","zg","Ag","Bg","Cg","Dg","Eg","Fg","Gg","Hg","Ig","Jg","Kg","Lg","Mg","Ng","Og","Pg","Qg","Rg","Sg","Tg","Ug","Vg","Wg","Xg","Yg","Zg","$g","ah","bh","ch","dh","eh","fh","gh","hh","ih","jh","kh","lh","mh","nh","oh","ph","qh","rh","sh","th","uh","vh","wh","xh","yh","zh","Ah","Bh","Ch","Dh","Eh","Fh","Gh","Hh","Ih","Jh","Kh","Lh","Mh","Nh","Oh","Ph","Qh","Rh","Sh","Th","Uh","Vh","Wh","Xh","Yh","Zh","$h","ai","bi","ci","di","ei","fi","gi","hi","ii","ji","ki","li","mi","ni","oi","pi","qi","ri","si","ti","ui","vi","wi","xi","yi","zi","Ai","Bi","Ci","Di","Ei","Fi","Gi","Hi","Ii","Ji","Ki","Li","Mi","Ni","Oi","Pi","Qi","Ri","Si","Ti","Ui","Vi","Wi","Xi","Yi","Zi","$i","aj","bj","cj","dj","ej","fj","gj","hj","ij","jj","kj","lj","mj","nj","oj","pj","qj","rj","sj","tj","uj","vj","wj","xj","yj","zj","Aj","Bj","Cj","Dj","Ej","Fj","Gj","Hj","Ij","Jj","Kj","Lj","Mj","Nj","Oj","Pj","Qj","Rj","Sj","Tj","Uj","Vj","Wj","X","Xj","Yj","Zj","ak","bk","ck","dk","ek","fk","gk","hk","ik","jk","kk","lk","mk","nk","ok","Y","Z","pk","qk","rk","sk","tk","uk","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","Ek","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","Pk","Qk","Rk","Sk","Tk","Uk","Vk","Wk","Xk","Yk","Zk","$k","al","bl","cl","dl","el","fl","gl","hl","il","kl","ll","ml","nl","ol","pl","ql","rl","sl","tl","ul","vl","reactDom_production_min","checkDCE","err","reactDomModule","client","round","lim","p2b","n2b","b2n","n2p","map$1","hex","h1","h2","eq","isShort","hexParse","str","len","ret","alpha","hexString","HUE_RE","hsl2rgbn","s","hsv2rgbn","hwb2rgbn","rgb","i","hueValue","max","rgb2hsl","min","calln","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","p1","p2","rotate","deg","hslString","map","names$1","unpack","unpacked","keys","tkeys","j","names","nameParse","RGB_RE","rgbParse","rgbString","to","from","interpolate","rgb1","rgb2","modHSL","ratio","tmp","clone","proto","fromObject","input","functionParse","Color","type","obj","color","weight","c1","c2","w2","w1","val","noop","uid","isNullOrUndef","value","isArray","isObject","isNumberFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","callback","fn","args","thisArg","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","source","target","klen","isValidKey","key","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","keyResolvers","o","_splitKey","parts","part","_getKeyResolver","resolveObjectKey","_capitalize","defined","isFunction","setsEqual","item","_isClickEvent","PI","TAU","INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","niceNum","range","roundedRange","niceRange","fraction","_factorize","result","sqrt","isNumber","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","distanceBetweenPoints","pt1","pt2","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","index","lo","mid","_lookupByKey","last","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","method","base","res","object","unlistenArrayEvents","stub","listeners","_arrayUnique","items","set","requestAnimFrame","throttled","argsToUse","ticking","debounce","delay","timeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","atEdge","elasticIn","elasticOut","effects","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","name","applyLayoutsDefaults","intlCache","getNumberFormat","locale","cacheKey","formatter","formatNumber","num","formatters","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","remain","Ticks","applyScaleDefaults","_ctx","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","context","ctx","targetScope","targetName","scopeObject","targetScopeObject","privateName","local","appliers","apply","toFontString","font","_measureText","data","longest","string","textWidth","_alignPixel","chart","pixel","width","devicePixelRatio","halfWidth","clearCanvas","canvas","drawPoint","drawPointLegend","xOffset","yOffset","size","cornerRadius","xOffsetW","yOffsetW","style","rotation","radius","rad","_isPointInArea","point","area","margin","clipArea","unclipArea","setRenderOpts","opts","decorateText","line","metrics","top","bottom","yDecoration","drawBackdrop","oldColor","renderText","text","lines","stroke","addRoundedRectPath","rect","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","resolve","inputs","info","_addGrace","minmax","grace","beginAtZero","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","cache","_cached","_resolveWithPrefixes","getKeysFromAllScopes","storage","_attachContext","proxy","subProxy","descriptorDefaults","receiver","_resolveWithContext","_scriptable","_indexable","_allKeys","readKey","prefix","needsSubResolver","_proxy","_context","_subProxy","_resolveScriptable","_resolveArray","getValue","_stack","createSubResolver","isIndexable","arr","resolver","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_isDomSupported","_getParentNode","domNode","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","getCanvasPosition","touches","offsetX","offsetY","box","getRelativePosition","event","currentDevicePixelRatio","borderBox","paddings","borders","height","getContainerSize","maxWidth","maxHeight","container","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","supportsEventListenerOptions","passiveSupported","readUsedSize","getRightToLeftAdapter","rectX","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","restoreTextDirection","Animator","anims","date","callbacks","numSteps","remaining","draw","charts","acc","cur","animator","transparent","interpolators","factor","c0","Animation","cfg","currentValue","elapsed","duration","loop","promises","rej","resolved","Animations","config","animationOptions","animatedProps","option","newOptions","resolveTargetOptions","animations","awaitAll","running","animation","properties","anim","scaleClip","scale","allowedOverflow","defaultClip","xScale","yScale","toClip","getSortedDatasetIndices","filterVisible","metasets","applyStack","stack","dsIndex","singleMode","datasetIndex","otherValue","found","convertObjectDataToArray","meta","iScale","vScale","iAxisKey","vAxisKey","adata","isStacked","stacked","getStackKey","indexScale","valueScale","getUserBounds","minDefined","maxDefined","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","updateStacks","controller","parsed","iAxis","vAxis","itemStacks","visualValues","getFirstScaleId","axis","scales","createDatasetContext","createDataContext","clearStacks","isDirectUpdateMode","mode","cloneIfNotShared","cached","shared","createStack","canStack","DatasetController","dataset","chooseId","xid","yid","rid","indexAxis","iid","vid","scaleID","_data","resetNewElements","stackChanged","oldStacked","scopeKeys","count","_stacked","sorted","prev","isNotInOrderComparedToPrev","labels","singleScale","xAxisKey","yAxisKey","parsedValue","_parsed","otherScale","otherMin","otherMax","_skip","elements","active","drawActiveElementsOnTop","elementType","sharing","transition","sharedOptions","firstOpts","previouslySharedOptions","includeOptions","arg1","arg2","numMeta","numData","move","removed","newCount","__publicField","getAllScaleValues","visibleMetas","computeMinSampleSize","curr","updateMinAndPrev","computeFitCategoryTraits","ruler","stackCount","thickness","computeFlexCategoryTraits","pixels","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","borderProps","setBorderSkipped","edge","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","bars","reset","horizontal","vpixels","ipixels","dataIndex","currentParsed","iScaleValue","skipNull","barThickness","baseValue","minBarLength","floating","length","head","startPixel","endPixel","halfGrid","maxBarThickness","center","stackIndex","rects","abstract","DateAdapterBase","members","adapters","binarySearch","metaset","intersect","_sorted","lookupMethod","evaluateInteractionItems","position","handler","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","includeInvisible","getNearestRadialItems","evaluationFunc","startAngle","endAngle","getNearestCartesianItems","distanceMetric","minDistance","inRange","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","buildLayoutBoxes","centerHorizontal","centerVertical","getCombinedMax","maxPadding","chartArea","updateMaxPadding","boxPadding","updateDims","newWidth","newHeight","widthChanged","heightChanged","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","changed","same","other","setBoxDims","placeBoxes","userPadding","layoutItem","minPadding","padding","availableWidth","availableHeight","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","total","BasePlatform","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","isNullOrEmpty","initCanvas","renderHeight","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","nodeListContains","nodeList","createAttachObserver","observer","entries","trigger","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","resize","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","releaseObserver","createProxyAndListen","DomPlatform","initial","proxies","_detectPlatform","Element","final","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","majorIndices","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","spacing","calculateSpacing","avgMajorSpacing","skip","offset","tickLength","maxScale","maxChart","evenMajorSpacing","getEvenSpacing","factors","majorStart","majorEnd","diff","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","maxTicksLimit","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","garbageCollect","caches","gcLen","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","tick","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","raw","_userMin","_userMax","_suggestedMin","_suggestedMax","metas","sampleSize","samplingEnabled","reversePixels","numTicks","minRotation","maxRotation","labelRotation","tickWidth","maxLabelDiagonal","labelSizes","maxLabelWidth","maxLabelHeight","minSize","titleOpts","gridOpts","display","isHorizontal","titleHeight","widest","highest","tickPadding","angleRadians","cos","sin","labelHeight","labelWidth","isRotated","labelsBelowTicks","offsetLeft","offsetRight","paddingLeft","paddingRight","paddingTop","paddingBottom","widths","heights","widestLabelSize","highestLabelSize","jlen","label","tickFont","fontString","lineHeight","nestedLabel","valueAt","idx","decimal","optionTicks","rot","grid","border","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineWidth","lineColor","borderDash","borderDashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","mirror","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","halfCount","strokeColor","strokeWidth","tickTextAlign","backdrop","labelPadding","backgroundColor","drawLine","lastLineWidth","renderTextOptions","title","tz","gz","bz","axisID","fontSize","TypedRegistry","override","parentScope","isIChartComponent","registerDefaults","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","typedRegistry","arg","reg","itemReg","registry","component","camelMethod","PluginService","hook","filter","descriptor","plugin","all","plugins","allPlugins","createDescriptors","previousDescriptors","localIds","getOpts","pluginOpts","getIndexAxis","datasetDefaults","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","datasetType","mainScope","resetCache","_scopeCache","keyLists","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","isScriptable","scriptable","indexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onAnimationProgress","getCanvas","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart$1","_a","invalidatePlugins","userConfig","initialCanvas","existingChart","maintainAspectRatio","_aspectRatio","newSize","newRatio","scalesOptions","axisOptions","scaleOpts","updated","isRadial","scaleType","scaleClass","hasUpdated","datasets","newControllers","ControllerClass","datasetElementType","dataElementType","animsDisabled","_active","_lastEvent","existingEvents","newEvents","_hiddenIndices","changes","_dataChanges","datasetCount","makeSet","changeSet","noArea","layers","clip","useClip","visible","platform","_add","_remove","detached","attached","enabled","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","Chart","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","enableBorderRadius","maxR","enableBorder","boundingRects","bounds","skipX","skipY","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","borderColor","inner","outer","addRectPath","mouseX","mouseY","getBoxSize","labelOpts","boxHeight","boxWidth","itemsEqual","Legend","legendItems","labelFont","itemHeight","hitboxes","lineWidths","totalHeight","row","legendItem","_itemHeight","columnSizes","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","rtlHelper","hitbox","defaultColor","halfFontSize","cursor","drawLegendBox","drawOptions","centerX","centerY","yBoxTop","xBoxLeft","borderRadius","fillText","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","isListened","hoveredItem","previous","sameItem","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_args","legend","usePointStyle","pointStyle","useBorderRadius","borderWidth","Title","textSize","fontOpts","createTitle","plugin_title","titleBlock","positioners","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","bodyLineHeight","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","caretSize","caretPadding","topLeft","topRight","bottomLeft","bottomRight","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","labelCount","tooltipItem","invokeCallbackWithFallback","Tooltip","beforeTitle","afterTitle","bodyItems","scoped","beforeFooter","afterFooter","labelColors","labelPointStyles","labelTextColors","positionAndSize","backgroundPoint","tooltipPoint","caretPosition","ptX","ptY","x3","y3","pt","titleSpacing","labelColor","labelPointStyle","colorX","rtlColorX","yOffSet","colorY","outerX","innerX","bodySpacing","bodyAlign","displayColors","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","tooltipSize","animX","animY","opacity","hasTooltipContent","positionChanged","caretX","caretY","plugin_tooltip","addIfString","addedLabels","findOrAddLabel","_getLabelForValue","CategoryScale","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","setMin","setMax","minSign","maxSign","stepSize","numericGeneratorOptions","LinearScale","INTERVALS","UNITS","sorter","parse","adapter","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","major","ticksFromTimestamps","TimeScale","_applyBounds","timeOpts","minor","weekday","hasWeekday","format","formats","fmt","minorFormat","majorFormat","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","displayFormats","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","defaultDatasetIdKey","reforwardRef","ref","setOptions","nextOptions","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","cloneData","nextData","ChartComponent","redraw","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","destroyChart","useEffect","React","forwardRef","createTypedChart","registerables","Bar","ChartJS","Histogram","xmin","xmax","chartData","chartOptions","jsx","DistributionSelector","distributions","selectedDistribution","handleDistributionSelect","parameters","handleParamChange","resample","jsxs","distribution","randomGenerator","pcg64","seed","state","multiplier","seedValue","numericSeed","getRandomGenerator","seed_1","baseGenerator","generator","buildArray","dims","rest","baseGenerator_1","randint","low","high","randint_1","uniform","uniform_1","normalCdfData","indexLeft","indexRight","indexResult","indexMiddle","util","inverseNormalCDF","inverseNormalCdf","require$$2","normal","loc","normal_1","cauchy","median","gamma","cauchy_1","exponential","lambda","exponential_1","temp","shuffle","shuffle_1","permutation","_","permutation_1","_extends","DEFAULT_CONFIG","getSafeProperty","isSafeProperty","isSafeMethod","setSafeProperty","isPlainObject","hasOwnProperty","safeNativeProperties","safeNativeMethods","ObjectWrappingMap","mapIterator","it","isBigNumber","isBigInt","isComplex","isFraction","isUnit","isString","isMatrix","isCollection","isDenseMatrix","isSparseMatrix","isRange","isIndex","isBoolean","isResultSet","isHelp","isDate","isRegExp","isMap","isNull","isUndefined","isAccessorNode","isArrayNode","isAssignmentNode","isBlockNode","isConditionalNode","isConstantNode","isFunctionAssignmentNode","isFunctionNode","isIndexNode","isNode","isObjectNode","isOperatorNode","isParenthesisNode","isRangeNode","isRelationalNode","isSymbolNode","isChain","typeOf","mapObject","extend","deepStrictEqual","pickShallow","copy","MATRIX_OPTIONS","NUMBER_OPTIONS","notOk","undef","NOT_TYPED_FUNCTION","create","_types","anyType","typeMap","typeList","nConversions","typed","findType","typeName","message","otherName","addTypes","types","beforeSpec","beforeIndex","newTypes","affectedTypes","clear","clearConversions","findTypeNames","isTypedFunction","entity","findSignature","signature","exact","stringSignature","parseSignature","canonicalSignature","stringifyParams","match","nParams","remainingSignatures","want","filteredSignatures","possibility","have","getParamAtIndex","haveTypes","paramTypeSet","wtype","candidate","find","convert","conversions","separator","parseParam","param","restParam","typeDefs","hasAny","paramName","expandParam","typeNames","matchingConversions","availableConversions","newName","convertibleTypes","conversion","rawSignature","rawParams","parsedParam","hasRestParam","compileTest","test0","test1","tests","compileTests","varIndex","lastTest","testRestParam","getTypeSetAtIndex","isExactType","mergeExpectedParams","signatures","typeSet","paramSet","createError","expected","_name","matchingSignatures","nextMatchingDefs","test","actualTypes","lengths","maxLength","argTypes","getLowestTypeIndex","getLowestConversionIndex","compareParams","param1","param2","typeDiff","convDiff","compareSignatures","signature1","signature2","pars1","pars2","last1","last2","hasRest1","hasRest2","any1","conv1","par","any2","conv2","lengthCriterion","comparisons","thisComparison","t1","t2","knownTypes","newMatch","compileArgsPreprocessing","fnConvert","compiledConversions","compileArgConversion","fnPreprocess","slice","conversion0","conversion1","splitParams","_splitParams","paramsSoFar","resultingParams","exactTypes","flatMap","nextParam","conflicting","params1","params2","typeSet1","typeSet2","overlap","len1","len2","restParam1","restParam2","clearResolutions","functionList","isReferToSelf","referToSelf","isReferTo","makeReferTo","collectResolutions","references","signatureMap","resolvedReferences","reference","resolution","resolveReferences","self","resolvedFunctions","isResolved","leftUnresolved","nothingResolved","validateDeprecatedThis","signaturesMap","deprecatedThisRegex","createTypedFunction","rawSignaturesMap","parsedParams","originalFunctions","preliminarySignatures","pp","functionIndex","conversionParams","sp","spName","theTypedFn","internalSignatureMap","ok0","ok1","ok2","ok3","ok4","ok5","allOk","test00","test10","test20","test30","test40","test50","test01","test11","test21","test31","test41","test51","fn0","fn1","fn2","fn3","fn4","fn5","len0","len3","len4","len5","iStart","iEnd","fns","generic","arg0","_onMismatch","findInArray","referTo","objectOrFn","checkName","nameSoFar","getObjectName","mergeSignatures","dest","saveTyped","maybeName","named","allSignatures","theseSignatures","thisName","beforeObjectTest","before","_validateConversion","existing","existingConversion","argList","sigs","typedFunction","factory","dependencies","assertAndCreate","deps","stripOptionalNotation","assertDependencies","allDefined","dependency","isOptionalDependency","missingDependencies","isInteger","formatNumberToBase","wordSize","normalizeFormatOptions","toFixed","toExponential","toEngineering","toPrecision","digits","_toNumberOrThrow","splitNumber","exponent","dot","coefficients","zeros","split","roundDigits","newExp","missingZeros","expDiff","decimalIdx","decimals","decimalVal","splitValue","lowerExp","_toNumberOrDefault","upperExp","nearlyEqual","relTol","absTol","onError","_createTyped2","createTyped","_ref","BigNumber","Complex","DenseMatrix","Fraction","throwNoBignumber","throwNoComplex","throwNoFraction","throwNoMatrix","matrix","usualError","sig","EXP_LIMIT","MAX_DIGITS","NUMERALS","LN10","DEFAULTS","inexact","quadrant","external","decimalError","invalidArgument","precisionLimitExceeded","cryptoUnavailable","tag","mathfloor","mathpow","isBinary","isHex","isOctal","isDecimal","BASE","LOG_BASE","MAX_SAFE_INTEGER","LN10_PRECISION","PI_PRECISION","finalise","Ctor","xdL","ydL","xs","ys","pr","rm","cosine","toLessThanHalfPi","rep","t3","t3plusx","digitsToString","divide","one","tinyPow","taylorSeries","cosh2_x","d8","sinh2_x","d5","d16","d20","halfPi","getPi","wpr","xsd","px","isBase10","denominator","inf","guard","naturalLogarithm","getLn10","checkRoundingDigits","xLTy","getBase10Exponent","naturalExponential","carry","getPrecision","sine","rL","toStringBinary","dp","checkInt32","finiteToString","maxD","d0","d1","d2","n0","n1","yn","intPow","ws","indexOfLastWord","getZeroString","repeating","convertBase","baseIn","baseOut","arrL","strL","cos2x","multiplyInteger","compare","aL","bL","subtract","logBase","more","prod","prodL","rem","remL","rem0","xL","yd0","yL","yz","isTruncated","roundUp","xdi","out","isExp","nonFiniteToString","zs","truncate","isOdd","maxOrMin","ltgt","pow","sum","numerator","parseDecimal","parseOther","divisor","isFloat","Decimal","sin2_x","isHyperbolic","isNeg","abs","acos","acosh","asin","asinh","atan","atanh","atan2","cbrt","ceil","clamp","useDefaults","ps","cosh","isDecimalInstance","div","exp","floor","hypot","ln","log","log2","mod","mul","random","sinh","sub","tan","tanh","trunc","createBigNumberClass","on","json","cosm1","xx","parser_exit","logHypot","_b","tokens","plus","minus","tInfin","zInfin","tIsZero","zIsZero","loh","im","er","noIM","oneMinus","onePlus","places","createComplexClass","strRe","strIm","phi","C_ZERO","C_ONE","C_TWO","C_FIVE","C_TEN","MAX_CYCLE_LEN","assign","InvalidParameter","newFraction","DivisionByZero","gcd","factorize","NonIntegerParameter","ndx","modpow","cycleLen","cycleStart","rem1","rem2","allPrimes","baseFactors","T1","numberFactors","T2","prime","retN","retD","baseExponent","numberExponent","curN","curD","gcdValue","dec","cycLen","cycOff","showMixed","whole","eps","ieps","thisABS","cont","createFractionClass","createMatrixClass","Matrix","datatype","replacement","skipZeros","formatBigNumberToBase","BigNumberCtor","big2","valueWithoutExp","valueStr","_format","formatBigNumber","looksLikeFraction","formatArray","stringify","escaped","controlCharacters","DimensionError","actual","relation","IndexError","arraySize","_validate","dim","dimNext","child","validate","isScalar","validateIndex","_defaultValue","_resize","elem","oldLen","newLen","minLen","reshape","sizes","flatArray","flatten","currentLength","processSizesWildcard","newLength","product","_reshape","processedSizes","WILDCARD","wildCardIndex","isMoreThanOneWildcard","hasWildcard","canReplaceWildcard","tmpArray","tmpArray2","sizeIndex","unsqueeze","_unsqueeze","flat","getArrayDataType","_isArray","itemType","concatRecursive","concatDim","concat","arrays","broadcastSizes","_len","_key","dimensions","sizeMax","_i","checkBroadcastingRules","toSize","broadcastTo","Asize","broadcastedSize","paddedSize","stretch","arrayToStretch","sizeToStretch","dimToStretch","get","optimizeCallback","firstIndex","firstValue","hasSingleSignature","numberOfArguments","_findNumberOfArguments","fastCallback","_tryFunctionWithArgs","_len2","_key2","testArgs","func","mappingFnName","callbackName","_createCallbackError","_err$data","argsDesc","_typeOf","createDenseMatrixClass","preprocess","_get","_set","indexI","_fit","_getSubmatrix","submatrix","iSize","sSize","_setSubmatrix","subIndex","sizeArray","_i2","_j","_recurse","_this","_loop","kSuper","kSub","rows","columns","_value","ms","deepMap","createIsInteger","isIntegerNumber","n2","addNumber","multiplyNumber","complexEquals","createCompareUnits","createEqualScalar","compareUnits","bigNearlyEqual","_ref2","createSparseMatrixClass","equalScalar","SparseMatrix","_createFromMatrix","_createFromArray","zero","_getsubset","_setsubset","mvalues","mindex","mptr","pv","ptr","firstDimensionRange","secondDimensionRange","firstDataIndex","firstSubIndex","secondDataIndex","secondSubIndex","_getValueIndex","_insert","ins","k0","k1","colIndex","rowIndex","r1","_i3","invoke","_map","minRow","maxRow","minColumn","maxColumn","_values","_k","_i4","_i5","_k2","_i6","_i7","_toArray","density","kx","ky","vx","vy","createMatrix","_create","createAddScalar","createMatAlgo11xS0s","inverse","avalues","aindex","aptr","asize","adt","dt","cvalues","cindex","cptr","createMatAlgo14xDs","cdata","_iterate","level","av","bv","cv","createMatAlgo13xDD","bdata","bsize","bdt","csize","broadcast","_broadcastTo","createMatrixAlgorithmSuite","matAlgo13xDD","matAlgo14xDs","elop","SD","matrixSignatures","scalar","Ds","sS","createMatAlgo01xDSid","denseMatrix","sparseMatrix","bvalues","bindex","bptr","mark","createMatAlgo04xSidSid","createMatAlgo10xSids","createMultiplyScalar","createMultiply","addScalar","multiplyScalar","matAlgo11xS0s","_validateMatrixDimensions","size1","size2","_multiplyVectorVector","_multiplyVectorMatrix","_multiplyVectorDenseMatrix","alength","bcolumns","_multiplyMatrixVector","_multiplyDenseMatrixVector","_multiplySparseMatrixVector","_multiplyMatrixMatrix","_multiplyDenseMatrixDenseMatrix","_multiplyDenseMatrixSparseMatrix","_multiplySparseMatrixDenseMatrix","_multiplySparseMatrixSparseMatrix","arows","acolumns","kb0","kb1","cij","brows","vbi","ka0","ka1","vbij","p0","selfMM","xsize","ysize","createConj","createConcat","prevDim","asMatrix","matrices","_concat","noMatrix","createSize","createAdd","matAlgo01xDSid","matAlgo04xSidSid","matAlgo10xSids","matrixAlgorithmSuite","createDot","conj","_denseDot","_sparseDot","_validateDim","xSize","_size","ySize","xLen","yLen","aIsColumn","bIsColumn","_c","_c2","_c3","xindex","xvalues","yindex","yvalues","multiply","choleskyDecomposition","multivariateNormal","means","covariance","cholesky","samples","standardNormal","transformed","module","chisquare","chisquare_1","require$$3","require$$4","require$$5","require$$6","require$$7","require$$8","require$$9","randlibjs","RandLibLogo","numberOfLayers","centers","layer","centerAngle","centerRadius","circleRadius","baseRectangle","DISTRIBUTIONS","DEFAULT_DISTRIBUTION","computeHistogram","muestra","numCajas","tamanoCaja","cajas","valor","indiceCaja","getSamplerForDistribution","distributionName","copyToClipboard","codeElement","App","setSelectedDistribution","useState","selectedParameters","setSelectedParameters","setSample","newSelectedDistribution","newParameters","sampler","newSample","bins","histogramContent","histogram","Fragment","DistributorSelector","createRoot","StrictMode"],"mappings":"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jB,KAAM,CAAE,mBAAAF,GAAuB99D,KACzBg+D,EAAiBz9D,GAA2B,EA2BlD,SAAS+9D,EAAQC,EAAKC,EAAO,KAAMjmC,EAAO,KAAM,CAK5C,GAJIimC,IAAS,OACTA,EAAOD,EACPA,EAAM,GAENA,GAAOC,EACP,MAAM,IAAI,MAAM,4BAA4B,EAEhD,OAAOR,EAAc,IAAM,KAAK,MAAMF,EAAoB,EAAA,GAAMU,EAAOD,GAAOA,CAAG,EAAGhmC,CAAI,CAC3F,CAED,OAAAkmC,GAAiBH,kDCvCjB,KAAM,CAAE,mBAAAR,GAAuB99D,KACzBg+D,EAAiBz9D,GAA2B,EA2BlD,SAASm+D,EAAQH,EAAM,EAAKC,EAAO,EAAKjmC,EAAO,KAAM,CACjD,GAAIgmC,GAAOC,EACP,MAAM,IAAI,MAAM,4BAA4B,EAEhD,OAAOR,EAAc,IAAMF,IAAsB,GAAIU,EAAOD,GAAOA,EAAKhmC,CAAI,CAC/E,CAED,OAAAomC,GAAiBD,8CCmgnBjBE,GAAiB,CAAE,EAtinBV,CACR,oBACA,oBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,oBACA,oBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,oBACA,qBACA,sBACA,sBACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,oBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,sBACA,qBACA,oBACA,qBACA,qBACA,sBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,sBACA,sBACA,qBACA,qBACA,sBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,qBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,oBACA,sBACA,qBACA,qBACA,sBACA,qBACA,kBACA,sBACA,qBACA,qBACA,qBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,qBACA,sBACA,qBACA,sBACA,qBACA,qBACA,qBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,qBACA,qBACA,sBACA,sBACA,sBACA,oBACA,sBACA,qBACA,qBACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,qBACA,qBACA,sBACA,sBACA,qBACA,sBACA,qBACA,sBACA,qBACA,qBACA,qBACA,qBACA,sBACA,qBACA,sBACA,qBACA,qBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,sBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,sBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,qBACA,oBACA,oBACA,qBACA,sBACA,qBACA,qBACA,qBACA,sBACA,sBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,oBACA,sBACA,sBACA,sBACA,qBACA,qBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,sBACA,oBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,oBACA,sBACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,oBACA,qBACA,sBACA,sBACA,qBACA,sBACA,qBACA,qBACA,qBACA,qBACA,sBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,qBACA,qBACA,sBACA,sBACA,qBACA,qBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,qBACA,qBACA,qBACA,sBACA,qBACA,sBACA,qBACA,qBACA,sBACA,qBACA,sBACA,qBACA,sBACA,qBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,qBACA,sBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,oBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,qBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,oBACA,qBACA,sBACA,qBACA,sBACA,qBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,qBACA,sBACA,sBACA,sBACA,oBACA,sBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,qBACA,sBACA,qBACA,sBACA,sBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,qBACA,sBACA,qBACA,qBACA,oBACA,oBACA,oBACA,qBACA,qBACA,oBACA,qBACA,qBACA,sBACA,sBACA,qBACA,qBACA,qBACA,oBACA,sBACA,qBACA,qBACA,sBACA,qBACA,qBACA,qBACA,sBACA,oBACA,qBACA,qBACA,qBACA,qBACA,sBACA,qBACA,qBACA,sBACA,qBACA,qBACA,qBACA,qBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,oBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,oBACA,qBACA,qBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,qBACA,sBACA,qBACA,qBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,mBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,qBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,qBACA,sBACA,qBACA,sBACA,sBACA,sBACA,mBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,qBACA,eACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,oBACA,qBACA,sBACA,qBACA,qBACA,sBACA,sBACA,qBACA,qBACA,sBACA,sBACA,qBACA,qBACA,sBACA,qBACA,qBACA,qBACA,oBACA,sBACA,sBACA,qBACA,oBACA,sBACA,qBACA,sBACA,qBACA,oBACA,qBACA,sBACA,qBACA,qBACA,sBACA,sBACA,qBACA,qBACA,sBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,qBACA,qBACA,qBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,qBACA,qBACA,qBACA,sBACA,qBACA,sBACA,qBACA,qBACA,qBACA,qBACA,sBACA,qBACA,sBACA,qBACA,qBACA,sBACA,oBACA,sBACA,qBACA,qBACA,sBACA,qBACA,oBACA,qBACA,oBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,qBACA,sBACA,sBACA,sBACA,oBACA,qBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,qBACA,sBACA,sBACA,sBACA,oBACA,qBACA,sBACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,oBACA,qBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,qBACA,sBACA,qBACA,sBACA,oBACA,qBACA,sBACA,sBACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,sBACA,sBACA,qBACA,qBACA,sBACA,oBACA,sBACA,mBACA,qBACA,sBACA,sBACA,qBACA,qBACA,mBACA,sBACA,qBACA,qBACA,sBACA,qBACA,sBACA,sBACA,sBACA,qBACA,qBACA,sBACA,qBACA,qBACA,mBACA,qBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,sBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,oBACA,oBACA,qBACA,oBACA,qBACA,oBACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,qBACA,qBACA,sBACA,qBACA,qBACA,qBACA,sBACA,qBACA,qBACA,sBACA,sBACA,qBACA,sBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,qBACA,sBACA,sBACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,oBACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,qBACA,qBACA,qBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,oBACA,qBACA,qBACA,mBACA,sBACA,qBACA,qBACA,qBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,qBACA,qBACA,oBACA,qBACA,oBACA,sBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,oBACA,sBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,oBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,qBACA,sBACA,sBACA,sBACA,qBACA,qBACA,sBACA,qBACA,sBACA,sBACA,qBACA,qBACA,sBACA,qBACA,sBACA,sBACA,sBACA,oBACA,qBACA,sBACA,oBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,qBACA,qBACA,qBACA,sBACA,qBACA,qBACA,qBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,qBACA,sBACA,oBACA,sBACA,qBACA,sBACA,qBACA,sBACA,sBACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,qBACA,sBACA,qBACA,sBACA,qBACA,sBACA,sBACA,sBACA,qBACA,oBACA,qBACA,qBACA,sBACA,sBACA,sBACA,qBACA,qBACA,oBACA,qBACA,qBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,qBACA,qBACA,sBACA,oBACA,qBACA,sBACA,qBACA,sBACA,qBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,sBACA,sBACA,qBACA,qBACA,sBACA,qBACA,sBACA,qBACA,oBACA,sBACA,sBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,mBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,oBACA,qBACA,qBACA,oBACA,oBACA,mBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,oBACA,sBACA,sBACA,qBACA,sBACA,sBACA,oBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,qBACA,sBACA,qBACA,sBACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,oBACA,sBACA,qBACA,sBACA,qBACA,qBACA,qBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,oBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,qBACA,qBACA,qBACA,qBACA,sBACA,sBACA,sBACA,qBACA,qBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,oBACA,qBACA,sBACA,qBACA,qBACA,qBACA,sBACA,sBACA,sBACA,qBACA,qBACA,oBACA,qBACA,sBACA,sBACA,qBACA,oBACA,sBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,qBACA,qBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,qBACA,sBACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,oBACA,sBACA,qBACA,qBACA,qBACA,qBACA,sBACA,sBACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,qBACA,qBACA,oBACA,qBACA,sBACA,sBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,oBACA,qBACA,qBACA,oBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,oBACA,mBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,oBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,oBACA,oBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,qBACA,sBACA,sBACA,qBACA,sBACA,sBACA,oBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,sBACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,oBACA,sBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,qBACA,sBACA,qBACA,qBACA,sBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,sBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,sBACA,qBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,qBACA,sBACA,sBACA,qBACA,qBACA,sBACA,qBACA,oBACA,sBACA,qBACA,sBACA,qBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,qBACA,qBACA,qBACA,sBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,qBACA,qBACA,qBACA,qBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,qBACA,sBACA,sBACA,oBACA,sBACA,qBACA,sBACA,sBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,qBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,sBACA,qBACA,qBACA,qBACA,oBACA,sBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,sBACA,qBACA,sBACA,qBACA,mBACA,sBACA,oBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,qBACA,sBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,sBACA,qBACA,qBACA,oBACA,qBACA,sBACA,oBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,oBACA,qBACA,qBACA,oBACA,qBACA,oBACA,qBACA,oBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,qBACA,sBACA,qBACA,qBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,oBACA,qBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,sBACA,qBACA,qBACA,qBACA,qBACA,sBACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,qBACA,qBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,qBACA,sBACA,sBACA,sBACA,qBACA,qBACA,sBACA,sBACA,qBACA,oBACA,sBACA,sBACA,qBACA,qBACA,sBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,qBACA,qBACA,sBACA,oBACA,sBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,qBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,sBACA,qBACA,qBACA,oBACA,qBACA,sBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,qBACA,qBACA,qBACA,sBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,oBACA,oBACA,sBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,oBACA,qBACA,sBACA,qBACA,qBACA,sBACA,qBACA,sBACA,sBACA,qBACA,qBACA,qBACA,sBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,oBACA,sBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,qBACA,sBACA,qBACA,qBACA,qBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,sBACA,qBACA,qBACA,oBACA,sBACA,qBACA,qBACA,qBACA,oBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,oBACA,oBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,oBACA,qBACA,oBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,oBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,qBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,oBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,oBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,qBACA,sBACA,sBACA,sBACA,oBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,mBACA,qBACA,qBACA,sBACA,qBACA,sBACA,qBACA,sBACA,sBACA,sBACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,qBACA,qBACA,sBACA,sBACA,sBACA,qBACA,qBACA,qBACA,qBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,qBACA,qBACA,sBACA,qBACA,sBACA,sBACA,qBACA,sBACA,sBACA,qBACA,qBACA,qBACA,sBACA,qBACA,qBACA,qBACA,sBACA,qBACA,sBACA,sBACA,qBACA,qBACA,qBACA,qBACA,sBACA,sBACA,qBACA,qBACA,sBACA,qBACA,sBACA,oBACA,sBACA,qBACA,qBACA,sBACA,sBACA,sBACA,oBACA,sBACA,qBACA,qBACA,qBACA,sBACA,sBACA,qBACA,qBACA,sBACA,qBACA,qBACA,sBACA,qBACA,sBACA,qBACA,qBACA,sBACA,sBACA,sBACA,qBACA,qBACA,sBACA,qBACA,qBACA,qBACA,qBACA,sBACA,sBACA,mBACA,qBACA,sBACA,qBACA,sBACA,sBACA,qBACA,qBACA,qBACA,sBACA,sBACA,qBACA,sBACA,qBACA,sBACA,sBACA,qBACA,qBACA,sBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,mBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,oBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,mBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,oBACA,oBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,mBACA,qBACA,qBACA,oBACA,qBACA,oBACA,qBACA,qBACA,qBACA,oBACA,qBACA,oBACA,qBACA,qBACA,oBACA,oBACA,qBACA,oBACA,oBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,mBACA,oBACA,oBACA,qBACA,qBACA,qBACA,qBACA,oBACA,oBACA,qBACA,oBACA,oBACA,oBACA,qBACA,oBACA,oBACA,oBACA,mBACA,qBACA,qBACA,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,mBACA,qBACA,oBACA,oBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,oBACA,oBACA,oBACA,qBACA,qBACA,oBACA,qBACA,oBACA,oBACA,oBACA,qBACA,oBACA,qBACA,oBACA,qBACA,qBACA,oBACA,qBACA,oBACA,qBACA,oBACA,qBACA,qBACA,oBACA,oBACA,qBACA,qBACA,oBACA,oBACA,oBACA,qBACA,qBACA,oBACA,mBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,mBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,oBACA,oBACA,qBACA,qBACA,oBACA,oBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,mBACA,qBACA,oBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,oBACA,qBACA,mBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,oBACA,mBACA,qBACA,qBACA,oBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,oBACA,qBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,qBACA,oBACA,oBACA,mBACA,oBACA,oBACA,oBACA,qBACA,kBACA,oBACA,oBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,oBACA,qBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,oBACA,oBACA,oBACA,mBACA,oBACA,mBACA,oBACA,oBACA,oBACA,oBACA,qBACA,qBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,oBACA,oBACA,oBACA,oBACA,kBACA,oBACA,oBACA,qBACA,oBACA,oBACA,oBACA,oBACA,mBACA,oBACA,qBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,oBACA,oBACA,oBACA,qBACA,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,oBACA,oBACA,mBACA,mBACA,oBACA,mBACA,qBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,qBACA,qBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,qBACA,qBACA,oBACA,oBACA,mBACA,oBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,oBACA,mBACA,oBACA,oBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,oBACA,mBACA,oBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,oBACA,oBACA,mBACA,oBACA,oBACA,oBACA,oBACA,mBACA,kBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,oBACA,mBACA,oBACA,oBACA,oBACA,oBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,mBACA,mBACA,oBACA,oBACA,mBACA,oBACA,oBACA,mBACA,oBACA,mBACA,oBACA,oBACA,mBACA,oBACA,kBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,oBACA,oBACA,oBACA,oBACA,mBACA,oBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,mBACA,oBACA,oBACA,mBACA,oBACA,oBACA,oBACA,mBACA,oBACA,oBACA,oBACA,oBACA,kBACA,oBACA,mBACA,oBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,oBACA,oBACA,oBACA,mBACA,oBACA,mBACA,oBACA,oBACA,oBACA,mBACA,oBACA,oBACA,oBACA,oBACA,mBACA,oBACA,oBACA,oBACA,kBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,oBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,oBACA,mBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,oBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,mBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,mBACA,oBACA,mBACA,mBACA,oBACA,mBACA,oBACA,oBACA,mBACA,oBACA,oBACA,mBACA,oBACA,oBACA,oBACA,mBACA,oBACA,mBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,oBACA,oBACA,oBACA,oBACA,mBACA,oBACA,oBACA,mBACA,mBACA,iBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,mBACA,oBACA,mBACA,oBACA,oBACA,mBACA,oBACA,mBACA,oBACA,mBACA,oBACA,mBACA,oBACA,oBACA,mBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,mBACA,oBACA,mBACA,mBACA,oBACA,oBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,oBACA,oBACA,kBACA,oBACA,mBACA,oBACA,mBACA,oBACA,oBACA,oBACA,oBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,oBACA,mBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,oBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,oBACA,mBACA,oBACA,oBACA,iBACA,oBACA,oBACA,mBACA,mBACA,oBACA,mBACA,oBACA,kBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,mBACA,oBACA,mBACA,oBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,mBACA,oBACA,mBACA,oBACA,mBACA,mBACA,mBACA,oBACA,kBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,kBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,oBACA,oBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,iBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,iBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,iBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,iBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,iBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,iBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,iBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,iBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,iBACA,iBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,mBACA,iBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,iBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,iBACA,iBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,gBACA,mBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,gBACA,gBACA,iBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,iBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,gBACA,kBACA,kBACA,kBACA,gBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,gBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,iBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,eACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,gBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,eACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,eACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,eACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,eACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,eACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,kBACA,iBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,EAqxTqB,EAnxTb,CACR,GACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,oBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,oBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,oBACA,oBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,oBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,oBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,oBACA,oBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,oBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,oBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,oBACA,oBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,oBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,oBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,oBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,oBACA,oBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,oBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,oBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,oBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,oBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,oBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,oBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,oBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,oBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,oBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,oBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,oBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,oBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,oBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,oBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,oBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,oBACA,oBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,oBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,oBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,oBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,gBACA,mBACA,oBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,oBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,oBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,oBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,kBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,iBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,kBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,kBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,kBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,kBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,kBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,iBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,kBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,kBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,kBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,kBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,kBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,kBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,kBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,iBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,kBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,kBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,kBACA,mBACA,oBACA,oBACA,oBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,kBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,oBACA,oBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,kBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,kBACA,oBACA,oBACA,oBACA,oBACA,oBACA,iBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,kBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,kBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,kBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,kBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,kBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,kBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,kBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,kBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,oBACA,oBACA,mBACA,oBACA,mBACA,oBACA,mBACA,oBACA,mBACA,kBACA,oBACA,mBACA,oBACA,mBACA,oBACA,mBACA,mBACA,oBACA,kBACA,oBACA,mBACA,oBACA,mBACA,oBACA,oBACA,mBACA,oBACA,mBACA,oBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,oBACA,mBACA,oBACA,mBACA,mBACA,oBACA,mBACA,oBACA,mBACA,oBACA,kBACA,mBACA,mBACA,mBACA,oBACA,mBACA,oBACA,mBACA,oBACA,kBACA,mBACA,oBACA,mBACA,oBACA,mBACA,oBACA,mBACA,oBACA,mBACA,mBACA,oBACA,mBACA,oBACA,mBACA,oBACA,mBACA,oBACA,oBACA,kBACA,oBACA,mBACA,oBACA,mBACA,oBACA,mBACA,mBACA,oBACA,kBACA,oBACA,mBACA,oBACA,mBACA,mBACA,oBACA,mBACA,oBACA,kBACA,oBACA,mBACA,oBACA,mBACA,mBACA,oBACA,mBACA,oBACA,mBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,oBACA,mBACA,oBACA,mBACA,mBACA,oBACA,mBACA,oBACA,mBACA,oBACA,mBACA,gBACA,kBACA,mBACA,oBACA,mBACA,oBACA,mBACA,oBACA,mBACA,oBACA,oBACA,mBACA,oBACA,mBACA,oBACA,mBACA,oBACA,mBACA,mBACA,oBACA,mBACA,oBACA,mBACA,oBACA,mBACA,oBACA,oBACA,mBACA,oBACA,kBACA,oBACA,mBACA,oBACA,oBACA,oBACA,oBACA,mBACA,oBACA,kBACA,oBACA,oBACA,oBACA,oBACA,mBACA,oBACA,mBACA,oBACA,kBACA,oBACA,oBACA,oBACA,oBACA,mBACA,oBACA,mBACA,oBACA,mBACA,oBACA,oBACA,mBACA,oBACA,mBACA,oBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,oBACA,mBACA,oBACA,oBACA,oBACA,oBACA,mBACA,oBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,oBACA,mBACA,oBACA,oBACA,oBACA,oBACA,mBACA,oBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,oBACA,kBACA,oBACA,oBACA,oBACA,oBACA,mBACA,oBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,qBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,qBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,qBACA,oBACA,oBACA,oBACA,qBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,iBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,iBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,iBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,iBACA,eACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,iBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,iBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,iBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,iBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,iBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,gBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,gBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,gBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,gBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,gBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,eACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,gBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,gBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,eACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,eACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,gBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,gBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,gBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,gBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,iBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,eACA,CACA,CAEwB,mDC7hnBzB,SAASpvB,EAAa1f,EAAOzE,EAAO,CAChC,IAAIwzC,EAAY,EACZC,EAAahvC,EAAM,OAAS,EAC5BivC,EAAc,GAElB,KAAOF,GAAaC,GAAY,CAC5B,MAAME,EAAc,KAAK,OAAOH,EAAYC,GAAc,CAAC,EAEvDhvC,EAAMkvC,CAAW,EAAI3zC,GACrB0zC,EAAcC,EACdH,EAAYG,EAAc,GAE1BF,EAAaE,EAAc,CAElC,CAED,OAAOD,CACV,CAGa,OAAAE,GAAG,CAAE,aAAAzvB,CAAc,kDC7BjC,KAAM,CAAE,EAAAtuB,EAAG,EAAAmB,CAAG,EAAGriB,KACX,CAAE,aAAAwvC,GAAiBjvC,KAOzB,SAAS2+D,EAAiB7zC,EAAO,CAC7B,GAAIA,GAASnK,EAAE,CAAC,EACZ,OAAOmB,EAAE,CAAC,EAET,GAAInB,EAAEA,EAAE,OAAS,CAAC,GAAKmK,EACxB,OAAOhJ,EAAEA,EAAE,OAAS,CAAC,EAEpB,CACD,MAAMw8C,EAAYrvB,EAAatuB,EAAGmK,CAAK,EACvC,GAAIwzC,GAAa39C,EAAE,OAAS,EACxB,OAAO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,CAC1rgB,EAAK,CACD,KAAM,SACN,KAAM45C,EACV,EAAK,CACD,KAAM,QACN,KAAM+B,EACV,EAAK,CACD,KAAM,QACN,KAAMh4C,EACV,EAAK,CACD,KAAM,SACN,KAAMk2C,EACV,EAAK,CACD,KAAM,cACN,KAAME,EACV,EAAK,CACD,KAAM,eACN,KAAMC,EACV,EAAK,CACD,KAAM,QACN,KAAMC,EACV,EAAK,CACD,KAAM,QACN,KAAMC,EACV,EAAK,CACD,KAAM,UACN,KAAMC,EACV,EAAK,CACD,KAAM,YACN,KAAMC,EACV,EAAK,CACD,KAAM,OACN,KAAMC,EACV,EAAK,CACD,KAAM,WACN,KAAM7zC,EACV,EAAK,CACD,KAAM,OACN,KAAM8zC,EACV,EAAK,CACD,KAAM,SACN,KAAMC,EACV,EAAK,CACD,KAAM,OACN,KAAME,EACV,EAAK,CACD,KAAM,YACN,KAAMC,EACV,EAAK,CACD,KAAM,eACN,KAAMC,EACV,EAAK,CACD,KAAM,YACN,KAAMC,EACV,EAAK,CACD,KAAM,iBACN,KAAMC,EACV,EAAK,CACD,KAAM,YACN,KAAMC,EACV,EAAK,CACD,KAAM,kBACN,KAAMC,EACV,EAAK,CACD,KAAM,eACN,KAAMC,EACV,EAAK,CACD,KAAM,eACN,KAAME,EACV,EAAK,CACD,KAAM,yBACN,KAAMD,EACV,EAAK,CACD,KAAM,YACN,KAAME,EACV,EAAK,CACD,KAAM,OACN,KAAMC,EACV,EAAK,CACD,KAAM,aACN,KAAMC,EACV,EAAK,CACD,KAAM,eACN,KAAMC,EACV,EAAK,CACD,KAAM,kBACN,KAAMC,EACV,EAAK,CACD,KAAM,YACN,KAAMC,EACV,EAAK,CACD,KAAM,iBACN,KAAMC,EACV,EAAK,CACD,KAAM,aACN,KAAMC,EACV,EAAK,CACD,KAAM,MACN,KAAMlB,EACV,EAAK,CACD,KAAM,SACN,KAAM52C,EACP,CACH,CAAG,EACDi5C,EAAM,eAAe,CAAC,CACpB,KAAM,SACN,GAAI,YACJ,QAAS,SAAiB/mE,EAAG,CAM3B,GALK03E,GACHI,GAAiB93E,CAAC,EAIhBg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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82]}